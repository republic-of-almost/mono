!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	QUESTION_MARK		: 63,	\/\/ needs localization$/;"	p	class:namespace.Codes
A	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   float *A[2],*B[2],*C[2];$/;"	m	struct:stb_vorbis	file:
A	thirdparty/stb/include/stb/stb_vorbis.c	/^   float *A[2],*B[2],*C[2];$/;"	m	struct:stb_vorbis	file:
AABB_INCLUDED_0C5E26F6_BFB1_422A_948B_0E4861927EEE	lib/math/include/math/geometry/aabb.hpp	2;"	d
AC	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned char  AC;$/;"	m	class:CPU
ACTOR_INCLUDED_2F369057_567B_46D2_8C7F_3D3EC28523A9	app/perils/src/game/actor_kinematic.hpp	2;"	d
ADC	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^inline void CPU::ADC(const unsigned char value)$/;"	f	class:CPU
ADDEND	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	5021;"	d	file:
ADDEND	thirdparty/stb/include/stb/stb_vorbis.c	5027;"	d	file:
ALIGMENT_INCLUDED_8FD72235_331D_4FF9_98E0_031C879705D2	lib/lib/include/lib/alignment.hpp	9;"	d
ALIGN16	lib/math/include/math/detail/detail.hpp	28;"	d
ALIGN16	lib/math/include/math/detail/detail.hpp	30;"	d
ALIGN_16	lib/lib/include/lib/alignment.hpp	38;"	d
ALIGN_16	lib/lib/include/lib/alignment.hpp	40;"	d
ALIGN_INLINE	lib/lib/include/lib/alignment.hpp	22;"	d
ALIGN_INLINE	lib/lib/include/lib/alignment.hpp	24;"	d
ALL	lib/roa/include/roa/ray.hpp	/^  ALL,$/;"	m	class:ROA::Ray_search
ALLOC_INCLUDED_F3EA888C_487C_4B80_859E_2052B6A0004B	lib/lib/include/lib/alloc.hpp	9;"	d
ALLOW	thirdparty/soloud/src/tools/codegen/main.cpp	202;"	d	file:
ALL_PARALLEL	thirdparty/soloud/src/audiosource/speech/klatt.h	7;"	d
ALSA	thirdparty/soloud/include/soloud/soloud.h	/^			ALSA,$/;"	e	enum:SoLoud::Soloud::BACKENDS
ALSAData	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^    struct ALSAData$/;"	s	namespace:SoLoud	file:
ALSA_PCM_NEW_HW_PARAMS_API	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	40;"	d	file:
ALT	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	CTRL				: 17,$/;"	p	class:namespace.Codes
ALTO	thirdparty/soloud/include/soloud/soloud_vic.h	/^			ALTO,$/;"	e	enum:SoLoud::Vic::__anon188
AMBIENT	lib/lib/include/lib/model.hpp	/^  AMBIENT,$/;"	e	enum:LIB_NS_NAME::map_type::ENUM
AMP_ADJ	thirdparty/soloud/src/audiosource/speech/klatt.cpp	98;"	d	file:
AM_ABSOLUTE	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^	AM_ABSOLUTE,$/;"	e	enum:__anon189
AM_ABSOLUTEIX	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^	AM_ABSOLUTEIX,$/;"	e	enum:__anon189
AM_ABSOLUTEIY	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^	AM_ABSOLUTEIY,$/;"	e	enum:__anon189
AM_IMMEDIATE	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^	AM_IMMEDIATE,$/;"	e	enum:__anon189
AM_IMPLIED	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^	AM_IMPLIED,$/;"	e	enum:__anon189
AM_INDEXEDINDIRECT	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^	AM_INDEXEDINDIRECT,$/;"	e	enum:__anon189
AM_INDIRECT	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^	AM_INDIRECT,$/;"	e	enum:__anon189
AM_INDIRECTINDEXED	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^	AM_INDIRECTINDEXED,$/;"	e	enum:__anon189
AM_RELATIVE	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^	AM_RELATIVE$/;"	e	enum:__anon189
AM_UNKNOWN	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^	AM_UNKNOWN = 0,$/;"	e	enum:__anon189
AM_ZP	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^	AM_ZP,$/;"	e	enum:__anon189
AM_ZPIX	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^	AM_ZPIX,$/;"	e	enum:__anon189
AM_ZPIY	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^	AM_ZPIY,$/;"	e	enum:__anon189
AND_THEN	thirdparty/catch/include/catch/catch.hpp	10440;"	d
AND_WHEN	thirdparty/catch/include/catch/catch.hpp	10438;"	d
APIENTRY	thirdparty/glfw/include/GLFW/glfw3.h	104;"	d
APIENTRY	thirdparty/glfw/include/GLFW/glfw3.h	106;"	d
APIENTRY	thirdparty/glfw/include/GLFW/glfw3native.h	89;"	d
APIENTRY	thirdparty/glfw/src/deps/glad/glad.h	40;"	d
APIENTRY	thirdparty/glfw/src/win32_platform.h	44;"	d
APIENTRY	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	16;"	d	file:
APIENTRY	thirdparty/opengl/include/GL/glcorearb.h	47;"	d
APIENTRY	thirdparty/remotery/src/Remotery.c	5922;"	d	file:
APIENTRY	thirdparty/remotery/src/Remotery.c	5924;"	d	file:
APIENTRY	thirdparty/remotery/src/Remotery.c	5926;"	d	file:
APIENTRYP	thirdparty/glfw/src/deps/glad/glad.h	43;"	d
APIENTRYP	thirdparty/opengl/include/GL/glcorearb.h	50;"	d
APOSTROPHE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	SLASH				: 191,	\/\/ needs localization$/;"	p	class:namespace.Codes
APPLICATION_INCLUDED_410EDE8C_F4B7_498C_82F8_676D317169C4	lib/roa/include/roa/application.hpp	2;"	d
AR	app/blank/data/Makefile	/^  AR = ar$/;"	m
AR	app/fps_walk/data/Makefile	/^  AR = ar$/;"	m
AR	app/perils/data/Makefile	/^  AR = ar$/;"	m
AR	app/they_never_pay/data/Makefile	/^  AR = ar$/;"	m
AR	app/tiles/data/Makefile	/^  AR = ar$/;"	m
AR	lib/math/data/Makefile	/^  AR = ar$/;"	m
AR	lib/nau/data/Makefile	/^  AR = ar$/;"	m
AR	lib/nil_aspects/data/Makefile	/^  AR = ar$/;"	m
AR	lib/roa/data/Makefile	/^  AR = ar$/;"	m
AR	lib/rov/data/Makefile	/^  AR = ar$/;"	m
AR	thirdparty/catch/data/Makefile	/^  AR = ar$/;"	m
AR	thirdparty/glfw/data/Makefile	/^  AR = ar$/;"	m
AR	thirdparty/imgui/data/Makefile	/^  AR = ar$/;"	m
AR	thirdparty/imguizmo/data/Makefile	/^  AR = ar$/;"	m
AR	thirdparty/json/data/Makefile	/^  AR = ar$/;"	m
AR	thirdparty/opengl/data/Makefile	/^  AR = ar$/;"	m
AR	thirdparty/remotery/data/Makefile	/^  AR = ar$/;"	m
AR	thirdparty/soloud/data/Makefile	/^  AR = ar$/;"	m
AR	thirdparty/stb/data/Makefile	/^  AR = ar$/;"	m
AR	thirdparty/tinydir/data/Makefile	/^  AR = ar$/;"	m
ARB_context_flush_control	thirdparty/glfw/src/glx_context.h	/^    GLFWbool        ARB_context_flush_control;$/;"	m	struct:_GLFWlibraryGLX
ARB_context_flush_control	thirdparty/glfw/src/wgl_context.h	/^    GLFWbool                            ARB_context_flush_control;$/;"	m	struct:_GLFWlibraryWGL
ARB_create_context	thirdparty/glfw/src/glx_context.h	/^    GLFWbool        ARB_create_context;$/;"	m	struct:_GLFWlibraryGLX
ARB_create_context	thirdparty/glfw/src/wgl_context.h	/^    GLFWbool                            ARB_create_context;$/;"	m	struct:_GLFWlibraryWGL
ARB_create_context_no_error	thirdparty/glfw/src/glx_context.h	/^    GLFWbool        ARB_create_context_no_error;$/;"	m	struct:_GLFWlibraryGLX
ARB_create_context_no_error	thirdparty/glfw/src/wgl_context.h	/^    GLFWbool                            ARB_create_context_no_error;$/;"	m	struct:_GLFWlibraryWGL
ARB_create_context_profile	thirdparty/glfw/src/glx_context.h	/^    GLFWbool        ARB_create_context_profile;$/;"	m	struct:_GLFWlibraryGLX
ARB_create_context_profile	thirdparty/glfw/src/wgl_context.h	/^    GLFWbool                            ARB_create_context_profile;$/;"	m	struct:_GLFWlibraryWGL
ARB_create_context_robustness	thirdparty/glfw/src/glx_context.h	/^    GLFWbool        ARB_create_context_robustness;$/;"	m	struct:_GLFWlibraryGLX
ARB_create_context_robustness	thirdparty/glfw/src/wgl_context.h	/^    GLFWbool                            ARB_create_context_robustness;$/;"	m	struct:_GLFWlibraryWGL
ARB_framebuffer_sRGB	thirdparty/glfw/src/glx_context.h	/^    GLFWbool        ARB_framebuffer_sRGB;$/;"	m	struct:_GLFWlibraryGLX
ARB_framebuffer_sRGB	thirdparty/glfw/src/wgl_context.h	/^    GLFWbool                            ARB_framebuffer_sRGB;$/;"	m	struct:_GLFWlibraryWGL
ARB_multisample	thirdparty/glfw/src/glx_context.h	/^    GLFWbool        ARB_multisample;$/;"	m	struct:_GLFWlibraryGLX
ARB_multisample	thirdparty/glfw/src/wgl_context.h	/^    GLFWbool                            ARB_multisample;$/;"	m	struct:_GLFWlibraryWGL
ARB_pixel_format	thirdparty/glfw/src/wgl_context.h	/^    GLFWbool                            ARB_pixel_format;$/;"	m	struct:_GLFWlibraryWGL
ARRAY_INCLUDED_E3E1A14B_B476_40C7_9453_ECD5F3F344F2	lib/lib/include/lib/array.hpp	13;"	d
ASCII	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static const char *ASCII[] =$/;"	v	file:
ASHMEM_DEVICE	thirdparty/remotery/src/Remotery.c	618;"	d	file:
ASPECTS_INCLUDED_6D6A42F2_C3EA_4D7E_A75F_0B687A554E77	lib/nil_aspects/include/aspect/aspects.hpp	2;"	d
ASPECT_INCLUDED_CAAB0E57_5E24_4643_9C26_95880895F3B4	lib/nil/include/nil/aspect.hpp	2;"	d
ASSERT_INCLUDED_764C490E_5ED6_4ACA_BE1C_723A2EBA0074	lib/lib/include/lib/assert.hpp	9;"	d
ASSERT_INCLUDED_FA5C9588_C33E_467D_A927_7702A084D69A	lib/roa/include/roa/assert.hpp	2;"	d
ASSET_LOADING_INCLUDED_F69B0D91_2909_4DF5_9E54_AF3A8D7AA006	lib/nil/src/asset_loading/asset_loading.hpp	2;"	d
ATOM_PAIR	thirdparty/glfw/src/x11_platform.h	/^    Atom            ATOM_PAIR;$/;"	m	struct:_GLFWlibraryX11
ATTENUATION_MODELS	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		enum ATTENUATION_MODELS$/;"	g	class:SoLoud::AudioSource
AUDIO	lib/lib/include/lib/memory.hpp	/^  AUDIO,$/;"	e	enum:LIB_NS_NAME::mem::tag::ENUM
AUDIO_INCLUDED_390E3EFC_CBA6_4281_B9A2_D54A0478D7AF	lib/roa/include/roa/audio_source.hpp	2;"	d
AUDIO_INCLUDED_A9E9DFF6_0B6A_45AF_BB36_79A82AB30911	lib/nil/include/nil/resource/audio.hpp	2;"	d
AUDIO_INCLUDED_D5CEC090_0E28_4A12_BC48_4860E1ED16FB	lib/nil/include/nil/data/audio.hpp	2;"	d
AUDIO_PLAYER_INCLUDED_D30C39CC_7F71_4D48_B2AB_3B8B7F9A57F9	lib/roa/include/roa/audio_player.hpp	2;"	d
AUDIO_SRC_INCLUDED_229468BE_F238_484F_8E31_B9AA630C4387	lib/nil/src/internal_data/resources/audio_src_data.hpp	2;"	d
AUTO	thirdparty/soloud/include/soloud/soloud.h	/^			AUTO = 0,$/;"	e	enum:SoLoud::Soloud::BACKENDS
A_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule A_rules[] =$/;"	v	file:
Abs	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   vec_t vec_t::Abs() const { return makeVect(fabsf(x), fabsf(y), fabsf(z)); }$/;"	f	class:ImGuizmo::vec_t
Accessed	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    Accessed;                           \/\/ Set to true when any widget access the current window$/;"	m	struct:ImGuiWindow
Active	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    Active;                             \/\/ Set to true on Begin()$/;"	m	struct:ImGuiWindow
ActiveId	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID                 ActiveId;                           \/\/ Active widget$/;"	m	struct:ImGuiContext
ActiveIdAllowOverlap	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    ActiveIdAllowOverlap;               \/\/ Set only by active widget$/;"	m	struct:ImGuiContext
ActiveIdClickOffset	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  ActiveIdClickOffset;                \/\/ Clicked offset from upper-left corner, if applicable (currently only set by ButtonBehavior)$/;"	m	struct:ImGuiContext
ActiveIdIsAlive	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    ActiveIdIsAlive;$/;"	m	struct:ImGuiContext
ActiveIdIsJustActivated	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    ActiveIdIsJustActivated;            \/\/ Set at the time of activation for one frame$/;"	m	struct:ImGuiContext
ActiveIdPreviousFrame	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID                 ActiveIdPreviousFrame;$/;"	m	struct:ImGuiContext
ActiveIdWindow	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiWindow*            ActiveIdWindow;$/;"	m	struct:ImGuiContext
Actor_kinematic	app/perils/src/game/actor_kinematic.hpp	/^struct Actor_kinematic : public ROA::Component$/;"	s	namespace:Game
Add	thirdparty/imgui/include/imgui/imgui_internal.h	/^    void        Add(const ImRect& rhs)          { if (Min.x > rhs.Min.x) Min.x = rhs.Min.x; if (Min.y > rhs.Min.y) Min.y = rhs.Min.y; if (Max.x < rhs.Max.x) Max.x = rhs.Max.x; if (Max.y < rhs.Max.y) Max.y = rhs.Max.y; }$/;"	f	struct:ImRect
Add	thirdparty/imgui/include/imgui/imgui_internal.h	/^    void        Add(const ImVec2& rhs)          { if (Min.x > rhs.x)     Min.x = rhs.x;     if (Min.y > rhs.y) Min.y = rhs.y;         if (Max.x < rhs.x) Max.x = rhs.x;         if (Max.y < rhs.y) Max.y = rhs.y; }$/;"	f	struct:ImRect
AddBezierCurve	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddBezierCurve(const ImVec2& pos0, const ImVec2& cp0, const ImVec2& cp1, const ImVec2& pos1, ImU32 col, float thickness, int num_segments)$/;"	f	class:ImDrawList
AddCallback	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddCallback(ImDrawCallback callback, void* callback_data)$/;"	f	class:ImDrawList
AddCircle	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddCircle(const ImVec2& centre, float radius, ImU32 col, int num_segments, float thickness)$/;"	f	class:ImDrawList
AddCircleFilled	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddCircleFilled(const ImVec2& centre, float radius, ImU32 col, int num_segments)$/;"	f	class:ImDrawList
AddConvexPolyFilled	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddConvexPolyFilled(const ImVec2* points, const int points_count, ImU32 col, bool anti_aliased)$/;"	f	class:ImDrawList
AddDrawCmd	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddDrawCmd()$/;"	f	class:ImDrawList
AddDrawListToRenderList	thirdparty/imgui/src/imgui.cpp	/^static void AddDrawListToRenderList(ImVector<ImDrawList*>& out_render_list, ImDrawList* draw_list)$/;"	f	file:
AddFont	thirdparty/imgui/src/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFont(const ImFontConfig* font_cfg)$/;"	f	class:ImFontAtlas
AddFontDefault	thirdparty/imgui/src/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontDefault(const ImFontConfig* font_cfg_template)$/;"	f	class:ImFontAtlas
AddFontFromFileTTF	thirdparty/imgui/src/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontFromFileTTF(const char* filename, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)$/;"	f	class:ImFontAtlas
AddFontFromMemoryCompressedBase85TTF	thirdparty/imgui/src/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(const char* compressed_ttf_data_base85, float size_pixels, const ImFontConfig* font_cfg, const ImWchar* glyph_ranges)$/;"	f	class:ImFontAtlas
AddFontFromMemoryCompressedTTF	thirdparty/imgui/src/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontFromMemoryCompressedTTF(const void* compressed_ttf_data, int compressed_ttf_size, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)$/;"	f	class:ImFontAtlas
AddFontFromMemoryTTF	thirdparty/imgui/src/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontFromMemoryTTF(void* ttf_data, int ttf_size, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)$/;"	f	class:ImFontAtlas
AddImage	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddImage(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, const ImVec2& uv0, const ImVec2& uv1, ImU32 col)$/;"	f	class:ImDrawList
AddInputCharacter	thirdparty/imgui/src/imgui.cpp	/^void ImGuiIO::AddInputCharacter(ImWchar c)$/;"	f	class:ImGuiIO
AddInputCharactersUTF8	thirdparty/imgui/src/imgui.cpp	/^void ImGuiIO::AddInputCharactersUTF8(const char* utf8_chars)$/;"	f	class:ImGuiIO
AddLine	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddLine(const ImVec2& a, const ImVec2& b, ImU32 col, float thickness)$/;"	f	class:ImDrawList
AddPolyline	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddPolyline(const ImVec2* points, const int points_count, ImU32 col, bool closed, float thickness, bool anti_aliased)$/;"	f	class:ImDrawList
AddQuad	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddQuad(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, ImU32 col, float thickness)$/;"	f	class:ImDrawList
AddQuadFilled	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddQuadFilled(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, ImU32 col)$/;"	f	class:ImDrawList
AddRect	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddRect(const ImVec2& a, const ImVec2& b, ImU32 col, float rounding, int rounding_corners_flags, float thickness)$/;"	f	class:ImDrawList
AddRectFilled	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddRectFilled(const ImVec2& a, const ImVec2& b, ImU32 col, float rounding, int rounding_corners_flags)$/;"	f	class:ImDrawList
AddRectFilledMultiColor	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddRectFilledMultiColor(const ImVec2& a, const ImVec2& c, ImU32 col_upr_left, ImU32 col_upr_right, ImU32 col_bot_right, ImU32 col_bot_left)$/;"	f	class:ImDrawList
AddRemapChar	thirdparty/imgui/src/imgui_draw.cpp	/^void ImFont::AddRemapChar(ImWchar dst, ImWchar src, bool overwrite_dst)$/;"	f	class:ImFont
AddSampleTreeMessage	thirdparty/remotery/src/Remotery.c	/^static void AddSampleTreeMessage(rmtMessageQueue* queue, Sample* sample, ObjectAllocator* allocator, rmtPStr thread_name, struct ThreadSampler* thread_sampler)$/;"	f	file:
AddText	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddText(const ImFont* font, float font_size, const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_end, float wrap_width, const ImVec4* cpu_fine_clip_rect)$/;"	f	class:ImDrawList
AddText	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddText(const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_end)$/;"	f	class:ImDrawList
AddTriangle	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddTriangle(const ImVec2& a, const ImVec2& b, const ImVec2& c, ImU32 col, float thickness)$/;"	f	class:ImDrawList
AddTriangleFilled	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::AddTriangleFilled(const ImVec2& a, const ImVec2& b, const ImVec2& c, ImU32 col)$/;"	f	class:ImDrawList
AddWindowSettings	thirdparty/imgui/src/imgui.cpp	/^static ImGuiIniData* AddWindowSettings(const char* name)$/;"	f	file:
AddWindowToRenderList	thirdparty/imgui/src/imgui.cpp	/^static void AddWindowToRenderList(ImVector<ImDrawList*>& out_render_list, ImGuiWindow* window)$/;"	f	file:
AddWindowToSortedBuffer	thirdparty/imgui/src/imgui.cpp	/^static void AddWindowToSortedBuffer(ImVector<ImGuiWindow*>& out_sorted_windows, ImGuiWindow* window)$/;"	f	file:
AdvanceCursor	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool        AdvanceCursor;$/;"	m	struct:ImGuiGroupData
AlignFirstTextHeightToWidgets	thirdparty/imgui/src/imgui.cpp	/^void ImGui::AlignFirstTextHeightToWidgets()$/;"	f	class:ImGui
AlignedFloatBuffer	thirdparty/soloud/include/soloud/soloud.h	/^	class AlignedFloatBuffer$/;"	c	namespace:SoLoud
AlignedFloatBuffer	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * AlignedFloatBuffer;$/;"	t
AlignedFloatBuffer	thirdparty/soloud/src/core/soloud.cpp	/^	AlignedFloatBuffer::AlignedFloatBuffer()$/;"	f	class:SoLoud::AlignedFloatBuffer
AllOf	thirdparty/catch/include/catch/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	thirdparty/catch/include/catch/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	thirdparty/catch/include/catch/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	thirdparty/catch/include/catch/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllowKeyboardFocus	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    AllowKeyboardFocus;     \/\/ == AllowKeyboardFocusStack.back() [empty == true]$/;"	m	struct:ImGuiDrawContext
AllowKeyboardFocusStack	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<bool>          AllowKeyboardFocusStack;$/;"	m	struct:ImGuiDrawContext
Alpha	thirdparty/imgui/include/imgui/imgui.h	/^    float       Alpha;                      \/\/ Global alpha applies to everything in ImGui$/;"	m	struct:ImGuiStyle
Anim.Animate	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Animation.js	/^})();$/;"	f
AntiAliasedLines	thirdparty/imgui/include/imgui/imgui.h	/^    bool        AntiAliasedLines;           \/\/ Enable anti-aliasing on lines\/borders. Disable if you are really tight on CPU\/GPU.$/;"	m	struct:ImGuiStyle
AntiAliasedShapes	thirdparty/imgui/include/imgui/imgui.h	/^    bool        AntiAliasedShapes;          \/\/ Enable anti-aliasing on filled shapes (rounded rectangles, circles, etc.)$/;"	m	struct:ImGuiStyle
AnyOf	thirdparty/catch/include/catch/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	thirdparty/catch/include/catch/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	thirdparty/catch/include/catch/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	thirdparty/catch/include/catch/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
Anything	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static const char Anything[] = "";$/;"	v	file:
Application	lib/roa/src/interface/application.cpp	/^Application::Application()$/;"	f	class:ROA::Application
ApplySizeFullWithConstraint	thirdparty/imgui/src/imgui.cpp	/^static void ApplySizeFullWithConstraint(ImGuiWindow* window, ImVec2 new_size)$/;"	f	file:
AreCUDASamplesReady	thirdparty/remotery/src/Remotery.c	/^static rmtBool AreCUDASamplesReady(Sample* sample)$/;"	f	file:
Ascent	thirdparty/imgui/include/imgui/imgui.h	/^    float                       Ascent, Descent;    \/\/              \/\/ Ascent: distance from top to bottom of e.g. 'A' [0..FontSize]$/;"	m	struct:ImFont
AssertionInfo	thirdparty/catch/include/catch/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	thirdparty/catch/include/catch/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionResult	thirdparty/catch/include/catch/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResultData	thirdparty/catch/include/catch/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	thirdparty/catch/include/catch/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
Assets	lib/nil/src/asset_loading/asset_loading.hpp	/^namespace Assets {$/;"	n	namespace:Nil
Assets	lib/nil/src/asset_loading/load_gltf.cpp	/^namespace Assets {$/;"	n	namespace:Nil	file:
Assets	lib/nil/src/asset_loading/load_obj.cpp	/^namespace Assets {$/;"	n	namespace:Nil	file:
AtomicAdd	thirdparty/remotery/src/Remotery.c	/^static rmtS32 AtomicAdd(rmtS32 volatile* value, rmtS32 add)$/;"	f	file:
AtomicCompareAndSwap	thirdparty/remotery/src/Remotery.c	/^static rmtBool AtomicCompareAndSwap(rmtU32 volatile* val, long old_val, long new_val)$/;"	f	file:
AtomicCompareAndSwapPointer	thirdparty/remotery/src/Remotery.c	/^static rmtBool AtomicCompareAndSwapPointer(long* volatile* ptr, long* old_ptr, long* new_ptr)$/;"	f	file:
AtomicSub	thirdparty/remotery/src/Remotery.c	/^static void AtomicSub(rmtS32 volatile* value, rmtS32 sub)$/;"	f	file:
AttribFetch	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static bool ScreenOn, AttribFetch;$/;"	v	file:
Audio	lib/nil/include/nil/data/audio.hpp	/^struct Audio$/;"	s	namespace:Nil::Data
AudioAttenuator	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^	class AudioAttenuator$/;"	c	namespace:SoLoud
AudioAttenuator	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * AudioAttenuator;$/;"	t
AudioAttenuator_attenuate	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float AudioAttenuator_attenuate(void * aClassPtr, float aDistance, float aMinDistance, float aMaxDistance, float aRolloffFactor)$/;"	f
AudioAttenuator_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void AudioAttenuator_destroy(void * aClassPtr)$/;"	f
AudioCollider	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^	class AudioCollider$/;"	c	namespace:SoLoud
AudioCollider	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * AudioCollider;$/;"	t
AudioSource	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^	class AudioSource$/;"	c	namespace:SoLoud
AudioSource	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * AudioSource;$/;"	t
AudioSource	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	AudioSource::AudioSource() $/;"	f	class:SoLoud::AudioSource
AudioSourceInstance	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^	class AudioSourceInstance$/;"	c	namespace:SoLoud
AudioSourceInstance	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	AudioSourceInstance::AudioSourceInstance()$/;"	f	class:SoLoud::AudioSourceInstance
AudioSourceInstance3dData	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^	class AudioSourceInstance3dData$/;"	c	namespace:SoLoud
AudioSourceInstance3dData	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	AudioSourceInstance3dData::AudioSourceInstance3dData()$/;"	f	class:SoLoud::AudioSourceInstance3dData
AudioSourceResampleData	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^	struct AudioSourceResampleData$/;"	s	namespace:SoLoud
AudioSourceResampleData	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	AudioSourceResampleData::AudioSourceResampleData()$/;"	f	class:SoLoud::AudioSourceResampleData
Audio_player	lib/roa/src/interface/audio_player.cpp	/^Audio_player::Audio_player()$/;"	f	class:ROA::Audio_player
Audio_player	lib/roa/src/interface/audio_player.cpp	/^Audio_player::Audio_player(const ROA_nullptr null)$/;"	f	class:ROA::Audio_player
Audio_source	lib/roa/src/interface/audio_source.cpp	/^Audio_source::Audio_source()$/;"	f	class:ROA::Audio_source
AutoFitFramesX	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     AutoFitFramesX, AutoFitFramesY;$/;"	m	struct:ImGuiWindow
AutoFitFramesY	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     AutoFitFramesX, AutoFitFramesY;$/;"	m	struct:ImGuiWindow
AutoFitOnlyGrows	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    AutoFitOnlyGrows;$/;"	m	struct:ImGuiWindow
AutoPosLastDirection	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     AutoPosLastDirection;$/;"	m	struct:ImGuiWindow
AutoReg	thirdparty/catch/include/catch/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	thirdparty/catch/include/catch/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
B	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	A					: 65,$/;"	p	class:namespace.Codes
B	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   float *A[2],*B[2],*C[2];$/;"	m	struct:stb_vorbis	file:
B	thirdparty/stb/include/stb/stb_vorbis.c	/^   float *A[2],*B[2],*C[2];$/;"	m	struct:stb_vorbis	file:
BACKENDS	thirdparty/soloud/include/soloud/soloud.h	/^		enum BACKENDS$/;"	g	class:SoLoud::Soloud
BACKEND_MAX	thirdparty/soloud/include/soloud/soloud.h	/^			BACKEND_MAX,$/;"	e	enum:SoLoud::Soloud::BACKENDS
BACKSLASH	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	OPEN_SQUARE_BRACKET	: 219,	\/\/ needs localization$/;"	p	class:namespace.Codes
BACKSPACE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	MAC_ENTER			: 3,$/;"	p	class:namespace.Codes
BANDPASS	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^			BANDPASS = 3$/;"	e	enum:SoLoud::BiquadResonantFilter::FILTERTYPE
BASS	thirdparty/soloud/include/soloud/soloud_vic.h	/^			BASS = 0,$/;"	e	enum:SoLoud::Vic::__anon188
BASSBOOSTFILTER_BOOST	thirdparty/soloud/include/soloud/soloud_c.h	/^	BASSBOOSTFILTER_BOOST = 1,$/;"	e	enum:SOLOUD_ENUMS
BASSBOOSTFILTER_WET	thirdparty/soloud/include/soloud/soloud_c.h	/^	BASSBOOSTFILTER_WET = 0,$/;"	e	enum:SOLOUD_ENUMS
BATTERY_DEVTYPE_GAMEPAD	thirdparty/glfw/src/deps/mingw/xinput.h	139;"	d
BATTERY_DEVTYPE_HEADSET	thirdparty/glfw/src/deps/mingw/xinput.h	140;"	d
BATTERY_LEVEL_EMPTY	thirdparty/glfw/src/deps/mingw/xinput.h	146;"	d
BATTERY_LEVEL_FULL	thirdparty/glfw/src/deps/mingw/xinput.h	149;"	d
BATTERY_LEVEL_LOW	thirdparty/glfw/src/deps/mingw/xinput.h	147;"	d
BATTERY_LEVEL_MEDIUM	thirdparty/glfw/src/deps/mingw/xinput.h	148;"	d
BATTERY_TYPE_ALKALINE	thirdparty/glfw/src/deps/mingw/xinput.h	143;"	d
BATTERY_TYPE_DISCONNECTED	thirdparty/glfw/src/deps/mingw/xinput.h	141;"	d
BATTERY_TYPE_NIMH	thirdparty/glfw/src/deps/mingw/xinput.h	144;"	d
BATTERY_TYPE_UNKNOWN	thirdparty/glfw/src/deps/mingw/xinput.h	145;"	d
BATTERY_TYPE_WIRED	thirdparty/glfw/src/deps/mingw/xinput.h	142;"	d
BENCHMARK_INCLUDED_022A1DD1_7E69_4862_ADD5_BCC7E9C4090A	lib/lib/include/lib/bench.hpp	9;"	d
BENCH_INIT_CPU	lib/lib/include/lib/bench.hpp	30;"	d
BENCH_INIT_CPU	lib/lib/include/lib/bench.hpp	43;"	d
BENCH_INIT_GPU	lib/lib/include/lib/bench.hpp	31;"	d
BENCH_INIT_GPU	lib/lib/include/lib/bench.hpp	44;"	d
BENCH_POP_CPU	lib/lib/include/lib/bench.hpp	35;"	d
BENCH_POP_CPU	lib/lib/include/lib/bench.hpp	48;"	d
BENCH_POP_GPU	lib/lib/include/lib/bench.hpp	39;"	d
BENCH_POP_GPU	lib/lib/include/lib/bench.hpp	52;"	d
BENCH_PUSH_CPU	lib/lib/include/lib/bench.hpp	34;"	d
BENCH_PUSH_CPU	lib/lib/include/lib/bench.hpp	47;"	d
BENCH_PUSH_GPU	lib/lib/include/lib/bench.hpp	38;"	d
BENCH_PUSH_GPU	lib/lib/include/lib/bench.hpp	51;"	d
BENCH_SCOPED_CPU	lib/lib/include/lib/bench.hpp	33;"	d
BENCH_SCOPED_CPU	lib/lib/include/lib/bench.hpp	46;"	d
BENCH_SCOPED_GPU	lib/lib/include/lib/bench.hpp	37;"	d
BENCH_SCOPED_GPU	lib/lib/include/lib/bench.hpp	50;"	d
BIN_ERROR_CHECK	thirdparty/remotery/src/Remotery.c	3808;"	d	file:
BIQUADRESONANTFILTER_BANDPASS	thirdparty/soloud/include/soloud/soloud_c.h	/^	BIQUADRESONANTFILTER_BANDPASS = 3,$/;"	e	enum:SOLOUD_ENUMS
BIQUADRESONANTFILTER_FREQUENCY	thirdparty/soloud/include/soloud/soloud_c.h	/^	BIQUADRESONANTFILTER_FREQUENCY = 2,$/;"	e	enum:SOLOUD_ENUMS
BIQUADRESONANTFILTER_HIGHPASS	thirdparty/soloud/include/soloud/soloud_c.h	/^	BIQUADRESONANTFILTER_HIGHPASS = 2,$/;"	e	enum:SOLOUD_ENUMS
BIQUADRESONANTFILTER_LOWPASS	thirdparty/soloud/include/soloud/soloud_c.h	/^	BIQUADRESONANTFILTER_LOWPASS = 1,$/;"	e	enum:SOLOUD_ENUMS
BIQUADRESONANTFILTER_NONE	thirdparty/soloud/include/soloud/soloud_c.h	/^	BIQUADRESONANTFILTER_NONE = 0,$/;"	e	enum:SOLOUD_ENUMS
BIQUADRESONANTFILTER_RESONANCE	thirdparty/soloud/include/soloud/soloud_c.h	/^	BIQUADRESONANTFILTER_RESONANCE = 3,$/;"	e	enum:SOLOUD_ENUMS
BIQUADRESONANTFILTER_SAMPLERATE	thirdparty/soloud/include/soloud/soloud_c.h	/^	BIQUADRESONANTFILTER_SAMPLERATE = 1,$/;"	e	enum:SOLOUD_ENUMS
BIQUADRESONANTFILTER_WET	thirdparty/soloud/include/soloud/soloud_c.h	/^	BIQUADRESONANTFILTER_WET = 0,$/;"	e	enum:SOLOUD_ENUMS
BIT	lib/lib/include/lib/bits.hpp	42;"	d
BITDEPTH	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^			BITDEPTH$/;"	e	enum:SoLoud::LofiFilter::FILTERPARAMS
BITDEPTH	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^			BITDEPTH$/;"	e	enum:SoLoud::LofiFilterInstance::FILTERPARAMS
BITS_INCLUDED_CBA564C2_BA9A_4D4E_A0B8_BCAF9ECE089B	lib/lib/include/lib/bits.hpp	9;"	d
BLIP	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^			BLIP$/;"	e	enum:SoLoud::Sfxr::SFXR_PRESETS
BOOST	thirdparty/soloud/include/soloud/soloud_bassboostfilter.h	/^			BOOST = 1$/;"	e	enum:SoLoud::BassboostFilter::FILTERATTRIBUTE
BOOST	thirdparty/soloud/include/soloud/soloud_bassboostfilter.h	/^			BOOST = 1$/;"	e	enum:SoLoud::BassboostFilterInstance::FILTERATTRIBUTE
BOUDNING_BOX_INCLUDED_6CE5864B_07D2_411B_AB16_082F249FFC17	lib/nil/include/nil/data/bounding_box.hpp	2;"	d
BOUNDING_BOX_INCLUDED_AA48A4A2_B0B4_4900_B7FE_49890753B80A	lib/roa/include/roa/bounding_box.hpp	2;"	d
BOUNDS	thirdparty/imguizmo/src/ImGuizmo.cpp	/^	  BOUNDS$/;"	e	enum:ImGuizmo::MOVETYPE	file:
BQRStateData	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^	struct BQRStateData$/;"	s	namespace:SoLoud
BUFFER_COUNT	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^    static const int BUFFER_COUNT = 2;$/;"	m	namespace:SoLoud	file:
BUFFER_COUNT	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^    static const int BUFFER_COUNT = 2;$/;"	m	namespace:SoLoud	file:
BUFFER_SIZE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	5045;"	d	file:
BUFFER_SIZE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	5070;"	d	file:
BUFFER_SIZE	thirdparty/stb/include/stb/stb_vorbis.c	5051;"	d	file:
BUFFER_SIZE	thirdparty/stb/include/stb/stb_vorbis.c	5076;"	d	file:
B_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule B_rules[] =$/;"	v	file:
BackupActiveIdIsAlive	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool        BackupActiveIdIsAlive;$/;"	m	struct:ImGuiGroupData
BackupCurrentLineHeight	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       BackupCurrentLineHeight;$/;"	m	struct:ImGuiGroupData
BackupCurrentLineTextBaseOffset	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       BackupCurrentLineTextBaseOffset;$/;"	m	struct:ImGuiGroupData
BackupCursorMaxPos	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2      BackupCursorMaxPos;$/;"	m	struct:ImGuiGroupData
BackupCursorPos	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2      BackupCursorPos;$/;"	m	struct:ImGuiGroupData
BackupFloat	thirdparty/imgui/include/imgui/imgui_internal.h	/^    union           { int BackupInt[2]; float BackupFloat[2]; };$/;"	m	union:ImGuiStyleMod::__anon139
BackupGroupOffsetX	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       BackupGroupOffsetX;$/;"	m	struct:ImGuiGroupData
BackupIndentX	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       BackupIndentX;$/;"	m	struct:ImGuiGroupData
BackupInt	thirdparty/imgui/include/imgui/imgui_internal.h	/^    union           { int BackupInt[2]; float BackupFloat[2]; };$/;"	m	union:ImGuiStyleMod::__anon139
BackupLogLinePosY	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       BackupLogLinePosY;$/;"	m	struct:ImGuiGroupData
BackupValue	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec4      BackupValue;$/;"	m	struct:ImGuiColMod
BadLine	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static unsigned int BadLine;$/;"	v	file:
Base64_CalculateEncodedLength	thirdparty/remotery/src/Remotery.c	/^static rmtU32 Base64_CalculateEncodedLength(rmtU32 length)$/;"	f	file:
Base64_Encode	thirdparty/remotery/src/Remotery.c	/^static void Base64_Encode(const rmtU8* in_bytes, rmtU32 length, rmtU8* out_bytes)$/;"	f	file:
BassboostFilter	thirdparty/soloud/include/soloud/soloud_bassboostfilter.h	/^	class BassboostFilter : public FFTFilter$/;"	c	namespace:SoLoud
BassboostFilter	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * BassboostFilter;$/;"	t
BassboostFilter	thirdparty/soloud/src/filter/soloud_bassboostfilter.cpp	/^	BassboostFilter::BassboostFilter()$/;"	f	class:SoLoud::BassboostFilter
BassboostFilterInstance	thirdparty/soloud/include/soloud/soloud_bassboostfilter.h	/^	class BassboostFilterInstance : public FFTFilterInstance$/;"	c	namespace:SoLoud
BassboostFilterInstance	thirdparty/soloud/src/filter/soloud_bassboostfilter.cpp	/^	BassboostFilterInstance::BassboostFilterInstance(BassboostFilter *aParent)$/;"	f	class:SoLoud::BassboostFilterInstance
BassboostFilter_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * BassboostFilter_create()$/;"	f
BassboostFilter_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void BassboostFilter_destroy(void * aClassPtr)$/;"	f
BassboostFilter_setParams	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int BassboostFilter_setParams(void * aClassPtr, float aBoost)$/;"	f
BatteryLevel	thirdparty/glfw/src/deps/mingw/xinput.h	/^    BYTE BatteryLevel;$/;"	m	struct:_XINPUT_BATTERY_INFORMATION
BatteryType	thirdparty/glfw/src/deps/mingw/xinput.h	/^    BYTE BatteryType;$/;"	m	struct:_XINPUT_BATTERY_INFORMATION
Begin	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::Begin(const char* name, bool* p_open, ImGuiWindowFlags flags)$/;"	f	class:ImGui
Begin	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::Begin(const char* name, bool* p_open, const ImVec2& size_on_first_use, float bg_alpha, ImGuiWindowFlags flags)$/;"	f	class:ImGui
Begin	thirdparty/imgui/src/imgui.cpp	/^void ImGuiListClipper::Begin(int count, float items_height)$/;"	f	class:ImGuiListClipper
BeginChild	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::BeginChild(ImGuiID id, const ImVec2& size_arg, bool border, ImGuiWindowFlags extra_flags)$/;"	f	class:ImGui
BeginChild	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::BeginChild(const char* str_id, const ImVec2& size_arg, bool border, ImGuiWindowFlags extra_flags)$/;"	f	class:ImGui
BeginChildEx	thirdparty/imgui/src/imgui.cpp	/^static bool BeginChildEx(const char* name, ImGuiID id, const ImVec2& size_arg, bool border, ImGuiWindowFlags extra_flags)$/;"	f	file:
BeginChildFrame	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::BeginChildFrame(ImGuiID id, const ImVec2& size, ImGuiWindowFlags extra_flags)$/;"	f	class:ImGui
BeginCount	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     BeginCount;                         \/\/ Number of Begin() during the current frame (generally 0 or 1, 1+ if appending via multiple Begin\/End pairs)$/;"	m	struct:ImGuiWindow
BeginFrame	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   void BeginFrame()$/;"	f	namespace:ImGuizmo
BeginGroup	thirdparty/imgui/src/imgui.cpp	/^void ImGui::BeginGroup()$/;"	f	class:ImGui
BeginMainMenuBar	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::BeginMainMenuBar()$/;"	f	class:ImGui
BeginMenu	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::BeginMenu(const char* label, bool enabled)$/;"	f	class:ImGui
BeginMenuBar	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::BeginMenuBar()$/;"	f	class:ImGui
BeginNew	thirdparty/remotery/src/Remotery.c	539;"	d	file:
BeginPopup	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::BeginPopup(const char* str_id)$/;"	f	class:ImGui
BeginPopupContextItem	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::BeginPopupContextItem(const char* str_id, int mouse_button)$/;"	f	class:ImGui
BeginPopupContextVoid	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::BeginPopupContextVoid(const char* str_id, int mouse_button)$/;"	f	class:ImGui
BeginPopupContextWindow	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::BeginPopupContextWindow(bool also_over_items, const char* str_id, int mouse_button)$/;"	f	class:ImGui
BeginPopupEx	thirdparty/imgui/src/imgui.cpp	/^static bool BeginPopupEx(const char* str_id, ImGuiWindowFlags extra_flags)$/;"	f	file:
BeginPopupModal	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::BeginPopupModal(const char* name, bool* p_open, ImGuiWindowFlags extra_flags)$/;"	f	class:ImGui
BeginTooltip	thirdparty/imgui/src/imgui.cpp	/^void ImGui::BeginTooltip()$/;"	f	class:ImGui
Big	thirdparty/glfw/src/deps/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	s	struct:nk_alignof
Bind	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Bind.js	/^function Bind()$/;"	f
BindAPI	thirdparty/glfw/src/egl_context.h	/^    PFN_eglBindAPI              BindAPI;$/;"	m	struct:_GLFWlibraryEGL
BiquadResonantFilter	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^	class BiquadResonantFilter : public Filter$/;"	c	namespace:SoLoud
BiquadResonantFilter	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * BiquadResonantFilter;$/;"	t
BiquadResonantFilter	thirdparty/soloud/src/filter/soloud_biquadresonantfilter.cpp	/^	BiquadResonantFilter::BiquadResonantFilter()$/;"	f	class:SoLoud::BiquadResonantFilter
BiquadResonantFilterInstance	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^	class BiquadResonantFilterInstance : public FilterInstance$/;"	c	namespace:SoLoud
BiquadResonantFilterInstance	thirdparty/soloud/src/filter/soloud_biquadresonantfilter.cpp	/^	BiquadResonantFilterInstance::BiquadResonantFilterInstance(BiquadResonantFilter *aParent)$/;"	f	class:SoLoud::BiquadResonantFilterInstance
BiquadResonantFilter_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * BiquadResonantFilter_create()$/;"	f
BiquadResonantFilter_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void BiquadResonantFilter_destroy(void * aClassPtr)$/;"	f
BiquadResonantFilter_setParams	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int BiquadResonantFilter_setParams(void * aClassPtr, int aType, float aSampleRate, float aFrequency, float aResonance)$/;"	f
BorderSize	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   BorderSize;$/;"	m	struct:ImGuiWindow
BorgType	thirdparty/catch/include/catch/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
Bounding_box	lib/nil/include/nil/data/bounding_box.hpp	/^struct Bounding_box$/;"	s	namespace:Nil::Data
Bounding_box	lib/roa/include/roa/bounding_box.hpp	/^class Bounding_box : public Object$/;"	c	namespace:ROA
Bounding_box	lib/roa/src/interface/bounding_box.cpp	/^Bounding_box::Bounding_box()$/;"	f	class:ROA::Bounding_box
Bounding_box	lib/roa/src/interface/bounding_box.cpp	/^Bounding_box::Bounding_box(const ROA_nullptr null)$/;"	f	class:ROA::Bounding_box
Bounding_box	lib/roa/src/interface/bounding_box.cpp	/^Bounding_box::Bounding_box(const Vector3 &min, const Vector3 &max)$/;"	f	class:ROA::Bounding_box
Bounding_box_data	lib/nil/src/interface/data/bounding_box.cpp	/^  Bounding_box_data()$/;"	f	struct:__anon33::Bounding_box_data
Bounding_box_data	lib/nil/src/interface/data/bounding_box.cpp	/^struct Bounding_box_data$/;"	s	namespace:__anon33	file:
Buf	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<char>      Buf;$/;"	m	struct:ImGuiTextBuffer
Buf	thirdparty/imgui/include/imgui/imgui.h	/^    char*               Buf;            \/\/ Current text buffer                  \/\/ Read-write (pointed data only, can't replace the actual pointer)$/;"	m	struct:ImGuiTextEditCallbackData
BufDirty	thirdparty/imgui/include/imgui/imgui.h	/^    bool                BufDirty;       \/\/ Set if you modify Buf\/BufTextLen!!   \/\/ Write$/;"	m	struct:ImGuiTextEditCallbackData
BufSize	thirdparty/imgui/include/imgui/imgui.h	/^    int                 BufSize;        \/\/ Maximum text length in bytes         \/\/ Read-only$/;"	m	struct:ImGuiTextEditCallbackData
BufSizeA	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                 BufSizeA;                   \/\/ end-user buffer size$/;"	m	struct:ImGuiTextEditState
BufTextLen	thirdparty/imgui/include/imgui/imgui.h	/^    int                 BufTextLen;     \/\/ Current text length in bytes         \/\/ Read-write$/;"	m	struct:ImGuiTextEditCallbackData
Buffer	thirdparty/remotery/src/Remotery.c	/^} Buffer;$/;"	t	typeref:struct:__anon56	file:
Buffer_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError Buffer_Constructor(Buffer* buffer, rmtU32 alloc_granularity)$/;"	f	file:
Buffer_Destructor	thirdparty/remotery/src/Remotery.c	/^static void Buffer_Destructor(Buffer* buffer)$/;"	f	file:
Buffer_Write	thirdparty/remotery/src/Remotery.c	/^static rmtError Buffer_Write(Buffer* buffer, void* data, rmtU32 length)$/;"	f	file:
Buffer_WriteString	thirdparty/remotery/src/Remotery.c	/^static rmtError Buffer_WriteString(Buffer* buffer, rmtPStr string)$/;"	f	file:
Buffer_WriteStringWithLength	thirdparty/remotery/src/Remotery.c	/^static rmtError Buffer_WriteStringWithLength(Buffer* buffer, rmtPStr string)$/;"	f	file:
Buffer_WriteStringZ	thirdparty/remotery/src/Remotery.c	/^static rmtError Buffer_WriteStringZ(Buffer* buffer, rmtPStr string)$/;"	f	file:
Buffer_WriteU32	thirdparty/remotery/src/Remotery.c	/^static rmtError Buffer_WriteU32(Buffer* buffer, rmtU32 value)$/;"	f	file:
Buffer_WriteU64	thirdparty/remotery/src/Remotery.c	/^static rmtError Buffer_WriteU64(Buffer* buffer, rmtU64 value)$/;"	f	file:
Build	thirdparty/imgui/src/imgui.cpp	/^void ImGuiTextFilter::Build()$/;"	f	class:ImGuiTextFilter
Build	thirdparty/imgui/src/imgui_draw.cpp	/^bool    ImFontAtlas::Build()$/;"	f	class:ImFontAtlas
BuildLookupTable	thirdparty/imgui/src/imgui_draw.cpp	/^void ImFont::BuildLookupTable()$/;"	f	class:ImFont
BuildPlan	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   vec_t BuildPlan(const vec_t & p_point1, const vec_t & p_normal)$/;"	f	namespace:ImGuizmo
Bullet	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Bullet()$/;"	f	class:ImGui
BulletText	thirdparty/imgui/src/imgui.cpp	/^void ImGui::BulletText(const char* fmt, ...)$/;"	f	class:ImGui
BulletTextV	thirdparty/imgui/src/imgui.cpp	/^void ImGui::BulletTextV(const char* fmt, va_list args)$/;"	f	class:ImGui
Bus	thirdparty/soloud/include/soloud/soloud_bus.h	/^	class Bus : public AudioSource$/;"	c	namespace:SoLoud
Bus	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * Bus;$/;"	t
Bus	thirdparty/soloud/src/core/soloud_bus.cpp	/^	Bus::Bus()$/;"	f	class:SoLoud::Bus
BusInstance	thirdparty/soloud/include/soloud/soloud_bus.h	/^	class BusInstance : public AudioSourceInstance$/;"	c	namespace:SoLoud
BusInstance	thirdparty/soloud/src/core/soloud_bus.cpp	/^	BusInstance::BusInstance(Bus *aParent)$/;"	f	class:SoLoud::BusInstance
Bus_calcFFT	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float * Bus_calcFFT(void * aClassPtr)$/;"	f
Bus_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * Bus_create()$/;"	f
Bus_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_destroy(void * aClassPtr)$/;"	f
Bus_getWave	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float * Bus_getWave(void * aClassPtr)$/;"	f
Bus_play	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Bus_play(void * aClassPtr, AudioSource * aSound)$/;"	f
Bus_play3d	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Bus_play3d(void * aClassPtr, AudioSource * aSound, float aPosX, float aPosY, float aPosZ)$/;"	f
Bus_play3dClocked	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Bus_play3dClocked(void * aClassPtr, double aSoundTime, AudioSource * aSound, float aPosX, float aPosY, float aPosZ)$/;"	f
Bus_play3dClockedEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Bus_play3dClockedEx(void * aClassPtr, double aSoundTime, AudioSource * aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume)$/;"	f
Bus_play3dEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Bus_play3dEx(void * aClassPtr, AudioSource * aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, int aPaused)$/;"	f
Bus_playClocked	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Bus_playClocked(void * aClassPtr, double aSoundTime, AudioSource * aSound)$/;"	f
Bus_playClockedEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Bus_playClockedEx(void * aClassPtr, double aSoundTime, AudioSource * aSound, float aVolume, float aPan)$/;"	f
Bus_playEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Bus_playEx(void * aClassPtr, AudioSource * aSound, float aVolume, float aPan, int aPaused)$/;"	f
Bus_set3dAttenuation	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_set3dAttenuation(void * aClassPtr, unsigned int aAttenuationModel, float aAttenuationRolloffFactor)$/;"	f
Bus_set3dAttenuator	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_set3dAttenuator(void * aClassPtr, AudioAttenuator * aAttenuator)$/;"	f
Bus_set3dCollider	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_set3dCollider(void * aClassPtr, AudioCollider * aCollider)$/;"	f
Bus_set3dColliderEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_set3dColliderEx(void * aClassPtr, AudioCollider * aCollider, int aUserData)$/;"	f
Bus_set3dDistanceDelay	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_set3dDistanceDelay(void * aClassPtr, int aDistanceDelay)$/;"	f
Bus_set3dDopplerFactor	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_set3dDopplerFactor(void * aClassPtr, float aDopplerFactor)$/;"	f
Bus_set3dListenerRelative	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_set3dListenerRelative(void * aClassPtr, int aListenerRelative)$/;"	f
Bus_set3dMinMaxDistance	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_set3dMinMaxDistance(void * aClassPtr, float aMinDistance, float aMaxDistance)$/;"	f
Bus_set3dProcessing	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_set3dProcessing(void * aClassPtr, int aDo3dProcessing)$/;"	f
Bus_setChannels	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Bus_setChannels(void * aClassPtr, unsigned int aChannels)$/;"	f
Bus_setFilter	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_setFilter(void * aClassPtr, unsigned int aFilterId, Filter * aFilter)$/;"	f
Bus_setInaudibleBehavior	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_setInaudibleBehavior(void * aClassPtr, int aMustTick, int aKill)$/;"	f
Bus_setLooping	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_setLooping(void * aClassPtr, int aLoop)$/;"	f
Bus_setVisualizationEnable	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_setVisualizationEnable(void * aClassPtr, int aEnable)$/;"	f
Bus_setVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_setVolume(void * aClassPtr, float aVolume)$/;"	f
Bus_stop	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Bus_stop(void * aClassPtr)$/;"	f
Button	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::Button(const char* label, const ImVec2& size_arg)$/;"	f	class:ImGui
Button6	thirdparty/glfw/src/x11_window.c	48;"	d	file:
Button7	thirdparty/glfw/src/x11_window.c	49;"	d	file:
ButtonBehavior	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::ButtonBehavior(const ImRect& bb, ImGuiID id, bool* out_hovered, bool* out_held, ImGuiButtonFlags flags)$/;"	f	class:ImGui
ButtonEx	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::ButtonEx(const char* label, const ImVec2& size_arg, ImGuiButtonFlags flags)$/;"	f	class:ImGui
ButtonRepeat	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    ButtonRepeat;           \/\/ == ButtonRepeatStack.back() [empty == false]$/;"	m	struct:ImGuiDrawContext
ButtonRepeatStack	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<bool>          ButtonRepeatStack;$/;"	m	struct:ImGuiDrawContext
ButtonTextAlign	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      ButtonTextAlign;            \/\/ Alignment of button text when button is larger than text. Defaults to (0.5f,0.5f) for horizontally+vertically centered.$/;"	m	struct:ImGuiStyle
C	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	B					: 66,$/;"	p	class:namespace.Codes
C	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   float *A[2],*B[2],*C[2];$/;"	m	struct:stb_vorbis	file:
C	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	4997;"	d	file:
C	thirdparty/stb/include/stb/stb_vorbis.c	/^   float *A[2],*B[2],*C[2];$/;"	m	struct:stb_vorbis	file:
C	thirdparty/stb/include/stb/stb_vorbis.c	5003;"	d	file:
CALLBACK	thirdparty/glfw/include/GLFW/glfw3.h	126;"	d
CALLBACK	thirdparty/glfw/include/GLFW/glfw3.h	4910;"	d
CAMERA_INCLUDED_D283F4AA_69AE_4E3F_9582_F363039E606B	lib/nil/include/nil/data/camera.hpp	2;"	d
CAMERA_INCLUDED_E9FEABA9_7360_4FF1_807A_5FB858855C17	lib/roa/include/roa/camera.hpp	2;"	d
CAPS_LOCK	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	PAUSE				: 19,$/;"	p	class:namespace.Codes
CASCADE_PARALLEL	thirdparty/soloud/src/audiosource/speech/klatt.h	6;"	d
CATCH_AND_THEN	thirdparty/catch/include/catch/catch.hpp	10367;"	d
CATCH_AND_WHEN	thirdparty/catch/include/catch/catch.hpp	10365;"	d
CATCH_ANON_TEST_CASE	thirdparty/catch/include/catch/catch.hpp	10348;"	d
CATCH_ARC_ENABLED	thirdparty/catch/include/catch/catch.hpp	1507;"	d
CATCH_ARC_STRONG	thirdparty/catch/include/catch/catch.hpp	1525;"	d
CATCH_ARC_STRONG	thirdparty/catch/include/catch/catch.hpp	1541;"	d
CATCH_AUTO_PTR	thirdparty/catch/include/catch/catch.hpp	305;"	d
CATCH_AUTO_PTR	thirdparty/catch/include/catch/catch.hpp	307;"	d
CATCH_BREAK_INTO_DEBUGGER	thirdparty/catch/include/catch/catch.hpp	2014;"	d
CATCH_BREAK_INTO_DEBUGGER	thirdparty/catch/include/catch/catch.hpp	2032;"	d
CATCH_CAPTURE	thirdparty/catch/include/catch/catch.hpp	10328;"	d
CATCH_CHECK	thirdparty/catch/include/catch/catch.hpp	10311;"	d
CATCH_CHECKED_ELSE	thirdparty/catch/include/catch/catch.hpp	10314;"	d
CATCH_CHECKED_IF	thirdparty/catch/include/catch/catch.hpp	10313;"	d
CATCH_CHECK_FALSE	thirdparty/catch/include/catch/catch.hpp	10312;"	d
CATCH_CHECK_NOFAIL	thirdparty/catch/include/catch/catch.hpp	10315;"	d
CATCH_CHECK_NOTHROW	thirdparty/catch/include/catch/catch.hpp	10320;"	d
CATCH_CHECK_THROWS	thirdparty/catch/include/catch/catch.hpp	10317;"	d
CATCH_CHECK_THROWS_AS	thirdparty/catch/include/catch/catch.hpp	10318;"	d
CATCH_CHECK_THROWS_WITH	thirdparty/catch/include/catch/catch.hpp	10319;"	d
CATCH_CONFIG_COLOUR_WINDOWS	thirdparty/catch/include/catch/catch.hpp	6982;"	d
CATCH_CONFIG_CONSOLE_WIDTH	thirdparty/catch/include/catch/catch.hpp	3471;"	d
CATCH_CONFIG_COUNTER	thirdparty/catch/include/catch/catch.hpp	273;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	thirdparty/catch/include/catch/catch.hpp	252;"	d
CATCH_CONFIG_CPP11_IS_ENUM	thirdparty/catch/include/catch/catch.hpp	255;"	d
CATCH_CONFIG_CPP11_LONG_LONG	thirdparty/catch/include/catch/catch.hpp	264;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	thirdparty/catch/include/catch/catch.hpp	249;"	d
CATCH_CONFIG_CPP11_NULLPTR	thirdparty/catch/include/catch/catch.hpp	246;"	d
CATCH_CONFIG_CPP11_OVERRIDE	thirdparty/catch/include/catch/catch.hpp	267;"	d
CATCH_CONFIG_CPP11_TUPLE	thirdparty/catch/include/catch/catch.hpp	258;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	thirdparty/catch/include/catch/catch.hpp	270;"	d
CATCH_CONFIG_MAIN	lib/lib/test/unit/main.cpp	4;"	d	file:
CATCH_CONFIG_MAIN	lib/math/test/unit/main.cpp	1;"	d	file:
CATCH_CONFIG_MAIN	lib/nil/test/unit/main.cpp	1;"	d	file:
CATCH_CONFIG_MAIN	lib/roa/test/unit/main.cpp	1;"	d	file:
CATCH_CONFIG_MAIN	lib/rov/test/unit/main.cpp	1;"	d	file:
CATCH_CONFIG_VARIADIC_MACROS	thirdparty/catch/include/catch/catch.hpp	261;"	d
CATCH_CPP11_OR_GREATER	thirdparty/catch/include/catch/catch.hpp	110;"	d
CATCH_FAIL	thirdparty/catch/include/catch/catch.hpp	10337;"	d
CATCH_GENERATE	thirdparty/catch/include/catch/catch.hpp	10353;"	d
CATCH_GIVEN	thirdparty/catch/include/catch/catch.hpp	10363;"	d
CATCH_IMPL	thirdparty/catch/include/catch/catch.hpp	47;"	d
CATCH_INFO	thirdparty/catch/include/catch/catch.hpp	10325;"	d
CATCH_INTERNAL_CONFIG_COUNTER	thirdparty/catch/include/catch/catch.hpp	197;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	thirdparty/catch/include/catch/catch.hpp	175;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	thirdparty/catch/include/catch/catch.hpp	216;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	thirdparty/catch/include/catch/catch.hpp	220;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	thirdparty/catch/include/catch/catch.hpp	232;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	thirdparty/catch/include/catch/catch.hpp	120;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	thirdparty/catch/include/catch/catch.hpp	174;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	thirdparty/catch/include/catch/catch.hpp	212;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	thirdparty/catch/include/catch/catch.hpp	116;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	thirdparty/catch/include/catch/catch.hpp	152;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	thirdparty/catch/include/catch/catch.hpp	169;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	thirdparty/catch/include/catch/catch.hpp	208;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	thirdparty/catch/include/catch/catch.hpp	236;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	thirdparty/catch/include/catch/catch.hpp	224;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	thirdparty/catch/include/catch/catch.hpp	170;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	thirdparty/catch/include/catch/catch.hpp	239;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	thirdparty/catch/include/catch/catch.hpp	188;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	thirdparty/catch/include/catch/catch.hpp	228;"	d
CATCH_INTERNAL_ERROR	thirdparty/catch/include/catch/catch.hpp	424;"	d
CATCH_INTERNAL_LINEINFO	thirdparty/catch/include/catch/catch.hpp	423;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	thirdparty/catch/include/catch/catch.hpp	124;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	thirdparty/catch/include/catch/catch.hpp	156;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	thirdparty/catch/include/catch/catch.hpp	277;"	d
CATCH_METHOD_AS_TEST_CASE	thirdparty/catch/include/catch/catch.hpp	10334;"	d
CATCH_NOEXCEPT	thirdparty/catch/include/catch/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	thirdparty/catch/include/catch/catch.hpp	282;"	d
CATCH_NOEXCEPT	thirdparty/catch/include/catch/catch.hpp	285;"	d
CATCH_NOEXCEPT_IS	thirdparty/catch/include/catch/catch.hpp	283;"	d
CATCH_NOEXCEPT_IS	thirdparty/catch/include/catch/catch.hpp	286;"	d
CATCH_NOT_IMPLEMENTED	thirdparty/catch/include/catch/catch.hpp	448;"	d
CATCH_NULL	thirdparty/catch/include/catch/catch.hpp	291;"	d
CATCH_NULL	thirdparty/catch/include/catch/catch.hpp	293;"	d
CATCH_OVERRIDE	thirdparty/catch/include/catch/catch.hpp	298;"	d
CATCH_OVERRIDE	thirdparty/catch/include/catch/catch.hpp	300;"	d
CATCH_PLATFORM_MAC	thirdparty/catch/include/catch/catch.hpp	1993;"	d
CATCH_REGISTER_LEGACY_REPORTER	thirdparty/catch/include/catch/catch.hpp	10351;"	d
CATCH_REGISTER_REPORTER	thirdparty/catch/include/catch/catch.hpp	10350;"	d
CATCH_REGISTER_TAG_ALIAS	thirdparty/catch/include/catch/catch.hpp	2716;"	d
CATCH_REGISTER_TEST_CASE	thirdparty/catch/include/catch/catch.hpp	10335;"	d
CATCH_REQUIRE	thirdparty/catch/include/catch/catch.hpp	10303;"	d
CATCH_REQUIRE_FALSE	thirdparty/catch/include/catch/catch.hpp	10304;"	d
CATCH_REQUIRE_NOTHROW	thirdparty/catch/include/catch/catch.hpp	10309;"	d
CATCH_REQUIRE_THAT	thirdparty/catch/include/catch/catch.hpp	10323;"	d
CATCH_REQUIRE_THROWS	thirdparty/catch/include/catch/catch.hpp	10306;"	d
CATCH_REQUIRE_THROWS_AS	thirdparty/catch/include/catch/catch.hpp	10307;"	d
CATCH_REQUIRE_THROWS_WITH	thirdparty/catch/include/catch/catch.hpp	10308;"	d
CATCH_SCENARIO	thirdparty/catch/include/catch/catch.hpp	10357;"	d
CATCH_SCENARIO_METHOD	thirdparty/catch/include/catch/catch.hpp	10358;"	d
CATCH_SCOPED_CAPTURE	thirdparty/catch/include/catch/catch.hpp	10329;"	d
CATCH_SCOPED_INFO	thirdparty/catch/include/catch/catch.hpp	10327;"	d
CATCH_SECTION	thirdparty/catch/include/catch/catch.hpp	10336;"	d
CATCH_SUCCEED	thirdparty/catch/include/catch/catch.hpp	10338;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	thirdparty/catch/include/catch/catch.hpp	3612;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	thirdparty/catch/include/catch/catch.hpp	4620;"	d
CATCH_TEST_CASE	thirdparty/catch/include/catch/catch.hpp	10332;"	d
CATCH_TEST_CASE_METHOD	thirdparty/catch/include/catch/catch.hpp	10333;"	d
CATCH_THEN	thirdparty/catch/include/catch/catch.hpp	10366;"	d
CATCH_TRANSLATE_EXCEPTION	thirdparty/catch/include/catch/catch.hpp	10426;"	d
CATCH_UNSAFE_UNRETAINED	thirdparty/catch/include/catch/catch.hpp	1524;"	d
CATCH_UNSAFE_UNRETAINED	thirdparty/catch/include/catch/catch.hpp	1540;"	d
CATCH_WARN	thirdparty/catch/include/catch/catch.hpp	10326;"	d
CATCH_WHEN	thirdparty/catch/include/catch/catch.hpp	10364;"	d
CBM8M_BIN_AREA_UNUSED	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_BIN_AREA_UNUSED,$/;"	e	enum:Cbm8binDumpHdr
CBM8M_BIN_AREA_UNUSED_HI	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_BIN_AREA_UNUSED_HI,$/;"	e	enum:Cbm8binDumpHdr
CBM8M_BIN_DATA	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_BIN_DATA$/;"	e	enum:Cbm8binDumpHdr
CBM8M_BIN_FIELDS	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_BIN_FIELDS,$/;"	e	enum:Cbm8binDumpHdr
CBM8M_BIN_HW_FLAGS	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_BIN_HW_FLAGS = 0,$/;"	e	enum:Cbm8binDumpHdr
CBM8M_BIN_INIT_ADDRESS	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_BIN_INIT_ADDRESS,$/;"	e	enum:Cbm8binDumpHdr
CBM8M_BIN_INIT_ADDRESS_HI	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_BIN_INIT_ADDRESS_HI,$/;"	e	enum:Cbm8binDumpHdr
CBM8M_BIN_LENGTH	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_BIN_LENGTH,$/;"	e	enum:Cbm8binDumpHdr
CBM8M_BIN_PLAY_ADDRESS	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_BIN_PLAY_ADDRESS,$/;"	e	enum:Cbm8binDumpHdr
CBM8M_BIN_PLAY_ADDRESS_HI	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_BIN_PLAY_ADDRESS_HI,$/;"	e	enum:Cbm8binDumpHdr
CBM8M_FIELD_BINDUMPS	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_FIELD_BINDUMPS = 1 << 2,$/;"	e	enum:Cbm8fields
CBM8M_FIELD_COMMENT	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_FIELD_COMMENT = 1 << 3$/;"	e	enum:Cbm8fields
CBM8M_FIELD_DEFAULT	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_FIELD_DEFAULT = 1 << 1,$/;"	e	enum:Cbm8fields
CBM8M_FIELD_SUBTUNES	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_FIELD_SUBTUNES = 1 << 0,$/;"	e	enum:Cbm8fields
CBM8M_HDR_FIELDS	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_HDR_FIELDS,$/;"	e	enum:Cbm8header
CBM8M_HDR_HWFLAGS	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_HDR_HWFLAGS,$/;"	e	enum:Cbm8header
CBM8M_HDR_MAGIC	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_HDR_MAGIC = 0,$/;"	e	enum:Cbm8header
CBM8M_HDR_PLATFORM	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_HDR_PLATFORM,$/;"	e	enum:Cbm8header
CBM8M_HDR_STRINGS	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_HDR_STRINGS$/;"	e	enum:Cbm8header
CBM8M_HDR_VERSION	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	CBM8M_HDR_VERSION = 5,$/;"	e	enum:Cbm8header
CC	app/blank/data/Makefile	/^  CC = gcc$/;"	m
CC	app/fps_walk/data/Makefile	/^  CC = gcc$/;"	m
CC	app/perils/data/Makefile	/^  CC = gcc$/;"	m
CC	app/they_never_pay/data/Makefile	/^  CC = gcc$/;"	m
CC	app/tiles/data/Makefile	/^  CC = gcc$/;"	m
CC	lib/math/data/Makefile	/^  CC = gcc$/;"	m
CC	lib/nau/data/Makefile	/^  CC = gcc$/;"	m
CC	lib/nil_aspects/data/Makefile	/^  CC = gcc$/;"	m
CC	lib/roa/data/Makefile	/^  CC = gcc$/;"	m
CC	lib/rov/data/Makefile	/^  CC = gcc$/;"	m
CC	thirdparty/catch/data/Makefile	/^  CC = gcc$/;"	m
CC	thirdparty/glfw/data/Makefile	/^  CC = gcc$/;"	m
CC	thirdparty/imgui/data/Makefile	/^  CC = gcc$/;"	m
CC	thirdparty/imguizmo/data/Makefile	/^  CC = gcc$/;"	m
CC	thirdparty/json/data/Makefile	/^  CC = gcc$/;"	m
CC	thirdparty/opengl/data/Makefile	/^  CC = gcc$/;"	m
CC	thirdparty/remotery/data/Makefile	/^  CC = gcc$/;"	m
CC	thirdparty/soloud/data/Makefile	/^  CC = gcc$/;"	m
CC	thirdparty/stb/data/Makefile	/^  CC = gcc$/;"	m
CC	thirdparty/tinydir/data/Makefile	/^  CC = gcc$/;"	m
CHANGEFILTERSTRUCT	thirdparty/glfw/src/win32_platform.h	/^} CHANGEFILTERSTRUCT, *PCHANGEFILTERSTRUCT;$/;"	t	typeref:struct:tagCHANGEFILTERSTRUCT
CHECK	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	604;"	d	file:
CHECK	thirdparty/stb/include/stb/stb_vorbis.c	602;"	d	file:
CHECK_THAT	thirdparty/catch/include/catch/catch.hpp	10322;"	d
CINTERFACE	thirdparty/remotery/src/Remotery.c	5477;"	d	file:
CLARA_AUTO_PTR	thirdparty/catch/include/catch/catch.hpp	3923;"	d
CLARA_CONFIG_CONSOLE_WIDTH	thirdparty/catch/include/catch/catch.hpp	3613;"	d
CLARA_CONFIG_CONSOLE_WIDTH	thirdparty/catch/include/catch/catch.hpp	3615;"	d
CLARA_CONFIG_CONSOLE_WIDTH	thirdparty/catch/include/catch/catch.hpp	4619;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	thirdparty/catch/include/catch/catch.hpp	3889;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	thirdparty/catch/include/catch/catch.hpp	3886;"	d
CLARA_CONFIG_CPP11_NULLPTR	thirdparty/catch/include/catch/catch.hpp	3883;"	d
CLARA_CONFIG_CPP11_OVERRIDE	thirdparty/catch/include/catch/catch.hpp	3892;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	thirdparty/catch/include/catch/catch.hpp	3895;"	d
CLARA_CONFIG_MAIN	thirdparty/catch/include/catch/catch.hpp	10295;"	d
CLARA_CONFIG_MAIN	thirdparty/catch/include/catch/catch.hpp	53;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	thirdparty/catch/include/catch/catch.hpp	52;"	d
CLARA_CPP11_OR_GREATER	thirdparty/catch/include/catch/catch.hpp	3858;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	thirdparty/catch/include/catch/catch.hpp	3847;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	thirdparty/catch/include/catch/catch.hpp	3869;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	thirdparty/catch/include/catch/catch.hpp	3818;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	thirdparty/catch/include/catch/catch.hpp	3846;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	thirdparty/catch/include/catch/catch.hpp	3865;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	thirdparty/catch/include/catch/catch.hpp	3814;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	thirdparty/catch/include/catch/catch.hpp	3828;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	thirdparty/catch/include/catch/catch.hpp	3841;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	thirdparty/catch/include/catch/catch.hpp	3861;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	thirdparty/catch/include/catch/catch.hpp	3873;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	thirdparty/catch/include/catch/catch.hpp	3842;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	thirdparty/catch/include/catch/catch.hpp	3876;"	d
CLARA_NOEXCEPT	thirdparty/catch/include/catch/catch.hpp	3900;"	d
CLARA_NOEXCEPT_IS	thirdparty/catch/include/catch/catch.hpp	3901;"	d
CLARA_NULL	thirdparty/catch/include/catch/catch.hpp	3909;"	d
CLARA_OVERRIDE	thirdparty/catch/include/catch/catch.hpp	3916;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	thirdparty/catch/include/catch/catch.hpp	4822;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	thirdparty/catch/include/catch/catch.hpp	4970;"	d
CLIPBOARD	thirdparty/glfw/src/x11_platform.h	/^    Atom            CLIPBOARD;$/;"	m	struct:_GLFWlibraryX11
CLIPBOARD_MANAGER	thirdparty/glfw/src/x11_platform.h	/^    Atom            CLIPBOARD_MANAGER;$/;"	m	struct:_GLFWlibraryX11
CLIP_ROUNDOFF	thirdparty/soloud/include/soloud/soloud.h	/^			CLIP_ROUNDOFF = 1,$/;"	e	enum:SoLoud::Soloud::FLAGS
CLOCK_REALTIME	thirdparty/glfw/src/deps/tinycthread.h	127;"	d
CLOSE_SQUARE_BRACKET	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	BACKSLASH			: 220,	\/\/ needs localization$/;"	p	class:namespace.Codes
COBJMACROS	thirdparty/remotery/src/Remotery.c	5483;"	d	file:
CODEBOOK_ELEMENT	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1715;"	d	file:
CODEBOOK_ELEMENT	thirdparty/stb/include/stb/stb_vorbis.c	1714;"	d	file:
CODEBOOK_ELEMENT_BASE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1717;"	d	file:
CODEBOOK_ELEMENT_BASE	thirdparty/stb/include/stb/stb_vorbis.c	1716;"	d	file:
CODEBOOK_ELEMENT_FAST	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1716;"	d	file:
CODEBOOK_ELEMENT_FAST	thirdparty/stb/include/stb/stb_vorbis.c	1715;"	d	file:
COIN	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^			COIN,$/;"	e	enum:SoLoud::Sfxr::SFXR_PRESETS
COLLECTION_INCLUDED_239746E1_A856_40BB_A04A_E8A60DAE1850	lib/roa/include/roa/collection.hpp	2;"	d
COLOR_INCLUDED_8F28E809_CA42_48F6_87FC_AD0CC5AF11C9	lib/roa/include/roa/color.hpp	2;"	d
COMMA	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	EQUALS				: 187,	\/\/ needs localization$/;"	p	class:namespace.Codes
COMMON_INCLUDED_EA2E7D59_6069_434A_B35C_2B65A84B48AA	lib/nil/src/interface/data/common.hpp	2;"	d
COMMON_INCLUDED_F1353393_9B85_497B_BC09_2A06241FB648	lib/roa/src/common/common.hpp	2;"	d
COMPONENT_ENGINE_INCLUDED_48A65884_BC7C_498B_88F6_16DAB59AA7BC	lib/roa/src/component/component_engine.hpp	2;"	d
COMPONENT_INCLUDED_229A81E7_5105_497A_8195_4E5F07CCCD82	lib/roa/include/roa/component.hpp	2;"	d
COMPONENT_INTERFACE_INCLUDED_F0F83D3B_3846_47C2_B376_BAA6B29BC7F6	lib/roa/include/roa/detail/component_interface.hpp	2;"	d
COMPOUND_STRING	thirdparty/glfw/src/x11_platform.h	/^    Atom            COMPOUND_STRING;$/;"	m	struct:_GLFWlibraryX11
COM_NO_WINDOWS_H	thirdparty/glfw/src/deps/mingw/dinput.h	22;"	d
CONST	lib/lib/include/lib/optimizations.hpp	38;"	d
CONST	lib/lib/include/lib/optimizations.hpp	41;"	d
CONSTANTS_INCLUDED_6E0D4485_BD6A_403B_894A_A2FE4A509E40	lib/math/include/math/general/constants.hpp	2;"	d
CONTEXT_INCLUDED_49C62A80_FFD2_4B61_99BC_CB916D39F629	lib/roa/src/common/context.hpp	2;"	d
CONTEXT_MENU	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	WIN_KEY_RIGHT		: 92,$/;"	p	class:namespace.Codes
CONVERSION_INCLUDED_229B07AC_052C_4587_A87F_5637FFB63E21	lib/lib/include/lib/convert.hpp	9;"	d
COREAUDIO	thirdparty/soloud/include/soloud/soloud.h	/^			COREAUDIO,$/;"	e	enum:SoLoud::Soloud::BACKENDS
CPOINT	thirdparty/glfw/src/deps/mingw/dinput.h	/^} CPOINT, *PCPOINT;$/;"	t	typeref:struct:_CPOINT
CPU	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^CPU::CPU( MemoryHandler *memhandler, unsigned char *irqreg, unsigned char *cpustack ) : mem(memhandler), irq_register(irqreg), stack(cpustack)$/;"	f	class:CPU
CPU	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^class CPU {$/;"	c
CRC32_POLY	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	947;"	d	file:
CRC32_POLY	thirdparty/stb/include/stb/stb_vorbis.c	945;"	d	file:
CRCscan	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} CRCscan;$/;"	t	typeref:struct:__anon211	file:
CRCscan	thirdparty/stb/include/stb/stb_vorbis.c	/^} CRCscan;$/;"	t	typeref:struct:__anon124	file:
CRTFree	thirdparty/remotery/src/Remotery.c	/^static void CRTFree(void* mm_context, void* ptr)$/;"	f	file:
CRTMalloc	thirdparty/remotery/src/Remotery.c	/^static void* CRTMalloc(void* mm_context, rmtU32 size)$/;"	f	file:
CRTRealloc	thirdparty/remotery/src/Remotery.c	/^static void* CRTRealloc(void* mm_context, void* ptr, rmtU32 size)$/;"	f	file:
CTRL	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	SHIFT				: 16,$/;"	p	class:namespace.Codes
CUBE	app/perils/src/data/data.hpp	/^  CUBE = 1,$/;"	m	class:Game_asset
CUBE_BEV	app/perils/src/data/data.hpp	/^  CUBE_BEV,$/;"	m	class:Game_asset
CUDAEnsureContext	thirdparty/remotery/src/Remotery.c	/^static rmtError CUDAEnsureContext()$/;"	f	file:
CUDAEventCreate	thirdparty/remotery/src/Remotery.c	/^static rmtError CUDAEventCreate(CUevent* phEvent, unsigned int Flags)$/;"	f	file:
CUDAEventDestroy	thirdparty/remotery/src/Remotery.c	/^static rmtError CUDAEventDestroy(CUevent hEvent)$/;"	f	file:
CUDAEventElapsedTime	thirdparty/remotery/src/Remotery.c	/^static rmtError CUDAEventElapsedTime(float* pMilliseconds, CUevent hStart, CUevent hEnd)$/;"	f	file:
CUDAEventQuery	thirdparty/remotery/src/Remotery.c	/^static rmtError CUDAEventQuery(CUevent hEvent)$/;"	f	file:
CUDAEventRecord	thirdparty/remotery/src/Remotery.c	/^static rmtError CUDAEventRecord(CUevent hEvent, void* hStream)$/;"	f	file:
CUDAGetContext	thirdparty/remotery/src/Remotery.c	/^static rmtError CUDAGetContext(void** context)$/;"	f	file:
CUDASample	thirdparty/remotery/src/Remotery.c	/^typedef struct CUDASample$/;"	s	file:
CUDASample	thirdparty/remotery/src/Remotery.c	/^} CUDASample;$/;"	t	typeref:struct:CUDASample	file:
CUDASample_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError CUDASample_Constructor(CUDASample* sample)$/;"	f	file:
CUDASample_Destructor	thirdparty/remotery/src/Remotery.c	/^static void CUDASample_Destructor(CUDASample* sample)$/;"	f	file:
CUDASetContext	thirdparty/remotery/src/Remotery.c	/^static rmtError CUDASetContext(void* context)$/;"	f	file:
CUDA_GUARD	thirdparty/remotery/src/Remotery.c	5229;"	d	file:
CUDA_MAKE_FUNCTION	thirdparty/remotery/src/Remotery.c	5224;"	d	file:
CXX	app/blank/data/Makefile	/^  CXX = g++$/;"	m
CXX	app/fps_walk/data/Makefile	/^  CXX = g++$/;"	m
CXX	app/perils/data/Makefile	/^  CXX = g++$/;"	m
CXX	app/they_never_pay/data/Makefile	/^  CXX = g++$/;"	m
CXX	app/tiles/data/Makefile	/^  CXX = g++$/;"	m
CXX	lib/math/data/Makefile	/^  CXX = g++$/;"	m
CXX	lib/nau/data/Makefile	/^  CXX = g++$/;"	m
CXX	lib/nil_aspects/data/Makefile	/^  CXX = g++$/;"	m
CXX	lib/roa/data/Makefile	/^  CXX = g++$/;"	m
CXX	lib/rov/data/Makefile	/^  CXX = g++$/;"	m
CXX	thirdparty/catch/data/Makefile	/^  CXX = g++$/;"	m
CXX	thirdparty/glfw/data/Makefile	/^  CXX = g++$/;"	m
CXX	thirdparty/imgui/data/Makefile	/^  CXX = g++$/;"	m
CXX	thirdparty/imguizmo/data/Makefile	/^  CXX = g++$/;"	m
CXX	thirdparty/json/data/Makefile	/^  CXX = g++$/;"	m
CXX	thirdparty/opengl/data/Makefile	/^  CXX = g++$/;"	m
CXX	thirdparty/remotery/data/Makefile	/^  CXX = g++$/;"	m
CXX	thirdparty/soloud/data/Makefile	/^  CXX = g++$/;"	m
CXX	thirdparty/stb/data/Makefile	/^  CXX = g++$/;"	m
CXX	thirdparty/tinydir/data/Makefile	/^  CXX = g++$/;"	m
C_INTEGER_DIVISION_TRUNCATES	thirdparty/stb/include/stb/stb_divide.h	108;"	d
C_INTEGER_DIVISION_TRUNCATES	thirdparty/stb/include/stb/stb_divide.h	126;"	d
C_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule C_rules[] =$/;"	v	file:
CalcExtraSpace	thirdparty/imgui/src/imgui.cpp	/^float ImGuiSimpleColumns::CalcExtraSpace(float avail_w)$/;"	f	class:ImGuiSimpleColumns
CalcFontSize	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWindowScale; }$/;"	f	struct:ImGuiWindow
CalcItemRectClosestPoint	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::CalcItemRectClosestPoint(const ImVec2& pos, bool on_edge, float outward)$/;"	f	class:ImGui
CalcItemSize	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::CalcItemSize(ImVec2 size, float default_x, float default_y)$/;"	f	class:ImGui
CalcItemWidth	thirdparty/imgui/src/imgui.cpp	/^float ImGui::CalcItemWidth()$/;"	f	class:ImGui
CalcListClipping	thirdparty/imgui/src/imgui.cpp	/^void ImGui::CalcListClipping(int items_count, float items_height, int* out_items_display_start, int* out_items_display_end)$/;"	f	class:ImGui
CalcTextSize	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::CalcTextSize(const char* text, const char* text_end, bool hide_text_after_double_hash, float wrap_width)$/;"	f	class:ImGui
CalcTextSizeA	thirdparty/imgui/src/imgui_draw.cpp	/^ImVec2 ImFont::CalcTextSizeA(float size, float max_width, float wrap_width, const char* text_begin, const char* text_end, const char** remaining) const$/;"	f	class:ImFont
CalcWordWrapPositionA	thirdparty/imgui/src/imgui_draw.cpp	/^const char* ImFont::CalcWordWrapPositionA(float scale, const char* text, const char* text_end, float wrap_width) const$/;"	f	class:ImFont
CalcWrapWidthForPos	thirdparty/imgui/src/imgui.cpp	/^float ImGui::CalcWrapWidthForPos(const ImVec2& pos, float wrap_pos_x)$/;"	f	class:ImGui
Camera	lib/nil/include/nil/data/camera.hpp	/^struct Camera$/;"	s	namespace:Nil::Data
Camera	lib/roa/include/roa/camera.hpp	/^class Camera : public Object$/;"	c	namespace:ROA
Camera	lib/roa/src/interface/camera.cpp	/^Camera::Camera()$/;"	f	class:ROA::Camera
Camera	lib/roa/src/interface/camera.cpp	/^Camera::Camera(const ROA_nullptr null)$/;"	f	class:ROA::Camera
Capacity	thirdparty/imgui/include/imgui/imgui.h	/^    int                         Capacity;$/;"	m	class:ImVector
CaptureKeyboardFromApp	thirdparty/imgui/src/imgui.cpp	/^void ImGui::CaptureKeyboardFromApp(bool capture)$/;"	f	class:ImGui
CaptureKeyboardNextFrame	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     CaptureKeyboardNextFrame;$/;"	m	struct:ImGuiContext
CaptureMouseFromApp	thirdparty/imgui/src/imgui.cpp	/^void ImGui::CaptureMouseFromApp(bool capture)$/;"	f	class:ImGui
CaptureMouseNextFrame	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     CaptureMouseNextFrame;              \/\/ explicit capture via CaptureInputs() sets those flags$/;"	m	struct:ImGuiContext
Cardinals	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static const char *Cardinals[] =$/;"	v	file:
CaseSensitive	thirdparty/catch/include/catch/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CasedString	thirdparty/catch/include/catch/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	thirdparty/catch/include/catch/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
Catch	thirdparty/catch/include/catch/catch.hpp	/^namespace Catch {$/;"	n
Cbm8binDumpHdr	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^enum Cbm8binDumpHdr {$/;"	g
Cbm8fields	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^enum Cbm8fields {$/;"	g
Cbm8header	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^enum Cbm8header {$/;"	g
CbmTune	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.cpp	/^CbmTune::CbmTune(void) : bufferPtr(0), buffer(0)$/;"	f	class:CbmTune
CbmTune	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^class CbmTune$/;"	c
ChangeMemBankSetup	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::ChangeMemBankSetup(bool romoff)$/;"	f	class:TED
ChangeWindowMessageFilterEx	thirdparty/glfw/src/win32_platform.h	/^        PFN_ChangeWindowMessageFilterEx ChangeWindowMessageFilterEx;$/;"	m	struct:_GLFWlibraryWin32::__anon156
ChannelsMerge	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::ChannelsMerge()$/;"	f	class:ImDrawList
ChannelsSetCurrent	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::ChannelsSetCurrent(int idx)$/;"	f	class:ImDrawList
ChannelsSplit	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::ChannelsSplit(int channels_count)$/;"	f	class:ImDrawList
CharacterCount	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static unsigned int	CharacterCount = 0;$/;"	v	file:
CharacterPosition	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static unsigned int	CharacterPosition;$/;"	v	file:
CharacterPositionReload	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static unsigned int	CharacterPositionReload;$/;"	v	file:
CharacterWindow	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static bool SideBorderFlipFlop, CharacterWindow;$/;"	v	file:
CheckStacksSize	thirdparty/imgui/src/imgui.cpp	/^static void CheckStacksSize(ImGuiWindow* window, bool write)$/;"	f	file:
CheckVFlag	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		virtual unsigned char CheckVFlag() { return (ST&0x40); };$/;"	f	class:CPU
Checkbox	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::Checkbox(const char* label, bool* v)$/;"	f	class:ImGui
CheckboxFlags	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::CheckboxFlags(const char* label, unsigned int* flags, unsigned int flags_value)$/;"	f	class:ImGui
ChildWindowComparer	thirdparty/imgui/src/imgui.cpp	/^static int ChildWindowComparer(const void* lhs, const void* rhs)$/;"	f	file:
ChildWindowRounding	thirdparty/imgui/include/imgui/imgui.h	/^    float       ChildWindowRounding;        \/\/ Radius of child window corners rounding. Set to 0.0f to have rectangular windows$/;"	m	struct:ImGuiStyle
ChildWindows	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImGuiWindow*>  ChildWindows;$/;"	m	struct:ImGuiDrawContext
Choice	thirdparty/catch/include/catch/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Clamp	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   template <typename T> T Clamp(T x, T y, T z) { return ((x<y) ? y : ((x>z) ? z : x)); }$/;"	f	namespace:ImGuizmo
Class	thirdparty/soloud/src/tools/codegen/main.cpp	/^struct Class$/;"	s	file:
Clear	thirdparty/imgui/include/imgui/imgui.h	/^    void                Clear() { InputBuf[0] = 0; Build(); }$/;"	f	struct:ImGuiTextFilter
Clear	thirdparty/imgui/src/imgui.cpp	/^void ImGuiStorage::Clear()$/;"	f	class:ImGuiStorage
Clear	thirdparty/imgui/src/imgui_draw.cpp	/^void    ImFont::Clear()$/;"	f	class:ImFont
Clear	thirdparty/imgui/src/imgui_draw.cpp	/^void    ImFontAtlas::Clear()$/;"	f	class:ImFontAtlas
Clear	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::Clear()$/;"	f	class:ImDrawList
ClearActiveID	thirdparty/imgui/src/imgui.cpp	/^void ImGui::ClearActiveID()$/;"	f	class:ImGui
ClearFonts	thirdparty/imgui/src/imgui_draw.cpp	/^void    ImFontAtlas::ClearFonts()$/;"	f	class:ImFontAtlas
ClearFreeMemory	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::ClearFreeMemory()$/;"	f	class:ImDrawList
ClearInputCharacters	thirdparty/imgui/include/imgui/imgui.h	/^    inline void    ClearInputCharacters() { InputCharacters[0] = 0; }   \/\/ Clear the text input buffer manually$/;"	f	struct:ImGuiIO
ClearInputData	thirdparty/imgui/src/imgui_draw.cpp	/^void    ImFontAtlas::ClearInputData()$/;"	f	class:ImFontAtlas
ClearSelection	thirdparty/imgui/include/imgui/imgui_internal.h	/^    void                ClearSelection()            { StbState.select_start = StbState.select_end = StbState.cursor; }$/;"	f	struct:ImGuiTextEditState
ClearSetNextWindowData	thirdparty/imgui/src/imgui.cpp	/^static inline void ClearSetNextWindowData()$/;"	f	file:
ClearTexData	thirdparty/imgui/src/imgui_draw.cpp	/^void    ImFontAtlas::ClearTexData()$/;"	f	class:ImFontAtlas
ClearVFlag	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		inline virtual void ClearVFlag() { ST&=0xBF; };$/;"	f	class:CPU
Clip	thirdparty/imgui/include/imgui/imgui_internal.h	/^    void        Clip(const ImRect& clip)        { if (Min.x < clip.Min.x) Min.x = clip.Min.x; if (Min.y < clip.Min.y) Min.y = clip.Min.y; if (Max.x > clip.Max.x) Max.x = clip.Max.x; if (Max.y > clip.Max.y) Max.y = clip.Max.y; }$/;"	f	struct:ImRect
ClipRect	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec4          ClipRect;               \/\/ Clipping rectangle (x1, y1, x2, y2)$/;"	m	struct:ImDrawCmd
ClipRect	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImRect                  ClipRect;                           \/\/ = DrawList->clip_rect_stack.back(). Scissoring \/ clipping rectangle. x1, y1, x2, y2.$/;"	m	struct:ImGuiWindow
ClipboardUserData	thirdparty/imgui/include/imgui/imgui.h	/^    void*       ClipboardUserData;$/;"	m	struct:ImGuiIO
ClockCycle	thirdparty/soloud/src/tools/tedsid2dump/types.h	/^typedef unsigned __int64 ClockCycle;$/;"	t
ClockCycle	thirdparty/soloud/src/tools/tedsid2dump/types.h	/^typedef unsigned long long ClockCycle;$/;"	t
ClockingState	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static unsigned int	ClockingState;$/;"	v	file:
CloseButton	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::CloseButton(ImGuiID id, const ImVec2& pos, float radius)$/;"	f	class:ImGui
CloseCurrentPopup	thirdparty/imgui/src/imgui.cpp	/^void ImGui::CloseCurrentPopup()$/;"	f	class:ImGui
CloseInactivePopups	thirdparty/imgui/src/imgui.cpp	/^static void CloseInactivePopups()$/;"	f	file:
ClosePopup	thirdparty/imgui/src/imgui.cpp	/^static void ClosePopup(ImGuiID id)$/;"	f	file:
ClosePopupToLevel	thirdparty/imgui/src/imgui.cpp	/^static void ClosePopupToLevel(int remaining)$/;"	f	file:
CmdBuffer	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<ImDrawCmd>     CmdBuffer;          \/\/ Commands. Typically 1 command = 1 gpu draw call.$/;"	m	struct:ImDrawList
CmdBuffer	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<ImDrawCmd>     CmdBuffer;$/;"	m	struct:ImDrawChannel
CmdLists	thirdparty/imgui/include/imgui/imgui.h	/^    ImDrawList**    CmdLists;$/;"	m	struct:ImDrawData
CmdListsCount	thirdparty/imgui/include/imgui/imgui.h	/^    int             CmdListsCount;$/;"	m	struct:ImDrawData
Codebook	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} Codebook;$/;"	t	typeref:struct:__anon203	file:
Codebook	thirdparty/stb/include/stb/stb_vorbis.c	/^} Codebook;$/;"	t	typeref:struct:__anon116	file:
Codepoint	thirdparty/imgui/include/imgui/imgui.h	/^        ImWchar                 Codepoint;$/;"	m	struct:ImFont::Glyph
Col	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiCol    Col;$/;"	m	struct:ImGuiColMod
Collapsed	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    Collapsed;                          \/\/ Set when collapsing window to become only title-bar$/;"	m	struct:ImGuiWindow
Collapsed	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool        Collapsed;$/;"	m	struct:ImGuiIniData
CollapsingHeader	thirdparty/imgui/include/imgui/imgui.h	/^    static inline bool      CollapsingHeader(const char* label, const char* str_id, bool framed = true, bool default_open = false) { (void)str_id; (void)framed; ImGuiTreeNodeFlags default_open_flags = 1<<5; return CollapsingHeader(label, (default_open ? default_open_flags : 0)); } \/\/ OBSOLETE 1.49+$/;"	f	namespace:ImGui
CollapsingHeader	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::CollapsingHeader(const char* label, ImGuiTreeNodeFlags flags)$/;"	f	class:ImGui
CollapsingHeader	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::CollapsingHeader(const char* label, bool* p_open, ImGuiTreeNodeFlags flags)$/;"	f	class:ImGui
Collection	lib/roa/src/interface/collection.cpp	/^Collection::Collection()$/;"	f	class:ROA::Collection
Collection	lib/roa/src/interface/collection.cpp	/^Collection::Collection(Collection &&other)$/;"	f	class:ROA::Collection
Collection	lib/roa/src/interface/collection.cpp	/^Collection::Collection(const Collection &other)$/;"	f	class:ROA::Collection
Collection	lib/roa/src/interface/collection.cpp	/^Collection::Collection(const Object *obj, const size_t count)$/;"	f	class:ROA::Collection
Color	lib/roa/src/interface/color.cpp	/^Color::Color()$/;"	f	class:ROA::Color
Color	lib/roa/src/interface/color.cpp	/^Color::Color(const float rgba[])$/;"	f	class:ROA::Color
Color	lib/roa/src/interface/color.cpp	/^Color::Color(const uint32_t hex)$/;"	f	class:ROA::Color
Color	lib/roa/src/interface/color.cpp	/^Color::Color(const uint8_t rgba[])$/;"	f	class:ROA::Color
Color	lib/roa/src/interface/color.cpp	/^Color::Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a)$/;"	f	class:ROA::Color
ColorButton	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::ColorButton(const ImVec4& col, bool small_height, bool outline_border)$/;"	f	class:ImGui
ColorConvertFloat4ToU32	thirdparty/imgui/src/imgui.cpp	/^ImU32 ImGui::ColorConvertFloat4ToU32(const ImVec4& in)$/;"	f	class:ImGui
ColorConvertHSVtoRGB	thirdparty/imgui/src/imgui.cpp	/^void ImGui::ColorConvertHSVtoRGB(float h, float s, float v, float& out_r, float& out_g, float& out_b)$/;"	f	class:ImGui
ColorConvertRGBtoHSV	thirdparty/imgui/src/imgui.cpp	/^void ImGui::ColorConvertRGBtoHSV(float r, float g, float b, float& out_h, float& out_s, float& out_v)$/;"	f	class:ImGui
ColorConvertU32ToFloat4	thirdparty/imgui/src/imgui.cpp	/^ImVec4 ImGui::ColorConvertU32ToFloat4(ImU32 in)$/;"	f	class:ImGui
ColorEdit3	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::ColorEdit3(const char* label, float col[3])$/;"	f	class:ImGui
ColorEdit4	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::ColorEdit4(const char* label, float col[4], bool alpha)$/;"	f	class:ImGui
ColorEditMode	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiColorEditMode      ColorEditMode;$/;"	m	struct:ImGuiDrawContext
ColorEditMode	thirdparty/imgui/src/imgui.cpp	/^void ImGui::ColorEditMode(ImGuiColorEditMode mode)$/;"	f	class:ImGui
ColorEditModeStorage	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiStorage            ColorEditModeStorage;               \/\/ Store user selection of color edit mode$/;"	m	struct:ImGuiContext
ColorModifiers	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImGuiColMod>   ColorModifiers;                     \/\/ Stack for PushStyleColor()\/PopStyleColor()$/;"	m	struct:ImGuiContext
Colors	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec4      Colors[ImGuiCol_COUNT];$/;"	m	struct:ImGuiStyle
Columns	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Columns(int columns_count, const char* id, bool border)$/;"	f	class:ImGui
ColumnsCellMaxY	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   ColumnsCellMaxY;$/;"	m	struct:ImGuiDrawContext
ColumnsCellMinY	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   ColumnsCellMinY;$/;"	m	struct:ImGuiDrawContext
ColumnsCount	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     ColumnsCount;$/;"	m	struct:ImGuiDrawContext
ColumnsCurrent	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     ColumnsCurrent;$/;"	m	struct:ImGuiDrawContext
ColumnsData	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImGuiColumnData> ColumnsData;$/;"	m	struct:ImGuiDrawContext
ColumnsMaxX	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   ColumnsMaxX;$/;"	m	struct:ImGuiDrawContext
ColumnsMinSpacing	thirdparty/imgui/include/imgui/imgui.h	/^    float       ColumnsMinSpacing;          \/\/ Minimum horizontal spacing between two columns$/;"	m	struct:ImGuiStyle
ColumnsMinX	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   ColumnsMinX;$/;"	m	struct:ImGuiDrawContext
ColumnsOffsetX	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   ColumnsOffsetX;         \/\/ Offset to the current column (if ColumnsCurrent > 0). FIXME: This and the above should be a stack to allow use cases like Tree->Column->Tree. Need revamp columns API.$/;"	m	struct:ImGuiDrawContext
ColumnsSetId	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID                 ColumnsSetId;$/;"	m	struct:ImGuiDrawContext
ColumnsShowBorders	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    ColumnsShowBorders;$/;"	m	struct:ImGuiDrawContext
ColumnsStartPosY	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   ColumnsStartPosY;$/;"	m	struct:ImGuiDrawContext
Combo	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::Combo(const char* label, int* current_item, bool (*items_getter)(void*, int, const char**), void* data, int items_count, int height_in_items)$/;"	f	class:ImGui
Combo	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::Combo(const char* label, int* current_item, const char* const* items, int items_count, int height_in_items)$/;"	f	class:ImGui
Combo	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::Combo(const char* label, int* current_item, const char* items_separated_by_zeros, int height_in_items)$/;"	f	class:ImGui
Component	lib/roa/include/roa/component.hpp	/^class Component$/;"	c	namespace:ROA
Component	lib/roa/src/interface/component.cpp	/^Component::Component()$/;"	f	class:ROA::Component
ComputeAngleOnPlan	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static float ComputeAngleOnPlan()$/;"	f	namespace:ImGuizmo
ComputeCameraRay	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void ComputeCameraRay(vec_t &rayOrigin, vec_t &rayDir)$/;"	f	namespace:ImGuizmo
ComputeColors	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void ComputeColors(ImU32 *colors, int type, OPERATION operation)$/;"	f	namespace:ImGuizmo
ComputeContext	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void ComputeContext(const float *view, const float *projection, float *matrix, MODE mode)$/;"	f	namespace:ImGuizmo
ComputeSnap	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void ComputeSnap(float*value, float snap)$/;"	f	namespace:ImGuizmo
ComputeSnap	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void ComputeSnap(vec_t& value, float *snap)$/;"	f	namespace:ImGuizmo
ComputeTripodAxisAndVisibility	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void ComputeTripodAxisAndVisibility(int axisIndex, vec_t& dirPlaneX, vec_t& dirPlaneY, bool& belowAxisLimit, bool& belowPlaneLimit)$/;"	f	namespace:ImGuizmo
ConfigData	thirdparty/imgui/include/imgui/imgui.h	/^    ImFontConfig*               ConfigData;         \/\/              \/\/ Pointer within ContainerAtlas->ConfigData$/;"	m	struct:ImFont
ConfigData	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<ImFontConfig>      ConfigData;         \/\/ Internal data$/;"	m	struct:ImFontAtlas
ConfigDataCount	thirdparty/imgui/include/imgui/imgui.h	/^    short                       ConfigDataCount;    \/\/ ~ 1          \/\/ Number of ImFontConfig involved in creating this font. Bigger than 1 when merging multiple font sources into one ImFont.$/;"	m	struct:ImFont
ContainerAtlas	thirdparty/imgui/include/imgui/imgui.h	/^    ImFontAtlas*                ContainerAtlas;     \/\/              \/\/ What we has been loaded into$/;"	m	struct:ImFont
Contains	thirdparty/catch/include/catch/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	thirdparty/catch/include/catch/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	thirdparty/catch/include/catch/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	thirdparty/catch/include/catch/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	thirdparty/catch/include/catch/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool        Contains(const ImRect& r) const { return r.Min.x >= Min.x && r.Min.y >= Min.y && r.Max.x < Max.x && r.Max.y < Max.y; }$/;"	f	struct:ImRect
Contains	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool        Contains(const ImVec2& p) const { return p.x >= Min.x     && p.y >= Min.y     && p.x < Max.x     && p.y < Max.y; }$/;"	f	struct:ImRect
ContentsRegionRect	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImRect                  ContentsRegionRect;                 \/\/ Maximum visible content position in window coordinates. ~~ (SizeContentsExplicit ? SizeContentsExplicit : Size - ScrollbarSizes) - CursorStartPos, per axis$/;"	m	struct:ImGuiWindow
Context	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      Context() : mbUsing(false), mbEnable(true), mbUsingBounds(false)$/;"	f	struct:ImGuizmo::Context
Context	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   struct Context$/;"	s	namespace:ImGuizmo	file:
ContinueOnFailure	thirdparty/catch/include/catch/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
Convert.Uint8Array_to_b64string	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Convert.js	/^}$/;"	f
Convert.Uint8Array_to_string	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Convert.js	/^}$/;"	f
Convert.b64string_to_Uint8Array	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Convert.js	/^}$/;"	f
Convert.b64string_to_utf8string	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Convert.js	/^}$/;"	f
Convert.string_to_Uint8Array	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Convert.js	/^}$/;"	f
Convert.utf8string_to_b64string	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Convert.js	/^namespace("Convert");$/;"	f
CopyCurrentKeyboardLayoutInputSource	thirdparty/glfw/src/cocoa_platform.h	/^        PFN_TISCopyCurrentKeyboardLayoutInputSource CopyCurrentKeyboardLayoutInputSource;$/;"	m	struct:_GLFWlibraryNS::__anon142
CopyableStream	thirdparty/catch/include/catch/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	thirdparty/catch/include/catch/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	thirdparty/catch/include/catch/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
Count	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int         Count;$/;"	m	struct:ImGuiSimpleColumns
CountGrep	thirdparty/imgui/include/imgui/imgui.h	/^    int                 CountGrep;$/;"	m	struct:ImGuiTextFilter
Create	thirdparty/glfw/src/win32_platform.h	/^        PFN_DirectInput8Create          Create;$/;"	m	struct:_GLFWlibraryWin32::__anon154
CreateContext	thirdparty/glfw/src/egl_context.h	/^    PFN_eglCreateContext        CreateContext;$/;"	m	struct:_GLFWlibraryEGL
CreateContext	thirdparty/glfw/src/wgl_context.h	/^    PFN_wglCreateContext                CreateContext;$/;"	m	struct:_GLFWlibraryWGL
CreateContext	thirdparty/imgui/src/imgui.cpp	/^ImGuiContext* ImGui::CreateContext(void* (*malloc_fn)(size_t), void (*free_fn)(void*))$/;"	f	class:ImGui
CreateContextAttribs	thirdparty/glfw/src/osmesa_context.h	/^    PFN_OSMesaCreateContextAttribs  CreateContextAttribs;$/;"	m	struct:_GLFWlibraryOSMesa
CreateContextAttribsARB	thirdparty/glfw/src/glx_context.h	/^    PFNGLXCREATECONTEXTATTRIBSARBPROC   CreateContextAttribsARB;$/;"	m	struct:_GLFWlibraryGLX
CreateContextAttribsARB	thirdparty/glfw/src/wgl_context.h	/^    PFNWGLCREATECONTEXTATTRIBSARBPROC   CreateContextAttribsARB;$/;"	m	struct:_GLFWlibraryWGL
CreateContextExt	thirdparty/glfw/src/osmesa_context.h	/^    PFN_OSMesaCreateContextExt      CreateContextExt;$/;"	m	struct:_GLFWlibraryOSMesa
CreateFileMapping	thirdparty/remotery/src/Remotery.c	85;"	d	file:
CreateNewContext	thirdparty/glfw/src/glx_context.h	/^    PFNGLXCREATENEWCONTEXTPROC          CreateNewContext;$/;"	m	struct:_GLFWlibraryGLX
CreateNewWindow	thirdparty/imgui/src/imgui.cpp	/^static ImGuiWindow* CreateNewWindow(const char* name, ImVec2 size, ImGuiWindowFlags flags)$/;"	f	file:
CreateWindow	thirdparty/glfw/src/glx_context.h	/^    PFNGLXCREATEWINDOWPROC              CreateWindow;$/;"	m	struct:_GLFWlibraryGLX
CreateWindowSurface	thirdparty/glfw/src/egl_context.h	/^    PFN_eglCreateWindowSurface  CreateWindowSurface;$/;"	m	struct:_GLFWlibraryEGL
Cross	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void Cross(const vec_t& v)$/;"	f	struct:ImGuizmo::vec_t
Cross	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void Cross(const vec_t& v1, const vec_t& v2)$/;"	f	struct:ImGuizmo::vec_t
Cross	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   vec_t Cross(const vec_t& v1, const vec_t& v2)$/;"	f	namespace:ImGuizmo
CtxGetCurrent	thirdparty/remotery/include/remotery/Remotery.h	/^    void* CtxGetCurrent;$/;"	m	struct:rmtCUDABind
CtxSetCurrent	thirdparty/remotery/include/remotery/Remotery.h	/^    void* CtxSetCurrent;$/;"	m	struct:rmtCUDABind
CurLenA	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                 CurLenA, CurLenW;           \/\/ we need to maintain our buffer length in both UTF-8 and wchar format.$/;"	m	struct:ImGuiTextEditState
CurLenW	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                 CurLenA, CurLenW;           \/\/ we need to maintain our buffer length in both UTF-8 and wchar format.$/;"	m	struct:ImGuiTextEditState
CurrentLineHeight	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   CurrentLineHeight;$/;"	m	struct:ImGuiDrawContext
CurrentLineTextBaseOffset	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   CurrentLineTextBaseOffset;$/;"	m	struct:ImGuiDrawContext
CurrentPopupStack	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImGuiPopupRef> CurrentPopupStack;                  \/\/ Which level of BeginPopup() we are in (reset every frame)$/;"	m	struct:ImGuiContext
CurrentSize	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2  CurrentSize;    \/\/ Read-only.	Current window size.$/;"	m	struct:ImGuiSizeConstraintCallbackData
CurrentWindow	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiWindow*            CurrentWindow;                      \/\/ Being drawn into$/;"	m	struct:ImGuiContext
CurrentWindowStack	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImGuiWindow*>  CurrentWindowStack;$/;"	m	struct:ImGuiContext
CursorAnim	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float               CursorAnim;$/;"	m	struct:ImGuiTextEditState
CursorAnimReset	thirdparty/imgui/include/imgui/imgui_internal.h	/^    void                CursorAnimReset()           { CursorAnim = -0.30f; }                                   \/\/ After a user-input the cursor stays on for a while without blinking$/;"	f	struct:ImGuiTextEditState
CursorClamp	thirdparty/imgui/include/imgui/imgui_internal.h	/^    void                CursorClamp()               { StbState.cursor = ImMin(StbState.cursor, CurLenW); StbState.select_start = ImMin(StbState.select_start, CurLenW); StbState.select_end = ImMin(StbState.select_end, CurLenW); }$/;"	f	struct:ImGuiTextEditState
CursorFollow	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                CursorFollow;$/;"	m	struct:ImGuiTextEditState
CursorMaxPos	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  CursorMaxPos;           \/\/ Implicitly calculate the size of our contents, always extending. Saved into window->SizeContents at the end of the frame$/;"	m	struct:ImGuiDrawContext
CursorPos	thirdparty/imgui/include/imgui/imgui.h	/^    int                 CursorPos;      \/\/                                      \/\/ Read-write$/;"	m	struct:ImGuiTextEditCallbackData
CursorPos	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  CursorPos;$/;"	m	struct:ImGuiDrawContext
CursorPosPrevLine	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  CursorPosPrevLine;$/;"	m	struct:ImGuiDrawContext
CursorStartPos	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  CursorStartPos;$/;"	m	struct:ImGuiDrawContext
CurveTessellationTol	thirdparty/imgui/include/imgui/imgui.h	/^    float       CurveTessellationTol;       \/\/ Tessellation tolerance. Decrease for highly tessellated curves (higher quality, more polygons), increase to reduce quality.$/;"	m	struct:ImGuiStyle
CycleCounter	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^ClockCycle TED::CycleCounter;$/;"	m	class:TED	file:
CycleCounter	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	static ClockCycle CycleCounter;$/;"	m	class:TED
D	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	C					: 67,$/;"	p	class:namespace.Codes
D3D11	thirdparty/remotery/src/Remotery.c	/^typedef struct D3D11 D3D11;$/;"	t	typeref:struct:D3D11	file:
D3D11	thirdparty/remotery/src/Remotery.c	/^typedef struct D3D11$/;"	s	file:
D3D11	thirdparty/remotery/src/Remotery.c	/^} D3D11;$/;"	t	typeref:struct:D3D11	file:
D3D11Sample	thirdparty/remotery/src/Remotery.c	/^typedef struct D3D11Sample$/;"	s	file:
D3D11Sample	thirdparty/remotery/src/Remotery.c	/^} D3D11Sample;$/;"	t	typeref:struct:D3D11Sample	file:
D3D11Sample_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError D3D11Sample_Constructor(D3D11Sample* sample)$/;"	f	file:
D3D11Sample_Destructor	thirdparty/remotery/src/Remotery.c	/^static void D3D11Sample_Destructor(D3D11Sample* sample)$/;"	f	file:
D3D11Timestamp	thirdparty/remotery/src/Remotery.c	/^typedef struct D3D11Timestamp$/;"	s	file:
D3D11Timestamp	thirdparty/remotery/src/Remotery.c	/^} D3D11Timestamp;$/;"	t	typeref:struct:D3D11Timestamp	file:
D3D11Timestamp_Begin	thirdparty/remotery/src/Remotery.c	/^static void D3D11Timestamp_Begin(D3D11Timestamp* stamp, ID3D11DeviceContext* context)$/;"	f	file:
D3D11Timestamp_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError D3D11Timestamp_Constructor(D3D11Timestamp* stamp)$/;"	f	file:
D3D11Timestamp_Destructor	thirdparty/remotery/src/Remotery.c	/^static void D3D11Timestamp_Destructor(D3D11Timestamp* stamp)$/;"	f	file:
D3D11Timestamp_End	thirdparty/remotery/src/Remotery.c	/^static void D3D11Timestamp_End(D3D11Timestamp* stamp, ID3D11DeviceContext* context)$/;"	f	file:
D3D11Timestamp_GetData	thirdparty/remotery/src/Remotery.c	/^static HRESULT D3D11Timestamp_GetData(D3D11Timestamp* stamp, ID3D11DeviceContext* context, rmtU64* out_start, rmtU64* out_end, rmtU64* out_first_timestamp)$/;"	f	file:
D3D11_Create	thirdparty/remotery/src/Remotery.c	/^static rmtError D3D11_Create(D3D11** d3d11)$/;"	f	file:
D3D11_Destructor	thirdparty/remotery/src/Remotery.c	/^static void D3D11_Destructor(D3D11* d3d11)$/;"	f	file:
D3D11_NO_HELPERS	thirdparty/remotery/src/Remotery.c	5480;"	d	file:
D3DCOLOR	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef DWORD D3DCOLOR;$/;"	t
D3DCOLOR_DEFINED	thirdparty/glfw/src/deps/mingw/dinput.h	1354;"	d
DARRAY_H	thirdparty/soloud/src/audiosource/speech/darray.h	2;"	d
DASH	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	SEMICOLON			: 186,	\/\/ needs localization$/;"	p	class:namespace.Codes
DAStatus	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             DAStatus;$/;"	m	class:TED
DAStatus	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static int             DAStatus;$/;"	v	file:
DATA_INCLUDED_11123723_9BFD_44E2_AD4D_3D8E03D0426C	app/perils/src/data/data.hpp	2;"	d
DATA_INCLUDED_B01BD65D_BDE2_4ED3_A8A7_70A01CB0B2E9	lib/nil/include/nil/data/data.hpp	7;"	d
DATA_INCLUDED_EC5AD2F3_79FA_4DF2_A66E_E49EA376C478	lib/nil/src/internal_data/internal_data.hpp	2;"	d
DBtoLIN	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^static float DBtoLIN(int dB)$/;"	f	file:
DC	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiDrawContext        DC;                                 \/\/ Temporary per-window data, reset at the beginning of the frame$/;"	m	struct:ImGuiWindow
DCRemovalFilter	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * DCRemovalFilter;$/;"	t
DCRemovalFilter	thirdparty/soloud/include/soloud/soloud_dcremovalfilter.h	/^	class DCRemovalFilter : public Filter$/;"	c	namespace:SoLoud
DCRemovalFilter	thirdparty/soloud/src/filter/soloud_dcremovalfilter.cpp	/^	DCRemovalFilter::DCRemovalFilter()$/;"	f	class:SoLoud::DCRemovalFilter
DCRemovalFilterInstance	thirdparty/soloud/include/soloud/soloud_dcremovalfilter.h	/^	class DCRemovalFilterInstance : public FilterInstance$/;"	c	namespace:SoLoud
DCRemovalFilterInstance	thirdparty/soloud/src/filter/soloud_dcremovalfilter.cpp	/^	DCRemovalFilterInstance::DCRemovalFilterInstance(DCRemovalFilter *aParent)$/;"	f	class:SoLoud::DCRemovalFilterInstance
DCRemovalFilter_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * DCRemovalFilter_create()$/;"	f
DCRemovalFilter_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void DCRemovalFilter_destroy(void * aClassPtr)$/;"	f
DCRemovalFilter_setParams	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int DCRemovalFilter_setParams(void * aClassPtr)$/;"	f
DCRemovalFilter_setParamsEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int DCRemovalFilter_setParamsEx(void * aClassPtr, float aLength)$/;"	f
DEBUG_LINE_RENDERER	lib/roa/include/roa/shader_type.hpp	/^  DEBUG_LINE_RENDERER,$/;"	m	class:ROA::Shader_type
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInput2A,IDirectInputA)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInput2W,IDirectInputW)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInput7A,IDirectInput2A)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInput7W,IDirectInput2W)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInput8A,IUnknown)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInput8W,IUnknown)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputA,IUnknown)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDevice2A,IDirectInputDeviceA)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDevice2W,IDirectInputDeviceW)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDevice7A,IDirectInputDevice2A)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDevice7W,IDirectInputDevice2W)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDevice8A,IDirectInputDevice7A)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDevice8W,IDirectInputDevice7W)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDeviceA,IUnknown)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputDeviceW,IUnknown)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputEffect,IUnknown)$/;"	f
DECLARE_INTERFACE_	thirdparty/glfw/src/deps/mingw/dinput.h	/^DECLARE_INTERFACE_(IDirectInputW,IUnknown)$/;"	f
DECL_WINELIB_TYPE_AW	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	112;"	d
DECL_WINELIB_TYPE_AW	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	114;"	d
DECODE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1698;"	d	file:
DECODE	thirdparty/stb/include/stb/stb_vorbis.c	1697;"	d	file:
DECODE_RAW	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1661;"	d	file:
DECODE_RAW	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1694;"	d	file:
DECODE_RAW	thirdparty/stb/include/stb/stb_vorbis.c	1660;"	d	file:
DECODE_RAW	thirdparty/stb/include/stb/stb_vorbis.c	1693;"	d	file:
DECODE_VQ	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1703;"	d	file:
DECODE_VQ	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1705;"	d	file:
DECODE_VQ	thirdparty/stb/include/stb/stb_vorbis.c	1702;"	d	file:
DECODE_VQ	thirdparty/stb/include/stb/stb_vorbis.c	1704;"	d	file:
DEG2RAD	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const float DEG2RAD = (ZPI \/ 180.f);$/;"	m	namespace:ImGuizmo	file:
DELAY	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^			DELAY,$/;"	e	enum:SoLoud::FlangerFilter::FILTERPARAMS
DELETE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	INSERT				: 45,	\/\/ also NUM_INSERT$/;"	p	class:namespace.Codes
DETAIL_INCLUDED_738ADE13_1093_4593_AF81_2F9CB58DAE42	lib/math/include/math/detail/detail.hpp	2;"	d
DEVELOPER_INCLUDED_B9198F1D_13AB_44EF_BFDF_8FC95C73471F	lib/nil/include/nil/data/developer.hpp	8;"	d
DI8DEVCLASS_ALL	thirdparty/glfw/src/deps/mingw/dinput.h	230;"	d
DI8DEVCLASS_DEVICE	thirdparty/glfw/src/deps/mingw/dinput.h	231;"	d
DI8DEVCLASS_GAMECTRL	thirdparty/glfw/src/deps/mingw/dinput.h	234;"	d
DI8DEVCLASS_KEYBOARD	thirdparty/glfw/src/deps/mingw/dinput.h	233;"	d
DI8DEVCLASS_POINTER	thirdparty/glfw/src/deps/mingw/dinput.h	232;"	d
DI8DEVTYPE1STPERSON_LIMITED	thirdparty/glfw/src/deps/mingw/dinput.h	318;"	d
DI8DEVTYPE1STPERSON_SHOOTER	thirdparty/glfw/src/deps/mingw/dinput.h	321;"	d
DI8DEVTYPE1STPERSON_SIXDOF	thirdparty/glfw/src/deps/mingw/dinput.h	320;"	d
DI8DEVTYPE1STPERSON_UNKNOWN	thirdparty/glfw/src/deps/mingw/dinput.h	319;"	d
DI8DEVTYPEDEVICECTRL_COMMSSELECTION	thirdparty/glfw/src/deps/mingw/dinput.h	331;"	d
DI8DEVTYPEDEVICECTRL_COMMSSELECTION_HARDWIRED	thirdparty/glfw/src/deps/mingw/dinput.h	332;"	d
DI8DEVTYPEDEVICECTRL_UNKNOWN	thirdparty/glfw/src/deps/mingw/dinput.h	330;"	d
DI8DEVTYPEDRIVING_COMBINEDPEDALS	thirdparty/glfw/src/deps/mingw/dinput.h	308;"	d
DI8DEVTYPEDRIVING_DUALPEDALS	thirdparty/glfw/src/deps/mingw/dinput.h	309;"	d
DI8DEVTYPEDRIVING_HANDHELD	thirdparty/glfw/src/deps/mingw/dinput.h	311;"	d
DI8DEVTYPEDRIVING_LIMITED	thirdparty/glfw/src/deps/mingw/dinput.h	307;"	d
DI8DEVTYPEDRIVING_THREEPEDALS	thirdparty/glfw/src/deps/mingw/dinput.h	310;"	d
DI8DEVTYPEFLIGHT_LIMITED	thirdparty/glfw/src/deps/mingw/dinput.h	313;"	d
DI8DEVTYPEFLIGHT_RC	thirdparty/glfw/src/deps/mingw/dinput.h	316;"	d
DI8DEVTYPEFLIGHT_STICK	thirdparty/glfw/src/deps/mingw/dinput.h	314;"	d
DI8DEVTYPEFLIGHT_YOKE	thirdparty/glfw/src/deps/mingw/dinput.h	315;"	d
DI8DEVTYPEGAMEPAD_LIMITED	thirdparty/glfw/src/deps/mingw/dinput.h	303;"	d
DI8DEVTYPEGAMEPAD_STANDARD	thirdparty/glfw/src/deps/mingw/dinput.h	304;"	d
DI8DEVTYPEGAMEPAD_TILT	thirdparty/glfw/src/deps/mingw/dinput.h	305;"	d
DI8DEVTYPEJOYSTICK_LIMITED	thirdparty/glfw/src/deps/mingw/dinput.h	300;"	d
DI8DEVTYPEJOYSTICK_STANDARD	thirdparty/glfw/src/deps/mingw/dinput.h	301;"	d
DI8DEVTYPEKEYBOARD_J3100	thirdparty/glfw/src/deps/mingw/dinput.h	296;"	d
DI8DEVTYPEKEYBOARD_JAPAN106	thirdparty/glfw/src/deps/mingw/dinput.h	294;"	d
DI8DEVTYPEKEYBOARD_JAPANAX	thirdparty/glfw/src/deps/mingw/dinput.h	295;"	d
DI8DEVTYPEKEYBOARD_NEC98	thirdparty/glfw/src/deps/mingw/dinput.h	291;"	d
DI8DEVTYPEKEYBOARD_NEC98106	thirdparty/glfw/src/deps/mingw/dinput.h	293;"	d
DI8DEVTYPEKEYBOARD_NEC98LAPTOP	thirdparty/glfw/src/deps/mingw/dinput.h	292;"	d
DI8DEVTYPEKEYBOARD_NOKIA1050	thirdparty/glfw/src/deps/mingw/dinput.h	289;"	d
DI8DEVTYPEKEYBOARD_NOKIA9140	thirdparty/glfw/src/deps/mingw/dinput.h	290;"	d
DI8DEVTYPEKEYBOARD_OLIVETTI	thirdparty/glfw/src/deps/mingw/dinput.h	286;"	d
DI8DEVTYPEKEYBOARD_PCAT	thirdparty/glfw/src/deps/mingw/dinput.h	287;"	d
DI8DEVTYPEKEYBOARD_PCENH	thirdparty/glfw/src/deps/mingw/dinput.h	288;"	d
DI8DEVTYPEKEYBOARD_PCXT	thirdparty/glfw/src/deps/mingw/dinput.h	285;"	d
DI8DEVTYPEKEYBOARD_UNKNOWN	thirdparty/glfw/src/deps/mingw/dinput.h	284;"	d
DI8DEVTYPEMOUSE_ABSOLUTE	thirdparty/glfw/src/deps/mingw/dinput.h	282;"	d
DI8DEVTYPEMOUSE_FINGERSTICK	thirdparty/glfw/src/deps/mingw/dinput.h	279;"	d
DI8DEVTYPEMOUSE_TOUCHPAD	thirdparty/glfw/src/deps/mingw/dinput.h	280;"	d
DI8DEVTYPEMOUSE_TRACKBALL	thirdparty/glfw/src/deps/mingw/dinput.h	281;"	d
DI8DEVTYPEMOUSE_TRADITIONAL	thirdparty/glfw/src/deps/mingw/dinput.h	278;"	d
DI8DEVTYPEMOUSE_UNKNOWN	thirdparty/glfw/src/deps/mingw/dinput.h	277;"	d
DI8DEVTYPEREMOTE_UNKNOWN	thirdparty/glfw/src/deps/mingw/dinput.h	328;"	d
DI8DEVTYPESCREENPTR_LIGHTGUN	thirdparty/glfw/src/deps/mingw/dinput.h	324;"	d
DI8DEVTYPESCREENPTR_LIGHTPEN	thirdparty/glfw/src/deps/mingw/dinput.h	325;"	d
DI8DEVTYPESCREENPTR_TOUCH	thirdparty/glfw/src/deps/mingw/dinput.h	326;"	d
DI8DEVTYPESCREENPTR_UNKNOWN	thirdparty/glfw/src/deps/mingw/dinput.h	323;"	d
DI8DEVTYPESUPPLEMENTAL_2NDHANDCONTROLLER	thirdparty/glfw/src/deps/mingw/dinput.h	335;"	d
DI8DEVTYPESUPPLEMENTAL_COMBINEDPEDALS	thirdparty/glfw/src/deps/mingw/dinput.h	342;"	d
DI8DEVTYPESUPPLEMENTAL_DUALPEDALS	thirdparty/glfw/src/deps/mingw/dinput.h	343;"	d
DI8DEVTYPESUPPLEMENTAL_HANDTRACKER	thirdparty/glfw/src/deps/mingw/dinput.h	337;"	d
DI8DEVTYPESUPPLEMENTAL_HEADTRACKER	thirdparty/glfw/src/deps/mingw/dinput.h	336;"	d
DI8DEVTYPESUPPLEMENTAL_RUDDERPEDALS	thirdparty/glfw/src/deps/mingw/dinput.h	345;"	d
DI8DEVTYPESUPPLEMENTAL_SHIFTER	thirdparty/glfw/src/deps/mingw/dinput.h	339;"	d
DI8DEVTYPESUPPLEMENTAL_SHIFTSTICKGATE	thirdparty/glfw/src/deps/mingw/dinput.h	338;"	d
DI8DEVTYPESUPPLEMENTAL_SPLITTHROTTLE	thirdparty/glfw/src/deps/mingw/dinput.h	341;"	d
DI8DEVTYPESUPPLEMENTAL_THREEPEDALS	thirdparty/glfw/src/deps/mingw/dinput.h	344;"	d
DI8DEVTYPESUPPLEMENTAL_THROTTLE	thirdparty/glfw/src/deps/mingw/dinput.h	340;"	d
DI8DEVTYPESUPPLEMENTAL_UNKNOWN	thirdparty/glfw/src/deps/mingw/dinput.h	334;"	d
DI8DEVTYPE_1STPERSON	thirdparty/glfw/src/deps/mingw/dinput.h	243;"	d
DI8DEVTYPE_DEVICE	thirdparty/glfw/src/deps/mingw/dinput.h	236;"	d
DI8DEVTYPE_DEVICECTRL	thirdparty/glfw/src/deps/mingw/dinput.h	244;"	d
DI8DEVTYPE_DRIVING	thirdparty/glfw/src/deps/mingw/dinput.h	241;"	d
DI8DEVTYPE_FLIGHT	thirdparty/glfw/src/deps/mingw/dinput.h	242;"	d
DI8DEVTYPE_GAMEPAD	thirdparty/glfw/src/deps/mingw/dinput.h	240;"	d
DI8DEVTYPE_JOYSTICK	thirdparty/glfw/src/deps/mingw/dinput.h	239;"	d
DI8DEVTYPE_KEYBOARD	thirdparty/glfw/src/deps/mingw/dinput.h	238;"	d
DI8DEVTYPE_LIMITEDGAMESUBTYPE	thirdparty/glfw/src/deps/mingw/dinput.h	298;"	d
DI8DEVTYPE_MOUSE	thirdparty/glfw/src/deps/mingw/dinput.h	237;"	d
DI8DEVTYPE_REMOTE	thirdparty/glfw/src/deps/mingw/dinput.h	246;"	d
DI8DEVTYPE_SCREENPOINTER	thirdparty/glfw/src/deps/mingw/dinput.h	245;"	d
DI8DEVTYPE_SUPPLEMENTAL	thirdparty/glfw/src/deps/mingw/dinput.h	247;"	d
DIACTIONA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIACTIONA, *LPDIACTIONA;$/;"	t	typeref:struct:_DIACTIONA
DIACTIONFORMATA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIACTIONFORMATA, *LPDIACTIONFORMATA;$/;"	t	typeref:struct:_DIACTIONFORMATA
DIACTIONFORMATW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIACTIONFORMATW, *LPDIACTIONFORMATW;$/;"	t	typeref:struct:_DIACTIONFORMATW
DIACTIONW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIACTIONW, *LPDIACTIONW;$/;"	t	typeref:struct:_DIACTIONW
DIAFTS_NEWDEVICEHIGH	thirdparty/glfw/src/deps/mingw/dinput.h	1336;"	d
DIAFTS_NEWDEVICELOW	thirdparty/glfw/src/deps/mingw/dinput.h	1335;"	d
DIAFTS_UNUSEDDEVICEHIGH	thirdparty/glfw/src/deps/mingw/dinput.h	1338;"	d
DIAFTS_UNUSEDDEVICELOW	thirdparty/glfw/src/deps/mingw/dinput.h	1337;"	d
DIAH_APPREQUESTED	thirdparty/glfw/src/deps/mingw/dinput.h	1289;"	d
DIAH_DEFAULT	thirdparty/glfw/src/deps/mingw/dinput.h	1292;"	d
DIAH_ERROR	thirdparty/glfw/src/deps/mingw/dinput.h	1293;"	d
DIAH_HWAPP	thirdparty/glfw/src/deps/mingw/dinput.h	1290;"	d
DIAH_HWDEFAULT	thirdparty/glfw/src/deps/mingw/dinput.h	1291;"	d
DIAH_UNMAPPED	thirdparty/glfw/src/deps/mingw/dinput.h	1287;"	d
DIAH_USERCONFIG	thirdparty/glfw/src/deps/mingw/dinput.h	1288;"	d
DIA_APPFIXED	thirdparty/glfw/src/deps/mingw/dinput.h	1285;"	d
DIA_APPMAPPED	thirdparty/glfw/src/deps/mingw/dinput.h	1282;"	d
DIA_APPNOMAP	thirdparty/glfw/src/deps/mingw/dinput.h	1283;"	d
DIA_FORCEFEEDBACK	thirdparty/glfw/src/deps/mingw/dinput.h	1281;"	d
DIA_NORANGE	thirdparty/glfw/src/deps/mingw/dinput.h	1284;"	d
DICD_DEFAULT	thirdparty/glfw/src/deps/mingw/dinput.h	1349;"	d
DICD_EDIT	thirdparty/glfw/src/deps/mingw/dinput.h	1350;"	d
DICOLORSET	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DICOLORSET, *LPDICOLORSET;$/;"	t	typeref:struct:_DICOLORSET
DICONDITION	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DICONDITION {$/;"	s
DICONDITION	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DICONDITION, *LPDICONDITION;$/;"	t	typeref:struct:DICONDITION
DICONFIGUREDEVICESPARAMSA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DICONFIGUREDEVICESPARAMSA, *LPDICONFIGUREDEVICESPARAMSA;$/;"	t	typeref:struct:_DICONFIGUREDEVICESPARAMSA
DICONFIGUREDEVICESPARAMSW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DICONFIGUREDEVICESPARAMSW, *LPDICONFIGUREDEVICESPARAMSW;$/;"	t	typeref:struct:_DICONFIGUREDEVICESPARAMSW
DICONSTANTFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DICONSTANTFORCE {$/;"	s
DICONSTANTFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DICONSTANTFORCE, *LPDICONSTANTFORCE;$/;"	t	typeref:struct:DICONSTANTFORCE
DICUSTOMFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DICUSTOMFORCE {$/;"	s
DICUSTOMFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DICUSTOMFORCE, *LPDICUSTOMFORCE;$/;"	t	typeref:struct:DICUSTOMFORCE
DIDAL_BOTTOMALIGNED	thirdparty/glfw/src/deps/mingw/dinput.h	1406;"	d
DIDAL_CENTERED	thirdparty/glfw/src/deps/mingw/dinput.h	1401;"	d
DIDAL_LEFTALIGNED	thirdparty/glfw/src/deps/mingw/dinput.h	1402;"	d
DIDAL_MIDDLE	thirdparty/glfw/src/deps/mingw/dinput.h	1404;"	d
DIDAL_RIGHTALIGNED	thirdparty/glfw/src/deps/mingw/dinput.h	1403;"	d
DIDAL_TOPALIGNED	thirdparty/glfw/src/deps/mingw/dinput.h	1405;"	d
DIDATAFORMAT	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDATAFORMAT, *LPDIDATAFORMAT;$/;"	t	typeref:struct:_DIDATAFORMAT
DIDBAM_DEFAULT	thirdparty/glfw/src/deps/mingw/dinput.h	1340;"	d
DIDBAM_HWDEFAULTS	thirdparty/glfw/src/deps/mingw/dinput.h	1343;"	d
DIDBAM_INITIALIZE	thirdparty/glfw/src/deps/mingw/dinput.h	1342;"	d
DIDBAM_PRESERVE	thirdparty/glfw/src/deps/mingw/dinput.h	1341;"	d
DIDC_ALIAS	thirdparty/glfw/src/deps/mingw/dinput.h	934;"	d
DIDC_ATTACHED	thirdparty/glfw/src/deps/mingw/dinput.h	922;"	d
DIDC_DEADBAND	thirdparty/glfw/src/deps/mingw/dinput.h	932;"	d
DIDC_EMULATED	thirdparty/glfw/src/deps/mingw/dinput.h	924;"	d
DIDC_FFATTACK	thirdparty/glfw/src/deps/mingw/dinput.h	927;"	d
DIDC_FFFADE	thirdparty/glfw/src/deps/mingw/dinput.h	928;"	d
DIDC_FORCEFEEDBACK	thirdparty/glfw/src/deps/mingw/dinput.h	926;"	d
DIDC_HIDDEN	thirdparty/glfw/src/deps/mingw/dinput.h	936;"	d
DIDC_PHANTOM	thirdparty/glfw/src/deps/mingw/dinput.h	935;"	d
DIDC_POLLEDDATAFORMAT	thirdparty/glfw/src/deps/mingw/dinput.h	925;"	d
DIDC_POLLEDDEVICE	thirdparty/glfw/src/deps/mingw/dinput.h	923;"	d
DIDC_POSNEGCOEFFICIENTS	thirdparty/glfw/src/deps/mingw/dinput.h	930;"	d
DIDC_POSNEGSATURATION	thirdparty/glfw/src/deps/mingw/dinput.h	931;"	d
DIDC_SATURATION	thirdparty/glfw/src/deps/mingw/dinput.h	929;"	d
DIDC_STARTDELAY	thirdparty/glfw/src/deps/mingw/dinput.h	933;"	d
DIDEVCAPS	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIDEVCAPS {$/;"	s
DIDEVCAPS	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVCAPS,*LPDIDEVCAPS;$/;"	t	typeref:struct:DIDEVCAPS
DIDEVCAPS_DX3	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIDEVCAPS_DX3 {$/;"	s
DIDEVCAPS_DX3	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVCAPS_DX3, *LPDIDEVCAPS_DX3;$/;"	t	typeref:struct:DIDEVCAPS_DX3
DIDEVICEIMAGEINFOA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOA, *LPDIDEVICEIMAGEINFOA;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOA
DIDEVICEIMAGEINFOHEADERA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOHEADERA, *LPDIDEVICEIMAGEINFOHEADERA;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOHEADERA
DIDEVICEIMAGEINFOHEADERW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOHEADERW, *LPDIDEVICEIMAGEINFOHEADERW;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOHEADERW
DIDEVICEIMAGEINFOW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOW, *LPDIDEVICEIMAGEINFOW;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOW
DIDEVICEINSTANCEA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIDEVICEINSTANCEA {$/;"	s
DIDEVICEINSTANCEA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEINSTANCEA, *LPDIDEVICEINSTANCEA;$/;"	t	typeref:struct:DIDEVICEINSTANCEA
DIDEVICEINSTANCEW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIDEVICEINSTANCEW {$/;"	s
DIDEVICEINSTANCEW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEINSTANCEW, *LPDIDEVICEINSTANCEW;$/;"	t	typeref:struct:DIDEVICEINSTANCEW
DIDEVICEINSTANCE_DX3A	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIDEVICEINSTANCE_DX3A {$/;"	s
DIDEVICEINSTANCE_DX3A	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEINSTANCE_DX3A, *LPDIDEVICEINSTANCE_DX3A;$/;"	t	typeref:struct:DIDEVICEINSTANCE_DX3A
DIDEVICEINSTANCE_DX3W	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIDEVICEINSTANCE_DX3W {$/;"	s
DIDEVICEINSTANCE_DX3W	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEINSTANCE_DX3W, *LPDIDEVICEINSTANCE_DX3W;$/;"	t	typeref:struct:DIDEVICEINSTANCE_DX3W
DIDEVICEOBJECTDATA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIDEVICEOBJECTDATA {$/;"	s
DIDEVICEOBJECTDATA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEOBJECTDATA, *LPDIDEVICEOBJECTDATA;$/;"	t	typeref:struct:DIDEVICEOBJECTDATA
DIDEVICEOBJECTDATA_DX3	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIDEVICEOBJECTDATA_DX3 {$/;"	s
DIDEVICEOBJECTDATA_DX3	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEOBJECTDATA_DX3,*LPDIDEVICEOBJECTDATA_DX3;$/;"	t	typeref:struct:DIDEVICEOBJECTDATA_DX3
DIDEVICEOBJECTINSTANCEA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIDEVICEOBJECTINSTANCEA {$/;"	s
DIDEVICEOBJECTINSTANCEA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCEA, *LPDIDEVICEOBJECTINSTANCEA;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCEA
DIDEVICEOBJECTINSTANCEW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIDEVICEOBJECTINSTANCEW {$/;"	s
DIDEVICEOBJECTINSTANCEW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCEW, *LPDIDEVICEOBJECTINSTANCEW;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCEW
DIDEVICEOBJECTINSTANCE_DX3A	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIDEVICEOBJECTINSTANCE_DX3A {$/;"	s
DIDEVICEOBJECTINSTANCE_DX3A	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCE_DX3A, *LPDIDEVICEOBJECTINSTANCE_DX3A;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCE_DX3A
DIDEVICEOBJECTINSTANCE_DX3W	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIDEVICEOBJECTINSTANCE_DX3W {$/;"	s
DIDEVICEOBJECTINSTANCE_DX3W	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCE_DX3W, *LPDIDEVICEOBJECTINSTANCE_DX3W;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCE_DX3W
DIDEVTYPEJOYSTICK_FLIGHTSTICK	thirdparty/glfw/src/deps/mingw/dinput.h	271;"	d
DIDEVTYPEJOYSTICK_GAMEPAD	thirdparty/glfw/src/deps/mingw/dinput.h	272;"	d
DIDEVTYPEJOYSTICK_HEADTRACKER	thirdparty/glfw/src/deps/mingw/dinput.h	275;"	d
DIDEVTYPEJOYSTICK_RUDDER	thirdparty/glfw/src/deps/mingw/dinput.h	273;"	d
DIDEVTYPEJOYSTICK_TRADITIONAL	thirdparty/glfw/src/deps/mingw/dinput.h	270;"	d
DIDEVTYPEJOYSTICK_UNKNOWN	thirdparty/glfw/src/deps/mingw/dinput.h	269;"	d
DIDEVTYPEJOYSTICK_WHEEL	thirdparty/glfw/src/deps/mingw/dinput.h	274;"	d
DIDEVTYPEKEYBOARD_J3100	thirdparty/glfw/src/deps/mingw/dinput.h	267;"	d
DIDEVTYPEKEYBOARD_JAPAN106	thirdparty/glfw/src/deps/mingw/dinput.h	265;"	d
DIDEVTYPEKEYBOARD_JAPANAX	thirdparty/glfw/src/deps/mingw/dinput.h	266;"	d
DIDEVTYPEKEYBOARD_NEC98	thirdparty/glfw/src/deps/mingw/dinput.h	262;"	d
DIDEVTYPEKEYBOARD_NEC98106	thirdparty/glfw/src/deps/mingw/dinput.h	264;"	d
DIDEVTYPEKEYBOARD_NEC98LAPTOP	thirdparty/glfw/src/deps/mingw/dinput.h	263;"	d
DIDEVTYPEKEYBOARD_NOKIA1050	thirdparty/glfw/src/deps/mingw/dinput.h	260;"	d
DIDEVTYPEKEYBOARD_NOKIA9140	thirdparty/glfw/src/deps/mingw/dinput.h	261;"	d
DIDEVTYPEKEYBOARD_OLIVETTI	thirdparty/glfw/src/deps/mingw/dinput.h	257;"	d
DIDEVTYPEKEYBOARD_PCAT	thirdparty/glfw/src/deps/mingw/dinput.h	258;"	d
DIDEVTYPEKEYBOARD_PCENH	thirdparty/glfw/src/deps/mingw/dinput.h	259;"	d
DIDEVTYPEKEYBOARD_PCXT	thirdparty/glfw/src/deps/mingw/dinput.h	256;"	d
DIDEVTYPEKEYBOARD_UNKNOWN	thirdparty/glfw/src/deps/mingw/dinput.h	255;"	d
DIDEVTYPEMOUSE_FINGERSTICK	thirdparty/glfw/src/deps/mingw/dinput.h	251;"	d
DIDEVTYPEMOUSE_TOUCHPAD	thirdparty/glfw/src/deps/mingw/dinput.h	252;"	d
DIDEVTYPEMOUSE_TRACKBALL	thirdparty/glfw/src/deps/mingw/dinput.h	253;"	d
DIDEVTYPEMOUSE_TRADITIONAL	thirdparty/glfw/src/deps/mingw/dinput.h	250;"	d
DIDEVTYPEMOUSE_UNKNOWN	thirdparty/glfw/src/deps/mingw/dinput.h	249;"	d
DIDEVTYPE_DEVICE	thirdparty/glfw/src/deps/mingw/dinput.h	224;"	d
DIDEVTYPE_HID	thirdparty/glfw/src/deps/mingw/dinput.h	228;"	d
DIDEVTYPE_JOYSTICK	thirdparty/glfw/src/deps/mingw/dinput.h	227;"	d
DIDEVTYPE_KEYBOARD	thirdparty/glfw/src/deps/mingw/dinput.h	226;"	d
DIDEVTYPE_MOUSE	thirdparty/glfw/src/deps/mingw/dinput.h	225;"	d
DIDFT_ABSAXIS	thirdparty/glfw/src/deps/mingw/dinput.h	672;"	d
DIDFT_ALIAS	thirdparty/glfw/src/deps/mingw/dinput.h	690;"	d
DIDFT_ALL	thirdparty/glfw/src/deps/mingw/dinput.h	670;"	d
DIDFT_ANYINSTANCE	thirdparty/glfw/src/deps/mingw/dinput.h	680;"	d
DIDFT_AXIS	thirdparty/glfw/src/deps/mingw/dinput.h	673;"	d
DIDFT_BUTTON	thirdparty/glfw/src/deps/mingw/dinput.h	676;"	d
DIDFT_COLLECTION	thirdparty/glfw/src/deps/mingw/dinput.h	678;"	d
DIDFT_ENUMCOLLECTION	thirdparty/glfw/src/deps/mingw/dinput.h	695;"	d
DIDFT_FFACTUATOR	thirdparty/glfw/src/deps/mingw/dinput.h	685;"	d
DIDFT_FFEFFECTTRIGGER	thirdparty/glfw/src/deps/mingw/dinput.h	686;"	d
DIDFT_GETINSTANCE	thirdparty/glfw/src/deps/mingw/dinput.h	684;"	d
DIDFT_GETTYPE	thirdparty/glfw/src/deps/mingw/dinput.h	683;"	d
DIDFT_INSTANCEMASK	thirdparty/glfw/src/deps/mingw/dinput.h	681;"	d
DIDFT_MAKEINSTANCE	thirdparty/glfw/src/deps/mingw/dinput.h	682;"	d
DIDFT_NOCOLLECTION	thirdparty/glfw/src/deps/mingw/dinput.h	696;"	d
DIDFT_NODATA	thirdparty/glfw/src/deps/mingw/dinput.h	679;"	d
DIDFT_OPTIONAL	thirdparty/glfw/src/deps/mingw/dinput.h	693;"	d
DIDFT_OPTIONAL	thirdparty/glfw/src/win32_platform.h	157;"	d
DIDFT_OUTPUT	thirdparty/glfw/src/deps/mingw/dinput.h	688;"	d
DIDFT_POV	thirdparty/glfw/src/deps/mingw/dinput.h	677;"	d
DIDFT_PSHBUTTON	thirdparty/glfw/src/deps/mingw/dinput.h	674;"	d
DIDFT_RELAXIS	thirdparty/glfw/src/deps/mingw/dinput.h	671;"	d
DIDFT_TGLBUTTON	thirdparty/glfw/src/deps/mingw/dinput.h	675;"	d
DIDFT_VENDORDEFINED	thirdparty/glfw/src/deps/mingw/dinput.h	689;"	d
DIDF_ABSAXIS	thirdparty/glfw/src/deps/mingw/dinput.h	698;"	d
DIDF_RELAXIS	thirdparty/glfw/src/deps/mingw/dinput.h	699;"	d
DIDIFT_CONFIGURATION	thirdparty/glfw/src/deps/mingw/dinput.h	1398;"	d
DIDIFT_OVERLAY	thirdparty/glfw/src/deps/mingw/dinput.h	1399;"	d
DIDOI_ASPECTACCEL	thirdparty/glfw/src/deps/mingw/dinput.h	748;"	d
DIDOI_ASPECTFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	749;"	d
DIDOI_ASPECTMASK	thirdparty/glfw/src/deps/mingw/dinput.h	750;"	d
DIDOI_ASPECTPOSITION	thirdparty/glfw/src/deps/mingw/dinput.h	746;"	d
DIDOI_ASPECTVELOCITY	thirdparty/glfw/src/deps/mingw/dinput.h	747;"	d
DIDOI_FFACTUATOR	thirdparty/glfw/src/deps/mingw/dinput.h	743;"	d
DIDOI_FFEFFECTTRIGGER	thirdparty/glfw/src/deps/mingw/dinput.h	744;"	d
DIDOI_GUIDISUSAGE	thirdparty/glfw/src/deps/mingw/dinput.h	753;"	d
DIDOI_POLLED	thirdparty/glfw/src/deps/mingw/dinput.h	745;"	d
DIDSAM_DEFAULT	thirdparty/glfw/src/deps/mingw/dinput.h	1345;"	d
DIDSAM_FORCESAVE	thirdparty/glfw/src/deps/mingw/dinput.h	1347;"	d
DIDSAM_NOUSER	thirdparty/glfw/src/deps/mingw/dinput.h	1346;"	d
DIEB_NOTRIGGER	thirdparty/glfw/src/deps/mingw/dinput.h	1011;"	d
DIEDBSFL_ATTACHEDONLY	thirdparty/glfw/src/deps/mingw/dinput.h	485;"	d
DIEDBSFL_AVAILABLEDEVICES	thirdparty/glfw/src/deps/mingw/dinput.h	488;"	d
DIEDBSFL_FORCEFEEDBACK	thirdparty/glfw/src/deps/mingw/dinput.h	487;"	d
DIEDBSFL_MULTIMICEKEYBOARDS	thirdparty/glfw/src/deps/mingw/dinput.h	489;"	d
DIEDBSFL_NONGAMINGDEVICES	thirdparty/glfw/src/deps/mingw/dinput.h	490;"	d
DIEDBSFL_THISUSER	thirdparty/glfw/src/deps/mingw/dinput.h	486;"	d
DIEDBSFL_VALID	thirdparty/glfw/src/deps/mingw/dinput.h	491;"	d
DIEDBS_MAPPEDPRI1	thirdparty/glfw/src/deps/mingw/dinput.h	480;"	d
DIEDBS_MAPPEDPRI2	thirdparty/glfw/src/deps/mingw/dinput.h	481;"	d
DIEDBS_NEWDEVICE	thirdparty/glfw/src/deps/mingw/dinput.h	483;"	d
DIEDBS_RECENTDEVICE	thirdparty/glfw/src/deps/mingw/dinput.h	482;"	d
DIEDFL_ALLDEVICES	thirdparty/glfw/src/deps/mingw/dinput.h	217;"	d
DIEDFL_ATTACHEDONLY	thirdparty/glfw/src/deps/mingw/dinput.h	218;"	d
DIEDFL_FORCEFEEDBACK	thirdparty/glfw/src/deps/mingw/dinput.h	219;"	d
DIEDFL_INCLUDEALIASES	thirdparty/glfw/src/deps/mingw/dinput.h	220;"	d
DIEDFL_INCLUDEHIDDEN	thirdparty/glfw/src/deps/mingw/dinput.h	222;"	d
DIEDFL_INCLUDEPHANTOMS	thirdparty/glfw/src/deps/mingw/dinput.h	221;"	d
DIEFFECT	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIEFFECT {$/;"	s
DIEFFECT	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIEFFECT, *LPDIEFFECT;$/;"	t	typeref:struct:DIEFFECT
DIEFFECTINFOA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIEFFECTINFOA {$/;"	s
DIEFFECTINFOA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIEFFECTINFOA, *LPDIEFFECTINFOA;$/;"	t	typeref:struct:DIEFFECTINFOA
DIEFFECTINFOW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIEFFECTINFOW {$/;"	s
DIEFFECTINFOW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIEFFECTINFOW, *LPDIEFFECTINFOW;$/;"	t	typeref:struct:DIEFFECTINFOW
DIEFFECT_DX5	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIEFFECT_DX5 {$/;"	s
DIEFFECT_DX5	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIEFFECT_DX5, *LPDIEFFECT_DX5;$/;"	t	typeref:struct:DIEFFECT_DX5
DIEFFECT_DX6	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef DIEFFECT DIEFFECT_DX6;$/;"	t
DIEFFESCAPE	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIEFFESCAPE {$/;"	s
DIEFFESCAPE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIEFFESCAPE, *LPDIEFFESCAPE;$/;"	t	typeref:struct:DIEFFESCAPE
DIEFF_CARTESIAN	thirdparty/glfw/src/deps/mingw/dinput.h	988;"	d
DIEFF_OBJECTIDS	thirdparty/glfw/src/deps/mingw/dinput.h	986;"	d
DIEFF_OBJECTOFFSETS	thirdparty/glfw/src/deps/mingw/dinput.h	987;"	d
DIEFF_POLAR	thirdparty/glfw/src/deps/mingw/dinput.h	989;"	d
DIEFF_SPHERICAL	thirdparty/glfw/src/deps/mingw/dinput.h	990;"	d
DIEFT_ALL	thirdparty/glfw/src/deps/mingw/dinput.h	969;"	d
DIEFT_CONDITION	thirdparty/glfw/src/deps/mingw/dinput.h	974;"	d
DIEFT_CONSTANTFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	971;"	d
DIEFT_CUSTOMFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	975;"	d
DIEFT_DEADBAND	thirdparty/glfw/src/deps/mingw/dinput.h	982;"	d
DIEFT_FFATTACK	thirdparty/glfw/src/deps/mingw/dinput.h	977;"	d
DIEFT_FFFADE	thirdparty/glfw/src/deps/mingw/dinput.h	978;"	d
DIEFT_GETTYPE	thirdparty/glfw/src/deps/mingw/dinput.h	984;"	d
DIEFT_HARDWARE	thirdparty/glfw/src/deps/mingw/dinput.h	976;"	d
DIEFT_PERIODIC	thirdparty/glfw/src/deps/mingw/dinput.h	973;"	d
DIEFT_POSNEGCOEFFICIENTS	thirdparty/glfw/src/deps/mingw/dinput.h	980;"	d
DIEFT_POSNEGSATURATION	thirdparty/glfw/src/deps/mingw/dinput.h	981;"	d
DIEFT_RAMPFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	972;"	d
DIEFT_SATURATION	thirdparty/glfw/src/deps/mingw/dinput.h	979;"	d
DIEFT_STARTDELAY	thirdparty/glfw/src/deps/mingw/dinput.h	983;"	d
DIEGES_EMULATED	thirdparty/glfw/src/deps/mingw/dinput.h	1017;"	d
DIEGES_PLAYING	thirdparty/glfw/src/deps/mingw/dinput.h	1016;"	d
DIENUM_CONTINUE	thirdparty/glfw/src/deps/mingw/dinput.h	215;"	d
DIENUM_STOP	thirdparty/glfw/src/deps/mingw/dinput.h	214;"	d
DIENVELOPE	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIENVELOPE {$/;"	s
DIENVELOPE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIENVELOPE, *LPDIENVELOPE;$/;"	t	typeref:struct:DIENVELOPE
DIEP_ALLPARAMS	thirdparty/glfw/src/deps/mingw/dinput.h	1004;"	d
DIEP_ALLPARAMS	thirdparty/glfw/src/deps/mingw/dinput.h	1006;"	d
DIEP_ALLPARAMS_DX5	thirdparty/glfw/src/deps/mingw/dinput.h	1003;"	d
DIEP_AXES	thirdparty/glfw/src/deps/mingw/dinput.h	997;"	d
DIEP_DIRECTION	thirdparty/glfw/src/deps/mingw/dinput.h	998;"	d
DIEP_DURATION	thirdparty/glfw/src/deps/mingw/dinput.h	992;"	d
DIEP_ENVELOPE	thirdparty/glfw/src/deps/mingw/dinput.h	999;"	d
DIEP_GAIN	thirdparty/glfw/src/deps/mingw/dinput.h	994;"	d
DIEP_NODOWNLOAD	thirdparty/glfw/src/deps/mingw/dinput.h	1010;"	d
DIEP_NORESTART	thirdparty/glfw/src/deps/mingw/dinput.h	1009;"	d
DIEP_SAMPLEPERIOD	thirdparty/glfw/src/deps/mingw/dinput.h	993;"	d
DIEP_START	thirdparty/glfw/src/deps/mingw/dinput.h	1008;"	d
DIEP_STARTDELAY	thirdparty/glfw/src/deps/mingw/dinput.h	1002;"	d
DIEP_TRIGGERBUTTON	thirdparty/glfw/src/deps/mingw/dinput.h	995;"	d
DIEP_TRIGGERREPEATINTERVAL	thirdparty/glfw/src/deps/mingw/dinput.h	996;"	d
DIEP_TYPESPECIFICPARAMS	thirdparty/glfw/src/deps/mingw/dinput.h	1000;"	d
DIERR_ACQUIRED	thirdparty/glfw/src/deps/mingw/dinput.h	192;"	d
DIERR_ALREADYINITIALIZED	thirdparty/glfw/src/deps/mingw/dinput.h	186;"	d
DIERR_BADDRIVERVER	thirdparty/glfw/src/deps/mingw/dinput.h	172;"	d
DIERR_BETADIRECTINPUTVERSION	thirdparty/glfw/src/deps/mingw/dinput.h	170;"	d
DIERR_DEVICEFULL	thirdparty/glfw/src/deps/mingw/dinput.h	202;"	d
DIERR_DEVICENOTREG	thirdparty/glfw/src/deps/mingw/dinput.h	174;"	d
DIERR_EFFECTPLAYING	thirdparty/glfw/src/deps/mingw/dinput.h	209;"	d
DIERR_GENERIC	thirdparty/glfw/src/deps/mingw/dinput.h	181;"	d
DIERR_HANDLEEXISTS	thirdparty/glfw/src/deps/mingw/dinput.h	197;"	d
DIERR_HASEFFECTS	thirdparty/glfw/src/deps/mingw/dinput.h	205;"	d
DIERR_INCOMPLETEEFFECT	thirdparty/glfw/src/deps/mingw/dinput.h	207;"	d
DIERR_INPUTLOST	thirdparty/glfw/src/deps/mingw/dinput.h	190;"	d
DIERR_INSUFFICIENTPRIVS	thirdparty/glfw/src/deps/mingw/dinput.h	201;"	d
DIERR_INVALIDPARAM	thirdparty/glfw/src/deps/mingw/dinput.h	179;"	d
DIERR_MAPFILEFAIL	thirdparty/glfw/src/deps/mingw/dinput.h	212;"	d
DIERR_MOREDATA	thirdparty/glfw/src/deps/mingw/dinput.h	203;"	d
DIERR_NOAGGREGATION	thirdparty/glfw/src/deps/mingw/dinput.h	188;"	d
DIERR_NOINTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	180;"	d
DIERR_NOTACQUIRED	thirdparty/glfw/src/deps/mingw/dinput.h	194;"	d
DIERR_NOTBUFFERED	thirdparty/glfw/src/deps/mingw/dinput.h	208;"	d
DIERR_NOTDOWNLOADED	thirdparty/glfw/src/deps/mingw/dinput.h	204;"	d
DIERR_NOTEXCLUSIVEACQUIRED	thirdparty/glfw/src/deps/mingw/dinput.h	206;"	d
DIERR_NOTFOUND	thirdparty/glfw/src/deps/mingw/dinput.h	175;"	d
DIERR_NOTINITIALIZED	thirdparty/glfw/src/deps/mingw/dinput.h	184;"	d
DIERR_OBJECTNOTFOUND	thirdparty/glfw/src/deps/mingw/dinput.h	177;"	d
DIERR_OLDDIRECTINPUTVERSION	thirdparty/glfw/src/deps/mingw/dinput.h	168;"	d
DIERR_OTHERAPPHASPRIO	thirdparty/glfw/src/deps/mingw/dinput.h	189;"	d
DIERR_OUTOFMEMORY	thirdparty/glfw/src/deps/mingw/dinput.h	182;"	d
DIERR_READONLY	thirdparty/glfw/src/deps/mingw/dinput.h	196;"	d
DIERR_REPORTFULL	thirdparty/glfw/src/deps/mingw/dinput.h	211;"	d
DIERR_UNPLUGGED	thirdparty/glfw/src/deps/mingw/dinput.h	210;"	d
DIERR_UNSUPPORTED	thirdparty/glfw/src/deps/mingw/dinput.h	183;"	d
DIES_NODOWNLOAD	thirdparty/glfw/src/deps/mingw/dinput.h	1014;"	d
DIES_SOLO	thirdparty/glfw/src/deps/mingw/dinput.h	1013;"	d
DIFFUSE	lib/lib/include/lib/model.hpp	/^  DIFFUSE,$/;"	e	enum:LIB_NS_NAME::map_type::ENUM
DIFILEEFFECT	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIFILEEFFECT {$/;"	s
DIFILEEFFECT	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIFILEEFFECT, *LPDIFILEEFFECT;$/;"	t	typeref:struct:DIFILEEFFECT
DIGDD_PEEK	thirdparty/glfw/src/deps/mingw/dinput.h	701;"	d
DIGFFS_ACTUATORSOFF	thirdparty/glfw/src/deps/mingw/dinput.h	959;"	d
DIGFFS_ACTUATORSON	thirdparty/glfw/src/deps/mingw/dinput.h	958;"	d
DIGFFS_DEVICELOST	thirdparty/glfw/src/deps/mingw/dinput.h	966;"	d
DIGFFS_EMPTY	thirdparty/glfw/src/deps/mingw/dinput.h	955;"	d
DIGFFS_PAUSED	thirdparty/glfw/src/deps/mingw/dinput.h	957;"	d
DIGFFS_POWEROFF	thirdparty/glfw/src/deps/mingw/dinput.h	961;"	d
DIGFFS_POWERON	thirdparty/glfw/src/deps/mingw/dinput.h	960;"	d
DIGFFS_SAFETYSWITCHOFF	thirdparty/glfw/src/deps/mingw/dinput.h	963;"	d
DIGFFS_SAFETYSWITCHON	thirdparty/glfw/src/deps/mingw/dinput.h	962;"	d
DIGFFS_STOPPED	thirdparty/glfw/src/deps/mingw/dinput.h	956;"	d
DIGFFS_USERFFSWITCHOFF	thirdparty/glfw/src/deps/mingw/dinput.h	965;"	d
DIGFFS_USERFFSWITCHON	thirdparty/glfw/src/deps/mingw/dinput.h	964;"	d
DIGIBLASTER_MULT	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	15;"	d	file:
DIGIBLASTER_MULT	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	13;"	d	file:
DIJOFS_BUTTON	thirdparty/glfw/src/deps/mingw/dinput.h	1199;"	d
DIJOFS_BUTTON0	thirdparty/glfw/src/deps/mingw/dinput.h	1200;"	d
DIJOFS_BUTTON1	thirdparty/glfw/src/deps/mingw/dinput.h	1201;"	d
DIJOFS_BUTTON10	thirdparty/glfw/src/deps/mingw/dinput.h	1210;"	d
DIJOFS_BUTTON11	thirdparty/glfw/src/deps/mingw/dinput.h	1211;"	d
DIJOFS_BUTTON12	thirdparty/glfw/src/deps/mingw/dinput.h	1212;"	d
DIJOFS_BUTTON13	thirdparty/glfw/src/deps/mingw/dinput.h	1213;"	d
DIJOFS_BUTTON14	thirdparty/glfw/src/deps/mingw/dinput.h	1214;"	d
DIJOFS_BUTTON15	thirdparty/glfw/src/deps/mingw/dinput.h	1215;"	d
DIJOFS_BUTTON16	thirdparty/glfw/src/deps/mingw/dinput.h	1216;"	d
DIJOFS_BUTTON17	thirdparty/glfw/src/deps/mingw/dinput.h	1217;"	d
DIJOFS_BUTTON18	thirdparty/glfw/src/deps/mingw/dinput.h	1218;"	d
DIJOFS_BUTTON19	thirdparty/glfw/src/deps/mingw/dinput.h	1219;"	d
DIJOFS_BUTTON2	thirdparty/glfw/src/deps/mingw/dinput.h	1202;"	d
DIJOFS_BUTTON20	thirdparty/glfw/src/deps/mingw/dinput.h	1220;"	d
DIJOFS_BUTTON21	thirdparty/glfw/src/deps/mingw/dinput.h	1221;"	d
DIJOFS_BUTTON22	thirdparty/glfw/src/deps/mingw/dinput.h	1222;"	d
DIJOFS_BUTTON23	thirdparty/glfw/src/deps/mingw/dinput.h	1223;"	d
DIJOFS_BUTTON24	thirdparty/glfw/src/deps/mingw/dinput.h	1224;"	d
DIJOFS_BUTTON25	thirdparty/glfw/src/deps/mingw/dinput.h	1225;"	d
DIJOFS_BUTTON26	thirdparty/glfw/src/deps/mingw/dinput.h	1226;"	d
DIJOFS_BUTTON27	thirdparty/glfw/src/deps/mingw/dinput.h	1227;"	d
DIJOFS_BUTTON28	thirdparty/glfw/src/deps/mingw/dinput.h	1228;"	d
DIJOFS_BUTTON29	thirdparty/glfw/src/deps/mingw/dinput.h	1229;"	d
DIJOFS_BUTTON3	thirdparty/glfw/src/deps/mingw/dinput.h	1203;"	d
DIJOFS_BUTTON30	thirdparty/glfw/src/deps/mingw/dinput.h	1230;"	d
DIJOFS_BUTTON31	thirdparty/glfw/src/deps/mingw/dinput.h	1231;"	d
DIJOFS_BUTTON4	thirdparty/glfw/src/deps/mingw/dinput.h	1204;"	d
DIJOFS_BUTTON5	thirdparty/glfw/src/deps/mingw/dinput.h	1205;"	d
DIJOFS_BUTTON6	thirdparty/glfw/src/deps/mingw/dinput.h	1206;"	d
DIJOFS_BUTTON7	thirdparty/glfw/src/deps/mingw/dinput.h	1207;"	d
DIJOFS_BUTTON8	thirdparty/glfw/src/deps/mingw/dinput.h	1208;"	d
DIJOFS_BUTTON9	thirdparty/glfw/src/deps/mingw/dinput.h	1209;"	d
DIJOFS_POV	thirdparty/glfw/src/deps/mingw/dinput.h	1197;"	d
DIJOFS_RX	thirdparty/glfw/src/deps/mingw/dinput.h	1192;"	d
DIJOFS_RY	thirdparty/glfw/src/deps/mingw/dinput.h	1193;"	d
DIJOFS_RZ	thirdparty/glfw/src/deps/mingw/dinput.h	1194;"	d
DIJOFS_SLIDER	thirdparty/glfw/src/deps/mingw/dinput.h	1195;"	d
DIJOFS_X	thirdparty/glfw/src/deps/mingw/dinput.h	1189;"	d
DIJOFS_Y	thirdparty/glfw/src/deps/mingw/dinput.h	1190;"	d
DIJOFS_Z	thirdparty/glfw/src/deps/mingw/dinput.h	1191;"	d
DIJOYSTATE	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIJOYSTATE {$/;"	s
DIJOYSTATE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIJOYSTATE, *LPDIJOYSTATE;$/;"	t	typeref:struct:DIJOYSTATE
DIJOYSTATE2	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIJOYSTATE2 {$/;"	s
DIJOYSTATE2	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIJOYSTATE2, *LPDIJOYSTATE2;$/;"	t	typeref:struct:DIJOYSTATE2
DIK_0	thirdparty/glfw/src/deps/mingw/dinput.h	519;"	d
DIK_1	thirdparty/glfw/src/deps/mingw/dinput.h	510;"	d
DIK_2	thirdparty/glfw/src/deps/mingw/dinput.h	511;"	d
DIK_3	thirdparty/glfw/src/deps/mingw/dinput.h	512;"	d
DIK_4	thirdparty/glfw/src/deps/mingw/dinput.h	513;"	d
DIK_5	thirdparty/glfw/src/deps/mingw/dinput.h	514;"	d
DIK_6	thirdparty/glfw/src/deps/mingw/dinput.h	515;"	d
DIK_7	thirdparty/glfw/src/deps/mingw/dinput.h	516;"	d
DIK_8	thirdparty/glfw/src/deps/mingw/dinput.h	517;"	d
DIK_9	thirdparty/glfw/src/deps/mingw/dinput.h	518;"	d
DIK_A	thirdparty/glfw/src/deps/mingw/dinput.h	538;"	d
DIK_ABNT_C1	thirdparty/glfw/src/deps/mingw/dinput.h	599;"	d
DIK_ABNT_C2	thirdparty/glfw/src/deps/mingw/dinput.h	603;"	d
DIK_ADD	thirdparty/glfw/src/deps/mingw/dinput.h	586;"	d
DIK_APOSTROPHE	thirdparty/glfw/src/deps/mingw/dinput.h	548;"	d
DIK_APPS	thirdparty/glfw/src/deps/mingw/dinput.h	640;"	d
DIK_AT	thirdparty/glfw/src/deps/mingw/dinput.h	606;"	d
DIK_AX	thirdparty/glfw/src/deps/mingw/dinput.h	611;"	d
DIK_B	thirdparty/glfw/src/deps/mingw/dinput.h	556;"	d
DIK_BACK	thirdparty/glfw/src/deps/mingw/dinput.h	522;"	d
DIK_BACKSLASH	thirdparty/glfw/src/deps/mingw/dinput.h	551;"	d
DIK_BACKSPACE	thirdparty/glfw/src/deps/mingw/dinput.h	654;"	d
DIK_C	thirdparty/glfw/src/deps/mingw/dinput.h	554;"	d
DIK_CALCULATOR	thirdparty/glfw/src/deps/mingw/dinput.h	617;"	d
DIK_CAPITAL	thirdparty/glfw/src/deps/mingw/dinput.h	566;"	d
DIK_CAPSLOCK	thirdparty/glfw/src/deps/mingw/dinput.h	657;"	d
DIK_CIRCUMFLEX	thirdparty/glfw/src/deps/mingw/dinput.h	605;"	d
DIK_COLON	thirdparty/glfw/src/deps/mingw/dinput.h	607;"	d
DIK_COMMA	thirdparty/glfw/src/deps/mingw/dinput.h	559;"	d
DIK_CONVERT	thirdparty/glfw/src/deps/mingw/dinput.h	600;"	d
DIK_D	thirdparty/glfw/src/deps/mingw/dinput.h	540;"	d
DIK_DECIMAL	thirdparty/glfw/src/deps/mingw/dinput.h	591;"	d
DIK_DELETE	thirdparty/glfw/src/deps/mingw/dinput.h	637;"	d
DIK_DIVIDE	thirdparty/glfw/src/deps/mingw/dinput.h	624;"	d
DIK_DOWN	thirdparty/glfw/src/deps/mingw/dinput.h	634;"	d
DIK_DOWNARROW	thirdparty/glfw/src/deps/mingw/dinput.h	667;"	d
DIK_E	thirdparty/glfw/src/deps/mingw/dinput.h	526;"	d
DIK_END	thirdparty/glfw/src/deps/mingw/dinput.h	633;"	d
DIK_EQUALS	thirdparty/glfw/src/deps/mingw/dinput.h	521;"	d
DIK_ESCAPE	thirdparty/glfw/src/deps/mingw/dinput.h	509;"	d
DIK_F	thirdparty/glfw/src/deps/mingw/dinput.h	541;"	d
DIK_F1	thirdparty/glfw/src/deps/mingw/dinput.h	567;"	d
DIK_F10	thirdparty/glfw/src/deps/mingw/dinput.h	576;"	d
DIK_F11	thirdparty/glfw/src/deps/mingw/dinput.h	593;"	d
DIK_F12	thirdparty/glfw/src/deps/mingw/dinput.h	594;"	d
DIK_F13	thirdparty/glfw/src/deps/mingw/dinput.h	595;"	d
DIK_F14	thirdparty/glfw/src/deps/mingw/dinput.h	596;"	d
DIK_F15	thirdparty/glfw/src/deps/mingw/dinput.h	597;"	d
DIK_F2	thirdparty/glfw/src/deps/mingw/dinput.h	568;"	d
DIK_F3	thirdparty/glfw/src/deps/mingw/dinput.h	569;"	d
DIK_F4	thirdparty/glfw/src/deps/mingw/dinput.h	570;"	d
DIK_F5	thirdparty/glfw/src/deps/mingw/dinput.h	571;"	d
DIK_F6	thirdparty/glfw/src/deps/mingw/dinput.h	572;"	d
DIK_F7	thirdparty/glfw/src/deps/mingw/dinput.h	573;"	d
DIK_F8	thirdparty/glfw/src/deps/mingw/dinput.h	574;"	d
DIK_F9	thirdparty/glfw/src/deps/mingw/dinput.h	575;"	d
DIK_G	thirdparty/glfw/src/deps/mingw/dinput.h	542;"	d
DIK_GRAVE	thirdparty/glfw/src/deps/mingw/dinput.h	549;"	d
DIK_H	thirdparty/glfw/src/deps/mingw/dinput.h	543;"	d
DIK_HOME	thirdparty/glfw/src/deps/mingw/dinput.h	628;"	d
DIK_I	thirdparty/glfw/src/deps/mingw/dinput.h	531;"	d
DIK_INSERT	thirdparty/glfw/src/deps/mingw/dinput.h	636;"	d
DIK_J	thirdparty/glfw/src/deps/mingw/dinput.h	544;"	d
DIK_K	thirdparty/glfw/src/deps/mingw/dinput.h	545;"	d
DIK_KANA	thirdparty/glfw/src/deps/mingw/dinput.h	598;"	d
DIK_KANJI	thirdparty/glfw/src/deps/mingw/dinput.h	609;"	d
DIK_L	thirdparty/glfw/src/deps/mingw/dinput.h	546;"	d
DIK_LALT	thirdparty/glfw/src/deps/mingw/dinput.h	656;"	d
DIK_LBRACKET	thirdparty/glfw/src/deps/mingw/dinput.h	534;"	d
DIK_LCONTROL	thirdparty/glfw/src/deps/mingw/dinput.h	537;"	d
DIK_LEFT	thirdparty/glfw/src/deps/mingw/dinput.h	631;"	d
DIK_LEFTARROW	thirdparty/glfw/src/deps/mingw/dinput.h	665;"	d
DIK_LMENU	thirdparty/glfw/src/deps/mingw/dinput.h	564;"	d
DIK_LSHIFT	thirdparty/glfw/src/deps/mingw/dinput.h	550;"	d
DIK_LWIN	thirdparty/glfw/src/deps/mingw/dinput.h	638;"	d
DIK_M	thirdparty/glfw/src/deps/mingw/dinput.h	558;"	d
DIK_MAIL	thirdparty/glfw/src/deps/mingw/dinput.h	651;"	d
DIK_MEDIASELECT	thirdparty/glfw/src/deps/mingw/dinput.h	652;"	d
DIK_MEDIASTOP	thirdparty/glfw/src/deps/mingw/dinput.h	619;"	d
DIK_MINUS	thirdparty/glfw/src/deps/mingw/dinput.h	520;"	d
DIK_MULTIPLY	thirdparty/glfw/src/deps/mingw/dinput.h	563;"	d
DIK_MUTE	thirdparty/glfw/src/deps/mingw/dinput.h	616;"	d
DIK_MYCOMPUTER	thirdparty/glfw/src/deps/mingw/dinput.h	650;"	d
DIK_N	thirdparty/glfw/src/deps/mingw/dinput.h	557;"	d
DIK_NEXT	thirdparty/glfw/src/deps/mingw/dinput.h	635;"	d
DIK_NEXTTRACK	thirdparty/glfw/src/deps/mingw/dinput.h	613;"	d
DIK_NOCONVERT	thirdparty/glfw/src/deps/mingw/dinput.h	601;"	d
DIK_NUMLOCK	thirdparty/glfw/src/deps/mingw/dinput.h	577;"	d
DIK_NUMPAD0	thirdparty/glfw/src/deps/mingw/dinput.h	590;"	d
DIK_NUMPAD1	thirdparty/glfw/src/deps/mingw/dinput.h	587;"	d
DIK_NUMPAD2	thirdparty/glfw/src/deps/mingw/dinput.h	588;"	d
DIK_NUMPAD3	thirdparty/glfw/src/deps/mingw/dinput.h	589;"	d
DIK_NUMPAD4	thirdparty/glfw/src/deps/mingw/dinput.h	583;"	d
DIK_NUMPAD5	thirdparty/glfw/src/deps/mingw/dinput.h	584;"	d
DIK_NUMPAD6	thirdparty/glfw/src/deps/mingw/dinput.h	585;"	d
DIK_NUMPAD7	thirdparty/glfw/src/deps/mingw/dinput.h	579;"	d
DIK_NUMPAD8	thirdparty/glfw/src/deps/mingw/dinput.h	580;"	d
DIK_NUMPAD9	thirdparty/glfw/src/deps/mingw/dinput.h	581;"	d
DIK_NUMPADCOMMA	thirdparty/glfw/src/deps/mingw/dinput.h	623;"	d
DIK_NUMPADENTER	thirdparty/glfw/src/deps/mingw/dinput.h	614;"	d
DIK_NUMPADEQUALS	thirdparty/glfw/src/deps/mingw/dinput.h	604;"	d
DIK_NUMPADMINUS	thirdparty/glfw/src/deps/mingw/dinput.h	658;"	d
DIK_NUMPADPERIOD	thirdparty/glfw/src/deps/mingw/dinput.h	660;"	d
DIK_NUMPADPLUS	thirdparty/glfw/src/deps/mingw/dinput.h	659;"	d
DIK_NUMPADSLASH	thirdparty/glfw/src/deps/mingw/dinput.h	661;"	d
DIK_NUMPADSTAR	thirdparty/glfw/src/deps/mingw/dinput.h	655;"	d
DIK_O	thirdparty/glfw/src/deps/mingw/dinput.h	532;"	d
DIK_OEM_102	thirdparty/glfw/src/deps/mingw/dinput.h	592;"	d
DIK_P	thirdparty/glfw/src/deps/mingw/dinput.h	533;"	d
DIK_PAUSE	thirdparty/glfw/src/deps/mingw/dinput.h	627;"	d
DIK_PERIOD	thirdparty/glfw/src/deps/mingw/dinput.h	560;"	d
DIK_PGDN	thirdparty/glfw/src/deps/mingw/dinput.h	668;"	d
DIK_PGUP	thirdparty/glfw/src/deps/mingw/dinput.h	664;"	d
DIK_PLAYPAUSE	thirdparty/glfw/src/deps/mingw/dinput.h	618;"	d
DIK_POWER	thirdparty/glfw/src/deps/mingw/dinput.h	641;"	d
DIK_PRIOR	thirdparty/glfw/src/deps/mingw/dinput.h	630;"	d
DIK_Q	thirdparty/glfw/src/deps/mingw/dinput.h	524;"	d
DIK_R	thirdparty/glfw/src/deps/mingw/dinput.h	527;"	d
DIK_RALT	thirdparty/glfw/src/deps/mingw/dinput.h	662;"	d
DIK_RBRACKET	thirdparty/glfw/src/deps/mingw/dinput.h	535;"	d
DIK_RCONTROL	thirdparty/glfw/src/deps/mingw/dinput.h	615;"	d
DIK_RETURN	thirdparty/glfw/src/deps/mingw/dinput.h	536;"	d
DIK_RIGHT	thirdparty/glfw/src/deps/mingw/dinput.h	632;"	d
DIK_RIGHTARROW	thirdparty/glfw/src/deps/mingw/dinput.h	666;"	d
DIK_RMENU	thirdparty/glfw/src/deps/mingw/dinput.h	626;"	d
DIK_RSHIFT	thirdparty/glfw/src/deps/mingw/dinput.h	562;"	d
DIK_RWIN	thirdparty/glfw/src/deps/mingw/dinput.h	639;"	d
DIK_S	thirdparty/glfw/src/deps/mingw/dinput.h	539;"	d
DIK_SCROLL	thirdparty/glfw/src/deps/mingw/dinput.h	578;"	d
DIK_SEMICOLON	thirdparty/glfw/src/deps/mingw/dinput.h	547;"	d
DIK_SLASH	thirdparty/glfw/src/deps/mingw/dinput.h	561;"	d
DIK_SLEEP	thirdparty/glfw/src/deps/mingw/dinput.h	642;"	d
DIK_SPACE	thirdparty/glfw/src/deps/mingw/dinput.h	565;"	d
DIK_STOP	thirdparty/glfw/src/deps/mingw/dinput.h	610;"	d
DIK_SUBTRACT	thirdparty/glfw/src/deps/mingw/dinput.h	582;"	d
DIK_SYSRQ	thirdparty/glfw/src/deps/mingw/dinput.h	625;"	d
DIK_T	thirdparty/glfw/src/deps/mingw/dinput.h	528;"	d
DIK_TAB	thirdparty/glfw/src/deps/mingw/dinput.h	523;"	d
DIK_U	thirdparty/glfw/src/deps/mingw/dinput.h	530;"	d
DIK_UNDERLINE	thirdparty/glfw/src/deps/mingw/dinput.h	608;"	d
DIK_UNLABELED	thirdparty/glfw/src/deps/mingw/dinput.h	612;"	d
DIK_UP	thirdparty/glfw/src/deps/mingw/dinput.h	629;"	d
DIK_UPARROW	thirdparty/glfw/src/deps/mingw/dinput.h	663;"	d
DIK_V	thirdparty/glfw/src/deps/mingw/dinput.h	555;"	d
DIK_VOLUMEDOWN	thirdparty/glfw/src/deps/mingw/dinput.h	620;"	d
DIK_VOLUMEUP	thirdparty/glfw/src/deps/mingw/dinput.h	621;"	d
DIK_W	thirdparty/glfw/src/deps/mingw/dinput.h	525;"	d
DIK_WAKE	thirdparty/glfw/src/deps/mingw/dinput.h	643;"	d
DIK_WEBBACK	thirdparty/glfw/src/deps/mingw/dinput.h	649;"	d
DIK_WEBFAVORITES	thirdparty/glfw/src/deps/mingw/dinput.h	645;"	d
DIK_WEBFORWARD	thirdparty/glfw/src/deps/mingw/dinput.h	648;"	d
DIK_WEBHOME	thirdparty/glfw/src/deps/mingw/dinput.h	622;"	d
DIK_WEBREFRESH	thirdparty/glfw/src/deps/mingw/dinput.h	646;"	d
DIK_WEBSEARCH	thirdparty/glfw/src/deps/mingw/dinput.h	644;"	d
DIK_WEBSTOP	thirdparty/glfw/src/deps/mingw/dinput.h	647;"	d
DIK_X	thirdparty/glfw/src/deps/mingw/dinput.h	553;"	d
DIK_Y	thirdparty/glfw/src/deps/mingw/dinput.h	529;"	d
DIK_YEN	thirdparty/glfw/src/deps/mingw/dinput.h	602;"	d
DIK_Z	thirdparty/glfw/src/deps/mingw/dinput.h	552;"	d
DIMAKEUSAGEDWORD	thirdparty/glfw/src/deps/mingw/dinput.h	770;"	d
DIMOFS_BUTTON0	thirdparty/glfw/src/deps/mingw/dinput.h	2131;"	d
DIMOFS_BUTTON1	thirdparty/glfw/src/deps/mingw/dinput.h	2132;"	d
DIMOFS_BUTTON2	thirdparty/glfw/src/deps/mingw/dinput.h	2133;"	d
DIMOFS_BUTTON3	thirdparty/glfw/src/deps/mingw/dinput.h	2134;"	d
DIMOFS_BUTTON4	thirdparty/glfw/src/deps/mingw/dinput.h	2136;"	d
DIMOFS_BUTTON5	thirdparty/glfw/src/deps/mingw/dinput.h	2137;"	d
DIMOFS_BUTTON6	thirdparty/glfw/src/deps/mingw/dinput.h	2138;"	d
DIMOFS_BUTTON7	thirdparty/glfw/src/deps/mingw/dinput.h	2139;"	d
DIMOFS_X	thirdparty/glfw/src/deps/mingw/dinput.h	2128;"	d
DIMOFS_Y	thirdparty/glfw/src/deps/mingw/dinput.h	2129;"	d
DIMOFS_Z	thirdparty/glfw/src/deps/mingw/dinput.h	2130;"	d
DIMOUSESTATE	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIMOUSESTATE {$/;"	s
DIMOUSESTATE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIMOUSESTATE;$/;"	t	typeref:struct:DIMOUSESTATE
DIMOUSESTATE2	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIMOUSESTATE2 {$/;"	s
DIMOUSESTATE2	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIMOUSESTATE2;$/;"	t	typeref:struct:DIMOUSESTATE2
DIOBJECTDATAFORMAT	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIOBJECTDATAFORMAT, *LPDIOBJECTDATAFORMAT;$/;"	t	typeref:struct:_DIOBJECTDATAFORMAT
DIPERIODIC	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIPERIODIC {$/;"	s
DIPERIODIC	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPERIODIC, *LPDIPERIODIC;$/;"	t	typeref:struct:DIPERIODIC
DIPH_BYID	thirdparty/glfw/src/deps/mingw/dinput.h	766;"	d
DIPH_BYOFFSET	thirdparty/glfw/src/deps/mingw/dinput.h	765;"	d
DIPH_BYUSAGE	thirdparty/glfw/src/deps/mingw/dinput.h	768;"	d
DIPH_DEVICE	thirdparty/glfw/src/deps/mingw/dinput.h	764;"	d
DIPROPAUTOCENTER_OFF	thirdparty/glfw/src/deps/mingw/dinput.h	847;"	d
DIPROPAUTOCENTER_ON	thirdparty/glfw/src/deps/mingw/dinput.h	848;"	d
DIPROPAXISMODE_ABS	thirdparty/glfw/src/deps/mingw/dinput.h	836;"	d
DIPROPAXISMODE_REL	thirdparty/glfw/src/deps/mingw/dinput.h	837;"	d
DIPROPCAL	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIPROPCAL {$/;"	s
DIPROPCAL	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPCAL, *LPDIPROPCAL;$/;"	t	typeref:struct:DIPROPCAL
DIPROPCALIBRATIONMODE_COOKED	thirdparty/glfw/src/deps/mingw/dinput.h	852;"	d
DIPROPCALIBRATIONMODE_RAW	thirdparty/glfw/src/deps/mingw/dinput.h	853;"	d
DIPROPCALPOV	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIPROPCALPOV {$/;"	s
DIPROPCALPOV	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPCALPOV, *LPDIPROPCALPOV;$/;"	t	typeref:struct:DIPROPCALPOV
DIPROPCPOINTS	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIPROPCPOINTS {$/;"	s
DIPROPCPOINTS	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPCPOINTS, *LPDIPROPCPOINTS;$/;"	t	typeref:struct:DIPROPCPOINTS
DIPROPDWORD	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIPROPDWORD {$/;"	s
DIPROPDWORD	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPDWORD, *LPDIPROPDWORD;$/;"	t	typeref:struct:DIPROPDWORD
DIPROPGUIDANDPATH	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIPROPGUIDANDPATH {$/;"	s
DIPROPGUIDANDPATH	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPGUIDANDPATH, *LPDIPROPGUIDANDPATH;$/;"	t	typeref:struct:DIPROPGUIDANDPATH
DIPROPHEADER	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIPROPHEADER {$/;"	s
DIPROPHEADER	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPHEADER,*LPDIPROPHEADER;$/;"	t	typeref:struct:DIPROPHEADER
DIPROPPOINTER	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIPROPPOINTER {$/;"	s
DIPROPPOINTER	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPPOINTER, *LPDIPROPPOINTER;$/;"	t	typeref:struct:DIPROPPOINTER
DIPROPRANGE	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIPROPRANGE {$/;"	s
DIPROPRANGE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPRANGE, *LPDIPROPRANGE;$/;"	t	typeref:struct:DIPROPRANGE
DIPROPRANGE_NOMAX	thirdparty/glfw/src/deps/mingw/dinput.h	787;"	d
DIPROPRANGE_NOMIN	thirdparty/glfw/src/deps/mingw/dinput.h	786;"	d
DIPROPSTRING	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIPROPSTRING {$/;"	s
DIPROPSTRING	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPSTRING, *LPDIPROPSTRING;$/;"	t	typeref:struct:DIPROPSTRING
DIPROP_APPDATA	thirdparty/glfw/src/deps/mingw/dinput.h	875;"	d
DIPROP_AUTOCENTER	thirdparty/glfw/src/deps/mingw/dinput.h	845;"	d
DIPROP_AXISMODE	thirdparty/glfw/src/deps/mingw/dinput.h	834;"	d
DIPROP_BUFFERSIZE	thirdparty/glfw/src/deps/mingw/dinput.h	833;"	d
DIPROP_CALIBRATION	thirdparty/glfw/src/deps/mingw/dinput.h	856;"	d
DIPROP_CALIBRATIONMODE	thirdparty/glfw/src/deps/mingw/dinput.h	850;"	d
DIPROP_CPOINTS	thirdparty/glfw/src/deps/mingw/dinput.h	874;"	d
DIPROP_DEADZONE	thirdparty/glfw/src/deps/mingw/dinput.h	841;"	d
DIPROP_FFGAIN	thirdparty/glfw/src/deps/mingw/dinput.h	843;"	d
DIPROP_FFLOAD	thirdparty/glfw/src/deps/mingw/dinput.h	844;"	d
DIPROP_GETPORTDISPLAYNAME	thirdparty/glfw/src/deps/mingw/dinput.h	864;"	d
DIPROP_GRANULARITY	thirdparty/glfw/src/deps/mingw/dinput.h	839;"	d
DIPROP_GUIDANDPATH	thirdparty/glfw/src/deps/mingw/dinput.h	857;"	d
DIPROP_INSTANCENAME	thirdparty/glfw/src/deps/mingw/dinput.h	858;"	d
DIPROP_JOYSTICKID	thirdparty/glfw/src/deps/mingw/dinput.h	863;"	d
DIPROP_KEYNAME	thirdparty/glfw/src/deps/mingw/dinput.h	873;"	d
DIPROP_LOGICALRANGE	thirdparty/glfw/src/deps/mingw/dinput.h	869;"	d
DIPROP_PHYSICALRANGE	thirdparty/glfw/src/deps/mingw/dinput.h	868;"	d
DIPROP_PRODUCTNAME	thirdparty/glfw/src/deps/mingw/dinput.h	859;"	d
DIPROP_RANGE	thirdparty/glfw/src/deps/mingw/dinput.h	840;"	d
DIPROP_SATURATION	thirdparty/glfw/src/deps/mingw/dinput.h	842;"	d
DIPROP_SCANCODE	thirdparty/glfw/src/deps/mingw/dinput.h	876;"	d
DIPROP_TYPENAME	thirdparty/glfw/src/deps/mingw/dinput.h	879;"	d
DIPROP_USERNAME	thirdparty/glfw/src/deps/mingw/dinput.h	878;"	d
DIPROP_VIDPID	thirdparty/glfw/src/deps/mingw/dinput.h	877;"	d
DIR	lib/nil/include/nil/data/light.hpp	/^  enum { POINT, DIR, SPOT } type;$/;"	e	enum:Nil::Data::Light::__anon9
DIRAMPFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct DIRAMPFORCE {$/;"	s
DIRAMPFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIRAMPFORCE, *LPDIRAMPFORCE;$/;"	t	typeref:struct:DIRAMPFORCE
DIRECTINPUT_VERSION	thirdparty/glfw/src/deps/mingw/dinput.h	27;"	d
DIRECTINPUT_VERSION	thirdparty/glfw/src/win32_platform.h	62;"	d
DIRECTIONAL	lib/roa/include/roa/light.hpp	/^  DIRECTIONAL,$/;"	m	class:ROA::Light_type
DIRECTORY_INCLUDED_2975D9CA_04DA_4E66_B46F_C654E0CF2302	lib/nil/include/nil/resource/directory.hpp	2;"	d
DIRECTORY_INCLUDED_5551C33B_D835_42D2_99FF_661889A068A0	lib/lib/include/lib/directory.hpp	9;"	d
DISCL_BACKGROUND	thirdparty/glfw/src/deps/mingw/dinput.h	943;"	d
DISCL_EXCLUSIVE	thirdparty/glfw/src/deps/mingw/dinput.h	940;"	d
DISCL_FOREGROUND	thirdparty/glfw/src/deps/mingw/dinput.h	942;"	d
DISCL_NONEXCLUSIVE	thirdparty/glfw/src/deps/mingw/dinput.h	941;"	d
DISCL_NOWINKEY	thirdparty/glfw/src/deps/mingw/dinput.h	944;"	d
DISEQUENCE_COMPARE	thirdparty/glfw/src/deps/mingw/dinput.h	703;"	d
DISFFC_CONTINUE	thirdparty/glfw/src/deps/mingw/dinput.h	951;"	d
DISFFC_PAUSE	thirdparty/glfw/src/deps/mingw/dinput.h	950;"	d
DISFFC_RESET	thirdparty/glfw/src/deps/mingw/dinput.h	948;"	d
DISFFC_SETACTUATORSOFF	thirdparty/glfw/src/deps/mingw/dinput.h	953;"	d
DISFFC_SETACTUATORSON	thirdparty/glfw/src/deps/mingw/dinput.h	952;"	d
DISFFC_STOPALL	thirdparty/glfw/src/deps/mingw/dinput.h	949;"	d
DISPLAY_DEVICE_ACTIVE	thirdparty/glfw/src/win32_platform.h	102;"	d
DISTANCE_DELAY	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			DISTANCE_DELAY = 32,$/;"	e	enum:SoLoud::AudioSource::FLAGS
DIVTAB_DENOM	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1974;"	d	file:
DIVTAB_DENOM	thirdparty/stb/include/stb/stb_vorbis.c	1973;"	d	file:
DIVTAB_NUMER	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1973;"	d	file:
DIVTAB_NUMER	thirdparty/stb/include/stb/stb_vorbis.c	1972;"	d	file:
DI_BUFFEROVERFLOW	thirdparty/glfw/src/deps/mingw/dinput.h	157;"	d
DI_DEGREES	thirdparty/glfw/src/deps/mingw/dinput.h	1019;"	d
DI_DOWNLOADSKIPPED	thirdparty/glfw/src/deps/mingw/dinput.h	161;"	d
DI_EFFECTRESTARTED	thirdparty/glfw/src/deps/mingw/dinput.h	162;"	d
DI_FFNOMINALMAX	thirdparty/glfw/src/deps/mingw/dinput.h	1020;"	d
DI_NOEFFECT	thirdparty/glfw/src/deps/mingw/dinput.h	159;"	d
DI_NOTATTACHED	thirdparty/glfw/src/deps/mingw/dinput.h	156;"	d
DI_OK	thirdparty/glfw/src/deps/mingw/dinput.h	155;"	d
DI_POLLEDDEVICE	thirdparty/glfw/src/deps/mingw/dinput.h	160;"	d
DI_PROPNOEFFECT	thirdparty/glfw/src/deps/mingw/dinput.h	158;"	d
DI_SECONDS	thirdparty/glfw/src/deps/mingw/dinput.h	1021;"	d
DI_SETTINGSNOTSAVED	thirdparty/glfw/src/deps/mingw/dinput.h	164;"	d
DI_TRUNCATED	thirdparty/glfw/src/deps/mingw/dinput.h	163;"	d
DI_TRUNCATEDANDRESTARTED	thirdparty/glfw/src/deps/mingw/dinput.h	165;"	d
DI_WRITEPROTECT	thirdparty/glfw/src/deps/mingw/dinput.h	166;"	d
DLL_NOT_FOUND	thirdparty/soloud/include/soloud/soloud_error.h	/^		DLL_NOT_FOUND     = 4, \/\/ DLL not found, or wrong DLL$/;"	e	enum:SoLoud::SOLOUD_ERRORS
DMAbuf	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char DMAbuf[64*3];$/;"	m	class:TED
DMAptr	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	const char *DMAptr;$/;"	m	class:TED
DOM.Applet.Load	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Applet.Move	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Event.AddHandler	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Event.Get	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Event.GetMousePosition	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Event.GetNode	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Event.RemoveHandler	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Event.StopAll	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Event.StopDefaultAction	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Event.StopPropagation	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.AddClass	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.AppendClearFloat	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.AppendHTML	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.Clone	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.Contains	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.CreateHTML	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.CreateShim	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.FindWithClass	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.Get	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^namespace("DOM.Applet");$/;"	f
DOM.Node.GetHeight	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.GetPosition	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.GetSize	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.GetWidth	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.HasClass	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.Hide	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.IsNode	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.RemoveClass	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.SetColour	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.SetHeight	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.SetOpacity	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.SetPosition	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.SetSize	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.SetWidth	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.SetX	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.SetY	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOM.Node.Show	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/DOM.js	/^}$/;"	f
DOWN	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	RIGHT				: 39,	\/\/ also NUM_EAST$/;"	p	class:namespace.Codes
DUMMYSTRUCTNAME	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	80;"	d
DUMMYSTRUCTNAME	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	87;"	d
DUMMYSTRUCTNAME1	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	81;"	d
DUMMYSTRUCTNAME1	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	88;"	d
DUMMYSTRUCTNAME2	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	82;"	d
DUMMYSTRUCTNAME2	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	89;"	d
DUMMYSTRUCTNAME3	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	83;"	d
DUMMYSTRUCTNAME3	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	90;"	d
DUMMYSTRUCTNAME4	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	84;"	d
DUMMYSTRUCTNAME4	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	91;"	d
DUMMYSTRUCTNAME5	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	85;"	d
DUMMYSTRUCTNAME5	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	92;"	d
DUMMYUNIONNAME	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	46;"	d
DUMMYUNIONNAME	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	57;"	d
DUMMYUNIONNAME	thirdparty/glfw/src/deps/mingw/dinput.h	/^	} DUMMYUNIONNAME;$/;"	m	struct:_DIACTIONA	typeref:union:_DIACTIONA::__anon180
DUMMYUNIONNAME	thirdparty/glfw/src/deps/mingw/dinput.h	/^	} DUMMYUNIONNAME;$/;"	m	struct:_DIACTIONW	typeref:union:_DIACTIONW::__anon181
DUMMYUNIONNAME1	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	47;"	d
DUMMYUNIONNAME1	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	58;"	d
DUMMYUNIONNAME1	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	72;"	d
DUMMYUNIONNAME1	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	74;"	d
DUMMYUNIONNAME2	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	48;"	d
DUMMYUNIONNAME2	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	59;"	d
DUMMYUNIONNAME3	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	49;"	d
DUMMYUNIONNAME3	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	60;"	d
DUMMYUNIONNAME4	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	50;"	d
DUMMYUNIONNAME4	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	61;"	d
DUMMYUNIONNAME5	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	51;"	d
DUMMYUNIONNAME5	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	62;"	d
DUMMYUNIONNAME6	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	52;"	d
DUMMYUNIONNAME6	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	63;"	d
DUMMYUNIONNAME7	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	53;"	d
DUMMYUNIONNAME7	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	64;"	d
DUMMYUNIONNAME8	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	54;"	d
DUMMYUNIONNAME8	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	65;"	d
DUMMYUNIONNAME9	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	55;"	d
DUMMYUNIONNAME9	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	66;"	d
DYNAMIC_OBJECTS_INCLUDED_9C12AB16_BFD8_4DA3_9F2E_CDD176ADBE80	app/perils/src/game/dynamic_object.hpp	2;"	d
D_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule D_rules[] =$/;"	v	file:
Data	app/perils/src/game/dynamic_object.hpp	/^struct Data$/;"	s	namespace:Dynamic_object
Data	lib/nil/include/nil/data/audio.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/include/nil/data/bounding_box.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/include/nil/data/camera.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/include/nil/data/developer.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/include/nil/data/gamepad.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/include/nil/data/keyboard.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/include/nil/data/light.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/include/nil/data/logic.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/include/nil/data/mouse.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/include/nil/data/renderable.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/include/nil/data/renderable_text.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/include/nil/data/transform.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/include/nil/data/window.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/include/nil/fwd.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/src/graph/graph_data.hpp	/^struct Data$/;"	s	namespace:Nil::Graph
Data	lib/nil/src/interface/data/audio.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/interface/data/bounding_box.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/interface/data/camera.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/interface/data/common.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil/src/interface/data/developer.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/interface/data/gamepad.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/interface/data/keyboard.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/interface/data/light.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/interface/data/logic.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/interface/data/mouse.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/interface/data/renderable.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/interface/data/renderable_text.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/interface/data/transform.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/interface/data/window.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/internal_data/internal_data.cpp	/^namespace Data {$/;"	n	namespace:Nil	file:
Data	lib/nil/src/internal_data/internal_data.hpp	/^namespace Data {$/;"	n	namespace:Nil
Data	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^struct Data$/;"	s	namespace:Nil_ext::ImGui_Aspect
Data	lib/nil_aspects/include/aspect/renderer_aspect.hpp	/^struct Data$/;"	s	namespace:Nil_ext::ROV_Aspect
Data	lib/nil_aspects/include/aspect/roa_aspect.hpp	/^struct Data$/;"	s	namespace:Nil_ext::ROA_Aspect
Data	lib/nil_aspects/include/aspect/so_loud.hpp	/^struct Data$/;"	s	namespace:Nil_ext::SoLoud_Aspect
Data	lib/roa/include/roa/data.hpp	/^class Data$/;"	c	namespace:ROA
Data	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<Pair>      Data;$/;"	m	struct:ImGuiStorage
Data	thirdparty/imgui/include/imgui/imgui.h	/^    T*                          Data;$/;"	m	class:ImVector
DataTypeApplyOp	thirdparty/imgui/src/imgui.cpp	/^static void DataTypeApplyOp(ImGuiDataType data_type, int op, void* value1, const void* value2)\/\/ Store into value1$/;"	f	file:
DataTypeApplyOpFromText	thirdparty/imgui/src/imgui.cpp	/^static bool DataTypeApplyOpFromText(const char* buf, const char* initial_value_buf, ImGuiDataType data_type, void* data_ptr, const char* scalar_format)$/;"	f	file:
DataTypeFormatString	thirdparty/imgui/src/imgui.cpp	/^static inline void DataTypeFormatString(ImGuiDataType data_type, void* data_ptr, const char* display_format, char* buf, int buf_size)$/;"	f	file:
DataTypeFormatString	thirdparty/imgui/src/imgui.cpp	/^static inline void DataTypeFormatString(ImGuiDataType data_type, void* data_ptr, int decimal_precision, char* buf, int buf_size)$/;"	f	file:
DeIndexAllBuffers	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawData::DeIndexAllBuffers()$/;"	f	class:ImDrawData
DeclColumns	thirdparty/imgui/src/imgui.cpp	/^float ImGuiSimpleColumns::DeclColumns(float w0, float w1, float w2) \/\/ not using va_arg because they promote float to double$/;"	f	class:ImGuiSimpleColumns
Decode85	thirdparty/imgui/src/imgui_draw.cpp	/^static void         Decode85(const unsigned char* src, unsigned char* dst)$/;"	f	file:
Decode85Byte	thirdparty/imgui/src/imgui_draw.cpp	/^static unsigned int Decode85Byte(char c)                                    { return c >= '\\\\' ? c-36 : c-35; }$/;"	f	file:
DecomposeMatrixToComponents	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   void DecomposeMatrixToComponents(const float *matrix, float *translation, float *rotation, float *scale)$/;"	f	namespace:ImGuizmo
Delete	thirdparty/remotery/src/Remotery.c	524;"	d	file:
DeleteChars	thirdparty/imgui/src/imgui.cpp	/^void ImGuiTextEditCallbackData::DeleteChars(int pos, int bytes_count)$/;"	f	class:ImGuiTextEditCallbackData
DeleteContext	thirdparty/glfw/src/wgl_context.h	/^    PFN_wglDeleteContext                DeleteContext;$/;"	m	struct:_GLFWlibraryWGL
DeltaTime	thirdparty/imgui/include/imgui/imgui.h	/^    float         DeltaTime;                \/\/ = 1.0f\/60.0f         \/\/ Time elapsed since last frame, in seconds.$/;"	m	struct:ImGuiIO
Descent	thirdparty/imgui/include/imgui/imgui.h	/^    float                       Ascent, Descent;    \/\/              \/\/ Ascent: distance from top to bottom of e.g. 'A' [0..FontSize]$/;"	m	struct:ImFont
DesiredSize	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2  DesiredSize;    \/\/ Read-write.  Desired size, based on user's mouse position. Write to this field to restrain resizing.$/;"	m	struct:ImGuiSizeConstraintCallbackData
DestroyContext	thirdparty/glfw/src/egl_context.h	/^    PFN_eglDestroyContext       DestroyContext;$/;"	m	struct:_GLFWlibraryEGL
DestroyContext	thirdparty/glfw/src/glx_context.h	/^    PFNGLXDESTROYCONTEXTPROC            DestroyContext;$/;"	m	struct:_GLFWlibraryGLX
DestroyContext	thirdparty/glfw/src/osmesa_context.h	/^    PFN_OSMesaDestroyContext        DestroyContext;$/;"	m	struct:_GLFWlibraryOSMesa
DestroyContext	thirdparty/imgui/src/imgui.cpp	/^void ImGui::DestroyContext(ImGuiContext* ctx)$/;"	f	class:ImGui
DestroySurface	thirdparty/glfw/src/egl_context.h	/^    PFN_eglDestroySurface       DestroySurface;$/;"	m	struct:_GLFWlibraryEGL
DestroyWindow	thirdparty/glfw/src/glx_context.h	/^    PFNGLXDESTROYWINDOWPROC             DestroyWindow;$/;"	m	struct:_GLFWlibraryGLX
Detail	thirdparty/catch/include/catch/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Developer	lib/nil/include/nil/data/developer.hpp	/^struct Developer$/;"	s	namespace:Nil::Data
DidntThrowException	thirdparty/catch/include/catch/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DirectInput8Create	thirdparty/glfw/src/win32_platform.h	172;"	d
DirectInputCreate	thirdparty/glfw/src/deps/mingw/dinput.h	2458;"	d
DiskFile	thirdparty/soloud/include/soloud/soloud_file.h	/^	class DiskFile : public File$/;"	c	namespace:SoLoud
DiskFile	thirdparty/soloud/src/core/soloud_file.cpp	/^	DiskFile::DiskFile()$/;"	f	class:SoLoud::DiskFile
DiskFile	thirdparty/soloud/src/core/soloud_file.cpp	/^DiskFile::DiskFile(FILE *fp):$/;"	f	class:SoLoud::DiskFile
DisplayEnd	thirdparty/imgui/include/imgui/imgui.h	/^    int     ItemsCount, StepNo, DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper
DisplayFramebufferScale	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2        DisplayFramebufferScale;  \/\/ = (1.0f,1.0f)        \/\/ For retina display or other situations where window coordinates are different from framebuffer coordinates. User storage only, presently not used by ImGui.$/;"	m	struct:ImGuiIO
DisplayOffset	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2                      DisplayOffset;      \/\/ = (0.f,1.f)  \/\/ Offset font rendering by xx pixels$/;"	m	struct:ImFont
DisplaySafeAreaPadding	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      DisplaySafeAreaPadding;     \/\/ If you cannot see the edge of your screen (e.g. on a TV) increase the safe area padding. Covers popups\/tooltips as well regular windows.$/;"	m	struct:ImGuiStyle
DisplaySize	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2        DisplaySize;              \/\/ <unset>              \/\/ Display size, in pixels. For clamping windows positions.$/;"	m	struct:ImGuiIO
DisplayStart	thirdparty/imgui/include/imgui/imgui.h	/^    int     ItemsCount, StepNo, DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper
DisplayVisibleMax	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2        DisplayVisibleMax;        \/\/ <unset> (0.0f,0.0f)  \/\/ If the values are the same, we defaults to Min=(0.0f) and Max=DisplaySize$/;"	m	struct:ImGuiIO
DisplayVisibleMin	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2        DisplayVisibleMin;        \/\/ <unset> (0.0f,0.0f)  \/\/ If you use DisplaySize as a virtual space larger than your screen, set DisplayVisibleMin\/Max to the visible area.$/;"	m	struct:ImGuiIO
DisplayWindowPadding	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      DisplayWindowPadding;       \/\/ Window positions are clamped to be visible within the display area by at least this amount. Only covers regular windows.$/;"	m	struct:ImGuiStyle
DllMain	thirdparty/glfw/src/win32_init.c	/^BOOL WINAPI DllMain(HINSTANCE instance, DWORD reason, LPVOID reserved)$/;"	f
DoCompare	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^inline void CPU::DoCompare(unsigned char reg, unsigned char value)$/;"	f	class:CPU
DoDMA	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^inline void TED::DoDMA( unsigned char *Buf, unsigned int Offset )$/;"	f	class:TED
Dot	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float Dot(const vec_t &v) const$/;"	f	struct:ImGuizmo::vec_t
Dot	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   float Dot(const vec_t &v1, const vec_t &v2)$/;"	f	namespace:ImGuizmo
Dot3	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float Dot3(const vec_t &v) const$/;"	f	struct:ImGuizmo::vec_t
DragBehavior	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::DragBehavior(const ImRect& frame_bb, ImGuiID id, float* v, float v_speed, float v_min, float v_max, int decimal_precision, float power)$/;"	f	class:ImGui
DragCurrentValue	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   DragCurrentValue;                   \/\/ Currently dragged value, always float, not rounded by end-user precision settings$/;"	m	struct:ImGuiContext
DragFloat	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::DragFloat(const char* label, float* v, float v_speed, float v_min, float v_max, const char* display_format, float power)$/;"	f	class:ImGui
DragFloat2	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::DragFloat2(const char* label, float v[2], float v_speed, float v_min, float v_max, const char* display_format, float power)$/;"	f	class:ImGui
DragFloat3	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::DragFloat3(const char* label, float v[3], float v_speed, float v_min, float v_max, const char* display_format, float power)$/;"	f	class:ImGui
DragFloat4	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::DragFloat4(const char* label, float v[4], float v_speed, float v_min, float v_max, const char* display_format, float power)$/;"	f	class:ImGui
DragFloatN	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::DragFloatN(const char* label, float* v, int components, float v_speed, float v_min, float v_max, const char* display_format, float power)$/;"	f	class:ImGui
DragFloatRange2	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::DragFloatRange2(const char* label, float* v_current_min, float* v_current_max, float v_speed, float v_min, float v_max, const char* display_format, const char* display_format_max, float power)$/;"	f	class:ImGui
DragInt	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::DragInt(const char* label, int* v, float v_speed, int v_min, int v_max, const char* display_format)$/;"	f	class:ImGui
DragInt2	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::DragInt2(const char* label, int v[2], float v_speed, int v_min, int v_max, const char* display_format)$/;"	f	class:ImGui
DragInt3	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::DragInt3(const char* label, int v[3], float v_speed, int v_min, int v_max, const char* display_format)$/;"	f	class:ImGui
DragInt4	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::DragInt4(const char* label, int v[4], float v_speed, int v_min, int v_max, const char* display_format)$/;"	f	class:ImGui
DragIntN	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::DragIntN(const char* label, int* v, int components, float v_speed, int v_min, int v_max, const char* display_format)$/;"	f	class:ImGui
DragIntRange2	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::DragIntRange2(const char* label, int* v_current_min, int* v_current_max, float v_speed, int v_min, int v_max, const char* display_format, const char* display_format_max)$/;"	f	class:ImGui
DragLastMouseDelta	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  DragLastMouseDelta;$/;"	m	struct:ImGuiContext
DragSpeedDefaultRatio	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   DragSpeedDefaultRatio;              \/\/ If speed == 0.0f, uses (max-min) * DragSpeedDefaultRatio$/;"	m	struct:ImGuiContext
DragSpeedScaleFast	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   DragSpeedScaleFast;$/;"	m	struct:ImGuiContext
DragSpeedScaleSlow	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   DragSpeedScaleSlow;$/;"	m	struct:ImGuiContext
Draw	thirdparty/imgui/src/imgui.cpp	/^bool ImGuiTextFilter::Draw(const char* label, float width)$/;"	f	class:ImGuiTextFilter
DrawCube	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   void DrawCube(const float *view, const float *projection, float *matrix)$/;"	f	namespace:ImGuizmo
DrawHatchedAxis	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void DrawHatchedAxis(const vec_t& axis)$/;"	f	namespace:ImGuizmo
DrawList	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImDrawList*             DrawList;$/;"	m	struct:ImGuiWindow
DrawRotationGizmo	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void DrawRotationGizmo(int type)$/;"	f	namespace:ImGuizmo
DrawScaleGizmo	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void DrawScaleGizmo(int type)$/;"	f	namespace:ImGuizmo
DrawTranslationGizmo	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void DrawTranslationGizmo(int type)$/;"	f	namespace:ImGuizmo
DstFont	thirdparty/imgui/include/imgui/imgui.h	/^    ImFont*         DstFont;$/;"	m	struct:ImFontConfig
Dummy	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Dummy(const ImVec2& size)$/;"	f	class:ImGui
DwmFlush	thirdparty/glfw/src/win32_platform.h	/^        PFN_DwmFlush                    DwmFlush;$/;"	m	struct:_GLFWlibraryWin32::__anon157
DwmIsCompositionEnabled	thirdparty/glfw/src/win32_platform.h	/^        PFN_DwmIsCompositionEnabled     DwmIsCompositionEnabled;$/;"	m	struct:_GLFWlibraryWin32::__anon157
Dynamic_object	app/perils/src/game/dynamic_object.cpp	/^namespace Dynamic_object {$/;"	n	file:
Dynamic_object	app/perils/src/game/dynamic_object.hpp	/^namespace Dynamic_object {$/;"	n
E	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	D					: 68,$/;"	p	class:namespace.Codes
EDS_ROTATEDMODE	thirdparty/glfw/src/win32_platform.h	99;"	d
EGLAPIENTRY	thirdparty/glfw/src/egl_context.h	31;"	d
EGLAPIENTRY	thirdparty/glfw/src/egl_context.h	35;"	d
EGLAPIENTRY	thirdparty/glfw/src/egl_context.h	39;"	d
EGLAPIENTRY	thirdparty/glfw/src/egl_context.h	43;"	d
EGLAPIENTRY	thirdparty/glfw/src/egl_context.h	47;"	d
EGLBoolean	thirdparty/glfw/src/egl_context.h	/^typedef unsigned int EGLBoolean;$/;"	t
EGLConfig	thirdparty/glfw/src/egl_context.h	/^typedef void* EGLConfig;$/;"	t
EGLContext	thirdparty/glfw/src/egl_context.h	/^typedef void* EGLContext;$/;"	t
EGLDisplay	thirdparty/glfw/src/egl_context.h	/^typedef void* EGLDisplay;$/;"	t
EGLNativeDisplayType	thirdparty/glfw/src/egl_context.h	/^typedef Display* EGLNativeDisplayType;$/;"	t
EGLNativeDisplayType	thirdparty/glfw/src/egl_context.h	/^typedef HDC EGLNativeDisplayType;$/;"	t
EGLNativeDisplayType	thirdparty/glfw/src/egl_context.h	/^typedef MirEGLNativeDisplayType EGLNativeDisplayType;$/;"	t
EGLNativeDisplayType	thirdparty/glfw/src/egl_context.h	/^typedef struct wl_display* EGLNativeDisplayType;$/;"	t	typeref:struct:wl_display
EGLNativeDisplayType	thirdparty/glfw/src/egl_context.h	/^typedef void* EGLNativeDisplayType;$/;"	t
EGLNativeWindowType	thirdparty/glfw/src/egl_context.h	/^typedef HWND EGLNativeWindowType;$/;"	t
EGLNativeWindowType	thirdparty/glfw/src/egl_context.h	/^typedef MirEGLNativeWindowType EGLNativeWindowType;$/;"	t
EGLNativeWindowType	thirdparty/glfw/src/egl_context.h	/^typedef Window EGLNativeWindowType;$/;"	t
EGLNativeWindowType	thirdparty/glfw/src/egl_context.h	/^typedef id EGLNativeWindowType;$/;"	t
EGLNativeWindowType	thirdparty/glfw/src/egl_context.h	/^typedef struct wl_egl_window* EGLNativeWindowType;$/;"	t	typeref:struct:wl_egl_window
EGLSurface	thirdparty/glfw/src/egl_context.h	/^typedef void* EGLSurface;$/;"	t
EGL_ALPHA_SIZE	thirdparty/glfw/src/egl_context.h	77;"	d
EGL_BAD_ACCESS	thirdparty/glfw/src/egl_context.h	56;"	d
EGL_BAD_ALLOC	thirdparty/glfw/src/egl_context.h	57;"	d
EGL_BAD_ATTRIBUTE	thirdparty/glfw/src/egl_context.h	58;"	d
EGL_BAD_CONFIG	thirdparty/glfw/src/egl_context.h	59;"	d
EGL_BAD_CONTEXT	thirdparty/glfw/src/egl_context.h	60;"	d
EGL_BAD_CURRENT_SURFACE	thirdparty/glfw/src/egl_context.h	61;"	d
EGL_BAD_DISPLAY	thirdparty/glfw/src/egl_context.h	62;"	d
EGL_BAD_MATCH	thirdparty/glfw/src/egl_context.h	63;"	d
EGL_BAD_NATIVE_PIXMAP	thirdparty/glfw/src/egl_context.h	64;"	d
EGL_BAD_NATIVE_WINDOW	thirdparty/glfw/src/egl_context.h	65;"	d
EGL_BAD_PARAMETER	thirdparty/glfw/src/egl_context.h	66;"	d
EGL_BAD_SURFACE	thirdparty/glfw/src/egl_context.h	67;"	d
EGL_BLUE_SIZE	thirdparty/glfw/src/egl_context.h	78;"	d
EGL_COLOR_BUFFER_TYPE	thirdparty/glfw/src/egl_context.h	69;"	d
EGL_CONTEXT_CLIENT_VERSION	thirdparty/glfw/src/egl_context.h	88;"	d
EGL_CONTEXT_FLAGS_KHR	thirdparty/glfw/src/egl_context.h	106;"	d
EGL_CONTEXT_LOST	thirdparty/glfw/src/egl_context.h	68;"	d
EGL_CONTEXT_MAJOR_VERSION_KHR	thirdparty/glfw/src/egl_context.h	103;"	d
EGL_CONTEXT_MINOR_VERSION_KHR	thirdparty/glfw/src/egl_context.h	104;"	d
EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR	thirdparty/glfw/src/egl_context.h	97;"	d
EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR	thirdparty/glfw/src/egl_context.h	96;"	d
EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR	thirdparty/glfw/src/egl_context.h	98;"	d
EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR	thirdparty/glfw/src/egl_context.h	95;"	d
EGL_CONTEXT_OPENGL_NO_ERROR_KHR	thirdparty/glfw/src/egl_context.h	107;"	d
EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR	thirdparty/glfw/src/egl_context.h	105;"	d
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR	thirdparty/glfw/src/egl_context.h	99;"	d
EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR	thirdparty/glfw/src/egl_context.h	102;"	d
EGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR	thirdparty/glfw/src/egl_context.h	112;"	d
EGL_CONTEXT_RELEASE_BEHAVIOR_KHR	thirdparty/glfw/src/egl_context.h	110;"	d
EGL_CONTEXT_RELEASE_BEHAVIOR_NONE_KHR	thirdparty/glfw/src/egl_context.h	111;"	d
EGL_DEFAULT_DISPLAY	thirdparty/glfw/src/egl_context.h	93;"	d
EGL_DEPTH_SIZE	thirdparty/glfw/src/egl_context.h	81;"	d
EGL_EXTENSIONS	thirdparty/glfw/src/egl_context.h	87;"	d
EGL_GL_COLORSPACE_KHR	thirdparty/glfw/src/egl_context.h	108;"	d
EGL_GL_COLORSPACE_SRGB_KHR	thirdparty/glfw/src/egl_context.h	109;"	d
EGL_GREEN_SIZE	thirdparty/glfw/src/egl_context.h	79;"	d
EGL_LOSE_CONTEXT_ON_RESET_KHR	thirdparty/glfw/src/egl_context.h	101;"	d
EGL_NATIVE_VISUAL_ID	thirdparty/glfw/src/egl_context.h	89;"	d
EGL_NONE	thirdparty/glfw/src/egl_context.h	86;"	d
EGL_NOT_INITIALIZED	thirdparty/glfw/src/egl_context.h	55;"	d
EGL_NO_CONTEXT	thirdparty/glfw/src/egl_context.h	92;"	d
EGL_NO_DISPLAY	thirdparty/glfw/src/egl_context.h	91;"	d
EGL_NO_RESET_NOTIFICATION_KHR	thirdparty/glfw/src/egl_context.h	100;"	d
EGL_NO_SURFACE	thirdparty/glfw/src/egl_context.h	90;"	d
EGL_OPENGL_API	thirdparty/glfw/src/egl_context.h	85;"	d
EGL_OPENGL_BIT	thirdparty/glfw/src/egl_context.h	76;"	d
EGL_OPENGL_ES2_BIT	thirdparty/glfw/src/egl_context.h	75;"	d
EGL_OPENGL_ES_API	thirdparty/glfw/src/egl_context.h	84;"	d
EGL_OPENGL_ES_BIT	thirdparty/glfw/src/egl_context.h	74;"	d
EGL_RED_SIZE	thirdparty/glfw/src/egl_context.h	80;"	d
EGL_RENDERABLE_TYPE	thirdparty/glfw/src/egl_context.h	73;"	d
EGL_RGB_BUFFER	thirdparty/glfw/src/egl_context.h	70;"	d
EGL_SAMPLES	thirdparty/glfw/src/egl_context.h	83;"	d
EGL_STENCIL_SIZE	thirdparty/glfw/src/egl_context.h	82;"	d
EGL_SUCCESS	thirdparty/glfw/src/egl_context.h	54;"	d
EGL_SURFACE_TYPE	thirdparty/glfw/src/egl_context.h	71;"	d
EGL_WINDOW_BIT	thirdparty/glfw/src/egl_context.h	72;"	d
EGLenum	thirdparty/glfw/src/egl_context.h	/^typedef unsigned int EGLenum;$/;"	t
EGLint	thirdparty/glfw/src/egl_context.h	/^typedef int EGLint;$/;"	t
EG_ATTACK	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		EG_FROZEN, EG_ATTACK, EG_DECAY, EG_RELEASE$/;"	e	enum:SIDsound::__anon199
EG_ATTACK	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		EG_FROZEN, EG_ATTACK, EG_DECAY, EG_RELEASE$/;"	e	enum:SIDsound::__anon193
EG_DECAY	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		EG_FROZEN, EG_ATTACK, EG_DECAY, EG_RELEASE$/;"	e	enum:SIDsound::__anon199
EG_DECAY	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		EG_FROZEN, EG_ATTACK, EG_DECAY, EG_RELEASE$/;"	e	enum:SIDsound::__anon193
EG_FROZEN	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		EG_FROZEN, EG_ATTACK, EG_DECAY, EG_RELEASE$/;"	e	enum:SIDsound::__anon199
EG_FROZEN	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		EG_FROZEN, EG_ATTACK, EG_DECAY, EG_RELEASE$/;"	e	enum:SIDsound::__anon193
EG_RELEASE	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		EG_FROZEN, EG_ATTACK, EG_DECAY, EG_RELEASE$/;"	e	enum:SIDsound::__anon199
EG_RELEASE	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		EG_FROZEN, EG_ATTACK, EG_DECAY, EG_RELEASE$/;"	e	enum:SIDsound::__anon193
EIGHT	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	SEVEN				: 55,$/;"	p	class:namespace.Codes
ELEMENTS	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^enum ELEMENTS $/;"	g	file:
ELEMENT_FEATURES	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^enum ELEMENT_FEATURES$/;"	g	file:
ELM_A	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_U,	ELM_O,	ELM_OO,	ELM_A,	ELM_EE,	ELM_ER,	ELM_AR,$/;"	e	enum:ELEMENTS	file:
ELM_A1	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_A1, ELM_A2, ELM_A3, ELM_A4, $/;"	e	enum:Eparm_e	file:
ELM_A2	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_A1, ELM_A2, ELM_A3, ELM_A4, $/;"	e	enum:Eparm_e	file:
ELM_A3	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_A1, ELM_A2, ELM_A3, ELM_A4, $/;"	e	enum:Eparm_e	file:
ELM_A4	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_A1, ELM_A2, ELM_A3, ELM_A4, $/;"	e	enum:Eparm_e	file:
ELM_A5	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_A5, ELM_A6, ELM_AB, ELM_AV, $/;"	e	enum:Eparm_e	file:
ELM_A6	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_A5, ELM_A6, ELM_AB, ELM_AV, $/;"	e	enum:Eparm_e	file:
ELM_AA	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_RX,	ELM_R,	ELM_W,	ELM_Y,	ELM_I,	ELM_E,	ELM_AA,$/;"	e	enum:ELEMENTS	file:
ELM_AB	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_A5, ELM_A6, ELM_AB, ELM_AV, $/;"	e	enum:Eparm_e	file:
ELM_AF	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_AVC, ELM_ASP, ELM_AF, $/;"	e	enum:Eparm_e	file:
ELM_AI	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_AW,	ELM_UU,	ELM_AI,	ELM_IE,	ELM_OI,	ELM_OU,	ELM_OV,$/;"	e	enum:ELEMENTS	file:
ELM_AIR	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_OA,	ELM_IA,	ELM_IB,	ELM_AIR,ELM_OOR,ELM_OR$/;"	e	enum:ELEMENTS	file:
ELM_AN	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_B1, ELM_B2, ELM_B3, ELM_AN, $/;"	e	enum:Eparm_e	file:
ELM_AR	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_U,	ELM_O,	ELM_OO,	ELM_A,	ELM_EE,	ELM_ER,	ELM_AR,$/;"	e	enum:ELEMENTS	file:
ELM_ASP	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_AVC, ELM_ASP, ELM_AF, $/;"	e	enum:Eparm_e	file:
ELM_AV	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_A5, ELM_A6, ELM_AB, ELM_AV, $/;"	e	enum:Eparm_e	file:
ELM_AVC	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_AVC, ELM_ASP, ELM_AF, $/;"	e	enum:Eparm_e	file:
ELM_AW	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_AW,	ELM_UU,	ELM_AI,	ELM_IE,	ELM_OI,	ELM_OU,	ELM_OV,$/;"	e	enum:ELEMENTS	file:
ELM_B	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_TZ,	ELM_K,	ELM_KY,	ELM_KZ,	ELM_B,	ELM_BY,	ELM_BZ,	$/;"	e	enum:ELEMENTS	file:
ELM_B1	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_B1, ELM_B2, ELM_B3, ELM_AN, $/;"	e	enum:Eparm_e	file:
ELM_B2	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_B1, ELM_B2, ELM_B3, ELM_AN, $/;"	e	enum:Eparm_e	file:
ELM_B3	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_B1, ELM_B2, ELM_B3, ELM_AN, $/;"	e	enum:Eparm_e	file:
ELM_BY	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_TZ,	ELM_K,	ELM_KY,	ELM_KZ,	ELM_B,	ELM_BY,	ELM_BZ,	$/;"	e	enum:ELEMENTS	file:
ELM_BZ	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_TZ,	ELM_K,	ELM_KY,	ELM_KZ,	ELM_B,	ELM_BY,	ELM_BZ,	$/;"	e	enum:ELEMENTS	file:
ELM_CH	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_ZH,	ELM_CH,	ELM_CI,	ELM_J,	ELM_JY,	ELM_L,	ELM_LL,$/;"	e	enum:ELEMENTS	file:
ELM_CI	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_ZH,	ELM_CH,	ELM_CI,	ELM_J,	ELM_JY,	ELM_L,	ELM_LL,$/;"	e	enum:ELEMENTS	file:
ELM_COUNT	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_COUNT$/;"	e	enum:Eparm_e	file:
ELM_D	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_D,	ELM_DY,	ELM_DZ,	ELM_G,	ELM_GY,	ELM_GZ,	ELM_M,	$/;"	e	enum:ELEMENTS	file:
ELM_DH	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_H,	ELM_V,	ELM_QQ,	ELM_DH,	ELM_DI,	ELM_Z,	ELM_ZZ,$/;"	e	enum:ELEMENTS	file:
ELM_DI	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_H,	ELM_V,	ELM_QQ,	ELM_DH,	ELM_DI,	ELM_Z,	ELM_ZZ,$/;"	e	enum:ELEMENTS	file:
ELM_DY	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_D,	ELM_DY,	ELM_DZ,	ELM_G,	ELM_GY,	ELM_GZ,	ELM_M,	$/;"	e	enum:ELEMENTS	file:
ELM_DZ	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_D,	ELM_DY,	ELM_DZ,	ELM_G,	ELM_GY,	ELM_GZ,	ELM_M,	$/;"	e	enum:ELEMENTS	file:
ELM_E	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_RX,	ELM_R,	ELM_W,	ELM_Y,	ELM_I,	ELM_E,	ELM_AA,$/;"	e	enum:ELEMENTS	file:
ELM_EE	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_U,	ELM_O,	ELM_OO,	ELM_A,	ELM_EE,	ELM_ER,	ELM_AR,$/;"	e	enum:ELEMENTS	file:
ELM_END	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_END = 0,	$/;"	e	enum:ELEMENTS	file:
ELM_ER	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_U,	ELM_O,	ELM_OO,	ELM_A,	ELM_EE,	ELM_ER,	ELM_AR,$/;"	e	enum:ELEMENTS	file:
ELM_F	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_N,	ELM_NG,	ELM_F,	ELM_TH,	ELM_S,	ELM_SH,	ELM_X,$/;"	e	enum:ELEMENTS	file:
ELM_F1	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_FN, ELM_F1, ELM_F2, ELM_F3, $/;"	e	enum:Eparm_e	file:
ELM_F2	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_FN, ELM_F1, ELM_F2, ELM_F3, $/;"	e	enum:Eparm_e	file:
ELM_F3	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_FN, ELM_F1, ELM_F2, ELM_F3, $/;"	e	enum:Eparm_e	file:
ELM_FEATURE_ALV	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_ALV = 0x00000001,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_APR	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_APR = 0x00000002,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_BCK	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_BCK = 0x00000004,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_BLB	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_BLB = 0x00000008,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_CNT	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_CNT = 0x00000010,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_DNT	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_DNT = 0x00000020,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_FNT	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_FNT = 0x00000040,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_FRC	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_FRC = 0x00000080,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_GLT	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_GLT = 0x00000100,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_HGH	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_HGH = 0x00000200,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_LAT	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_LAT = 0x00000400,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_LBD	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_LBD = 0x00000800,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_LBV	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_LBV = 0x00001000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_LMD	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_LMD = 0x00002000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_LOW	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_LOW = 0x00004000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_MDL	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_MDL = 0x00008000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_NAS	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_NAS = 0x00010000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_PAL	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_PAL = 0x00020000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_PLA	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_PLA = 0x00040000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_RND	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_RND = 0x00080000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_RZD	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_RZD = 0x00100000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_SMH	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_SMH = 0x00200000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_STP	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_STP = 0x00400000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_UMD	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_UMD = 0x00800000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_UNR	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_UNR = 0x01000000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_VCD	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_VCD = 0x02000000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_VEL	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_VEL = 0x04000000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_VLS	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_VLS = 0x08000000,$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FEATURE_VWL	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_FEATURE_VWL = 0x10000000$/;"	e	enum:ELEMENT_FEATURES	file:
ELM_FN	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^  ELM_FN, ELM_F1, ELM_F2, ELM_F3, $/;"	e	enum:Eparm_e	file:
ELM_G	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_D,	ELM_DY,	ELM_DZ,	ELM_G,	ELM_GY,	ELM_GZ,	ELM_M,	$/;"	e	enum:ELEMENTS	file:
ELM_GY	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_D,	ELM_DY,	ELM_DZ,	ELM_G,	ELM_GY,	ELM_GZ,	ELM_M,	$/;"	e	enum:ELEMENTS	file:
ELM_GZ	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_D,	ELM_DY,	ELM_DZ,	ELM_G,	ELM_GY,	ELM_GZ,	ELM_M,	$/;"	e	enum:ELEMENTS	file:
ELM_H	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_H,	ELM_V,	ELM_QQ,	ELM_DH,	ELM_DI,	ELM_Z,	ELM_ZZ,$/;"	e	enum:ELEMENTS	file:
ELM_I	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_RX,	ELM_R,	ELM_W,	ELM_Y,	ELM_I,	ELM_E,	ELM_AA,$/;"	e	enum:ELEMENTS	file:
ELM_IA	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_OA,	ELM_IA,	ELM_IB,	ELM_AIR,ELM_OOR,ELM_OR$/;"	e	enum:ELEMENTS	file:
ELM_IB	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_OA,	ELM_IA,	ELM_IB,	ELM_AIR,ELM_OOR,ELM_OR$/;"	e	enum:ELEMENTS	file:
ELM_IE	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_AW,	ELM_UU,	ELM_AI,	ELM_IE,	ELM_OI,	ELM_OU,	ELM_OV,$/;"	e	enum:ELEMENTS	file:
ELM_J	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_ZH,	ELM_CH,	ELM_CI,	ELM_J,	ELM_JY,	ELM_L,	ELM_LL,$/;"	e	enum:ELEMENTS	file:
ELM_JY	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_ZH,	ELM_CH,	ELM_CI,	ELM_J,	ELM_JY,	ELM_L,	ELM_LL,$/;"	e	enum:ELEMENTS	file:
ELM_K	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_TZ,	ELM_K,	ELM_KY,	ELM_KZ,	ELM_B,	ELM_BY,	ELM_BZ,	$/;"	e	enum:ELEMENTS	file:
ELM_KY	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_TZ,	ELM_K,	ELM_KY,	ELM_KZ,	ELM_B,	ELM_BY,	ELM_BZ,	$/;"	e	enum:ELEMENTS	file:
ELM_KZ	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_TZ,	ELM_K,	ELM_KY,	ELM_KZ,	ELM_B,	ELM_BY,	ELM_BZ,	$/;"	e	enum:ELEMENTS	file:
ELM_L	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_ZH,	ELM_CH,	ELM_CI,	ELM_J,	ELM_JY,	ELM_L,	ELM_LL,$/;"	e	enum:ELEMENTS	file:
ELM_LL	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_ZH,	ELM_CH,	ELM_CI,	ELM_J,	ELM_JY,	ELM_L,	ELM_LL,$/;"	e	enum:ELEMENTS	file:
ELM_M	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_D,	ELM_DY,	ELM_DZ,	ELM_G,	ELM_GY,	ELM_GZ,	ELM_M,	$/;"	e	enum:ELEMENTS	file:
ELM_N	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_N,	ELM_NG,	ELM_F,	ELM_TH,	ELM_S,	ELM_SH,	ELM_X,$/;"	e	enum:ELEMENTS	file:
ELM_NG	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_N,	ELM_NG,	ELM_F,	ELM_TH,	ELM_S,	ELM_SH,	ELM_X,$/;"	e	enum:ELEMENTS	file:
ELM_O	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_U,	ELM_O,	ELM_OO,	ELM_A,	ELM_EE,	ELM_ER,	ELM_AR,$/;"	e	enum:ELEMENTS	file:
ELM_OA	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_OA,	ELM_IA,	ELM_IB,	ELM_AIR,ELM_OOR,ELM_OR$/;"	e	enum:ELEMENTS	file:
ELM_OI	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_AW,	ELM_UU,	ELM_AI,	ELM_IE,	ELM_OI,	ELM_OU,	ELM_OV,$/;"	e	enum:ELEMENTS	file:
ELM_OO	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_U,	ELM_O,	ELM_OO,	ELM_A,	ELM_EE,	ELM_ER,	ELM_AR,$/;"	e	enum:ELEMENTS	file:
ELM_OOR	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_OA,	ELM_IA,	ELM_IB,	ELM_AIR,ELM_OOR,ELM_OR$/;"	e	enum:ELEMENTS	file:
ELM_OR	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_OA,	ELM_IA,	ELM_IB,	ELM_AIR,ELM_OOR,ELM_OR$/;"	e	enum:ELEMENTS	file:
ELM_OU	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_AW,	ELM_UU,	ELM_AI,	ELM_IE,	ELM_OI,	ELM_OU,	ELM_OV,$/;"	e	enum:ELEMENTS	file:
ELM_OV	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_AW,	ELM_UU,	ELM_AI,	ELM_IE,	ELM_OI,	ELM_OU,	ELM_OV,$/;"	e	enum:ELEMENTS	file:
ELM_P	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_Q,	ELM_P,	ELM_PY,	ELM_PZ,	ELM_T,	ELM_TY,	$/;"	e	enum:ELEMENTS	file:
ELM_PY	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_Q,	ELM_P,	ELM_PY,	ELM_PZ,	ELM_T,	ELM_TY,	$/;"	e	enum:ELEMENTS	file:
ELM_PZ	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_Q,	ELM_P,	ELM_PY,	ELM_PZ,	ELM_T,	ELM_TY,	$/;"	e	enum:ELEMENTS	file:
ELM_Q	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_Q,	ELM_P,	ELM_PY,	ELM_PZ,	ELM_T,	ELM_TY,	$/;"	e	enum:ELEMENTS	file:
ELM_QQ	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_H,	ELM_V,	ELM_QQ,	ELM_DH,	ELM_DI,	ELM_Z,	ELM_ZZ,$/;"	e	enum:ELEMENTS	file:
ELM_R	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_RX,	ELM_R,	ELM_W,	ELM_Y,	ELM_I,	ELM_E,	ELM_AA,$/;"	e	enum:ELEMENTS	file:
ELM_RX	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_RX,	ELM_R,	ELM_W,	ELM_Y,	ELM_I,	ELM_E,	ELM_AA,$/;"	e	enum:ELEMENTS	file:
ELM_S	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_N,	ELM_NG,	ELM_F,	ELM_TH,	ELM_S,	ELM_SH,	ELM_X,$/;"	e	enum:ELEMENTS	file:
ELM_SH	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_N,	ELM_NG,	ELM_F,	ELM_TH,	ELM_S,	ELM_SH,	ELM_X,$/;"	e	enum:ELEMENTS	file:
ELM_T	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_Q,	ELM_P,	ELM_PY,	ELM_PZ,	ELM_T,	ELM_TY,	$/;"	e	enum:ELEMENTS	file:
ELM_TH	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_N,	ELM_NG,	ELM_F,	ELM_TH,	ELM_S,	ELM_SH,	ELM_X,$/;"	e	enum:ELEMENTS	file:
ELM_TY	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_Q,	ELM_P,	ELM_PY,	ELM_PZ,	ELM_T,	ELM_TY,	$/;"	e	enum:ELEMENTS	file:
ELM_TZ	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_TZ,	ELM_K,	ELM_KY,	ELM_KZ,	ELM_B,	ELM_BY,	ELM_BZ,	$/;"	e	enum:ELEMENTS	file:
ELM_U	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_U,	ELM_O,	ELM_OO,	ELM_A,	ELM_EE,	ELM_ER,	ELM_AR,$/;"	e	enum:ELEMENTS	file:
ELM_UU	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_AW,	ELM_UU,	ELM_AI,	ELM_IE,	ELM_OI,	ELM_OU,	ELM_OV,$/;"	e	enum:ELEMENTS	file:
ELM_V	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_H,	ELM_V,	ELM_QQ,	ELM_DH,	ELM_DI,	ELM_Z,	ELM_ZZ,$/;"	e	enum:ELEMENTS	file:
ELM_W	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_RX,	ELM_R,	ELM_W,	ELM_Y,	ELM_I,	ELM_E,	ELM_AA,$/;"	e	enum:ELEMENTS	file:
ELM_X	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_N,	ELM_NG,	ELM_F,	ELM_TH,	ELM_S,	ELM_SH,	ELM_X,$/;"	e	enum:ELEMENTS	file:
ELM_Y	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_RX,	ELM_R,	ELM_W,	ELM_Y,	ELM_I,	ELM_E,	ELM_AA,$/;"	e	enum:ELEMENTS	file:
ELM_Z	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_H,	ELM_V,	ELM_QQ,	ELM_DH,	ELM_DI,	ELM_Z,	ELM_ZZ,$/;"	e	enum:ELEMENTS	file:
ELM_ZH	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_ZH,	ELM_CH,	ELM_CI,	ELM_J,	ELM_JY,	ELM_L,	ELM_LL,$/;"	e	enum:ELEMENTS	file:
ELM_ZZ	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	ELM_H,	ELM_V,	ELM_QQ,	ELM_DH,	ELM_DI,	ELM_Z,	ELM_ZZ,$/;"	e	enum:ELEMENTS	file:
ENABLE_VISUALIZATION	thirdparty/soloud/include/soloud/soloud.h	/^			ENABLE_VISUALIZATION = 2,$/;"	e	enum:SoLoud::Soloud::FLAGS
END	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	PAGE_DOWN			: 34,	\/\/ also NUM_SOUTH_EAST$/;"	p	class:namespace.Codes
ENTER	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_CENTER			: 12,	\/\/ NUMLOCK on FF\/Safari Mac$/;"	p	class:namespace.Codes
ENTITY_INCLUDED_FC2233BE_3E33_4739_9B0D_B3EA11F6BEF3	lib/lib/include/lib/entity.hpp	20;"	d
ENUM	lib/lib/include/lib/logging.hpp	/^enum ENUM {$/;"	g	namespace:LIB_NS_NAME::logging::out
ENUM	lib/lib/include/lib/memory.hpp	/^enum ENUM {$/;"	g	namespace:LIB_NS_NAME::mem::tag
ENUM	lib/lib/include/lib/model.hpp	/^enum ENUM {$/;"	g	namespace:LIB_NS_NAME::map_type
EOK	thirdparty/remotery/src/Remotery.c	1091;"	d	file:
EOP	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1515;"	d	file:
EOP	thirdparty/stb/include/stb/stb_vorbis.c	1514;"	d	file:
EQUALS	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	DASH				: 189,	\/\/ needs localization$/;"	p	class:namespace.Codes
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB	thirdparty/glfw/src/wgl_context.h	77;"	d
ERROR_INVALID_PROFILE_ARB	thirdparty/glfw/src/wgl_context.h	76;"	d
ERROR_INVALID_VERSION_ARB	thirdparty/glfw/src/wgl_context.h	75;"	d
ESC	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	CAPS_LOCK			: 20,$/;"	p	class:namespace.Codes
ESLEMAX	thirdparty/remotery/src/Remotery.c	1094;"	d	file:
ESNOSPC	thirdparty/remotery/src/Remotery.c	1096;"	d	file:
ESNOTFND	thirdparty/remotery/src/Remotery.c	1098;"	d	file:
ESNULLP	thirdparty/remotery/src/Remotery.c	1092;"	d	file:
ESOVRLP	thirdparty/remotery/src/Remotery.c	1095;"	d	file:
ESUNTERM	thirdparty/remotery/src/Remotery.c	1097;"	d	file:
ESZEROL	thirdparty/remotery/src/Remotery.c	1093;"	d	file:
EXPECT	thirdparty/soloud/src/tools/codegen/main.cpp	198;"	d	file:
EXPLOSION	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^			EXPLOSION,$/;"	e	enum:SoLoud::Sfxr::SFXR_PRESETS
EXPONENTIAL_DISTANCE	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			EXPONENTIAL_DISTANCE = 3$/;"	e	enum:SoLoud::AudioSource::ATTENUATION_MODELS
EXTCOLOR	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	26;"	d	file:
EXT_colorspace	thirdparty/glfw/src/wgl_context.h	/^    GLFWbool                            EXT_colorspace;$/;"	m	struct:_GLFWlibraryWGL
EXT_create_context_es2_profile	thirdparty/glfw/src/glx_context.h	/^    GLFWbool        EXT_create_context_es2_profile;$/;"	m	struct:_GLFWlibraryGLX
EXT_create_context_es2_profile	thirdparty/glfw/src/wgl_context.h	/^    GLFWbool                            EXT_create_context_es2_profile;$/;"	m	struct:_GLFWlibraryWGL
EXT_framebuffer_sRGB	thirdparty/glfw/src/glx_context.h	/^    GLFWbool        EXT_framebuffer_sRGB;$/;"	m	struct:_GLFWlibraryGLX
EXT_framebuffer_sRGB	thirdparty/glfw/src/wgl_context.h	/^    GLFWbool                            EXT_framebuffer_sRGB;$/;"	m	struct:_GLFWlibraryWGL
EXT_swap_control	thirdparty/glfw/src/glx_context.h	/^    GLFWbool        EXT_swap_control;$/;"	m	struct:_GLFWlibraryGLX
EXT_swap_control	thirdparty/glfw/src/wgl_context.h	/^    GLFWbool                            EXT_swap_control;$/;"	m	struct:_GLFWlibraryWGL
E_PENDING	thirdparty/glfw/src/deps/mingw/dinput.h	199;"	d
E_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule E_rules[] =$/;"	v	file:
EchoFilter	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * EchoFilter;$/;"	t
EchoFilter	thirdparty/soloud/include/soloud/soloud_echofilter.h	/^	class EchoFilter : public Filter$/;"	c	namespace:SoLoud
EchoFilter	thirdparty/soloud/src/filter/soloud_echofilter.cpp	/^	EchoFilter::EchoFilter()$/;"	f	class:SoLoud::EchoFilter
EchoFilterInstance	thirdparty/soloud/include/soloud/soloud_echofilter.h	/^	class EchoFilterInstance : public FilterInstance$/;"	c	namespace:SoLoud
EchoFilterInstance	thirdparty/soloud/src/filter/soloud_echofilter.cpp	/^	EchoFilterInstance::EchoFilterInstance(EchoFilter *aParent)$/;"	f	class:SoLoud::EchoFilterInstance
EchoFilter_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * EchoFilter_create()$/;"	f
EchoFilter_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void EchoFilter_destroy(void * aClassPtr)$/;"	f
EchoFilter_setParams	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int EchoFilter_setParams(void * aClassPtr, float aDelay)$/;"	f
EchoFilter_setParamsEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int EchoFilter_setParamsEx(void * aClassPtr, float aDelay, float aDecay, float aFilter)$/;"	f
ElemCount	thirdparty/imgui/include/imgui/imgui.h	/^    unsigned int    ElemCount;              \/\/ Number of indices (multiple of 3) to be rendered as triangles. Vertices are stored in the callee ImDrawList's vtx_buffer[] array, indices in idx_buffer[].$/;"	m	struct:ImDrawCmd
Element	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^class Element$/;"	c	file:
Enable	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   void Enable(bool enable)$/;"	f	namespace:ImGuizmo
End	thirdparty/imgui/src/imgui.cpp	/^void ImGui::End()$/;"	f	class:ImGui
End	thirdparty/imgui/src/imgui.cpp	/^void ImGuiListClipper::End()$/;"	f	class:ImGuiListClipper
EndChild	thirdparty/imgui/src/imgui.cpp	/^void ImGui::EndChild()$/;"	f	class:ImGui
EndChildFrame	thirdparty/imgui/src/imgui.cpp	/^void ImGui::EndChildFrame()$/;"	f	class:ImGui
EndFrame	thirdparty/imgui/src/imgui.cpp	/^void ImGui::EndFrame()$/;"	f	class:ImGui
EndGroup	thirdparty/imgui/src/imgui.cpp	/^void ImGui::EndGroup()$/;"	f	class:ImGui
EndMainMenuBar	thirdparty/imgui/src/imgui.cpp	/^void ImGui::EndMainMenuBar()$/;"	f	class:ImGui
EndMenu	thirdparty/imgui/src/imgui.cpp	/^void ImGui::EndMenu()$/;"	f	class:ImGui
EndMenuBar	thirdparty/imgui/src/imgui.cpp	/^void ImGui::EndMenuBar()$/;"	f	class:ImGui
EndNew	thirdparty/remotery/src/Remotery.c	550;"	d	file:
EndPopup	thirdparty/imgui/src/imgui.cpp	/^void ImGui::EndPopup()$/;"	f	class:ImGui
EndTooltip	thirdparty/imgui/src/imgui.cpp	/^void ImGui::EndTooltip()$/;"	f	class:ImGui
EndsWith	thirdparty/catch/include/catch/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	thirdparty/catch/include/catch/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	thirdparty/catch/include/catch/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	thirdparty/catch/include/catch/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	thirdparty/catch/include/catch/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
Enum	thirdparty/soloud/src/tools/codegen/main.cpp	/^struct Enum$/;"	s	file:
EnumStringMaker	thirdparty/catch/include/catch/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	thirdparty/catch/include/catch/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumerateInstanceExtensionProperties	thirdparty/glfw/src/internal.h	/^        PFN_vkEnumerateInstanceExtensionProperties EnumerateInstanceExtensionProperties;$/;"	m	struct:_GLFWlibrary::__anon165
Eparm_e	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^enum Eparm_e$/;"	g	file:
Equals	thirdparty/catch/include/catch/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	thirdparty/catch/include/catch/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	thirdparty/catch/include/catch/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	thirdparty/catch/include/catch/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	thirdparty/catch/include/catch/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Evaluator	thirdparty/catch/include/catch/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	thirdparty/catch/include/catch/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	thirdparty/catch/include/catch/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	thirdparty/catch/include/catch/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	thirdparty/catch/include/catch/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	thirdparty/catch/include/catch/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	thirdparty/catch/include/catch/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Event	lib/nil/include/nil/fwd.hpp	/^namespace Event {$/;"	n	namespace:Nil::Data
EventChar	thirdparty/imgui/include/imgui/imgui.h	/^    ImWchar             EventChar;      \/\/ Character input                      \/\/ Read-write (replace character or set to zero)$/;"	m	struct:ImGuiTextEditCallbackData
EventCreate	thirdparty/remotery/include/remotery/Remotery.h	/^    void* EventCreate;$/;"	m	struct:rmtCUDABind
EventDestroy	thirdparty/remotery/include/remotery/Remotery.h	/^    void* EventDestroy;$/;"	m	struct:rmtCUDABind
EventElapsedTime	thirdparty/remotery/include/remotery/Remotery.h	/^    void* EventElapsedTime;$/;"	m	struct:rmtCUDABind
EventFlag	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags EventFlag;      \/\/ One of ImGuiInputTextFlags_Callback* \/\/ Read-only$/;"	m	struct:ImGuiTextEditCallbackData
EventKey	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey            EventKey;       \/\/ Key pressed (Up\/Down\/TAB)            \/\/ Read-only$/;"	m	struct:ImGuiTextEditCallbackData
EventNode	thirdparty/glfw/src/mir_window.c	/^typedef struct EventNode$/;"	s	file:
EventNode	thirdparty/glfw/src/mir_window.c	/^} EventNode;$/;"	t	typeref:struct:EventNode	file:
EventQuery	thirdparty/remotery/include/remotery/Remotery.h	/^    void* EventQuery;$/;"	m	struct:rmtCUDABind
EventQueue	thirdparty/glfw/src/mir_platform.h	/^typedef struct EventQueue$/;"	s
EventQueue	thirdparty/glfw/src/mir_platform.h	/^} EventQueue;$/;"	t	typeref:struct:EventQueue
EventRecord	thirdparty/remotery/include/remotery/Remotery.h	/^    void* EventRecord;$/;"	m	struct:rmtCUDABind
Exception	thirdparty/catch/include/catch/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Expand	thirdparty/imgui/include/imgui/imgui_internal.h	/^    void        Expand(const ImVec2& amount)    { Min.x -= amount.x; Min.y -= amount.y; Max.x += amount.x; Max.y += amount.y; }$/;"	f	struct:ImRect
Expand	thirdparty/imgui/include/imgui/imgui_internal.h	/^    void        Expand(const float amount)      { Min.x -= amount;   Min.y -= amount;   Max.x += amount;   Max.y += amount; }$/;"	f	struct:ImRect
ExplicitFailure	thirdparty/catch/include/catch/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
Export	scripts/asset_scripts/obj_to_cpp_array.rb	/^module Export$/;"	m
ExprComponents	thirdparty/catch/include/catch/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	thirdparty/catch/include/catch/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExpressionFailed	thirdparty/catch/include/catch/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionType	thirdparty/catch/include/catch/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExtStatus	thirdparty/glfw/src/win32_platform.h	/^    DWORD ExtStatus;$/;"	m	struct:tagCHANGEFILTERSTRUCT
F	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	E					: 69,$/;"	p	class:namespace.Codes
F1	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_DIVISION		: 111,$/;"	p	class:namespace.Codes
F10	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	F9					: 120,$/;"	p	class:namespace.Codes
F11	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	F10					: 121,$/;"	p	class:namespace.Codes
F12	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	F11					: 122,$/;"	p	class:namespace.Codes
F2	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	F1					: 112,$/;"	p	class:namespace.Codes
F3	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	F2					: 113,$/;"	p	class:namespace.Codes
F4	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	F3					: 114,$/;"	p	class:namespace.Codes
F5	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	F4					: 115,$/;"	p	class:namespace.Codes
F6	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	F5					: 116,$/;"	p	class:namespace.Codes
F7	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	F6					: 117,$/;"	p	class:namespace.Codes
F8	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	F7					: 118,$/;"	p	class:namespace.Codes
F9	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	F8					: 119,$/;"	p	class:namespace.Codes
FAILED	lib/roa/include/roa/resource_status.hpp	/^  FAILED,$/;"	m	class:ROA::Resource_status
FALSE	thirdparty/glfw/src/deps/tinycthread.c	53;"	d	file:
FALSE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	620;"	d	file:
FALSE	thirdparty/soloud/src/tools/tedsid2dump/types.h	32;"	d
FALSE	thirdparty/stb/include/stb/stb_vorbis.c	618;"	d	file:
FASTDEF	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	5018;"	d	file:
FASTDEF	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	5027;"	d	file:
FASTDEF	thirdparty/stb/include/stb/stb_vorbis.c	5024;"	d	file:
FASTDEF	thirdparty/stb/include/stb/stb_vorbis.c	5033;"	d	file:
FAST_BITS	thirdparty/stb/include/stb/stb_image.h	1639;"	d
FAST_HUFFMAN_TABLE_MASK	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	639;"	d	file:
FAST_HUFFMAN_TABLE_MASK	thirdparty/stb/include/stb/stb_vorbis.c	637;"	d	file:
FAST_HUFFMAN_TABLE_SIZE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	638;"	d	file:
FAST_HUFFMAN_TABLE_SIZE	thirdparty/stb/include/stb/stb_vorbis.c	636;"	d	file:
FAST_SCALED_FLOAT_TO_INT	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	5022;"	d	file:
FAST_SCALED_FLOAT_TO_INT	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	5025;"	d	file:
FAST_SCALED_FLOAT_TO_INT	thirdparty/stb/include/stb/stb_vorbis.c	5028;"	d	file:
FAST_SCALED_FLOAT_TO_INT	thirdparty/stb/include/stb/stb_vorbis.c	5031;"	d	file:
FFT	thirdparty/soloud/include/soloud/soloud_fft.h	/^	namespace FFT$/;"	n	namespace:SoLoud
FFT	thirdparty/soloud/src/core/soloud_fft.cpp	/^    namespace FFT$/;"	n	namespace:SoLoud	file:
FFTFilter	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * FFTFilter;$/;"	t
FFTFilter	thirdparty/soloud/include/soloud/soloud_fftfilter.h	/^	class FFTFilter : public Filter$/;"	c	namespace:SoLoud
FFTFilter	thirdparty/soloud/src/filter/soloud_fftfilter.cpp	/^	FFTFilter::FFTFilter()$/;"	f	class:SoLoud::FFTFilter
FFTFilterInstance	thirdparty/soloud/include/soloud/soloud_fftfilter.h	/^	class FFTFilterInstance : public FilterInstance$/;"	c	namespace:SoLoud
FFTFilterInstance	thirdparty/soloud/src/filter/soloud_fftfilter.cpp	/^	FFTFilterInstance::FFTFilterInstance()$/;"	f	class:SoLoud::FFTFilterInstance
FFTFilterInstance	thirdparty/soloud/src/filter/soloud_fftfilter.cpp	/^	FFTFilterInstance::FFTFilterInstance(FFTFilter *aParent)$/;"	f	class:SoLoud::FFTFilterInstance
FFTFilter_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * FFTFilter_create()$/;"	f
FFTFilter_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void FFTFilter_destroy(void * aClassPtr)$/;"	f
FF_DASH	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	FF_EQUALS			: 61,	\/\/ Firefox (Gecko) fires this for equals instead of 187$/;"	p	class:namespace.Codes
FF_EQUALS	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	FF_SEMICOLON		: 59,	\/\/ Firefox (Gecko) fires this for semicolon instead of 186$/;"	p	class:namespace.Codes
FF_SEMICOLON	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NINE				: 57,$/;"	p	class:namespace.Codes
FILE	lib/lib/include/lib/memory.hpp	/^  FILE,$/;"	e	enum:LIB_NS_NAME::mem::tag::ENUM
FILE	thirdparty/soloud/include/soloud/soloud_file_hack_off.h	29;"	d
FILE	thirdparty/soloud/include/soloud/soloud_file_hack_on.h	52;"	d
FILENAME	lib/nil/include/nil/resource/font.hpp	/^  enum { FILENAME } data_type;$/;"	e	enum:Nil_font::__anon14
FILE_INCLUDED_0EC6E03B_3D7F_4AA7_B0B5_28E4F37CD0A1	lib/lib/include/lib/file.hpp	9;"	d
FILE_LOAD_FAILED	thirdparty/soloud/include/soloud/soloud_error.h	/^		FILE_LOAD_FAILED  = 3, \/\/ File found, but could not be loaded$/;"	e	enum:SoLoud::SOLOUD_ERRORS
FILE_NOT_FOUND	thirdparty/soloud/include/soloud/soloud_error.h	/^		FILE_NOT_FOUND    = 2, \/\/ File not found$/;"	e	enum:SoLoud::SOLOUD_ERRORS
FILTERATTRIBUTE	thirdparty/soloud/include/soloud/soloud_bassboostfilter.h	/^		enum FILTERATTRIBUTE$/;"	g	class:SoLoud::BassboostFilter
FILTERATTRIBUTE	thirdparty/soloud/include/soloud/soloud_bassboostfilter.h	/^		enum FILTERATTRIBUTE$/;"	g	class:SoLoud::BassboostFilterInstance
FILTERATTRIBUTE	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		enum FILTERATTRIBUTE$/;"	g	class:SoLoud::BiquadResonantFilter
FILTERATTRIBUTE	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		enum FILTERATTRIBUTE$/;"	g	class:SoLoud::BiquadResonantFilterInstance
FILTERPARAMS	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^		enum FILTERPARAMS$/;"	g	class:SoLoud::FlangerFilter
FILTERPARAMS	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^		enum FILTERPARAMS$/;"	g	class:SoLoud::LofiFilter
FILTERPARAMS	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^		enum FILTERPARAMS$/;"	g	class:SoLoud::LofiFilterInstance
FILTERS_PER_STREAM	thirdparty/soloud/include/soloud/soloud.h	52;"	d
FILTERTYPE	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		enum FILTERTYPE$/;"	g	class:SoLoud::BiquadResonantFilter
FILTER_ALL	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon200
FILTER_ALL	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon194
FILTER_BP	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon200
FILTER_BP	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon194
FILTER_HP	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon200
FILTER_HP	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon194
FILTER_HPBP	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon200
FILTER_HPBP	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon194
FILTER_LP	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon200
FILTER_LP	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon194
FILTER_LPBP	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon200
FILTER_LPBP	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon194
FILTER_NONE	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon200
FILTER_NONE	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon194
FILTER_NOTCH	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon200
FILTER_NOTCH	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		FILTER_NONE, FILTER_LP, FILTER_BP, FILTER_LPBP, FILTER_HP, FILTER_NOTCH, FILTER_HPBP, FILTER_ALL$/;"	e	enum:SIDsound::__anon194
FIRST_MEDIA_KEY	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	SCROLL_LOCK			: 145,$/;"	p	class:namespace.Codes
FIVE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	FOUR				: 52,$/;"	p	class:namespace.Codes
FIXPOINT_FRAC_BITS	thirdparty/soloud/src/core/soloud.cpp	756;"	d	file:
FIXPOINT_FRAC_BITS	thirdparty/soloud/src/tools/resamplerlab/main.cpp	174;"	d	file:
FIXPOINT_FRAC_MASK	thirdparty/soloud/src/core/soloud.cpp	758;"	d	file:
FIXPOINT_FRAC_MASK	thirdparty/soloud/src/tools/resamplerlab/main.cpp	176;"	d	file:
FIXPOINT_FRAC_MUL	thirdparty/soloud/src/core/soloud.cpp	757;"	d	file:
FIXPOINT_FRAC_MUL	thirdparty/soloud/src/tools/resamplerlab/main.cpp	175;"	d	file:
FLAGS	thirdparty/soloud/include/soloud/soloud.h	/^		enum FLAGS$/;"	g	class:SoLoud::Soloud
FLAGS	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		enum FLAGS$/;"	g	class:SoLoud::AudioSource
FLAGS	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		enum FLAGS$/;"	g	class:SoLoud::AudioSourceInstance
FLANGERFILTER_DELAY	thirdparty/soloud/include/soloud/soloud_c.h	/^	FLANGERFILTER_DELAY = 1,$/;"	e	enum:SOLOUD_ENUMS
FLANGERFILTER_FREQ	thirdparty/soloud/include/soloud/soloud_c.h	/^	FLANGERFILTER_FREQ = 2,$/;"	e	enum:SOLOUD_ENUMS
FLANGERFILTER_WET	thirdparty/soloud/include/soloud/soloud_c.h	/^	FLANGERFILTER_WET = 0,$/;"	e	enum:SOLOUD_ENUMS
FONT_INCLUDED_91656D56_5349_4E63_A1D5_33E523085CB9	lib/nil/src/internal_data/resources/font_data.hpp	2;"	d
FONT_INCLUDED_FAE30313_D649_4821_B300_7C4AA5FF4885	lib/nil/include/nil/resource/font.hpp	2;"	d
FORCE_INLINE	lib/lib/include/lib/optimizations.hpp	50;"	d
FORCE_INLINE	lib/lib/include/lib/optimizations.hpp	54;"	d
FORCE_INLINE	lib/lib/include/lib/optimizations.hpp	57;"	d
FOR_ALL_VOICES_POST	thirdparty/soloud/include/soloud/soloud_internal.h	96;"	d
FOR_ALL_VOICES_POST_3D	thirdparty/soloud/include/soloud/soloud_internal.h	113;"	d
FOR_ALL_VOICES_PRE	thirdparty/soloud/include/soloud/soloud_internal.h	84;"	d
FOR_ALL_VOICES_PRE_3D	thirdparty/soloud/include/soloud/soloud_internal.h	102;"	d
FOR_MODEL_STRESS	lib/lib/test/unit/model_test.cpp	15;"	d	file:
FOR_MODEL_STRESS	lib/lib/test/unit/model_test.cpp	17;"	d	file:
FOUR	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	THREE				: 51,$/;"	p	class:namespace.Codes
FOURCC	thirdparty/remotery/src/Remotery.c	4590;"	d	file:
FOURCC	thirdparty/remotery/src/Remotery.c	4643;"	d	file:
FPU_MatrixF_x_MatrixF	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   void FPU_MatrixF_x_MatrixF(const float *a, const float *b, float *r)$/;"	f	namespace:ImGuizmo
FREE	lib/lib/include/lib/memory.hpp	/^  FREE,$/;"	e	enum:LIB_NS_NAME::mem::tag::ENUM
FREQ	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^			FREQ$/;"	e	enum:SoLoud::FlangerFilter::FILTERPARAMS
FREQUENCY	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^			FREQUENCY = 2,$/;"	e	enum:SoLoud::BiquadResonantFilter::FILTERATTRIBUTE
FREQUENCY	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^			FREQUENCY = 2,$/;"	e	enum:SoLoud::BiquadResonantFilterInstance::FILTERATTRIBUTE
FUNDAMENTAL_INCLUDED_A0D602DD_313D_4456_93A0_10E453F3A2BA	lib/roa/include/roa/fundamental.hpp	6;"	d
FWD_INCLUDED_0C0C7DE7_8226_4059_8EEB_62FBC87F5227	lib/nil/src/internal_data/fwd.hpp	2;"	d
FWD_INCLUDED_22AF1857_0685_4D1B_849A_F3380F902EF1	lib/nil/include/nil/fwd.hpp	10;"	d
FWD_INCLUDED_77F2E84D_CDC6_4978_8175_56EFE42168B7	lib/math/include/math/fwd.hpp	2;"	d
F_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule F_rules[] =$/;"	v	file:
Fader	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * Fader;$/;"	t
Fader	thirdparty/soloud/include/soloud/soloud_fader.h	/^	class Fader$/;"	c	namespace:SoLoud
Fader	thirdparty/soloud/src/core/soloud_fader.cpp	/^	Fader::Fader()$/;"	f	class:SoLoud::Fader
FailureBit	thirdparty/catch/include/catch/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FallbackChar	thirdparty/imgui/include/imgui/imgui.h	/^    ImWchar                     FallbackChar;       \/\/ = '?'        \/\/ Replacement glyph if one isn't found. Only set via SetFallbackChar()$/;"	m	struct:ImFont
FallbackGlyph	thirdparty/imgui/include/imgui/imgui.h	/^    const Glyph*                FallbackGlyph;      \/\/ == FindGlyph(FontFallbackChar)$/;"	m	struct:ImFont
FallbackXAdvance	thirdparty/imgui/include/imgui/imgui.h	/^    float                       FallbackXAdvance;   \/\/ == FallbackGlyph->XAdvance$/;"	m	struct:ImFont
FalseTest	thirdparty/catch/include/catch/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseType	thirdparty/catch/include/catch/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FatalErrorCondition	thirdparty/catch/include/catch/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
File	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * File;$/;"	t
File	thirdparty/soloud/include/soloud/soloud_file.h	/^	class File$/;"	c	namespace:SoLoud
FillInRGBBitsFromPixelFormat	thirdparty/glfw/src/mir_monitor.c	/^static void FillInRGBBitsFromPixelFormat(GLFWvidmode* mode, const MirPixelFormat pf)$/;"	f	file:
Filter	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * Filter;$/;"	t
Filter	thirdparty/soloud/include/soloud/soloud_filter.h	/^	class Filter$/;"	c	namespace:SoLoud
Filter	thirdparty/soloud/src/core/soloud_filter.cpp	/^	Filter::Filter()$/;"	f	class:SoLoud::Filter
FilterInstance	thirdparty/soloud/include/soloud/soloud_filter.h	/^	class FilterInstance$/;"	c	namespace:SoLoud
FilterInstance	thirdparty/soloud/src/core/soloud_filter.cpp	/^	FilterInstance::FilterInstance()$/;"	f	class:SoLoud::FilterInstance
Filters	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<TextRange> Filters;$/;"	m	struct:ImGuiTextFilter
FindBestPopupWindowPos	thirdparty/imgui/src/imgui.cpp	/^static ImVec2 FindBestPopupWindowPos(const ImVec2& base_pos, const ImVec2& size, int* last_dir, const ImRect& r_inner)$/;"	f	file:
FindGlyph	thirdparty/imgui/src/imgui_draw.cpp	/^const ImFont::Glyph* ImFont::FindGlyph(unsigned short c) const$/;"	f	class:ImFont
FindHoveredWindow	thirdparty/imgui/src/imgui.cpp	/^static ImGuiWindow* FindHoveredWindow(ImVec2 pos, bool excluding_childs)$/;"	f	file:
FindRenderedTextEnd	thirdparty/imgui/src/imgui.cpp	/^const char* ImGui::FindRenderedTextEnd(const char* text, const char* text_end)$/;"	f	class:ImGui
FindWindowByName	thirdparty/imgui/src/imgui.cpp	/^ImGuiWindow* ImGui::FindWindowByName(const char* name)$/;"	f	class:ImGui
FindWindowSettings	thirdparty/imgui/src/imgui.cpp	/^static ImGuiIniData* FindWindowSettings(const char* name)$/;"	f	file:
Flags	thirdparty/catch/include/catch/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	thirdparty/glfw/src/deps/mingw/xinput.h	/^    WORD Flags;$/;"	m	struct:_XINPUT_CAPABILITIES
Flags	thirdparty/glfw/src/deps/mingw/xinput.h	/^    WORD Flags;$/;"	m	struct:_XINPUT_KEYSTROKE
Flags	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags Flags;          \/\/ What user passed to InputText()      \/\/ Read-only$/;"	m	struct:ImGuiTextEditCallbackData
Flags	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiWindowFlags        Flags;                              \/\/ See enum ImGuiWindowFlags_$/;"	m	struct:ImGuiWindow
FlangerFilter	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * FlangerFilter;$/;"	t
FlangerFilter	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^	class FlangerFilter : public Filter$/;"	c	namespace:SoLoud
FlangerFilter	thirdparty/soloud/src/filter/soloud_flangerfilter.cpp	/^	FlangerFilter::FlangerFilter()$/;"	f	class:SoLoud::FlangerFilter
FlangerFilterInstance	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^	class FlangerFilterInstance : public FilterInstance$/;"	c	namespace:SoLoud
FlangerFilterInstance	thirdparty/soloud/src/filter/soloud_flangerfilter.cpp	/^	FlangerFilterInstance::FlangerFilterInstance(FlangerFilter *aParent)$/;"	f	class:SoLoud::FlangerFilterInstance
FlangerFilter_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * FlangerFilter_create()$/;"	f
FlangerFilter_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void FlangerFilter_destroy(void * aClassPtr)$/;"	f
FlangerFilter_setParams	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int FlangerFilter_setParams(void * aClassPtr, float aDelay, float aFreq)$/;"	f
FlattenSampleTree	thirdparty/remotery/src/Remotery.c	/^static ObjectLink* FlattenSampleTree(Sample* sample, rmtU32* nb_samples)$/;"	f	file:
FlipFlop	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             FlipFlop[2];$/;"	m	class:TED
FlipFlop	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static int             FlipFlop[2];$/;"	v	file:
Floor	thirdparty/imgui/include/imgui/imgui_internal.h	/^    void        Floor()                         { Min.x = (float)(int)Min.x; Min.y = (float)(int)Min.y; Max.x = (float)(int)Max.x; Max.y = (float)(int)Max.y; }$/;"	f	struct:ImRect
Floor	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} Floor;$/;"	t	typeref:union:__anon206	file:
Floor	thirdparty/stb/include/stb/stb_vorbis.c	/^} Floor;$/;"	t	typeref:union:__anon119	file:
Floor0	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} Floor0;$/;"	t	typeref:struct:__anon204	file:
Floor0	thirdparty/stb/include/stb/stb_vorbis.c	/^} Floor0;$/;"	t	typeref:struct:__anon117	file:
Floor1	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} Floor1;$/;"	t	typeref:struct:__anon205	file:
Floor1	thirdparty/stb/include/stb/stb_vorbis.c	/^} Floor1;$/;"	t	typeref:struct:__anon118	file:
FocusIdxAllCounter	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     FocusIdxAllCounter;                 \/\/ Start at -1 and increase as assigned via FocusItemRegister()$/;"	m	struct:ImGuiWindow
FocusIdxAllRequestCurrent	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     FocusIdxAllRequestCurrent;          \/\/ Item being requested for focus$/;"	m	struct:ImGuiWindow
FocusIdxAllRequestNext	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     FocusIdxAllRequestNext;             \/\/ Item being requested for focus, for next update (relies on layout to be stable between the frame pressing TAB and the next frame)$/;"	m	struct:ImGuiWindow
FocusIdxTabCounter	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     FocusIdxTabCounter;                 \/\/ (same, but only count widgets which you can Tab through)$/;"	m	struct:ImGuiWindow
FocusIdxTabRequestCurrent	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     FocusIdxTabRequestCurrent;          \/\/ Tab-able item being requested for focus$/;"	m	struct:ImGuiWindow
FocusIdxTabRequestNext	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     FocusIdxTabRequestNext;             \/\/ "$/;"	m	struct:ImGuiWindow
FocusWindow	thirdparty/imgui/src/imgui.cpp	/^void ImGui::FocusWindow(ImGuiWindow* window)$/;"	f	class:ImGui
FocusableItemRegister	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::FocusableItemRegister(ImGuiWindow* window, bool is_active, bool tab_stop)$/;"	f	class:ImGui
FocusableItemUnregister	thirdparty/imgui/src/imgui.cpp	/^void ImGui::FocusableItemUnregister(ImGuiWindow* window)$/;"	f	class:ImGui
FocusedWindow	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiWindow*            FocusedWindow;                      \/\/ Will catch keyboard inputs$/;"	m	struct:ImGuiContext
Font	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImFont*                 Font;                               \/\/ (Shortcut) == FontStack.empty() ? IO.Font : FontStack.back()$/;"	m	struct:ImGuiContext
FontAllowUserScaling	thirdparty/imgui/include/imgui/imgui.h	/^    bool          FontAllowUserScaling;     \/\/ = false              \/\/ Allow user scaling text of individual window with CTRL+Wheel.$/;"	m	struct:ImGuiIO
FontBaseSize	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   FontBaseSize;                       \/\/ (Shortcut) == IO.FontGlobalScale * Font->Scale * Font->FontSize. Size of characters.$/;"	m	struct:ImGuiContext
FontData	thirdparty/imgui/include/imgui/imgui.h	/^    void*           FontData;                   \/\/          \/\/ TTF data$/;"	m	struct:ImFontConfig
FontDataOwnedByAtlas	thirdparty/imgui/include/imgui/imgui.h	/^    bool            FontDataOwnedByAtlas;       \/\/ true     \/\/ TTF data ownership taken by the container ImFontAtlas (will delete memory itself). Set to true$/;"	m	struct:ImFontConfig
FontDataSize	thirdparty/imgui/include/imgui/imgui.h	/^    int             FontDataSize;               \/\/          \/\/ TTF data size$/;"	m	struct:ImFontConfig
FontDefault	thirdparty/imgui/include/imgui/imgui.h	/^    ImFont*       FontDefault;              \/\/ = NULL               \/\/ Font to use on NewFrame(). Use NULL to uses Fonts->Fonts[0].$/;"	m	struct:ImGuiIO
FontGlobalScale	thirdparty/imgui/include/imgui/imgui.h	/^    float         FontGlobalScale;          \/\/ = 1.0f               \/\/ Global scale all fonts$/;"	m	struct:ImGuiIO
FontNo	thirdparty/imgui/include/imgui/imgui.h	/^    int             FontNo;                     \/\/ 0        \/\/ Index of font within TTF file$/;"	m	struct:ImFontConfig
FontSize	thirdparty/imgui/include/imgui/imgui.h	/^    float                       FontSize;           \/\/ <user set>   \/\/ Height of characters, set during loading (don't change after loading)$/;"	m	struct:ImFont
FontSize	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   FontSize;                           \/\/ (Shortcut) == FontBaseSize * g.CurrentWindow->FontWindowScale == window->FontSize()$/;"	m	struct:ImGuiContext
FontStack	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImFont*>       FontStack;                          \/\/ Stack for PushFont()\/PopFont()$/;"	m	struct:ImGuiContext
FontTexUvWhitePixel	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  FontTexUvWhitePixel;                \/\/ (Shortcut) == Font->TexUvWhitePixel$/;"	m	struct:ImGuiContext
FontWindowScale	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   FontWindowScale;                    \/\/ Scale multiplier per-window$/;"	m	struct:ImGuiWindow
Font_data	lib/nil/src/internal_data/resources/font_data.hpp	/^struct Font_data {$/;"	s
Fonts	thirdparty/imgui/include/imgui/imgui.h	/^    ImFontAtlas*  Fonts;                    \/\/ <auto>               \/\/ Load and assemble one or more fonts into a single tightly packed texture. Output to Fonts array.$/;"	m	struct:ImGuiIO
Fonts	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<ImFont*>           Fonts;              \/\/ Hold all the fonts returned by AddFont*. Fonts[0] is the default font upon calling ImGui::NewFrame(), use ImGui::PushFont()\/PopFont() to change the current font.$/;"	m	struct:ImFontAtlas
FrameCount	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     FrameCount;$/;"	m	struct:ImGuiContext
FrameCountEnded	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     FrameCountEnded;$/;"	m	struct:ImGuiContext
FrameCountRendered	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     FrameCountRendered;$/;"	m	struct:ImGuiContext
FramePadding	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      FramePadding;               \/\/ Padding within a framed rectangle (used by most widgets)$/;"	m	struct:ImGuiStyle
FrameRounding	thirdparty/imgui/include/imgui/imgui.h	/^    float       FrameRounding;              \/\/ Radius of frame corners rounding. Set to 0.0f to have rectangular frame (used by most widgets).$/;"	m	struct:ImGuiStyle
Framerate	thirdparty/imgui/include/imgui/imgui.h	/^    float       Framerate;                  \/\/ Application framerate estimation, in frame per second. Solely for convenience. Rolling average estimation based on IO.DeltaTime over 120 frames$/;"	m	struct:ImGuiIO
FramerateSecPerFrame	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   FramerateSecPerFrame[120];          \/\/ calculate estimate of framerate for user$/;"	m	struct:ImGuiContext
FramerateSecPerFrameAccum	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   FramerateSecPerFrameAccum;$/;"	m	struct:ImGuiContext
FramerateSecPerFrameIdx	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     FramerateSecPerFrameIdx;$/;"	m	struct:ImGuiContext
FreeSampleTree	thirdparty/remotery/src/Remotery.c	/^static void FreeSampleTree(Sample* sample, ObjectAllocator* allocator)$/;"	f	file:
Freq1	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    unsigned short  Freq1;$/;"	m	class:TED
Freq1	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static unsigned short  Freq1;$/;"	v	file:
Freq2	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    unsigned short  Freq2;$/;"	m	class:TED
Freq2	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static unsigned short  Freq2;$/;"	v	file:
G	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	F					: 70,$/;"	p	class:namespace.Codes
GAMEPAD_INCLUDED_A73A99A4_56E5_426E_9ECF_CDDBF046FCF1	lib/nil/include/nil/data/gamepad.hpp	9;"	d
GAME_INCLUDED_9185C149_04BE_4EA3_9241_D1705052C374	app/perils/src/game/game_manager.hpp	2;"	d
GENERAL	lib/lib/include/lib/memory.hpp	/^  GENERAL,$/;"	e	enum:LIB_NS_NAME::mem::tag::ENUM
GENERAL_INCLUDED_BA1581F2_35C3_4026_BCDA_6E9EC3CF253E	lib/math/include/math/general/general.hpp	2;"	d
GEOMETRY_FWD_INCLUDED_90B3513F_2B5F_4C02_8AB5_2B82BFD864C6	lib/math/include/math/geometry/geometry_fwd.hpp	2;"	d
GEOMETRY_INCLUDED_98853631_728E_4E3F_AC27_065504B13942	lib/math/include/math/geometry/geometry.hpp	2;"	d
GEOMETRY_TYPES_INCLUDED_5C543B7A_4C9E_45FE_91BD_F072716934F0	lib/math/include/math/geometry/geometry_types.hpp	2;"	d
GET_DIDEVICE_SUBTYPE	thirdparty/glfw/src/deps/mingw/dinput.h	348;"	d
GET_DIDEVICE_TYPE	thirdparty/glfw/src/deps/mingw/dinput.h	347;"	d
GET_XBUTTON_WPARAM	thirdparty/glfw/src/win32_platform.h	96;"	d
GIVEN	thirdparty/catch/include/catch/catch.hpp	10436;"	d
GImDefaultContext	thirdparty/imgui/src/imgui.cpp	/^static ImGuiContext     GImDefaultContext;$/;"	v	file:
GImDefaultFontAtlas	thirdparty/imgui/src/imgui.cpp	/^static ImFontAtlas      GImDefaultFontAtlas;$/;"	v	file:
GImGui	thirdparty/imgui/src/imgui.cpp	/^ImGuiContext*           GImGui = &GImDefaultContext;$/;"	v
GL3WGetProcAddressProc	thirdparty/opengl/include/GL/gl3w.h	/^typedef GL3WglProc (*GL3WGetProcAddressProc)(const char *proc);$/;"	t
GL3WglProc	thirdparty/opengl/include/GL/gl3w.h	/^typedef void (*GL3WglProc)(void);$/;"	t
GLAD_GL_ARB_multisample	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_ARB_multisample;$/;"	v
GLAD_GL_ARB_multisample	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_ARB_multisample;$/;"	v
GLAD_GL_ARB_robustness	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_ARB_robustness;$/;"	v
GLAD_GL_ARB_robustness	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_ARB_robustness;$/;"	v
GLAD_GL_KHR_debug	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_KHR_debug;$/;"	v
GLAD_GL_KHR_debug	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_KHR_debug;$/;"	v
GLAD_GL_VERSION_1_0	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_VERSION_1_0;$/;"	v
GLAD_GL_VERSION_1_0	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_VERSION_1_0;$/;"	v
GLAD_GL_VERSION_1_1	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_VERSION_1_1;$/;"	v
GLAD_GL_VERSION_1_1	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_VERSION_1_1;$/;"	v
GLAD_GL_VERSION_1_2	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_VERSION_1_2;$/;"	v
GLAD_GL_VERSION_1_2	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_VERSION_1_2;$/;"	v
GLAD_GL_VERSION_1_3	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_VERSION_1_3;$/;"	v
GLAD_GL_VERSION_1_3	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_VERSION_1_3;$/;"	v
GLAD_GL_VERSION_1_4	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_VERSION_1_4;$/;"	v
GLAD_GL_VERSION_1_4	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_VERSION_1_4;$/;"	v
GLAD_GL_VERSION_1_5	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_VERSION_1_5;$/;"	v
GLAD_GL_VERSION_1_5	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_VERSION_1_5;$/;"	v
GLAD_GL_VERSION_2_0	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_VERSION_2_0;$/;"	v
GLAD_GL_VERSION_2_0	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_VERSION_2_0;$/;"	v
GLAD_GL_VERSION_2_1	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_VERSION_2_1;$/;"	v
GLAD_GL_VERSION_2_1	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_VERSION_2_1;$/;"	v
GLAD_GL_VERSION_3_0	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_VERSION_3_0;$/;"	v
GLAD_GL_VERSION_3_0	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_VERSION_3_0;$/;"	v
GLAD_GL_VERSION_3_1	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_VERSION_3_1;$/;"	v
GLAD_GL_VERSION_3_1	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_VERSION_3_1;$/;"	v
GLAD_GL_VERSION_3_2	thirdparty/glfw/src/deps/glad.c	/^int GLAD_GL_VERSION_3_2;$/;"	v
GLAD_GL_VERSION_3_2	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI int GLAD_GL_VERSION_3_2;$/;"	v
GLADloadproc	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void* (* GLADloadproc)(const char *name);$/;"	t
GLAPI	thirdparty/glfw/src/deps/glad/glad.h	62;"	d
GLAPI	thirdparty/glfw/src/deps/glad/glad.h	64;"	d
GLAPI	thirdparty/glfw/src/deps/glad/glad.h	68;"	d
GLAPI	thirdparty/glfw/src/deps/glad/glad.h	70;"	d
GLAPI	thirdparty/glfw/src/deps/glad/glad.h	74;"	d
GLAPI	thirdparty/glfw/src/deps/glad/glad.h	76;"	d
GLAPI	thirdparty/glfw/src/deps/glad/glad.h	79;"	d
GLAPI	thirdparty/opengl/include/GL/glcorearb.h	53;"	d
GLAPI	thirdparty/remotery/src/Remotery.c	5932;"	d	file:
GLAPI	thirdparty/remotery/src/Remotery.c	5934;"	d	file:
GLAPI	thirdparty/remotery/src/Remotery.c	5936;"	d	file:
GLAPIENTRY	thirdparty/glfw/include/GLFW/glfw3.h	113;"	d
GLAPIENTRY	thirdparty/remotery/src/Remotery.c	5941;"	d	file:
GLDEBUGPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLDEBUGPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLDEBUGPROCAMD	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);$/;"	t
GLDEBUGPROCARB	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLDEBUGPROCARB	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLDEBUGPROCKHR	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRY *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLEXT_64_TYPES_DEFINED	thirdparty/glfw/src/deps/glad/glad.h	90;"	d
GLEXT_64_TYPES_DEFINED	thirdparty/opengl/include/GL/glcorearb.h	1501;"	d
GLFWAPI	thirdparty/glfw/include/GLFW/glfw3.h	242;"	d
GLFWAPI	thirdparty/glfw/include/GLFW/glfw3.h	245;"	d
GLFWAPI	thirdparty/glfw/include/GLFW/glfw3.h	248;"	d
GLFWAPI	thirdparty/glfw/include/GLFW/glfw3.h	251;"	d
GLFW_ACCUM_ALPHA_BITS	thirdparty/glfw/include/GLFW/glfw3.h	805;"	d
GLFW_ACCUM_BLUE_BITS	thirdparty/glfw/include/GLFW/glfw3.h	800;"	d
GLFW_ACCUM_GREEN_BITS	thirdparty/glfw/include/GLFW/glfw3.h	795;"	d
GLFW_ACCUM_RED_BITS	thirdparty/glfw/include/GLFW/glfw3.h	790;"	d
GLFW_ALPHA_BITS	thirdparty/glfw/include/GLFW/glfw3.h	775;"	d
GLFW_ANY_RELEASE_BEHAVIOR	thirdparty/glfw/include/GLFW/glfw3.h	928;"	d
GLFW_API_UNAVAILABLE	thirdparty/glfw/include/GLFW/glfw3.h	643;"	d
GLFW_ARROW_CURSOR	thirdparty/glfw/include/GLFW/glfw3.h	948;"	d
GLFW_ASPECT_INCLUDED_C805890D_390C_4874_814B_73C2F77952E6	lib/nil_aspects/include/aspect/glfw_aspect.hpp	2;"	d
GLFW_AUTO_ICONIFY	thirdparty/glfw/include/GLFW/glfw3.h	737;"	d
GLFW_AUX_BUFFERS	thirdparty/glfw/include/GLFW/glfw3.h	810;"	d
GLFW_BLUE_BITS	thirdparty/glfw/include/GLFW/glfw3.h	770;"	d
GLFW_CALLBACK_DEFINED	thirdparty/glfw/include/GLFW/glfw3.h	127;"	d
GLFW_CALLBACK_DEFINED	thirdparty/glfw/include/GLFW/glfw3.h	4911;"	d
GLFW_CENTER_CURSOR	thirdparty/glfw/include/GLFW/glfw3.h	754;"	d
GLFW_CLIENT_API	thirdparty/glfw/include/GLFW/glfw3.h	841;"	d
GLFW_COCOA_CHDIR_RESOURCES	thirdparty/glfw/include/GLFW/glfw3.h	983;"	d
GLFW_COCOA_FRAME_AUTOSAVE	thirdparty/glfw/include/GLFW/glfw3.h	904;"	d
GLFW_COCOA_GRAPHICS_SWITCHING	thirdparty/glfw/include/GLFW/glfw3.h	905;"	d
GLFW_COCOA_MENUBAR	thirdparty/glfw/include/GLFW/glfw3.h	984;"	d
GLFW_COCOA_RETINA_FRAMEBUFFER	thirdparty/glfw/include/GLFW/glfw3.h	903;"	d
GLFW_CONNECTED	thirdparty/glfw/include/GLFW/glfw3.h	976;"	d
GLFW_CONTEXT_CREATION_API	thirdparty/glfw/include/GLFW/glfw3.h	901;"	d
GLFW_CONTEXT_NO_ERROR	thirdparty/glfw/include/GLFW/glfw3.h	895;"	d
GLFW_CONTEXT_RELEASE_BEHAVIOR	thirdparty/glfw/include/GLFW/glfw3.h	889;"	d
GLFW_CONTEXT_REVISION	thirdparty/glfw/include/GLFW/glfw3.h	859;"	d
GLFW_CONTEXT_ROBUSTNESS	thirdparty/glfw/include/GLFW/glfw3.h	865;"	d
GLFW_CONTEXT_VERSION_MAJOR	thirdparty/glfw/include/GLFW/glfw3.h	847;"	d
GLFW_CONTEXT_VERSION_MINOR	thirdparty/glfw/include/GLFW/glfw3.h	853;"	d
GLFW_CROSSHAIR_CURSOR	thirdparty/glfw/include/GLFW/glfw3.h	958;"	d
GLFW_CURSOR	thirdparty/glfw/include/GLFW/glfw3.h	920;"	d
GLFW_CURSOR_DISABLED	thirdparty/glfw/include/GLFW/glfw3.h	926;"	d
GLFW_CURSOR_HIDDEN	thirdparty/glfw/include/GLFW/glfw3.h	925;"	d
GLFW_CURSOR_NORMAL	thirdparty/glfw/include/GLFW/glfw3.h	924;"	d
GLFW_DECORATED	thirdparty/glfw/include/GLFW/glfw3.h	731;"	d
GLFW_DEPTH_BITS	thirdparty/glfw/include/GLFW/glfw3.h	780;"	d
GLFW_DISCONNECTED	thirdparty/glfw/include/GLFW/glfw3.h	977;"	d
GLFW_DONT_CARE	thirdparty/glfw/include/GLFW/glfw3.h	987;"	d
GLFW_DOUBLEBUFFER	thirdparty/glfw/include/GLFW/glfw3.h	835;"	d
GLFW_EGL_CONTEXT_API	thirdparty/glfw/include/GLFW/glfw3.h	933;"	d
GLFW_EXPOSE_NATIVE_WGL	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	18;"	d	file:
GLFW_EXPOSE_NATIVE_WIN32	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	17;"	d	file:
GLFW_FALSE	thirdparty/glfw/include/GLFW/glfw3.h	298;"	d
GLFW_FLOATING	thirdparty/glfw/include/GLFW/glfw3.h	743;"	d
GLFW_FOCUSED	thirdparty/glfw/include/GLFW/glfw3.h	708;"	d
GLFW_FORMAT_UNAVAILABLE	thirdparty/glfw/include/GLFW/glfw3.h	690;"	d
GLFW_GREEN_BITS	thirdparty/glfw/include/GLFW/glfw3.h	765;"	d
GLFW_HAND_CURSOR	thirdparty/glfw/include/GLFW/glfw3.h	963;"	d
GLFW_HAT_CENTERED	thirdparty/glfw/include/GLFW/glfw3.h	332;"	d
GLFW_HAT_DOWN	thirdparty/glfw/include/GLFW/glfw3.h	335;"	d
GLFW_HAT_LEFT	thirdparty/glfw/include/GLFW/glfw3.h	336;"	d
GLFW_HAT_LEFT_DOWN	thirdparty/glfw/include/GLFW/glfw3.h	340;"	d
GLFW_HAT_LEFT_UP	thirdparty/glfw/include/GLFW/glfw3.h	339;"	d
GLFW_HAT_RIGHT	thirdparty/glfw/include/GLFW/glfw3.h	334;"	d
GLFW_HAT_RIGHT_DOWN	thirdparty/glfw/include/GLFW/glfw3.h	338;"	d
GLFW_HAT_RIGHT_UP	thirdparty/glfw/include/GLFW/glfw3.h	337;"	d
GLFW_HAT_UP	thirdparty/glfw/include/GLFW/glfw3.h	333;"	d
GLFW_HRESIZE_CURSOR	thirdparty/glfw/include/GLFW/glfw3.h	968;"	d
GLFW_IBEAM_CURSOR	thirdparty/glfw/include/GLFW/glfw3.h	953;"	d
GLFW_ICONIFIED	thirdparty/glfw/include/GLFW/glfw3.h	713;"	d
GLFW_INCLUDE_NONE	thirdparty/glfw/src/internal.h	46;"	d
GLFW_INVALID_ENUM	thirdparty/glfw/include/GLFW/glfw3.h	608;"	d
GLFW_INVALID_VALUE	thirdparty/glfw/include/GLFW/glfw3.h	619;"	d
GLFW_JOYSTICK_1	thirdparty/glfw/include/GLFW/glfw3.h	549;"	d
GLFW_JOYSTICK_10	thirdparty/glfw/include/GLFW/glfw3.h	558;"	d
GLFW_JOYSTICK_11	thirdparty/glfw/include/GLFW/glfw3.h	559;"	d
GLFW_JOYSTICK_12	thirdparty/glfw/include/GLFW/glfw3.h	560;"	d
GLFW_JOYSTICK_13	thirdparty/glfw/include/GLFW/glfw3.h	561;"	d
GLFW_JOYSTICK_14	thirdparty/glfw/include/GLFW/glfw3.h	562;"	d
GLFW_JOYSTICK_15	thirdparty/glfw/include/GLFW/glfw3.h	563;"	d
GLFW_JOYSTICK_16	thirdparty/glfw/include/GLFW/glfw3.h	564;"	d
GLFW_JOYSTICK_2	thirdparty/glfw/include/GLFW/glfw3.h	550;"	d
GLFW_JOYSTICK_3	thirdparty/glfw/include/GLFW/glfw3.h	551;"	d
GLFW_JOYSTICK_4	thirdparty/glfw/include/GLFW/glfw3.h	552;"	d
GLFW_JOYSTICK_5	thirdparty/glfw/include/GLFW/glfw3.h	553;"	d
GLFW_JOYSTICK_6	thirdparty/glfw/include/GLFW/glfw3.h	554;"	d
GLFW_JOYSTICK_7	thirdparty/glfw/include/GLFW/glfw3.h	555;"	d
GLFW_JOYSTICK_8	thirdparty/glfw/include/GLFW/glfw3.h	556;"	d
GLFW_JOYSTICK_9	thirdparty/glfw/include/GLFW/glfw3.h	557;"	d
GLFW_JOYSTICK_HAT_BUTTONS	thirdparty/glfw/include/GLFW/glfw3.h	981;"	d
GLFW_JOYSTICK_LAST	thirdparty/glfw/include/GLFW/glfw3.h	565;"	d
GLFW_KEY_0	thirdparty/glfw/include/GLFW/glfw3.h	377;"	d
GLFW_KEY_1	thirdparty/glfw/include/GLFW/glfw3.h	378;"	d
GLFW_KEY_2	thirdparty/glfw/include/GLFW/glfw3.h	379;"	d
GLFW_KEY_3	thirdparty/glfw/include/GLFW/glfw3.h	380;"	d
GLFW_KEY_4	thirdparty/glfw/include/GLFW/glfw3.h	381;"	d
GLFW_KEY_5	thirdparty/glfw/include/GLFW/glfw3.h	382;"	d
GLFW_KEY_6	thirdparty/glfw/include/GLFW/glfw3.h	383;"	d
GLFW_KEY_7	thirdparty/glfw/include/GLFW/glfw3.h	384;"	d
GLFW_KEY_8	thirdparty/glfw/include/GLFW/glfw3.h	385;"	d
GLFW_KEY_9	thirdparty/glfw/include/GLFW/glfw3.h	386;"	d
GLFW_KEY_A	thirdparty/glfw/include/GLFW/glfw3.h	389;"	d
GLFW_KEY_APOSTROPHE	thirdparty/glfw/include/GLFW/glfw3.h	372;"	d
GLFW_KEY_B	thirdparty/glfw/include/GLFW/glfw3.h	390;"	d
GLFW_KEY_BACKSLASH	thirdparty/glfw/include/GLFW/glfw3.h	416;"	d
GLFW_KEY_BACKSPACE	thirdparty/glfw/include/GLFW/glfw3.h	426;"	d
GLFW_KEY_C	thirdparty/glfw/include/GLFW/glfw3.h	391;"	d
GLFW_KEY_CAPS_LOCK	thirdparty/glfw/include/GLFW/glfw3.h	437;"	d
GLFW_KEY_COMMA	thirdparty/glfw/include/GLFW/glfw3.h	373;"	d
GLFW_KEY_D	thirdparty/glfw/include/GLFW/glfw3.h	392;"	d
GLFW_KEY_DELETE	thirdparty/glfw/include/GLFW/glfw3.h	428;"	d
GLFW_KEY_DOWN	thirdparty/glfw/include/GLFW/glfw3.h	431;"	d
GLFW_KEY_E	thirdparty/glfw/include/GLFW/glfw3.h	393;"	d
GLFW_KEY_END	thirdparty/glfw/include/GLFW/glfw3.h	436;"	d
GLFW_KEY_ENTER	thirdparty/glfw/include/GLFW/glfw3.h	424;"	d
GLFW_KEY_EQUAL	thirdparty/glfw/include/GLFW/glfw3.h	388;"	d
GLFW_KEY_ESCAPE	thirdparty/glfw/include/GLFW/glfw3.h	423;"	d
GLFW_KEY_F	thirdparty/glfw/include/GLFW/glfw3.h	394;"	d
GLFW_KEY_F1	thirdparty/glfw/include/GLFW/glfw3.h	442;"	d
GLFW_KEY_F10	thirdparty/glfw/include/GLFW/glfw3.h	451;"	d
GLFW_KEY_F11	thirdparty/glfw/include/GLFW/glfw3.h	452;"	d
GLFW_KEY_F12	thirdparty/glfw/include/GLFW/glfw3.h	453;"	d
GLFW_KEY_F13	thirdparty/glfw/include/GLFW/glfw3.h	454;"	d
GLFW_KEY_F14	thirdparty/glfw/include/GLFW/glfw3.h	455;"	d
GLFW_KEY_F15	thirdparty/glfw/include/GLFW/glfw3.h	456;"	d
GLFW_KEY_F16	thirdparty/glfw/include/GLFW/glfw3.h	457;"	d
GLFW_KEY_F17	thirdparty/glfw/include/GLFW/glfw3.h	458;"	d
GLFW_KEY_F18	thirdparty/glfw/include/GLFW/glfw3.h	459;"	d
GLFW_KEY_F19	thirdparty/glfw/include/GLFW/glfw3.h	460;"	d
GLFW_KEY_F2	thirdparty/glfw/include/GLFW/glfw3.h	443;"	d
GLFW_KEY_F20	thirdparty/glfw/include/GLFW/glfw3.h	461;"	d
GLFW_KEY_F21	thirdparty/glfw/include/GLFW/glfw3.h	462;"	d
GLFW_KEY_F22	thirdparty/glfw/include/GLFW/glfw3.h	463;"	d
GLFW_KEY_F23	thirdparty/glfw/include/GLFW/glfw3.h	464;"	d
GLFW_KEY_F24	thirdparty/glfw/include/GLFW/glfw3.h	465;"	d
GLFW_KEY_F25	thirdparty/glfw/include/GLFW/glfw3.h	466;"	d
GLFW_KEY_F3	thirdparty/glfw/include/GLFW/glfw3.h	444;"	d
GLFW_KEY_F4	thirdparty/glfw/include/GLFW/glfw3.h	445;"	d
GLFW_KEY_F5	thirdparty/glfw/include/GLFW/glfw3.h	446;"	d
GLFW_KEY_F6	thirdparty/glfw/include/GLFW/glfw3.h	447;"	d
GLFW_KEY_F7	thirdparty/glfw/include/GLFW/glfw3.h	448;"	d
GLFW_KEY_F8	thirdparty/glfw/include/GLFW/glfw3.h	449;"	d
GLFW_KEY_F9	thirdparty/glfw/include/GLFW/glfw3.h	450;"	d
GLFW_KEY_G	thirdparty/glfw/include/GLFW/glfw3.h	395;"	d
GLFW_KEY_GRAVE_ACCENT	thirdparty/glfw/include/GLFW/glfw3.h	418;"	d
GLFW_KEY_H	thirdparty/glfw/include/GLFW/glfw3.h	396;"	d
GLFW_KEY_HOME	thirdparty/glfw/include/GLFW/glfw3.h	435;"	d
GLFW_KEY_I	thirdparty/glfw/include/GLFW/glfw3.h	397;"	d
GLFW_KEY_INSERT	thirdparty/glfw/include/GLFW/glfw3.h	427;"	d
GLFW_KEY_J	thirdparty/glfw/include/GLFW/glfw3.h	398;"	d
GLFW_KEY_K	thirdparty/glfw/include/GLFW/glfw3.h	399;"	d
GLFW_KEY_KP_0	thirdparty/glfw/include/GLFW/glfw3.h	467;"	d
GLFW_KEY_KP_1	thirdparty/glfw/include/GLFW/glfw3.h	468;"	d
GLFW_KEY_KP_2	thirdparty/glfw/include/GLFW/glfw3.h	469;"	d
GLFW_KEY_KP_3	thirdparty/glfw/include/GLFW/glfw3.h	470;"	d
GLFW_KEY_KP_4	thirdparty/glfw/include/GLFW/glfw3.h	471;"	d
GLFW_KEY_KP_5	thirdparty/glfw/include/GLFW/glfw3.h	472;"	d
GLFW_KEY_KP_6	thirdparty/glfw/include/GLFW/glfw3.h	473;"	d
GLFW_KEY_KP_7	thirdparty/glfw/include/GLFW/glfw3.h	474;"	d
GLFW_KEY_KP_8	thirdparty/glfw/include/GLFW/glfw3.h	475;"	d
GLFW_KEY_KP_9	thirdparty/glfw/include/GLFW/glfw3.h	476;"	d
GLFW_KEY_KP_ADD	thirdparty/glfw/include/GLFW/glfw3.h	481;"	d
GLFW_KEY_KP_DECIMAL	thirdparty/glfw/include/GLFW/glfw3.h	477;"	d
GLFW_KEY_KP_DIVIDE	thirdparty/glfw/include/GLFW/glfw3.h	478;"	d
GLFW_KEY_KP_ENTER	thirdparty/glfw/include/GLFW/glfw3.h	482;"	d
GLFW_KEY_KP_EQUAL	thirdparty/glfw/include/GLFW/glfw3.h	483;"	d
GLFW_KEY_KP_MULTIPLY	thirdparty/glfw/include/GLFW/glfw3.h	479;"	d
GLFW_KEY_KP_SUBTRACT	thirdparty/glfw/include/GLFW/glfw3.h	480;"	d
GLFW_KEY_L	thirdparty/glfw/include/GLFW/glfw3.h	400;"	d
GLFW_KEY_LAST	thirdparty/glfw/include/GLFW/glfw3.h	494;"	d
GLFW_KEY_LEFT	thirdparty/glfw/include/GLFW/glfw3.h	430;"	d
GLFW_KEY_LEFT_ALT	thirdparty/glfw/include/GLFW/glfw3.h	486;"	d
GLFW_KEY_LEFT_BRACKET	thirdparty/glfw/include/GLFW/glfw3.h	415;"	d
GLFW_KEY_LEFT_CONTROL	thirdparty/glfw/include/GLFW/glfw3.h	485;"	d
GLFW_KEY_LEFT_SHIFT	thirdparty/glfw/include/GLFW/glfw3.h	484;"	d
GLFW_KEY_LEFT_SUPER	thirdparty/glfw/include/GLFW/glfw3.h	487;"	d
GLFW_KEY_M	thirdparty/glfw/include/GLFW/glfw3.h	401;"	d
GLFW_KEY_MENU	thirdparty/glfw/include/GLFW/glfw3.h	492;"	d
GLFW_KEY_MINUS	thirdparty/glfw/include/GLFW/glfw3.h	374;"	d
GLFW_KEY_N	thirdparty/glfw/include/GLFW/glfw3.h	402;"	d
GLFW_KEY_NUM_LOCK	thirdparty/glfw/include/GLFW/glfw3.h	439;"	d
GLFW_KEY_O	thirdparty/glfw/include/GLFW/glfw3.h	403;"	d
GLFW_KEY_P	thirdparty/glfw/include/GLFW/glfw3.h	404;"	d
GLFW_KEY_PAGE_DOWN	thirdparty/glfw/include/GLFW/glfw3.h	434;"	d
GLFW_KEY_PAGE_UP	thirdparty/glfw/include/GLFW/glfw3.h	433;"	d
GLFW_KEY_PAUSE	thirdparty/glfw/include/GLFW/glfw3.h	441;"	d
GLFW_KEY_PERIOD	thirdparty/glfw/include/GLFW/glfw3.h	375;"	d
GLFW_KEY_PRINT_SCREEN	thirdparty/glfw/include/GLFW/glfw3.h	440;"	d
GLFW_KEY_Q	thirdparty/glfw/include/GLFW/glfw3.h	405;"	d
GLFW_KEY_R	thirdparty/glfw/include/GLFW/glfw3.h	406;"	d
GLFW_KEY_RIGHT	thirdparty/glfw/include/GLFW/glfw3.h	429;"	d
GLFW_KEY_RIGHT_ALT	thirdparty/glfw/include/GLFW/glfw3.h	490;"	d
GLFW_KEY_RIGHT_BRACKET	thirdparty/glfw/include/GLFW/glfw3.h	417;"	d
GLFW_KEY_RIGHT_CONTROL	thirdparty/glfw/include/GLFW/glfw3.h	489;"	d
GLFW_KEY_RIGHT_SHIFT	thirdparty/glfw/include/GLFW/glfw3.h	488;"	d
GLFW_KEY_RIGHT_SUPER	thirdparty/glfw/include/GLFW/glfw3.h	491;"	d
GLFW_KEY_S	thirdparty/glfw/include/GLFW/glfw3.h	407;"	d
GLFW_KEY_SCROLL_LOCK	thirdparty/glfw/include/GLFW/glfw3.h	438;"	d
GLFW_KEY_SEMICOLON	thirdparty/glfw/include/GLFW/glfw3.h	387;"	d
GLFW_KEY_SLASH	thirdparty/glfw/include/GLFW/glfw3.h	376;"	d
GLFW_KEY_SPACE	thirdparty/glfw/include/GLFW/glfw3.h	371;"	d
GLFW_KEY_T	thirdparty/glfw/include/GLFW/glfw3.h	408;"	d
GLFW_KEY_TAB	thirdparty/glfw/include/GLFW/glfw3.h	425;"	d
GLFW_KEY_U	thirdparty/glfw/include/GLFW/glfw3.h	409;"	d
GLFW_KEY_UNKNOWN	thirdparty/glfw/include/GLFW/glfw3.h	368;"	d
GLFW_KEY_UP	thirdparty/glfw/include/GLFW/glfw3.h	432;"	d
GLFW_KEY_V	thirdparty/glfw/include/GLFW/glfw3.h	410;"	d
GLFW_KEY_W	thirdparty/glfw/include/GLFW/glfw3.h	411;"	d
GLFW_KEY_WORLD_1	thirdparty/glfw/include/GLFW/glfw3.h	419;"	d
GLFW_KEY_WORLD_2	thirdparty/glfw/include/GLFW/glfw3.h	420;"	d
GLFW_KEY_X	thirdparty/glfw/include/GLFW/glfw3.h	412;"	d
GLFW_KEY_Y	thirdparty/glfw/include/GLFW/glfw3.h	413;"	d
GLFW_KEY_Z	thirdparty/glfw/include/GLFW/glfw3.h	414;"	d
GLFW_LOSE_CONTEXT_ON_RESET	thirdparty/glfw/include/GLFW/glfw3.h	914;"	d
GLFW_MAXIMIZED	thirdparty/glfw/include/GLFW/glfw3.h	749;"	d
GLFW_MOD_ALT	thirdparty/glfw/include/GLFW/glfw3.h	514;"	d
GLFW_MOD_CONTROL	thirdparty/glfw/include/GLFW/glfw3.h	511;"	d
GLFW_MOD_SHIFT	thirdparty/glfw/include/GLFW/glfw3.h	508;"	d
GLFW_MOD_SUPER	thirdparty/glfw/include/GLFW/glfw3.h	517;"	d
GLFW_MOUSE_BUTTON_1	thirdparty/glfw/include/GLFW/glfw3.h	528;"	d
GLFW_MOUSE_BUTTON_2	thirdparty/glfw/include/GLFW/glfw3.h	529;"	d
GLFW_MOUSE_BUTTON_3	thirdparty/glfw/include/GLFW/glfw3.h	530;"	d
GLFW_MOUSE_BUTTON_4	thirdparty/glfw/include/GLFW/glfw3.h	531;"	d
GLFW_MOUSE_BUTTON_5	thirdparty/glfw/include/GLFW/glfw3.h	532;"	d
GLFW_MOUSE_BUTTON_6	thirdparty/glfw/include/GLFW/glfw3.h	533;"	d
GLFW_MOUSE_BUTTON_7	thirdparty/glfw/include/GLFW/glfw3.h	534;"	d
GLFW_MOUSE_BUTTON_8	thirdparty/glfw/include/GLFW/glfw3.h	535;"	d
GLFW_MOUSE_BUTTON_LAST	thirdparty/glfw/include/GLFW/glfw3.h	536;"	d
GLFW_MOUSE_BUTTON_LEFT	thirdparty/glfw/include/GLFW/glfw3.h	537;"	d
GLFW_MOUSE_BUTTON_MIDDLE	thirdparty/glfw/include/GLFW/glfw3.h	539;"	d
GLFW_MOUSE_BUTTON_RIGHT	thirdparty/glfw/include/GLFW/glfw3.h	538;"	d
GLFW_NATIVE_CONTEXT_API	thirdparty/glfw/include/GLFW/glfw3.h	932;"	d
GLFW_NOT_INITIALIZED	thirdparty/glfw/include/GLFW/glfw3.h	590;"	d
GLFW_NO_API	thirdparty/glfw/include/GLFW/glfw3.h	908;"	d
GLFW_NO_CURRENT_CONTEXT	thirdparty/glfw/include/GLFW/glfw3.h	600;"	d
GLFW_NO_ERROR	thirdparty/glfw/include/GLFW/glfw3.h	581;"	d
GLFW_NO_RESET_NOTIFICATION	thirdparty/glfw/include/GLFW/glfw3.h	913;"	d
GLFW_NO_ROBUSTNESS	thirdparty/glfw/include/GLFW/glfw3.h	912;"	d
GLFW_NO_WINDOW_CONTEXT	thirdparty/glfw/include/GLFW/glfw3.h	698;"	d
GLFW_OPENGL_ANY_PROFILE	thirdparty/glfw/include/GLFW/glfw3.h	916;"	d
GLFW_OPENGL_API	thirdparty/glfw/include/GLFW/glfw3.h	909;"	d
GLFW_OPENGL_COMPAT_PROFILE	thirdparty/glfw/include/GLFW/glfw3.h	918;"	d
GLFW_OPENGL_CORE_PROFILE	thirdparty/glfw/include/GLFW/glfw3.h	917;"	d
GLFW_OPENGL_DEBUG_CONTEXT	thirdparty/glfw/include/GLFW/glfw3.h	877;"	d
GLFW_OPENGL_ES_API	thirdparty/glfw/include/GLFW/glfw3.h	910;"	d
GLFW_OPENGL_FORWARD_COMPAT	thirdparty/glfw/include/GLFW/glfw3.h	871;"	d
GLFW_OPENGL_PROFILE	thirdparty/glfw/include/GLFW/glfw3.h	883;"	d
GLFW_OSMESA_CONTEXT_API	thirdparty/glfw/include/GLFW/glfw3.h	934;"	d
GLFW_OUT_OF_MEMORY	thirdparty/glfw/include/GLFW/glfw3.h	627;"	d
GLFW_PLATFORM_ERROR	thirdparty/glfw/include/GLFW/glfw3.h	671;"	d
GLFW_PRESS	thirdparty/glfw/include/GLFW/glfw3.h	316;"	d
GLFW_RED_BITS	thirdparty/glfw/include/GLFW/glfw3.h	760;"	d
GLFW_REFRESH_RATE	thirdparty/glfw/include/GLFW/glfw3.h	830;"	d
GLFW_RELEASE	thirdparty/glfw/include/GLFW/glfw3.h	309;"	d
GLFW_RELEASE_BEHAVIOR_FLUSH	thirdparty/glfw/include/GLFW/glfw3.h	929;"	d
GLFW_RELEASE_BEHAVIOR_NONE	thirdparty/glfw/include/GLFW/glfw3.h	930;"	d
GLFW_REPEAT	thirdparty/glfw/include/GLFW/glfw3.h	323;"	d
GLFW_RESIZABLE	thirdparty/glfw/include/GLFW/glfw3.h	719;"	d
GLFW_SAMPLES	thirdparty/glfw/include/GLFW/glfw3.h	820;"	d
GLFW_SELECTION	thirdparty/glfw/src/x11_platform.h	/^    Atom            GLFW_SELECTION;$/;"	m	struct:_GLFWlibraryX11
GLFW_SRGB_CAPABLE	thirdparty/glfw/include/GLFW/glfw3.h	825;"	d
GLFW_STENCIL_BITS	thirdparty/glfw/include/GLFW/glfw3.h	785;"	d
GLFW_STEREO	thirdparty/glfw/include/GLFW/glfw3.h	815;"	d
GLFW_STICKY_KEYS	thirdparty/glfw/include/GLFW/glfw3.h	921;"	d
GLFW_STICKY_MOUSE_BUTTONS	thirdparty/glfw/include/GLFW/glfw3.h	922;"	d
GLFW_TRUE	thirdparty/glfw/include/GLFW/glfw3.h	291;"	d
GLFW_VERSION_MAJOR	thirdparty/glfw/include/GLFW/glfw3.h	266;"	d
GLFW_VERSION_MINOR	thirdparty/glfw/include/GLFW/glfw3.h	273;"	d
GLFW_VERSION_REVISION	thirdparty/glfw/include/GLFW/glfw3.h	280;"	d
GLFW_VERSION_UNAVAILABLE	thirdparty/glfw/include/GLFW/glfw3.h	660;"	d
GLFW_VISIBLE	thirdparty/glfw/include/GLFW/glfw3.h	725;"	d
GLFW_VRESIZE_CURSOR	thirdparty/glfw/include/GLFW/glfw3.h	973;"	d
GLFW_WINGDIAPI_DEFINED	thirdparty/glfw/include/GLFW/glfw3.h	120;"	d
GLFW_WINGDIAPI_DEFINED	thirdparty/glfw/include/GLFW/glfw3.h	4906;"	d
GLFW_data	lib/nil_aspects/include/aspect/glfw_aspect.hpp	/^struct GLFW_data$/;"	s
GLFWbool	thirdparty/glfw/src/internal.h	/^typedef int GLFWbool;$/;"	t
GLFWcharfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWcharfun)(GLFWwindow*,unsigned int);$/;"	t
GLFWcharmodsfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWcharmodsfun)(GLFWwindow*,unsigned int,int);$/;"	t
GLFWcursor	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWcursor GLFWcursor;$/;"	t	typeref:struct:GLFWcursor
GLFWcursorenterfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWcursorenterfun)(GLFWwindow*,int);$/;"	t
GLFWcursorposfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWcursorposfun)(GLFWwindow*,double,double);$/;"	t
GLFWdropfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWdropfun)(GLFWwindow*,int,const char**);$/;"	t
GLFWerrorfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWerrorfun)(int,const char*);$/;"	t
GLFWframebuffersizefun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWframebuffersizefun)(GLFWwindow*,int,int);$/;"	t
GLFWgammaramp	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWgammaramp$/;"	s
GLFWgammaramp	thirdparty/glfw/include/GLFW/glfw3.h	/^} GLFWgammaramp;$/;"	t	typeref:struct:GLFWgammaramp
GLFWglproc	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (*GLFWglproc)(void);$/;"	t
GLFWimage	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWimage$/;"	s
GLFWimage	thirdparty/glfw/include/GLFW/glfw3.h	/^} GLFWimage;$/;"	t	typeref:struct:GLFWimage
GLFWjoystickfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWjoystickfun)(int,int);$/;"	t
GLFWkeyfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWkeyfun)(GLFWwindow*,int,int,int,int);$/;"	t
GLFWmonitor	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWmonitor GLFWmonitor;$/;"	t	typeref:struct:GLFWmonitor
GLFWmonitorfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWmonitorfun)(GLFWmonitor*,int);$/;"	t
GLFWmousebuttonfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWmousebuttonfun)(GLFWwindow*,int,int,int);$/;"	t
GLFWscrollfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWscrollfun)(GLFWwindow*,double,double);$/;"	t
GLFWvidmode	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWvidmode$/;"	s
GLFWvidmode	thirdparty/glfw/include/GLFW/glfw3.h	/^} GLFWvidmode;$/;"	t	typeref:struct:GLFWvidmode
GLFWvkproc	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (*GLFWvkproc)(void);$/;"	t
GLFWwindow	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWwindow GLFWwindow;$/;"	t	typeref:struct:GLFWwindow
GLFWwindowclosefun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowclosefun)(GLFWwindow*);$/;"	t
GLFWwindowfocusfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowfocusfun)(GLFWwindow*,int);$/;"	t
GLFWwindowiconifyfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowiconifyfun)(GLFWwindow*,int);$/;"	t
GLFWwindowmaximizefun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowmaximizefun)(GLFWwindow*,int);$/;"	t
GLFWwindowposfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowposfun)(GLFWwindow*,int,int);$/;"	t
GLFWwindowrefreshfun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowrefreshfun)(GLFWwindow*);$/;"	t
GLFWwindowsizefun	thirdparty/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowsizefun)(GLFWwindow*,int,int);$/;"	t
GLVULKANPROCNV	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRY  *GLVULKANPROCNV)(void);$/;"	t
GLVersion	thirdparty/glfw/src/deps/glad.c	/^struct gladGLversionStruct GLVersion;$/;"	v	typeref:struct:gladGLversionStruct
GLVersion	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI struct gladGLversionStruct GLVersion;$/;"	v	typeref:struct:gladGLversionStruct
GLXBadProfileARB	thirdparty/glfw/src/glx_context.c	35;"	d	file:
GLXContext	thirdparty/glfw/src/glx_context.h	/^typedef struct __GLXcontext* GLXContext;$/;"	t	typeref:struct:__GLXcontext
GLXDrawable	thirdparty/glfw/src/glx_context.h	/^typedef XID GLXDrawable;$/;"	t
GLXFBConfig	thirdparty/glfw/src/glx_context.h	/^typedef struct __GLXFBConfig* GLXFBConfig;$/;"	t	typeref:struct:__GLXFBConfig
GLXWindow	thirdparty/glfw/src/glx_context.h	/^typedef XID GLXWindow;$/;"	t
GLX_ACCUM_ALPHA_SIZE	thirdparty/glfw/src/glx_context.h	46;"	d
GLX_ACCUM_BLUE_SIZE	thirdparty/glfw/src/glx_context.h	45;"	d
GLX_ACCUM_GREEN_SIZE	thirdparty/glfw/src/glx_context.h	44;"	d
GLX_ACCUM_RED_SIZE	thirdparty/glfw/src/glx_context.h	43;"	d
GLX_ALPHA_SIZE	thirdparty/glfw/src/glx_context.h	40;"	d
GLX_AUX_BUFFERS	thirdparty/glfw/src/glx_context.h	36;"	d
GLX_BLUE_SIZE	thirdparty/glfw/src/glx_context.h	39;"	d
GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	thirdparty/glfw/src/glx_context.h	52;"	d
GLX_CONTEXT_CORE_PROFILE_BIT_ARB	thirdparty/glfw/src/glx_context.h	53;"	d
GLX_CONTEXT_DEBUG_BIT_ARB	thirdparty/glfw/src/glx_context.h	51;"	d
GLX_CONTEXT_ES2_PROFILE_BIT_EXT	thirdparty/glfw/src/glx_context.h	59;"	d
GLX_CONTEXT_FLAGS_ARB	thirdparty/glfw/src/glx_context.h	58;"	d
GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	thirdparty/glfw/src/glx_context.h	55;"	d
GLX_CONTEXT_MAJOR_VERSION_ARB	thirdparty/glfw/src/glx_context.h	56;"	d
GLX_CONTEXT_MINOR_VERSION_ARB	thirdparty/glfw/src/glx_context.h	57;"	d
GLX_CONTEXT_OPENGL_NO_ERROR_ARB	thirdparty/glfw/src/glx_context.h	67;"	d
GLX_CONTEXT_PROFILE_MASK_ARB	thirdparty/glfw/src/glx_context.h	54;"	d
GLX_CONTEXT_RELEASE_BEHAVIOR_ARB	thirdparty/glfw/src/glx_context.h	64;"	d
GLX_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB	thirdparty/glfw/src/glx_context.h	66;"	d
GLX_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB	thirdparty/glfw/src/glx_context.h	65;"	d
GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB	thirdparty/glfw/src/glx_context.h	62;"	d
GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB	thirdparty/glfw/src/glx_context.h	60;"	d
GLX_DEPTH_SIZE	thirdparty/glfw/src/glx_context.h	41;"	d
GLX_DOUBLEBUFFER	thirdparty/glfw/src/glx_context.h	34;"	d
GLX_DRAWABLE_TYPE	thirdparty/glfw/src/glx_context.h	31;"	d
GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB	thirdparty/glfw/src/glx_context.h	50;"	d
GLX_GREEN_SIZE	thirdparty/glfw/src/glx_context.h	38;"	d
GLX_LOSE_CONTEXT_ON_RESET_ARB	thirdparty/glfw/src/glx_context.h	61;"	d
GLX_NO_RESET_NOTIFICATION_ARB	thirdparty/glfw/src/glx_context.h	63;"	d
GLX_RED_SIZE	thirdparty/glfw/src/glx_context.h	37;"	d
GLX_RENDER_TYPE	thirdparty/glfw/src/glx_context.h	32;"	d
GLX_RGBA_BIT	thirdparty/glfw/src/glx_context.h	29;"	d
GLX_RGBA_TYPE	thirdparty/glfw/src/glx_context.h	33;"	d
GLX_SAMPLES	thirdparty/glfw/src/glx_context.h	47;"	d
GLX_STENCIL_SIZE	thirdparty/glfw/src/glx_context.h	42;"	d
GLX_STEREO	thirdparty/glfw/src/glx_context.h	35;"	d
GLX_VENDOR	thirdparty/glfw/src/glx_context.h	28;"	d
GLX_VISUAL_ID	thirdparty/glfw/src/glx_context.h	48;"	d
GLX_WINDOW_BIT	thirdparty/glfw/src/glx_context.h	30;"	d
GL_2D	thirdparty/glfw/src/deps/glad/glad.h	404;"	d
GL_2_BYTES	thirdparty/glfw/src/deps/glad/glad.h	616;"	d
GL_3D	thirdparty/glfw/src/deps/glad/glad.h	405;"	d
GL_3D_COLOR	thirdparty/glfw/src/deps/glad/glad.h	406;"	d
GL_3D_COLOR_TEXTURE	thirdparty/glfw/src/deps/glad/glad.h	407;"	d
GL_3_BYTES	thirdparty/glfw/src/deps/glad/glad.h	617;"	d
GL_4D_COLOR_TEXTURE	thirdparty/glfw/src/deps/glad/glad.h	408;"	d
GL_4_BYTES	thirdparty/glfw/src/deps/glad/glad.h	618;"	d
GL_ACCUM	thirdparty/glfw/src/deps/glad/glad.h	395;"	d
GL_ACCUM_ADJACENT_PAIRS_NV	thirdparty/opengl/include/GL/glcorearb.h	5114;"	d
GL_ACCUM_ALPHA_BITS	thirdparty/glfw/src/deps/glad/glad.h	550;"	d
GL_ACCUM_BLUE_BITS	thirdparty/glfw/src/deps/glad/glad.h	549;"	d
GL_ACCUM_BUFFER_BIT	thirdparty/glfw/src/deps/glad/glad.h	380;"	d
GL_ACCUM_CLEAR_VALUE	thirdparty/glfw/src/deps/glad/glad.h	475;"	d
GL_ACCUM_GREEN_BITS	thirdparty/glfw/src/deps/glad/glad.h	548;"	d
GL_ACCUM_RED_BITS	thirdparty/glfw/src/deps/glad/glad.h	547;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	thirdparty/opengl/include/GL/glcorearb.h	2156;"	d
GL_ACTIVE_ATTRIBUTES	thirdparty/glfw/src/deps/glad/glad.h	1001;"	d
GL_ACTIVE_ATTRIBUTES	thirdparty/opengl/include/GL/glcorearb.h	764;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	1002;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	765;"	d
GL_ACTIVE_PROGRAM	thirdparty/opengl/include/GL/glcorearb.h	1926;"	d
GL_ACTIVE_PROGRAM_EXT	thirdparty/opengl/include/GL/glcorearb.h	4534;"	d
GL_ACTIVE_RESOURCES	thirdparty/opengl/include/GL/glcorearb.h	2456;"	d
GL_ACTIVE_SUBROUTINES	thirdparty/opengl/include/GL/glcorearb.h	1755;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	1758;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	thirdparty/opengl/include/GL/glcorearb.h	1756;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	thirdparty/opengl/include/GL/glcorearb.h	1757;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	1759;"	d
GL_ACTIVE_TEXTURE	thirdparty/glfw/src/deps/glad/glad.h	770;"	d
GL_ACTIVE_TEXTURE	thirdparty/opengl/include/GL/glcorearb.h	516;"	d
GL_ACTIVE_UNIFORMS	thirdparty/glfw/src/deps/glad/glad.h	998;"	d
GL_ACTIVE_UNIFORMS	thirdparty/opengl/include/GL/glcorearb.h	761;"	d
GL_ACTIVE_UNIFORM_BLOCKS	thirdparty/glfw/src/deps/glad/glad.h	1319;"	d
GL_ACTIVE_UNIFORM_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	1450;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	1318;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	1449;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	999;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	762;"	d
GL_ACTIVE_VARIABLES	thirdparty/opengl/include/GL/glcorearb.h	2472;"	d
GL_ADD	thirdparty/glfw/src/deps/glad/glad.h	399;"	d
GL_ADD_SIGNED	thirdparty/glfw/src/deps/glad/glad.h	826;"	d
GL_ADJACENT_PAIRS_NV	thirdparty/opengl/include/GL/glcorearb.h	5115;"	d
GL_AFFINE_2D_NV	thirdparty/opengl/include/GL/glcorearb.h	5092;"	d
GL_AFFINE_3D_NV	thirdparty/opengl/include/GL/glcorearb.h	5093;"	d
GL_ALIASED_LINE_WIDTH_RANGE	thirdparty/glfw/src/deps/glad/glad.h	732;"	d
GL_ALIASED_LINE_WIDTH_RANGE	thirdparty/opengl/include/GL/glcorearb.h	469;"	d
GL_ALIASED_POINT_SIZE_RANGE	thirdparty/glfw/src/deps/glad/glad.h	737;"	d
GL_ALL_ATTRIB_BITS	thirdparty/glfw/src/deps/glad/glad.h	389;"	d
GL_ALL_BARRIER_BITS	thirdparty/opengl/include/GL/glcorearb.h	2171;"	d
GL_ALL_SHADER_BITS	thirdparty/opengl/include/GL/glcorearb.h	1924;"	d
GL_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	331;"	d
GL_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	240;"	d
GL_ALPHA12	thirdparty/glfw/src/deps/glad/glad.h	652;"	d
GL_ALPHA16	thirdparty/glfw/src/deps/glad/glad.h	653;"	d
GL_ALPHA4	thirdparty/glfw/src/deps/glad/glad.h	650;"	d
GL_ALPHA8	thirdparty/glfw/src/deps/glad/glad.h	651;"	d
GL_ALPHA_BIAS	thirdparty/glfw/src/deps/glad/glad.h	527;"	d
GL_ALPHA_BITS	thirdparty/glfw/src/deps/glad/glad.h	544;"	d
GL_ALPHA_INTEGER	thirdparty/glfw/src/deps/glad/glad.h	1275;"	d
GL_ALPHA_REF_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4785;"	d
GL_ALPHA_SCALE	thirdparty/glfw/src/deps/glad/glad.h	526;"	d
GL_ALPHA_TEST	thirdparty/glfw/src/deps/glad/glad.h	486;"	d
GL_ALPHA_TEST_FUNC	thirdparty/glfw/src/deps/glad/glad.h	487;"	d
GL_ALPHA_TEST_REF	thirdparty/glfw/src/deps/glad/glad.h	488;"	d
GL_ALREADY_SIGNALED	thirdparty/glfw/src/deps/glad/glad.h	1374;"	d
GL_ALREADY_SIGNALED	thirdparty/opengl/include/GL/glcorearb.h	1575;"	d
GL_ALWAYS	thirdparty/glfw/src/deps/glad/glad.h	189;"	d
GL_ALWAYS	thirdparty/opengl/include/GL/glcorearb.h	112;"	d
GL_AMBIENT	thirdparty/glfw/src/deps/glad/glad.h	604;"	d
GL_AMBIENT_AND_DIFFUSE	thirdparty/glfw/src/deps/glad/glad.h	621;"	d
GL_AMD_performance_monitor	thirdparty/opengl/include/GL/glcorearb.h	3906;"	d
GL_AND	thirdparty/glfw/src/deps/glad/glad.h	307;"	d
GL_AND	thirdparty/opengl/include/GL/glcorearb.h	216;"	d
GL_AND_INVERTED	thirdparty/glfw/src/deps/glad/glad.h	310;"	d
GL_AND_INVERTED	thirdparty/opengl/include/GL/glcorearb.h	219;"	d
GL_AND_REVERSE	thirdparty/glfw/src/deps/glad/glad.h	308;"	d
GL_AND_REVERSE	thirdparty/opengl/include/GL/glcorearb.h	217;"	d
GL_ANY_SAMPLES_PASSED	thirdparty/opengl/include/GL/glcorearb.h	1651;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	thirdparty/opengl/include/GL/glcorearb.h	2272;"	d
GL_APPLE_rgb_422	thirdparty/opengl/include/GL/glcorearb.h	3941;"	d
GL_ARB_ES2_compatibility	thirdparty/opengl/include/GL/glcorearb.h	2899;"	d
GL_ARB_ES3_1_compatibility	thirdparty/opengl/include/GL/glcorearb.h	2903;"	d
GL_ARB_ES3_2_compatibility	thirdparty/opengl/include/GL/glcorearb.h	2907;"	d
GL_ARB_ES3_compatibility	thirdparty/opengl/include/GL/glcorearb.h	2918;"	d
GL_ARB_arrays_of_arrays	thirdparty/opengl/include/GL/glcorearb.h	2922;"	d
GL_ARB_base_instance	thirdparty/opengl/include/GL/glcorearb.h	2926;"	d
GL_ARB_bindless_texture	thirdparty/opengl/include/GL/glcorearb.h	2930;"	d
GL_ARB_blend_func_extended	thirdparty/opengl/include/GL/glcorearb.h	2970;"	d
GL_ARB_buffer_storage	thirdparty/opengl/include/GL/glcorearb.h	2974;"	d
GL_ARB_cl_event	thirdparty/opengl/include/GL/glcorearb.h	2978;"	d
GL_ARB_clear_buffer_object	thirdparty/opengl/include/GL/glcorearb.h	2990;"	d
GL_ARB_clear_texture	thirdparty/opengl/include/GL/glcorearb.h	2994;"	d
GL_ARB_clip_control	thirdparty/opengl/include/GL/glcorearb.h	2998;"	d
GL_ARB_compressed_texture_pixel_storage	thirdparty/opengl/include/GL/glcorearb.h	3002;"	d
GL_ARB_compute_shader	thirdparty/opengl/include/GL/glcorearb.h	3006;"	d
GL_ARB_compute_variable_group_size	thirdparty/opengl/include/GL/glcorearb.h	3010;"	d
GL_ARB_conditional_render_inverted	thirdparty/opengl/include/GL/glcorearb.h	3022;"	d
GL_ARB_conservative_depth	thirdparty/opengl/include/GL/glcorearb.h	3026;"	d
GL_ARB_copy_buffer	thirdparty/opengl/include/GL/glcorearb.h	3030;"	d
GL_ARB_copy_image	thirdparty/opengl/include/GL/glcorearb.h	3034;"	d
GL_ARB_cull_distance	thirdparty/opengl/include/GL/glcorearb.h	3038;"	d
GL_ARB_debug_output	thirdparty/opengl/include/GL/glcorearb.h	3042;"	d
GL_ARB_depth_buffer_float	thirdparty/opengl/include/GL/glcorearb.h	3079;"	d
GL_ARB_depth_clamp	thirdparty/opengl/include/GL/glcorearb.h	3083;"	d
GL_ARB_derivative_control	thirdparty/opengl/include/GL/glcorearb.h	3087;"	d
GL_ARB_direct_state_access	thirdparty/opengl/include/GL/glcorearb.h	3091;"	d
GL_ARB_draw_buffers_blend	thirdparty/opengl/include/GL/glcorearb.h	3095;"	d
GL_ARB_draw_elements_base_vertex	thirdparty/opengl/include/GL/glcorearb.h	3109;"	d
GL_ARB_draw_indirect	thirdparty/opengl/include/GL/glcorearb.h	3113;"	d
GL_ARB_draw_instanced	thirdparty/opengl/include/GL/glcorearb.h	3117;"	d
GL_ARB_enhanced_layouts	thirdparty/opengl/include/GL/glcorearb.h	3127;"	d
GL_ARB_explicit_attrib_location	thirdparty/opengl/include/GL/glcorearb.h	3131;"	d
GL_ARB_explicit_uniform_location	thirdparty/opengl/include/GL/glcorearb.h	3135;"	d
GL_ARB_fragment_coord_conventions	thirdparty/opengl/include/GL/glcorearb.h	3139;"	d
GL_ARB_fragment_layer_viewport	thirdparty/opengl/include/GL/glcorearb.h	3143;"	d
GL_ARB_fragment_shader_interlock	thirdparty/opengl/include/GL/glcorearb.h	3147;"	d
GL_ARB_framebuffer_no_attachments	thirdparty/opengl/include/GL/glcorearb.h	3151;"	d
GL_ARB_framebuffer_object	thirdparty/opengl/include/GL/glcorearb.h	3155;"	d
GL_ARB_framebuffer_sRGB	thirdparty/opengl/include/GL/glcorearb.h	3159;"	d
GL_ARB_geometry_shader4	thirdparty/opengl/include/GL/glcorearb.h	3163;"	d
GL_ARB_get_program_binary	thirdparty/opengl/include/GL/glcorearb.h	3195;"	d
GL_ARB_get_texture_sub_image	thirdparty/opengl/include/GL/glcorearb.h	3199;"	d
GL_ARB_gl_spirv	thirdparty/opengl/include/GL/glcorearb.h	3203;"	d
GL_ARB_gpu_shader5	thirdparty/opengl/include/GL/glcorearb.h	3213;"	d
GL_ARB_gpu_shader_fp64	thirdparty/opengl/include/GL/glcorearb.h	3217;"	d
GL_ARB_gpu_shader_int64	thirdparty/opengl/include/GL/glcorearb.h	3221;"	d
GL_ARB_half_float_vertex	thirdparty/opengl/include/GL/glcorearb.h	3306;"	d
GL_ARB_imaging	thirdparty/opengl/include/GL/glcorearb.h	3310;"	d
GL_ARB_indirect_parameters	thirdparty/opengl/include/GL/glcorearb.h	3316;"	d
GL_ARB_instanced_arrays	thirdparty/opengl/include/GL/glcorearb.h	3328;"	d
GL_ARB_internalformat_query	thirdparty/opengl/include/GL/glcorearb.h	3337;"	d
GL_ARB_internalformat_query2	thirdparty/opengl/include/GL/glcorearb.h	3341;"	d
GL_ARB_invalidate_subdata	thirdparty/opengl/include/GL/glcorearb.h	3346;"	d
GL_ARB_map_buffer_alignment	thirdparty/opengl/include/GL/glcorearb.h	3350;"	d
GL_ARB_map_buffer_range	thirdparty/opengl/include/GL/glcorearb.h	3354;"	d
GL_ARB_multi_bind	thirdparty/opengl/include/GL/glcorearb.h	3358;"	d
GL_ARB_multi_draw_indirect	thirdparty/opengl/include/GL/glcorearb.h	3362;"	d
GL_ARB_multisample	thirdparty/glfw/src/deps/glad/glad.h	3538;"	d
GL_ARB_occlusion_query2	thirdparty/opengl/include/GL/glcorearb.h	3366;"	d
GL_ARB_parallel_shader_compile	thirdparty/opengl/include/GL/glcorearb.h	3370;"	d
GL_ARB_pipeline_statistics_query	thirdparty/opengl/include/GL/glcorearb.h	3380;"	d
GL_ARB_pixel_buffer_object	thirdparty/opengl/include/GL/glcorearb.h	3394;"	d
GL_ARB_post_depth_coverage	thirdparty/opengl/include/GL/glcorearb.h	3402;"	d
GL_ARB_program_interface_query	thirdparty/opengl/include/GL/glcorearb.h	3406;"	d
GL_ARB_provoking_vertex	thirdparty/opengl/include/GL/glcorearb.h	3410;"	d
GL_ARB_query_buffer_object	thirdparty/opengl/include/GL/glcorearb.h	3414;"	d
GL_ARB_robust_buffer_access_behavior	thirdparty/opengl/include/GL/glcorearb.h	3418;"	d
GL_ARB_robustness	thirdparty/glfw/src/deps/glad/glad.h	3545;"	d
GL_ARB_robustness	thirdparty/opengl/include/GL/glcorearb.h	3422;"	d
GL_ARB_robustness_isolation	thirdparty/opengl/include/GL/glcorearb.h	3451;"	d
GL_ARB_sample_locations	thirdparty/opengl/include/GL/glcorearb.h	3455;"	d
GL_ARB_sample_shading	thirdparty/opengl/include/GL/glcorearb.h	3475;"	d
GL_ARB_sampler_objects	thirdparty/opengl/include/GL/glcorearb.h	3485;"	d
GL_ARB_seamless_cube_map	thirdparty/opengl/include/GL/glcorearb.h	3489;"	d
GL_ARB_seamless_cubemap_per_texture	thirdparty/opengl/include/GL/glcorearb.h	3493;"	d
GL_ARB_separate_shader_objects	thirdparty/opengl/include/GL/glcorearb.h	3497;"	d
GL_ARB_shader_atomic_counter_ops	thirdparty/opengl/include/GL/glcorearb.h	3501;"	d
GL_ARB_shader_atomic_counters	thirdparty/opengl/include/GL/glcorearb.h	3505;"	d
GL_ARB_shader_ballot	thirdparty/opengl/include/GL/glcorearb.h	3509;"	d
GL_ARB_shader_bit_encoding	thirdparty/opengl/include/GL/glcorearb.h	3513;"	d
GL_ARB_shader_clock	thirdparty/opengl/include/GL/glcorearb.h	3517;"	d
GL_ARB_shader_draw_parameters	thirdparty/opengl/include/GL/glcorearb.h	3521;"	d
GL_ARB_shader_group_vote	thirdparty/opengl/include/GL/glcorearb.h	3525;"	d
GL_ARB_shader_image_load_store	thirdparty/opengl/include/GL/glcorearb.h	3529;"	d
GL_ARB_shader_image_size	thirdparty/opengl/include/GL/glcorearb.h	3533;"	d
GL_ARB_shader_precision	thirdparty/opengl/include/GL/glcorearb.h	3537;"	d
GL_ARB_shader_stencil_export	thirdparty/opengl/include/GL/glcorearb.h	3541;"	d
GL_ARB_shader_storage_buffer_object	thirdparty/opengl/include/GL/glcorearb.h	3545;"	d
GL_ARB_shader_subroutine	thirdparty/opengl/include/GL/glcorearb.h	3549;"	d
GL_ARB_shader_texture_image_samples	thirdparty/opengl/include/GL/glcorearb.h	3553;"	d
GL_ARB_shader_viewport_layer_array	thirdparty/opengl/include/GL/glcorearb.h	3557;"	d
GL_ARB_shading_language_420pack	thirdparty/opengl/include/GL/glcorearb.h	3561;"	d
GL_ARB_shading_language_include	thirdparty/opengl/include/GL/glcorearb.h	3565;"	d
GL_ARB_shading_language_packing	thirdparty/opengl/include/GL/glcorearb.h	3586;"	d
GL_ARB_sparse_buffer	thirdparty/opengl/include/GL/glcorearb.h	3590;"	d
GL_ARB_sparse_texture	thirdparty/opengl/include/GL/glcorearb.h	3604;"	d
GL_ARB_sparse_texture2	thirdparty/opengl/include/GL/glcorearb.h	3623;"	d
GL_ARB_sparse_texture_clamp	thirdparty/opengl/include/GL/glcorearb.h	3627;"	d
GL_ARB_stencil_texturing	thirdparty/opengl/include/GL/glcorearb.h	3631;"	d
GL_ARB_sync	thirdparty/opengl/include/GL/glcorearb.h	3635;"	d
GL_ARB_tessellation_shader	thirdparty/opengl/include/GL/glcorearb.h	3639;"	d
GL_ARB_texture_barrier	thirdparty/opengl/include/GL/glcorearb.h	3643;"	d
GL_ARB_texture_border_clamp	thirdparty/opengl/include/GL/glcorearb.h	3647;"	d
GL_ARB_texture_buffer_object	thirdparty/opengl/include/GL/glcorearb.h	3652;"	d
GL_ARB_texture_buffer_object_rgb32	thirdparty/opengl/include/GL/glcorearb.h	3665;"	d
GL_ARB_texture_buffer_range	thirdparty/opengl/include/GL/glcorearb.h	3669;"	d
GL_ARB_texture_compression_bptc	thirdparty/opengl/include/GL/glcorearb.h	3673;"	d
GL_ARB_texture_compression_rgtc	thirdparty/opengl/include/GL/glcorearb.h	3681;"	d
GL_ARB_texture_cube_map_array	thirdparty/opengl/include/GL/glcorearb.h	3685;"	d
GL_ARB_texture_filter_minmax	thirdparty/opengl/include/GL/glcorearb.h	3696;"	d
GL_ARB_texture_gather	thirdparty/opengl/include/GL/glcorearb.h	3702;"	d
GL_ARB_texture_mirror_clamp_to_edge	thirdparty/opengl/include/GL/glcorearb.h	3709;"	d
GL_ARB_texture_mirrored_repeat	thirdparty/opengl/include/GL/glcorearb.h	3713;"	d
GL_ARB_texture_multisample	thirdparty/opengl/include/GL/glcorearb.h	3718;"	d
GL_ARB_texture_non_power_of_two	thirdparty/opengl/include/GL/glcorearb.h	3722;"	d
GL_ARB_texture_query_levels	thirdparty/opengl/include/GL/glcorearb.h	3726;"	d
GL_ARB_texture_query_lod	thirdparty/opengl/include/GL/glcorearb.h	3730;"	d
GL_ARB_texture_rg	thirdparty/opengl/include/GL/glcorearb.h	3734;"	d
GL_ARB_texture_rgb10_a2ui	thirdparty/opengl/include/GL/glcorearb.h	3738;"	d
GL_ARB_texture_stencil8	thirdparty/opengl/include/GL/glcorearb.h	3742;"	d
GL_ARB_texture_storage	thirdparty/opengl/include/GL/glcorearb.h	3746;"	d
GL_ARB_texture_storage_multisample	thirdparty/opengl/include/GL/glcorearb.h	3750;"	d
GL_ARB_texture_swizzle	thirdparty/opengl/include/GL/glcorearb.h	3754;"	d
GL_ARB_texture_view	thirdparty/opengl/include/GL/glcorearb.h	3758;"	d
GL_ARB_timer_query	thirdparty/opengl/include/GL/glcorearb.h	3762;"	d
GL_ARB_transform_feedback2	thirdparty/opengl/include/GL/glcorearb.h	3766;"	d
GL_ARB_transform_feedback3	thirdparty/opengl/include/GL/glcorearb.h	3770;"	d
GL_ARB_transform_feedback_instanced	thirdparty/opengl/include/GL/glcorearb.h	3774;"	d
GL_ARB_transform_feedback_overflow_query	thirdparty/opengl/include/GL/glcorearb.h	3778;"	d
GL_ARB_uniform_buffer_object	thirdparty/opengl/include/GL/glcorearb.h	3784;"	d
GL_ARB_vertex_array_bgra	thirdparty/opengl/include/GL/glcorearb.h	3788;"	d
GL_ARB_vertex_array_object	thirdparty/opengl/include/GL/glcorearb.h	3792;"	d
GL_ARB_vertex_attrib_64bit	thirdparty/opengl/include/GL/glcorearb.h	3796;"	d
GL_ARB_vertex_attrib_binding	thirdparty/opengl/include/GL/glcorearb.h	3800;"	d
GL_ARB_vertex_type_10f_11f_11f_rev	thirdparty/opengl/include/GL/glcorearb.h	3804;"	d
GL_ARB_vertex_type_2_10_10_10_rev	thirdparty/opengl/include/GL/glcorearb.h	3808;"	d
GL_ARB_viewport_array	thirdparty/opengl/include/GL/glcorearb.h	3812;"	d
GL_ARC_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5161;"	d
GL_ARRAY_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	888;"	d
GL_ARRAY_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	625;"	d
GL_ARRAY_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	890;"	d
GL_ARRAY_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	627;"	d
GL_ARRAY_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2462;"	d
GL_ARRAY_STRIDE	thirdparty/opengl/include/GL/glcorearb.h	2465;"	d
GL_ASPECT_INCLUDED_5D7A0FCB_0B1D_4455_9F83_E01195FBD0D7	lib/nil_aspects/include/aspect/renderer_aspect.hpp	2;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2170;"	d
GL_ATOMIC_COUNTER_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	2130;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	thirdparty/opengl/include/GL/glcorearb.h	2135;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	thirdparty/opengl/include/GL/glcorearb.h	2136;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	2131;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2134;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	thirdparty/opengl/include/GL/glcorearb.h	2468;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2288;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2141;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2140;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2138;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2139;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2137;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2133;"	d
GL_ATOMIC_COUNTER_BUFFER_START	thirdparty/opengl/include/GL/glcorearb.h	2132;"	d
GL_ATTACHED_SHADERS	thirdparty/glfw/src/deps/glad/glad.h	997;"	d
GL_ATTACHED_SHADERS	thirdparty/opengl/include/GL/glcorearb.h	760;"	d
GL_ATTRIBUTE_ADDRESS_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4779;"	d
GL_ATTRIB_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	484;"	d
GL_AUTO_GENERATE_MIPMAP	thirdparty/opengl/include/GL/glcorearb.h	2377;"	d
GL_AUTO_NORMAL	thirdparty/glfw/src/deps/glad/glad.h	552;"	d
GL_AUX0	thirdparty/glfw/src/deps/glad/glad.h	400;"	d
GL_AUX1	thirdparty/glfw/src/deps/glad/glad.h	401;"	d
GL_AUX2	thirdparty/glfw/src/deps/glad/glad.h	402;"	d
GL_AUX3	thirdparty/glfw/src/deps/glad/glad.h	403;"	d
GL_AUX_BUFFERS	thirdparty/glfw/src/deps/glad/glad.h	491;"	d
GL_BACK	thirdparty/glfw/src/deps/glad/glad.h	207;"	d
GL_BACK	thirdparty/opengl/include/GL/glcorearb.h	130;"	d
GL_BACK_LEFT	thirdparty/glfw/src/deps/glad/glad.h	204;"	d
GL_BACK_LEFT	thirdparty/opengl/include/GL/glcorearb.h	127;"	d
GL_BACK_RIGHT	thirdparty/glfw/src/deps/glad/glad.h	205;"	d
GL_BACK_RIGHT	thirdparty/opengl/include/GL/glcorearb.h	128;"	d
GL_BEVEL_NV	thirdparty/opengl/include/GL/glcorearb.h	5108;"	d
GL_BGR	thirdparty/glfw/src/deps/glad/glad.h	719;"	d
GL_BGR	thirdparty/opengl/include/GL/glcorearb.h	456;"	d
GL_BGRA	thirdparty/glfw/src/deps/glad/glad.h	720;"	d
GL_BGRA	thirdparty/opengl/include/GL/glcorearb.h	457;"	d
GL_BGRA_INTEGER	thirdparty/glfw/src/deps/glad/glad.h	1111;"	d
GL_BGRA_INTEGER	thirdparty/opengl/include/GL/glcorearb.h	1074;"	d
GL_BGR_INTEGER	thirdparty/glfw/src/deps/glad/glad.h	1110;"	d
GL_BGR_INTEGER	thirdparty/opengl/include/GL/glcorearb.h	1073;"	d
GL_BITMAP	thirdparty/glfw/src/deps/glad/glad.h	628;"	d
GL_BITMAP_TOKEN	thirdparty/glfw/src/deps/glad/glad.h	413;"	d
GL_BLEND	thirdparty/glfw/src/deps/glad/glad.h	248;"	d
GL_BLEND	thirdparty/opengl/include/GL/glcorearb.h	171;"	d
GL_BLEND_ADVANCED_COHERENT_KHR	thirdparty/opengl/include/GL/glcorearb.h	3840;"	d
GL_BLEND_ADVANCED_COHERENT_NV	thirdparty/opengl/include/GL/glcorearb.h	4754;"	d
GL_BLEND_COLOR	thirdparty/opengl/include/GL/glcorearb.h	3311;"	d
GL_BLEND_COLOR_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4781;"	d
GL_BLEND_DST	thirdparty/glfw/src/deps/glad/glad.h	246;"	d
GL_BLEND_DST	thirdparty/opengl/include/GL/glcorearb.h	169;"	d
GL_BLEND_DST_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	836;"	d
GL_BLEND_DST_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	569;"	d
GL_BLEND_DST_RGB	thirdparty/glfw/src/deps/glad/glad.h	834;"	d
GL_BLEND_DST_RGB	thirdparty/opengl/include/GL/glcorearb.h	567;"	d
GL_BLEND_EQUATION	thirdparty/opengl/include/GL/glcorearb.h	3312;"	d
GL_BLEND_EQUATION_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	961;"	d
GL_BLEND_EQUATION_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	724;"	d
GL_BLEND_EQUATION_RGB	thirdparty/glfw/src/deps/glad/glad.h	932;"	d
GL_BLEND_EQUATION_RGB	thirdparty/opengl/include/GL/glcorearb.h	695;"	d
GL_BLEND_OVERLAP_NV	thirdparty/opengl/include/GL/glcorearb.h	4695;"	d
GL_BLEND_PREMULTIPLIED_SRC_NV	thirdparty/opengl/include/GL/glcorearb.h	4696;"	d
GL_BLEND_SRC	thirdparty/glfw/src/deps/glad/glad.h	247;"	d
GL_BLEND_SRC	thirdparty/opengl/include/GL/glcorearb.h	170;"	d
GL_BLEND_SRC_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	837;"	d
GL_BLEND_SRC_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	570;"	d
GL_BLEND_SRC_RGB	thirdparty/glfw/src/deps/glad/glad.h	835;"	d
GL_BLEND_SRC_RGB	thirdparty/opengl/include/GL/glcorearb.h	568;"	d
GL_BLOCK_INDEX	thirdparty/opengl/include/GL/glcorearb.h	2464;"	d
GL_BLUE	thirdparty/glfw/src/deps/glad/glad.h	330;"	d
GL_BLUE	thirdparty/opengl/include/GL/glcorearb.h	239;"	d
GL_BLUE_BIAS	thirdparty/glfw/src/deps/glad/glad.h	525;"	d
GL_BLUE_BITS	thirdparty/glfw/src/deps/glad/glad.h	543;"	d
GL_BLUE_INTEGER	thirdparty/glfw/src/deps/glad/glad.h	1107;"	d
GL_BLUE_INTEGER	thirdparty/opengl/include/GL/glcorearb.h	1070;"	d
GL_BLUE_NV	thirdparty/opengl/include/GL/glcorearb.h	4697;"	d
GL_BLUE_SCALE	thirdparty/glfw/src/deps/glad/glad.h	524;"	d
GL_BOLD_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5163;"	d
GL_BOOL	thirdparty/glfw/src/deps/glad/glad.h	979;"	d
GL_BOOL	thirdparty/opengl/include/GL/glcorearb.h	742;"	d
GL_BOOL_VEC2	thirdparty/glfw/src/deps/glad/glad.h	980;"	d
GL_BOOL_VEC2	thirdparty/opengl/include/GL/glcorearb.h	743;"	d
GL_BOOL_VEC3	thirdparty/glfw/src/deps/glad/glad.h	981;"	d
GL_BOOL_VEC3	thirdparty/opengl/include/GL/glcorearb.h	744;"	d
GL_BOOL_VEC4	thirdparty/glfw/src/deps/glad/glad.h	982;"	d
GL_BOOL_VEC4	thirdparty/opengl/include/GL/glcorearb.h	745;"	d
GL_BOUNDING_BOX_NV	thirdparty/opengl/include/GL/glcorearb.h	5087;"	d
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV	thirdparty/opengl/include/GL/glcorearb.h	5098;"	d
GL_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	3481;"	d
GL_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	2320;"	d
GL_BUFFER_ACCESS	thirdparty/glfw/src/deps/glad/glad.h	896;"	d
GL_BUFFER_ACCESS	thirdparty/opengl/include/GL/glcorearb.h	633;"	d
GL_BUFFER_ACCESS_FLAGS	thirdparty/glfw/src/deps/glad/glad.h	1136;"	d
GL_BUFFER_ACCESS_FLAGS	thirdparty/opengl/include/GL/glcorearb.h	1099;"	d
GL_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	2469;"	d
GL_BUFFER_DATA_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2470;"	d
GL_BUFFER_GPU_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5384;"	d
GL_BUFFER_IMMUTABLE_STORAGE	thirdparty/opengl/include/GL/glcorearb.h	2617;"	d
GL_BUFFER_KHR	thirdparty/glfw/src/deps/glad/glad.h	3518;"	d
GL_BUFFER_MAPPED	thirdparty/glfw/src/deps/glad/glad.h	897;"	d
GL_BUFFER_MAPPED	thirdparty/opengl/include/GL/glcorearb.h	634;"	d
GL_BUFFER_MAP_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	1137;"	d
GL_BUFFER_MAP_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	1100;"	d
GL_BUFFER_MAP_OFFSET	thirdparty/glfw/src/deps/glad/glad.h	1138;"	d
GL_BUFFER_MAP_OFFSET	thirdparty/opengl/include/GL/glcorearb.h	1101;"	d
GL_BUFFER_MAP_POINTER	thirdparty/glfw/src/deps/glad/glad.h	898;"	d
GL_BUFFER_MAP_POINTER	thirdparty/opengl/include/GL/glcorearb.h	635;"	d
GL_BUFFER_OBJECT_EXT	thirdparty/opengl/include/GL/glcorearb.h	3953;"	d
GL_BUFFER_SIZE	thirdparty/glfw/src/deps/glad/glad.h	882;"	d
GL_BUFFER_SIZE	thirdparty/opengl/include/GL/glcorearb.h	619;"	d
GL_BUFFER_STORAGE_FLAGS	thirdparty/opengl/include/GL/glcorearb.h	2618;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2167;"	d
GL_BUFFER_USAGE	thirdparty/glfw/src/deps/glad/glad.h	883;"	d
GL_BUFFER_USAGE	thirdparty/opengl/include/GL/glcorearb.h	620;"	d
GL_BUFFER_VARIABLE	thirdparty/opengl/include/GL/glcorearb.h	2441;"	d
GL_BYTE	thirdparty/glfw/src/deps/glad/glad.h	296;"	d
GL_BYTE	thirdparty/opengl/include/GL/glcorearb.h	206;"	d
GL_C3F_V3F	thirdparty/glfw/src/deps/glad/glad.h	673;"	d
GL_C4F_N3F_V3F	thirdparty/glfw/src/deps/glad/glad.h	675;"	d
GL_C4UB_V2F	thirdparty/glfw/src/deps/glad/glad.h	671;"	d
GL_C4UB_V3F	thirdparty/glfw/src/deps/glad/glad.h	672;"	d
GL_CAVEAT_SUPPORT	thirdparty/opengl/include/GL/glcorearb.h	2409;"	d
GL_CCW	thirdparty/glfw/src/deps/glad/glad.h	217;"	d
GL_CCW	thirdparty/opengl/include/GL/glcorearb.h	140;"	d
GL_CIRCULAR_CCW_ARC_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5158;"	d
GL_CIRCULAR_CW_ARC_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5159;"	d
GL_CIRCULAR_TANGENT_ARC_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5160;"	d
GL_CLAMP	thirdparty/glfw/src/deps/glad/glad.h	649;"	d
GL_CLAMP_FRAGMENT_COLOR	thirdparty/glfw/src/deps/glad/glad.h	1274;"	d
GL_CLAMP_READ_COLOR	thirdparty/glfw/src/deps/glad/glad.h	1064;"	d
GL_CLAMP_READ_COLOR	thirdparty/opengl/include/GL/glcorearb.h	1027;"	d
GL_CLAMP_TO_BORDER	thirdparty/glfw/src/deps/glad/glad.h	796;"	d
GL_CLAMP_TO_BORDER	thirdparty/opengl/include/GL/glcorearb.h	542;"	d
GL_CLAMP_TO_BORDER_ARB	thirdparty/opengl/include/GL/glcorearb.h	3648;"	d
GL_CLAMP_TO_EDGE	thirdparty/glfw/src/deps/glad/glad.h	723;"	d
GL_CLAMP_TO_EDGE	thirdparty/opengl/include/GL/glcorearb.h	460;"	d
GL_CLAMP_VERTEX_COLOR	thirdparty/glfw/src/deps/glad/glad.h	1273;"	d
GL_CLEAR	thirdparty/glfw/src/deps/glad/glad.h	306;"	d
GL_CLEAR	thirdparty/opengl/include/GL/glcorearb.h	215;"	d
GL_CLEAR_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	2405;"	d
GL_CLEAR_TEXTURE	thirdparty/opengl/include/GL/glcorearb.h	2619;"	d
GL_CLIENT_ACTIVE_TEXTURE	thirdparty/glfw/src/deps/glad/glad.h	797;"	d
GL_CLIENT_ALL_ATTRIB_BITS	thirdparty/glfw/src/deps/glad/glad.h	392;"	d
GL_CLIENT_ATTRIB_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	485;"	d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2616;"	d
GL_CLIENT_PIXEL_STORE_BIT	thirdparty/glfw/src/deps/glad/glad.h	390;"	d
GL_CLIENT_STORAGE_BIT	thirdparty/opengl/include/GL/glcorearb.h	2615;"	d
GL_CLIENT_VERTEX_ARRAY_BIT	thirdparty/glfw/src/deps/glad/glad.h	391;"	d
GL_CLIPPING_INPUT_PRIMITIVES_ARB	thirdparty/opengl/include/GL/glcorearb.h	3389;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES_ARB	thirdparty/opengl/include/GL/glcorearb.h	3390;"	d
GL_CLIP_DEPTH_MODE	thirdparty/opengl/include/GL/glcorearb.h	2656;"	d
GL_CLIP_DISTANCE0	thirdparty/glfw/src/deps/glad/glad.h	1040;"	d
GL_CLIP_DISTANCE0	thirdparty/opengl/include/GL/glcorearb.h	1003;"	d
GL_CLIP_DISTANCE1	thirdparty/glfw/src/deps/glad/glad.h	1041;"	d
GL_CLIP_DISTANCE1	thirdparty/opengl/include/GL/glcorearb.h	1004;"	d
GL_CLIP_DISTANCE2	thirdparty/glfw/src/deps/glad/glad.h	1042;"	d
GL_CLIP_DISTANCE2	thirdparty/opengl/include/GL/glcorearb.h	1005;"	d
GL_CLIP_DISTANCE3	thirdparty/glfw/src/deps/glad/glad.h	1043;"	d
GL_CLIP_DISTANCE3	thirdparty/opengl/include/GL/glcorearb.h	1006;"	d
GL_CLIP_DISTANCE4	thirdparty/glfw/src/deps/glad/glad.h	1044;"	d
GL_CLIP_DISTANCE4	thirdparty/opengl/include/GL/glcorearb.h	1007;"	d
GL_CLIP_DISTANCE5	thirdparty/glfw/src/deps/glad/glad.h	1045;"	d
GL_CLIP_DISTANCE5	thirdparty/opengl/include/GL/glcorearb.h	1008;"	d
GL_CLIP_DISTANCE6	thirdparty/glfw/src/deps/glad/glad.h	1046;"	d
GL_CLIP_DISTANCE6	thirdparty/opengl/include/GL/glcorearb.h	1009;"	d
GL_CLIP_DISTANCE7	thirdparty/glfw/src/deps/glad/glad.h	1047;"	d
GL_CLIP_DISTANCE7	thirdparty/opengl/include/GL/glcorearb.h	1010;"	d
GL_CLIP_ORIGIN	thirdparty/opengl/include/GL/glcorearb.h	2655;"	d
GL_CLIP_PLANE0	thirdparty/glfw/src/deps/glad/glad.h	683;"	d
GL_CLIP_PLANE1	thirdparty/glfw/src/deps/glad/glad.h	684;"	d
GL_CLIP_PLANE2	thirdparty/glfw/src/deps/glad/glad.h	685;"	d
GL_CLIP_PLANE3	thirdparty/glfw/src/deps/glad/glad.h	686;"	d
GL_CLIP_PLANE4	thirdparty/glfw/src/deps/glad/glad.h	687;"	d
GL_CLIP_PLANE5	thirdparty/glfw/src/deps/glad/glad.h	688;"	d
GL_CLOSE_PATH_NV	thirdparty/opengl/include/GL/glcorearb.h	5129;"	d
GL_COEFF	thirdparty/glfw/src/deps/glad/glad.h	419;"	d
GL_COLOR	thirdparty/glfw/src/deps/glad/glad.h	323;"	d
GL_COLOR	thirdparty/opengl/include/GL/glcorearb.h	232;"	d
GL_COLORBURN_KHR	thirdparty/opengl/include/GL/glcorearb.h	3823;"	d
GL_COLORBURN_NV	thirdparty/opengl/include/GL/glcorearb.h	4698;"	d
GL_COLORDODGE_KHR	thirdparty/opengl/include/GL/glcorearb.h	3822;"	d
GL_COLORDODGE_NV	thirdparty/opengl/include/GL/glcorearb.h	4699;"	d
GL_COLOR_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	580;"	d
GL_COLOR_ARRAY_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5505;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	912;"	d
GL_COLOR_ARRAY_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5515;"	d
GL_COLOR_ARRAY_POINTER	thirdparty/glfw/src/deps/glad/glad.h	434;"	d
GL_COLOR_ARRAY_SIZE	thirdparty/glfw/src/deps/glad/glad.h	589;"	d
GL_COLOR_ARRAY_STRIDE	thirdparty/glfw/src/deps/glad/glad.h	591;"	d
GL_COLOR_ARRAY_TYPE	thirdparty/glfw/src/deps/glad/glad.h	590;"	d
GL_COLOR_ATTACHMENT0	thirdparty/glfw/src/deps/glad/glad.h	1184;"	d
GL_COLOR_ATTACHMENT0	thirdparty/opengl/include/GL/glcorearb.h	1147;"	d
GL_COLOR_ATTACHMENT1	thirdparty/glfw/src/deps/glad/glad.h	1185;"	d
GL_COLOR_ATTACHMENT1	thirdparty/opengl/include/GL/glcorearb.h	1148;"	d
GL_COLOR_ATTACHMENT10	thirdparty/glfw/src/deps/glad/glad.h	1194;"	d
GL_COLOR_ATTACHMENT10	thirdparty/opengl/include/GL/glcorearb.h	1157;"	d
GL_COLOR_ATTACHMENT11	thirdparty/glfw/src/deps/glad/glad.h	1195;"	d
GL_COLOR_ATTACHMENT11	thirdparty/opengl/include/GL/glcorearb.h	1158;"	d
GL_COLOR_ATTACHMENT12	thirdparty/glfw/src/deps/glad/glad.h	1196;"	d
GL_COLOR_ATTACHMENT12	thirdparty/opengl/include/GL/glcorearb.h	1159;"	d
GL_COLOR_ATTACHMENT13	thirdparty/glfw/src/deps/glad/glad.h	1197;"	d
GL_COLOR_ATTACHMENT13	thirdparty/opengl/include/GL/glcorearb.h	1160;"	d
GL_COLOR_ATTACHMENT14	thirdparty/glfw/src/deps/glad/glad.h	1198;"	d
GL_COLOR_ATTACHMENT14	thirdparty/opengl/include/GL/glcorearb.h	1161;"	d
GL_COLOR_ATTACHMENT15	thirdparty/glfw/src/deps/glad/glad.h	1199;"	d
GL_COLOR_ATTACHMENT15	thirdparty/opengl/include/GL/glcorearb.h	1162;"	d
GL_COLOR_ATTACHMENT16	thirdparty/glfw/src/deps/glad/glad.h	1200;"	d
GL_COLOR_ATTACHMENT16	thirdparty/opengl/include/GL/glcorearb.h	1163;"	d
GL_COLOR_ATTACHMENT17	thirdparty/glfw/src/deps/glad/glad.h	1201;"	d
GL_COLOR_ATTACHMENT17	thirdparty/opengl/include/GL/glcorearb.h	1164;"	d
GL_COLOR_ATTACHMENT18	thirdparty/glfw/src/deps/glad/glad.h	1202;"	d
GL_COLOR_ATTACHMENT18	thirdparty/opengl/include/GL/glcorearb.h	1165;"	d
GL_COLOR_ATTACHMENT19	thirdparty/glfw/src/deps/glad/glad.h	1203;"	d
GL_COLOR_ATTACHMENT19	thirdparty/opengl/include/GL/glcorearb.h	1166;"	d
GL_COLOR_ATTACHMENT2	thirdparty/glfw/src/deps/glad/glad.h	1186;"	d
GL_COLOR_ATTACHMENT2	thirdparty/opengl/include/GL/glcorearb.h	1149;"	d
GL_COLOR_ATTACHMENT20	thirdparty/glfw/src/deps/glad/glad.h	1204;"	d
GL_COLOR_ATTACHMENT20	thirdparty/opengl/include/GL/glcorearb.h	1167;"	d
GL_COLOR_ATTACHMENT21	thirdparty/glfw/src/deps/glad/glad.h	1205;"	d
GL_COLOR_ATTACHMENT21	thirdparty/opengl/include/GL/glcorearb.h	1168;"	d
GL_COLOR_ATTACHMENT22	thirdparty/glfw/src/deps/glad/glad.h	1206;"	d
GL_COLOR_ATTACHMENT22	thirdparty/opengl/include/GL/glcorearb.h	1169;"	d
GL_COLOR_ATTACHMENT23	thirdparty/glfw/src/deps/glad/glad.h	1207;"	d
GL_COLOR_ATTACHMENT23	thirdparty/opengl/include/GL/glcorearb.h	1170;"	d
GL_COLOR_ATTACHMENT24	thirdparty/glfw/src/deps/glad/glad.h	1208;"	d
GL_COLOR_ATTACHMENT24	thirdparty/opengl/include/GL/glcorearb.h	1171;"	d
GL_COLOR_ATTACHMENT25	thirdparty/glfw/src/deps/glad/glad.h	1209;"	d
GL_COLOR_ATTACHMENT25	thirdparty/opengl/include/GL/glcorearb.h	1172;"	d
GL_COLOR_ATTACHMENT26	thirdparty/glfw/src/deps/glad/glad.h	1210;"	d
GL_COLOR_ATTACHMENT26	thirdparty/opengl/include/GL/glcorearb.h	1173;"	d
GL_COLOR_ATTACHMENT27	thirdparty/glfw/src/deps/glad/glad.h	1211;"	d
GL_COLOR_ATTACHMENT27	thirdparty/opengl/include/GL/glcorearb.h	1174;"	d
GL_COLOR_ATTACHMENT28	thirdparty/glfw/src/deps/glad/glad.h	1212;"	d
GL_COLOR_ATTACHMENT28	thirdparty/opengl/include/GL/glcorearb.h	1175;"	d
GL_COLOR_ATTACHMENT29	thirdparty/glfw/src/deps/glad/glad.h	1213;"	d
GL_COLOR_ATTACHMENT29	thirdparty/opengl/include/GL/glcorearb.h	1176;"	d
GL_COLOR_ATTACHMENT3	thirdparty/glfw/src/deps/glad/glad.h	1187;"	d
GL_COLOR_ATTACHMENT3	thirdparty/opengl/include/GL/glcorearb.h	1150;"	d
GL_COLOR_ATTACHMENT30	thirdparty/glfw/src/deps/glad/glad.h	1214;"	d
GL_COLOR_ATTACHMENT30	thirdparty/opengl/include/GL/glcorearb.h	1177;"	d
GL_COLOR_ATTACHMENT31	thirdparty/glfw/src/deps/glad/glad.h	1215;"	d
GL_COLOR_ATTACHMENT31	thirdparty/opengl/include/GL/glcorearb.h	1178;"	d
GL_COLOR_ATTACHMENT4	thirdparty/glfw/src/deps/glad/glad.h	1188;"	d
GL_COLOR_ATTACHMENT4	thirdparty/opengl/include/GL/glcorearb.h	1151;"	d
GL_COLOR_ATTACHMENT5	thirdparty/glfw/src/deps/glad/glad.h	1189;"	d
GL_COLOR_ATTACHMENT5	thirdparty/opengl/include/GL/glcorearb.h	1152;"	d
GL_COLOR_ATTACHMENT6	thirdparty/glfw/src/deps/glad/glad.h	1190;"	d
GL_COLOR_ATTACHMENT6	thirdparty/opengl/include/GL/glcorearb.h	1153;"	d
GL_COLOR_ATTACHMENT7	thirdparty/glfw/src/deps/glad/glad.h	1191;"	d
GL_COLOR_ATTACHMENT7	thirdparty/opengl/include/GL/glcorearb.h	1154;"	d
GL_COLOR_ATTACHMENT8	thirdparty/glfw/src/deps/glad/glad.h	1192;"	d
GL_COLOR_ATTACHMENT8	thirdparty/opengl/include/GL/glcorearb.h	1155;"	d
GL_COLOR_ATTACHMENT9	thirdparty/glfw/src/deps/glad/glad.h	1193;"	d
GL_COLOR_ATTACHMENT9	thirdparty/opengl/include/GL/glcorearb.h	1156;"	d
GL_COLOR_BUFFER_BIT	thirdparty/glfw/src/deps/glad/glad.h	171;"	d
GL_COLOR_BUFFER_BIT	thirdparty/glfw/src/internal.h	81;"	d
GL_COLOR_BUFFER_BIT	thirdparty/opengl/include/GL/glcorearb.h	94;"	d
GL_COLOR_CLEAR_VALUE	thirdparty/glfw/src/deps/glad/glad.h	255;"	d
GL_COLOR_CLEAR_VALUE	thirdparty/opengl/include/GL/glcorearb.h	177;"	d
GL_COLOR_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	2359;"	d
GL_COLOR_ENCODING	thirdparty/opengl/include/GL/glcorearb.h	2378;"	d
GL_COLOR_INDEX	thirdparty/glfw/src/deps/glad/glad.h	625;"	d
GL_COLOR_INDEXES	thirdparty/glfw/src/deps/glad/glad.h	622;"	d
GL_COLOR_LOGIC_OP	thirdparty/glfw/src/deps/glad/glad.h	250;"	d
GL_COLOR_LOGIC_OP	thirdparty/opengl/include/GL/glcorearb.h	369;"	d
GL_COLOR_MATERIAL	thirdparty/glfw/src/deps/glad/glad.h	467;"	d
GL_COLOR_MATERIAL_FACE	thirdparty/glfw/src/deps/glad/glad.h	465;"	d
GL_COLOR_MATERIAL_PARAMETER	thirdparty/glfw/src/deps/glad/glad.h	466;"	d
GL_COLOR_RENDERABLE	thirdparty/opengl/include/GL/glcorearb.h	2362;"	d
GL_COLOR_SAMPLES_NV	thirdparty/opengl/include/GL/glcorearb.h	4914;"	d
GL_COLOR_SUM	thirdparty/glfw/src/deps/glad/glad.h	863;"	d
GL_COLOR_WRITEMASK	thirdparty/glfw/src/deps/glad/glad.h	256;"	d
GL_COLOR_WRITEMASK	thirdparty/opengl/include/GL/glcorearb.h	178;"	d
GL_COMBINE	thirdparty/glfw/src/deps/glad/glad.h	810;"	d
GL_COMBINE_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	812;"	d
GL_COMBINE_RGB	thirdparty/glfw/src/deps/glad/glad.h	811;"	d
GL_COMMAND_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2164;"	d
GL_COMPARE_REF_TO_TEXTURE	thirdparty/glfw/src/deps/glad/glad.h	1039;"	d
GL_COMPARE_REF_TO_TEXTURE	thirdparty/opengl/include/GL/glcorearb.h	1002;"	d
GL_COMPARE_R_TO_TEXTURE	thirdparty/glfw/src/deps/glad/glad.h	872;"	d
GL_COMPATIBLE_SUBROUTINES	thirdparty/opengl/include/GL/glcorearb.h	1763;"	d
GL_COMPILE	thirdparty/glfw/src/deps/glad/glad.h	614;"	d
GL_COMPILE_AND_EXECUTE	thirdparty/glfw/src/deps/glad/glad.h	615;"	d
GL_COMPILE_STATUS	thirdparty/glfw/src/deps/glad/glad.h	993;"	d
GL_COMPILE_STATUS	thirdparty/opengl/include/GL/glcorearb.h	756;"	d
GL_COMPLETION_STATUS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3372;"	d
GL_COMPRESSED_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	806;"	d
GL_COMPRESSED_INTENSITY	thirdparty/glfw/src/deps/glad/glad.h	809;"	d
GL_COMPRESSED_LUMINANCE	thirdparty/glfw/src/deps/glad/glad.h	807;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	808;"	d
GL_COMPRESSED_R11_EAC	thirdparty/opengl/include/GL/glcorearb.h	2267;"	d
GL_COMPRESSED_RED	thirdparty/glfw/src/deps/glad/glad.h	1053;"	d
GL_COMPRESSED_RED	thirdparty/opengl/include/GL/glcorearb.h	1016;"	d
GL_COMPRESSED_RED_RGTC1	thirdparty/glfw/src/deps/glad/glad.h	1246;"	d
GL_COMPRESSED_RED_RGTC1	thirdparty/opengl/include/GL/glcorearb.h	1206;"	d
GL_COMPRESSED_RG	thirdparty/glfw/src/deps/glad/glad.h	1054;"	d
GL_COMPRESSED_RG	thirdparty/opengl/include/GL/glcorearb.h	1017;"	d
GL_COMPRESSED_RG11_EAC	thirdparty/opengl/include/GL/glcorearb.h	2269;"	d
GL_COMPRESSED_RGB	thirdparty/glfw/src/deps/glad/glad.h	789;"	d
GL_COMPRESSED_RGB	thirdparty/opengl/include/GL/glcorearb.h	535;"	d
GL_COMPRESSED_RGB8_ETC2	thirdparty/opengl/include/GL/glcorearb.h	2261;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	thirdparty/opengl/include/GL/glcorearb.h	2263;"	d
GL_COMPRESSED_RGBA	thirdparty/glfw/src/deps/glad/glad.h	790;"	d
GL_COMPRESSED_RGBA	thirdparty/opengl/include/GL/glcorearb.h	536;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	thirdparty/opengl/include/GL/glcorearb.h	2265;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	thirdparty/opengl/include/GL/glcorearb.h	3878;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	thirdparty/opengl/include/GL/glcorearb.h	3875;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	thirdparty/opengl/include/GL/glcorearb.h	3876;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	thirdparty/opengl/include/GL/glcorearb.h	3877;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	thirdparty/opengl/include/GL/glcorearb.h	3879;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	thirdparty/opengl/include/GL/glcorearb.h	3880;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	thirdparty/opengl/include/GL/glcorearb.h	3867;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	thirdparty/opengl/include/GL/glcorearb.h	3868;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	thirdparty/opengl/include/GL/glcorearb.h	3869;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	thirdparty/opengl/include/GL/glcorearb.h	3870;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	thirdparty/opengl/include/GL/glcorearb.h	3871;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	thirdparty/opengl/include/GL/glcorearb.h	3872;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	thirdparty/opengl/include/GL/glcorearb.h	3873;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	thirdparty/opengl/include/GL/glcorearb.h	3874;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM	thirdparty/opengl/include/GL/glcorearb.h	2223;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	thirdparty/opengl/include/GL/glcorearb.h	3674;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	thirdparty/opengl/include/GL/glcorearb.h	4552;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	thirdparty/opengl/include/GL/glcorearb.h	4553;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	thirdparty/opengl/include/GL/glcorearb.h	4554;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT	thirdparty/opengl/include/GL/glcorearb.h	2225;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	thirdparty/opengl/include/GL/glcorearb.h	3676;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT	thirdparty/opengl/include/GL/glcorearb.h	2226;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	thirdparty/opengl/include/GL/glcorearb.h	3677;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	thirdparty/opengl/include/GL/glcorearb.h	4551;"	d
GL_COMPRESSED_RG_RGTC2	thirdparty/glfw/src/deps/glad/glad.h	1248;"	d
GL_COMPRESSED_RG_RGTC2	thirdparty/opengl/include/GL/glcorearb.h	1208;"	d
GL_COMPRESSED_SIGNED_R11_EAC	thirdparty/opengl/include/GL/glcorearb.h	2268;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	thirdparty/glfw/src/deps/glad/glad.h	1247;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	thirdparty/opengl/include/GL/glcorearb.h	1207;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	thirdparty/opengl/include/GL/glcorearb.h	2270;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	thirdparty/glfw/src/deps/glad/glad.h	1249;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	thirdparty/opengl/include/GL/glcorearb.h	1209;"	d
GL_COMPRESSED_SLUMINANCE	thirdparty/glfw/src/deps/glad/glad.h	1037;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	1038;"	d
GL_COMPRESSED_SRGB	thirdparty/glfw/src/deps/glad/glad.h	1030;"	d
GL_COMPRESSED_SRGB	thirdparty/opengl/include/GL/glcorearb.h	981;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	thirdparty/opengl/include/GL/glcorearb.h	3892;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	thirdparty/opengl/include/GL/glcorearb.h	3889;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	thirdparty/opengl/include/GL/glcorearb.h	3890;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	thirdparty/opengl/include/GL/glcorearb.h	3891;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	thirdparty/opengl/include/GL/glcorearb.h	3893;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	thirdparty/opengl/include/GL/glcorearb.h	3894;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	thirdparty/opengl/include/GL/glcorearb.h	3881;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	thirdparty/opengl/include/GL/glcorearb.h	3882;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	thirdparty/opengl/include/GL/glcorearb.h	3883;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	thirdparty/opengl/include/GL/glcorearb.h	3884;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	thirdparty/opengl/include/GL/glcorearb.h	3885;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	thirdparty/opengl/include/GL/glcorearb.h	3886;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	thirdparty/opengl/include/GL/glcorearb.h	3887;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	thirdparty/opengl/include/GL/glcorearb.h	3888;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	thirdparty/opengl/include/GL/glcorearb.h	2266;"	d
GL_COMPRESSED_SRGB8_ETC2	thirdparty/opengl/include/GL/glcorearb.h	2262;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	thirdparty/opengl/include/GL/glcorearb.h	2264;"	d
GL_COMPRESSED_SRGB_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	1031;"	d
GL_COMPRESSED_SRGB_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	982;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM	thirdparty/opengl/include/GL/glcorearb.h	2224;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	thirdparty/opengl/include/GL/glcorearb.h	3675;"	d
GL_COMPRESSED_TEXTURE_FORMATS	thirdparty/glfw/src/deps/glad/glad.h	795;"	d
GL_COMPRESSED_TEXTURE_FORMATS	thirdparty/opengl/include/GL/glcorearb.h	541;"	d
GL_COMPUTE_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2274;"	d
GL_COMPUTE_SHADER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2291;"	d
GL_COMPUTE_SHADER_INVOCATIONS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3388;"	d
GL_COMPUTE_SUBROUTINE	thirdparty/opengl/include/GL/glcorearb.h	2448;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	thirdparty/opengl/include/GL/glcorearb.h	2454;"	d
GL_COMPUTE_TEXTURE	thirdparty/opengl/include/GL/glcorearb.h	2387;"	d
GL_COMPUTE_WORK_GROUP_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2286;"	d
GL_CONDITION_SATISFIED	thirdparty/glfw/src/deps/glad/glad.h	1376;"	d
GL_CONDITION_SATISFIED	thirdparty/opengl/include/GL/glcorearb.h	1577;"	d
GL_CONFORMANT_NV	thirdparty/opengl/include/GL/glcorearb.h	5053;"	d
GL_CONIC_CURVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5200;"	d
GL_CONJOINT_NV	thirdparty/opengl/include/GL/glcorearb.h	4700;"	d
GL_CONSERVATIVE_RASTERIZATION_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4584;"	d
GL_CONSERVATIVE_RASTERIZATION_NV	thirdparty/opengl/include/GL/glcorearb.h	4843;"	d
GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV	thirdparty/opengl/include/GL/glcorearb.h	4857;"	d
GL_CONSERVATIVE_RASTER_DILATE_NV	thirdparty/opengl/include/GL/glcorearb.h	4855;"	d
GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV	thirdparty/opengl/include/GL/glcorearb.h	4856;"	d
GL_CONSERVATIVE_RASTER_MODE_NV	thirdparty/opengl/include/GL/glcorearb.h	4866;"	d
GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV	thirdparty/opengl/include/GL/glcorearb.h	4867;"	d
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV	thirdparty/opengl/include/GL/glcorearb.h	4868;"	d
GL_CONSTANT	thirdparty/glfw/src/deps/glad/glad.h	829;"	d
GL_CONSTANT_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	880;"	d
GL_CONSTANT_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	590;"	d
GL_CONSTANT_ATTENUATION	thirdparty/glfw/src/deps/glad/glad.h	611;"	d
GL_CONSTANT_COLOR	thirdparty/glfw/src/deps/glad/glad.h	878;"	d
GL_CONSTANT_COLOR	thirdparty/opengl/include/GL/glcorearb.h	588;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	thirdparty/glfw/src/deps/glad/glad.h	1338;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	thirdparty/glfw/src/internal.h	89;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	thirdparty/opengl/include/GL/glcorearb.h	1539;"	d
GL_CONTEXT_CORE_PROFILE_BIT	thirdparty/glfw/src/deps/glad/glad.h	1337;"	d
GL_CONTEXT_CORE_PROFILE_BIT	thirdparty/glfw/src/internal.h	90;"	d
GL_CONTEXT_CORE_PROFILE_BIT	thirdparty/opengl/include/GL/glcorearb.h	1538;"	d
GL_CONTEXT_FLAGS	thirdparty/glfw/src/deps/glad/glad.h	1052;"	d
GL_CONTEXT_FLAGS	thirdparty/glfw/src/internal.h	85;"	d
GL_CONTEXT_FLAGS	thirdparty/opengl/include/GL/glcorearb.h	1015;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	thirdparty/glfw/src/deps/glad/glad.h	3495;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	thirdparty/glfw/src/internal.h	87;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	thirdparty/opengl/include/GL/glcorearb.h	2328;"	d
GL_CONTEXT_FLAG_DEBUG_BIT_KHR	thirdparty/glfw/src/deps/glad/glad.h	3533;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	thirdparty/glfw/src/deps/glad/glad.h	1055;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	thirdparty/glfw/src/internal.h	86;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	thirdparty/opengl/include/GL/glcorearb.h	1018;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR	thirdparty/glfw/src/internal.h	96;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR	thirdparty/opengl/include/GL/glcorearb.h	3853;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT	thirdparty/opengl/include/GL/glcorearb.h	2671;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	thirdparty/glfw/src/deps/glad/glad.h	3452;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	thirdparty/opengl/include/GL/glcorearb.h	3423;"	d
GL_CONTEXT_LOST	thirdparty/opengl/include/GL/glcorearb.h	2652;"	d
GL_CONTEXT_PROFILE_MASK	thirdparty/glfw/src/deps/glad/glad.h	1358;"	d
GL_CONTEXT_PROFILE_MASK	thirdparty/glfw/src/internal.h	88;"	d
GL_CONTEXT_PROFILE_MASK	thirdparty/opengl/include/GL/glcorearb.h	1559;"	d
GL_CONTEXT_RELEASE_BEHAVIOR	thirdparty/glfw/src/internal.h	94;"	d
GL_CONTEXT_RELEASE_BEHAVIOR	thirdparty/opengl/include/GL/glcorearb.h	2672;"	d
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	thirdparty/glfw/src/internal.h	95;"	d
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	thirdparty/opengl/include/GL/glcorearb.h	2673;"	d
GL_CONTEXT_ROBUST_ACCESS	thirdparty/opengl/include/GL/glcorearb.h	3862;"	d
GL_CONTRAST_NV	thirdparty/opengl/include/GL/glcorearb.h	4701;"	d
GL_CONVEX_HULL_NV	thirdparty/opengl/include/GL/glcorearb.h	5086;"	d
GL_COORD_REPLACE	thirdparty/glfw/src/deps/glad/glad.h	1014;"	d
GL_COPY	thirdparty/glfw/src/deps/glad/glad.h	309;"	d
GL_COPY	thirdparty/opengl/include/GL/glcorearb.h	218;"	d
GL_COPY_INVERTED	thirdparty/glfw/src/deps/glad/glad.h	318;"	d
GL_COPY_INVERTED	thirdparty/opengl/include/GL/glcorearb.h	227;"	d
GL_COPY_PIXEL_TOKEN	thirdparty/glfw/src/deps/glad/glad.h	415;"	d
GL_COPY_READ_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	1302;"	d
GL_COPY_READ_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	1433;"	d
GL_COPY_READ_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	2116;"	d
GL_COPY_WRITE_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	1303;"	d
GL_COPY_WRITE_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	1434;"	d
GL_COPY_WRITE_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	2117;"	d
GL_COUNTER_RANGE_AMD	thirdparty/opengl/include/GL/glcorearb.h	3908;"	d
GL_COUNTER_TYPE_AMD	thirdparty/opengl/include/GL/glcorearb.h	3907;"	d
GL_COUNT_DOWN_NV	thirdparty/opengl/include/GL/glcorearb.h	5084;"	d
GL_COUNT_UP_NV	thirdparty/opengl/include/GL/glcorearb.h	5083;"	d
GL_COVERAGE_MODULATION_NV	thirdparty/opengl/include/GL/glcorearb.h	4919;"	d
GL_COVERAGE_MODULATION_TABLE_NV	thirdparty/opengl/include/GL/glcorearb.h	4913;"	d
GL_COVERAGE_MODULATION_TABLE_SIZE_NV	thirdparty/opengl/include/GL/glcorearb.h	4920;"	d
GL_CUBIC_CURVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5140;"	d
GL_CULL_FACE	thirdparty/glfw/src/deps/glad/glad.h	227;"	d
GL_CULL_FACE	thirdparty/opengl/include/GL/glcorearb.h	150;"	d
GL_CULL_FACE_MODE	thirdparty/glfw/src/deps/glad/glad.h	228;"	d
GL_CULL_FACE_MODE	thirdparty/opengl/include/GL/glcorearb.h	151;"	d
GL_CURRENT_BIT	thirdparty/glfw/src/deps/glad/glad.h	372;"	d
GL_CURRENT_COLOR	thirdparty/glfw/src/deps/glad/glad.h	440;"	d
GL_CURRENT_FOG_COORD	thirdparty/glfw/src/deps/glad/glad.h	921;"	d
GL_CURRENT_FOG_COORDINATE	thirdparty/glfw/src/deps/glad/glad.h	858;"	d
GL_CURRENT_INDEX	thirdparty/glfw/src/deps/glad/glad.h	441;"	d
GL_CURRENT_NORMAL	thirdparty/glfw/src/deps/glad/glad.h	442;"	d
GL_CURRENT_PROGRAM	thirdparty/glfw/src/deps/glad/glad.h	1005;"	d
GL_CURRENT_PROGRAM	thirdparty/opengl/include/GL/glcorearb.h	768;"	d
GL_CURRENT_QUERY	thirdparty/glfw/src/deps/glad/glad.h	885;"	d
GL_CURRENT_QUERY	thirdparty/opengl/include/GL/glcorearb.h	622;"	d
GL_CURRENT_RASTER_COLOR	thirdparty/glfw/src/deps/glad/glad.h	444;"	d
GL_CURRENT_RASTER_DISTANCE	thirdparty/glfw/src/deps/glad/glad.h	449;"	d
GL_CURRENT_RASTER_INDEX	thirdparty/glfw/src/deps/glad/glad.h	445;"	d
GL_CURRENT_RASTER_POSITION	thirdparty/glfw/src/deps/glad/glad.h	447;"	d
GL_CURRENT_RASTER_POSITION_VALID	thirdparty/glfw/src/deps/glad/glad.h	448;"	d
GL_CURRENT_RASTER_SECONDARY_COLOR	thirdparty/glfw/src/deps/glad/glad.h	1032;"	d
GL_CURRENT_RASTER_TEXTURE_COORDS	thirdparty/glfw/src/deps/glad/glad.h	446;"	d
GL_CURRENT_SECONDARY_COLOR	thirdparty/glfw/src/deps/glad/glad.h	864;"	d
GL_CURRENT_TEXTURE_COORDS	thirdparty/glfw/src/deps/glad/glad.h	443;"	d
GL_CURRENT_VERTEX_ATTRIB	thirdparty/glfw/src/deps/glad/glad.h	937;"	d
GL_CURRENT_VERTEX_ATTRIB	thirdparty/opengl/include/GL/glcorearb.h	700;"	d
GL_CW	thirdparty/glfw/src/deps/glad/glad.h	216;"	d
GL_CW	thirdparty/opengl/include/GL/glcorearb.h	139;"	d
GL_DARKEN_KHR	thirdparty/opengl/include/GL/glcorearb.h	3820;"	d
GL_DARKEN_NV	thirdparty/opengl/include/GL/glcorearb.h	4702;"	d
GL_DEBUG_CALLBACK_FUNCTION	thirdparty/glfw/src/deps/glad/glad.h	3461;"	d
GL_DEBUG_CALLBACK_FUNCTION	thirdparty/opengl/include/GL/glcorearb.h	2294;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	thirdparty/opengl/include/GL/glcorearb.h	3046;"	d
GL_DEBUG_CALLBACK_FUNCTION_KHR	thirdparty/glfw/src/deps/glad/glad.h	3498;"	d
GL_DEBUG_CALLBACK_USER_PARAM	thirdparty/glfw/src/deps/glad/glad.h	3462;"	d
GL_DEBUG_CALLBACK_USER_PARAM	thirdparty/opengl/include/GL/glcorearb.h	2295;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	thirdparty/opengl/include/GL/glcorearb.h	3047;"	d
GL_DEBUG_CALLBACK_USER_PARAM_KHR	thirdparty/glfw/src/deps/glad/glad.h	3499;"	d
GL_DEBUG_GROUP_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	3480;"	d
GL_DEBUG_GROUP_STACK_DEPTH	thirdparty/opengl/include/GL/glcorearb.h	2319;"	d
GL_DEBUG_GROUP_STACK_DEPTH_KHR	thirdparty/glfw/src/deps/glad/glad.h	3517;"	d
GL_DEBUG_LOGGED_MESSAGES	thirdparty/glfw/src/deps/glad/glad.h	3490;"	d
GL_DEBUG_LOGGED_MESSAGES	thirdparty/opengl/include/GL/glcorearb.h	2310;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	thirdparty/opengl/include/GL/glcorearb.h	3062;"	d
GL_DEBUG_LOGGED_MESSAGES_KHR	thirdparty/glfw/src/deps/glad/glad.h	3528;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	3460;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	2293;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	thirdparty/opengl/include/GL/glcorearb.h	3045;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR	thirdparty/glfw/src/deps/glad/glad.h	3497;"	d
GL_DEBUG_OUTPUT	thirdparty/glfw/src/deps/glad/glad.h	3494;"	d
GL_DEBUG_OUTPUT	thirdparty/opengl/include/GL/glcorearb.h	2327;"	d
GL_DEBUG_OUTPUT_KHR	thirdparty/glfw/src/deps/glad/glad.h	3532;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	thirdparty/glfw/src/deps/glad/glad.h	3459;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	thirdparty/opengl/include/GL/glcorearb.h	2292;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3044;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR	thirdparty/glfw/src/deps/glad/glad.h	3496;"	d
GL_DEBUG_SEVERITY_HIGH	thirdparty/glfw/src/deps/glad/glad.h	3491;"	d
GL_DEBUG_SEVERITY_HIGH	thirdparty/opengl/include/GL/glcorearb.h	2311;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	thirdparty/opengl/include/GL/glcorearb.h	3063;"	d
GL_DEBUG_SEVERITY_HIGH_KHR	thirdparty/glfw/src/deps/glad/glad.h	3529;"	d
GL_DEBUG_SEVERITY_LOW	thirdparty/glfw/src/deps/glad/glad.h	3493;"	d
GL_DEBUG_SEVERITY_LOW	thirdparty/opengl/include/GL/glcorearb.h	2313;"	d
GL_DEBUG_SEVERITY_LOW_ARB	thirdparty/opengl/include/GL/glcorearb.h	3065;"	d
GL_DEBUG_SEVERITY_LOW_KHR	thirdparty/glfw/src/deps/glad/glad.h	3531;"	d
GL_DEBUG_SEVERITY_MEDIUM	thirdparty/glfw/src/deps/glad/glad.h	3492;"	d
GL_DEBUG_SEVERITY_MEDIUM	thirdparty/opengl/include/GL/glcorearb.h	2312;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	thirdparty/opengl/include/GL/glcorearb.h	3064;"	d
GL_DEBUG_SEVERITY_MEDIUM_KHR	thirdparty/glfw/src/deps/glad/glad.h	3530;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	thirdparty/glfw/src/deps/glad/glad.h	3478;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	thirdparty/opengl/include/GL/glcorearb.h	2317;"	d
GL_DEBUG_SEVERITY_NOTIFICATION_KHR	thirdparty/glfw/src/deps/glad/glad.h	3515;"	d
GL_DEBUG_SOURCE_API	thirdparty/glfw/src/deps/glad/glad.h	3463;"	d
GL_DEBUG_SOURCE_API	thirdparty/opengl/include/GL/glcorearb.h	2296;"	d
GL_DEBUG_SOURCE_API_ARB	thirdparty/opengl/include/GL/glcorearb.h	3048;"	d
GL_DEBUG_SOURCE_API_KHR	thirdparty/glfw/src/deps/glad/glad.h	3500;"	d
GL_DEBUG_SOURCE_APPLICATION	thirdparty/glfw/src/deps/glad/glad.h	3467;"	d
GL_DEBUG_SOURCE_APPLICATION	thirdparty/opengl/include/GL/glcorearb.h	2300;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	thirdparty/opengl/include/GL/glcorearb.h	3052;"	d
GL_DEBUG_SOURCE_APPLICATION_KHR	thirdparty/glfw/src/deps/glad/glad.h	3504;"	d
GL_DEBUG_SOURCE_OTHER	thirdparty/glfw/src/deps/glad/glad.h	3468;"	d
GL_DEBUG_SOURCE_OTHER	thirdparty/opengl/include/GL/glcorearb.h	2301;"	d
GL_DEBUG_SOURCE_OTHER_ARB	thirdparty/opengl/include/GL/glcorearb.h	3053;"	d
GL_DEBUG_SOURCE_OTHER_KHR	thirdparty/glfw/src/deps/glad/glad.h	3505;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	thirdparty/glfw/src/deps/glad/glad.h	3465;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	thirdparty/opengl/include/GL/glcorearb.h	2298;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	thirdparty/opengl/include/GL/glcorearb.h	3050;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_KHR	thirdparty/glfw/src/deps/glad/glad.h	3502;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	thirdparty/glfw/src/deps/glad/glad.h	3466;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	thirdparty/opengl/include/GL/glcorearb.h	2299;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3051;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_KHR	thirdparty/glfw/src/deps/glad/glad.h	3503;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	thirdparty/glfw/src/deps/glad/glad.h	3464;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	thirdparty/opengl/include/GL/glcorearb.h	2297;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	thirdparty/opengl/include/GL/glcorearb.h	3049;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR	thirdparty/glfw/src/deps/glad/glad.h	3501;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	thirdparty/glfw/src/deps/glad/glad.h	3470;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	thirdparty/opengl/include/GL/glcorearb.h	2303;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	thirdparty/opengl/include/GL/glcorearb.h	3055;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR	thirdparty/glfw/src/deps/glad/glad.h	3507;"	d
GL_DEBUG_TYPE_ERROR	thirdparty/glfw/src/deps/glad/glad.h	3469;"	d
GL_DEBUG_TYPE_ERROR	thirdparty/opengl/include/GL/glcorearb.h	2302;"	d
GL_DEBUG_TYPE_ERROR_ARB	thirdparty/opengl/include/GL/glcorearb.h	3054;"	d
GL_DEBUG_TYPE_ERROR_KHR	thirdparty/glfw/src/deps/glad/glad.h	3506;"	d
GL_DEBUG_TYPE_MARKER	thirdparty/glfw/src/deps/glad/glad.h	3475;"	d
GL_DEBUG_TYPE_MARKER	thirdparty/opengl/include/GL/glcorearb.h	2314;"	d
GL_DEBUG_TYPE_MARKER_KHR	thirdparty/glfw/src/deps/glad/glad.h	3512;"	d
GL_DEBUG_TYPE_OTHER	thirdparty/glfw/src/deps/glad/glad.h	3474;"	d
GL_DEBUG_TYPE_OTHER	thirdparty/opengl/include/GL/glcorearb.h	2307;"	d
GL_DEBUG_TYPE_OTHER_ARB	thirdparty/opengl/include/GL/glcorearb.h	3059;"	d
GL_DEBUG_TYPE_OTHER_KHR	thirdparty/glfw/src/deps/glad/glad.h	3511;"	d
GL_DEBUG_TYPE_PERFORMANCE	thirdparty/glfw/src/deps/glad/glad.h	3473;"	d
GL_DEBUG_TYPE_PERFORMANCE	thirdparty/opengl/include/GL/glcorearb.h	2306;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3058;"	d
GL_DEBUG_TYPE_PERFORMANCE_KHR	thirdparty/glfw/src/deps/glad/glad.h	3510;"	d
GL_DEBUG_TYPE_POP_GROUP	thirdparty/glfw/src/deps/glad/glad.h	3477;"	d
GL_DEBUG_TYPE_POP_GROUP	thirdparty/opengl/include/GL/glcorearb.h	2316;"	d
GL_DEBUG_TYPE_POP_GROUP_KHR	thirdparty/glfw/src/deps/glad/glad.h	3514;"	d
GL_DEBUG_TYPE_PORTABILITY	thirdparty/glfw/src/deps/glad/glad.h	3472;"	d
GL_DEBUG_TYPE_PORTABILITY	thirdparty/opengl/include/GL/glcorearb.h	2305;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3057;"	d
GL_DEBUG_TYPE_PORTABILITY_KHR	thirdparty/glfw/src/deps/glad/glad.h	3509;"	d
GL_DEBUG_TYPE_PUSH_GROUP	thirdparty/glfw/src/deps/glad/glad.h	3476;"	d
GL_DEBUG_TYPE_PUSH_GROUP	thirdparty/opengl/include/GL/glcorearb.h	2315;"	d
GL_DEBUG_TYPE_PUSH_GROUP_KHR	thirdparty/glfw/src/deps/glad/glad.h	3513;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	thirdparty/glfw/src/deps/glad/glad.h	3471;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	thirdparty/opengl/include/GL/glcorearb.h	2304;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	thirdparty/opengl/include/GL/glcorearb.h	3056;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR	thirdparty/glfw/src/deps/glad/glad.h	3508;"	d
GL_DECAL	thirdparty/glfw/src/deps/glad/glad.h	639;"	d
GL_DECODE_EXT	thirdparty/opengl/include/GL/glcorearb.h	4564;"	d
GL_DECR	thirdparty/glfw/src/deps/glad/glad.h	340;"	d
GL_DECR	thirdparty/opengl/include/GL/glcorearb.h	249;"	d
GL_DECR_WRAP	thirdparty/glfw/src/deps/glad/glad.h	846;"	d
GL_DECR_WRAP	thirdparty/opengl/include/GL/glcorearb.h	579;"	d
GL_DELETE_STATUS	thirdparty/glfw/src/deps/glad/glad.h	992;"	d
GL_DELETE_STATUS	thirdparty/opengl/include/GL/glcorearb.h	755;"	d
GL_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	324;"	d
GL_DEPTH	thirdparty/opengl/include/GL/glcorearb.h	233;"	d
GL_DEPTH24_STENCIL8	thirdparty/glfw/src/deps/glad/glad.h	1157;"	d
GL_DEPTH24_STENCIL8	thirdparty/opengl/include/GL/glcorearb.h	1120;"	d
GL_DEPTH32F_STENCIL8	thirdparty/glfw/src/deps/glad/glad.h	1140;"	d
GL_DEPTH32F_STENCIL8	thirdparty/opengl/include/GL/glcorearb.h	1103;"	d
GL_DEPTH_ATTACHMENT	thirdparty/glfw/src/deps/glad/glad.h	1216;"	d
GL_DEPTH_ATTACHMENT	thirdparty/opengl/include/GL/glcorearb.h	1179;"	d
GL_DEPTH_BIAS	thirdparty/glfw/src/deps/glad/glad.h	529;"	d
GL_DEPTH_BITS	thirdparty/glfw/src/deps/glad/glad.h	545;"	d
GL_DEPTH_BUFFER_BIT	thirdparty/glfw/src/deps/glad/glad.h	169;"	d
GL_DEPTH_BUFFER_BIT	thirdparty/opengl/include/GL/glcorearb.h	92;"	d
GL_DEPTH_CLAMP	thirdparty/glfw/src/deps/glad/glad.h	1359;"	d
GL_DEPTH_CLAMP	thirdparty/opengl/include/GL/glcorearb.h	1560;"	d
GL_DEPTH_CLEAR_VALUE	thirdparty/glfw/src/deps/glad/glad.h	233;"	d
GL_DEPTH_CLEAR_VALUE	thirdparty/opengl/include/GL/glcorearb.h	156;"	d
GL_DEPTH_COMPONENT	thirdparty/glfw/src/deps/glad/glad.h	327;"	d
GL_DEPTH_COMPONENT	thirdparty/opengl/include/GL/glcorearb.h	236;"	d
GL_DEPTH_COMPONENT16	thirdparty/glfw/src/deps/glad/glad.h	839;"	d
GL_DEPTH_COMPONENT16	thirdparty/opengl/include/GL/glcorearb.h	572;"	d
GL_DEPTH_COMPONENT24	thirdparty/glfw/src/deps/glad/glad.h	840;"	d
GL_DEPTH_COMPONENT24	thirdparty/opengl/include/GL/glcorearb.h	573;"	d
GL_DEPTH_COMPONENT32	thirdparty/glfw/src/deps/glad/glad.h	841;"	d
GL_DEPTH_COMPONENT32	thirdparty/opengl/include/GL/glcorearb.h	574;"	d
GL_DEPTH_COMPONENT32F	thirdparty/glfw/src/deps/glad/glad.h	1139;"	d
GL_DEPTH_COMPONENT32F	thirdparty/opengl/include/GL/glcorearb.h	1102;"	d
GL_DEPTH_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	2360;"	d
GL_DEPTH_FUNC	thirdparty/glfw/src/deps/glad/glad.h	234;"	d
GL_DEPTH_FUNC	thirdparty/opengl/include/GL/glcorearb.h	157;"	d
GL_DEPTH_RANGE	thirdparty/glfw/src/deps/glad/glad.h	230;"	d
GL_DEPTH_RANGE	thirdparty/opengl/include/GL/glcorearb.h	153;"	d
GL_DEPTH_RENDERABLE	thirdparty/opengl/include/GL/glcorearb.h	2363;"	d
GL_DEPTH_SAMPLES_NV	thirdparty/opengl/include/GL/glcorearb.h	4915;"	d
GL_DEPTH_SCALE	thirdparty/glfw/src/deps/glad/glad.h	528;"	d
GL_DEPTH_STENCIL	thirdparty/glfw/src/deps/glad/glad.h	1155;"	d
GL_DEPTH_STENCIL	thirdparty/opengl/include/GL/glcorearb.h	1118;"	d
GL_DEPTH_STENCIL_ATTACHMENT	thirdparty/glfw/src/deps/glad/glad.h	1153;"	d
GL_DEPTH_STENCIL_ATTACHMENT	thirdparty/opengl/include/GL/glcorearb.h	1116;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	thirdparty/opengl/include/GL/glcorearb.h	2500;"	d
GL_DEPTH_TEST	thirdparty/glfw/src/deps/glad/glad.h	231;"	d
GL_DEPTH_TEST	thirdparty/opengl/include/GL/glcorearb.h	154;"	d
GL_DEPTH_TEXTURE_MODE	thirdparty/glfw/src/deps/glad/glad.h	871;"	d
GL_DEPTH_WRITEMASK	thirdparty/glfw/src/deps/glad/glad.h	232;"	d
GL_DEPTH_WRITEMASK	thirdparty/opengl/include/GL/glcorearb.h	155;"	d
GL_DIFFERENCE_KHR	thirdparty/opengl/include/GL/glcorearb.h	3826;"	d
GL_DIFFERENCE_NV	thirdparty/opengl/include/GL/glcorearb.h	4703;"	d
GL_DIFFUSE	thirdparty/glfw/src/deps/glad/glad.h	605;"	d
GL_DISJOINT_NV	thirdparty/opengl/include/GL/glcorearb.h	4704;"	d
GL_DISPATCH_INDIRECT_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	2289;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	2290;"	d
GL_DISPLAY_LIST	thirdparty/glfw/src/deps/glad/glad.h	3536;"	d
GL_DITHER	thirdparty/glfw/src/deps/glad/glad.h	245;"	d
GL_DITHER	thirdparty/opengl/include/GL/glcorearb.h	168;"	d
GL_DOMAIN	thirdparty/glfw/src/deps/glad/glad.h	421;"	d
GL_DONT_CARE	thirdparty/glfw/src/deps/glad/glad.h	293;"	d
GL_DONT_CARE	thirdparty/opengl/include/GL/glcorearb.h	203;"	d
GL_DOT3_RGB	thirdparty/glfw/src/deps/glad/glad.h	832;"	d
GL_DOT3_RGBA	thirdparty/glfw/src/deps/glad/glad.h	833;"	d
GL_DOUBLE	thirdparty/glfw/src/deps/glad/glad.h	303;"	d
GL_DOUBLE	thirdparty/opengl/include/GL/glcorearb.h	382;"	d
GL_DOUBLEBUFFER	thirdparty/glfw/src/deps/glad/glad.h	257;"	d
GL_DOUBLEBUFFER	thirdparty/opengl/include/GL/glcorearb.h	179;"	d
GL_DOUBLE_MAT2	thirdparty/opengl/include/GL/glcorearb.h	1746;"	d
GL_DOUBLE_MAT2x3	thirdparty/opengl/include/GL/glcorearb.h	1749;"	d
GL_DOUBLE_MAT2x4	thirdparty/opengl/include/GL/glcorearb.h	1750;"	d
GL_DOUBLE_MAT3	thirdparty/opengl/include/GL/glcorearb.h	1747;"	d
GL_DOUBLE_MAT3x2	thirdparty/opengl/include/GL/glcorearb.h	1751;"	d
GL_DOUBLE_MAT3x4	thirdparty/opengl/include/GL/glcorearb.h	1752;"	d
GL_DOUBLE_MAT4	thirdparty/opengl/include/GL/glcorearb.h	1748;"	d
GL_DOUBLE_MAT4x2	thirdparty/opengl/include/GL/glcorearb.h	1753;"	d
GL_DOUBLE_MAT4x3	thirdparty/opengl/include/GL/glcorearb.h	1754;"	d
GL_DOUBLE_VEC2	thirdparty/opengl/include/GL/glcorearb.h	1743;"	d
GL_DOUBLE_VEC3	thirdparty/opengl/include/GL/glcorearb.h	1744;"	d
GL_DOUBLE_VEC4	thirdparty/opengl/include/GL/glcorearb.h	1745;"	d
GL_DRAW_ARRAYS_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4773;"	d
GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4777;"	d
GL_DRAW_ARRAYS_STRIP_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4775;"	d
GL_DRAW_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	251;"	d
GL_DRAW_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	173;"	d
GL_DRAW_BUFFER0	thirdparty/glfw/src/deps/glad/glad.h	945;"	d
GL_DRAW_BUFFER0	thirdparty/opengl/include/GL/glcorearb.h	708;"	d
GL_DRAW_BUFFER1	thirdparty/glfw/src/deps/glad/glad.h	946;"	d
GL_DRAW_BUFFER1	thirdparty/opengl/include/GL/glcorearb.h	709;"	d
GL_DRAW_BUFFER10	thirdparty/glfw/src/deps/glad/glad.h	955;"	d
GL_DRAW_BUFFER10	thirdparty/opengl/include/GL/glcorearb.h	718;"	d
GL_DRAW_BUFFER11	thirdparty/glfw/src/deps/glad/glad.h	956;"	d
GL_DRAW_BUFFER11	thirdparty/opengl/include/GL/glcorearb.h	719;"	d
GL_DRAW_BUFFER12	thirdparty/glfw/src/deps/glad/glad.h	957;"	d
GL_DRAW_BUFFER12	thirdparty/opengl/include/GL/glcorearb.h	720;"	d
GL_DRAW_BUFFER13	thirdparty/glfw/src/deps/glad/glad.h	958;"	d
GL_DRAW_BUFFER13	thirdparty/opengl/include/GL/glcorearb.h	721;"	d
GL_DRAW_BUFFER14	thirdparty/glfw/src/deps/glad/glad.h	959;"	d
GL_DRAW_BUFFER14	thirdparty/opengl/include/GL/glcorearb.h	722;"	d
GL_DRAW_BUFFER15	thirdparty/glfw/src/deps/glad/glad.h	960;"	d
GL_DRAW_BUFFER15	thirdparty/opengl/include/GL/glcorearb.h	723;"	d
GL_DRAW_BUFFER2	thirdparty/glfw/src/deps/glad/glad.h	947;"	d
GL_DRAW_BUFFER2	thirdparty/opengl/include/GL/glcorearb.h	710;"	d
GL_DRAW_BUFFER3	thirdparty/glfw/src/deps/glad/glad.h	948;"	d
GL_DRAW_BUFFER3	thirdparty/opengl/include/GL/glcorearb.h	711;"	d
GL_DRAW_BUFFER4	thirdparty/glfw/src/deps/glad/glad.h	949;"	d
GL_DRAW_BUFFER4	thirdparty/opengl/include/GL/glcorearb.h	712;"	d
GL_DRAW_BUFFER5	thirdparty/glfw/src/deps/glad/glad.h	950;"	d
GL_DRAW_BUFFER5	thirdparty/opengl/include/GL/glcorearb.h	713;"	d
GL_DRAW_BUFFER6	thirdparty/glfw/src/deps/glad/glad.h	951;"	d
GL_DRAW_BUFFER6	thirdparty/opengl/include/GL/glcorearb.h	714;"	d
GL_DRAW_BUFFER7	thirdparty/glfw/src/deps/glad/glad.h	952;"	d
GL_DRAW_BUFFER7	thirdparty/opengl/include/GL/glcorearb.h	715;"	d
GL_DRAW_BUFFER8	thirdparty/glfw/src/deps/glad/glad.h	953;"	d
GL_DRAW_BUFFER8	thirdparty/opengl/include/GL/glcorearb.h	716;"	d
GL_DRAW_BUFFER9	thirdparty/glfw/src/deps/glad/glad.h	954;"	d
GL_DRAW_BUFFER9	thirdparty/opengl/include/GL/glcorearb.h	717;"	d
GL_DRAW_ELEMENTS_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4772;"	d
GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4776;"	d
GL_DRAW_ELEMENTS_STRIP_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4774;"	d
GL_DRAW_FRAMEBUFFER	thirdparty/glfw/src/deps/glad/glad.h	1169;"	d
GL_DRAW_FRAMEBUFFER	thirdparty/opengl/include/GL/glcorearb.h	1132;"	d
GL_DRAW_FRAMEBUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	1166;"	d
GL_DRAW_FRAMEBUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	1129;"	d
GL_DRAW_INDIRECT_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5523;"	d
GL_DRAW_INDIRECT_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	1735;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	1736;"	d
GL_DRAW_INDIRECT_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5524;"	d
GL_DRAW_INDIRECT_UNIFIED_NV	thirdparty/opengl/include/GL/glcorearb.h	5522;"	d
GL_DRAW_PIXEL_TOKEN	thirdparty/glfw/src/deps/glad/glad.h	414;"	d
GL_DST_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	196;"	d
GL_DST_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	119;"	d
GL_DST_ATOP_NV	thirdparty/opengl/include/GL/glcorearb.h	4705;"	d
GL_DST_COLOR	thirdparty/glfw/src/deps/glad/glad.h	198;"	d
GL_DST_COLOR	thirdparty/opengl/include/GL/glcorearb.h	121;"	d
GL_DST_IN_NV	thirdparty/opengl/include/GL/glcorearb.h	4706;"	d
GL_DST_NV	thirdparty/opengl/include/GL/glcorearb.h	4707;"	d
GL_DST_OUT_NV	thirdparty/opengl/include/GL/glcorearb.h	4708;"	d
GL_DST_OVER_NV	thirdparty/opengl/include/GL/glcorearb.h	4709;"	d
GL_DUP_FIRST_CUBIC_CURVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5155;"	d
GL_DUP_LAST_CUBIC_CURVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5156;"	d
GL_DYNAMIC_COPY	thirdparty/glfw/src/deps/glad/glad.h	907;"	d
GL_DYNAMIC_COPY	thirdparty/opengl/include/GL/glcorearb.h	644;"	d
GL_DYNAMIC_DRAW	thirdparty/glfw/src/deps/glad/glad.h	905;"	d
GL_DYNAMIC_DRAW	thirdparty/opengl/include/GL/glcorearb.h	642;"	d
GL_DYNAMIC_READ	thirdparty/glfw/src/deps/glad/glad.h	906;"	d
GL_DYNAMIC_READ	thirdparty/opengl/include/GL/glcorearb.h	643;"	d
GL_DYNAMIC_STORAGE_BIT	thirdparty/opengl/include/GL/glcorearb.h	2614;"	d
GL_EDGE_FLAG	thirdparty/glfw/src/deps/glad/glad.h	459;"	d
GL_EDGE_FLAG_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	583;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5508;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	915;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5518;"	d
GL_EDGE_FLAG_ARRAY_POINTER	thirdparty/glfw/src/deps/glad/glad.h	437;"	d
GL_EDGE_FLAG_ARRAY_STRIDE	thirdparty/glfw/src/deps/glad/glad.h	597;"	d
GL_EFFECTIVE_RASTER_SAMPLES_EXT	thirdparty/opengl/include/GL/glcorearb.h	4525;"	d
GL_ELEMENT_ADDRESS_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4778;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5511;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2160;"	d
GL_ELEMENT_ARRAY_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	889;"	d
GL_ELEMENT_ARRAY_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	626;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	891;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	628;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5521;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	thirdparty/opengl/include/GL/glcorearb.h	5501;"	d
GL_EMISSION	thirdparty/glfw/src/deps/glad/glad.h	619;"	d
GL_ENABLE_BIT	thirdparty/glfw/src/deps/glad/glad.h	383;"	d
GL_EQUAL	thirdparty/glfw/src/deps/glad/glad.h	184;"	d
GL_EQUAL	thirdparty/opengl/include/GL/glcorearb.h	107;"	d
GL_EQUIV	thirdparty/glfw/src/deps/glad/glad.h	315;"	d
GL_EQUIV	thirdparty/opengl/include/GL/glcorearb.h	224;"	d
GL_EVAL_BIT	thirdparty/glfw/src/deps/glad/glad.h	385;"	d
GL_EXCLUSION_KHR	thirdparty/opengl/include/GL/glcorearb.h	3827;"	d
GL_EXCLUSION_NV	thirdparty/opengl/include/GL/glcorearb.h	4710;"	d
GL_EXCLUSIVE_EXT	thirdparty/opengl/include/GL/glcorearb.h	4571;"	d
GL_EXP	thirdparty/glfw/src/deps/glad/glad.h	417;"	d
GL_EXP2	thirdparty/glfw/src/deps/glad/glad.h	418;"	d
GL_EXTENSIONS	thirdparty/glfw/src/deps/glad/glad.h	344;"	d
GL_EXTENSIONS	thirdparty/glfw/src/internal.h	83;"	d
GL_EXTENSIONS	thirdparty/opengl/include/GL/glcorearb.h	253;"	d
GL_EXT_debug_label	thirdparty/opengl/include/GL/glcorearb.h	3949;"	d
GL_EXT_debug_marker	thirdparty/opengl/include/GL/glcorearb.h	3965;"	d
GL_EXT_direct_state_access	thirdparty/opengl/include/GL/glcorearb.h	3977;"	d
GL_EXT_draw_instanced	thirdparty/opengl/include/GL/glcorearb.h	4496;"	d
GL_EXT_polygon_offset_clamp	thirdparty/opengl/include/GL/glcorearb.h	4506;"	d
GL_EXT_post_depth_coverage	thirdparty/opengl/include/GL/glcorearb.h	4515;"	d
GL_EXT_raster_multisample	thirdparty/opengl/include/GL/glcorearb.h	4519;"	d
GL_EXT_separate_shader_objects	thirdparty/opengl/include/GL/glcorearb.h	4533;"	d
GL_EXT_shader_integer_mix	thirdparty/opengl/include/GL/glcorearb.h	4546;"	d
GL_EXT_texture_compression_s3tc	thirdparty/opengl/include/GL/glcorearb.h	4550;"	d
GL_EXT_texture_filter_minmax	thirdparty/opengl/include/GL/glcorearb.h	4558;"	d
GL_EXT_texture_sRGB_decode	thirdparty/opengl/include/GL/glcorearb.h	4562;"	d
GL_EXT_window_rectangles	thirdparty/opengl/include/GL/glcorearb.h	4569;"	d
GL_EYE_LINEAR	thirdparty/glfw/src/deps/glad/glad.h	643;"	d
GL_EYE_PLANE	thirdparty/glfw/src/deps/glad/glad.h	648;"	d
GL_FALSE	thirdparty/glfw/src/deps/glad/glad.h	172;"	d
GL_FALSE	thirdparty/opengl/include/GL/glcorearb.h	95;"	d
GL_FASTEST	thirdparty/glfw/src/deps/glad/glad.h	294;"	d
GL_FASTEST	thirdparty/opengl/include/GL/glcorearb.h	204;"	d
GL_FEEDBACK	thirdparty/glfw/src/deps/glad/glad.h	630;"	d
GL_FEEDBACK_BUFFER_POINTER	thirdparty/glfw/src/deps/glad/glad.h	438;"	d
GL_FEEDBACK_BUFFER_SIZE	thirdparty/glfw/src/deps/glad/glad.h	575;"	d
GL_FEEDBACK_BUFFER_TYPE	thirdparty/glfw/src/deps/glad/glad.h	576;"	d
GL_FILE_NAME_NV	thirdparty/opengl/include/GL/glcorearb.h	5066;"	d
GL_FILL	thirdparty/glfw/src/deps/glad/glad.h	336;"	d
GL_FILL	thirdparty/opengl/include/GL/glcorearb.h	245;"	d
GL_FILL_RECTANGLE_NV	thirdparty/opengl/include/GL/glcorearb.h	4894;"	d
GL_FILTER	thirdparty/opengl/include/GL/glcorearb.h	2381;"	d
GL_FIRST_TO_REST_NV	thirdparty/opengl/include/GL/glcorearb.h	5116;"	d
GL_FIRST_VERTEX_CONVENTION	thirdparty/glfw/src/deps/glad/glad.h	1361;"	d
GL_FIRST_VERTEX_CONVENTION	thirdparty/opengl/include/GL/glcorearb.h	1562;"	d
GL_FIXED	thirdparty/opengl/include/GL/glcorearb.h	1899;"	d
GL_FIXED_ONLY	thirdparty/glfw/src/deps/glad/glad.h	1065;"	d
GL_FIXED_ONLY	thirdparty/opengl/include/GL/glcorearb.h	1028;"	d
GL_FLAT	thirdparty/glfw/src/deps/glad/glad.h	632;"	d
GL_FLOAT	thirdparty/glfw/src/deps/glad/glad.h	302;"	d
GL_FLOAT	thirdparty/opengl/include/GL/glcorearb.h	212;"	d
GL_FLOAT16_NV	thirdparty/opengl/include/GL/glcorearb.h	4974;"	d
GL_FLOAT16_VEC2_NV	thirdparty/opengl/include/GL/glcorearb.h	4975;"	d
GL_FLOAT16_VEC3_NV	thirdparty/opengl/include/GL/glcorearb.h	4976;"	d
GL_FLOAT16_VEC4_NV	thirdparty/opengl/include/GL/glcorearb.h	4977;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	thirdparty/glfw/src/deps/glad/glad.h	1141;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	thirdparty/opengl/include/GL/glcorearb.h	1104;"	d
GL_FLOAT_MAT2	thirdparty/glfw/src/deps/glad/glad.h	983;"	d
GL_FLOAT_MAT2	thirdparty/opengl/include/GL/glcorearb.h	746;"	d
GL_FLOAT_MAT2x3	thirdparty/glfw/src/deps/glad/glad.h	1020;"	d
GL_FLOAT_MAT2x3	thirdparty/opengl/include/GL/glcorearb.h	971;"	d
GL_FLOAT_MAT2x4	thirdparty/glfw/src/deps/glad/glad.h	1021;"	d
GL_FLOAT_MAT2x4	thirdparty/opengl/include/GL/glcorearb.h	972;"	d
GL_FLOAT_MAT3	thirdparty/glfw/src/deps/glad/glad.h	984;"	d
GL_FLOAT_MAT3	thirdparty/opengl/include/GL/glcorearb.h	747;"	d
GL_FLOAT_MAT3x2	thirdparty/glfw/src/deps/glad/glad.h	1022;"	d
GL_FLOAT_MAT3x2	thirdparty/opengl/include/GL/glcorearb.h	973;"	d
GL_FLOAT_MAT3x4	thirdparty/glfw/src/deps/glad/glad.h	1023;"	d
GL_FLOAT_MAT3x4	thirdparty/opengl/include/GL/glcorearb.h	974;"	d
GL_FLOAT_MAT4	thirdparty/glfw/src/deps/glad/glad.h	985;"	d
GL_FLOAT_MAT4	thirdparty/opengl/include/GL/glcorearb.h	748;"	d
GL_FLOAT_MAT4x2	thirdparty/glfw/src/deps/glad/glad.h	1024;"	d
GL_FLOAT_MAT4x2	thirdparty/opengl/include/GL/glcorearb.h	975;"	d
GL_FLOAT_MAT4x3	thirdparty/glfw/src/deps/glad/glad.h	1025;"	d
GL_FLOAT_MAT4x3	thirdparty/opengl/include/GL/glcorearb.h	976;"	d
GL_FLOAT_VEC2	thirdparty/glfw/src/deps/glad/glad.h	973;"	d
GL_FLOAT_VEC2	thirdparty/opengl/include/GL/glcorearb.h	736;"	d
GL_FLOAT_VEC3	thirdparty/glfw/src/deps/glad/glad.h	974;"	d
GL_FLOAT_VEC3	thirdparty/opengl/include/GL/glcorearb.h	737;"	d
GL_FLOAT_VEC4	thirdparty/glfw/src/deps/glad/glad.h	975;"	d
GL_FLOAT_VEC4	thirdparty/opengl/include/GL/glcorearb.h	738;"	d
GL_FOG	thirdparty/glfw/src/deps/glad/glad.h	468;"	d
GL_FOG_BIT	thirdparty/glfw/src/deps/glad/glad.h	379;"	d
GL_FOG_COLOR	thirdparty/glfw/src/deps/glad/glad.h	474;"	d
GL_FOG_COORD	thirdparty/glfw/src/deps/glad/glad.h	920;"	d
GL_FOG_COORDINATE	thirdparty/glfw/src/deps/glad/glad.h	856;"	d
GL_FOG_COORDINATE_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	862;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	917;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	thirdparty/glfw/src/deps/glad/glad.h	861;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	thirdparty/glfw/src/deps/glad/glad.h	860;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	thirdparty/glfw/src/deps/glad/glad.h	859;"	d
GL_FOG_COORDINATE_SOURCE	thirdparty/glfw/src/deps/glad/glad.h	855;"	d
GL_FOG_COORD_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	925;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5510;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	926;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5520;"	d
GL_FOG_COORD_ARRAY_POINTER	thirdparty/glfw/src/deps/glad/glad.h	924;"	d
GL_FOG_COORD_ARRAY_STRIDE	thirdparty/glfw/src/deps/glad/glad.h	923;"	d
GL_FOG_COORD_ARRAY_TYPE	thirdparty/glfw/src/deps/glad/glad.h	922;"	d
GL_FOG_COORD_SRC	thirdparty/glfw/src/deps/glad/glad.h	919;"	d
GL_FOG_DENSITY	thirdparty/glfw/src/deps/glad/glad.h	470;"	d
GL_FOG_END	thirdparty/glfw/src/deps/glad/glad.h	472;"	d
GL_FOG_HINT	thirdparty/glfw/src/deps/glad/glad.h	499;"	d
GL_FOG_INDEX	thirdparty/glfw/src/deps/glad/glad.h	469;"	d
GL_FOG_MODE	thirdparty/glfw/src/deps/glad/glad.h	473;"	d
GL_FOG_START	thirdparty/glfw/src/deps/glad/glad.h	471;"	d
GL_FONT_ASCENDER_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5179;"	d
GL_FONT_DESCENDER_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5180;"	d
GL_FONT_GLYPHS_AVAILABLE_NV	thirdparty/opengl/include/GL/glcorearb.h	5196;"	d
GL_FONT_HAS_KERNING_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5186;"	d
GL_FONT_HEIGHT_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5181;"	d
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5183;"	d
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5182;"	d
GL_FONT_NUM_GLYPH_INDICES_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5202;"	d
GL_FONT_TARGET_UNAVAILABLE_NV	thirdparty/opengl/include/GL/glcorearb.h	5197;"	d
GL_FONT_UNAVAILABLE_NV	thirdparty/opengl/include/GL/glcorearb.h	5198;"	d
GL_FONT_UNDERLINE_POSITION_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5184;"	d
GL_FONT_UNDERLINE_THICKNESS_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5185;"	d
GL_FONT_UNINTELLIGIBLE_NV	thirdparty/opengl/include/GL/glcorearb.h	5199;"	d
GL_FONT_UNITS_PER_EM_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5178;"	d
GL_FONT_X_MAX_BOUNDS_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5176;"	d
GL_FONT_X_MIN_BOUNDS_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5174;"	d
GL_FONT_Y_MAX_BOUNDS_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5177;"	d
GL_FONT_Y_MIN_BOUNDS_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5175;"	d
GL_FRACTIONAL_EVEN	thirdparty/opengl/include/GL/glcorearb.h	1775;"	d
GL_FRACTIONAL_ODD	thirdparty/opengl/include/GL/glcorearb.h	1774;"	d
GL_FRAGMENT_COVERAGE_COLOR_NV	thirdparty/opengl/include/GL/glcorearb.h	4900;"	d
GL_FRAGMENT_COVERAGE_TO_COLOR_NV	thirdparty/opengl/include/GL/glcorearb.h	4899;"	d
GL_FRAGMENT_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	857;"	d
GL_FRAGMENT_INPUT_NV	thirdparty/opengl/include/GL/glcorearb.h	5214;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	thirdparty/opengl/include/GL/glcorearb.h	1741;"	d
GL_FRAGMENT_SHADER	thirdparty/glfw/src/deps/glad/glad.h	965;"	d
GL_FRAGMENT_SHADER	thirdparty/opengl/include/GL/glcorearb.h	728;"	d
GL_FRAGMENT_SHADER_BIT	thirdparty/opengl/include/GL/glcorearb.h	1920;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	thirdparty/glfw/src/deps/glad/glad.h	1003;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	thirdparty/opengl/include/GL/glcorearb.h	766;"	d
GL_FRAGMENT_SHADER_INVOCATIONS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3387;"	d
GL_FRAGMENT_SUBROUTINE	thirdparty/opengl/include/GL/glcorearb.h	2447;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	thirdparty/opengl/include/GL/glcorearb.h	2453;"	d
GL_FRAGMENT_TEXTURE	thirdparty/opengl/include/GL/glcorearb.h	2386;"	d
GL_FRAMEBUFFER	thirdparty/glfw/src/deps/glad/glad.h	1218;"	d
GL_FRAMEBUFFER	thirdparty/opengl/include/GL/glcorearb.h	1181;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1148;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1111;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1147;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1110;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	thirdparty/glfw/src/deps/glad/glad.h	1143;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	thirdparty/opengl/include/GL/glcorearb.h	1106;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	thirdparty/glfw/src/deps/glad/glad.h	1144;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	thirdparty/opengl/include/GL/glcorearb.h	1107;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1149;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1112;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1146;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1109;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	thirdparty/glfw/src/deps/glad/glad.h	1345;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	thirdparty/opengl/include/GL/glcorearb.h	1546;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	thirdparty/opengl/include/GL/glcorearb.h	3170;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	thirdparty/glfw/src/deps/glad/glad.h	1173;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	thirdparty/opengl/include/GL/glcorearb.h	1136;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	thirdparty/glfw/src/deps/glad/glad.h	1172;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	thirdparty/opengl/include/GL/glcorearb.h	1135;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1145;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1108;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1150;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1113;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR	thirdparty/opengl/include/GL/glcorearb.h	5580;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	thirdparty/glfw/src/deps/glad/glad.h	1175;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	thirdparty/opengl/include/GL/glcorearb.h	1138;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	thirdparty/glfw/src/deps/glad/glad.h	1176;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	thirdparty/opengl/include/GL/glcorearb.h	1139;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	thirdparty/glfw/src/deps/glad/glad.h	1174;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	thirdparty/opengl/include/GL/glcorearb.h	1137;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR	thirdparty/opengl/include/GL/glcorearb.h	5579;"	d
GL_FRAMEBUFFER_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2168;"	d
GL_FRAMEBUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	1165;"	d
GL_FRAMEBUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	1128;"	d
GL_FRAMEBUFFER_BLEND	thirdparty/opengl/include/GL/glcorearb.h	2367;"	d
GL_FRAMEBUFFER_COMPLETE	thirdparty/glfw/src/deps/glad/glad.h	1177;"	d
GL_FRAMEBUFFER_COMPLETE	thirdparty/opengl/include/GL/glcorearb.h	1140;"	d
GL_FRAMEBUFFER_DEFAULT	thirdparty/glfw/src/deps/glad/glad.h	1151;"	d
GL_FRAMEBUFFER_DEFAULT	thirdparty/opengl/include/GL/glcorearb.h	1114;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	thirdparty/opengl/include/GL/glcorearb.h	2334;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	thirdparty/opengl/include/GL/glcorearb.h	2331;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	thirdparty/opengl/include/GL/glcorearb.h	2332;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	thirdparty/opengl/include/GL/glcorearb.h	2333;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	thirdparty/opengl/include/GL/glcorearb.h	2330;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	thirdparty/glfw/src/deps/glad/glad.h	1178;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	thirdparty/opengl/include/GL/glcorearb.h	1141;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	1180;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	1143;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	thirdparty/opengl/include/GL/glcorearb.h	3172;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	thirdparty/glfw/src/deps/glad/glad.h	1346;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	thirdparty/opengl/include/GL/glcorearb.h	1547;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3171;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	thirdparty/glfw/src/deps/glad/glad.h	1179;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	thirdparty/opengl/include/GL/glcorearb.h	1142;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	thirdparty/glfw/src/deps/glad/glad.h	1233;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	thirdparty/opengl/include/GL/glcorearb.h	1196;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	1181;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	1144;"	d
GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR	thirdparty/opengl/include/GL/glcorearb.h	5582;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3462;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV	thirdparty/opengl/include/GL/glcorearb.h	5346;"	d
GL_FRAMEBUFFER_RENDERABLE	thirdparty/opengl/include/GL/glcorearb.h	2365;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	thirdparty/opengl/include/GL/glcorearb.h	2366;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB	thirdparty/opengl/include/GL/glcorearb.h	3463;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV	thirdparty/opengl/include/GL/glcorearb.h	5347;"	d
GL_FRAMEBUFFER_SRGB	thirdparty/glfw/src/deps/glad/glad.h	1238;"	d
GL_FRAMEBUFFER_SRGB	thirdparty/opengl/include/GL/glcorearb.h	1198;"	d
GL_FRAMEBUFFER_UNDEFINED	thirdparty/glfw/src/deps/glad/glad.h	1152;"	d
GL_FRAMEBUFFER_UNDEFINED	thirdparty/opengl/include/GL/glcorearb.h	1115;"	d
GL_FRAMEBUFFER_UNSUPPORTED	thirdparty/glfw/src/deps/glad/glad.h	1182;"	d
GL_FRAMEBUFFER_UNSUPPORTED	thirdparty/opengl/include/GL/glcorearb.h	1145;"	d
GL_FRONT	thirdparty/glfw/src/deps/glad/glad.h	206;"	d
GL_FRONT	thirdparty/opengl/include/GL/glcorearb.h	129;"	d
GL_FRONT_AND_BACK	thirdparty/glfw/src/deps/glad/glad.h	210;"	d
GL_FRONT_AND_BACK	thirdparty/opengl/include/GL/glcorearb.h	133;"	d
GL_FRONT_FACE	thirdparty/glfw/src/deps/glad/glad.h	229;"	d
GL_FRONT_FACE	thirdparty/opengl/include/GL/glcorearb.h	152;"	d
GL_FRONT_FACE_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4788;"	d
GL_FRONT_LEFT	thirdparty/glfw/src/deps/glad/glad.h	202;"	d
GL_FRONT_LEFT	thirdparty/opengl/include/GL/glcorearb.h	125;"	d
GL_FRONT_RIGHT	thirdparty/glfw/src/deps/glad/glad.h	203;"	d
GL_FRONT_RIGHT	thirdparty/opengl/include/GL/glcorearb.h	126;"	d
GL_FULL_SUPPORT	thirdparty/opengl/include/GL/glcorearb.h	2408;"	d
GL_FUNC_ADD	thirdparty/glfw/src/deps/glad/glad.h	873;"	d
GL_FUNC_ADD	thirdparty/opengl/include/GL/glcorearb.h	583;"	d
GL_FUNC_REVERSE_SUBTRACT	thirdparty/glfw/src/deps/glad/glad.h	875;"	d
GL_FUNC_REVERSE_SUBTRACT	thirdparty/opengl/include/GL/glcorearb.h	585;"	d
GL_FUNC_SUBTRACT	thirdparty/glfw/src/deps/glad/glad.h	874;"	d
GL_FUNC_SUBTRACT	thirdparty/opengl/include/GL/glcorearb.h	584;"	d
GL_GENERATE_MIPMAP	thirdparty/glfw/src/deps/glad/glad.h	853;"	d
GL_GENERATE_MIPMAP_HINT	thirdparty/glfw/src/deps/glad/glad.h	854;"	d
GL_GEOMETRY_INPUT_TYPE	thirdparty/glfw/src/deps/glad/glad.h	1349;"	d
GL_GEOMETRY_INPUT_TYPE	thirdparty/opengl/include/GL/glcorearb.h	1550;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3175;"	d
GL_GEOMETRY_OUTPUT_TYPE	thirdparty/glfw/src/deps/glad/glad.h	1350;"	d
GL_GEOMETRY_OUTPUT_TYPE	thirdparty/opengl/include/GL/glcorearb.h	1551;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3176;"	d
GL_GEOMETRY_SHADER	thirdparty/glfw/src/deps/glad/glad.h	1347;"	d
GL_GEOMETRY_SHADER	thirdparty/opengl/include/GL/glcorearb.h	1548;"	d
GL_GEOMETRY_SHADER_ARB	thirdparty/opengl/include/GL/glcorearb.h	3173;"	d
GL_GEOMETRY_SHADER_BIT	thirdparty/opengl/include/GL/glcorearb.h	1921;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	thirdparty/opengl/include/GL/glcorearb.h	1737;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB	thirdparty/opengl/include/GL/glcorearb.h	3386;"	d
GL_GEOMETRY_SUBROUTINE	thirdparty/opengl/include/GL/glcorearb.h	2446;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	thirdparty/opengl/include/GL/glcorearb.h	2452;"	d
GL_GEOMETRY_TEXTURE	thirdparty/opengl/include/GL/glcorearb.h	2385;"	d
GL_GEOMETRY_VERTICES_OUT	thirdparty/glfw/src/deps/glad/glad.h	1348;"	d
GL_GEOMETRY_VERTICES_OUT	thirdparty/opengl/include/GL/glcorearb.h	1549;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	thirdparty/opengl/include/GL/glcorearb.h	3174;"	d
GL_GEQUAL	thirdparty/glfw/src/deps/glad/glad.h	188;"	d
GL_GEQUAL	thirdparty/opengl/include/GL/glcorearb.h	111;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	thirdparty/opengl/include/GL/glcorearb.h	2373;"	d
GL_GET_TEXTURE_IMAGE_TYPE	thirdparty/opengl/include/GL/glcorearb.h	2374;"	d
GL_GLEXT_LEGACY	thirdparty/glfw/include/GLFW/glfw3.h	198;"	d
GL_GLYPH_HAS_KERNING_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5173;"	d
GL_GLYPH_HEIGHT_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5166;"	d
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5169;"	d
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5167;"	d
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5168;"	d
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5172;"	d
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5170;"	d
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5171;"	d
GL_GLYPH_WIDTH_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5165;"	d
GL_GPU_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5385;"	d
GL_GREATER	thirdparty/glfw/src/deps/glad/glad.h	186;"	d
GL_GREATER	thirdparty/opengl/include/GL/glcorearb.h	109;"	d
GL_GREEN	thirdparty/glfw/src/deps/glad/glad.h	329;"	d
GL_GREEN	thirdparty/opengl/include/GL/glcorearb.h	238;"	d
GL_GREEN_BIAS	thirdparty/glfw/src/deps/glad/glad.h	523;"	d
GL_GREEN_BITS	thirdparty/glfw/src/deps/glad/glad.h	542;"	d
GL_GREEN_INTEGER	thirdparty/glfw/src/deps/glad/glad.h	1106;"	d
GL_GREEN_INTEGER	thirdparty/opengl/include/GL/glcorearb.h	1069;"	d
GL_GREEN_NV	thirdparty/opengl/include/GL/glcorearb.h	4711;"	d
GL_GREEN_SCALE	thirdparty/glfw/src/deps/glad/glad.h	522;"	d
GL_GUILTY_CONTEXT_RESET	thirdparty/opengl/include/GL/glcorearb.h	2665;"	d
GL_GUILTY_CONTEXT_RESET_ARB	thirdparty/glfw/src/deps/glad/glad.h	3454;"	d
GL_GUILTY_CONTEXT_RESET_ARB	thirdparty/opengl/include/GL/glcorearb.h	3425;"	d
GL_HALF_FLOAT	thirdparty/glfw/src/deps/glad/glad.h	1239;"	d
GL_HALF_FLOAT	thirdparty/opengl/include/GL/glcorearb.h	1199;"	d
GL_HARDLIGHT_KHR	thirdparty/opengl/include/GL/glcorearb.h	3824;"	d
GL_HARDLIGHT_NV	thirdparty/opengl/include/GL/glcorearb.h	4712;"	d
GL_HARDMIX_NV	thirdparty/opengl/include/GL/glcorearb.h	4713;"	d
GL_HAS_GEO_SHD	lib/rov/src/ogl/rov_gl.hpp	17;"	d
GL_HAS_VAO	lib/rov/src/ogl/rov_gl.hpp	16;"	d
GL_HIGH_FLOAT	thirdparty/opengl/include/GL/glcorearb.h	1904;"	d
GL_HIGH_INT	thirdparty/opengl/include/GL/glcorearb.h	1907;"	d
GL_HINT_BIT	thirdparty/glfw/src/deps/glad/glad.h	384;"	d
GL_HORIZONTAL_LINE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5134;"	d
GL_HSL_COLOR_KHR	thirdparty/opengl/include/GL/glcorearb.h	3830;"	d
GL_HSL_COLOR_NV	thirdparty/opengl/include/GL/glcorearb.h	4714;"	d
GL_HSL_HUE_KHR	thirdparty/opengl/include/GL/glcorearb.h	3828;"	d
GL_HSL_HUE_NV	thirdparty/opengl/include/GL/glcorearb.h	4715;"	d
GL_HSL_LUMINOSITY_KHR	thirdparty/opengl/include/GL/glcorearb.h	3831;"	d
GL_HSL_LUMINOSITY_NV	thirdparty/opengl/include/GL/glcorearb.h	4716;"	d
GL_HSL_SATURATION_KHR	thirdparty/opengl/include/GL/glcorearb.h	3829;"	d
GL_HSL_SATURATION_NV	thirdparty/opengl/include/GL/glcorearb.h	4717;"	d
GL_IMAGE_1D	thirdparty/opengl/include/GL/glcorearb.h	2179;"	d
GL_IMAGE_1D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	2185;"	d
GL_IMAGE_2D	thirdparty/opengl/include/GL/glcorearb.h	2180;"	d
GL_IMAGE_2D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	2186;"	d
GL_IMAGE_2D_MULTISAMPLE	thirdparty/opengl/include/GL/glcorearb.h	2188;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	2189;"	d
GL_IMAGE_2D_RECT	thirdparty/opengl/include/GL/glcorearb.h	2182;"	d
GL_IMAGE_3D	thirdparty/opengl/include/GL/glcorearb.h	2181;"	d
GL_IMAGE_BINDING_ACCESS	thirdparty/opengl/include/GL/glcorearb.h	2178;"	d
GL_IMAGE_BINDING_FORMAT	thirdparty/opengl/include/GL/glcorearb.h	2213;"	d
GL_IMAGE_BINDING_LAYER	thirdparty/opengl/include/GL/glcorearb.h	2177;"	d
GL_IMAGE_BINDING_LAYERED	thirdparty/opengl/include/GL/glcorearb.h	2176;"	d
GL_IMAGE_BINDING_LEVEL	thirdparty/opengl/include/GL/glcorearb.h	2175;"	d
GL_IMAGE_BINDING_NAME	thirdparty/opengl/include/GL/glcorearb.h	2174;"	d
GL_IMAGE_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	2184;"	d
GL_IMAGE_CLASS_10_10_10_2	thirdparty/opengl/include/GL/glcorearb.h	2420;"	d
GL_IMAGE_CLASS_11_11_10	thirdparty/opengl/include/GL/glcorearb.h	2419;"	d
GL_IMAGE_CLASS_1_X_16	thirdparty/opengl/include/GL/glcorearb.h	2415;"	d
GL_IMAGE_CLASS_1_X_32	thirdparty/opengl/include/GL/glcorearb.h	2412;"	d
GL_IMAGE_CLASS_1_X_8	thirdparty/opengl/include/GL/glcorearb.h	2418;"	d
GL_IMAGE_CLASS_2_X_16	thirdparty/opengl/include/GL/glcorearb.h	2414;"	d
GL_IMAGE_CLASS_2_X_32	thirdparty/opengl/include/GL/glcorearb.h	2411;"	d
GL_IMAGE_CLASS_2_X_8	thirdparty/opengl/include/GL/glcorearb.h	2417;"	d
GL_IMAGE_CLASS_4_X_16	thirdparty/opengl/include/GL/glcorearb.h	2413;"	d
GL_IMAGE_CLASS_4_X_32	thirdparty/opengl/include/GL/glcorearb.h	2410;"	d
GL_IMAGE_CLASS_4_X_8	thirdparty/opengl/include/GL/glcorearb.h	2416;"	d
GL_IMAGE_COMPATIBILITY_CLASS	thirdparty/opengl/include/GL/glcorearb.h	2395;"	d
GL_IMAGE_CUBE	thirdparty/opengl/include/GL/glcorearb.h	2183;"	d
GL_IMAGE_CUBE_MAP_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	2187;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	thirdparty/opengl/include/GL/glcorearb.h	2216;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2215;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	thirdparty/opengl/include/GL/glcorearb.h	2214;"	d
GL_IMAGE_PIXEL_FORMAT	thirdparty/opengl/include/GL/glcorearb.h	2396;"	d
GL_IMAGE_PIXEL_TYPE	thirdparty/opengl/include/GL/glcorearb.h	2397;"	d
GL_IMAGE_TEXEL_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2394;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	thirdparty/opengl/include/GL/glcorearb.h	1901;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	thirdparty/opengl/include/GL/glcorearb.h	1900;"	d
GL_INCLUSIVE_EXT	thirdparty/opengl/include/GL/glcorearb.h	4570;"	d
GL_INCR	thirdparty/glfw/src/deps/glad/glad.h	339;"	d
GL_INCR	thirdparty/opengl/include/GL/glcorearb.h	248;"	d
GL_INCR_WRAP	thirdparty/glfw/src/deps/glad/glad.h	845;"	d
GL_INCR_WRAP	thirdparty/opengl/include/GL/glcorearb.h	578;"	d
GL_INDEX	thirdparty/glfw/src/deps/glad/glad.h	1235;"	d
GL_INDEX_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	581;"	d
GL_INDEX_ARRAY_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5506;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	913;"	d
GL_INDEX_ARRAY_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5516;"	d
GL_INDEX_ARRAY_POINTER	thirdparty/glfw/src/deps/glad/glad.h	435;"	d
GL_INDEX_ARRAY_STRIDE	thirdparty/glfw/src/deps/glad/glad.h	593;"	d
GL_INDEX_ARRAY_TYPE	thirdparty/glfw/src/deps/glad/glad.h	592;"	d
GL_INDEX_BITS	thirdparty/glfw/src/deps/glad/glad.h	540;"	d
GL_INDEX_CLEAR_VALUE	thirdparty/glfw/src/deps/glad/glad.h	492;"	d
GL_INDEX_LOGIC_OP	thirdparty/glfw/src/deps/glad/glad.h	489;"	d
GL_INDEX_MODE	thirdparty/glfw/src/deps/glad/glad.h	494;"	d
GL_INDEX_OFFSET	thirdparty/glfw/src/deps/glad/glad.h	517;"	d
GL_INDEX_SHIFT	thirdparty/glfw/src/deps/glad/glad.h	516;"	d
GL_INDEX_WRITEMASK	thirdparty/glfw/src/deps/glad/glad.h	493;"	d
GL_INFO_LOG_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	996;"	d
GL_INFO_LOG_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	759;"	d
GL_INNOCENT_CONTEXT_RESET	thirdparty/opengl/include/GL/glcorearb.h	2666;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	thirdparty/glfw/src/deps/glad/glad.h	3455;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	thirdparty/opengl/include/GL/glcorearb.h	3426;"	d
GL_INT	thirdparty/glfw/src/deps/glad/glad.h	300;"	d
GL_INT	thirdparty/opengl/include/GL/glcorearb.h	210;"	d
GL_INT16_NV	thirdparty/opengl/include/GL/glcorearb.h	4956;"	d
GL_INT16_VEC2_NV	thirdparty/opengl/include/GL/glcorearb.h	4957;"	d
GL_INT16_VEC3_NV	thirdparty/opengl/include/GL/glcorearb.h	4958;"	d
GL_INT16_VEC4_NV	thirdparty/opengl/include/GL/glcorearb.h	4959;"	d
GL_INT64_ARB	thirdparty/opengl/include/GL/glcorearb.h	3222;"	d
GL_INT64_NV	thirdparty/opengl/include/GL/glcorearb.h	4950;"	d
GL_INT64_VEC2_ARB	thirdparty/opengl/include/GL/glcorearb.h	3223;"	d
GL_INT64_VEC2_NV	thirdparty/opengl/include/GL/glcorearb.h	4960;"	d
GL_INT64_VEC3_ARB	thirdparty/opengl/include/GL/glcorearb.h	3224;"	d
GL_INT64_VEC3_NV	thirdparty/opengl/include/GL/glcorearb.h	4961;"	d
GL_INT64_VEC4_ARB	thirdparty/opengl/include/GL/glcorearb.h	3225;"	d
GL_INT64_VEC4_NV	thirdparty/opengl/include/GL/glcorearb.h	4962;"	d
GL_INT8_NV	thirdparty/opengl/include/GL/glcorearb.h	4952;"	d
GL_INT8_VEC2_NV	thirdparty/opengl/include/GL/glcorearb.h	4953;"	d
GL_INT8_VEC3_NV	thirdparty/opengl/include/GL/glcorearb.h	4954;"	d
GL_INT8_VEC4_NV	thirdparty/opengl/include/GL/glcorearb.h	4955;"	d
GL_INTEL_conservative_rasterization	thirdparty/opengl/include/GL/glcorearb.h	4583;"	d
GL_INTEL_framebuffer_CMAA	thirdparty/opengl/include/GL/glcorearb.h	4588;"	d
GL_INTEL_performance_query	thirdparty/opengl/include/GL/glcorearb.h	4596;"	d
GL_INTENSITY	thirdparty/glfw/src/deps/glad/glad.h	664;"	d
GL_INTENSITY12	thirdparty/glfw/src/deps/glad/glad.h	667;"	d
GL_INTENSITY16	thirdparty/glfw/src/deps/glad/glad.h	668;"	d
GL_INTENSITY4	thirdparty/glfw/src/deps/glad/glad.h	665;"	d
GL_INTENSITY8	thirdparty/glfw/src/deps/glad/glad.h	666;"	d
GL_INTERLEAVED_ATTRIBS	thirdparty/glfw/src/deps/glad/glad.h	1089;"	d
GL_INTERLEAVED_ATTRIBS	thirdparty/opengl/include/GL/glcorearb.h	1052;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2344;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	thirdparty/opengl/include/GL/glcorearb.h	2351;"	d
GL_INTERNALFORMAT_BLUE_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2343;"	d
GL_INTERNALFORMAT_BLUE_TYPE	thirdparty/opengl/include/GL/glcorearb.h	2350;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2345;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	thirdparty/opengl/include/GL/glcorearb.h	2352;"	d
GL_INTERNALFORMAT_GREEN_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2342;"	d
GL_INTERNALFORMAT_GREEN_TYPE	thirdparty/opengl/include/GL/glcorearb.h	2349;"	d
GL_INTERNALFORMAT_PREFERRED	thirdparty/opengl/include/GL/glcorearb.h	2340;"	d
GL_INTERNALFORMAT_RED_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2341;"	d
GL_INTERNALFORMAT_RED_TYPE	thirdparty/opengl/include/GL/glcorearb.h	2348;"	d
GL_INTERNALFORMAT_SHARED_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2347;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2346;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	thirdparty/opengl/include/GL/glcorearb.h	2353;"	d
GL_INTERNALFORMAT_SUPPORTED	thirdparty/opengl/include/GL/glcorearb.h	2339;"	d
GL_INTERPOLATE	thirdparty/glfw/src/deps/glad/glad.h	827;"	d
GL_INT_2_10_10_10_REV	thirdparty/opengl/include/GL/glcorearb.h	1661;"	d
GL_INT_IMAGE_1D	thirdparty/opengl/include/GL/glcorearb.h	2190;"	d
GL_INT_IMAGE_1D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	2196;"	d
GL_INT_IMAGE_2D	thirdparty/opengl/include/GL/glcorearb.h	2191;"	d
GL_INT_IMAGE_2D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	2197;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	thirdparty/opengl/include/GL/glcorearb.h	2199;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	2200;"	d
GL_INT_IMAGE_2D_RECT	thirdparty/opengl/include/GL/glcorearb.h	2193;"	d
GL_INT_IMAGE_3D	thirdparty/opengl/include/GL/glcorearb.h	2192;"	d
GL_INT_IMAGE_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	2195;"	d
GL_INT_IMAGE_CUBE	thirdparty/opengl/include/GL/glcorearb.h	2194;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	2198;"	d
GL_INT_SAMPLER_1D	thirdparty/glfw/src/deps/glad/glad.h	1120;"	d
GL_INT_SAMPLER_1D	thirdparty/opengl/include/GL/glcorearb.h	1083;"	d
GL_INT_SAMPLER_1D_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1124;"	d
GL_INT_SAMPLER_1D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1087;"	d
GL_INT_SAMPLER_2D	thirdparty/glfw/src/deps/glad/glad.h	1121;"	d
GL_INT_SAMPLER_2D	thirdparty/opengl/include/GL/glcorearb.h	1084;"	d
GL_INT_SAMPLER_2D_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1125;"	d
GL_INT_SAMPLER_2D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1088;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	thirdparty/glfw/src/deps/glad/glad.h	1393;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	thirdparty/opengl/include/GL/glcorearb.h	1594;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1396;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1597;"	d
GL_INT_SAMPLER_2D_RECT	thirdparty/glfw/src/deps/glad/glad.h	1279;"	d
GL_INT_SAMPLER_2D_RECT	thirdparty/opengl/include/GL/glcorearb.h	1410;"	d
GL_INT_SAMPLER_3D	thirdparty/glfw/src/deps/glad/glad.h	1122;"	d
GL_INT_SAMPLER_3D	thirdparty/opengl/include/GL/glcorearb.h	1085;"	d
GL_INT_SAMPLER_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	1280;"	d
GL_INT_SAMPLER_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	1411;"	d
GL_INT_SAMPLER_CUBE	thirdparty/glfw/src/deps/glad/glad.h	1123;"	d
GL_INT_SAMPLER_CUBE	thirdparty/opengl/include/GL/glcorearb.h	1086;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1733;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3691;"	d
GL_INT_VEC2	thirdparty/glfw/src/deps/glad/glad.h	976;"	d
GL_INT_VEC2	thirdparty/opengl/include/GL/glcorearb.h	739;"	d
GL_INT_VEC3	thirdparty/glfw/src/deps/glad/glad.h	977;"	d
GL_INT_VEC3	thirdparty/opengl/include/GL/glcorearb.h	740;"	d
GL_INT_VEC4	thirdparty/glfw/src/deps/glad/glad.h	978;"	d
GL_INT_VEC4	thirdparty/opengl/include/GL/glcorearb.h	741;"	d
GL_INVALID_ENUM	thirdparty/glfw/src/deps/glad/glad.h	212;"	d
GL_INVALID_ENUM	thirdparty/opengl/include/GL/glcorearb.h	135;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	thirdparty/glfw/src/deps/glad/glad.h	1142;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	thirdparty/opengl/include/GL/glcorearb.h	1105;"	d
GL_INVALID_INDEX	thirdparty/glfw/src/deps/glad/glad.h	1336;"	d
GL_INVALID_INDEX	thirdparty/opengl/include/GL/glcorearb.h	1467;"	d
GL_INVALID_OPERATION	thirdparty/glfw/src/deps/glad/glad.h	214;"	d
GL_INVALID_OPERATION	thirdparty/opengl/include/GL/glcorearb.h	137;"	d
GL_INVALID_VALUE	thirdparty/glfw/src/deps/glad/glad.h	213;"	d
GL_INVALID_VALUE	thirdparty/opengl/include/GL/glcorearb.h	136;"	d
GL_INVERT	thirdparty/glfw/src/deps/glad/glad.h	316;"	d
GL_INVERT	thirdparty/opengl/include/GL/glcorearb.h	225;"	d
GL_INVERT_OVG_NV	thirdparty/opengl/include/GL/glcorearb.h	4718;"	d
GL_INVERT_RGB_NV	thirdparty/opengl/include/GL/glcorearb.h	4719;"	d
GL_ISOLINES	thirdparty/opengl/include/GL/glcorearb.h	1773;"	d
GL_IS_PER_PATCH	thirdparty/opengl/include/GL/glcorearb.h	2483;"	d
GL_IS_ROW_MAJOR	thirdparty/opengl/include/GL/glcorearb.h	2467;"	d
GL_ITALIC_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5164;"	d
GL_KEEP	thirdparty/glfw/src/deps/glad/glad.h	337;"	d
GL_KEEP	thirdparty/opengl/include/GL/glcorearb.h	246;"	d
GL_KHR_blend_equation_advanced	thirdparty/opengl/include/GL/glcorearb.h	3816;"	d
GL_KHR_blend_equation_advanced_coherent	thirdparty/opengl/include/GL/glcorearb.h	3839;"	d
GL_KHR_context_flush_control	thirdparty/opengl/include/GL/glcorearb.h	3844;"	d
GL_KHR_debug	thirdparty/glfw/src/deps/glad/glad.h	3609;"	d
GL_KHR_debug	thirdparty/opengl/include/GL/glcorearb.h	3848;"	d
GL_KHR_no_error	thirdparty/opengl/include/GL/glcorearb.h	3852;"	d
GL_KHR_robust_buffer_access_behavior	thirdparty/opengl/include/GL/glcorearb.h	3857;"	d
GL_KHR_robustness	thirdparty/opengl/include/GL/glcorearb.h	3861;"	d
GL_KHR_texture_compression_astc_hdr	thirdparty/opengl/include/GL/glcorearb.h	3866;"	d
GL_KHR_texture_compression_astc_ldr	thirdparty/opengl/include/GL/glcorearb.h	3898;"	d
GL_KHR_texture_compression_astc_sliced_3d	thirdparty/opengl/include/GL/glcorearb.h	3902;"	d
GL_LARGE_CCW_ARC_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5150;"	d
GL_LARGE_CW_ARC_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5152;"	d
GL_LAST_VERTEX_CONVENTION	thirdparty/glfw/src/deps/glad/glad.h	1362;"	d
GL_LAST_VERTEX_CONVENTION	thirdparty/opengl/include/GL/glcorearb.h	1563;"	d
GL_LAYER_PROVOKING_VERTEX	thirdparty/opengl/include/GL/glcorearb.h	1931;"	d
GL_LEFT	thirdparty/glfw/src/deps/glad/glad.h	208;"	d
GL_LEFT	thirdparty/opengl/include/GL/glcorearb.h	131;"	d
GL_LEQUAL	thirdparty/glfw/src/deps/glad/glad.h	185;"	d
GL_LEQUAL	thirdparty/opengl/include/GL/glcorearb.h	108;"	d
GL_LESS	thirdparty/glfw/src/deps/glad/glad.h	183;"	d
GL_LESS	thirdparty/opengl/include/GL/glcorearb.h	106;"	d
GL_LIGHT0	thirdparty/glfw/src/deps/glad/glad.h	689;"	d
GL_LIGHT1	thirdparty/glfw/src/deps/glad/glad.h	690;"	d
GL_LIGHT2	thirdparty/glfw/src/deps/glad/glad.h	691;"	d
GL_LIGHT3	thirdparty/glfw/src/deps/glad/glad.h	692;"	d
GL_LIGHT4	thirdparty/glfw/src/deps/glad/glad.h	693;"	d
GL_LIGHT5	thirdparty/glfw/src/deps/glad/glad.h	694;"	d
GL_LIGHT6	thirdparty/glfw/src/deps/glad/glad.h	695;"	d
GL_LIGHT7	thirdparty/glfw/src/deps/glad/glad.h	696;"	d
GL_LIGHTEN_KHR	thirdparty/opengl/include/GL/glcorearb.h	3821;"	d
GL_LIGHTEN_NV	thirdparty/opengl/include/GL/glcorearb.h	4720;"	d
GL_LIGHTING	thirdparty/glfw/src/deps/glad/glad.h	460;"	d
GL_LIGHTING_BIT	thirdparty/glfw/src/deps/glad/glad.h	378;"	d
GL_LIGHT_MODEL_AMBIENT	thirdparty/glfw/src/deps/glad/glad.h	463;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	thirdparty/glfw/src/deps/glad/glad.h	734;"	d
GL_LIGHT_MODEL_LOCAL_VIEWER	thirdparty/glfw/src/deps/glad/glad.h	461;"	d
GL_LIGHT_MODEL_TWO_SIDE	thirdparty/glfw/src/deps/glad/glad.h	462;"	d
GL_LINE	thirdparty/glfw/src/deps/glad/glad.h	335;"	d
GL_LINE	thirdparty/opengl/include/GL/glcorearb.h	244;"	d
GL_LINEAR	thirdparty/glfw/src/deps/glad/glad.h	346;"	d
GL_LINEAR	thirdparty/opengl/include/GL/glcorearb.h	255;"	d
GL_LINEARBURN_NV	thirdparty/opengl/include/GL/glcorearb.h	4721;"	d
GL_LINEARDODGE_NV	thirdparty/opengl/include/GL/glcorearb.h	4722;"	d
GL_LINEARLIGHT_NV	thirdparty/opengl/include/GL/glcorearb.h	4723;"	d
GL_LINEAR_ATTENUATION	thirdparty/glfw/src/deps/glad/glad.h	612;"	d
GL_LINEAR_MIPMAP_LINEAR	thirdparty/glfw/src/deps/glad/glad.h	350;"	d
GL_LINEAR_MIPMAP_LINEAR	thirdparty/opengl/include/GL/glcorearb.h	259;"	d
GL_LINEAR_MIPMAP_NEAREST	thirdparty/glfw/src/deps/glad/glad.h	348;"	d
GL_LINEAR_MIPMAP_NEAREST	thirdparty/opengl/include/GL/glcorearb.h	257;"	d
GL_LINES	thirdparty/glfw/src/deps/glad/glad.h	175;"	d
GL_LINES	thirdparty/opengl/include/GL/glcorearb.h	98;"	d
GL_LINES_ADJACENCY	thirdparty/glfw/src/deps/glad/glad.h	1339;"	d
GL_LINES_ADJACENCY	thirdparty/opengl/include/GL/glcorearb.h	1540;"	d
GL_LINES_ADJACENCY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3164;"	d
GL_LINE_BIT	thirdparty/glfw/src/deps/glad/glad.h	374;"	d
GL_LINE_LOOP	thirdparty/glfw/src/deps/glad/glad.h	176;"	d
GL_LINE_LOOP	thirdparty/opengl/include/GL/glcorearb.h	99;"	d
GL_LINE_RESET_TOKEN	thirdparty/glfw/src/deps/glad/glad.h	416;"	d
GL_LINE_SMOOTH	thirdparty/glfw/src/deps/glad/glad.h	221;"	d
GL_LINE_SMOOTH	thirdparty/opengl/include/GL/glcorearb.h	144;"	d
GL_LINE_SMOOTH_HINT	thirdparty/glfw/src/deps/glad/glad.h	259;"	d
GL_LINE_SMOOTH_HINT	thirdparty/opengl/include/GL/glcorearb.h	181;"	d
GL_LINE_STIPPLE	thirdparty/glfw/src/deps/glad/glad.h	451;"	d
GL_LINE_STIPPLE_PATTERN	thirdparty/glfw/src/deps/glad/glad.h	452;"	d
GL_LINE_STIPPLE_REPEAT	thirdparty/glfw/src/deps/glad/glad.h	453;"	d
GL_LINE_STRIP	thirdparty/glfw/src/deps/glad/glad.h	177;"	d
GL_LINE_STRIP	thirdparty/opengl/include/GL/glcorearb.h	100;"	d
GL_LINE_STRIP_ADJACENCY	thirdparty/glfw/src/deps/glad/glad.h	1340;"	d
GL_LINE_STRIP_ADJACENCY	thirdparty/opengl/include/GL/glcorearb.h	1541;"	d
GL_LINE_STRIP_ADJACENCY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3165;"	d
GL_LINE_TOKEN	thirdparty/glfw/src/deps/glad/glad.h	411;"	d
GL_LINE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5132;"	d
GL_LINE_WIDTH	thirdparty/glfw/src/deps/glad/glad.h	222;"	d
GL_LINE_WIDTH	thirdparty/opengl/include/GL/glcorearb.h	145;"	d
GL_LINE_WIDTH_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4783;"	d
GL_LINE_WIDTH_GRANULARITY	thirdparty/glfw/src/deps/glad/glad.h	224;"	d
GL_LINE_WIDTH_GRANULARITY	thirdparty/opengl/include/GL/glcorearb.h	147;"	d
GL_LINE_WIDTH_RANGE	thirdparty/glfw/src/deps/glad/glad.h	223;"	d
GL_LINE_WIDTH_RANGE	thirdparty/opengl/include/GL/glcorearb.h	146;"	d
GL_LINK_STATUS	thirdparty/glfw/src/deps/glad/glad.h	994;"	d
GL_LINK_STATUS	thirdparty/opengl/include/GL/glcorearb.h	757;"	d
GL_LIST_BASE	thirdparty/glfw/src/deps/glad/glad.h	456;"	d
GL_LIST_BIT	thirdparty/glfw/src/deps/glad/glad.h	386;"	d
GL_LIST_INDEX	thirdparty/glfw/src/deps/glad/glad.h	457;"	d
GL_LIST_MODE	thirdparty/glfw/src/deps/glad/glad.h	454;"	d
GL_LOAD	thirdparty/glfw/src/deps/glad/glad.h	396;"	d
GL_LOCATION	thirdparty/opengl/include/GL/glcorearb.h	2481;"	d
GL_LOCATION_COMPONENT	thirdparty/opengl/include/GL/glcorearb.h	2620;"	d
GL_LOCATION_INDEX	thirdparty/opengl/include/GL/glcorearb.h	2482;"	d
GL_LOGIC_OP	thirdparty/glfw/src/deps/glad/glad.h	490;"	d
GL_LOGIC_OP_MODE	thirdparty/glfw/src/deps/glad/glad.h	249;"	d
GL_LOGIC_OP_MODE	thirdparty/opengl/include/GL/glcorearb.h	172;"	d
GL_LOSE_CONTEXT_ON_RESET	thirdparty/opengl/include/GL/glcorearb.h	2669;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	thirdparty/glfw/src/deps/glad/glad.h	3453;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	thirdparty/glfw/src/internal.h	92;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	thirdparty/opengl/include/GL/glcorearb.h	3424;"	d
GL_LOWER_LEFT	thirdparty/glfw/src/deps/glad/glad.h	1007;"	d
GL_LOWER_LEFT	thirdparty/opengl/include/GL/glcorearb.h	770;"	d
GL_LOW_FLOAT	thirdparty/opengl/include/GL/glcorearb.h	1902;"	d
GL_LOW_INT	thirdparty/opengl/include/GL/glcorearb.h	1905;"	d
GL_LUMINANCE	thirdparty/glfw/src/deps/glad/glad.h	626;"	d
GL_LUMINANCE12	thirdparty/glfw/src/deps/glad/glad.h	656;"	d
GL_LUMINANCE12_ALPHA12	thirdparty/glfw/src/deps/glad/glad.h	662;"	d
GL_LUMINANCE12_ALPHA4	thirdparty/glfw/src/deps/glad/glad.h	661;"	d
GL_LUMINANCE16	thirdparty/glfw/src/deps/glad/glad.h	657;"	d
GL_LUMINANCE16_ALPHA16	thirdparty/glfw/src/deps/glad/glad.h	663;"	d
GL_LUMINANCE4	thirdparty/glfw/src/deps/glad/glad.h	654;"	d
GL_LUMINANCE4_ALPHA4	thirdparty/glfw/src/deps/glad/glad.h	658;"	d
GL_LUMINANCE6_ALPHA2	thirdparty/glfw/src/deps/glad/glad.h	659;"	d
GL_LUMINANCE8	thirdparty/glfw/src/deps/glad/glad.h	655;"	d
GL_LUMINANCE8_ALPHA8	thirdparty/glfw/src/deps/glad/glad.h	660;"	d
GL_LUMINANCE_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	627;"	d
GL_MAJOR_VERSION	thirdparty/glfw/src/deps/glad/glad.h	1049;"	d
GL_MAJOR_VERSION	thirdparty/opengl/include/GL/glcorearb.h	1012;"	d
GL_MANUAL_GENERATE_MIPMAP	thirdparty/opengl/include/GL/glcorearb.h	2376;"	d
GL_MAP1_COLOR_4	thirdparty/glfw/src/deps/glad/glad.h	553;"	d
GL_MAP1_GRID_DOMAIN	thirdparty/glfw/src/deps/glad/glad.h	571;"	d
GL_MAP1_GRID_SEGMENTS	thirdparty/glfw/src/deps/glad/glad.h	572;"	d
GL_MAP1_INDEX	thirdparty/glfw/src/deps/glad/glad.h	554;"	d
GL_MAP1_NORMAL	thirdparty/glfw/src/deps/glad/glad.h	555;"	d
GL_MAP1_TEXTURE_COORD_1	thirdparty/glfw/src/deps/glad/glad.h	556;"	d
GL_MAP1_TEXTURE_COORD_2	thirdparty/glfw/src/deps/glad/glad.h	557;"	d
GL_MAP1_TEXTURE_COORD_3	thirdparty/glfw/src/deps/glad/glad.h	558;"	d
GL_MAP1_TEXTURE_COORD_4	thirdparty/glfw/src/deps/glad/glad.h	559;"	d
GL_MAP1_VERTEX_3	thirdparty/glfw/src/deps/glad/glad.h	560;"	d
GL_MAP1_VERTEX_4	thirdparty/glfw/src/deps/glad/glad.h	561;"	d
GL_MAP2_COLOR_4	thirdparty/glfw/src/deps/glad/glad.h	562;"	d
GL_MAP2_GRID_DOMAIN	thirdparty/glfw/src/deps/glad/glad.h	573;"	d
GL_MAP2_GRID_SEGMENTS	thirdparty/glfw/src/deps/glad/glad.h	574;"	d
GL_MAP2_INDEX	thirdparty/glfw/src/deps/glad/glad.h	563;"	d
GL_MAP2_NORMAL	thirdparty/glfw/src/deps/glad/glad.h	564;"	d
GL_MAP2_TEXTURE_COORD_1	thirdparty/glfw/src/deps/glad/glad.h	565;"	d
GL_MAP2_TEXTURE_COORD_2	thirdparty/glfw/src/deps/glad/glad.h	566;"	d
GL_MAP2_TEXTURE_COORD_3	thirdparty/glfw/src/deps/glad/glad.h	567;"	d
GL_MAP2_TEXTURE_COORD_4	thirdparty/glfw/src/deps/glad/glad.h	568;"	d
GL_MAP2_VERTEX_3	thirdparty/glfw/src/deps/glad/glad.h	569;"	d
GL_MAP2_VERTEX_4	thirdparty/glfw/src/deps/glad/glad.h	570;"	d
GL_MAP_COHERENT_BIT	thirdparty/opengl/include/GL/glcorearb.h	2613;"	d
GL_MAP_COLOR	thirdparty/glfw/src/deps/glad/glad.h	514;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	thirdparty/glfw/src/deps/glad/glad.h	1244;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	thirdparty/opengl/include/GL/glcorearb.h	1204;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	thirdparty/glfw/src/deps/glad/glad.h	1243;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	thirdparty/opengl/include/GL/glcorearb.h	1203;"	d
GL_MAP_INVALIDATE_RANGE_BIT	thirdparty/glfw/src/deps/glad/glad.h	1242;"	d
GL_MAP_INVALIDATE_RANGE_BIT	thirdparty/opengl/include/GL/glcorearb.h	1202;"	d
GL_MAP_PERSISTENT_BIT	thirdparty/opengl/include/GL/glcorearb.h	2612;"	d
GL_MAP_READ_BIT	thirdparty/glfw/src/deps/glad/glad.h	1240;"	d
GL_MAP_READ_BIT	thirdparty/opengl/include/GL/glcorearb.h	1200;"	d
GL_MAP_STENCIL	thirdparty/glfw/src/deps/glad/glad.h	515;"	d
GL_MAP_UNSYNCHRONIZED_BIT	thirdparty/glfw/src/deps/glad/glad.h	1245;"	d
GL_MAP_UNSYNCHRONIZED_BIT	thirdparty/opengl/include/GL/glcorearb.h	1205;"	d
GL_MAP_WRITE_BIT	thirdparty/glfw/src/deps/glad/glad.h	1241;"	d
GL_MAP_WRITE_BIT	thirdparty/opengl/include/GL/glcorearb.h	1201;"	d
GL_MATRIX_MODE	thirdparty/glfw/src/deps/glad/glad.h	476;"	d
GL_MATRIX_STRIDE	thirdparty/opengl/include/GL/glcorearb.h	2466;"	d
GL_MAX	thirdparty/glfw/src/deps/glad/glad.h	877;"	d
GL_MAX	thirdparty/opengl/include/GL/glcorearb.h	587;"	d
GL_MAX_3D_TEXTURE_SIZE	thirdparty/glfw/src/deps/glad/glad.h	711;"	d
GL_MAX_3D_TEXTURE_SIZE	thirdparty/opengl/include/GL/glcorearb.h	448;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	thirdparty/glfw/src/deps/glad/glad.h	1061;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	thirdparty/opengl/include/GL/glcorearb.h	1024;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	thirdparty/opengl/include/GL/glcorearb.h	2155;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2154;"	d
GL_MAX_ATTRIB_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	534;"	d
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	539;"	d
GL_MAX_CLIP_DISTANCES	thirdparty/glfw/src/deps/glad/glad.h	1048;"	d
GL_MAX_CLIP_DISTANCES	thirdparty/opengl/include/GL/glcorearb.h	1011;"	d
GL_MAX_CLIP_PLANES	thirdparty/glfw/src/deps/glad/glad.h	532;"	d
GL_MAX_COLOR_ATTACHMENTS	thirdparty/glfw/src/deps/glad/glad.h	1183;"	d
GL_MAX_COLOR_ATTACHMENTS	thirdparty/opengl/include/GL/glcorearb.h	1146;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	thirdparty/glfw/src/deps/glad/glad.h	1398;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	thirdparty/opengl/include/GL/glcorearb.h	1599;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	thirdparty/opengl/include/GL/glcorearb.h	2153;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	thirdparty/opengl/include/GL/glcorearb.h	2147;"	d
GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES	thirdparty/opengl/include/GL/glcorearb.h	2662;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	2282;"	d
GL_MAX_COMBINED_DIMENSIONS	thirdparty/opengl/include/GL/glcorearb.h	2358;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	1316;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1447;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	1315;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1446;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	thirdparty/opengl/include/GL/glcorearb.h	2222;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	thirdparty/opengl/include/GL/glcorearb.h	2173;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	thirdparty/opengl/include/GL/glcorearb.h	2499;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	2494;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1790;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1791;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	thirdparty/glfw/src/deps/glad/glad.h	971;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	thirdparty/opengl/include/GL/glcorearb.h	734;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	thirdparty/glfw/src/deps/glad/glad.h	1311;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	1442;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	1314;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1445;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	thirdparty/opengl/include/GL/glcorearb.h	2281;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	thirdparty/opengl/include/GL/glcorearb.h	2280;"	d
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3012;"	d
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3014;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	thirdparty/opengl/include/GL/glcorearb.h	2277;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	2493;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2278;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	thirdparty/opengl/include/GL/glcorearb.h	2276;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	2275;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	2279;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3011;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3013;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	thirdparty/opengl/include/GL/glcorearb.h	2284;"	d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	thirdparty/opengl/include/GL/glcorearb.h	2283;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2285;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	thirdparty/glfw/src/deps/glad/glad.h	788;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	thirdparty/opengl/include/GL/glcorearb.h	534;"	d
GL_MAX_CULL_DISTANCES	thirdparty/opengl/include/GL/glcorearb.h	2661;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	3479;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	thirdparty/opengl/include/GL/glcorearb.h	2318;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR	thirdparty/glfw/src/deps/glad/glad.h	3516;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	thirdparty/glfw/src/deps/glad/glad.h	3489;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	thirdparty/opengl/include/GL/glcorearb.h	2309;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	thirdparty/opengl/include/GL/glcorearb.h	3061;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_KHR	thirdparty/glfw/src/deps/glad/glad.h	3527;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	3488;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	2308;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	thirdparty/opengl/include/GL/glcorearb.h	3060;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_KHR	thirdparty/glfw/src/deps/glad/glad.h	3526;"	d
GL_MAX_DEPTH	thirdparty/opengl/include/GL/glcorearb.h	2356;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	thirdparty/glfw/src/deps/glad/glad.h	1399;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	thirdparty/opengl/include/GL/glcorearb.h	1600;"	d
GL_MAX_DRAW_BUFFERS	thirdparty/glfw/src/deps/glad/glad.h	944;"	d
GL_MAX_DRAW_BUFFERS	thirdparty/opengl/include/GL/glcorearb.h	707;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	thirdparty/opengl/include/GL/glcorearb.h	1650;"	d
GL_MAX_ELEMENTS_INDICES	thirdparty/glfw/src/deps/glad/glad.h	722;"	d
GL_MAX_ELEMENTS_INDICES	thirdparty/opengl/include/GL/glcorearb.h	459;"	d
GL_MAX_ELEMENTS_VERTICES	thirdparty/glfw/src/deps/glad/glad.h	721;"	d
GL_MAX_ELEMENTS_VERTICES	thirdparty/opengl/include/GL/glcorearb.h	458;"	d
GL_MAX_ELEMENT_INDEX	thirdparty/opengl/include/GL/glcorearb.h	2273;"	d
GL_MAX_EVAL_ORDER	thirdparty/glfw/src/deps/glad/glad.h	530;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	thirdparty/opengl/include/GL/glcorearb.h	2152;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	thirdparty/opengl/include/GL/glcorearb.h	2146;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	thirdparty/opengl/include/GL/glcorearb.h	2221;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	1357;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1558;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	thirdparty/opengl/include/GL/glcorearb.h	1740;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	2492;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	thirdparty/glfw/src/deps/glad/glad.h	1310;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	1441;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	967;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	730;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	thirdparty/opengl/include/GL/glcorearb.h	1913;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	thirdparty/opengl/include/GL/glcorearb.h	2336;"	d
GL_MAX_FRAMEBUFFER_LAYERS	thirdparty/opengl/include/GL/glcorearb.h	2337;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	thirdparty/opengl/include/GL/glcorearb.h	2338;"	d
GL_MAX_FRAMEBUFFER_WIDTH	thirdparty/opengl/include/GL/glcorearb.h	2335;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	thirdparty/opengl/include/GL/glcorearb.h	2151;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	thirdparty/opengl/include/GL/glcorearb.h	2145;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	thirdparty/opengl/include/GL/glcorearb.h	2220;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	1355;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1556;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	1356;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1557;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	thirdparty/glfw/src/deps/glad/glad.h	1352;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	thirdparty/opengl/include/GL/glcorearb.h	1553;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	thirdparty/opengl/include/GL/glcorearb.h	3180;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	thirdparty/opengl/include/GL/glcorearb.h	1738;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	2489;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	thirdparty/glfw/src/deps/glad/glad.h	1344;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	thirdparty/opengl/include/GL/glcorearb.h	1545;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3169;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	1353;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1554;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3181;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	thirdparty/glfw/src/deps/glad/glad.h	1309;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	1440;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	1351;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1552;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3179;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3177;"	d
GL_MAX_HEIGHT	thirdparty/opengl/include/GL/glcorearb.h	2355;"	d
GL_MAX_IMAGE_SAMPLES	thirdparty/opengl/include/GL/glcorearb.h	2212;"	d
GL_MAX_IMAGE_UNITS	thirdparty/opengl/include/GL/glcorearb.h	2172;"	d
GL_MAX_INTEGER_SAMPLES	thirdparty/glfw/src/deps/glad/glad.h	1400;"	d
GL_MAX_INTEGER_SAMPLES	thirdparty/opengl/include/GL/glcorearb.h	1601;"	d
GL_MAX_LABEL_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	3487;"	d
GL_MAX_LABEL_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	2326;"	d
GL_MAX_LABEL_LENGTH_KHR	thirdparty/glfw/src/deps/glad/glad.h	3525;"	d
GL_MAX_LAYERS	thirdparty/opengl/include/GL/glcorearb.h	2357;"	d
GL_MAX_LIGHTS	thirdparty/glfw/src/deps/glad/glad.h	531;"	d
GL_MAX_LIST_NESTING	thirdparty/glfw/src/deps/glad/glad.h	455;"	d
GL_MAX_MODELVIEW_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	535;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	thirdparty/opengl/include/GL/glcorearb.h	4935;"	d
GL_MAX_NAME_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	2457;"	d
GL_MAX_NAME_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	536;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	thirdparty/opengl/include/GL/glcorearb.h	2458;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	thirdparty/opengl/include/GL/glcorearb.h	2459;"	d
GL_MAX_PATCH_VERTICES	thirdparty/opengl/include/GL/glcorearb.h	1776;"	d
GL_MAX_PIXEL_MAP_TABLE	thirdparty/glfw/src/deps/glad/glad.h	533;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	thirdparty/glfw/src/deps/glad/glad.h	1063;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	thirdparty/opengl/include/GL/glcorearb.h	1026;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3705;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	thirdparty/opengl/include/GL/glcorearb.h	1727;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	thirdparty/opengl/include/GL/glcorearb.h	3704;"	d
GL_MAX_PROJECTION_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	537;"	d
GL_MAX_RASTER_SAMPLES_EXT	thirdparty/opengl/include/GL/glcorearb.h	4522;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1290;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1421;"	d
GL_MAX_RENDERBUFFER_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1154;"	d
GL_MAX_RENDERBUFFER_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1117;"	d
GL_MAX_SAMPLES	thirdparty/glfw/src/deps/glad/glad.h	1234;"	d
GL_MAX_SAMPLES	thirdparty/opengl/include/GL/glcorearb.h	1197;"	d
GL_MAX_SAMPLE_MASK_WORDS	thirdparty/glfw/src/deps/glad/glad.h	1383;"	d
GL_MAX_SAMPLE_MASK_WORDS	thirdparty/opengl/include/GL/glcorearb.h	1584;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	thirdparty/glfw/src/deps/glad/glad.h	1365;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	thirdparty/opengl/include/GL/glcorearb.h	1566;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5386;"	d
GL_MAX_SHADER_COMPILER_THREADS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3371;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2496;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	thirdparty/opengl/include/GL/glcorearb.h	2495;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3613;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3614;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3612;"	d
GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV	thirdparty/opengl/include/GL/glcorearb.h	4846;"	d
GL_MAX_SUBROUTINES	thirdparty/opengl/include/GL/glcorearb.h	1760;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	thirdparty/opengl/include/GL/glcorearb.h	1761;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	thirdparty/opengl/include/GL/glcorearb.h	2149;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	thirdparty/opengl/include/GL/glcorearb.h	2143;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	thirdparty/opengl/include/GL/glcorearb.h	2218;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1788;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1782;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	2490;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	thirdparty/opengl/include/GL/glcorearb.h	1780;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1784;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	1786;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1778;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	thirdparty/opengl/include/GL/glcorearb.h	2150;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	thirdparty/opengl/include/GL/glcorearb.h	2144;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	thirdparty/opengl/include/GL/glcorearb.h	2219;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1789;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1785;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	2491;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	thirdparty/opengl/include/GL/glcorearb.h	1781;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	1787;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1779;"	d
GL_MAX_TESS_GEN_LEVEL	thirdparty/opengl/include/GL/glcorearb.h	1777;"	d
GL_MAX_TESS_PATCH_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1783;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1284;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1415;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3654;"	d
GL_MAX_TEXTURE_COORDS	thirdparty/glfw/src/deps/glad/glad.h	1015;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	thirdparty/glfw/src/deps/glad/glad.h	964;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	thirdparty/opengl/include/GL/glcorearb.h	727;"	d
GL_MAX_TEXTURE_LOD_BIAS	thirdparty/glfw/src/deps/glad/glad.h	843;"	d
GL_MAX_TEXTURE_LOD_BIAS	thirdparty/opengl/include/GL/glcorearb.h	576;"	d
GL_MAX_TEXTURE_SIZE	thirdparty/glfw/src/deps/glad/glad.h	273;"	d
GL_MAX_TEXTURE_SIZE	thirdparty/opengl/include/GL/glcorearb.h	195;"	d
GL_MAX_TEXTURE_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	538;"	d
GL_MAX_TEXTURE_UNITS	thirdparty/glfw/src/deps/glad/glad.h	798;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	thirdparty/opengl/include/GL/glcorearb.h	1800;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	1087;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1050;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	thirdparty/glfw/src/deps/glad/glad.h	1088;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	thirdparty/opengl/include/GL/glcorearb.h	1051;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	1080;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1043;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1313;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1444;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	thirdparty/glfw/src/deps/glad/glad.h	1312;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	thirdparty/opengl/include/GL/glcorearb.h	1443;"	d
GL_MAX_UNIFORM_LOCATIONS	thirdparty/opengl/include/GL/glcorearb.h	2329;"	d
GL_MAX_VARYING_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	1066;"	d
GL_MAX_VARYING_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1029;"	d
GL_MAX_VARYING_FLOATS	thirdparty/glfw/src/deps/glad/glad.h	969;"	d
GL_MAX_VARYING_FLOATS	thirdparty/opengl/include/GL/glcorearb.h	732;"	d
GL_MAX_VARYING_VECTORS	thirdparty/opengl/include/GL/glcorearb.h	1912;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	thirdparty/opengl/include/GL/glcorearb.h	2148;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	thirdparty/opengl/include/GL/glcorearb.h	2142;"	d
GL_MAX_VERTEX_ATTRIBS	thirdparty/glfw/src/deps/glad/glad.h	962;"	d
GL_MAX_VERTEX_ATTRIBS	thirdparty/opengl/include/GL/glcorearb.h	725;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	thirdparty/opengl/include/GL/glcorearb.h	2515;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	thirdparty/opengl/include/GL/glcorearb.h	2514;"	d
GL_MAX_VERTEX_ATTRIB_STRIDE	thirdparty/opengl/include/GL/glcorearb.h	2609;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	thirdparty/opengl/include/GL/glcorearb.h	2217;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	1354;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	1555;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	2488;"	d
GL_MAX_VERTEX_STREAMS	thirdparty/opengl/include/GL/glcorearb.h	1742;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	thirdparty/glfw/src/deps/glad/glad.h	970;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	thirdparty/opengl/include/GL/glcorearb.h	733;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	thirdparty/glfw/src/deps/glad/glad.h	1308;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	thirdparty/opengl/include/GL/glcorearb.h	1439;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	968;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	731;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	thirdparty/opengl/include/GL/glcorearb.h	1911;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3178;"	d
GL_MAX_VIEWPORTS	thirdparty/opengl/include/GL/glcorearb.h	1928;"	d
GL_MAX_VIEWPORT_DIMS	thirdparty/glfw/src/deps/glad/glad.h	274;"	d
GL_MAX_VIEWPORT_DIMS	thirdparty/opengl/include/GL/glcorearb.h	196;"	d
GL_MAX_VIEWS_OVR	thirdparty/opengl/include/GL/glcorearb.h	5581;"	d
GL_MAX_WIDTH	thirdparty/opengl/include/GL/glcorearb.h	2354;"	d
GL_MAX_WINDOW_RECTANGLES_EXT	thirdparty/opengl/include/GL/glcorearb.h	4574;"	d
GL_MEDIUM_FLOAT	thirdparty/opengl/include/GL/glcorearb.h	1903;"	d
GL_MEDIUM_INT	thirdparty/opengl/include/GL/glcorearb.h	1906;"	d
GL_MIN	thirdparty/glfw/src/deps/glad/glad.h	876;"	d
GL_MIN	thirdparty/opengl/include/GL/glcorearb.h	586;"	d
GL_MINOR_VERSION	thirdparty/glfw/src/deps/glad/glad.h	1050;"	d
GL_MINOR_VERSION	thirdparty/opengl/include/GL/glcorearb.h	1013;"	d
GL_MINUS_CLAMPED_NV	thirdparty/opengl/include/GL/glcorearb.h	4724;"	d
GL_MINUS_NV	thirdparty/opengl/include/GL/glcorearb.h	4725;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	thirdparty/opengl/include/GL/glcorearb.h	1739;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	thirdparty/opengl/include/GL/glcorearb.h	2129;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	thirdparty/glfw/src/deps/glad/glad.h	1062;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	thirdparty/opengl/include/GL/glcorearb.h	1025;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	thirdparty/opengl/include/GL/glcorearb.h	1726;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	thirdparty/opengl/include/GL/glcorearb.h	3703;"	d
GL_MIN_SAMPLE_SHADING_VALUE	thirdparty/opengl/include/GL/glcorearb.h	1725;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3477;"	d
GL_MIPMAP	thirdparty/opengl/include/GL/glcorearb.h	2375;"	d
GL_MIRRORED_REPEAT	thirdparty/glfw/src/deps/glad/glad.h	842;"	d
GL_MIRRORED_REPEAT	thirdparty/opengl/include/GL/glcorearb.h	575;"	d
GL_MIRRORED_REPEAT_ARB	thirdparty/opengl/include/GL/glcorearb.h	3714;"	d
GL_MIRROR_CLAMP_TO_EDGE	thirdparty/opengl/include/GL/glcorearb.h	2627;"	d
GL_MITER_REVERT_NV	thirdparty/opengl/include/GL/glcorearb.h	5109;"	d
GL_MITER_TRUNCATE_NV	thirdparty/opengl/include/GL/glcorearb.h	5110;"	d
GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV	thirdparty/opengl/include/GL/glcorearb.h	4917;"	d
GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV	thirdparty/opengl/include/GL/glcorearb.h	4918;"	d
GL_MODELVIEW	thirdparty/glfw/src/deps/glad/glad.h	623;"	d
GL_MODELVIEW_MATRIX	thirdparty/glfw/src/deps/glad/glad.h	481;"	d
GL_MODELVIEW_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	478;"	d
GL_MODULATE	thirdparty/glfw/src/deps/glad/glad.h	638;"	d
GL_MOVE_TO_CONTINUES_NV	thirdparty/opengl/include/GL/glcorearb.h	5128;"	d
GL_MOVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5130;"	d
GL_MOVE_TO_RESETS_NV	thirdparty/opengl/include/GL/glcorearb.h	5127;"	d
GL_MULT	thirdparty/glfw/src/deps/glad/glad.h	398;"	d
GL_MULTIPLY_KHR	thirdparty/opengl/include/GL/glcorearb.h	3817;"	d
GL_MULTIPLY_NV	thirdparty/opengl/include/GL/glcorearb.h	4726;"	d
GL_MULTISAMPLE	thirdparty/glfw/src/deps/glad/glad.h	771;"	d
GL_MULTISAMPLE	thirdparty/opengl/include/GL/glcorearb.h	517;"	d
GL_MULTISAMPLES_NV	thirdparty/opengl/include/GL/glcorearb.h	5050;"	d
GL_MULTISAMPLE_ARB	thirdparty/glfw/src/deps/glad/glad.h	3443;"	d
GL_MULTISAMPLE_BIT	thirdparty/glfw/src/deps/glad/glad.h	803;"	d
GL_MULTISAMPLE_BIT_ARB	thirdparty/glfw/src/deps/glad/glad.h	3451;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	thirdparty/opengl/include/GL/glcorearb.h	4936;"	d
GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB	thirdparty/opengl/include/GL/glcorearb.h	2910;"	d
GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB	thirdparty/opengl/include/GL/glcorearb.h	2909;"	d
GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT	thirdparty/opengl/include/GL/glcorearb.h	4524;"	d
GL_N3F_V3F	thirdparty/glfw/src/deps/glad/glad.h	674;"	d
GL_NAMED_STRING_LENGTH_ARB	thirdparty/opengl/include/GL/glcorearb.h	3567;"	d
GL_NAMED_STRING_TYPE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3568;"	d
GL_NAME_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	2460;"	d
GL_NAME_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	551;"	d
GL_NAND	thirdparty/glfw/src/deps/glad/glad.h	320;"	d
GL_NAND	thirdparty/opengl/include/GL/glcorearb.h	229;"	d
GL_NEAREST	thirdparty/glfw/src/deps/glad/glad.h	345;"	d
GL_NEAREST	thirdparty/opengl/include/GL/glcorearb.h	254;"	d
GL_NEAREST_MIPMAP_LINEAR	thirdparty/glfw/src/deps/glad/glad.h	349;"	d
GL_NEAREST_MIPMAP_LINEAR	thirdparty/opengl/include/GL/glcorearb.h	258;"	d
GL_NEAREST_MIPMAP_NEAREST	thirdparty/glfw/src/deps/glad/glad.h	347;"	d
GL_NEAREST_MIPMAP_NEAREST	thirdparty/opengl/include/GL/glcorearb.h	256;"	d
GL_NEGATIVE_ONE_TO_ONE	thirdparty/opengl/include/GL/glcorearb.h	2653;"	d
GL_NEVER	thirdparty/glfw/src/deps/glad/glad.h	182;"	d
GL_NEVER	thirdparty/opengl/include/GL/glcorearb.h	105;"	d
GL_NICEST	thirdparty/glfw/src/deps/glad/glad.h	295;"	d
GL_NICEST	thirdparty/opengl/include/GL/glcorearb.h	205;"	d
GL_NONE	thirdparty/glfw/src/deps/glad/glad.h	201;"	d
GL_NONE	thirdparty/glfw/src/internal.h	80;"	d
GL_NONE	thirdparty/opengl/include/GL/glcorearb.h	124;"	d
GL_NOOP	thirdparty/glfw/src/deps/glad/glad.h	311;"	d
GL_NOOP	thirdparty/opengl/include/GL/glcorearb.h	220;"	d
GL_NOP_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4771;"	d
GL_NOR	thirdparty/glfw/src/deps/glad/glad.h	314;"	d
GL_NOR	thirdparty/opengl/include/GL/glcorearb.h	223;"	d
GL_NORMALIZE	thirdparty/glfw/src/deps/glad/glad.h	477;"	d
GL_NORMAL_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	579;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5504;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	911;"	d
GL_NORMAL_ARRAY_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5514;"	d
GL_NORMAL_ARRAY_POINTER	thirdparty/glfw/src/deps/glad/glad.h	433;"	d
GL_NORMAL_ARRAY_STRIDE	thirdparty/glfw/src/deps/glad/glad.h	588;"	d
GL_NORMAL_ARRAY_TYPE	thirdparty/glfw/src/deps/glad/glad.h	587;"	d
GL_NORMAL_MAP	thirdparty/glfw/src/deps/glad/glad.h	804;"	d
GL_NOTEQUAL	thirdparty/glfw/src/deps/glad/glad.h	187;"	d
GL_NOTEQUAL	thirdparty/opengl/include/GL/glcorearb.h	110;"	d
GL_NO_ERROR	thirdparty/glfw/src/deps/glad/glad.h	211;"	d
GL_NO_ERROR	thirdparty/opengl/include/GL/glcorearb.h	134;"	d
GL_NO_ERROR	thirdparty/remotery/src/Remotery.c	5963;"	d	file:
GL_NO_RESET_NOTIFICATION	thirdparty/opengl/include/GL/glcorearb.h	2670;"	d
GL_NO_RESET_NOTIFICATION_ARB	thirdparty/glfw/src/deps/glad/glad.h	3458;"	d
GL_NO_RESET_NOTIFICATION_ARB	thirdparty/glfw/src/internal.h	93;"	d
GL_NO_RESET_NOTIFICATION_ARB	thirdparty/opengl/include/GL/glcorearb.h	3429;"	d
GL_NUM_ACTIVE_VARIABLES	thirdparty/opengl/include/GL/glcorearb.h	2471;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	thirdparty/opengl/include/GL/glcorearb.h	1762;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	thirdparty/glfw/src/deps/glad/glad.h	794;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	thirdparty/opengl/include/GL/glcorearb.h	540;"	d
GL_NUM_EXTENSIONS	thirdparty/glfw/src/deps/glad/glad.h	1051;"	d
GL_NUM_EXTENSIONS	thirdparty/glfw/src/internal.h	84;"	d
GL_NUM_EXTENSIONS	thirdparty/opengl/include/GL/glcorearb.h	1014;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	thirdparty/opengl/include/GL/glcorearb.h	1917;"	d
GL_NUM_SAMPLE_COUNTS	thirdparty/opengl/include/GL/glcorearb.h	2128;"	d
GL_NUM_SHADER_BINARY_FORMATS	thirdparty/opengl/include/GL/glcorearb.h	1910;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	thirdparty/opengl/include/GL/glcorearb.h	2259;"	d
GL_NUM_SPARSE_LEVELS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3607;"	d
GL_NUM_VIRTUAL_PAGE_SIZES_ARB	thirdparty/opengl/include/GL/glcorearb.h	3608;"	d
GL_NUM_WINDOW_RECTANGLES_EXT	thirdparty/opengl/include/GL/glcorearb.h	4575;"	d
GL_NV_bindless_multi_draw_indirect	thirdparty/opengl/include/GL/glcorearb.h	4642;"	d
GL_NV_bindless_multi_draw_indirect_count	thirdparty/opengl/include/GL/glcorearb.h	4652;"	d
GL_NV_bindless_texture	thirdparty/opengl/include/GL/glcorearb.h	4662;"	d
GL_NV_blend_equation_advanced	thirdparty/opengl/include/GL/glcorearb.h	4694;"	d
GL_NV_blend_equation_advanced_coherent	thirdparty/opengl/include/GL/glcorearb.h	4753;"	d
GL_NV_clip_space_w_scaling	thirdparty/opengl/include/GL/glcorearb.h	4758;"	d
GL_NV_command_list	thirdparty/opengl/include/GL/glcorearb.h	4769;"	d
GL_NV_conditional_render	thirdparty/opengl/include/GL/glcorearb.h	4828;"	d
GL_NV_conservative_raster	thirdparty/opengl/include/GL/glcorearb.h	4842;"	d
GL_NV_conservative_raster_dilate	thirdparty/opengl/include/GL/glcorearb.h	4854;"	d
GL_NV_conservative_raster_pre_snap_triangles	thirdparty/opengl/include/GL/glcorearb.h	4865;"	d
GL_NV_draw_vulkan_image	thirdparty/opengl/include/GL/glcorearb.h	4876;"	d
GL_NV_fill_rectangle	thirdparty/opengl/include/GL/glcorearb.h	4893;"	d
GL_NV_fragment_coverage_to_color	thirdparty/opengl/include/GL/glcorearb.h	4898;"	d
GL_NV_fragment_shader_interlock	thirdparty/opengl/include/GL/glcorearb.h	4908;"	d
GL_NV_framebuffer_mixed_samples	thirdparty/opengl/include/GL/glcorearb.h	4912;"	d
GL_NV_framebuffer_multisample_coverage	thirdparty/opengl/include/GL/glcorearb.h	4932;"	d
GL_NV_geometry_shader_passthrough	thirdparty/opengl/include/GL/glcorearb.h	4944;"	d
GL_NV_gpu_shader5	thirdparty/opengl/include/GL/glcorearb.h	4948;"	d
GL_NV_internalformat_sample_query	thirdparty/opengl/include/GL/glcorearb.h	5049;"	d
GL_NV_path_rendering	thirdparty/opengl/include/GL/glcorearb.h	5061;"	d
GL_NV_path_rendering_shared_edge	thirdparty/opengl/include/GL/glcorearb.h	5334;"	d
GL_NV_sample_locations	thirdparty/opengl/include/GL/glcorearb.h	5339;"	d
GL_NV_sample_mask_override_coverage	thirdparty/opengl/include/GL/glcorearb.h	5359;"	d
GL_NV_shader_atomic_counters	thirdparty/opengl/include/GL/glcorearb.h	5363;"	d
GL_NV_shader_atomic_float	thirdparty/opengl/include/GL/glcorearb.h	5367;"	d
GL_NV_shader_atomic_float64	thirdparty/opengl/include/GL/glcorearb.h	5371;"	d
GL_NV_shader_atomic_fp16_vector	thirdparty/opengl/include/GL/glcorearb.h	5375;"	d
GL_NV_shader_atomic_int64	thirdparty/opengl/include/GL/glcorearb.h	5379;"	d
GL_NV_shader_buffer_load	thirdparty/opengl/include/GL/glcorearb.h	5383;"	d
GL_NV_shader_buffer_store	thirdparty/opengl/include/GL/glcorearb.h	5420;"	d
GL_NV_shader_thread_group	thirdparty/opengl/include/GL/glcorearb.h	5425;"	d
GL_NV_shader_thread_shuffle	thirdparty/opengl/include/GL/glcorearb.h	5432;"	d
GL_NV_stereo_view_rendering	thirdparty/opengl/include/GL/glcorearb.h	5436;"	d
GL_NV_texture_barrier	thirdparty/opengl/include/GL/glcorearb.h	5440;"	d
GL_NV_uniform_buffer_unified_memory	thirdparty/opengl/include/GL/glcorearb.h	5448;"	d
GL_NV_vertex_attrib_integer_64bit	thirdparty/opengl/include/GL/glcorearb.h	5455;"	d
GL_NV_vertex_buffer_unified_memory	thirdparty/opengl/include/GL/glcorearb.h	5499;"	d
GL_NV_viewport_array2	thirdparty/opengl/include/GL/glcorearb.h	5554;"	d
GL_NV_viewport_swizzle	thirdparty/opengl/include/GL/glcorearb.h	5558;"	d
GL_OBJECT_LINEAR	thirdparty/glfw/src/deps/glad/glad.h	644;"	d
GL_OBJECT_PLANE	thirdparty/glfw/src/deps/glad/glad.h	647;"	d
GL_OBJECT_TYPE	thirdparty/glfw/src/deps/glad/glad.h	1366;"	d
GL_OBJECT_TYPE	thirdparty/opengl/include/GL/glcorearb.h	1567;"	d
GL_OFFSET	thirdparty/opengl/include/GL/glcorearb.h	2463;"	d
GL_ONE	thirdparty/glfw/src/deps/glad/glad.h	191;"	d
GL_ONE	thirdparty/opengl/include/GL/glcorearb.h	114;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	881;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	591;"	d
GL_ONE_MINUS_CONSTANT_COLOR	thirdparty/glfw/src/deps/glad/glad.h	879;"	d
GL_ONE_MINUS_CONSTANT_COLOR	thirdparty/opengl/include/GL/glcorearb.h	589;"	d
GL_ONE_MINUS_DST_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	197;"	d
GL_ONE_MINUS_DST_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	120;"	d
GL_ONE_MINUS_DST_COLOR	thirdparty/glfw/src/deps/glad/glad.h	199;"	d
GL_ONE_MINUS_DST_COLOR	thirdparty/opengl/include/GL/glcorearb.h	122;"	d
GL_ONE_MINUS_SRC1_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	1649;"	d
GL_ONE_MINUS_SRC1_COLOR	thirdparty/opengl/include/GL/glcorearb.h	1648;"	d
GL_ONE_MINUS_SRC_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	195;"	d
GL_ONE_MINUS_SRC_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	118;"	d
GL_ONE_MINUS_SRC_COLOR	thirdparty/glfw/src/deps/glad/glad.h	193;"	d
GL_ONE_MINUS_SRC_COLOR	thirdparty/opengl/include/GL/glcorearb.h	116;"	d
GL_OPERAND0_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	822;"	d
GL_OPERAND0_RGB	thirdparty/glfw/src/deps/glad/glad.h	819;"	d
GL_OPERAND1_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	823;"	d
GL_OPERAND1_RGB	thirdparty/glfw/src/deps/glad/glad.h	820;"	d
GL_OPERAND2_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	824;"	d
GL_OPERAND2_RGB	thirdparty/glfw/src/deps/glad/glad.h	821;"	d
GL_OR	thirdparty/glfw/src/deps/glad/glad.h	313;"	d
GL_OR	thirdparty/opengl/include/GL/glcorearb.h	222;"	d
GL_ORDER	thirdparty/glfw/src/deps/glad/glad.h	420;"	d
GL_OR_INVERTED	thirdparty/glfw/src/deps/glad/glad.h	319;"	d
GL_OR_INVERTED	thirdparty/opengl/include/GL/glcorearb.h	228;"	d
GL_OR_REVERSE	thirdparty/glfw/src/deps/glad/glad.h	317;"	d
GL_OR_REVERSE	thirdparty/opengl/include/GL/glcorearb.h	226;"	d
GL_OUT_OF_MEMORY	thirdparty/glfw/src/deps/glad/glad.h	215;"	d
GL_OUT_OF_MEMORY	thirdparty/opengl/include/GL/glcorearb.h	138;"	d
GL_OVERLAY_KHR	thirdparty/opengl/include/GL/glcorearb.h	3819;"	d
GL_OVERLAY_NV	thirdparty/opengl/include/GL/glcorearb.h	4727;"	d
GL_OVR_multiview	thirdparty/opengl/include/GL/glcorearb.h	5578;"	d
GL_OVR_multiview2	thirdparty/opengl/include/GL/glcorearb.h	5590;"	d
GL_PACK_ALIGNMENT	thirdparty/glfw/src/deps/glad/glad.h	272;"	d
GL_PACK_ALIGNMENT	thirdparty/opengl/include/GL/glcorearb.h	194;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	thirdparty/opengl/include/GL/glcorearb.h	2126;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	thirdparty/opengl/include/GL/glcorearb.h	2125;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2127;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	thirdparty/opengl/include/GL/glcorearb.h	2124;"	d
GL_PACK_IMAGE_HEIGHT	thirdparty/glfw/src/deps/glad/glad.h	704;"	d
GL_PACK_IMAGE_HEIGHT	thirdparty/opengl/include/GL/glcorearb.h	441;"	d
GL_PACK_LSB_FIRST	thirdparty/glfw/src/deps/glad/glad.h	268;"	d
GL_PACK_LSB_FIRST	thirdparty/opengl/include/GL/glcorearb.h	190;"	d
GL_PACK_ROW_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	269;"	d
GL_PACK_ROW_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	191;"	d
GL_PACK_SKIP_IMAGES	thirdparty/glfw/src/deps/glad/glad.h	703;"	d
GL_PACK_SKIP_IMAGES	thirdparty/opengl/include/GL/glcorearb.h	440;"	d
GL_PACK_SKIP_PIXELS	thirdparty/glfw/src/deps/glad/glad.h	271;"	d
GL_PACK_SKIP_PIXELS	thirdparty/opengl/include/GL/glcorearb.h	193;"	d
GL_PACK_SKIP_ROWS	thirdparty/glfw/src/deps/glad/glad.h	270;"	d
GL_PACK_SKIP_ROWS	thirdparty/opengl/include/GL/glcorearb.h	192;"	d
GL_PACK_SWAP_BYTES	thirdparty/glfw/src/deps/glad/glad.h	267;"	d
GL_PACK_SWAP_BYTES	thirdparty/opengl/include/GL/glcorearb.h	189;"	d
GL_PARAMETER_BUFFER_ARB	thirdparty/opengl/include/GL/glcorearb.h	3317;"	d
GL_PARAMETER_BUFFER_BINDING_ARB	thirdparty/opengl/include/GL/glcorearb.h	3318;"	d
GL_PASS_THROUGH_TOKEN	thirdparty/glfw/src/deps/glad/glad.h	409;"	d
GL_PATCHES	thirdparty/opengl/include/GL/glcorearb.h	1764;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	thirdparty/opengl/include/GL/glcorearb.h	1766;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	thirdparty/opengl/include/GL/glcorearb.h	1767;"	d
GL_PATCH_VERTICES	thirdparty/opengl/include/GL/glcorearb.h	1765;"	d
GL_PATH_CLIENT_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5077;"	d
GL_PATH_COMMAND_COUNT_NV	thirdparty/opengl/include/GL/glcorearb.h	5099;"	d
GL_PATH_COMPUTED_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5102;"	d
GL_PATH_COORD_COUNT_NV	thirdparty/opengl/include/GL/glcorearb.h	5100;"	d
GL_PATH_COVER_DEPTH_FUNC_NV	thirdparty/opengl/include/GL/glcorearb.h	5125;"	d
GL_PATH_DASH_ARRAY_COUNT_NV	thirdparty/opengl/include/GL/glcorearb.h	5101;"	d
GL_PATH_DASH_CAPS_NV	thirdparty/opengl/include/GL/glcorearb.h	5073;"	d
GL_PATH_DASH_OFFSET_NV	thirdparty/opengl/include/GL/glcorearb.h	5076;"	d
GL_PATH_DASH_OFFSET_RESET_NV	thirdparty/opengl/include/GL/glcorearb.h	5126;"	d
GL_PATH_END_CAPS_NV	thirdparty/opengl/include/GL/glcorearb.h	5068;"	d
GL_PATH_ERROR_POSITION_NV	thirdparty/opengl/include/GL/glcorearb.h	5113;"	d
GL_PATH_FILL_BOUNDING_BOX_NV	thirdparty/opengl/include/GL/glcorearb.h	5103;"	d
GL_PATH_FILL_COVER_MODE_NV	thirdparty/opengl/include/GL/glcorearb.h	5080;"	d
GL_PATH_FILL_MASK_NV	thirdparty/opengl/include/GL/glcorearb.h	5079;"	d
GL_PATH_FILL_MODE_NV	thirdparty/opengl/include/GL/glcorearb.h	5078;"	d
GL_PATH_FORMAT_PS_NV	thirdparty/opengl/include/GL/glcorearb.h	5063;"	d
GL_PATH_FORMAT_SVG_NV	thirdparty/opengl/include/GL/glcorearb.h	5062;"	d
GL_PATH_GEN_COEFF_NV	thirdparty/opengl/include/GL/glcorearb.h	5118;"	d
GL_PATH_GEN_COMPONENTS_NV	thirdparty/opengl/include/GL/glcorearb.h	5119;"	d
GL_PATH_GEN_MODE_NV	thirdparty/opengl/include/GL/glcorearb.h	5117;"	d
GL_PATH_INITIAL_DASH_CAP_NV	thirdparty/opengl/include/GL/glcorearb.h	5074;"	d
GL_PATH_INITIAL_END_CAP_NV	thirdparty/opengl/include/GL/glcorearb.h	5069;"	d
GL_PATH_JOIN_STYLE_NV	thirdparty/opengl/include/GL/glcorearb.h	5071;"	d
GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5208;"	d
GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5212;"	d
GL_PATH_MITER_LIMIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5072;"	d
GL_PATH_MODELVIEW_MATRIX_NV	thirdparty/opengl/include/GL/glcorearb.h	5207;"	d
GL_PATH_MODELVIEW_NV	thirdparty/opengl/include/GL/glcorearb.h	5205;"	d
GL_PATH_MODELVIEW_STACK_DEPTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5206;"	d
GL_PATH_OBJECT_BOUNDING_BOX_NV	thirdparty/opengl/include/GL/glcorearb.h	5085;"	d
GL_PATH_PROJECTION_MATRIX_NV	thirdparty/opengl/include/GL/glcorearb.h	5211;"	d
GL_PATH_PROJECTION_NV	thirdparty/opengl/include/GL/glcorearb.h	5204;"	d
GL_PATH_PROJECTION_STACK_DEPTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5210;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV	thirdparty/opengl/include/GL/glcorearb.h	5123;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV	thirdparty/opengl/include/GL/glcorearb.h	5124;"	d
GL_PATH_STENCIL_FUNC_NV	thirdparty/opengl/include/GL/glcorearb.h	5120;"	d
GL_PATH_STENCIL_REF_NV	thirdparty/opengl/include/GL/glcorearb.h	5121;"	d
GL_PATH_STENCIL_VALUE_MASK_NV	thirdparty/opengl/include/GL/glcorearb.h	5122;"	d
GL_PATH_STROKE_BOUNDING_BOX_NV	thirdparty/opengl/include/GL/glcorearb.h	5104;"	d
GL_PATH_STROKE_COVER_MODE_NV	thirdparty/opengl/include/GL/glcorearb.h	5081;"	d
GL_PATH_STROKE_MASK_NV	thirdparty/opengl/include/GL/glcorearb.h	5082;"	d
GL_PATH_STROKE_WIDTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5067;"	d
GL_PATH_TERMINAL_DASH_CAP_NV	thirdparty/opengl/include/GL/glcorearb.h	5075;"	d
GL_PATH_TERMINAL_END_CAP_NV	thirdparty/opengl/include/GL/glcorearb.h	5070;"	d
GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV	thirdparty/opengl/include/GL/glcorearb.h	5209;"	d
GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV	thirdparty/opengl/include/GL/glcorearb.h	5213;"	d
GL_PERCENTAGE_AMD	thirdparty/opengl/include/GL/glcorearb.h	3910;"	d
GL_PERFMON_RESULT_AMD	thirdparty/opengl/include/GL/glcorearb.h	3913;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	thirdparty/opengl/include/GL/glcorearb.h	3911;"	d
GL_PERFMON_RESULT_SIZE_AMD	thirdparty/opengl/include/GL/glcorearb.h	3912;"	d
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4612;"	d
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4611;"	d
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4610;"	d
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4608;"	d
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4609;"	d
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4615;"	d
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4603;"	d
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4604;"	d
GL_PERFQUERY_COUNTER_EVENT_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4602;"	d
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4614;"	d
GL_PERFQUERY_COUNTER_RAW_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4606;"	d
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4605;"	d
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4607;"	d
GL_PERFQUERY_DONOT_FLUSH_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4601;"	d
GL_PERFQUERY_FLUSH_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4600;"	d
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4598;"	d
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4616;"	d
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4613;"	d
GL_PERFQUERY_SINGLE_CONTEXT_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4597;"	d
GL_PERFQUERY_WAIT_INTEL	thirdparty/opengl/include/GL/glcorearb.h	4599;"	d
GL_PERSPECTIVE_CORRECTION_HINT	thirdparty/glfw/src/deps/glad/glad.h	497;"	d
GL_PINLIGHT_NV	thirdparty/opengl/include/GL/glcorearb.h	4728;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2165;"	d
GL_PIXEL_MAP_A_TO_A	thirdparty/glfw/src/deps/glad/glad.h	431;"	d
GL_PIXEL_MAP_A_TO_A_SIZE	thirdparty/glfw/src/deps/glad/glad.h	513;"	d
GL_PIXEL_MAP_B_TO_B	thirdparty/glfw/src/deps/glad/glad.h	430;"	d
GL_PIXEL_MAP_B_TO_B_SIZE	thirdparty/glfw/src/deps/glad/glad.h	512;"	d
GL_PIXEL_MAP_G_TO_G	thirdparty/glfw/src/deps/glad/glad.h	429;"	d
GL_PIXEL_MAP_G_TO_G_SIZE	thirdparty/glfw/src/deps/glad/glad.h	511;"	d
GL_PIXEL_MAP_I_TO_A	thirdparty/glfw/src/deps/glad/glad.h	427;"	d
GL_PIXEL_MAP_I_TO_A_SIZE	thirdparty/glfw/src/deps/glad/glad.h	509;"	d
GL_PIXEL_MAP_I_TO_B	thirdparty/glfw/src/deps/glad/glad.h	426;"	d
GL_PIXEL_MAP_I_TO_B_SIZE	thirdparty/glfw/src/deps/glad/glad.h	508;"	d
GL_PIXEL_MAP_I_TO_G	thirdparty/glfw/src/deps/glad/glad.h	425;"	d
GL_PIXEL_MAP_I_TO_G_SIZE	thirdparty/glfw/src/deps/glad/glad.h	507;"	d
GL_PIXEL_MAP_I_TO_I	thirdparty/glfw/src/deps/glad/glad.h	422;"	d
GL_PIXEL_MAP_I_TO_I_SIZE	thirdparty/glfw/src/deps/glad/glad.h	504;"	d
GL_PIXEL_MAP_I_TO_R	thirdparty/glfw/src/deps/glad/glad.h	424;"	d
GL_PIXEL_MAP_I_TO_R_SIZE	thirdparty/glfw/src/deps/glad/glad.h	506;"	d
GL_PIXEL_MAP_R_TO_R	thirdparty/glfw/src/deps/glad/glad.h	428;"	d
GL_PIXEL_MAP_R_TO_R_SIZE	thirdparty/glfw/src/deps/glad/glad.h	510;"	d
GL_PIXEL_MAP_S_TO_S	thirdparty/glfw/src/deps/glad/glad.h	423;"	d
GL_PIXEL_MAP_S_TO_S_SIZE	thirdparty/glfw/src/deps/glad/glad.h	505;"	d
GL_PIXEL_MODE_BIT	thirdparty/glfw/src/deps/glad/glad.h	377;"	d
GL_PIXEL_PACK_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	1016;"	d
GL_PIXEL_PACK_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	967;"	d
GL_PIXEL_PACK_BUFFER_ARB	thirdparty/opengl/include/GL/glcorearb.h	3395;"	d
GL_PIXEL_PACK_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	1018;"	d
GL_PIXEL_PACK_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	969;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	thirdparty/opengl/include/GL/glcorearb.h	3397;"	d
GL_PIXEL_UNPACK_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	1017;"	d
GL_PIXEL_UNPACK_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	968;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	thirdparty/opengl/include/GL/glcorearb.h	3396;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	1019;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	970;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	thirdparty/opengl/include/GL/glcorearb.h	3398;"	d
GL_PLUS_CLAMPED_ALPHA_NV	thirdparty/opengl/include/GL/glcorearb.h	4729;"	d
GL_PLUS_CLAMPED_NV	thirdparty/opengl/include/GL/glcorearb.h	4730;"	d
GL_PLUS_DARKER_NV	thirdparty/opengl/include/GL/glcorearb.h	4731;"	d
GL_PLUS_NV	thirdparty/opengl/include/GL/glcorearb.h	4732;"	d
GL_POINT	thirdparty/glfw/src/deps/glad/glad.h	334;"	d
GL_POINT	thirdparty/opengl/include/GL/glcorearb.h	243;"	d
GL_POINTS	thirdparty/glfw/src/deps/glad/glad.h	174;"	d
GL_POINTS	thirdparty/opengl/include/GL/glcorearb.h	97;"	d
GL_POINT_BIT	thirdparty/glfw/src/deps/glad/glad.h	373;"	d
GL_POINT_DISTANCE_ATTENUATION	thirdparty/glfw/src/deps/glad/glad.h	852;"	d
GL_POINT_FADE_THRESHOLD_SIZE	thirdparty/glfw/src/deps/glad/glad.h	838;"	d
GL_POINT_FADE_THRESHOLD_SIZE	thirdparty/opengl/include/GL/glcorearb.h	571;"	d
GL_POINT_SIZE	thirdparty/glfw/src/deps/glad/glad.h	218;"	d
GL_POINT_SIZE	thirdparty/opengl/include/GL/glcorearb.h	141;"	d
GL_POINT_SIZE_GRANULARITY	thirdparty/glfw/src/deps/glad/glad.h	220;"	d
GL_POINT_SIZE_GRANULARITY	thirdparty/opengl/include/GL/glcorearb.h	143;"	d
GL_POINT_SIZE_MAX	thirdparty/glfw/src/deps/glad/glad.h	851;"	d
GL_POINT_SIZE_MIN	thirdparty/glfw/src/deps/glad/glad.h	850;"	d
GL_POINT_SIZE_RANGE	thirdparty/glfw/src/deps/glad/glad.h	219;"	d
GL_POINT_SIZE_RANGE	thirdparty/opengl/include/GL/glcorearb.h	142;"	d
GL_POINT_SMOOTH	thirdparty/glfw/src/deps/glad/glad.h	450;"	d
GL_POINT_SMOOTH_HINT	thirdparty/glfw/src/deps/glad/glad.h	498;"	d
GL_POINT_SPRITE	thirdparty/glfw/src/deps/glad/glad.h	1013;"	d
GL_POINT_SPRITE_COORD_ORIGIN	thirdparty/glfw/src/deps/glad/glad.h	1006;"	d
GL_POINT_SPRITE_COORD_ORIGIN	thirdparty/opengl/include/GL/glcorearb.h	769;"	d
GL_POINT_TOKEN	thirdparty/glfw/src/deps/glad/glad.h	410;"	d
GL_POLYGON	thirdparty/glfw/src/deps/glad/glad.h	394;"	d
GL_POLYGON_BIT	thirdparty/glfw/src/deps/glad/glad.h	375;"	d
GL_POLYGON_MODE	thirdparty/glfw/src/deps/glad/glad.h	225;"	d
GL_POLYGON_MODE	thirdparty/opengl/include/GL/glcorearb.h	148;"	d
GL_POLYGON_OFFSET_CLAMP_EXT	thirdparty/opengl/include/GL/glcorearb.h	4507;"	d
GL_POLYGON_OFFSET_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4784;"	d
GL_POLYGON_OFFSET_FACTOR	thirdparty/glfw/src/deps/glad/glad.h	282;"	d
GL_POLYGON_OFFSET_FACTOR	thirdparty/opengl/include/GL/glcorearb.h	374;"	d
GL_POLYGON_OFFSET_FILL	thirdparty/glfw/src/deps/glad/glad.h	281;"	d
GL_POLYGON_OFFSET_FILL	thirdparty/opengl/include/GL/glcorearb.h	373;"	d
GL_POLYGON_OFFSET_LINE	thirdparty/glfw/src/deps/glad/glad.h	280;"	d
GL_POLYGON_OFFSET_LINE	thirdparty/opengl/include/GL/glcorearb.h	372;"	d
GL_POLYGON_OFFSET_POINT	thirdparty/glfw/src/deps/glad/glad.h	279;"	d
GL_POLYGON_OFFSET_POINT	thirdparty/opengl/include/GL/glcorearb.h	371;"	d
GL_POLYGON_OFFSET_UNITS	thirdparty/glfw/src/deps/glad/glad.h	278;"	d
GL_POLYGON_OFFSET_UNITS	thirdparty/opengl/include/GL/glcorearb.h	370;"	d
GL_POLYGON_SMOOTH	thirdparty/glfw/src/deps/glad/glad.h	226;"	d
GL_POLYGON_SMOOTH	thirdparty/opengl/include/GL/glcorearb.h	149;"	d
GL_POLYGON_SMOOTH_HINT	thirdparty/glfw/src/deps/glad/glad.h	260;"	d
GL_POLYGON_SMOOTH_HINT	thirdparty/opengl/include/GL/glcorearb.h	182;"	d
GL_POLYGON_STIPPLE	thirdparty/glfw/src/deps/glad/glad.h	458;"	d
GL_POLYGON_STIPPLE_BIT	thirdparty/glfw/src/deps/glad/glad.h	376;"	d
GL_POLYGON_TOKEN	thirdparty/glfw/src/deps/glad/glad.h	412;"	d
GL_POSITION	thirdparty/glfw/src/deps/glad/glad.h	607;"	d
GL_PREVIOUS	thirdparty/glfw/src/deps/glad/glad.h	831;"	d
GL_PRIMARY_COLOR	thirdparty/glfw/src/deps/glad/glad.h	830;"	d
GL_PRIMITIVES_GENERATED	thirdparty/glfw/src/deps/glad/glad.h	1084;"	d
GL_PRIMITIVES_GENERATED	thirdparty/opengl/include/GL/glcorearb.h	1047;"	d
GL_PRIMITIVES_SUBMITTED_ARB	thirdparty/opengl/include/GL/glcorearb.h	3382;"	d
GL_PRIMITIVE_BOUNDING_BOX_ARB	thirdparty/opengl/include/GL/glcorearb.h	2908;"	d
GL_PRIMITIVE_RESTART	thirdparty/glfw/src/deps/glad/glad.h	1300;"	d
GL_PRIMITIVE_RESTART	thirdparty/opengl/include/GL/glcorearb.h	1431;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	thirdparty/opengl/include/GL/glcorearb.h	2271;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	thirdparty/opengl/include/GL/glcorearb.h	2610;"	d
GL_PRIMITIVE_RESTART_INDEX	thirdparty/glfw/src/deps/glad/glad.h	1301;"	d
GL_PRIMITIVE_RESTART_INDEX	thirdparty/opengl/include/GL/glcorearb.h	1432;"	d
GL_PROGRAM	thirdparty/glfw/src/deps/glad/glad.h	3483;"	d
GL_PROGRAM	thirdparty/opengl/include/GL/glcorearb.h	2322;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB	thirdparty/opengl/include/GL/glcorearb.h	3461;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_NV	thirdparty/opengl/include/GL/glcorearb.h	5345;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3459;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV	thirdparty/opengl/include/GL/glcorearb.h	5343;"	d
GL_PROGRAM_BINARY_FORMATS	thirdparty/opengl/include/GL/glcorearb.h	1918;"	d
GL_PROGRAM_BINARY_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	1916;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	thirdparty/opengl/include/GL/glcorearb.h	1915;"	d
GL_PROGRAM_INPUT	thirdparty/opengl/include/GL/glcorearb.h	2439;"	d
GL_PROGRAM_KHR	thirdparty/glfw/src/deps/glad/glad.h	3520;"	d
GL_PROGRAM_MATRIX_EXT	thirdparty/opengl/include/GL/glcorearb.h	3978;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	thirdparty/opengl/include/GL/glcorearb.h	3980;"	d
GL_PROGRAM_OBJECT_EXT	thirdparty/opengl/include/GL/glcorearb.h	3951;"	d
GL_PROGRAM_OUTPUT	thirdparty/opengl/include/GL/glcorearb.h	2440;"	d
GL_PROGRAM_PIPELINE	thirdparty/glfw/src/deps/glad/glad.h	3485;"	d
GL_PROGRAM_PIPELINE	thirdparty/opengl/include/GL/glcorearb.h	2324;"	d
GL_PROGRAM_PIPELINE_BINDING	thirdparty/opengl/include/GL/glcorearb.h	1927;"	d
GL_PROGRAM_PIPELINE_KHR	thirdparty/glfw/src/deps/glad/glad.h	3523;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	thirdparty/opengl/include/GL/glcorearb.h	3950;"	d
GL_PROGRAM_POINT_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1343;"	d
GL_PROGRAM_POINT_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1544;"	d
GL_PROGRAM_POINT_SIZE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3168;"	d
GL_PROGRAM_SEPARABLE	thirdparty/opengl/include/GL/glcorearb.h	1925;"	d
GL_PROJECTION	thirdparty/glfw/src/deps/glad/glad.h	624;"	d
GL_PROJECTION_MATRIX	thirdparty/glfw/src/deps/glad/glad.h	482;"	d
GL_PROJECTION_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	479;"	d
GL_PROVOKING_VERTEX	thirdparty/glfw/src/deps/glad/glad.h	1363;"	d
GL_PROVOKING_VERTEX	thirdparty/opengl/include/GL/glcorearb.h	1564;"	d
GL_PROXY_TEXTURE_1D	thirdparty/glfw/src/deps/glad/glad.h	355;"	d
GL_PROXY_TEXTURE_1D	thirdparty/opengl/include/GL/glcorearb.h	383;"	d
GL_PROXY_TEXTURE_1D_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1068;"	d
GL_PROXY_TEXTURE_1D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1031;"	d
GL_PROXY_TEXTURE_2D	thirdparty/glfw/src/deps/glad/glad.h	356;"	d
GL_PROXY_TEXTURE_2D	thirdparty/opengl/include/GL/glcorearb.h	384;"	d
GL_PROXY_TEXTURE_2D_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1070;"	d
GL_PROXY_TEXTURE_2D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1033;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	thirdparty/glfw/src/deps/glad/glad.h	1385;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	thirdparty/opengl/include/GL/glcorearb.h	1586;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1387;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1588;"	d
GL_PROXY_TEXTURE_3D	thirdparty/glfw/src/deps/glad/glad.h	708;"	d
GL_PROXY_TEXTURE_3D	thirdparty/opengl/include/GL/glcorearb.h	445;"	d
GL_PROXY_TEXTURE_CUBE_MAP	thirdparty/glfw/src/deps/glad/glad.h	787;"	d
GL_PROXY_TEXTURE_CUBE_MAP	thirdparty/opengl/include/GL/glcorearb.h	533;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1730;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3688;"	d
GL_PROXY_TEXTURE_RECTANGLE	thirdparty/glfw/src/deps/glad/glad.h	1289;"	d
GL_PROXY_TEXTURE_RECTANGLE	thirdparty/opengl/include/GL/glcorearb.h	1420;"	d
GL_Q	thirdparty/glfw/src/deps/glad/glad.h	637;"	d
GL_QUADRATIC_ATTENUATION	thirdparty/glfw/src/deps/glad/glad.h	613;"	d
GL_QUADRATIC_CURVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5138;"	d
GL_QUADS	thirdparty/glfw/src/deps/glad/glad.h	181;"	d
GL_QUADS	thirdparty/opengl/include/GL/glcorearb.h	104;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	thirdparty/glfw/src/deps/glad/glad.h	1360;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	thirdparty/opengl/include/GL/glcorearb.h	1561;"	d
GL_QUAD_STRIP	thirdparty/glfw/src/deps/glad/glad.h	393;"	d
GL_QUERY	thirdparty/glfw/src/deps/glad/glad.h	3484;"	d
GL_QUERY	thirdparty/opengl/include/GL/glcorearb.h	2323;"	d
GL_QUERY_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	2623;"	d
GL_QUERY_BUFFER_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2624;"	d
GL_QUERY_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	2625;"	d
GL_QUERY_BY_REGION_NO_WAIT	thirdparty/glfw/src/deps/glad/glad.h	1135;"	d
GL_QUERY_BY_REGION_NO_WAIT	thirdparty/opengl/include/GL/glcorearb.h	1098;"	d
GL_QUERY_BY_REGION_NO_WAIT_INVERTED	thirdparty/opengl/include/GL/glcorearb.h	2660;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	thirdparty/opengl/include/GL/glcorearb.h	4832;"	d
GL_QUERY_BY_REGION_WAIT	thirdparty/glfw/src/deps/glad/glad.h	1134;"	d
GL_QUERY_BY_REGION_WAIT	thirdparty/opengl/include/GL/glcorearb.h	1097;"	d
GL_QUERY_BY_REGION_WAIT_INVERTED	thirdparty/opengl/include/GL/glcorearb.h	2659;"	d
GL_QUERY_BY_REGION_WAIT_NV	thirdparty/opengl/include/GL/glcorearb.h	4831;"	d
GL_QUERY_COUNTER_BITS	thirdparty/glfw/src/deps/glad/glad.h	884;"	d
GL_QUERY_COUNTER_BITS	thirdparty/opengl/include/GL/glcorearb.h	621;"	d
GL_QUERY_KHR	thirdparty/glfw/src/deps/glad/glad.h	3522;"	d
GL_QUERY_NO_WAIT	thirdparty/glfw/src/deps/glad/glad.h	1133;"	d
GL_QUERY_NO_WAIT	thirdparty/opengl/include/GL/glcorearb.h	1096;"	d
GL_QUERY_NO_WAIT_INVERTED	thirdparty/opengl/include/GL/glcorearb.h	2658;"	d
GL_QUERY_NO_WAIT_NV	thirdparty/opengl/include/GL/glcorearb.h	4830;"	d
GL_QUERY_OBJECT_EXT	thirdparty/opengl/include/GL/glcorearb.h	3954;"	d
GL_QUERY_RESULT	thirdparty/glfw/src/deps/glad/glad.h	886;"	d
GL_QUERY_RESULT	thirdparty/opengl/include/GL/glcorearb.h	623;"	d
GL_QUERY_RESULT	thirdparty/remotery/src/Remotery.c	5964;"	d	file:
GL_QUERY_RESULT_AVAILABLE	thirdparty/glfw/src/deps/glad/glad.h	887;"	d
GL_QUERY_RESULT_AVAILABLE	thirdparty/opengl/include/GL/glcorearb.h	624;"	d
GL_QUERY_RESULT_AVAILABLE	thirdparty/remotery/src/Remotery.c	5965;"	d	file:
GL_QUERY_RESULT_NO_WAIT	thirdparty/opengl/include/GL/glcorearb.h	2626;"	d
GL_QUERY_TARGET	thirdparty/opengl/include/GL/glcorearb.h	2664;"	d
GL_QUERY_WAIT	thirdparty/glfw/src/deps/glad/glad.h	1132;"	d
GL_QUERY_WAIT	thirdparty/opengl/include/GL/glcorearb.h	1095;"	d
GL_QUERY_WAIT_INVERTED	thirdparty/opengl/include/GL/glcorearb.h	2657;"	d
GL_QUERY_WAIT_NV	thirdparty/opengl/include/GL/glcorearb.h	4829;"	d
GL_R	thirdparty/glfw/src/deps/glad/glad.h	636;"	d
GL_R11F_G11F_B10F	thirdparty/glfw/src/deps/glad/glad.h	1073;"	d
GL_R11F_G11F_B10F	thirdparty/opengl/include/GL/glcorearb.h	1036;"	d
GL_R16	thirdparty/glfw/src/deps/glad/glad.h	1253;"	d
GL_R16	thirdparty/opengl/include/GL/glcorearb.h	1213;"	d
GL_R16F	thirdparty/glfw/src/deps/glad/glad.h	1256;"	d
GL_R16F	thirdparty/opengl/include/GL/glcorearb.h	1216;"	d
GL_R16I	thirdparty/glfw/src/deps/glad/glad.h	1262;"	d
GL_R16I	thirdparty/opengl/include/GL/glcorearb.h	1222;"	d
GL_R16UI	thirdparty/glfw/src/deps/glad/glad.h	1263;"	d
GL_R16UI	thirdparty/opengl/include/GL/glcorearb.h	1223;"	d
GL_R16_SNORM	thirdparty/glfw/src/deps/glad/glad.h	1295;"	d
GL_R16_SNORM	thirdparty/opengl/include/GL/glcorearb.h	1426;"	d
GL_R32F	thirdparty/glfw/src/deps/glad/glad.h	1257;"	d
GL_R32F	thirdparty/opengl/include/GL/glcorearb.h	1217;"	d
GL_R32I	thirdparty/glfw/src/deps/glad/glad.h	1264;"	d
GL_R32I	thirdparty/opengl/include/GL/glcorearb.h	1224;"	d
GL_R32UI	thirdparty/glfw/src/deps/glad/glad.h	1265;"	d
GL_R32UI	thirdparty/opengl/include/GL/glcorearb.h	1225;"	d
GL_R3_G3_B2	thirdparty/glfw/src/deps/glad/glad.h	358;"	d
GL_R3_G3_B2	thirdparty/opengl/include/GL/glcorearb.h	385;"	d
GL_R8	thirdparty/glfw/src/deps/glad/glad.h	1252;"	d
GL_R8	thirdparty/opengl/include/GL/glcorearb.h	1212;"	d
GL_R8I	thirdparty/glfw/src/deps/glad/glad.h	1260;"	d
GL_R8I	thirdparty/opengl/include/GL/glcorearb.h	1220;"	d
GL_R8UI	thirdparty/glfw/src/deps/glad/glad.h	1261;"	d
GL_R8UI	thirdparty/opengl/include/GL/glcorearb.h	1221;"	d
GL_R8_SNORM	thirdparty/glfw/src/deps/glad/glad.h	1291;"	d
GL_R8_SNORM	thirdparty/opengl/include/GL/glcorearb.h	1422;"	d
GL_RASTERIZER_DISCARD	thirdparty/glfw/src/deps/glad/glad.h	1086;"	d
GL_RASTERIZER_DISCARD	thirdparty/opengl/include/GL/glcorearb.h	1049;"	d
GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT	thirdparty/opengl/include/GL/glcorearb.h	4523;"	d
GL_RASTER_MULTISAMPLE_EXT	thirdparty/opengl/include/GL/glcorearb.h	4520;"	d
GL_RASTER_SAMPLES_EXT	thirdparty/opengl/include/GL/glcorearb.h	4521;"	d
GL_READ_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	252;"	d
GL_READ_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	174;"	d
GL_READ_FRAMEBUFFER	thirdparty/glfw/src/deps/glad/glad.h	1168;"	d
GL_READ_FRAMEBUFFER	thirdparty/opengl/include/GL/glcorearb.h	1131;"	d
GL_READ_FRAMEBUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	1170;"	d
GL_READ_FRAMEBUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	1133;"	d
GL_READ_ONLY	thirdparty/glfw/src/deps/glad/glad.h	893;"	d
GL_READ_ONLY	thirdparty/opengl/include/GL/glcorearb.h	630;"	d
GL_READ_PIXELS	thirdparty/opengl/include/GL/glcorearb.h	2368;"	d
GL_READ_PIXELS_FORMAT	thirdparty/opengl/include/GL/glcorearb.h	2369;"	d
GL_READ_PIXELS_TYPE	thirdparty/opengl/include/GL/glcorearb.h	2370;"	d
GL_READ_WRITE	thirdparty/glfw/src/deps/glad/glad.h	895;"	d
GL_READ_WRITE	thirdparty/opengl/include/GL/glcorearb.h	632;"	d
GL_RECT_NV	thirdparty/opengl/include/GL/glcorearb.h	5157;"	d
GL_RED	thirdparty/glfw/src/deps/glad/glad.h	328;"	d
GL_RED	thirdparty/opengl/include/GL/glcorearb.h	237;"	d
GL_RED_BIAS	thirdparty/glfw/src/deps/glad/glad.h	519;"	d
GL_RED_BITS	thirdparty/glfw/src/deps/glad/glad.h	541;"	d
GL_RED_INTEGER	thirdparty/glfw/src/deps/glad/glad.h	1105;"	d
GL_RED_INTEGER	thirdparty/opengl/include/GL/glcorearb.h	1068;"	d
GL_RED_NV	thirdparty/opengl/include/GL/glcorearb.h	4733;"	d
GL_RED_SCALE	thirdparty/glfw/src/deps/glad/glad.h	518;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2478;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2477;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2476;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2474;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2475;"	d
GL_REFERENCED_BY_VERTEX_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2473;"	d
GL_REFLECTION_MAP	thirdparty/glfw/src/deps/glad/glad.h	805;"	d
GL_RELATIVE_ARC_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5162;"	d
GL_RELATIVE_CONIC_CURVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5201;"	d
GL_RELATIVE_CUBIC_CURVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5141;"	d
GL_RELATIVE_HORIZONTAL_LINE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5135;"	d
GL_RELATIVE_LARGE_CCW_ARC_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5151;"	d
GL_RELATIVE_LARGE_CW_ARC_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5153;"	d
GL_RELATIVE_LINE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5133;"	d
GL_RELATIVE_MOVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5131;"	d
GL_RELATIVE_QUADRATIC_CURVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5139;"	d
GL_RELATIVE_RECT_NV	thirdparty/opengl/include/GL/glcorearb.h	5195;"	d
GL_RELATIVE_ROUNDED_RECT2_NV	thirdparty/opengl/include/GL/glcorearb.h	5190;"	d
GL_RELATIVE_ROUNDED_RECT4_NV	thirdparty/opengl/include/GL/glcorearb.h	5192;"	d
GL_RELATIVE_ROUNDED_RECT8_NV	thirdparty/opengl/include/GL/glcorearb.h	5194;"	d
GL_RELATIVE_ROUNDED_RECT_NV	thirdparty/opengl/include/GL/glcorearb.h	5188;"	d
GL_RELATIVE_SMALL_CCW_ARC_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5147;"	d
GL_RELATIVE_SMALL_CW_ARC_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5149;"	d
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5145;"	d
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5143;"	d
GL_RELATIVE_VERTICAL_LINE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5137;"	d
GL_RENDER	thirdparty/glfw/src/deps/glad/glad.h	629;"	d
GL_RENDERBUFFER	thirdparty/glfw/src/deps/glad/glad.h	1219;"	d
GL_RENDERBUFFER	thirdparty/opengl/include/GL/glcorearb.h	1182;"	d
GL_RENDERBUFFER_ALPHA_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1230;"	d
GL_RENDERBUFFER_ALPHA_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1193;"	d
GL_RENDERBUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	1167;"	d
GL_RENDERBUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	1130;"	d
GL_RENDERBUFFER_BLUE_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1229;"	d
GL_RENDERBUFFER_BLUE_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1192;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	thirdparty/opengl/include/GL/glcorearb.h	4934;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	thirdparty/opengl/include/GL/glcorearb.h	4933;"	d
GL_RENDERBUFFER_DEPTH_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1231;"	d
GL_RENDERBUFFER_DEPTH_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1194;"	d
GL_RENDERBUFFER_GREEN_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1228;"	d
GL_RENDERBUFFER_GREEN_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1191;"	d
GL_RENDERBUFFER_HEIGHT	thirdparty/glfw/src/deps/glad/glad.h	1221;"	d
GL_RENDERBUFFER_HEIGHT	thirdparty/opengl/include/GL/glcorearb.h	1184;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	thirdparty/glfw/src/deps/glad/glad.h	1222;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	thirdparty/opengl/include/GL/glcorearb.h	1185;"	d
GL_RENDERBUFFER_RED_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1227;"	d
GL_RENDERBUFFER_RED_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1190;"	d
GL_RENDERBUFFER_SAMPLES	thirdparty/glfw/src/deps/glad/glad.h	1171;"	d
GL_RENDERBUFFER_SAMPLES	thirdparty/opengl/include/GL/glcorearb.h	1134;"	d
GL_RENDERBUFFER_STENCIL_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1232;"	d
GL_RENDERBUFFER_STENCIL_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1195;"	d
GL_RENDERBUFFER_WIDTH	thirdparty/glfw/src/deps/glad/glad.h	1220;"	d
GL_RENDERBUFFER_WIDTH	thirdparty/opengl/include/GL/glcorearb.h	1183;"	d
GL_RENDERER	thirdparty/glfw/src/deps/glad/glad.h	342;"	d
GL_RENDERER	thirdparty/opengl/include/GL/glcorearb.h	251;"	d
GL_RENDER_MODE	thirdparty/glfw/src/deps/glad/glad.h	496;"	d
GL_REPEAT	thirdparty/glfw/src/deps/glad/glad.h	357;"	d
GL_REPEAT	thirdparty/opengl/include/GL/glcorearb.h	264;"	d
GL_REPLACE	thirdparty/glfw/src/deps/glad/glad.h	338;"	d
GL_REPLACE	thirdparty/opengl/include/GL/glcorearb.h	247;"	d
GL_RESCALE_NORMAL	thirdparty/glfw/src/deps/glad/glad.h	733;"	d
GL_RESET_NOTIFICATION_STRATEGY	thirdparty/opengl/include/GL/glcorearb.h	2668;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	thirdparty/glfw/src/deps/glad/glad.h	3457;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	thirdparty/glfw/src/internal.h	91;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3428;"	d
GL_RESTART_PATH_NV	thirdparty/opengl/include/GL/glcorearb.h	5154;"	d
GL_RETURN	thirdparty/glfw/src/deps/glad/glad.h	397;"	d
GL_RG	thirdparty/glfw/src/deps/glad/glad.h	1250;"	d
GL_RG	thirdparty/opengl/include/GL/glcorearb.h	1210;"	d
GL_RG16	thirdparty/glfw/src/deps/glad/glad.h	1255;"	d
GL_RG16	thirdparty/opengl/include/GL/glcorearb.h	1215;"	d
GL_RG16F	thirdparty/glfw/src/deps/glad/glad.h	1258;"	d
GL_RG16F	thirdparty/opengl/include/GL/glcorearb.h	1218;"	d
GL_RG16I	thirdparty/glfw/src/deps/glad/glad.h	1268;"	d
GL_RG16I	thirdparty/opengl/include/GL/glcorearb.h	1228;"	d
GL_RG16UI	thirdparty/glfw/src/deps/glad/glad.h	1269;"	d
GL_RG16UI	thirdparty/opengl/include/GL/glcorearb.h	1229;"	d
GL_RG16_SNORM	thirdparty/glfw/src/deps/glad/glad.h	1296;"	d
GL_RG16_SNORM	thirdparty/opengl/include/GL/glcorearb.h	1427;"	d
GL_RG32F	thirdparty/glfw/src/deps/glad/glad.h	1259;"	d
GL_RG32F	thirdparty/opengl/include/GL/glcorearb.h	1219;"	d
GL_RG32I	thirdparty/glfw/src/deps/glad/glad.h	1270;"	d
GL_RG32I	thirdparty/opengl/include/GL/glcorearb.h	1230;"	d
GL_RG32UI	thirdparty/glfw/src/deps/glad/glad.h	1271;"	d
GL_RG32UI	thirdparty/opengl/include/GL/glcorearb.h	1231;"	d
GL_RG8	thirdparty/glfw/src/deps/glad/glad.h	1254;"	d
GL_RG8	thirdparty/opengl/include/GL/glcorearb.h	1214;"	d
GL_RG8I	thirdparty/glfw/src/deps/glad/glad.h	1266;"	d
GL_RG8I	thirdparty/opengl/include/GL/glcorearb.h	1226;"	d
GL_RG8UI	thirdparty/glfw/src/deps/glad/glad.h	1267;"	d
GL_RG8UI	thirdparty/opengl/include/GL/glcorearb.h	1227;"	d
GL_RG8_SNORM	thirdparty/glfw/src/deps/glad/glad.h	1292;"	d
GL_RG8_SNORM	thirdparty/opengl/include/GL/glcorearb.h	1423;"	d
GL_RGB	thirdparty/glfw/src/deps/glad/glad.h	332;"	d
GL_RGB	thirdparty/opengl/include/GL/glcorearb.h	241;"	d
GL_RGB10	thirdparty/glfw/src/deps/glad/glad.h	362;"	d
GL_RGB10	thirdparty/opengl/include/GL/glcorearb.h	389;"	d
GL_RGB10_A2	thirdparty/glfw/src/deps/glad/glad.h	369;"	d
GL_RGB10_A2	thirdparty/opengl/include/GL/glcorearb.h	396;"	d
GL_RGB10_A2UI	thirdparty/opengl/include/GL/glcorearb.h	1653;"	d
GL_RGB12	thirdparty/glfw/src/deps/glad/glad.h	363;"	d
GL_RGB12	thirdparty/opengl/include/GL/glcorearb.h	390;"	d
GL_RGB16	thirdparty/glfw/src/deps/glad/glad.h	364;"	d
GL_RGB16	thirdparty/opengl/include/GL/glcorearb.h	391;"	d
GL_RGB16F	thirdparty/glfw/src/deps/glad/glad.h	1059;"	d
GL_RGB16F	thirdparty/opengl/include/GL/glcorearb.h	1022;"	d
GL_RGB16I	thirdparty/glfw/src/deps/glad/glad.h	1102;"	d
GL_RGB16I	thirdparty/opengl/include/GL/glcorearb.h	1065;"	d
GL_RGB16UI	thirdparty/glfw/src/deps/glad/glad.h	1096;"	d
GL_RGB16UI	thirdparty/opengl/include/GL/glcorearb.h	1059;"	d
GL_RGB16_SNORM	thirdparty/glfw/src/deps/glad/glad.h	1297;"	d
GL_RGB16_SNORM	thirdparty/opengl/include/GL/glcorearb.h	1428;"	d
GL_RGB32F	thirdparty/glfw/src/deps/glad/glad.h	1057;"	d
GL_RGB32F	thirdparty/opengl/include/GL/glcorearb.h	1020;"	d
GL_RGB32I	thirdparty/glfw/src/deps/glad/glad.h	1100;"	d
GL_RGB32I	thirdparty/opengl/include/GL/glcorearb.h	1063;"	d
GL_RGB32UI	thirdparty/glfw/src/deps/glad/glad.h	1094;"	d
GL_RGB32UI	thirdparty/opengl/include/GL/glcorearb.h	1057;"	d
GL_RGB4	thirdparty/glfw/src/deps/glad/glad.h	359;"	d
GL_RGB4	thirdparty/opengl/include/GL/glcorearb.h	386;"	d
GL_RGB5	thirdparty/glfw/src/deps/glad/glad.h	360;"	d
GL_RGB5	thirdparty/opengl/include/GL/glcorearb.h	387;"	d
GL_RGB565	thirdparty/opengl/include/GL/glcorearb.h	1914;"	d
GL_RGB5_A1	thirdparty/glfw/src/deps/glad/glad.h	367;"	d
GL_RGB5_A1	thirdparty/opengl/include/GL/glcorearb.h	394;"	d
GL_RGB8	thirdparty/glfw/src/deps/glad/glad.h	361;"	d
GL_RGB8	thirdparty/opengl/include/GL/glcorearb.h	388;"	d
GL_RGB8I	thirdparty/glfw/src/deps/glad/glad.h	1104;"	d
GL_RGB8I	thirdparty/opengl/include/GL/glcorearb.h	1067;"	d
GL_RGB8UI	thirdparty/glfw/src/deps/glad/glad.h	1098;"	d
GL_RGB8UI	thirdparty/opengl/include/GL/glcorearb.h	1061;"	d
GL_RGB8_SNORM	thirdparty/glfw/src/deps/glad/glad.h	1293;"	d
GL_RGB8_SNORM	thirdparty/opengl/include/GL/glcorearb.h	1424;"	d
GL_RGB9_E5	thirdparty/glfw/src/deps/glad/glad.h	1075;"	d
GL_RGB9_E5	thirdparty/opengl/include/GL/glcorearb.h	1038;"	d
GL_RGBA	thirdparty/glfw/src/deps/glad/glad.h	333;"	d
GL_RGBA	thirdparty/opengl/include/GL/glcorearb.h	242;"	d
GL_RGBA12	thirdparty/glfw/src/deps/glad/glad.h	370;"	d
GL_RGBA12	thirdparty/opengl/include/GL/glcorearb.h	397;"	d
GL_RGBA16	thirdparty/glfw/src/deps/glad/glad.h	371;"	d
GL_RGBA16	thirdparty/opengl/include/GL/glcorearb.h	398;"	d
GL_RGBA16F	thirdparty/glfw/src/deps/glad/glad.h	1058;"	d
GL_RGBA16F	thirdparty/opengl/include/GL/glcorearb.h	1021;"	d
GL_RGBA16I	thirdparty/glfw/src/deps/glad/glad.h	1101;"	d
GL_RGBA16I	thirdparty/opengl/include/GL/glcorearb.h	1064;"	d
GL_RGBA16UI	thirdparty/glfw/src/deps/glad/glad.h	1095;"	d
GL_RGBA16UI	thirdparty/opengl/include/GL/glcorearb.h	1058;"	d
GL_RGBA16_SNORM	thirdparty/glfw/src/deps/glad/glad.h	1298;"	d
GL_RGBA16_SNORM	thirdparty/opengl/include/GL/glcorearb.h	1429;"	d
GL_RGBA2	thirdparty/glfw/src/deps/glad/glad.h	365;"	d
GL_RGBA2	thirdparty/opengl/include/GL/glcorearb.h	392;"	d
GL_RGBA32F	thirdparty/glfw/src/deps/glad/glad.h	1056;"	d
GL_RGBA32F	thirdparty/opengl/include/GL/glcorearb.h	1019;"	d
GL_RGBA32I	thirdparty/glfw/src/deps/glad/glad.h	1099;"	d
GL_RGBA32I	thirdparty/opengl/include/GL/glcorearb.h	1062;"	d
GL_RGBA32UI	thirdparty/glfw/src/deps/glad/glad.h	1093;"	d
GL_RGBA32UI	thirdparty/opengl/include/GL/glcorearb.h	1056;"	d
GL_RGBA4	thirdparty/glfw/src/deps/glad/glad.h	366;"	d
GL_RGBA4	thirdparty/opengl/include/GL/glcorearb.h	393;"	d
GL_RGBA8	thirdparty/glfw/src/deps/glad/glad.h	368;"	d
GL_RGBA8	thirdparty/opengl/include/GL/glcorearb.h	395;"	d
GL_RGBA8I	thirdparty/glfw/src/deps/glad/glad.h	1103;"	d
GL_RGBA8I	thirdparty/opengl/include/GL/glcorearb.h	1066;"	d
GL_RGBA8UI	thirdparty/glfw/src/deps/glad/glad.h	1097;"	d
GL_RGBA8UI	thirdparty/opengl/include/GL/glcorearb.h	1060;"	d
GL_RGBA8_SNORM	thirdparty/glfw/src/deps/glad/glad.h	1294;"	d
GL_RGBA8_SNORM	thirdparty/opengl/include/GL/glcorearb.h	1425;"	d
GL_RGBA_INTEGER	thirdparty/glfw/src/deps/glad/glad.h	1109;"	d
GL_RGBA_INTEGER	thirdparty/opengl/include/GL/glcorearb.h	1072;"	d
GL_RGBA_MODE	thirdparty/glfw/src/deps/glad/glad.h	495;"	d
GL_RGB_422_APPLE	thirdparty/opengl/include/GL/glcorearb.h	3942;"	d
GL_RGB_INTEGER	thirdparty/glfw/src/deps/glad/glad.h	1108;"	d
GL_RGB_INTEGER	thirdparty/opengl/include/GL/glcorearb.h	1071;"	d
GL_RGB_RAW_422_APPLE	thirdparty/opengl/include/GL/glcorearb.h	3945;"	d
GL_RGB_SCALE	thirdparty/glfw/src/deps/glad/glad.h	825;"	d
GL_RG_INTEGER	thirdparty/glfw/src/deps/glad/glad.h	1251;"	d
GL_RG_INTEGER	thirdparty/opengl/include/GL/glcorearb.h	1211;"	d
GL_RIGHT	thirdparty/glfw/src/deps/glad/glad.h	209;"	d
GL_RIGHT	thirdparty/opengl/include/GL/glcorearb.h	132;"	d
GL_ROUNDED_RECT2_NV	thirdparty/opengl/include/GL/glcorearb.h	5189;"	d
GL_ROUNDED_RECT4_NV	thirdparty/opengl/include/GL/glcorearb.h	5191;"	d
GL_ROUNDED_RECT8_NV	thirdparty/opengl/include/GL/glcorearb.h	5193;"	d
GL_ROUNDED_RECT_NV	thirdparty/opengl/include/GL/glcorearb.h	5187;"	d
GL_ROUND_NV	thirdparty/opengl/include/GL/glcorearb.h	5106;"	d
GL_S	thirdparty/glfw/src/deps/glad/glad.h	634;"	d
GL_SAMPLER	thirdparty/glfw/src/deps/glad/glad.h	3486;"	d
GL_SAMPLER	thirdparty/opengl/include/GL/glcorearb.h	2325;"	d
GL_SAMPLER_1D	thirdparty/glfw/src/deps/glad/glad.h	986;"	d
GL_SAMPLER_1D	thirdparty/opengl/include/GL/glcorearb.h	749;"	d
GL_SAMPLER_1D_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1112;"	d
GL_SAMPLER_1D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1075;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	thirdparty/glfw/src/deps/glad/glad.h	1114;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	thirdparty/opengl/include/GL/glcorearb.h	1077;"	d
GL_SAMPLER_1D_SHADOW	thirdparty/glfw/src/deps/glad/glad.h	990;"	d
GL_SAMPLER_1D_SHADOW	thirdparty/opengl/include/GL/glcorearb.h	753;"	d
GL_SAMPLER_2D	thirdparty/glfw/src/deps/glad/glad.h	987;"	d
GL_SAMPLER_2D	thirdparty/opengl/include/GL/glcorearb.h	750;"	d
GL_SAMPLER_2D_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1113;"	d
GL_SAMPLER_2D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1076;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	thirdparty/glfw/src/deps/glad/glad.h	1115;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	thirdparty/opengl/include/GL/glcorearb.h	1078;"	d
GL_SAMPLER_2D_MULTISAMPLE	thirdparty/glfw/src/deps/glad/glad.h	1392;"	d
GL_SAMPLER_2D_MULTISAMPLE	thirdparty/opengl/include/GL/glcorearb.h	1593;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1395;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1596;"	d
GL_SAMPLER_2D_RECT	thirdparty/glfw/src/deps/glad/glad.h	1276;"	d
GL_SAMPLER_2D_RECT	thirdparty/opengl/include/GL/glcorearb.h	1407;"	d
GL_SAMPLER_2D_RECT_SHADOW	thirdparty/glfw/src/deps/glad/glad.h	1277;"	d
GL_SAMPLER_2D_RECT_SHADOW	thirdparty/opengl/include/GL/glcorearb.h	1408;"	d
GL_SAMPLER_2D_SHADOW	thirdparty/glfw/src/deps/glad/glad.h	991;"	d
GL_SAMPLER_2D_SHADOW	thirdparty/opengl/include/GL/glcorearb.h	754;"	d
GL_SAMPLER_3D	thirdparty/glfw/src/deps/glad/glad.h	988;"	d
GL_SAMPLER_3D	thirdparty/opengl/include/GL/glcorearb.h	751;"	d
GL_SAMPLER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	1652;"	d
GL_SAMPLER_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	1278;"	d
GL_SAMPLER_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	1409;"	d
GL_SAMPLER_CUBE	thirdparty/glfw/src/deps/glad/glad.h	989;"	d
GL_SAMPLER_CUBE	thirdparty/opengl/include/GL/glcorearb.h	752;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1731;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3689;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	thirdparty/opengl/include/GL/glcorearb.h	1732;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	thirdparty/opengl/include/GL/glcorearb.h	3690;"	d
GL_SAMPLER_CUBE_SHADOW	thirdparty/glfw/src/deps/glad/glad.h	1116;"	d
GL_SAMPLER_CUBE_SHADOW	thirdparty/opengl/include/GL/glcorearb.h	1079;"	d
GL_SAMPLER_KHR	thirdparty/glfw/src/deps/glad/glad.h	3524;"	d
GL_SAMPLES	thirdparty/glfw/src/deps/glad/glad.h	776;"	d
GL_SAMPLES	thirdparty/opengl/include/GL/glcorearb.h	522;"	d
GL_SAMPLES_ARB	thirdparty/glfw/src/deps/glad/glad.h	3448;"	d
GL_SAMPLES_PASSED	thirdparty/glfw/src/deps/glad/glad.h	908;"	d
GL_SAMPLES_PASSED	thirdparty/opengl/include/GL/glcorearb.h	645;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	thirdparty/glfw/src/deps/glad/glad.h	772;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	thirdparty/opengl/include/GL/glcorearb.h	518;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	thirdparty/glfw/src/deps/glad/glad.h	3444;"	d
GL_SAMPLE_ALPHA_TO_ONE	thirdparty/glfw/src/deps/glad/glad.h	773;"	d
GL_SAMPLE_ALPHA_TO_ONE	thirdparty/opengl/include/GL/glcorearb.h	519;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	thirdparty/glfw/src/deps/glad/glad.h	3445;"	d
GL_SAMPLE_BUFFERS	thirdparty/glfw/src/deps/glad/glad.h	775;"	d
GL_SAMPLE_BUFFERS	thirdparty/opengl/include/GL/glcorearb.h	521;"	d
GL_SAMPLE_BUFFERS_ARB	thirdparty/glfw/src/deps/glad/glad.h	3447;"	d
GL_SAMPLE_COVERAGE	thirdparty/glfw/src/deps/glad/glad.h	774;"	d
GL_SAMPLE_COVERAGE	thirdparty/opengl/include/GL/glcorearb.h	520;"	d
GL_SAMPLE_COVERAGE_ARB	thirdparty/glfw/src/deps/glad/glad.h	3446;"	d
GL_SAMPLE_COVERAGE_INVERT	thirdparty/glfw/src/deps/glad/glad.h	778;"	d
GL_SAMPLE_COVERAGE_INVERT	thirdparty/opengl/include/GL/glcorearb.h	524;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	thirdparty/glfw/src/deps/glad/glad.h	3450;"	d
GL_SAMPLE_COVERAGE_VALUE	thirdparty/glfw/src/deps/glad/glad.h	777;"	d
GL_SAMPLE_COVERAGE_VALUE	thirdparty/opengl/include/GL/glcorearb.h	523;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	thirdparty/glfw/src/deps/glad/glad.h	3449;"	d
GL_SAMPLE_LOCATION_ARB	thirdparty/opengl/include/GL/glcorearb.h	3460;"	d
GL_SAMPLE_LOCATION_NV	thirdparty/opengl/include/GL/glcorearb.h	5344;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB	thirdparty/opengl/include/GL/glcorearb.h	3458;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV	thirdparty/opengl/include/GL/glcorearb.h	5342;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB	thirdparty/opengl/include/GL/glcorearb.h	3457;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5341;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3456;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV	thirdparty/opengl/include/GL/glcorearb.h	5340;"	d
GL_SAMPLE_MASK	thirdparty/glfw/src/deps/glad/glad.h	1381;"	d
GL_SAMPLE_MASK	thirdparty/opengl/include/GL/glcorearb.h	1582;"	d
GL_SAMPLE_MASK_VALUE	thirdparty/glfw/src/deps/glad/glad.h	1382;"	d
GL_SAMPLE_MASK_VALUE	thirdparty/opengl/include/GL/glcorearb.h	1583;"	d
GL_SAMPLE_POSITION	thirdparty/glfw/src/deps/glad/glad.h	1380;"	d
GL_SAMPLE_POSITION	thirdparty/opengl/include/GL/glcorearb.h	1581;"	d
GL_SAMPLE_SHADING	thirdparty/opengl/include/GL/glcorearb.h	1724;"	d
GL_SAMPLE_SHADING_ARB	thirdparty/opengl/include/GL/glcorearb.h	3476;"	d
GL_SCISSOR_BIT	thirdparty/glfw/src/deps/glad/glad.h	388;"	d
GL_SCISSOR_BOX	thirdparty/glfw/src/deps/glad/glad.h	253;"	d
GL_SCISSOR_BOX	thirdparty/opengl/include/GL/glcorearb.h	175;"	d
GL_SCISSOR_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4787;"	d
GL_SCISSOR_TEST	thirdparty/glfw/src/deps/glad/glad.h	254;"	d
GL_SCISSOR_TEST	thirdparty/opengl/include/GL/glcorearb.h	176;"	d
GL_SCREEN_KHR	thirdparty/opengl/include/GL/glcorearb.h	3818;"	d
GL_SCREEN_NV	thirdparty/opengl/include/GL/glcorearb.h	4734;"	d
GL_SECONDARY_COLOR_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	869;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5509;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	916;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5519;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	thirdparty/glfw/src/deps/glad/glad.h	868;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	thirdparty/glfw/src/deps/glad/glad.h	865;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	thirdparty/glfw/src/deps/glad/glad.h	867;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	thirdparty/glfw/src/deps/glad/glad.h	866;"	d
GL_SELECT	thirdparty/glfw/src/deps/glad/glad.h	631;"	d
GL_SELECTION_BUFFER_POINTER	thirdparty/glfw/src/deps/glad/glad.h	439;"	d
GL_SELECTION_BUFFER_SIZE	thirdparty/glfw/src/deps/glad/glad.h	577;"	d
GL_SEPARATE_ATTRIBS	thirdparty/glfw/src/deps/glad/glad.h	1090;"	d
GL_SEPARATE_ATTRIBS	thirdparty/opengl/include/GL/glcorearb.h	1053;"	d
GL_SEPARATE_SPECULAR_COLOR	thirdparty/glfw/src/deps/glad/glad.h	736;"	d
GL_SET	thirdparty/glfw/src/deps/glad/glad.h	321;"	d
GL_SET	thirdparty/opengl/include/GL/glcorearb.h	230;"	d
GL_SHADER	thirdparty/glfw/src/deps/glad/glad.h	3482;"	d
GL_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2321;"	d
GL_SHADER_BINARY_FORMATS	thirdparty/opengl/include/GL/glcorearb.h	1909;"	d
GL_SHADER_BINARY_FORMAT_SPIR_V_ARB	thirdparty/opengl/include/GL/glcorearb.h	3204;"	d
GL_SHADER_COMPILER	thirdparty/opengl/include/GL/glcorearb.h	1908;"	d
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV	thirdparty/opengl/include/GL/glcorearb.h	5421;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2163;"	d
GL_SHADER_IMAGE_ATOMIC	thirdparty/opengl/include/GL/glcorearb.h	2393;"	d
GL_SHADER_IMAGE_LOAD	thirdparty/opengl/include/GL/glcorearb.h	2391;"	d
GL_SHADER_IMAGE_STORE	thirdparty/opengl/include/GL/glcorearb.h	2392;"	d
GL_SHADER_INCLUDE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3566;"	d
GL_SHADER_KHR	thirdparty/glfw/src/deps/glad/glad.h	3519;"	d
GL_SHADER_OBJECT_EXT	thirdparty/opengl/include/GL/glcorearb.h	3952;"	d
GL_SHADER_SOURCE_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	1000;"	d
GL_SHADER_SOURCE_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	763;"	d
GL_SHADER_STORAGE_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2498;"	d
GL_SHADER_STORAGE_BLOCK	thirdparty/opengl/include/GL/glcorearb.h	2442;"	d
GL_SHADER_STORAGE_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	2484;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	2485;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	thirdparty/opengl/include/GL/glcorearb.h	2497;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2487;"	d
GL_SHADER_STORAGE_BUFFER_START	thirdparty/opengl/include/GL/glcorearb.h	2486;"	d
GL_SHADER_TYPE	thirdparty/glfw/src/deps/glad/glad.h	972;"	d
GL_SHADER_TYPE	thirdparty/opengl/include/GL/glcorearb.h	735;"	d
GL_SHADE_MODEL	thirdparty/glfw/src/deps/glad/glad.h	464;"	d
GL_SHADING_LANGUAGE_VERSION	thirdparty/glfw/src/deps/glad/glad.h	1004;"	d
GL_SHADING_LANGUAGE_VERSION	thirdparty/opengl/include/GL/glcorearb.h	767;"	d
GL_SHARED_EDGE_NV	thirdparty/opengl/include/GL/glcorearb.h	5335;"	d
GL_SHININESS	thirdparty/glfw/src/deps/glad/glad.h	620;"	d
GL_SHORT	thirdparty/glfw/src/deps/glad/glad.h	298;"	d
GL_SHORT	thirdparty/opengl/include/GL/glcorearb.h	208;"	d
GL_SIGNALED	thirdparty/glfw/src/deps/glad/glad.h	1373;"	d
GL_SIGNALED	thirdparty/opengl/include/GL/glcorearb.h	1574;"	d
GL_SIGNED_NORMALIZED	thirdparty/glfw/src/deps/glad/glad.h	1299;"	d
GL_SIGNED_NORMALIZED	thirdparty/opengl/include/GL/glcorearb.h	1430;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	thirdparty/opengl/include/GL/glcorearb.h	2398;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	thirdparty/opengl/include/GL/glcorearb.h	2400;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	thirdparty/opengl/include/GL/glcorearb.h	2399;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	thirdparty/opengl/include/GL/glcorearb.h	2401;"	d
GL_SINGLE_COLOR	thirdparty/glfw/src/deps/glad/glad.h	735;"	d
GL_SKIP_DECODE_EXT	thirdparty/opengl/include/GL/glcorearb.h	4565;"	d
GL_SKIP_MISSING_GLYPH_NV	thirdparty/opengl/include/GL/glcorearb.h	5111;"	d
GL_SLUMINANCE	thirdparty/glfw/src/deps/glad/glad.h	1035;"	d
GL_SLUMINANCE8	thirdparty/glfw/src/deps/glad/glad.h	1036;"	d
GL_SLUMINANCE8_ALPHA8	thirdparty/glfw/src/deps/glad/glad.h	1034;"	d
GL_SLUMINANCE_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	1033;"	d
GL_SMALL_CCW_ARC_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5146;"	d
GL_SMALL_CW_ARC_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5148;"	d
GL_SMOOTH	thirdparty/glfw/src/deps/glad/glad.h	633;"	d
GL_SMOOTH_CUBIC_CURVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5144;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	thirdparty/glfw/src/deps/glad/glad.h	731;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	thirdparty/opengl/include/GL/glcorearb.h	468;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	thirdparty/glfw/src/deps/glad/glad.h	730;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	thirdparty/opengl/include/GL/glcorearb.h	467;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	thirdparty/glfw/src/deps/glad/glad.h	729;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	thirdparty/opengl/include/GL/glcorearb.h	466;"	d
GL_SMOOTH_POINT_SIZE_RANGE	thirdparty/glfw/src/deps/glad/glad.h	728;"	d
GL_SMOOTH_POINT_SIZE_RANGE	thirdparty/opengl/include/GL/glcorearb.h	465;"	d
GL_SMOOTH_QUADRATIC_CURVE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5142;"	d
GL_SM_COUNT_NV	thirdparty/opengl/include/GL/glcorearb.h	5428;"	d
GL_SOFTLIGHT_KHR	thirdparty/opengl/include/GL/glcorearb.h	3825;"	d
GL_SOFTLIGHT_NV	thirdparty/opengl/include/GL/glcorearb.h	4735;"	d
GL_SOURCE0_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	816;"	d
GL_SOURCE0_RGB	thirdparty/glfw/src/deps/glad/glad.h	813;"	d
GL_SOURCE1_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	817;"	d
GL_SOURCE1_RGB	thirdparty/glfw/src/deps/glad/glad.h	814;"	d
GL_SOURCE2_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	818;"	d
GL_SOURCE2_RGB	thirdparty/glfw/src/deps/glad/glad.h	815;"	d
GL_SPARSE_BUFFER_PAGE_SIZE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3592;"	d
GL_SPARSE_STORAGE_BIT_ARB	thirdparty/opengl/include/GL/glcorearb.h	3591;"	d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3615;"	d
GL_SPECULAR	thirdparty/glfw/src/deps/glad/glad.h	606;"	d
GL_SPHERE_MAP	thirdparty/glfw/src/deps/glad/glad.h	645;"	d
GL_SPIR_V_BINARY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3205;"	d
GL_SPOT_CUTOFF	thirdparty/glfw/src/deps/glad/glad.h	610;"	d
GL_SPOT_DIRECTION	thirdparty/glfw/src/deps/glad/glad.h	608;"	d
GL_SPOT_EXPONENT	thirdparty/glfw/src/deps/glad/glad.h	609;"	d
GL_SQUARE_NV	thirdparty/opengl/include/GL/glcorearb.h	5105;"	d
GL_SRC0_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	930;"	d
GL_SRC0_RGB	thirdparty/glfw/src/deps/glad/glad.h	927;"	d
GL_SRC1_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	909;"	d
GL_SRC1_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	646;"	d
GL_SRC1_COLOR	thirdparty/opengl/include/GL/glcorearb.h	1647;"	d
GL_SRC1_RGB	thirdparty/glfw/src/deps/glad/glad.h	928;"	d
GL_SRC2_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	931;"	d
GL_SRC2_RGB	thirdparty/glfw/src/deps/glad/glad.h	929;"	d
GL_SRC_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	194;"	d
GL_SRC_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	117;"	d
GL_SRC_ALPHA_SATURATE	thirdparty/glfw/src/deps/glad/glad.h	200;"	d
GL_SRC_ALPHA_SATURATE	thirdparty/opengl/include/GL/glcorearb.h	123;"	d
GL_SRC_ATOP_NV	thirdparty/opengl/include/GL/glcorearb.h	4736;"	d
GL_SRC_COLOR	thirdparty/glfw/src/deps/glad/glad.h	192;"	d
GL_SRC_COLOR	thirdparty/opengl/include/GL/glcorearb.h	115;"	d
GL_SRC_IN_NV	thirdparty/opengl/include/GL/glcorearb.h	4737;"	d
GL_SRC_NV	thirdparty/opengl/include/GL/glcorearb.h	4738;"	d
GL_SRC_OUT_NV	thirdparty/opengl/include/GL/glcorearb.h	4739;"	d
GL_SRC_OVER_NV	thirdparty/opengl/include/GL/glcorearb.h	4740;"	d
GL_SRGB	thirdparty/glfw/src/deps/glad/glad.h	1026;"	d
GL_SRGB	thirdparty/opengl/include/GL/glcorearb.h	977;"	d
GL_SRGB8	thirdparty/glfw/src/deps/glad/glad.h	1027;"	d
GL_SRGB8	thirdparty/opengl/include/GL/glcorearb.h	978;"	d
GL_SRGB8_ALPHA8	thirdparty/glfw/src/deps/glad/glad.h	1029;"	d
GL_SRGB8_ALPHA8	thirdparty/opengl/include/GL/glcorearb.h	980;"	d
GL_SRGB_ALPHA	thirdparty/glfw/src/deps/glad/glad.h	1028;"	d
GL_SRGB_ALPHA	thirdparty/opengl/include/GL/glcorearb.h	979;"	d
GL_SRGB_DECODE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3342;"	d
GL_SRGB_READ	thirdparty/opengl/include/GL/glcorearb.h	2379;"	d
GL_SRGB_WRITE	thirdparty/opengl/include/GL/glcorearb.h	2380;"	d
GL_STACK_OVERFLOW	thirdparty/glfw/src/deps/glad/glad.h	304;"	d
GL_STACK_OVERFLOW	thirdparty/opengl/include/GL/glcorearb.h	213;"	d
GL_STACK_OVERFLOW_KHR	thirdparty/glfw/src/deps/glad/glad.h	3534;"	d
GL_STACK_UNDERFLOW	thirdparty/glfw/src/deps/glad/glad.h	305;"	d
GL_STACK_UNDERFLOW	thirdparty/opengl/include/GL/glcorearb.h	214;"	d
GL_STACK_UNDERFLOW_KHR	thirdparty/glfw/src/deps/glad/glad.h	3535;"	d
GL_STANDARD_FONT_FORMAT_NV	thirdparty/opengl/include/GL/glcorearb.h	5203;"	d
GL_STANDARD_FONT_NAME_NV	thirdparty/opengl/include/GL/glcorearb.h	5064;"	d
GL_STATIC_COPY	thirdparty/glfw/src/deps/glad/glad.h	904;"	d
GL_STATIC_COPY	thirdparty/opengl/include/GL/glcorearb.h	641;"	d
GL_STATIC_DRAW	thirdparty/glfw/src/deps/glad/glad.h	902;"	d
GL_STATIC_DRAW	thirdparty/opengl/include/GL/glcorearb.h	639;"	d
GL_STATIC_READ	thirdparty/glfw/src/deps/glad/glad.h	903;"	d
GL_STATIC_READ	thirdparty/opengl/include/GL/glcorearb.h	640;"	d
GL_STENCIL	thirdparty/glfw/src/deps/glad/glad.h	325;"	d
GL_STENCIL	thirdparty/opengl/include/GL/glcorearb.h	234;"	d
GL_STENCIL_ATTACHMENT	thirdparty/glfw/src/deps/glad/glad.h	1217;"	d
GL_STENCIL_ATTACHMENT	thirdparty/opengl/include/GL/glcorearb.h	1180;"	d
GL_STENCIL_BACK_FAIL	thirdparty/glfw/src/deps/glad/glad.h	941;"	d
GL_STENCIL_BACK_FAIL	thirdparty/opengl/include/GL/glcorearb.h	704;"	d
GL_STENCIL_BACK_FUNC	thirdparty/glfw/src/deps/glad/glad.h	940;"	d
GL_STENCIL_BACK_FUNC	thirdparty/opengl/include/GL/glcorearb.h	703;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	thirdparty/glfw/src/deps/glad/glad.h	942;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	thirdparty/opengl/include/GL/glcorearb.h	705;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	thirdparty/glfw/src/deps/glad/glad.h	943;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	thirdparty/opengl/include/GL/glcorearb.h	706;"	d
GL_STENCIL_BACK_REF	thirdparty/glfw/src/deps/glad/glad.h	1009;"	d
GL_STENCIL_BACK_REF	thirdparty/opengl/include/GL/glcorearb.h	772;"	d
GL_STENCIL_BACK_VALUE_MASK	thirdparty/glfw/src/deps/glad/glad.h	1010;"	d
GL_STENCIL_BACK_VALUE_MASK	thirdparty/opengl/include/GL/glcorearb.h	773;"	d
GL_STENCIL_BACK_WRITEMASK	thirdparty/glfw/src/deps/glad/glad.h	1011;"	d
GL_STENCIL_BACK_WRITEMASK	thirdparty/opengl/include/GL/glcorearb.h	774;"	d
GL_STENCIL_BITS	thirdparty/glfw/src/deps/glad/glad.h	546;"	d
GL_STENCIL_BUFFER_BIT	thirdparty/glfw/src/deps/glad/glad.h	170;"	d
GL_STENCIL_BUFFER_BIT	thirdparty/opengl/include/GL/glcorearb.h	93;"	d
GL_STENCIL_CLEAR_VALUE	thirdparty/glfw/src/deps/glad/glad.h	236;"	d
GL_STENCIL_CLEAR_VALUE	thirdparty/opengl/include/GL/glcorearb.h	159;"	d
GL_STENCIL_COMPONENTS	thirdparty/opengl/include/GL/glcorearb.h	2361;"	d
GL_STENCIL_FAIL	thirdparty/glfw/src/deps/glad/glad.h	239;"	d
GL_STENCIL_FAIL	thirdparty/opengl/include/GL/glcorearb.h	162;"	d
GL_STENCIL_FUNC	thirdparty/glfw/src/deps/glad/glad.h	237;"	d
GL_STENCIL_FUNC	thirdparty/opengl/include/GL/glcorearb.h	160;"	d
GL_STENCIL_INDEX	thirdparty/glfw/src/deps/glad/glad.h	326;"	d
GL_STENCIL_INDEX	thirdparty/opengl/include/GL/glcorearb.h	235;"	d
GL_STENCIL_INDEX1	thirdparty/glfw/src/deps/glad/glad.h	1223;"	d
GL_STENCIL_INDEX1	thirdparty/opengl/include/GL/glcorearb.h	1186;"	d
GL_STENCIL_INDEX16	thirdparty/glfw/src/deps/glad/glad.h	1226;"	d
GL_STENCIL_INDEX16	thirdparty/opengl/include/GL/glcorearb.h	1189;"	d
GL_STENCIL_INDEX4	thirdparty/glfw/src/deps/glad/glad.h	1224;"	d
GL_STENCIL_INDEX4	thirdparty/opengl/include/GL/glcorearb.h	1187;"	d
GL_STENCIL_INDEX8	thirdparty/glfw/src/deps/glad/glad.h	1225;"	d
GL_STENCIL_INDEX8	thirdparty/opengl/include/GL/glcorearb.h	1188;"	d
GL_STENCIL_PASS_DEPTH_FAIL	thirdparty/glfw/src/deps/glad/glad.h	240;"	d
GL_STENCIL_PASS_DEPTH_FAIL	thirdparty/opengl/include/GL/glcorearb.h	163;"	d
GL_STENCIL_PASS_DEPTH_PASS	thirdparty/glfw/src/deps/glad/glad.h	241;"	d
GL_STENCIL_PASS_DEPTH_PASS	thirdparty/opengl/include/GL/glcorearb.h	164;"	d
GL_STENCIL_REF	thirdparty/glfw/src/deps/glad/glad.h	242;"	d
GL_STENCIL_REF	thirdparty/opengl/include/GL/glcorearb.h	165;"	d
GL_STENCIL_REF_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4782;"	d
GL_STENCIL_RENDERABLE	thirdparty/opengl/include/GL/glcorearb.h	2364;"	d
GL_STENCIL_SAMPLES_NV	thirdparty/opengl/include/GL/glcorearb.h	4916;"	d
GL_STENCIL_TEST	thirdparty/glfw/src/deps/glad/glad.h	235;"	d
GL_STENCIL_TEST	thirdparty/opengl/include/GL/glcorearb.h	158;"	d
GL_STENCIL_VALUE_MASK	thirdparty/glfw/src/deps/glad/glad.h	238;"	d
GL_STENCIL_VALUE_MASK	thirdparty/opengl/include/GL/glcorearb.h	161;"	d
GL_STENCIL_WRITEMASK	thirdparty/glfw/src/deps/glad/glad.h	243;"	d
GL_STENCIL_WRITEMASK	thirdparty/opengl/include/GL/glcorearb.h	166;"	d
GL_STEREO	thirdparty/glfw/src/deps/glad/glad.h	258;"	d
GL_STEREO	thirdparty/opengl/include/GL/glcorearb.h	180;"	d
GL_STREAM_COPY	thirdparty/glfw/src/deps/glad/glad.h	901;"	d
GL_STREAM_COPY	thirdparty/opengl/include/GL/glcorearb.h	638;"	d
GL_STREAM_DRAW	thirdparty/glfw/src/deps/glad/glad.h	899;"	d
GL_STREAM_DRAW	thirdparty/opengl/include/GL/glcorearb.h	636;"	d
GL_STREAM_READ	thirdparty/glfw/src/deps/glad/glad.h	900;"	d
GL_STREAM_READ	thirdparty/opengl/include/GL/glcorearb.h	637;"	d
GL_SUBPIXEL_BITS	thirdparty/glfw/src/deps/glad/glad.h	275;"	d
GL_SUBPIXEL_BITS	thirdparty/opengl/include/GL/glcorearb.h	197;"	d
GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV	thirdparty/opengl/include/GL/glcorearb.h	4844;"	d
GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV	thirdparty/opengl/include/GL/glcorearb.h	4845;"	d
GL_SUBTRACT	thirdparty/glfw/src/deps/glad/glad.h	828;"	d
GL_SUPERSAMPLE_SCALE_X_NV	thirdparty/opengl/include/GL/glcorearb.h	5051;"	d
GL_SUPERSAMPLE_SCALE_Y_NV	thirdparty/opengl/include/GL/glcorearb.h	5052;"	d
GL_SYNC_CL_EVENT_ARB	thirdparty/opengl/include/GL/glcorearb.h	2981;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	thirdparty/opengl/include/GL/glcorearb.h	2982;"	d
GL_SYNC_CONDITION	thirdparty/glfw/src/deps/glad/glad.h	1367;"	d
GL_SYNC_CONDITION	thirdparty/opengl/include/GL/glcorearb.h	1568;"	d
GL_SYNC_FENCE	thirdparty/glfw/src/deps/glad/glad.h	1370;"	d
GL_SYNC_FENCE	thirdparty/opengl/include/GL/glcorearb.h	1571;"	d
GL_SYNC_FLAGS	thirdparty/glfw/src/deps/glad/glad.h	1369;"	d
GL_SYNC_FLAGS	thirdparty/opengl/include/GL/glcorearb.h	1570;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	thirdparty/glfw/src/deps/glad/glad.h	1379;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	thirdparty/opengl/include/GL/glcorearb.h	1580;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	thirdparty/glfw/src/deps/glad/glad.h	1371;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	thirdparty/opengl/include/GL/glcorearb.h	1572;"	d
GL_SYNC_STATUS	thirdparty/glfw/src/deps/glad/glad.h	1368;"	d
GL_SYNC_STATUS	thirdparty/opengl/include/GL/glcorearb.h	1569;"	d
GL_SYSTEM_FONT_NAME_NV	thirdparty/opengl/include/GL/glcorearb.h	5065;"	d
GL_T	thirdparty/glfw/src/deps/glad/glad.h	635;"	d
GL_T2F_C3F_V3F	thirdparty/glfw/src/deps/glad/glad.h	679;"	d
GL_T2F_C4F_N3F_V3F	thirdparty/glfw/src/deps/glad/glad.h	681;"	d
GL_T2F_C4UB_V3F	thirdparty/glfw/src/deps/glad/glad.h	678;"	d
GL_T2F_N3F_V3F	thirdparty/glfw/src/deps/glad/glad.h	680;"	d
GL_T2F_V3F	thirdparty/glfw/src/deps/glad/glad.h	676;"	d
GL_T4F_C4F_N3F_V4F	thirdparty/glfw/src/deps/glad/glad.h	682;"	d
GL_T4F_V4F	thirdparty/glfw/src/deps/glad/glad.h	677;"	d
GL_TERMINATE_SEQUENCE_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4770;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	thirdparty/opengl/include/GL/glcorearb.h	1768;"	d
GL_TESS_CONTROL_SHADER	thirdparty/opengl/include/GL/glcorearb.h	1795;"	d
GL_TESS_CONTROL_SHADER_BIT	thirdparty/opengl/include/GL/glcorearb.h	1922;"	d
GL_TESS_CONTROL_SHADER_PATCHES_ARB	thirdparty/opengl/include/GL/glcorearb.h	3384;"	d
GL_TESS_CONTROL_SUBROUTINE	thirdparty/opengl/include/GL/glcorearb.h	2444;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	thirdparty/opengl/include/GL/glcorearb.h	2450;"	d
GL_TESS_CONTROL_TEXTURE	thirdparty/opengl/include/GL/glcorearb.h	2383;"	d
GL_TESS_EVALUATION_SHADER	thirdparty/opengl/include/GL/glcorearb.h	1794;"	d
GL_TESS_EVALUATION_SHADER_BIT	thirdparty/opengl/include/GL/glcorearb.h	1923;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3385;"	d
GL_TESS_EVALUATION_SUBROUTINE	thirdparty/opengl/include/GL/glcorearb.h	2445;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	thirdparty/opengl/include/GL/glcorearb.h	2451;"	d
GL_TESS_EVALUATION_TEXTURE	thirdparty/opengl/include/GL/glcorearb.h	2384;"	d
GL_TESS_GEN_MODE	thirdparty/opengl/include/GL/glcorearb.h	1769;"	d
GL_TESS_GEN_POINT_MODE	thirdparty/opengl/include/GL/glcorearb.h	1772;"	d
GL_TESS_GEN_SPACING	thirdparty/opengl/include/GL/glcorearb.h	1770;"	d
GL_TESS_GEN_VERTEX_ORDER	thirdparty/opengl/include/GL/glcorearb.h	1771;"	d
GL_TEXTURE	thirdparty/glfw/src/deps/glad/glad.h	322;"	d
GL_TEXTURE	thirdparty/opengl/include/GL/glcorearb.h	231;"	d
GL_TEXTURE0	thirdparty/glfw/src/deps/glad/glad.h	738;"	d
GL_TEXTURE0	thirdparty/opengl/include/GL/glcorearb.h	484;"	d
GL_TEXTURE1	thirdparty/glfw/src/deps/glad/glad.h	739;"	d
GL_TEXTURE1	thirdparty/opengl/include/GL/glcorearb.h	485;"	d
GL_TEXTURE10	thirdparty/glfw/src/deps/glad/glad.h	748;"	d
GL_TEXTURE10	thirdparty/opengl/include/GL/glcorearb.h	494;"	d
GL_TEXTURE11	thirdparty/glfw/src/deps/glad/glad.h	749;"	d
GL_TEXTURE11	thirdparty/opengl/include/GL/glcorearb.h	495;"	d
GL_TEXTURE12	thirdparty/glfw/src/deps/glad/glad.h	750;"	d
GL_TEXTURE12	thirdparty/opengl/include/GL/glcorearb.h	496;"	d
GL_TEXTURE13	thirdparty/glfw/src/deps/glad/glad.h	751;"	d
GL_TEXTURE13	thirdparty/opengl/include/GL/glcorearb.h	497;"	d
GL_TEXTURE14	thirdparty/glfw/src/deps/glad/glad.h	752;"	d
GL_TEXTURE14	thirdparty/opengl/include/GL/glcorearb.h	498;"	d
GL_TEXTURE15	thirdparty/glfw/src/deps/glad/glad.h	753;"	d
GL_TEXTURE15	thirdparty/opengl/include/GL/glcorearb.h	499;"	d
GL_TEXTURE16	thirdparty/glfw/src/deps/glad/glad.h	754;"	d
GL_TEXTURE16	thirdparty/opengl/include/GL/glcorearb.h	500;"	d
GL_TEXTURE17	thirdparty/glfw/src/deps/glad/glad.h	755;"	d
GL_TEXTURE17	thirdparty/opengl/include/GL/glcorearb.h	501;"	d
GL_TEXTURE18	thirdparty/glfw/src/deps/glad/glad.h	756;"	d
GL_TEXTURE18	thirdparty/opengl/include/GL/glcorearb.h	502;"	d
GL_TEXTURE19	thirdparty/glfw/src/deps/glad/glad.h	757;"	d
GL_TEXTURE19	thirdparty/opengl/include/GL/glcorearb.h	503;"	d
GL_TEXTURE2	thirdparty/glfw/src/deps/glad/glad.h	740;"	d
GL_TEXTURE2	thirdparty/opengl/include/GL/glcorearb.h	486;"	d
GL_TEXTURE20	thirdparty/glfw/src/deps/glad/glad.h	758;"	d
GL_TEXTURE20	thirdparty/opengl/include/GL/glcorearb.h	504;"	d
GL_TEXTURE21	thirdparty/glfw/src/deps/glad/glad.h	759;"	d
GL_TEXTURE21	thirdparty/opengl/include/GL/glcorearb.h	505;"	d
GL_TEXTURE22	thirdparty/glfw/src/deps/glad/glad.h	760;"	d
GL_TEXTURE22	thirdparty/opengl/include/GL/glcorearb.h	506;"	d
GL_TEXTURE23	thirdparty/glfw/src/deps/glad/glad.h	761;"	d
GL_TEXTURE23	thirdparty/opengl/include/GL/glcorearb.h	507;"	d
GL_TEXTURE24	thirdparty/glfw/src/deps/glad/glad.h	762;"	d
GL_TEXTURE24	thirdparty/opengl/include/GL/glcorearb.h	508;"	d
GL_TEXTURE25	thirdparty/glfw/src/deps/glad/glad.h	763;"	d
GL_TEXTURE25	thirdparty/opengl/include/GL/glcorearb.h	509;"	d
GL_TEXTURE26	thirdparty/glfw/src/deps/glad/glad.h	764;"	d
GL_TEXTURE26	thirdparty/opengl/include/GL/glcorearb.h	510;"	d
GL_TEXTURE27	thirdparty/glfw/src/deps/glad/glad.h	765;"	d
GL_TEXTURE27	thirdparty/opengl/include/GL/glcorearb.h	511;"	d
GL_TEXTURE28	thirdparty/glfw/src/deps/glad/glad.h	766;"	d
GL_TEXTURE28	thirdparty/opengl/include/GL/glcorearb.h	512;"	d
GL_TEXTURE29	thirdparty/glfw/src/deps/glad/glad.h	767;"	d
GL_TEXTURE29	thirdparty/opengl/include/GL/glcorearb.h	513;"	d
GL_TEXTURE3	thirdparty/glfw/src/deps/glad/glad.h	741;"	d
GL_TEXTURE3	thirdparty/opengl/include/GL/glcorearb.h	487;"	d
GL_TEXTURE30	thirdparty/glfw/src/deps/glad/glad.h	768;"	d
GL_TEXTURE30	thirdparty/opengl/include/GL/glcorearb.h	514;"	d
GL_TEXTURE31	thirdparty/glfw/src/deps/glad/glad.h	769;"	d
GL_TEXTURE31	thirdparty/opengl/include/GL/glcorearb.h	515;"	d
GL_TEXTURE4	thirdparty/glfw/src/deps/glad/glad.h	742;"	d
GL_TEXTURE4	thirdparty/opengl/include/GL/glcorearb.h	488;"	d
GL_TEXTURE5	thirdparty/glfw/src/deps/glad/glad.h	743;"	d
GL_TEXTURE5	thirdparty/opengl/include/GL/glcorearb.h	489;"	d
GL_TEXTURE6	thirdparty/glfw/src/deps/glad/glad.h	744;"	d
GL_TEXTURE6	thirdparty/opengl/include/GL/glcorearb.h	490;"	d
GL_TEXTURE7	thirdparty/glfw/src/deps/glad/glad.h	745;"	d
GL_TEXTURE7	thirdparty/opengl/include/GL/glcorearb.h	491;"	d
GL_TEXTURE8	thirdparty/glfw/src/deps/glad/glad.h	746;"	d
GL_TEXTURE8	thirdparty/opengl/include/GL/glcorearb.h	492;"	d
GL_TEXTURE9	thirdparty/glfw/src/deps/glad/glad.h	747;"	d
GL_TEXTURE9	thirdparty/opengl/include/GL/glcorearb.h	493;"	d
GL_TEXTURE_1D	thirdparty/glfw/src/deps/glad/glad.h	276;"	d
GL_TEXTURE_1D	thirdparty/opengl/include/GL/glcorearb.h	198;"	d
GL_TEXTURE_1D_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1067;"	d
GL_TEXTURE_1D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1030;"	d
GL_TEXTURE_2D	thirdparty/glfw/src/deps/glad/glad.h	277;"	d
GL_TEXTURE_2D	thirdparty/opengl/include/GL/glcorearb.h	199;"	d
GL_TEXTURE_2D_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1069;"	d
GL_TEXTURE_2D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1032;"	d
GL_TEXTURE_2D_MULTISAMPLE	thirdparty/glfw/src/deps/glad/glad.h	1384;"	d
GL_TEXTURE_2D_MULTISAMPLE	thirdparty/opengl/include/GL/glcorearb.h	1585;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1386;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1587;"	d
GL_TEXTURE_3D	thirdparty/glfw/src/deps/glad/glad.h	707;"	d
GL_TEXTURE_3D	thirdparty/opengl/include/GL/glcorearb.h	444;"	d
GL_TEXTURE_ALPHA_SIZE	thirdparty/glfw/src/deps/glad/glad.h	292;"	d
GL_TEXTURE_ALPHA_SIZE	thirdparty/opengl/include/GL/glcorearb.h	381;"	d
GL_TEXTURE_ALPHA_TYPE	thirdparty/glfw/src/deps/glad/glad.h	1162;"	d
GL_TEXTURE_ALPHA_TYPE	thirdparty/opengl/include/GL/glcorearb.h	1125;"	d
GL_TEXTURE_BASE_LEVEL	thirdparty/glfw/src/deps/glad/glad.h	726;"	d
GL_TEXTURE_BASE_LEVEL	thirdparty/opengl/include/GL/glcorearb.h	463;"	d
GL_TEXTURE_BINDING_1D	thirdparty/glfw/src/deps/glad/glad.h	283;"	d
GL_TEXTURE_BINDING_1D	thirdparty/opengl/include/GL/glcorearb.h	375;"	d
GL_TEXTURE_BINDING_1D_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1071;"	d
GL_TEXTURE_BINDING_1D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1034;"	d
GL_TEXTURE_BINDING_2D	thirdparty/glfw/src/deps/glad/glad.h	284;"	d
GL_TEXTURE_BINDING_2D	thirdparty/opengl/include/GL/glcorearb.h	376;"	d
GL_TEXTURE_BINDING_2D_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1072;"	d
GL_TEXTURE_BINDING_2D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1035;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	thirdparty/glfw/src/deps/glad/glad.h	1388;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	thirdparty/opengl/include/GL/glcorearb.h	1589;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1389;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1590;"	d
GL_TEXTURE_BINDING_3D	thirdparty/glfw/src/deps/glad/glad.h	702;"	d
GL_TEXTURE_BINDING_3D	thirdparty/opengl/include/GL/glcorearb.h	439;"	d
GL_TEXTURE_BINDING_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	1285;"	d
GL_TEXTURE_BINDING_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	1416;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	thirdparty/opengl/include/GL/glcorearb.h	3655;"	d
GL_TEXTURE_BINDING_CUBE_MAP	thirdparty/glfw/src/deps/glad/glad.h	780;"	d
GL_TEXTURE_BINDING_CUBE_MAP	thirdparty/opengl/include/GL/glcorearb.h	526;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1729;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3687;"	d
GL_TEXTURE_BINDING_RECTANGLE	thirdparty/glfw/src/deps/glad/glad.h	1288;"	d
GL_TEXTURE_BINDING_RECTANGLE	thirdparty/opengl/include/GL/glcorearb.h	1419;"	d
GL_TEXTURE_BIT	thirdparty/glfw/src/deps/glad/glad.h	387;"	d
GL_TEXTURE_BLUE_SIZE	thirdparty/glfw/src/deps/glad/glad.h	291;"	d
GL_TEXTURE_BLUE_SIZE	thirdparty/opengl/include/GL/glcorearb.h	380;"	d
GL_TEXTURE_BLUE_TYPE	thirdparty/glfw/src/deps/glad/glad.h	1161;"	d
GL_TEXTURE_BLUE_TYPE	thirdparty/opengl/include/GL/glcorearb.h	1124;"	d
GL_TEXTURE_BORDER	thirdparty/glfw/src/deps/glad/glad.h	599;"	d
GL_TEXTURE_BORDER_COLOR	thirdparty/glfw/src/deps/glad/glad.h	288;"	d
GL_TEXTURE_BORDER_COLOR	thirdparty/opengl/include/GL/glcorearb.h	202;"	d
GL_TEXTURE_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	1283;"	d
GL_TEXTURE_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	1414;"	d
GL_TEXTURE_BUFFER_ARB	thirdparty/opengl/include/GL/glcorearb.h	3653;"	d
GL_TEXTURE_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	2611;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	thirdparty/glfw/src/deps/glad/glad.h	1286;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	thirdparty/opengl/include/GL/glcorearb.h	1417;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	thirdparty/opengl/include/GL/glcorearb.h	3656;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	thirdparty/opengl/include/GL/glcorearb.h	3657;"	d
GL_TEXTURE_BUFFER_OFFSET	thirdparty/opengl/include/GL/glcorearb.h	2501;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	thirdparty/opengl/include/GL/glcorearb.h	2503;"	d
GL_TEXTURE_BUFFER_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2502;"	d
GL_TEXTURE_COMPARE_FUNC	thirdparty/glfw/src/deps/glad/glad.h	849;"	d
GL_TEXTURE_COMPARE_FUNC	thirdparty/opengl/include/GL/glcorearb.h	582;"	d
GL_TEXTURE_COMPARE_MODE	thirdparty/glfw/src/deps/glad/glad.h	848;"	d
GL_TEXTURE_COMPARE_MODE	thirdparty/opengl/include/GL/glcorearb.h	581;"	d
GL_TEXTURE_COMPONENTS	thirdparty/glfw/src/deps/glad/glad.h	598;"	d
GL_TEXTURE_COMPRESSED	thirdparty/glfw/src/deps/glad/glad.h	793;"	d
GL_TEXTURE_COMPRESSED	thirdparty/opengl/include/GL/glcorearb.h	539;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	thirdparty/opengl/include/GL/glcorearb.h	2403;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2404;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	thirdparty/opengl/include/GL/glcorearb.h	2402;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	thirdparty/glfw/src/deps/glad/glad.h	792;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	thirdparty/opengl/include/GL/glcorearb.h	538;"	d
GL_TEXTURE_COMPRESSION_HINT	thirdparty/glfw/src/deps/glad/glad.h	791;"	d
GL_TEXTURE_COMPRESSION_HINT	thirdparty/opengl/include/GL/glcorearb.h	537;"	d
GL_TEXTURE_COORD_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	582;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5507;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	914;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5517;"	d
GL_TEXTURE_COORD_ARRAY_POINTER	thirdparty/glfw/src/deps/glad/glad.h	436;"	d
GL_TEXTURE_COORD_ARRAY_SIZE	thirdparty/glfw/src/deps/glad/glad.h	594;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE	thirdparty/glfw/src/deps/glad/glad.h	596;"	d
GL_TEXTURE_COORD_ARRAY_TYPE	thirdparty/glfw/src/deps/glad/glad.h	595;"	d
GL_TEXTURE_CUBE_MAP	thirdparty/glfw/src/deps/glad/glad.h	779;"	d
GL_TEXTURE_CUBE_MAP	thirdparty/opengl/include/GL/glcorearb.h	525;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1728;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3686;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	thirdparty/glfw/src/deps/glad/glad.h	782;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	thirdparty/opengl/include/GL/glcorearb.h	528;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	thirdparty/glfw/src/deps/glad/glad.h	784;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	thirdparty/opengl/include/GL/glcorearb.h	530;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	thirdparty/glfw/src/deps/glad/glad.h	786;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	thirdparty/opengl/include/GL/glcorearb.h	532;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	thirdparty/glfw/src/deps/glad/glad.h	781;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	thirdparty/opengl/include/GL/glcorearb.h	527;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	thirdparty/glfw/src/deps/glad/glad.h	783;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	thirdparty/opengl/include/GL/glcorearb.h	529;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	thirdparty/glfw/src/deps/glad/glad.h	785;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	thirdparty/opengl/include/GL/glcorearb.h	531;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	thirdparty/glfw/src/deps/glad/glad.h	1364;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	thirdparty/opengl/include/GL/glcorearb.h	1565;"	d
GL_TEXTURE_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	709;"	d
GL_TEXTURE_DEPTH	thirdparty/opengl/include/GL/glcorearb.h	446;"	d
GL_TEXTURE_DEPTH_SIZE	thirdparty/glfw/src/deps/glad/glad.h	847;"	d
GL_TEXTURE_DEPTH_SIZE	thirdparty/opengl/include/GL/glcorearb.h	580;"	d
GL_TEXTURE_DEPTH_TYPE	thirdparty/glfw/src/deps/glad/glad.h	1163;"	d
GL_TEXTURE_DEPTH_TYPE	thirdparty/opengl/include/GL/glcorearb.h	1126;"	d
GL_TEXTURE_ENV	thirdparty/glfw/src/deps/glad/glad.h	642;"	d
GL_TEXTURE_ENV_COLOR	thirdparty/glfw/src/deps/glad/glad.h	641;"	d
GL_TEXTURE_ENV_MODE	thirdparty/glfw/src/deps/glad/glad.h	640;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2162;"	d
GL_TEXTURE_FILTER_CONTROL	thirdparty/glfw/src/deps/glad/glad.h	870;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	thirdparty/glfw/src/deps/glad/glad.h	1391;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	thirdparty/opengl/include/GL/glcorearb.h	1592;"	d
GL_TEXTURE_GATHER	thirdparty/opengl/include/GL/glcorearb.h	2389;"	d
GL_TEXTURE_GATHER_SHADOW	thirdparty/opengl/include/GL/glcorearb.h	2390;"	d
GL_TEXTURE_GEN_MODE	thirdparty/glfw/src/deps/glad/glad.h	646;"	d
GL_TEXTURE_GEN_Q	thirdparty/glfw/src/deps/glad/glad.h	503;"	d
GL_TEXTURE_GEN_R	thirdparty/glfw/src/deps/glad/glad.h	502;"	d
GL_TEXTURE_GEN_S	thirdparty/glfw/src/deps/glad/glad.h	500;"	d
GL_TEXTURE_GEN_T	thirdparty/glfw/src/deps/glad/glad.h	501;"	d
GL_TEXTURE_GREEN_SIZE	thirdparty/glfw/src/deps/glad/glad.h	290;"	d
GL_TEXTURE_GREEN_SIZE	thirdparty/opengl/include/GL/glcorearb.h	379;"	d
GL_TEXTURE_GREEN_TYPE	thirdparty/glfw/src/deps/glad/glad.h	1160;"	d
GL_TEXTURE_GREEN_TYPE	thirdparty/opengl/include/GL/glcorearb.h	1123;"	d
GL_TEXTURE_HEIGHT	thirdparty/glfw/src/deps/glad/glad.h	286;"	d
GL_TEXTURE_HEIGHT	thirdparty/opengl/include/GL/glcorearb.h	201;"	d
GL_TEXTURE_IMAGE_FORMAT	thirdparty/opengl/include/GL/glcorearb.h	2371;"	d
GL_TEXTURE_IMAGE_TYPE	thirdparty/opengl/include/GL/glcorearb.h	2372;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	thirdparty/opengl/include/GL/glcorearb.h	2227;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	thirdparty/opengl/include/GL/glcorearb.h	2508;"	d
GL_TEXTURE_INTENSITY_SIZE	thirdparty/glfw/src/deps/glad/glad.h	601;"	d
GL_TEXTURE_INTENSITY_TYPE	thirdparty/glfw/src/deps/glad/glad.h	1237;"	d
GL_TEXTURE_INTERNAL_FORMAT	thirdparty/glfw/src/deps/glad/glad.h	287;"	d
GL_TEXTURE_INTERNAL_FORMAT	thirdparty/opengl/include/GL/glcorearb.h	377;"	d
GL_TEXTURE_LOD_BIAS	thirdparty/glfw/src/deps/glad/glad.h	844;"	d
GL_TEXTURE_LOD_BIAS	thirdparty/opengl/include/GL/glcorearb.h	577;"	d
GL_TEXTURE_LUMINANCE_SIZE	thirdparty/glfw/src/deps/glad/glad.h	600;"	d
GL_TEXTURE_LUMINANCE_TYPE	thirdparty/glfw/src/deps/glad/glad.h	1236;"	d
GL_TEXTURE_MAG_FILTER	thirdparty/glfw/src/deps/glad/glad.h	351;"	d
GL_TEXTURE_MAG_FILTER	thirdparty/opengl/include/GL/glcorearb.h	260;"	d
GL_TEXTURE_MATRIX	thirdparty/glfw/src/deps/glad/glad.h	483;"	d
GL_TEXTURE_MAX_LEVEL	thirdparty/glfw/src/deps/glad/glad.h	727;"	d
GL_TEXTURE_MAX_LEVEL	thirdparty/opengl/include/GL/glcorearb.h	464;"	d
GL_TEXTURE_MAX_LOD	thirdparty/glfw/src/deps/glad/glad.h	725;"	d
GL_TEXTURE_MAX_LOD	thirdparty/opengl/include/GL/glcorearb.h	462;"	d
GL_TEXTURE_MIN_FILTER	thirdparty/glfw/src/deps/glad/glad.h	352;"	d
GL_TEXTURE_MIN_FILTER	thirdparty/opengl/include/GL/glcorearb.h	261;"	d
GL_TEXTURE_MIN_LOD	thirdparty/glfw/src/deps/glad/glad.h	724;"	d
GL_TEXTURE_MIN_LOD	thirdparty/opengl/include/GL/glcorearb.h	461;"	d
GL_TEXTURE_PRIORITY	thirdparty/glfw/src/deps/glad/glad.h	602;"	d
GL_TEXTURE_RECTANGLE	thirdparty/glfw/src/deps/glad/glad.h	1287;"	d
GL_TEXTURE_RECTANGLE	thirdparty/opengl/include/GL/glcorearb.h	1418;"	d
GL_TEXTURE_REDUCTION_MODE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3697;"	d
GL_TEXTURE_RED_SIZE	thirdparty/glfw/src/deps/glad/glad.h	289;"	d
GL_TEXTURE_RED_SIZE	thirdparty/opengl/include/GL/glcorearb.h	378;"	d
GL_TEXTURE_RED_TYPE	thirdparty/glfw/src/deps/glad/glad.h	1159;"	d
GL_TEXTURE_RED_TYPE	thirdparty/opengl/include/GL/glcorearb.h	1122;"	d
GL_TEXTURE_RESIDENT	thirdparty/glfw/src/deps/glad/glad.h	603;"	d
GL_TEXTURE_SAMPLES	thirdparty/glfw/src/deps/glad/glad.h	1390;"	d
GL_TEXTURE_SAMPLES	thirdparty/opengl/include/GL/glcorearb.h	1591;"	d
GL_TEXTURE_SHADOW	thirdparty/opengl/include/GL/glcorearb.h	2388;"	d
GL_TEXTURE_SHARED_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1077;"	d
GL_TEXTURE_SHARED_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1040;"	d
GL_TEXTURE_SPARSE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3605;"	d
GL_TEXTURE_SRGB_DECODE_EXT	thirdparty/opengl/include/GL/glcorearb.h	4563;"	d
GL_TEXTURE_STACK_DEPTH	thirdparty/glfw/src/deps/glad/glad.h	480;"	d
GL_TEXTURE_STENCIL_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1158;"	d
GL_TEXTURE_STENCIL_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1121;"	d
GL_TEXTURE_SWIZZLE_A	thirdparty/opengl/include/GL/glcorearb.h	1657;"	d
GL_TEXTURE_SWIZZLE_B	thirdparty/opengl/include/GL/glcorearb.h	1656;"	d
GL_TEXTURE_SWIZZLE_G	thirdparty/opengl/include/GL/glcorearb.h	1655;"	d
GL_TEXTURE_SWIZZLE_R	thirdparty/opengl/include/GL/glcorearb.h	1654;"	d
GL_TEXTURE_SWIZZLE_RGBA	thirdparty/opengl/include/GL/glcorearb.h	1658;"	d
GL_TEXTURE_TARGET	thirdparty/opengl/include/GL/glcorearb.h	2663;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2166;"	d
GL_TEXTURE_VIEW	thirdparty/opengl/include/GL/glcorearb.h	2406;"	d
GL_TEXTURE_VIEW_MIN_LAYER	thirdparty/opengl/include/GL/glcorearb.h	2506;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	thirdparty/opengl/include/GL/glcorearb.h	2504;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	thirdparty/opengl/include/GL/glcorearb.h	2507;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	thirdparty/opengl/include/GL/glcorearb.h	2505;"	d
GL_TEXTURE_WIDTH	thirdparty/glfw/src/deps/glad/glad.h	285;"	d
GL_TEXTURE_WIDTH	thirdparty/opengl/include/GL/glcorearb.h	200;"	d
GL_TEXTURE_WRAP_R	thirdparty/glfw/src/deps/glad/glad.h	710;"	d
GL_TEXTURE_WRAP_R	thirdparty/opengl/include/GL/glcorearb.h	447;"	d
GL_TEXTURE_WRAP_S	thirdparty/glfw/src/deps/glad/glad.h	353;"	d
GL_TEXTURE_WRAP_S	thirdparty/opengl/include/GL/glcorearb.h	262;"	d
GL_TEXTURE_WRAP_T	thirdparty/glfw/src/deps/glad/glad.h	354;"	d
GL_TEXTURE_WRAP_T	thirdparty/opengl/include/GL/glcorearb.h	263;"	d
GL_TIMEOUT_EXPIRED	thirdparty/glfw/src/deps/glad/glad.h	1375;"	d
GL_TIMEOUT_EXPIRED	thirdparty/opengl/include/GL/glcorearb.h	1576;"	d
GL_TIMEOUT_IGNORED	thirdparty/glfw/src/deps/glad/glad.h	1378;"	d
GL_TIMEOUT_IGNORED	thirdparty/opengl/include/GL/glcorearb.h	1579;"	d
GL_TIMESTAMP	thirdparty/opengl/include/GL/glcorearb.h	1660;"	d
GL_TIMESTAMP	thirdparty/remotery/src/Remotery.c	5967;"	d	file:
GL_TIME_ELAPSED	thirdparty/opengl/include/GL/glcorearb.h	1659;"	d
GL_TIME_ELAPSED	thirdparty/remotery/src/Remotery.c	5966;"	d	file:
GL_TOP_LEVEL_ARRAY_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2479;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	thirdparty/opengl/include/GL/glcorearb.h	2480;"	d
GL_TRANSFORM_BIT	thirdparty/glfw/src/deps/glad/glad.h	382;"	d
GL_TRANSFORM_FEEDBACK	thirdparty/opengl/include/GL/glcorearb.h	1796;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	thirdparty/opengl/include/GL/glcorearb.h	2118;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2169;"	d
GL_TRANSFORM_FEEDBACK_BINDING	thirdparty/opengl/include/GL/glcorearb.h	1799;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	1091;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	1054;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	thirdparty/opengl/include/GL/glcorearb.h	1798;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	1092;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	1055;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX	thirdparty/opengl/include/GL/glcorearb.h	2621;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	thirdparty/glfw/src/deps/glad/glad.h	1079;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	thirdparty/opengl/include/GL/glcorearb.h	1042;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	thirdparty/opengl/include/GL/glcorearb.h	1797;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1083;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1046;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	thirdparty/glfw/src/deps/glad/glad.h	1082;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	thirdparty/opengl/include/GL/glcorearb.h	1045;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE	thirdparty/opengl/include/GL/glcorearb.h	2622;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB	thirdparty/opengl/include/GL/glcorearb.h	3779;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	thirdparty/opengl/include/GL/glcorearb.h	2119;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	thirdparty/glfw/src/deps/glad/glad.h	1085;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	thirdparty/opengl/include/GL/glcorearb.h	1048;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB	thirdparty/opengl/include/GL/glcorearb.h	3780;"	d
GL_TRANSFORM_FEEDBACK_VARYING	thirdparty/opengl/include/GL/glcorearb.h	2455;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	thirdparty/glfw/src/deps/glad/glad.h	1081;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	thirdparty/opengl/include/GL/glcorearb.h	1044;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	1078;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	1041;"	d
GL_TRANSLATE_2D_NV	thirdparty/opengl/include/GL/glcorearb.h	5090;"	d
GL_TRANSLATE_3D_NV	thirdparty/opengl/include/GL/glcorearb.h	5091;"	d
GL_TRANSLATE_X_NV	thirdparty/opengl/include/GL/glcorearb.h	5088;"	d
GL_TRANSLATE_Y_NV	thirdparty/opengl/include/GL/glcorearb.h	5089;"	d
GL_TRANSPOSE_AFFINE_2D_NV	thirdparty/opengl/include/GL/glcorearb.h	5094;"	d
GL_TRANSPOSE_AFFINE_3D_NV	thirdparty/opengl/include/GL/glcorearb.h	5095;"	d
GL_TRANSPOSE_COLOR_MATRIX	thirdparty/glfw/src/deps/glad/glad.h	802;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	thirdparty/glfw/src/deps/glad/glad.h	799;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	thirdparty/opengl/include/GL/glcorearb.h	3979;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	thirdparty/glfw/src/deps/glad/glad.h	800;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	thirdparty/glfw/src/deps/glad/glad.h	801;"	d
GL_TRIANGLES	thirdparty/glfw/src/deps/glad/glad.h	178;"	d
GL_TRIANGLES	thirdparty/opengl/include/GL/glcorearb.h	101;"	d
GL_TRIANGLES_ADJACENCY	thirdparty/glfw/src/deps/glad/glad.h	1341;"	d
GL_TRIANGLES_ADJACENCY	thirdparty/opengl/include/GL/glcorearb.h	1542;"	d
GL_TRIANGLES_ADJACENCY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3166;"	d
GL_TRIANGLE_FAN	thirdparty/glfw/src/deps/glad/glad.h	180;"	d
GL_TRIANGLE_FAN	thirdparty/opengl/include/GL/glcorearb.h	103;"	d
GL_TRIANGLE_STRIP	thirdparty/glfw/src/deps/glad/glad.h	179;"	d
GL_TRIANGLE_STRIP	thirdparty/opengl/include/GL/glcorearb.h	102;"	d
GL_TRIANGLE_STRIP_ADJACENCY	thirdparty/glfw/src/deps/glad/glad.h	1342;"	d
GL_TRIANGLE_STRIP_ADJACENCY	thirdparty/opengl/include/GL/glcorearb.h	1543;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3167;"	d
GL_TRIANGULAR_NV	thirdparty/opengl/include/GL/glcorearb.h	5107;"	d
GL_TRUE	thirdparty/glfw/src/deps/glad/glad.h	173;"	d
GL_TRUE	thirdparty/opengl/include/GL/glcorearb.h	96;"	d
GL_TYPE	thirdparty/opengl/include/GL/glcorearb.h	2461;"	d
GL_UNCORRELATED_NV	thirdparty/opengl/include/GL/glcorearb.h	4741;"	d
GL_UNDEFINED_VERTEX	thirdparty/opengl/include/GL/glcorearb.h	1933;"	d
GL_UNIFORM	thirdparty/opengl/include/GL/glcorearb.h	2437;"	d
GL_UNIFORM_ADDRESS_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4780;"	d
GL_UNIFORM_ARRAY_STRIDE	thirdparty/glfw/src/deps/glad/glad.h	1325;"	d
GL_UNIFORM_ARRAY_STRIDE	thirdparty/opengl/include/GL/glcorearb.h	1456;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	thirdparty/opengl/include/GL/glcorearb.h	2157;"	d
GL_UNIFORM_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2161;"	d
GL_UNIFORM_BLOCK	thirdparty/opengl/include/GL/glcorearb.h	2438;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	thirdparty/glfw/src/deps/glad/glad.h	1331;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	thirdparty/opengl/include/GL/glcorearb.h	1462;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	thirdparty/glfw/src/deps/glad/glad.h	1332;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	thirdparty/opengl/include/GL/glcorearb.h	1463;"	d
GL_UNIFORM_BLOCK_BINDING	thirdparty/glfw/src/deps/glad/glad.h	1328;"	d
GL_UNIFORM_BLOCK_BINDING	thirdparty/opengl/include/GL/glcorearb.h	1459;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1329;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1460;"	d
GL_UNIFORM_BLOCK_INDEX	thirdparty/glfw/src/deps/glad/glad.h	1323;"	d
GL_UNIFORM_BLOCK_INDEX	thirdparty/opengl/include/GL/glcorearb.h	1454;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	1330;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	1461;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	thirdparty/opengl/include/GL/glcorearb.h	2287;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	thirdparty/glfw/src/deps/glad/glad.h	1335;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	thirdparty/opengl/include/GL/glcorearb.h	1466;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	thirdparty/glfw/src/deps/glad/glad.h	1334;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	thirdparty/opengl/include/GL/glcorearb.h	1465;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	thirdparty/opengl/include/GL/glcorearb.h	1792;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	thirdparty/opengl/include/GL/glcorearb.h	1793;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	thirdparty/glfw/src/deps/glad/glad.h	1333;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	thirdparty/opengl/include/GL/glcorearb.h	1464;"	d
GL_UNIFORM_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	1304;"	d
GL_UNIFORM_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	1435;"	d
GL_UNIFORM_BUFFER_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5450;"	d
GL_UNIFORM_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	1305;"	d
GL_UNIFORM_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	1436;"	d
GL_UNIFORM_BUFFER_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5451;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	thirdparty/glfw/src/deps/glad/glad.h	1317;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	thirdparty/opengl/include/GL/glcorearb.h	1448;"	d
GL_UNIFORM_BUFFER_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1307;"	d
GL_UNIFORM_BUFFER_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1438;"	d
GL_UNIFORM_BUFFER_START	thirdparty/glfw/src/deps/glad/glad.h	1306;"	d
GL_UNIFORM_BUFFER_START	thirdparty/opengl/include/GL/glcorearb.h	1437;"	d
GL_UNIFORM_BUFFER_UNIFIED_NV	thirdparty/opengl/include/GL/glcorearb.h	5449;"	d
GL_UNIFORM_IS_ROW_MAJOR	thirdparty/glfw/src/deps/glad/glad.h	1327;"	d
GL_UNIFORM_IS_ROW_MAJOR	thirdparty/opengl/include/GL/glcorearb.h	1458;"	d
GL_UNIFORM_MATRIX_STRIDE	thirdparty/glfw/src/deps/glad/glad.h	1326;"	d
GL_UNIFORM_MATRIX_STRIDE	thirdparty/opengl/include/GL/glcorearb.h	1457;"	d
GL_UNIFORM_NAME_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	1322;"	d
GL_UNIFORM_NAME_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	1453;"	d
GL_UNIFORM_OFFSET	thirdparty/glfw/src/deps/glad/glad.h	1324;"	d
GL_UNIFORM_OFFSET	thirdparty/opengl/include/GL/glcorearb.h	1455;"	d
GL_UNIFORM_SIZE	thirdparty/glfw/src/deps/glad/glad.h	1321;"	d
GL_UNIFORM_SIZE	thirdparty/opengl/include/GL/glcorearb.h	1452;"	d
GL_UNIFORM_TYPE	thirdparty/glfw/src/deps/glad/glad.h	1320;"	d
GL_UNIFORM_TYPE	thirdparty/opengl/include/GL/glcorearb.h	1451;"	d
GL_UNKNOWN_CONTEXT_RESET	thirdparty/opengl/include/GL/glcorearb.h	2667;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	thirdparty/glfw/src/deps/glad/glad.h	3456;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	thirdparty/opengl/include/GL/glcorearb.h	3427;"	d
GL_UNPACK_ALIGNMENT	thirdparty/glfw/src/deps/glad/glad.h	266;"	d
GL_UNPACK_ALIGNMENT	thirdparty/opengl/include/GL/glcorearb.h	188;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	thirdparty/opengl/include/GL/glcorearb.h	2122;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	thirdparty/opengl/include/GL/glcorearb.h	2121;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	thirdparty/opengl/include/GL/glcorearb.h	2123;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	thirdparty/opengl/include/GL/glcorearb.h	2120;"	d
GL_UNPACK_IMAGE_HEIGHT	thirdparty/glfw/src/deps/glad/glad.h	706;"	d
GL_UNPACK_IMAGE_HEIGHT	thirdparty/opengl/include/GL/glcorearb.h	443;"	d
GL_UNPACK_LSB_FIRST	thirdparty/glfw/src/deps/glad/glad.h	262;"	d
GL_UNPACK_LSB_FIRST	thirdparty/opengl/include/GL/glcorearb.h	184;"	d
GL_UNPACK_ROW_LENGTH	thirdparty/glfw/src/deps/glad/glad.h	263;"	d
GL_UNPACK_ROW_LENGTH	thirdparty/opengl/include/GL/glcorearb.h	185;"	d
GL_UNPACK_SKIP_IMAGES	thirdparty/glfw/src/deps/glad/glad.h	705;"	d
GL_UNPACK_SKIP_IMAGES	thirdparty/opengl/include/GL/glcorearb.h	442;"	d
GL_UNPACK_SKIP_PIXELS	thirdparty/glfw/src/deps/glad/glad.h	265;"	d
GL_UNPACK_SKIP_PIXELS	thirdparty/opengl/include/GL/glcorearb.h	187;"	d
GL_UNPACK_SKIP_ROWS	thirdparty/glfw/src/deps/glad/glad.h	264;"	d
GL_UNPACK_SKIP_ROWS	thirdparty/opengl/include/GL/glcorearb.h	186;"	d
GL_UNPACK_SWAP_BYTES	thirdparty/glfw/src/deps/glad/glad.h	261;"	d
GL_UNPACK_SWAP_BYTES	thirdparty/opengl/include/GL/glcorearb.h	183;"	d
GL_UNSIGNALED	thirdparty/glfw/src/deps/glad/glad.h	1372;"	d
GL_UNSIGNALED	thirdparty/opengl/include/GL/glcorearb.h	1573;"	d
GL_UNSIGNED_BYTE	thirdparty/glfw/src/deps/glad/glad.h	297;"	d
GL_UNSIGNED_BYTE	thirdparty/glfw/src/internal.h	82;"	d
GL_UNSIGNED_BYTE	thirdparty/opengl/include/GL/glcorearb.h	207;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	thirdparty/glfw/src/deps/glad/glad.h	712;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	thirdparty/opengl/include/GL/glcorearb.h	449;"	d
GL_UNSIGNED_BYTE_3_3_2	thirdparty/glfw/src/deps/glad/glad.h	697;"	d
GL_UNSIGNED_BYTE_3_3_2	thirdparty/opengl/include/GL/glcorearb.h	434;"	d
GL_UNSIGNED_INT	thirdparty/glfw/src/deps/glad/glad.h	301;"	d
GL_UNSIGNED_INT	thirdparty/opengl/include/GL/glcorearb.h	211;"	d
GL_UNSIGNED_INT16_NV	thirdparty/opengl/include/GL/glcorearb.h	4967;"	d
GL_UNSIGNED_INT16_VEC2_NV	thirdparty/opengl/include/GL/glcorearb.h	4968;"	d
GL_UNSIGNED_INT16_VEC3_NV	thirdparty/opengl/include/GL/glcorearb.h	4969;"	d
GL_UNSIGNED_INT16_VEC4_NV	thirdparty/opengl/include/GL/glcorearb.h	4970;"	d
GL_UNSIGNED_INT64_AMD	thirdparty/opengl/include/GL/glcorearb.h	3909;"	d
GL_UNSIGNED_INT64_ARB	thirdparty/opengl/include/GL/glcorearb.h	2932;"	d
GL_UNSIGNED_INT64_NV	thirdparty/opengl/include/GL/glcorearb.h	4951;"	d
GL_UNSIGNED_INT64_VEC2_ARB	thirdparty/opengl/include/GL/glcorearb.h	3226;"	d
GL_UNSIGNED_INT64_VEC2_NV	thirdparty/opengl/include/GL/glcorearb.h	4971;"	d
GL_UNSIGNED_INT64_VEC3_ARB	thirdparty/opengl/include/GL/glcorearb.h	3227;"	d
GL_UNSIGNED_INT64_VEC3_NV	thirdparty/opengl/include/GL/glcorearb.h	4972;"	d
GL_UNSIGNED_INT64_VEC4_ARB	thirdparty/opengl/include/GL/glcorearb.h	3228;"	d
GL_UNSIGNED_INT64_VEC4_NV	thirdparty/opengl/include/GL/glcorearb.h	4973;"	d
GL_UNSIGNED_INT8_NV	thirdparty/opengl/include/GL/glcorearb.h	4963;"	d
GL_UNSIGNED_INT8_VEC2_NV	thirdparty/opengl/include/GL/glcorearb.h	4964;"	d
GL_UNSIGNED_INT8_VEC3_NV	thirdparty/opengl/include/GL/glcorearb.h	4965;"	d
GL_UNSIGNED_INT8_VEC4_NV	thirdparty/opengl/include/GL/glcorearb.h	4966;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	thirdparty/glfw/src/deps/glad/glad.h	1074;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	thirdparty/opengl/include/GL/glcorearb.h	1037;"	d
GL_UNSIGNED_INT_10_10_10_2	thirdparty/glfw/src/deps/glad/glad.h	701;"	d
GL_UNSIGNED_INT_10_10_10_2	thirdparty/opengl/include/GL/glcorearb.h	438;"	d
GL_UNSIGNED_INT_24_8	thirdparty/glfw/src/deps/glad/glad.h	1156;"	d
GL_UNSIGNED_INT_24_8	thirdparty/opengl/include/GL/glcorearb.h	1119;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	thirdparty/glfw/src/deps/glad/glad.h	718;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	thirdparty/opengl/include/GL/glcorearb.h	455;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	thirdparty/glfw/src/deps/glad/glad.h	1076;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	thirdparty/opengl/include/GL/glcorearb.h	1039;"	d
GL_UNSIGNED_INT_8_8_8_8	thirdparty/glfw/src/deps/glad/glad.h	700;"	d
GL_UNSIGNED_INT_8_8_8_8	thirdparty/opengl/include/GL/glcorearb.h	437;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	thirdparty/glfw/src/deps/glad/glad.h	717;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	thirdparty/opengl/include/GL/glcorearb.h	454;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	thirdparty/opengl/include/GL/glcorearb.h	2158;"	d
GL_UNSIGNED_INT_IMAGE_1D	thirdparty/opengl/include/GL/glcorearb.h	2201;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	2207;"	d
GL_UNSIGNED_INT_IMAGE_2D	thirdparty/opengl/include/GL/glcorearb.h	2202;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	2208;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	thirdparty/opengl/include/GL/glcorearb.h	2210;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	2211;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	thirdparty/opengl/include/GL/glcorearb.h	2204;"	d
GL_UNSIGNED_INT_IMAGE_3D	thirdparty/opengl/include/GL/glcorearb.h	2203;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	2206;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	thirdparty/opengl/include/GL/glcorearb.h	2205;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	2209;"	d
GL_UNSIGNED_INT_SAMPLER_1D	thirdparty/glfw/src/deps/glad/glad.h	1126;"	d
GL_UNSIGNED_INT_SAMPLER_1D	thirdparty/opengl/include/GL/glcorearb.h	1089;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1130;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1093;"	d
GL_UNSIGNED_INT_SAMPLER_2D	thirdparty/glfw/src/deps/glad/glad.h	1127;"	d
GL_UNSIGNED_INT_SAMPLER_2D	thirdparty/opengl/include/GL/glcorearb.h	1090;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1131;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1094;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	thirdparty/glfw/src/deps/glad/glad.h	1394;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	thirdparty/opengl/include/GL/glcorearb.h	1595;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	1397;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1598;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	thirdparty/glfw/src/deps/glad/glad.h	1281;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	thirdparty/opengl/include/GL/glcorearb.h	1412;"	d
GL_UNSIGNED_INT_SAMPLER_3D	thirdparty/glfw/src/deps/glad/glad.h	1128;"	d
GL_UNSIGNED_INT_SAMPLER_3D	thirdparty/opengl/include/GL/glcorearb.h	1091;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	thirdparty/glfw/src/deps/glad/glad.h	1282;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	1413;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	thirdparty/glfw/src/deps/glad/glad.h	1129;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	thirdparty/opengl/include/GL/glcorearb.h	1092;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	1734;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	thirdparty/opengl/include/GL/glcorearb.h	3692;"	d
GL_UNSIGNED_INT_VEC2	thirdparty/glfw/src/deps/glad/glad.h	1117;"	d
GL_UNSIGNED_INT_VEC2	thirdparty/opengl/include/GL/glcorearb.h	1080;"	d
GL_UNSIGNED_INT_VEC3	thirdparty/glfw/src/deps/glad/glad.h	1118;"	d
GL_UNSIGNED_INT_VEC3	thirdparty/opengl/include/GL/glcorearb.h	1081;"	d
GL_UNSIGNED_INT_VEC4	thirdparty/glfw/src/deps/glad/glad.h	1119;"	d
GL_UNSIGNED_INT_VEC4	thirdparty/opengl/include/GL/glcorearb.h	1082;"	d
GL_UNSIGNED_NORMALIZED	thirdparty/glfw/src/deps/glad/glad.h	1164;"	d
GL_UNSIGNED_NORMALIZED	thirdparty/opengl/include/GL/glcorearb.h	1127;"	d
GL_UNSIGNED_SHORT	thirdparty/glfw/src/deps/glad/glad.h	299;"	d
GL_UNSIGNED_SHORT	thirdparty/opengl/include/GL/glcorearb.h	209;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	thirdparty/glfw/src/deps/glad/glad.h	716;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	thirdparty/opengl/include/GL/glcorearb.h	453;"	d
GL_UNSIGNED_SHORT_4_4_4_4	thirdparty/glfw/src/deps/glad/glad.h	698;"	d
GL_UNSIGNED_SHORT_4_4_4_4	thirdparty/opengl/include/GL/glcorearb.h	435;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	thirdparty/glfw/src/deps/glad/glad.h	715;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	thirdparty/opengl/include/GL/glcorearb.h	452;"	d
GL_UNSIGNED_SHORT_5_5_5_1	thirdparty/glfw/src/deps/glad/glad.h	699;"	d
GL_UNSIGNED_SHORT_5_5_5_1	thirdparty/opengl/include/GL/glcorearb.h	436;"	d
GL_UNSIGNED_SHORT_5_6_5	thirdparty/glfw/src/deps/glad/glad.h	713;"	d
GL_UNSIGNED_SHORT_5_6_5	thirdparty/opengl/include/GL/glcorearb.h	450;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	thirdparty/glfw/src/deps/glad/glad.h	714;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	thirdparty/opengl/include/GL/glcorearb.h	451;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	thirdparty/opengl/include/GL/glcorearb.h	3943;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	thirdparty/opengl/include/GL/glcorearb.h	3944;"	d
GL_UPPER_LEFT	thirdparty/glfw/src/deps/glad/glad.h	1008;"	d
GL_UPPER_LEFT	thirdparty/opengl/include/GL/glcorearb.h	771;"	d
GL_USE_MISSING_GLYPH_NV	thirdparty/opengl/include/GL/glcorearb.h	5112;"	d
GL_UTF16_NV	thirdparty/opengl/include/GL/glcorearb.h	5097;"	d
GL_UTF8_NV	thirdparty/opengl/include/GL/glcorearb.h	5096;"	d
GL_V2F	thirdparty/glfw/src/deps/glad/glad.h	669;"	d
GL_V3F	thirdparty/glfw/src/deps/glad/glad.h	670;"	d
GL_VALIDATE_STATUS	thirdparty/glfw/src/deps/glad/glad.h	995;"	d
GL_VALIDATE_STATUS	thirdparty/opengl/include/GL/glcorearb.h	758;"	d
GL_VENDOR	thirdparty/glfw/src/deps/glad/glad.h	341;"	d
GL_VENDOR	thirdparty/opengl/include/GL/glcorearb.h	250;"	d
GL_VERSION	thirdparty/glfw/src/deps/glad/glad.h	343;"	d
GL_VERSION	thirdparty/glfw/src/internal.h	79;"	d
GL_VERSION	thirdparty/opengl/include/GL/glcorearb.h	252;"	d
GL_VERSION_1_0	thirdparty/glfw/src/deps/glad/glad.h	1402;"	d
GL_VERSION_1_0	thirdparty/opengl/include/GL/glcorearb.h	81;"	d
GL_VERSION_1_1	thirdparty/glfw/src/deps/glad/glad.h	2324;"	d
GL_VERSION_1_1	thirdparty/opengl/include/GL/glcorearb.h	366;"	d
GL_VERSION_1_2	thirdparty/glfw/src/deps/glad/glad.h	2418;"	d
GL_VERSION_1_2	thirdparty/opengl/include/GL/glcorearb.h	433;"	d
GL_VERSION_1_3	thirdparty/glfw/src/deps/glad/glad.h	2434;"	d
GL_VERSION_1_3	thirdparty/opengl/include/GL/glcorearb.h	483;"	d
GL_VERSION_1_4	thirdparty/glfw/src/deps/glad/glad.h	2576;"	d
GL_VERSION_1_4	thirdparty/opengl/include/GL/glcorearb.h	566;"	d
GL_VERSION_1_5	thirdparty/glfw/src/deps/glad/glad.h	2721;"	d
GL_VERSION_1_5	thirdparty/opengl/include/GL/glcorearb.h	615;"	d
GL_VERSION_2_0	thirdparty/glfw/src/deps/glad/glad.h	2782;"	d
GL_VERSION_2_0	thirdparty/opengl/include/GL/glcorearb.h	690;"	d
GL_VERSION_2_1	thirdparty/glfw/src/deps/glad/glad.h	3065;"	d
GL_VERSION_2_1	thirdparty/opengl/include/GL/glcorearb.h	966;"	d
GL_VERSION_3_0	thirdparty/glfw/src/deps/glad/glad.h	3087;"	d
GL_VERSION_3_0	thirdparty/opengl/include/GL/glcorearb.h	1000;"	d
GL_VERSION_3_1	thirdparty/glfw/src/deps/glad/glad.h	3343;"	d
GL_VERSION_3_1	thirdparty/opengl/include/GL/glcorearb.h	1406;"	d
GL_VERSION_3_2	thirdparty/glfw/src/deps/glad/glad.h	3383;"	d
GL_VERSION_3_2	thirdparty/opengl/include/GL/glcorearb.h	1497;"	d
GL_VERSION_3_3	thirdparty/opengl/include/GL/glcorearb.h	1645;"	d
GL_VERSION_4_0	thirdparty/opengl/include/GL/glcorearb.h	1723;"	d
GL_VERSION_4_1	thirdparty/opengl/include/GL/glcorearb.h	1898;"	d
GL_VERSION_4_2	thirdparty/opengl/include/GL/glcorearb.h	2115;"	d
GL_VERSION_4_3	thirdparty/opengl/include/GL/glcorearb.h	2257;"	d
GL_VERSION_4_4	thirdparty/opengl/include/GL/glcorearb.h	2608;"	d
GL_VERSION_4_5	thirdparty/opengl/include/GL/glcorearb.h	2651;"	d
GL_VERTEX_ARRAY	thirdparty/glfw/src/deps/glad/glad.h	578;"	d
GL_VERTEX_ARRAY	thirdparty/opengl/include/GL/glcorearb.h	399;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5503;"	d
GL_VERTEX_ARRAY_BINDING	thirdparty/glfw/src/deps/glad/glad.h	1272;"	d
GL_VERTEX_ARRAY_BINDING	thirdparty/opengl/include/GL/glcorearb.h	1232;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	910;"	d
GL_VERTEX_ARRAY_KHR	thirdparty/glfw/src/deps/glad/glad.h	3521;"	d
GL_VERTEX_ARRAY_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5513;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	thirdparty/opengl/include/GL/glcorearb.h	3955;"	d
GL_VERTEX_ARRAY_POINTER	thirdparty/glfw/src/deps/glad/glad.h	432;"	d
GL_VERTEX_ARRAY_SIZE	thirdparty/glfw/src/deps/glad/glad.h	584;"	d
GL_VERTEX_ARRAY_STRIDE	thirdparty/glfw/src/deps/glad/glad.h	586;"	d
GL_VERTEX_ARRAY_TYPE	thirdparty/glfw/src/deps/glad/glad.h	585;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	thirdparty/opengl/include/GL/glcorearb.h	5502;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	thirdparty/opengl/include/GL/glcorearb.h	2159;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	892;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	thirdparty/opengl/include/GL/glcorearb.h	629;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	thirdparty/opengl/include/GL/glcorearb.h	1646;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	thirdparty/opengl/include/GL/glcorearb.h	3329;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	thirdparty/glfw/src/deps/glad/glad.h	933;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	thirdparty/opengl/include/GL/glcorearb.h	696;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	thirdparty/glfw/src/deps/glad/glad.h	1060;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	thirdparty/opengl/include/GL/glcorearb.h	1023;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	thirdparty/opengl/include/GL/glcorearb.h	5512;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	thirdparty/opengl/include/GL/glcorearb.h	2260;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	thirdparty/glfw/src/deps/glad/glad.h	963;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	thirdparty/opengl/include/GL/glcorearb.h	726;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	thirdparty/glfw/src/deps/glad/glad.h	939;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	thirdparty/opengl/include/GL/glcorearb.h	702;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	thirdparty/glfw/src/deps/glad/glad.h	934;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	thirdparty/opengl/include/GL/glcorearb.h	697;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	thirdparty/glfw/src/deps/glad/glad.h	935;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	thirdparty/opengl/include/GL/glcorearb.h	698;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	thirdparty/glfw/src/deps/glad/glad.h	936;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	thirdparty/opengl/include/GL/glcorearb.h	699;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	thirdparty/opengl/include/GL/glcorearb.h	5500;"	d
GL_VERTEX_ATTRIB_BINDING	thirdparty/opengl/include/GL/glcorearb.h	2509;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	thirdparty/opengl/include/GL/glcorearb.h	2510;"	d
GL_VERTEX_BINDING_BUFFER	thirdparty/opengl/include/GL/glcorearb.h	2516;"	d
GL_VERTEX_BINDING_DIVISOR	thirdparty/opengl/include/GL/glcorearb.h	2511;"	d
GL_VERTEX_BINDING_OFFSET	thirdparty/opengl/include/GL/glcorearb.h	2512;"	d
GL_VERTEX_BINDING_STRIDE	thirdparty/opengl/include/GL/glcorearb.h	2513;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	thirdparty/glfw/src/deps/glad/glad.h	938;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	thirdparty/opengl/include/GL/glcorearb.h	701;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	thirdparty/glfw/src/deps/glad/glad.h	1012;"	d
GL_VERTEX_SHADER	thirdparty/glfw/src/deps/glad/glad.h	966;"	d
GL_VERTEX_SHADER	thirdparty/opengl/include/GL/glcorearb.h	729;"	d
GL_VERTEX_SHADER_BIT	thirdparty/opengl/include/GL/glcorearb.h	1919;"	d
GL_VERTEX_SHADER_INVOCATIONS_ARB	thirdparty/opengl/include/GL/glcorearb.h	3383;"	d
GL_VERTEX_SUBROUTINE	thirdparty/opengl/include/GL/glcorearb.h	2443;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	thirdparty/opengl/include/GL/glcorearb.h	2449;"	d
GL_VERTEX_TEXTURE	thirdparty/opengl/include/GL/glcorearb.h	2382;"	d
GL_VERTICAL_LINE_TO_NV	thirdparty/opengl/include/GL/glcorearb.h	5136;"	d
GL_VERTICES_SUBMITTED_ARB	thirdparty/opengl/include/GL/glcorearb.h	3381;"	d
GL_VIEWPORT	thirdparty/glfw/src/deps/glad/glad.h	244;"	d
GL_VIEWPORT	thirdparty/opengl/include/GL/glcorearb.h	167;"	d
GL_VIEWPORT_BIT	thirdparty/glfw/src/deps/glad/glad.h	381;"	d
GL_VIEWPORT_BOUNDS_RANGE	thirdparty/opengl/include/GL/glcorearb.h	1930;"	d
GL_VIEWPORT_COMMAND_NV	thirdparty/opengl/include/GL/glcorearb.h	4786;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	thirdparty/opengl/include/GL/glcorearb.h	1932;"	d
GL_VIEWPORT_POSITION_W_SCALE_NV	thirdparty/opengl/include/GL/glcorearb.h	4759;"	d
GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV	thirdparty/opengl/include/GL/glcorearb.h	4760;"	d
GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV	thirdparty/opengl/include/GL/glcorearb.h	4761;"	d
GL_VIEWPORT_SUBPIXEL_BITS	thirdparty/opengl/include/GL/glcorearb.h	1929;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV	thirdparty/opengl/include/GL/glcorearb.h	5566;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV	thirdparty/opengl/include/GL/glcorearb.h	5560;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV	thirdparty/opengl/include/GL/glcorearb.h	5562;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV	thirdparty/opengl/include/GL/glcorearb.h	5564;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV	thirdparty/opengl/include/GL/glcorearb.h	5565;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV	thirdparty/opengl/include/GL/glcorearb.h	5559;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV	thirdparty/opengl/include/GL/glcorearb.h	5561;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV	thirdparty/opengl/include/GL/glcorearb.h	5563;"	d
GL_VIEWPORT_SWIZZLE_W_NV	thirdparty/opengl/include/GL/glcorearb.h	5570;"	d
GL_VIEWPORT_SWIZZLE_X_NV	thirdparty/opengl/include/GL/glcorearb.h	5567;"	d
GL_VIEWPORT_SWIZZLE_Y_NV	thirdparty/opengl/include/GL/glcorearb.h	5568;"	d
GL_VIEWPORT_SWIZZLE_Z_NV	thirdparty/opengl/include/GL/glcorearb.h	5569;"	d
GL_VIEW_CLASS_128_BITS	thirdparty/opengl/include/GL/glcorearb.h	2421;"	d
GL_VIEW_CLASS_16_BITS	thirdparty/opengl/include/GL/glcorearb.h	2427;"	d
GL_VIEW_CLASS_24_BITS	thirdparty/opengl/include/GL/glcorearb.h	2426;"	d
GL_VIEW_CLASS_32_BITS	thirdparty/opengl/include/GL/glcorearb.h	2425;"	d
GL_VIEW_CLASS_48_BITS	thirdparty/opengl/include/GL/glcorearb.h	2424;"	d
GL_VIEW_CLASS_64_BITS	thirdparty/opengl/include/GL/glcorearb.h	2423;"	d
GL_VIEW_CLASS_8_BITS	thirdparty/opengl/include/GL/glcorearb.h	2428;"	d
GL_VIEW_CLASS_96_BITS	thirdparty/opengl/include/GL/glcorearb.h	2422;"	d
GL_VIEW_CLASS_BPTC_FLOAT	thirdparty/opengl/include/GL/glcorearb.h	2436;"	d
GL_VIEW_CLASS_BPTC_UNORM	thirdparty/opengl/include/GL/glcorearb.h	2435;"	d
GL_VIEW_CLASS_RGTC1_RED	thirdparty/opengl/include/GL/glcorearb.h	2433;"	d
GL_VIEW_CLASS_RGTC2_RG	thirdparty/opengl/include/GL/glcorearb.h	2434;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	thirdparty/opengl/include/GL/glcorearb.h	2429;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	thirdparty/opengl/include/GL/glcorearb.h	2430;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	thirdparty/opengl/include/GL/glcorearb.h	2431;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	thirdparty/opengl/include/GL/glcorearb.h	2432;"	d
GL_VIEW_COMPATIBILITY_CLASS	thirdparty/opengl/include/GL/glcorearb.h	2407;"	d
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB	thirdparty/opengl/include/GL/glcorearb.h	3606;"	d
GL_VIRTUAL_PAGE_SIZE_X_ARB	thirdparty/opengl/include/GL/glcorearb.h	3609;"	d
GL_VIRTUAL_PAGE_SIZE_Y_ARB	thirdparty/opengl/include/GL/glcorearb.h	3610;"	d
GL_VIRTUAL_PAGE_SIZE_Z_ARB	thirdparty/opengl/include/GL/glcorearb.h	3611;"	d
GL_VIVIDLIGHT_NV	thirdparty/opengl/include/GL/glcorearb.h	4742;"	d
GL_WAIT_FAILED	thirdparty/glfw/src/deps/glad/glad.h	1377;"	d
GL_WAIT_FAILED	thirdparty/opengl/include/GL/glcorearb.h	1578;"	d
GL_WARPS_PER_SM_NV	thirdparty/opengl/include/GL/glcorearb.h	5427;"	d
GL_WARP_SIZE_NV	thirdparty/opengl/include/GL/glcorearb.h	5426;"	d
GL_WEIGHTED_AVERAGE_ARB	thirdparty/opengl/include/GL/glcorearb.h	3698;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	thirdparty/glfw/src/deps/glad/glad.h	918;"	d
GL_WINDOW_RECTANGLE_EXT	thirdparty/opengl/include/GL/glcorearb.h	4572;"	d
GL_WINDOW_RECTANGLE_MODE_EXT	thirdparty/opengl/include/GL/glcorearb.h	4573;"	d
GL_WRITE_ONLY	thirdparty/glfw/src/deps/glad/glad.h	894;"	d
GL_WRITE_ONLY	thirdparty/opengl/include/GL/glcorearb.h	631;"	d
GL_XOR	thirdparty/glfw/src/deps/glad/glad.h	312;"	d
GL_XOR	thirdparty/opengl/include/GL/glcorearb.h	221;"	d
GL_XOR_NV	thirdparty/opengl/include/GL/glcorearb.h	4743;"	d
GL_ZERO	thirdparty/glfw/src/deps/glad/glad.h	190;"	d
GL_ZERO	thirdparty/opengl/include/GL/glcorearb.h	113;"	d
GL_ZERO_TO_ONE	thirdparty/opengl/include/GL/glcorearb.h	2654;"	d
GL_ZOOM_X	thirdparty/glfw/src/deps/glad/glad.h	520;"	d
GL_ZOOM_Y	thirdparty/glfw/src/deps/glad/glad.h	521;"	d
GLbitfield	thirdparty/glfw/src/deps/glad/glad.h	/^typedef unsigned int GLbitfield;$/;"	t
GLbitfield	thirdparty/glfw/src/internal.h	/^typedef unsigned int GLbitfield;$/;"	t
GLbitfield	thirdparty/opengl/include/GL/glcorearb.h	/^typedef unsigned int GLbitfield;$/;"	t
GLboolean	thirdparty/glfw/src/deps/glad/glad.h	/^typedef unsigned char GLboolean;$/;"	t
GLboolean	thirdparty/opengl/include/GL/glcorearb.h	/^typedef unsigned char GLboolean;$/;"	t
GLbyte	thirdparty/glfw/src/deps/glad/glad.h	/^typedef signed char GLbyte;$/;"	t
GLbyte	thirdparty/opengl/include/GL/glcorearb.h	/^typedef signed char GLbyte;$/;"	t
GLchar	thirdparty/glfw/src/deps/glad/glad.h	/^typedef char GLchar;$/;"	t
GLchar	thirdparty/opengl/include/GL/glcorearb.h	/^typedef char GLchar;$/;"	t
GLcharARB	thirdparty/glfw/src/deps/glad/glad.h	/^typedef char GLcharARB;$/;"	t
GLclampd	thirdparty/glfw/src/deps/glad/glad.h	/^typedef double GLclampd;$/;"	t
GLclampd	thirdparty/opengl/include/GL/glcorearb.h	/^typedef double GLclampd;$/;"	t
GLclampf	thirdparty/glfw/src/deps/glad/glad.h	/^typedef float GLclampf;$/;"	t
GLclampf	thirdparty/opengl/include/GL/glcorearb.h	/^typedef float GLclampf;$/;"	t
GLclampx	thirdparty/glfw/src/deps/glad/glad.h	/^typedef int GLclampx;$/;"	t
GLdouble	thirdparty/glfw/src/deps/glad/glad.h	/^typedef double GLdouble;$/;"	t
GLdouble	thirdparty/opengl/include/GL/glcorearb.h	/^typedef double GLdouble;$/;"	t
GLeglImageOES	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void *GLeglImageOES;$/;"	t
GLenum	thirdparty/glfw/src/deps/glad/glad.h	/^typedef unsigned int GLenum;$/;"	t
GLenum	thirdparty/glfw/src/internal.h	/^typedef unsigned int GLenum;$/;"	t
GLenum	thirdparty/opengl/include/GL/glcorearb.h	/^typedef unsigned int GLenum;$/;"	t
GLenum	thirdparty/remotery/src/Remotery.c	/^typedef rmtU32 GLenum;$/;"	t	file:
GLfixed	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLint GLfixed;$/;"	t
GLfloat	thirdparty/glfw/src/deps/glad/glad.h	/^typedef float GLfloat;$/;"	t
GLfloat	thirdparty/opengl/include/GL/glcorearb.h	/^typedef float GLfloat;$/;"	t
GLhalf	thirdparty/glfw/src/deps/glad/glad.h	/^typedef unsigned short GLhalf;$/;"	t
GLhalf	thirdparty/opengl/include/GL/glcorearb.h	/^typedef unsigned short GLhalf;$/;"	t
GLhalfARB	thirdparty/glfw/src/deps/glad/glad.h	/^typedef unsigned short GLhalfARB;$/;"	t
GLhalfNV	thirdparty/glfw/src/deps/glad/glad.h	/^typedef unsigned short GLhalfNV;$/;"	t
GLhandleARB	thirdparty/glfw/src/deps/glad/glad.h	/^typedef unsigned int GLhandleARB;$/;"	t
GLhandleARB	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void *GLhandleARB;$/;"	t
GLint	thirdparty/glfw/src/deps/glad/glad.h	/^typedef int GLint;$/;"	t
GLint	thirdparty/glfw/src/internal.h	/^typedef int	GLint;$/;"	t
GLint	thirdparty/opengl/include/GL/glcorearb.h	/^typedef int GLint;$/;"	t
GLint	thirdparty/remotery/src/Remotery.c	/^typedef rmtS32 GLint;$/;"	t	file:
GLint64	thirdparty/glfw/src/deps/glad/glad.h	/^typedef int64_t GLint64;$/;"	t
GLint64	thirdparty/opengl/include/GL/glcorearb.h	/^typedef int64_t GLint64;$/;"	t
GLint64	thirdparty/remotery/src/Remotery.c	/^typedef rmtS64 GLint64;$/;"	t	file:
GLint64EXT	thirdparty/glfw/src/deps/glad/glad.h	/^typedef int64_t GLint64EXT;$/;"	t
GLint64EXT	thirdparty/opengl/include/GL/glcorearb.h	/^typedef int64_t GLint64EXT;$/;"	t
GLintptr	thirdparty/glfw/src/deps/glad/glad.h	/^typedef ptrdiff_t GLintptr;$/;"	t
GLintptr	thirdparty/opengl/include/GL/glcorearb.h	/^typedef ptrdiff_t GLintptr;$/;"	t
GLintptrARB	thirdparty/glfw/src/deps/glad/glad.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t
GLshort	thirdparty/glfw/src/deps/glad/glad.h	/^typedef short GLshort;$/;"	t
GLshort	thirdparty/opengl/include/GL/glcorearb.h	/^typedef short GLshort;$/;"	t
GLsizei	thirdparty/glfw/src/deps/glad/glad.h	/^typedef int GLsizei;$/;"	t
GLsizei	thirdparty/opengl/include/GL/glcorearb.h	/^typedef int GLsizei;$/;"	t
GLsizei	thirdparty/remotery/src/Remotery.c	/^typedef rmtS32 GLsizei;$/;"	t	file:
GLsizeiptr	thirdparty/glfw/src/deps/glad/glad.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsizeiptr	thirdparty/opengl/include/GL/glcorearb.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsizeiptrARB	thirdparty/glfw/src/deps/glad/glad.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t
GLsync	thirdparty/glfw/src/deps/glad/glad.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLsync	thirdparty/opengl/include/GL/glcorearb.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLubyte	thirdparty/glfw/src/deps/glad/glad.h	/^typedef unsigned char GLubyte;$/;"	t
GLubyte	thirdparty/glfw/src/internal.h	/^typedef unsigned char GLubyte;$/;"	t
GLubyte	thirdparty/opengl/include/GL/glcorearb.h	/^typedef unsigned char GLubyte;$/;"	t
GLubyte	thirdparty/remotery/src/Remotery.c	/^typedef unsigned char GLubyte;$/;"	t	file:
GLuint	thirdparty/glfw/src/deps/glad/glad.h	/^typedef unsigned int GLuint;$/;"	t
GLuint	thirdparty/glfw/src/internal.h	/^typedef unsigned int GLuint;$/;"	t
GLuint	thirdparty/opengl/include/GL/glcorearb.h	/^typedef unsigned int GLuint;$/;"	t
GLuint	thirdparty/remotery/src/Remotery.c	/^typedef rmtU32 GLuint;$/;"	t	file:
GLuint64	thirdparty/glfw/src/deps/glad/glad.h	/^typedef uint64_t GLuint64;$/;"	t
GLuint64	thirdparty/opengl/include/GL/glcorearb.h	/^typedef uint64_t GLuint64;$/;"	t
GLuint64	thirdparty/remotery/src/Remotery.c	/^typedef rmtU64 GLuint64;$/;"	t	file:
GLuint64EXT	thirdparty/glfw/src/deps/glad/glad.h	/^typedef uint64_t GLuint64EXT;$/;"	t
GLuint64EXT	thirdparty/opengl/include/GL/glcorearb.h	/^typedef uint64_t GLuint64EXT;$/;"	t
GLushort	thirdparty/glfw/src/deps/glad/glad.h	/^typedef unsigned short GLushort;$/;"	t
GLushort	thirdparty/opengl/include/GL/glcorearb.h	/^typedef unsigned short GLushort;$/;"	t
GLvdpauSurfaceNV	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t
GLvoid	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void GLvoid;$/;"	t
GLvoid	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void GLvoid;$/;"	t
GPU_RESOURCES_INCLUDED_920DA977_7BBB_492B_A433_CE6A9D6B2696	lib/nil_aspects/include/aspect/gpu_resources.hpp	2;"	d
GRAPHMODE	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	25;"	d	file:
GRAPH_DATA_INCLUDED_9B0564E7_3925_432D_B08E_4F5C35A8DCCE	lib/nil/src/graph/graph_data.hpp	2;"	d
GRAPH_FWD_INCLUDED_7713EBEE_139A_4B55_B942_8BDA0EC3A342	lib/nil/src/graph/graph_fwd.hpp	2;"	d
GRAPH_INCLUDED_7A457725_B9B4_48E4_AA9E_0C3C587B7247	lib/nil/src/graph/graph.hpp	2;"	d
GStyleVarInfo	thirdparty/imgui/src/imgui.cpp	/^static const ImGuiStyleVarInfo GStyleVarInfo[ImGuiStyleVar_Count_] =$/;"	v	file:
GUID_Button	thirdparty/glfw/src/win32_joystick.c	71;"	d	file:
GUID_DEVINTERFACE_HID	thirdparty/glfw/src/win32_init.c	35;"	d	file:
GUID_POV	thirdparty/glfw/src/win32_joystick.c	72;"	d	file:
GUID_RxAxis	thirdparty/glfw/src/win32_joystick.c	67;"	d	file:
GUID_RyAxis	thirdparty/glfw/src/win32_joystick.c	68;"	d	file:
GUID_RzAxis	thirdparty/glfw/src/win32_joystick.c	69;"	d	file:
GUID_Slider	thirdparty/glfw/src/win32_joystick.c	70;"	d	file:
GUID_XAxis	thirdparty/glfw/src/win32_joystick.c	64;"	d	file:
GUID_YAxis	thirdparty/glfw/src/win32_joystick.c	65;"	d	file:
GUID_ZAxis	thirdparty/glfw/src/win32_joystick.c	66;"	d	file:
G_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule G_rules[] =$/;"	v	file:
Game	app/perils/src/game/actor_kinematic.cpp	/^namespace Game {$/;"	n	file:
Game	app/perils/src/game/actor_kinematic.hpp	/^namespace Game {$/;"	n
Game	app/perils/src/game/game_manager.cpp	/^namespace Game {$/;"	n	file:
Game	app/perils/src/game/game_manager.hpp	/^namespace Game {$/;"	n
Game_asset	app/perils/src/data/data.hpp	/^enum class Game_asset {$/;"	c
Game_data	app/perils/src/data/data.cpp	/^namespace Game_data {$/;"	n	file:
Game_data	app/perils/src/data/data.hpp	/^namespace Game_data {$/;"	n
Game_manager	app/perils/src/game/game_manager.hpp	/^struct Game_manager : public ROA::Component$/;"	s	namespace:Game
Gamepad	lib/nil/include/nil/data/gamepad.hpp	/^struct Gamepad$/;"	s	namespace:Nil::Data
Gamepad	thirdparty/glfw/src/deps/mingw/xinput.h	/^    XINPUT_GAMEPAD Gamepad;$/;"	m	struct:_XINPUT_CAPABILITIES
Gamepad	thirdparty/glfw/src/deps/mingw/xinput.h	/^    XINPUT_GAMEPAD Gamepad;$/;"	m	struct:_XINPUT_STATE
Generic	thirdparty/catch/include/catch/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic_data	lib/nil/src/interface/data/common.hpp	/^  Generic_data($/;"	f	struct:Nil::Data::Generic_data
Generic_data	lib/nil/src/interface/data/common.hpp	/^struct Generic_data$/;"	s	namespace:Nil::Data
GetBL	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2      GetBL() const                   { return ImVec2(Min.x, Max.y); }  \/\/ Bottom-left$/;"	f	struct:ImRect
GetBR	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2      GetBR() const                   { return Max; }                   \/\/ Bottom-right$/;"	f	struct:ImRect
GetBool	thirdparty/imgui/src/imgui.cpp	/^bool ImGuiStorage::GetBool(ImGuiID key, bool default_val) const$/;"	f	class:ImGuiStorage
GetBoolRef	thirdparty/imgui/src/imgui.cpp	/^bool* ImGuiStorage::GetBoolRef(ImGuiID key, bool default_val)$/;"	f	class:ImGuiStorage
GetCUDASampleTimes	thirdparty/remotery/src/Remotery.c	/^static rmtBool GetCUDASampleTimes(Sample* root_sample, Sample* sample)$/;"	f	file:
GetCapabilities	thirdparty/glfw/src/win32_platform.h	/^        PFN_XInputGetCapabilities       GetCapabilities;$/;"	m	struct:_GLFWlibraryWin32::__anon155
GetCenter	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2      GetCenter() const               { return ImVec2((Min.x+Max.x)*0.5f, (Min.y+Max.y)*0.5f); }$/;"	f	struct:ImRect
GetCharAdvance	thirdparty/imgui/include/imgui/imgui.h	/^    float                       GetCharAdvance(ImWchar c) const     { return ((int)c < IndexXAdvance.Size) ? IndexXAdvance[(int)c] : FallbackXAdvance; }$/;"	f	struct:ImFont
GetClientString	thirdparty/glfw/src/glx_context.h	/^    PFNGLXGETCLIENTSTRINGPROC           GetClientString;$/;"	m	struct:_GLFWlibraryGLX
GetClipboardText	thirdparty/imgui/src/imgui.cpp	/^const char* ImGui::GetClipboardText()$/;"	f	class:ImGui
GetClipboardTextFn	thirdparty/imgui/include/imgui/imgui.h	/^    const char* (*GetClipboardTextFn)(void* user_data);$/;"	m	struct:ImGuiIO
GetClipboardTextFn_DefaultImpl	thirdparty/imgui/src/imgui.cpp	/^static const char* GetClipboardTextFn_DefaultImpl(void*)$/;"	f	file:
GetClockCount	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^ClockCycle TED::GetClockCount()$/;"	f	class:TED
GetClosestPoint	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2      GetClosestPoint(ImVec2 p, bool on_edge) const$/;"	f	struct:ImRect
GetColorBuffer	thirdparty/glfw/src/osmesa_context.h	/^    PFN_OSMesaGetColorBuffer        GetColorBuffer;$/;"	m	struct:_GLFWlibraryOSMesa
GetColorU32	thirdparty/imgui/src/imgui.cpp	/^ImU32 ImGui::GetColorU32(ImGuiCol idx, float alpha_mul)$/;"	f	class:ImGui
GetColorU32	thirdparty/imgui/src/imgui.cpp	/^ImU32 ImGui::GetColorU32(const ImVec4& col)$/;"	f	class:ImGui
GetColumnIndex	thirdparty/imgui/src/imgui.cpp	/^int ImGui::GetColumnIndex()$/;"	f	class:ImGui
GetColumnOffset	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetColumnOffset(int column_index)$/;"	f	class:ImGui
GetColumnWidth	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetColumnWidth(int column_index)$/;"	f	class:ImGui
GetColumnsCount	thirdparty/imgui/src/imgui.cpp	/^int ImGui::GetColumnsCount()$/;"	f	class:ImGui
GetConfigAttrib	thirdparty/glfw/src/egl_context.h	/^    PFN_eglGetConfigAttrib      GetConfigAttrib;$/;"	m	struct:_GLFWlibraryEGL
GetConfigs	thirdparty/glfw/src/egl_context.h	/^    PFN_eglGetConfigs           GetConfigs;$/;"	m	struct:_GLFWlibraryEGL
GetContentRegionAvail	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetContentRegionAvail()$/;"	f	class:ImGui
GetContentRegionAvailWidth	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetContentRegionAvailWidth()$/;"	f	class:ImGui
GetContentRegionMax	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetContentRegionMax()$/;"	f	class:ImGui
GetCurrentClipRect	thirdparty/imgui/src/imgui_draw.cpp	164;"	d	file:
GetCurrentClipRect	thirdparty/imgui/src/imgui_draw.cpp	231;"	d	file:
GetCurrentContext	thirdparty/imgui/src/imgui.cpp	/^ImGuiContext* ImGui::GetCurrentContext()$/;"	f	class:ImGui
GetCurrentDC	thirdparty/glfw/src/wgl_context.h	/^    PFN_wglGetCurrentDC                 GetCurrentDC;$/;"	m	struct:_GLFWlibraryWGL
GetCurrentTextureId	thirdparty/imgui/src/imgui_draw.cpp	165;"	d	file:
GetCurrentTextureId	thirdparty/imgui/src/imgui_draw.cpp	232;"	d	file:
GetCurrentWindow	thirdparty/imgui/include/imgui/imgui_internal.h	/^    inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->Accessed = true; return g.CurrentWindow; }$/;"	f	namespace:ImGui
GetCurrentWindowRead	thirdparty/imgui/include/imgui/imgui_internal.h	/^    inline    ImGuiWindow*  GetCurrentWindowRead()      { ImGuiContext& g = *GImGui; return g.CurrentWindow; }$/;"	f	namespace:ImGui
GetCursorPos	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetCursorPos()$/;"	f	class:ImGui
GetCursorPosX	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetCursorPosX()$/;"	f	class:ImGui
GetCursorPosY	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetCursorPosY()$/;"	f	class:ImGui
GetCursorScreenPos	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetCursorScreenPos()$/;"	f	class:ImGui
GetCursorStartPos	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetCursorStartPos()$/;"	f	class:ImGui
GetD3D11SampleTimes	thirdparty/remotery/src/Remotery.c	/^static rmtBool GetD3D11SampleTimes(Sample* sample, rmtU64* out_first_timestamp)$/;"	f	file:
GetDefaultCompressedFontDataTTFBase85	thirdparty/imgui/src/imgui_draw.cpp	/^static const char* GetDefaultCompressedFontDataTTFBase85()$/;"	f	file:
GetDefaultFont	thirdparty/imgui/src/imgui.cpp	/^static ImFont* GetDefaultFont()$/;"	f	file:
GetDepthBuffer	thirdparty/glfw/src/osmesa_context.h	/^    PFN_OSMesaGetDepthBuffer        GetDepthBuffer;$/;"	m	struct:_GLFWlibraryOSMesa
GetDeterminant	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float GetDeterminant() const$/;"	f	struct:ImGuizmo::matrix_t
GetDisplay	thirdparty/glfw/src/egl_context.h	/^    PFN_eglGetDisplay           GetDisplay;$/;"	m	struct:_GLFWlibraryEGL
GetDraggedColumnOffset	thirdparty/imgui/src/imgui.cpp	/^static float GetDraggedColumnOffset(int column_index)$/;"	f	file:
GetDrawData	thirdparty/imgui/src/imgui.cpp	/^ImDrawData* ImGui::GetDrawData()$/;"	f	class:ImGui
GetError	thirdparty/glfw/src/egl_context.h	/^    PFN_eglGetError             GetError;$/;"	m	struct:_GLFWlibraryEGL
GetExtensionsStringARB	thirdparty/glfw/src/wgl_context.h	/^    PFNWGLGETEXTENSIONSSTRINGARBPROC    GetExtensionsStringARB;$/;"	m	struct:_GLFWlibraryWGL
GetExtensionsStringEXT	thirdparty/glfw/src/wgl_context.h	/^    PFNWGLGETEXTENSIONSSTRINGEXTPROC    GetExtensionsStringEXT;$/;"	m	struct:_GLFWlibraryWGL
GetFBConfigAttrib	thirdparty/glfw/src/glx_context.h	/^    PFNGLXGETFBCONFIGATTRIBPROC         GetFBConfigAttrib;$/;"	m	struct:_GLFWlibraryGLX
GetFBConfigs	thirdparty/glfw/src/glx_context.h	/^    PFNGLXGETFBCONFIGSPROC              GetFBConfigs;$/;"	m	struct:_GLFWlibraryGLX
GetField	thirdparty/remotery/src/Remotery.c	/^static char* GetField(char* buffer, rsize_t buffer_length, rmtPStr field_name)$/;"	f	file:
GetFloat	thirdparty/imgui/src/imgui.cpp	/^float ImGuiStorage::GetFloat(ImGuiID key, float default_val) const$/;"	f	class:ImGuiStorage
GetFloatRef	thirdparty/imgui/src/imgui.cpp	/^float* ImGuiStorage::GetFloatRef(ImGuiID key, float default_val)$/;"	f	class:ImGuiStorage
GetFont	thirdparty/imgui/src/imgui.cpp	/^ImFont* ImGui::GetFont()$/;"	f	class:ImGui
GetFontSize	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetFontSize()$/;"	f	class:ImGui
GetFontTexUvWhitePixel	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetFontTexUvWhitePixel()$/;"	f	class:ImGui
GetFrameCount	thirdparty/imgui/src/imgui.cpp	/^int ImGui::GetFrameCount()$/;"	f	class:ImGui
GetFrontMostModalRootWindow	thirdparty/imgui/src/imgui.cpp	/^static ImGuiWindow* GetFrontMostModalRootWindow()$/;"	f	file:
GetGammaRamp	thirdparty/glfw/src/x11_platform.h	/^        PFN_XF86VidModeGetGammaRamp GetGammaRamp;$/;"	m	struct:_GLFWlibraryX11::__anon151
GetGammaRampSize	thirdparty/glfw/src/x11_platform.h	/^        PFN_XF86VidModeGetGammaRampSize GetGammaRampSize;$/;"	m	struct:_GLFWlibraryX11::__anon151
GetGlyphRangesChinese	thirdparty/imgui/src/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesChinese()$/;"	f	class:ImFontAtlas
GetGlyphRangesCyrillic	thirdparty/imgui/src/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesCyrillic()$/;"	f	class:ImFontAtlas
GetGlyphRangesDefault	thirdparty/imgui/src/imgui_draw.cpp	/^const ImWchar*   ImFontAtlas::GetGlyphRangesDefault()$/;"	f	class:ImFontAtlas
GetGlyphRangesJapanese	thirdparty/imgui/src/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesJapanese()$/;"	f	class:ImFontAtlas
GetGlyphRangesKorean	thirdparty/imgui/src/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesKorean()$/;"	f	class:ImFontAtlas
GetGlyphRangesThai	thirdparty/imgui/src/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesThai()$/;"	f	class:ImFontAtlas
GetHeight	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       GetHeight() const               { return Max.y-Min.y; }$/;"	f	struct:ImRect
GetID	thirdparty/imgui/src/imgui.cpp	/^ImGuiID ImGui::GetID(const char* str_id)$/;"	f	class:ImGui
GetID	thirdparty/imgui/src/imgui.cpp	/^ImGuiID ImGui::GetID(const char* str_id_begin, const char* str_id_end)$/;"	f	class:ImGui
GetID	thirdparty/imgui/src/imgui.cpp	/^ImGuiID ImGui::GetID(const void* ptr_id)$/;"	f	class:ImGui
GetID	thirdparty/imgui/src/imgui.cpp	/^ImGuiID ImGuiWindow::GetID(const char* str, const char* str_end)$/;"	f	class:ImGuiWindow
GetID	thirdparty/imgui/src/imgui.cpp	/^ImGuiID ImGuiWindow::GetID(const void* ptr)$/;"	f	class:ImGuiWindow
GetIDNoKeepAlive	thirdparty/imgui/src/imgui.cpp	/^ImGuiID ImGuiWindow::GetIDNoKeepAlive(const char* str, const char* str_end)$/;"	f	class:ImGuiWindow
GetIO	thirdparty/imgui/src/imgui.cpp	/^ImGuiIO& ImGui::GetIO()$/;"	f	class:ImGui
GetInputSourceProperty	thirdparty/glfw/src/cocoa_platform.h	/^        PFN_TISGetInputSourceProperty GetInputSourceProperty;$/;"	m	struct:_GLFWlibraryNS::__anon142
GetInstanceProcAddr	thirdparty/glfw/src/internal.h	/^        PFN_vkGetInstanceProcAddr GetInstanceProcAddr;$/;"	m	struct:_GLFWlibrary::__anon165
GetInt	thirdparty/imgui/src/imgui.cpp	/^int ImGuiStorage::GetInt(ImGuiID key, int default_val) const$/;"	f	class:ImGuiStorage
GetIntRef	thirdparty/imgui/src/imgui.cpp	/^int* ImGuiStorage::GetIntRef(ImGuiID key, int default_val)$/;"	f	class:ImGuiStorage
GetIntegerv	thirdparty/glfw/src/internal.h	/^    PFNGLGETINTEGERVPROC GetIntegerv;$/;"	m	struct:_GLFWcontext
GetItemRectMax	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetItemRectMax()$/;"	f	class:ImGui
GetItemRectMin	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetItemRectMin()$/;"	f	class:ImGui
GetItemRectSize	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetItemRectSize()$/;"	f	class:ImGui
GetItemsLineHeightWithSpacing	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetItemsLineHeightWithSpacing()$/;"	f	class:ImGui
GetKbdType	thirdparty/glfw/src/cocoa_platform.h	/^        PFN_LMGetKbdType GetKbdType;$/;"	m	struct:_GLFWlibraryNS::__anon142
GetKeyIndex	thirdparty/imgui/src/imgui.cpp	/^int ImGui::GetKeyIndex(ImGuiKey key)$/;"	f	class:ImGui
GetMetalSampleTimes	thirdparty/remotery/src/Remotery.c	/^static rmtBool GetMetalSampleTimes(Sample* sample)$/;"	f	file:
GetMouseCursor	thirdparty/imgui/src/imgui.cpp	/^ImGuiMouseCursor ImGui::GetMouseCursor()$/;"	f	class:ImGui
GetMouseDragDelta	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetMouseDragDelta(int button, float lock_threshold)$/;"	f	class:ImGui
GetMousePos	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetMousePos()$/;"	f	class:ImGui
GetMousePosOnOpeningCurrentPopup	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetMousePosOnOpeningCurrentPopup()$/;"	f	class:ImGui
GetMoveType	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static int GetMoveType(vec_t *gizmoHitProportion)$/;"	f	namespace:ImGuizmo
GetOpenGLSampleTimes	thirdparty/remotery/src/Remotery.c	/^static rmtBool GetOpenGLSampleTimes(Sample* sample, rmtU64* out_first_timestamp)$/;"	f	file:
GetParentWindow	thirdparty/imgui/src/imgui.cpp	/^ImGuiWindow* ImGui::GetParentWindow()$/;"	f	class:ImGui
GetPixelFormatAttribivARB	thirdparty/glfw/src/wgl_context.h	/^    PFNWGLGETPIXELFORMATATTRIBIVARBPROC GetPixelFormatAttribivARB;$/;"	m	struct:_GLFWlibraryWGL
GetProcAddress	thirdparty/glfw/src/egl_context.h	/^    PFN_eglGetProcAddress       GetProcAddress;$/;"	m	struct:_GLFWlibraryEGL
GetProcAddress	thirdparty/glfw/src/glx_context.h	/^    PFNGLXGETPROCADDRESSPROC            GetProcAddress;$/;"	m	struct:_GLFWlibraryGLX
GetProcAddress	thirdparty/glfw/src/osmesa_context.h	/^    PFN_OSMesaGetProcAddress        GetProcAddress;$/;"	m	struct:_GLFWlibraryOSMesa
GetProcAddress	thirdparty/glfw/src/wgl_context.h	/^    PFN_wglGetProcAddress               GetProcAddress;$/;"	m	struct:_GLFWlibraryWGL
GetProcAddressARB	thirdparty/glfw/src/glx_context.h	/^    PFNGLXGETPROCADDRESSPROC            GetProcAddressARB;$/;"	m	struct:_GLFWlibraryGLX
GetRotateType	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static int GetRotateType()$/;"	f	namespace:ImGuizmo
GetSampleDigest	thirdparty/remotery/src/Remotery.c	/^static void GetSampleDigest(Sample* sample, rmtU32* digest_hash, rmtU32* nb_samples)$/;"	f	file:
GetScaleType	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static int GetScaleType()$/;"	f	namespace:ImGuizmo
GetScrollMaxX	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetScrollMaxX()$/;"	f	class:ImGui
GetScrollMaxY	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetScrollMaxY()$/;"	f	class:ImGui
GetScrollX	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetScrollX()$/;"	f	class:ImGui
GetScrollY	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetScrollY()$/;"	f	class:ImGui
GetSize	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2      GetSize() const                 { return ImVec2(Max.x-Min.x, Max.y-Min.y); }$/;"	f	struct:ImRect
GetState	thirdparty/glfw/src/win32_platform.h	/^        PFN_XInputGetState              GetState;$/;"	m	struct:_GLFWlibraryWin32::__anon155
GetStateStorage	thirdparty/imgui/src/imgui.cpp	/^ImGuiStorage* ImGui::GetStateStorage()$/;"	f	class:ImGui
GetString	thirdparty/glfw/src/internal.h	/^    PFNGLGETSTRINGPROC  GetString;$/;"	m	struct:_GLFWcontext
GetStringi	thirdparty/glfw/src/internal.h	/^    PFNGLGETSTRINGIPROC GetStringi;$/;"	m	struct:_GLFWcontext
GetStyle	thirdparty/imgui/src/imgui.cpp	/^ImGuiStyle& ImGui::GetStyle()$/;"	f	class:ImGui
GetStyleColName	thirdparty/imgui/src/imgui.cpp	/^const char* ImGui::GetStyleColName(ImGuiCol idx)$/;"	f	class:ImGui
GetStyleVarInfo	thirdparty/imgui/src/imgui.cpp	/^static const ImGuiStyleVarInfo* GetStyleVarInfo(ImGuiStyleVar idx)$/;"	f	file:
GetTL	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2      GetTL() const                   { return Min; }                   \/\/ Top-left$/;"	f	struct:ImRect
GetTR	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2      GetTR() const                   { return ImVec2(Max.x, Min.y); }  \/\/ Top-right$/;"	f	struct:ImRect
GetTexDataAsAlpha8	thirdparty/imgui/src/imgui_draw.cpp	/^void    ImFontAtlas::GetTexDataAsAlpha8(unsigned char** out_pixels, int* out_width, int* out_height, int* out_bytes_per_pixel)$/;"	f	class:ImFontAtlas
GetTexDataAsRGBA32	thirdparty/imgui/src/imgui_draw.cpp	/^void    ImFontAtlas::GetTexDataAsRGBA32(unsigned char** out_pixels, int* out_width, int* out_height, int* out_bytes_per_pixel)$/;"	f	class:ImFontAtlas
GetTextLineHeight	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetTextLineHeight()$/;"	f	class:ImGui
GetTextLineHeightWithSpacing	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetTextLineHeightWithSpacing()$/;"	f	class:ImGui
GetTime	thirdparty/glfw/src/win32_platform.h	/^        PFN_timeGetTime                 GetTime;$/;"	m	struct:_GLFWlibraryWin32::__anon153
GetTime	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetTime()$/;"	f	class:ImGui
GetTreeNodeToLabelSpacing	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetTreeNodeToLabelSpacing()$/;"	f	class:ImGui
GetUniform	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static float GetUniform(const vec_t& position, const matrix_t& mat)$/;"	f	namespace:ImGuizmo
GetVarPtr	thirdparty/imgui/src/imgui.cpp	/^    void*           GetVarPtr() const { return (void*)((unsigned char*)&GImGui->Style + Offset); }$/;"	f	struct:ImGuiStyleVarInfo
GetVersion	thirdparty/imgui/src/imgui.cpp	/^const char* ImGui::GetVersion()$/;"	f	class:ImGui
GetVisibleRect	thirdparty/imgui/src/imgui.cpp	/^static ImRect GetVisibleRect()$/;"	f	file:
GetVisualFromFBConfig	thirdparty/glfw/src/glx_context.h	/^    PFNGLXGETVISUALFROMFBCONFIGPROC     GetVisualFromFBConfig;$/;"	m	struct:_GLFWlibraryGLX
GetVoidPtr	thirdparty/imgui/src/imgui.cpp	/^void* ImGuiStorage::GetVoidPtr(ImGuiID key) const$/;"	f	class:ImGuiStorage
GetVoidPtrRef	thirdparty/imgui/src/imgui.cpp	/^void** ImGuiStorage::GetVoidPtrRef(ImGuiID key, void* default_val)$/;"	f	class:ImGuiStorage
GetWidth	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       GetWidth() const                { return Max.x-Min.x; }$/;"	f	struct:ImRect
GetWindowCollapsed	thirdparty/imgui/include/imgui/imgui.h	/^    static inline bool      GetWindowCollapsed() { return ImGui::IsWindowCollapsed(); }        \/\/ OBSOLETE 1.39+$/;"	f	namespace:ImGui
GetWindowContentRegionMax	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetWindowContentRegionMax()$/;"	f	class:ImGui
GetWindowContentRegionMin	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetWindowContentRegionMin()$/;"	f	class:ImGui
GetWindowContentRegionWidth	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetWindowContentRegionWidth()$/;"	f	class:ImGui
GetWindowDrawList	thirdparty/imgui/src/imgui.cpp	/^ImDrawList* ImGui::GetWindowDrawList()$/;"	f	class:ImGui
GetWindowFont	thirdparty/imgui/include/imgui/imgui.h	/^    static inline ImFont*   GetWindowFont() { return GetFont(); }                              \/\/ OBSOLETE 1.48+$/;"	f	namespace:ImGui
GetWindowFontSize	thirdparty/imgui/include/imgui/imgui.h	/^    static inline float     GetWindowFontSize() { return GetFontSize(); }                      \/\/ OBSOLETE 1.48+$/;"	f	namespace:ImGui
GetWindowHeight	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetWindowHeight()$/;"	f	class:ImGui
GetWindowPos	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetWindowPos()$/;"	f	class:ImGui
GetWindowSize	thirdparty/imgui/src/imgui.cpp	/^ImVec2 ImGui::GetWindowSize()$/;"	f	class:ImGui
GetWindowWidth	thirdparty/imgui/src/imgui.cpp	/^float ImGui::GetWindowWidth()$/;"	f	class:ImGui
Glyph	thirdparty/imgui/include/imgui/imgui.h	/^    struct Glyph$/;"	s	struct:ImFont
GlyphExtraSpacing	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2          GlyphExtraSpacing;          \/\/ 0, 0     \/\/ Extra spacing (in pixels) between glyphs$/;"	m	struct:ImFontConfig
GlyphRanges	thirdparty/imgui/include/imgui/imgui.h	/^    const ImWchar*  GlyphRanges;                \/\/          \/\/ Pointer to a user-provided list of Unicode range (2 value per range, values are inclusive, zero-terminated list). THE ARRAY DATA NEEDS TO PERSIST AS LONG AS THE FONT IS ALIVE.$/;"	m	struct:ImFontConfig
Glyphs	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<Glyph>             Glyphs;             \/\/              \/\/ All glyphs.$/;"	m	struct:ImFont
GrabMinSize	thirdparty/imgui/include/imgui/imgui.h	/^    float       GrabMinSize;                \/\/ Minimum width\/height of a grab box for slider\/scrollbar.$/;"	m	struct:ImGuiStyle
GrabRounding	thirdparty/imgui/include/imgui/imgui.h	/^    float       GrabRounding;               \/\/ Radius of grabs corners rounding. Set to 0.0f to have rectangular slider grabs.$/;"	m	struct:ImGuiStyle
Graph	lib/nil/src/graph/graph.cpp	/^namespace Graph {$/;"	n	namespace:Nil	file:
Graph	lib/nil/src/graph/graph.hpp	/^namespace Graph {$/;"	n	namespace:Nil
Graph	lib/nil/src/graph/graph_data.hpp	/^namespace Graph {$/;"	n	namespace:Nil
Graph	lib/nil/src/graph/graph_fwd.hpp	/^namespace Graph {$/;"	n	namespace:Nil
GroupOffsetX	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   GroupOffsetX;$/;"	m	struct:ImGuiDrawContext
GroupStack	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImGuiGroupData>GroupStack;$/;"	m	struct:ImGuiDrawContext
GrowIndex	thirdparty/imgui/src/imgui_draw.cpp	/^void ImFont::GrowIndex(int new_size)$/;"	f	class:ImFont
GuidEffect	thirdparty/glfw/src/deps/mingw/dinput.h	/^  GUID        GuidEffect;$/;"	m	struct:DIFILEEFFECT
H	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	G					: 71,$/;"	p	class:namespace.Codes
HBlanking	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static bool HBlanking;$/;"	v	file:
HELPERS_INCLUDED_4B085C19_E9F7_4703_9043_5B5FA49B14EF	lib/lib/include/lib/helpers.hpp	9;"	d
HELPER_INLINE	lib/lib/include/lib/helpers.hpp	20;"	d
HIGHPASS	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^			HIGHPASS = 2,$/;"	e	enum:SoLoud::BiquadResonantFilter::FILTERTYPE
HMODULE	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef void* HMODULE;$/;"	t	file:
HOME	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	END					: 35,	\/\/ also NUM_SOUTH_WEST$/;"	p	class:namespace.Codes
HSV	thirdparty/imgui/include/imgui/imgui.h	/^    static ImColor HSV(float h, float s, float v, float a = 1.0f)   { float r,g,b; ImGui::ColorConvertHSVtoRGB(h, s, v, r, g, b); return ImColor(r,g,b,a); }$/;"	f	struct:ImColor
HUE	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^const short HUE[16] = { 0, 0,$/;"	v
HURT	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^			HURT,$/;"	e	enum:SoLoud::Sfxr::SFXR_PRESETS
H_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule H_rules[] =$/;"	v	file:
HandleAndDrawLocalBounds	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void HandleAndDrawLocalBounds(float *bounds, matrix_t *matrix, float *snapValues)$/;"	f	namespace:ImGuizmo
HandleRotation	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void HandleRotation(float *matrix, float *deltaMatrix, int& type, float *snap)$/;"	f	namespace:ImGuizmo
HandleScale	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void HandleScale(float *matrix, float *deltaMatrix, int& type, float *snap)$/;"	f	namespace:ImGuizmo
HandleTranslation	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static void HandleTranslation(float *matrix, float *deltaMatrix, int& type, float *snap)$/;"	f	namespace:ImGuizmo
HasSelection	thirdparty/imgui/include/imgui/imgui.h	/^    bool    HasSelection() const { return SelectionStart != SelectionEnd; }$/;"	f	struct:ImGuiTextEditCallbackData
HasSelection	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                HasSelection() const        { return StbState.select_start != StbState.select_end; }$/;"	f	struct:ImGuiTextEditState
Hash.Murmur3	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/MurmurHash3.js	/^namespace("Hash");$/;"	f
HashCombine	thirdparty/remotery/src/Remotery.c	/^static rmtU32 HashCombine(rmtU32 hash_a, rmtU32 hash_b)$/;"	f	file:
HashSlot	thirdparty/remotery/src/Remotery.c	/^} HashSlot;$/;"	t	typeref:struct:__anon57	file:
HidCode	thirdparty/glfw/src/deps/mingw/xinput.h	/^    BYTE HidCode;$/;"	m	struct:_XINPUT_KEYSTROKE
HiddenFrames	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     HiddenFrames;$/;"	m	struct:ImGuiWindow
HotOffset	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2              HotOffset;$/;"	m	struct:ImGuiMouseCursorData
HoveredId	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID                 HoveredId;                          \/\/ Hovered widget$/;"	m	struct:ImGuiContext
HoveredIdAllowOverlap	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    HoveredIdAllowOverlap;$/;"	m	struct:ImGuiContext
HoveredIdPreviousFrame	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID                 HoveredIdPreviousFrame;$/;"	m	struct:ImGuiContext
HoveredRootWindow	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiWindow*            HoveredRootWindow;                  \/\/ Will catch mouse inputs (for focus\/move only)$/;"	m	struct:ImGuiContext
HoveredWindow	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiWindow*            HoveredWindow;                      \/\/ Will catch mouse inputs$/;"	m	struct:ImGuiContext
I	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	H					: 72,$/;"	p	class:namespace.Codes
IContext	thirdparty/catch/include/catch/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
ID	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID                 ID;                                 \/\/ == ImHash(Name)$/;"	m	struct:ImGuiWindow
IDStack	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImGuiID>       IDStack;                            \/\/ ID stack. ID are hashes seeded with the value at the top of the stack$/;"	m	struct:ImGuiWindow
IDirectInput	thirdparty/glfw/src/deps/mingw/dinput.h	123;"	d
IDirectInput2	thirdparty/glfw/src/deps/mingw/dinput.h	126;"	d
IDirectInput2_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	2265;"	d
IDirectInput2_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	2278;"	d
IDirectInput2_CreateDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2268;"	d
IDirectInput2_CreateDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2281;"	d
IDirectInput2_EnumDevices	thirdparty/glfw/src/deps/mingw/dinput.h	2269;"	d
IDirectInput2_EnumDevices	thirdparty/glfw/src/deps/mingw/dinput.h	2282;"	d
IDirectInput2_FindDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2274;"	d
IDirectInput2_FindDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2287;"	d
IDirectInput2_GetDeviceStatus	thirdparty/glfw/src/deps/mingw/dinput.h	2270;"	d
IDirectInput2_GetDeviceStatus	thirdparty/glfw/src/deps/mingw/dinput.h	2283;"	d
IDirectInput2_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	2272;"	d
IDirectInput2_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	2285;"	d
IDirectInput2_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	2264;"	d
IDirectInput2_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	2277;"	d
IDirectInput2_Release	thirdparty/glfw/src/deps/mingw/dinput.h	2266;"	d
IDirectInput2_Release	thirdparty/glfw/src/deps/mingw/dinput.h	2279;"	d
IDirectInput2_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	2271;"	d
IDirectInput2_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	2284;"	d
IDirectInput7	thirdparty/glfw/src/deps/mingw/dinput.h	129;"	d
IDirectInput7_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	2339;"	d
IDirectInput7_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	2354;"	d
IDirectInput7_CreateDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2342;"	d
IDirectInput7_CreateDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2357;"	d
IDirectInput7_CreateDeviceEx	thirdparty/glfw/src/deps/mingw/dinput.h	2350;"	d
IDirectInput7_CreateDeviceEx	thirdparty/glfw/src/deps/mingw/dinput.h	2365;"	d
IDirectInput7_EnumDevices	thirdparty/glfw/src/deps/mingw/dinput.h	2343;"	d
IDirectInput7_EnumDevices	thirdparty/glfw/src/deps/mingw/dinput.h	2358;"	d
IDirectInput7_FindDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2348;"	d
IDirectInput7_FindDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2363;"	d
IDirectInput7_GetDeviceStatus	thirdparty/glfw/src/deps/mingw/dinput.h	2344;"	d
IDirectInput7_GetDeviceStatus	thirdparty/glfw/src/deps/mingw/dinput.h	2359;"	d
IDirectInput7_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	2346;"	d
IDirectInput7_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	2361;"	d
IDirectInput7_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	2338;"	d
IDirectInput7_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	2353;"	d
IDirectInput7_Release	thirdparty/glfw/src/deps/mingw/dinput.h	2340;"	d
IDirectInput7_Release	thirdparty/glfw/src/deps/mingw/dinput.h	2355;"	d
IDirectInput7_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	2345;"	d
IDirectInput7_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	2360;"	d
IDirectInput8	thirdparty/glfw/src/deps/mingw/dinput.h	133;"	d
IDirectInput8_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	2418;"	d
IDirectInput8_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	2432;"	d
IDirectInput8_ConfigureDevices	thirdparty/glfw/src/deps/mingw/dinput.h	2428;"	d
IDirectInput8_ConfigureDevices	thirdparty/glfw/src/deps/mingw/dinput.h	2442;"	d
IDirectInput8_CreateDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2421;"	d
IDirectInput8_CreateDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2435;"	d
IDirectInput8_EnumDevices	thirdparty/glfw/src/deps/mingw/dinput.h	2422;"	d
IDirectInput8_EnumDevices	thirdparty/glfw/src/deps/mingw/dinput.h	2436;"	d
IDirectInput8_EnumDevicesBySemantics	thirdparty/glfw/src/deps/mingw/dinput.h	2427;"	d
IDirectInput8_EnumDevicesBySemantics	thirdparty/glfw/src/deps/mingw/dinput.h	2441;"	d
IDirectInput8_FindDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2426;"	d
IDirectInput8_FindDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2440;"	d
IDirectInput8_GetDeviceStatus	thirdparty/glfw/src/deps/mingw/dinput.h	2423;"	d
IDirectInput8_GetDeviceStatus	thirdparty/glfw/src/deps/mingw/dinput.h	2437;"	d
IDirectInput8_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	2425;"	d
IDirectInput8_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	2439;"	d
IDirectInput8_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	2417;"	d
IDirectInput8_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	2431;"	d
IDirectInput8_Release	thirdparty/glfw/src/deps/mingw/dinput.h	2419;"	d
IDirectInput8_Release	thirdparty/glfw/src/deps/mingw/dinput.h	2433;"	d
IDirectInput8_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	2424;"	d
IDirectInput8_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	2438;"	d
IDirectInputDevice	thirdparty/glfw/src/deps/mingw/dinput.h	137;"	d
IDirectInputDevice2	thirdparty/glfw/src/deps/mingw/dinput.h	141;"	d
IDirectInputDevice2_Acquire	thirdparty/glfw/src/deps/mingw/dinput.h	1725;"	d
IDirectInputDevice2_Acquire	thirdparty/glfw/src/deps/mingw/dinput.h	1756;"	d
IDirectInputDevice2_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	1718;"	d
IDirectInputDevice2_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	1749;"	d
IDirectInputDevice2_CreateEffect	thirdparty/glfw/src/deps/mingw/dinput.h	1737;"	d
IDirectInputDevice2_CreateEffect	thirdparty/glfw/src/deps/mingw/dinput.h	1768;"	d
IDirectInputDevice2_EnumCreatedEffectObjects	thirdparty/glfw/src/deps/mingw/dinput.h	1742;"	d
IDirectInputDevice2_EnumCreatedEffectObjects	thirdparty/glfw/src/deps/mingw/dinput.h	1773;"	d
IDirectInputDevice2_EnumEffects	thirdparty/glfw/src/deps/mingw/dinput.h	1738;"	d
IDirectInputDevice2_EnumEffects	thirdparty/glfw/src/deps/mingw/dinput.h	1769;"	d
IDirectInputDevice2_EnumObjects	thirdparty/glfw/src/deps/mingw/dinput.h	1722;"	d
IDirectInputDevice2_EnumObjects	thirdparty/glfw/src/deps/mingw/dinput.h	1753;"	d
IDirectInputDevice2_Escape	thirdparty/glfw/src/deps/mingw/dinput.h	1743;"	d
IDirectInputDevice2_Escape	thirdparty/glfw/src/deps/mingw/dinput.h	1774;"	d
IDirectInputDevice2_GetCapabilities	thirdparty/glfw/src/deps/mingw/dinput.h	1721;"	d
IDirectInputDevice2_GetCapabilities	thirdparty/glfw/src/deps/mingw/dinput.h	1752;"	d
IDirectInputDevice2_GetDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	1728;"	d
IDirectInputDevice2_GetDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	1759;"	d
IDirectInputDevice2_GetDeviceInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1733;"	d
IDirectInputDevice2_GetDeviceInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1764;"	d
IDirectInputDevice2_GetDeviceState	thirdparty/glfw/src/deps/mingw/dinput.h	1727;"	d
IDirectInputDevice2_GetDeviceState	thirdparty/glfw/src/deps/mingw/dinput.h	1758;"	d
IDirectInputDevice2_GetEffectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1739;"	d
IDirectInputDevice2_GetEffectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1770;"	d
IDirectInputDevice2_GetForceFeedbackState	thirdparty/glfw/src/deps/mingw/dinput.h	1740;"	d
IDirectInputDevice2_GetForceFeedbackState	thirdparty/glfw/src/deps/mingw/dinput.h	1771;"	d
IDirectInputDevice2_GetObjectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1732;"	d
IDirectInputDevice2_GetObjectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1763;"	d
IDirectInputDevice2_GetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	1723;"	d
IDirectInputDevice2_GetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	1754;"	d
IDirectInputDevice2_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	1735;"	d
IDirectInputDevice2_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	1766;"	d
IDirectInputDevice2_Poll	thirdparty/glfw/src/deps/mingw/dinput.h	1744;"	d
IDirectInputDevice2_Poll	thirdparty/glfw/src/deps/mingw/dinput.h	1775;"	d
IDirectInputDevice2_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	1717;"	d
IDirectInputDevice2_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	1748;"	d
IDirectInputDevice2_Release	thirdparty/glfw/src/deps/mingw/dinput.h	1719;"	d
IDirectInputDevice2_Release	thirdparty/glfw/src/deps/mingw/dinput.h	1750;"	d
IDirectInputDevice2_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	1734;"	d
IDirectInputDevice2_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	1765;"	d
IDirectInputDevice2_SendDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	1745;"	d
IDirectInputDevice2_SendDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	1776;"	d
IDirectInputDevice2_SendForceFeedbackCommand	thirdparty/glfw/src/deps/mingw/dinput.h	1741;"	d
IDirectInputDevice2_SendForceFeedbackCommand	thirdparty/glfw/src/deps/mingw/dinput.h	1772;"	d
IDirectInputDevice2_SetCooperativeLevel	thirdparty/glfw/src/deps/mingw/dinput.h	1731;"	d
IDirectInputDevice2_SetCooperativeLevel	thirdparty/glfw/src/deps/mingw/dinput.h	1762;"	d
IDirectInputDevice2_SetDataFormat	thirdparty/glfw/src/deps/mingw/dinput.h	1729;"	d
IDirectInputDevice2_SetDataFormat	thirdparty/glfw/src/deps/mingw/dinput.h	1760;"	d
IDirectInputDevice2_SetEventNotification	thirdparty/glfw/src/deps/mingw/dinput.h	1730;"	d
IDirectInputDevice2_SetEventNotification	thirdparty/glfw/src/deps/mingw/dinput.h	1761;"	d
IDirectInputDevice2_SetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	1724;"	d
IDirectInputDevice2_SetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	1755;"	d
IDirectInputDevice2_Unacquire	thirdparty/glfw/src/deps/mingw/dinput.h	1726;"	d
IDirectInputDevice2_Unacquire	thirdparty/glfw/src/deps/mingw/dinput.h	1757;"	d
IDirectInputDevice7	thirdparty/glfw/src/deps/mingw/dinput.h	146;"	d
IDirectInputDevice7_Acquire	thirdparty/glfw/src/deps/mingw/dinput.h	1875;"	d
IDirectInputDevice7_Acquire	thirdparty/glfw/src/deps/mingw/dinput.h	1909;"	d
IDirectInputDevice7_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	1868;"	d
IDirectInputDevice7_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	1902;"	d
IDirectInputDevice7_CreateEffect	thirdparty/glfw/src/deps/mingw/dinput.h	1887;"	d
IDirectInputDevice7_CreateEffect	thirdparty/glfw/src/deps/mingw/dinput.h	1921;"	d
IDirectInputDevice7_EnumCreatedEffectObjects	thirdparty/glfw/src/deps/mingw/dinput.h	1892;"	d
IDirectInputDevice7_EnumCreatedEffectObjects	thirdparty/glfw/src/deps/mingw/dinput.h	1926;"	d
IDirectInputDevice7_EnumEffects	thirdparty/glfw/src/deps/mingw/dinput.h	1888;"	d
IDirectInputDevice7_EnumEffects	thirdparty/glfw/src/deps/mingw/dinput.h	1922;"	d
IDirectInputDevice7_EnumEffectsInFile	thirdparty/glfw/src/deps/mingw/dinput.h	1897;"	d
IDirectInputDevice7_EnumEffectsInFile	thirdparty/glfw/src/deps/mingw/dinput.h	1931;"	d
IDirectInputDevice7_EnumObjects	thirdparty/glfw/src/deps/mingw/dinput.h	1872;"	d
IDirectInputDevice7_EnumObjects	thirdparty/glfw/src/deps/mingw/dinput.h	1906;"	d
IDirectInputDevice7_Escape	thirdparty/glfw/src/deps/mingw/dinput.h	1893;"	d
IDirectInputDevice7_Escape	thirdparty/glfw/src/deps/mingw/dinput.h	1927;"	d
IDirectInputDevice7_GetCapabilities	thirdparty/glfw/src/deps/mingw/dinput.h	1871;"	d
IDirectInputDevice7_GetCapabilities	thirdparty/glfw/src/deps/mingw/dinput.h	1905;"	d
IDirectInputDevice7_GetDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	1878;"	d
IDirectInputDevice7_GetDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	1912;"	d
IDirectInputDevice7_GetDeviceInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1883;"	d
IDirectInputDevice7_GetDeviceInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1917;"	d
IDirectInputDevice7_GetDeviceState	thirdparty/glfw/src/deps/mingw/dinput.h	1877;"	d
IDirectInputDevice7_GetDeviceState	thirdparty/glfw/src/deps/mingw/dinput.h	1911;"	d
IDirectInputDevice7_GetEffectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1889;"	d
IDirectInputDevice7_GetEffectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1923;"	d
IDirectInputDevice7_GetForceFeedbackState	thirdparty/glfw/src/deps/mingw/dinput.h	1890;"	d
IDirectInputDevice7_GetForceFeedbackState	thirdparty/glfw/src/deps/mingw/dinput.h	1924;"	d
IDirectInputDevice7_GetObjectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1882;"	d
IDirectInputDevice7_GetObjectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1916;"	d
IDirectInputDevice7_GetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	1873;"	d
IDirectInputDevice7_GetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	1907;"	d
IDirectInputDevice7_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	1885;"	d
IDirectInputDevice7_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	1919;"	d
IDirectInputDevice7_Poll	thirdparty/glfw/src/deps/mingw/dinput.h	1894;"	d
IDirectInputDevice7_Poll	thirdparty/glfw/src/deps/mingw/dinput.h	1928;"	d
IDirectInputDevice7_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	1867;"	d
IDirectInputDevice7_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	1901;"	d
IDirectInputDevice7_Release	thirdparty/glfw/src/deps/mingw/dinput.h	1869;"	d
IDirectInputDevice7_Release	thirdparty/glfw/src/deps/mingw/dinput.h	1903;"	d
IDirectInputDevice7_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	1884;"	d
IDirectInputDevice7_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	1918;"	d
IDirectInputDevice7_SendDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	1895;"	d
IDirectInputDevice7_SendDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	1929;"	d
IDirectInputDevice7_SendForceFeedbackCommand	thirdparty/glfw/src/deps/mingw/dinput.h	1891;"	d
IDirectInputDevice7_SendForceFeedbackCommand	thirdparty/glfw/src/deps/mingw/dinput.h	1925;"	d
IDirectInputDevice7_SetCooperativeLevel	thirdparty/glfw/src/deps/mingw/dinput.h	1881;"	d
IDirectInputDevice7_SetCooperativeLevel	thirdparty/glfw/src/deps/mingw/dinput.h	1915;"	d
IDirectInputDevice7_SetDataFormat	thirdparty/glfw/src/deps/mingw/dinput.h	1879;"	d
IDirectInputDevice7_SetDataFormat	thirdparty/glfw/src/deps/mingw/dinput.h	1913;"	d
IDirectInputDevice7_SetEventNotification	thirdparty/glfw/src/deps/mingw/dinput.h	1880;"	d
IDirectInputDevice7_SetEventNotification	thirdparty/glfw/src/deps/mingw/dinput.h	1914;"	d
IDirectInputDevice7_SetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	1874;"	d
IDirectInputDevice7_SetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	1908;"	d
IDirectInputDevice7_Unacquire	thirdparty/glfw/src/deps/mingw/dinput.h	1876;"	d
IDirectInputDevice7_Unacquire	thirdparty/glfw/src/deps/mingw/dinput.h	1910;"	d
IDirectInputDevice7_WriteEffectToFile	thirdparty/glfw/src/deps/mingw/dinput.h	1898;"	d
IDirectInputDevice7_WriteEffectToFile	thirdparty/glfw/src/deps/mingw/dinput.h	1932;"	d
IDirectInputDevice8	thirdparty/glfw/src/deps/mingw/dinput.h	151;"	d
IDirectInputDevice8_Acquire	thirdparty/glfw/src/deps/mingw/dinput.h	2040;"	d
IDirectInputDevice8_Acquire	thirdparty/glfw/src/deps/mingw/dinput.h	2078;"	d
IDirectInputDevice8_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	2033;"	d
IDirectInputDevice8_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	2071;"	d
IDirectInputDevice8_BuildActionMap	thirdparty/glfw/src/deps/mingw/dinput.h	2065;"	d
IDirectInputDevice8_BuildActionMap	thirdparty/glfw/src/deps/mingw/dinput.h	2103;"	d
IDirectInputDevice8_CreateEffect	thirdparty/glfw/src/deps/mingw/dinput.h	2052;"	d
IDirectInputDevice8_CreateEffect	thirdparty/glfw/src/deps/mingw/dinput.h	2090;"	d
IDirectInputDevice8_EnumCreatedEffectObjects	thirdparty/glfw/src/deps/mingw/dinput.h	2057;"	d
IDirectInputDevice8_EnumCreatedEffectObjects	thirdparty/glfw/src/deps/mingw/dinput.h	2095;"	d
IDirectInputDevice8_EnumEffects	thirdparty/glfw/src/deps/mingw/dinput.h	2053;"	d
IDirectInputDevice8_EnumEffects	thirdparty/glfw/src/deps/mingw/dinput.h	2091;"	d
IDirectInputDevice8_EnumEffectsInFile	thirdparty/glfw/src/deps/mingw/dinput.h	2062;"	d
IDirectInputDevice8_EnumEffectsInFile	thirdparty/glfw/src/deps/mingw/dinput.h	2100;"	d
IDirectInputDevice8_EnumObjects	thirdparty/glfw/src/deps/mingw/dinput.h	2037;"	d
IDirectInputDevice8_EnumObjects	thirdparty/glfw/src/deps/mingw/dinput.h	2075;"	d
IDirectInputDevice8_Escape	thirdparty/glfw/src/deps/mingw/dinput.h	2058;"	d
IDirectInputDevice8_Escape	thirdparty/glfw/src/deps/mingw/dinput.h	2096;"	d
IDirectInputDevice8_GetCapabilities	thirdparty/glfw/src/deps/mingw/dinput.h	2036;"	d
IDirectInputDevice8_GetCapabilities	thirdparty/glfw/src/deps/mingw/dinput.h	2074;"	d
IDirectInputDevice8_GetDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	2043;"	d
IDirectInputDevice8_GetDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	2081;"	d
IDirectInputDevice8_GetDeviceInfo	thirdparty/glfw/src/deps/mingw/dinput.h	2048;"	d
IDirectInputDevice8_GetDeviceInfo	thirdparty/glfw/src/deps/mingw/dinput.h	2086;"	d
IDirectInputDevice8_GetDeviceState	thirdparty/glfw/src/deps/mingw/dinput.h	2042;"	d
IDirectInputDevice8_GetDeviceState	thirdparty/glfw/src/deps/mingw/dinput.h	2080;"	d
IDirectInputDevice8_GetEffectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	2054;"	d
IDirectInputDevice8_GetEffectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	2092;"	d
IDirectInputDevice8_GetForceFeedbackState	thirdparty/glfw/src/deps/mingw/dinput.h	2055;"	d
IDirectInputDevice8_GetForceFeedbackState	thirdparty/glfw/src/deps/mingw/dinput.h	2093;"	d
IDirectInputDevice8_GetImageInfo	thirdparty/glfw/src/deps/mingw/dinput.h	2067;"	d
IDirectInputDevice8_GetImageInfo	thirdparty/glfw/src/deps/mingw/dinput.h	2105;"	d
IDirectInputDevice8_GetObjectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	2047;"	d
IDirectInputDevice8_GetObjectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	2085;"	d
IDirectInputDevice8_GetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	2038;"	d
IDirectInputDevice8_GetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	2076;"	d
IDirectInputDevice8_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	2050;"	d
IDirectInputDevice8_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	2088;"	d
IDirectInputDevice8_Poll	thirdparty/glfw/src/deps/mingw/dinput.h	2059;"	d
IDirectInputDevice8_Poll	thirdparty/glfw/src/deps/mingw/dinput.h	2097;"	d
IDirectInputDevice8_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	2032;"	d
IDirectInputDevice8_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	2070;"	d
IDirectInputDevice8_Release	thirdparty/glfw/src/deps/mingw/dinput.h	2034;"	d
IDirectInputDevice8_Release	thirdparty/glfw/src/deps/mingw/dinput.h	2072;"	d
IDirectInputDevice8_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	2049;"	d
IDirectInputDevice8_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	2087;"	d
IDirectInputDevice8_SendDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	2060;"	d
IDirectInputDevice8_SendDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	2098;"	d
IDirectInputDevice8_SendForceFeedbackCommand	thirdparty/glfw/src/deps/mingw/dinput.h	2056;"	d
IDirectInputDevice8_SendForceFeedbackCommand	thirdparty/glfw/src/deps/mingw/dinput.h	2094;"	d
IDirectInputDevice8_SetActionMap	thirdparty/glfw/src/deps/mingw/dinput.h	2066;"	d
IDirectInputDevice8_SetActionMap	thirdparty/glfw/src/deps/mingw/dinput.h	2104;"	d
IDirectInputDevice8_SetCooperativeLevel	thirdparty/glfw/src/deps/mingw/dinput.h	2046;"	d
IDirectInputDevice8_SetCooperativeLevel	thirdparty/glfw/src/deps/mingw/dinput.h	2084;"	d
IDirectInputDevice8_SetDataFormat	thirdparty/glfw/src/deps/mingw/dinput.h	2044;"	d
IDirectInputDevice8_SetDataFormat	thirdparty/glfw/src/deps/mingw/dinput.h	2082;"	d
IDirectInputDevice8_SetEventNotification	thirdparty/glfw/src/deps/mingw/dinput.h	2045;"	d
IDirectInputDevice8_SetEventNotification	thirdparty/glfw/src/deps/mingw/dinput.h	2083;"	d
IDirectInputDevice8_SetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	2039;"	d
IDirectInputDevice8_SetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	2077;"	d
IDirectInputDevice8_Unacquire	thirdparty/glfw/src/deps/mingw/dinput.h	2041;"	d
IDirectInputDevice8_Unacquire	thirdparty/glfw/src/deps/mingw/dinput.h	2079;"	d
IDirectInputDevice8_WriteEffectToFile	thirdparty/glfw/src/deps/mingw/dinput.h	2063;"	d
IDirectInputDevice8_WriteEffectToFile	thirdparty/glfw/src/deps/mingw/dinput.h	2101;"	d
IDirectInputDevice_Acquire	thirdparty/glfw/src/deps/mingw/dinput.h	1601;"	d
IDirectInputDevice_Acquire	thirdparty/glfw/src/deps/mingw/dinput.h	1622;"	d
IDirectInputDevice_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	1594;"	d
IDirectInputDevice_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	1615;"	d
IDirectInputDevice_EnumObjects	thirdparty/glfw/src/deps/mingw/dinput.h	1598;"	d
IDirectInputDevice_EnumObjects	thirdparty/glfw/src/deps/mingw/dinput.h	1619;"	d
IDirectInputDevice_GetCapabilities	thirdparty/glfw/src/deps/mingw/dinput.h	1597;"	d
IDirectInputDevice_GetCapabilities	thirdparty/glfw/src/deps/mingw/dinput.h	1618;"	d
IDirectInputDevice_GetDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	1604;"	d
IDirectInputDevice_GetDeviceData	thirdparty/glfw/src/deps/mingw/dinput.h	1625;"	d
IDirectInputDevice_GetDeviceInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1609;"	d
IDirectInputDevice_GetDeviceInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1630;"	d
IDirectInputDevice_GetDeviceState	thirdparty/glfw/src/deps/mingw/dinput.h	1603;"	d
IDirectInputDevice_GetDeviceState	thirdparty/glfw/src/deps/mingw/dinput.h	1624;"	d
IDirectInputDevice_GetObjectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1608;"	d
IDirectInputDevice_GetObjectInfo	thirdparty/glfw/src/deps/mingw/dinput.h	1629;"	d
IDirectInputDevice_GetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	1599;"	d
IDirectInputDevice_GetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	1620;"	d
IDirectInputDevice_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	1611;"	d
IDirectInputDevice_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	1632;"	d
IDirectInputDevice_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	1593;"	d
IDirectInputDevice_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	1614;"	d
IDirectInputDevice_Release	thirdparty/glfw/src/deps/mingw/dinput.h	1595;"	d
IDirectInputDevice_Release	thirdparty/glfw/src/deps/mingw/dinput.h	1616;"	d
IDirectInputDevice_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	1610;"	d
IDirectInputDevice_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	1631;"	d
IDirectInputDevice_SetCooperativeLevel	thirdparty/glfw/src/deps/mingw/dinput.h	1607;"	d
IDirectInputDevice_SetCooperativeLevel	thirdparty/glfw/src/deps/mingw/dinput.h	1628;"	d
IDirectInputDevice_SetDataFormat	thirdparty/glfw/src/deps/mingw/dinput.h	1605;"	d
IDirectInputDevice_SetDataFormat	thirdparty/glfw/src/deps/mingw/dinput.h	1626;"	d
IDirectInputDevice_SetEventNotification	thirdparty/glfw/src/deps/mingw/dinput.h	1606;"	d
IDirectInputDevice_SetEventNotification	thirdparty/glfw/src/deps/mingw/dinput.h	1627;"	d
IDirectInputDevice_SetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	1600;"	d
IDirectInputDevice_SetProperty	thirdparty/glfw/src/deps/mingw/dinput.h	1621;"	d
IDirectInputDevice_Unacquire	thirdparty/glfw/src/deps/mingw/dinput.h	1602;"	d
IDirectInputDevice_Unacquire	thirdparty/glfw/src/deps/mingw/dinput.h	1623;"	d
IDirectInputEffect_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	1499;"	d
IDirectInputEffect_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	1515;"	d
IDirectInputEffect_Download	thirdparty/glfw/src/deps/mingw/dinput.h	1509;"	d
IDirectInputEffect_Download	thirdparty/glfw/src/deps/mingw/dinput.h	1525;"	d
IDirectInputEffect_Escape	thirdparty/glfw/src/deps/mingw/dinput.h	1511;"	d
IDirectInputEffect_Escape	thirdparty/glfw/src/deps/mingw/dinput.h	1527;"	d
IDirectInputEffect_GetEffectGuid	thirdparty/glfw/src/deps/mingw/dinput.h	1503;"	d
IDirectInputEffect_GetEffectGuid	thirdparty/glfw/src/deps/mingw/dinput.h	1519;"	d
IDirectInputEffect_GetEffectStatus	thirdparty/glfw/src/deps/mingw/dinput.h	1508;"	d
IDirectInputEffect_GetEffectStatus	thirdparty/glfw/src/deps/mingw/dinput.h	1524;"	d
IDirectInputEffect_GetParameters	thirdparty/glfw/src/deps/mingw/dinput.h	1504;"	d
IDirectInputEffect_GetParameters	thirdparty/glfw/src/deps/mingw/dinput.h	1520;"	d
IDirectInputEffect_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	1502;"	d
IDirectInputEffect_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	1518;"	d
IDirectInputEffect_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	1498;"	d
IDirectInputEffect_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	1514;"	d
IDirectInputEffect_Release	thirdparty/glfw/src/deps/mingw/dinput.h	1500;"	d
IDirectInputEffect_Release	thirdparty/glfw/src/deps/mingw/dinput.h	1516;"	d
IDirectInputEffect_SetParameters	thirdparty/glfw/src/deps/mingw/dinput.h	1505;"	d
IDirectInputEffect_SetParameters	thirdparty/glfw/src/deps/mingw/dinput.h	1521;"	d
IDirectInputEffect_Start	thirdparty/glfw/src/deps/mingw/dinput.h	1506;"	d
IDirectInputEffect_Start	thirdparty/glfw/src/deps/mingw/dinput.h	1522;"	d
IDirectInputEffect_Stop	thirdparty/glfw/src/deps/mingw/dinput.h	1507;"	d
IDirectInputEffect_Stop	thirdparty/glfw/src/deps/mingw/dinput.h	1523;"	d
IDirectInputEffect_Unload	thirdparty/glfw/src/deps/mingw/dinput.h	1510;"	d
IDirectInputEffect_Unload	thirdparty/glfw/src/deps/mingw/dinput.h	1526;"	d
IDirectInput_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	2199;"	d
IDirectInput_AddRef	thirdparty/glfw/src/deps/mingw/dinput.h	2210;"	d
IDirectInput_CreateDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2202;"	d
IDirectInput_CreateDevice	thirdparty/glfw/src/deps/mingw/dinput.h	2213;"	d
IDirectInput_EnumDevices	thirdparty/glfw/src/deps/mingw/dinput.h	2203;"	d
IDirectInput_EnumDevices	thirdparty/glfw/src/deps/mingw/dinput.h	2214;"	d
IDirectInput_GetDeviceStatus	thirdparty/glfw/src/deps/mingw/dinput.h	2204;"	d
IDirectInput_GetDeviceStatus	thirdparty/glfw/src/deps/mingw/dinput.h	2215;"	d
IDirectInput_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	2206;"	d
IDirectInput_Initialize	thirdparty/glfw/src/deps/mingw/dinput.h	2217;"	d
IDirectInput_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	2198;"	d
IDirectInput_QueryInterface	thirdparty/glfw/src/deps/mingw/dinput.h	2209;"	d
IDirectInput_Release	thirdparty/glfw/src/deps/mingw/dinput.h	2200;"	d
IDirectInput_Release	thirdparty/glfw/src/deps/mingw/dinput.h	2211;"	d
IDirectInput_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	2205;"	d
IDirectInput_RunControlPanel	thirdparty/glfw/src/deps/mingw/dinput.h	2216;"	d
IFDEF_RMT_ENABLED	thirdparty/remotery/include/remotery/Remotery.h	122;"	d
IFDEF_RMT_ENABLED	thirdparty/remotery/include/remotery/Remotery.h	124;"	d
IFDEF_RMT_USE_CUDA	thirdparty/remotery/include/remotery/Remotery.h	127;"	d
IFDEF_RMT_USE_CUDA	thirdparty/remotery/include/remotery/Remotery.h	129;"	d
IFDEF_RMT_USE_D3D11	thirdparty/remotery/include/remotery/Remotery.h	132;"	d
IFDEF_RMT_USE_D3D11	thirdparty/remotery/include/remotery/Remotery.h	134;"	d
IFDEF_RMT_USE_METAL	thirdparty/remotery/include/remotery/Remotery.h	142;"	d
IFDEF_RMT_USE_METAL	thirdparty/remotery/include/remotery/Remotery.h	144;"	d
IFDEF_RMT_USE_OPENGL	thirdparty/remotery/include/remotery/Remotery.h	137;"	d
IFDEF_RMT_USE_OPENGL	thirdparty/remotery/include/remotery/Remotery.h	139;"	d
IGNORE	thirdparty/soloud/src/tools/codegen/main.cpp	201;"	d	file:
IGeneratorInfo	thirdparty/catch/include/catch/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorsForTest	thirdparty/catch/include/catch/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IID_IDirectInput	thirdparty/glfw/src/deps/mingw/dinput.h	122;"	d
IID_IDirectInput2	thirdparty/glfw/src/deps/mingw/dinput.h	125;"	d
IID_IDirectInput7	thirdparty/glfw/src/deps/mingw/dinput.h	128;"	d
IID_IDirectInput8	thirdparty/glfw/src/deps/mingw/dinput.h	132;"	d
IID_IDirectInput8W	thirdparty/glfw/src/win32_joystick.c	63;"	d	file:
IID_IDirectInputDevice	thirdparty/glfw/src/deps/mingw/dinput.h	136;"	d
IID_IDirectInputDevice2	thirdparty/glfw/src/deps/mingw/dinput.h	140;"	d
IID_IDirectInputDevice7	thirdparty/glfw/src/deps/mingw/dinput.h	145;"	d
IID_IDirectInputDevice8	thirdparty/glfw/src/deps/mingw/dinput.h	150;"	d
ILLEGAL	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	28;"	d	file:
IMGUI_API	thirdparty/imgui/include/imgui/imgui.h	25;"	d
IMGUI_API	thirdparty/imguizmo/include/imguizmo/ImGuizmo.h	110;"	d
IMGUI_ASPECT_INCLUDED_76A60511_5EA9_453A_A2BF_6A7EC1E35B08	lib/nil_aspects/include/aspect/imgui_aspect.hpp	4;"	d
IMGUI_DATA_INCLUDED_42CB464A_F95B_4BB7_A948_183F342A2F3C	lib/nil_aspects/src/imgui/imgui_data.hpp	4;"	d
IMGUI_DEFINE_MATH_OPERATORS	thirdparty/imgui/src/imgui.cpp	620;"	d	file:
IMGUI_DEFINE_MATH_OPERATORS	thirdparty/imgui/src/imgui_draw.cpp	18;"	d	file:
IMGUI_DEFINE_MATH_OPERATORS	thirdparty/imguizmo/src/ImGuizmo.cpp	24;"	d	file:
IMGUI_DEFINE_PLACEMENT_NEW	thirdparty/imgui/src/imgui.cpp	621;"	d	file:
IMGUI_DEFINE_PLACEMENT_NEW	thirdparty/imgui/src/imgui_draw.cpp	19;"	d	file:
IMGUI_ONCE_UPON_A_FRAME	thirdparty/imgui/include/imgui/imgui.h	899;"	d
IMGUI_RESOURCE_INCLUDED_8D7DB56E_D91E_41D5_92D9_2250EDE3174E	lib/nil_aspects/src/imgui/imgui_resource.hpp	3;"	d
IMGUI_STB_NAMESPACE	thirdparty/imgui/src/imgui_draw.cpp	/^namespace IMGUI_STB_NAMESPACE$/;"	n	file:
IMGUI_VERSION	thirdparty/imgui/include/imgui/imgui.h	21;"	d
IMPL_INCLUDED_7AF120D0_6935_4EC8_997B_344B3E9C1A4C	lib/lib/include/lib/util_impl.hpp	13;"	d
IM_ARRAYSIZE	thirdparty/imgui/include/imgui/imgui_internal.h	80;"	d
IM_ASSERT	thirdparty/imgui/include/imgui/imgui.h	31;"	d
IM_COL32	thirdparty/imgui/include/imgui/imgui.h	1054;"	d
IM_COL32_A_MASK	thirdparty/imgui/include/imgui/imgui.h	1046;"	d
IM_COL32_A_MASK	thirdparty/imgui/include/imgui/imgui.h	1052;"	d
IM_COL32_A_SHIFT	thirdparty/imgui/include/imgui/imgui.h	1045;"	d
IM_COL32_A_SHIFT	thirdparty/imgui/include/imgui/imgui.h	1051;"	d
IM_COL32_BLACK	thirdparty/imgui/include/imgui/imgui.h	1056;"	d
IM_COL32_BLACK_TRANS	thirdparty/imgui/include/imgui/imgui.h	1057;"	d
IM_COL32_B_SHIFT	thirdparty/imgui/include/imgui/imgui.h	1044;"	d
IM_COL32_B_SHIFT	thirdparty/imgui/include/imgui/imgui.h	1050;"	d
IM_COL32_G_SHIFT	thirdparty/imgui/include/imgui/imgui.h	1043;"	d
IM_COL32_G_SHIFT	thirdparty/imgui/include/imgui/imgui.h	1049;"	d
IM_COL32_R_SHIFT	thirdparty/imgui/include/imgui/imgui.h	1042;"	d
IM_COL32_R_SHIFT	thirdparty/imgui/include/imgui/imgui.h	1048;"	d
IM_COL32_WHITE	thirdparty/imgui/include/imgui/imgui.h	1055;"	d
IM_F32_TO_INT8_SAT	thirdparty/imgui/src/imgui.cpp	886;"	d	file:
IM_F32_TO_INT8_UNBOUND	thirdparty/imgui/src/imgui.cpp	885;"	d	file:
IM_NEWLINE	thirdparty/imgui/src/imgui.cpp	890;"	d	file:
IM_NEWLINE	thirdparty/imgui/src/imgui.cpp	892;"	d	file:
IM_OFFSETOF	thirdparty/imgui/include/imgui/imgui_internal.h	82;"	d
IM_PI	thirdparty/imgui/include/imgui/imgui_internal.h	81;"	d
IM_PLACEMENT_NEW	thirdparty/imgui/include/imgui/imgui_internal.h	149;"	d
IM_PRINTFARGS	thirdparty/imgui/include/imgui/imgui.h	36;"	d
IM_PRINTFARGS	thirdparty/imgui/include/imgui/imgui.h	38;"	d
IMutableContext	thirdparty/catch/include/catch/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
INAUDIBLE	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			INAUDIBLE = 32,$/;"	e	enum:SoLoud::AudioSourceInstance::FLAGS
INAUDIBLE_KILL	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			INAUDIBLE_KILL = 64,$/;"	e	enum:SoLoud::AudioSource::FLAGS
INAUDIBLE_KILL	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			INAUDIBLE_KILL = 64,$/;"	e	enum:SoLoud::AudioSourceInstance::FLAGS
INAUDIBLE_TICK	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			INAUDIBLE_TICK = 128$/;"	e	enum:SoLoud::AudioSource::FLAGS
INAUDIBLE_TICK	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			INAUDIBLE_TICK = 128$/;"	e	enum:SoLoud::AudioSourceInstance::FLAGS
INCLUDED_7C3DBCF8_82CC_4FFC_BE00_779FCC633E11	lib/lib/include/lib/color.hpp	17;"	d
INCLUDED_GETOPT_PORT_H	thirdparty/glfw/src/deps/getopt.h	28;"	d
INCLUDE_STB_DIVIDE_H	thirdparty/stb/include/stb/stb_divide.h	87;"	d
INCLUDE_STB_EASY_FONT_H	thirdparty/stb/include/stb/stb_easy_font.h	102;"	d
INCLUDE_STB_IMAGE_WRITE_H	thirdparty/glfw/src/deps/stb_image_write.h	116;"	d
INCLUDE_STB_IMAGE_WRITE_H	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	81;"	d
INCLUDE_STB_IMAGE_WRITE_H	thirdparty/stb/include/stb/stb_image_write.h	125;"	d
INCLUDE_STB_TEXTEDIT_H	thirdparty/stb/include/stb/stb_textedit.h	263;"	d
INSERT	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	PRINT_SCREEN		: 44,$/;"	p	class:namespace.Codes
INSTR	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^typedef struct INSTR$/;"	s
INT16_C	thirdparty/glfw/src/deps/vs2008/stdint.h	231;"	d
INT16_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	135;"	d
INT16_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	134;"	d
INT32_C	thirdparty/glfw/src/deps/vs2008/stdint.h	232;"	d
INT32_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	137;"	d
INT32_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	136;"	d
INT64_C	thirdparty/glfw/src/deps/vs2008/stdint.h	233;"	d
INT64_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	139;"	d
INT64_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	138;"	d
INT8_C	thirdparty/glfw/src/deps/vs2008/stdint.h	230;"	d
INT8_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	133;"	d
INT8_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	132;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1475;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1476;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1536;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1537;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1565;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1566;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1640;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1641;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1679;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1680;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1784;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1785;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1826;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1827;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1941;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1942;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1987;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	1988;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2161;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2162;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2180;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2181;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2223;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2224;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2244;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2245;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2293;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2294;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2316;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2317;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2373;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2374;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2395;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2396;"	d
INTERFACE	thirdparty/glfw/src/deps/mingw/dinput.h	2413;"	d
INTERNAL_CATCH_ELSE	thirdparty/catch/include/catch/catch.hpp	2076;"	d
INTERNAL_CATCH_GENERATE	thirdparty/catch/include/catch/catch.hpp	2507;"	d
INTERNAL_CATCH_IF	thirdparty/catch/include/catch/catch.hpp	2071;"	d
INTERNAL_CATCH_INFO	thirdparty/catch/include/catch/catch.hpp	2151;"	d
INTERNAL_CATCH_LINESTR	thirdparty/catch/include/catch/catch.hpp	2505;"	d
INTERNAL_CATCH_LINESTR2	thirdparty/catch/include/catch/catch.hpp	2504;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	thirdparty/catch/include/catch/catch.hpp	713;"	d
INTERNAL_CATCH_MSG	thirdparty/catch/include/catch/catch.hpp	2133;"	d
INTERNAL_CATCH_NO_THROW	thirdparty/catch/include/catch/catch.hpp	2081;"	d
INTERNAL_CATCH_REACT	thirdparty/catch/include/catch/catch.hpp	2052;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	thirdparty/catch/include/catch/catch.hpp	8835;"	d
INTERNAL_CATCH_REGISTER_LISTENER	thirdparty/catch/include/catch/catch.hpp	8841;"	d
INTERNAL_CATCH_REGISTER_REPORTER	thirdparty/catch/include/catch/catch.hpp	8838;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	thirdparty/catch/include/catch/catch.hpp	729;"	d
INTERNAL_CATCH_SECTION	thirdparty/catch/include/catch/catch.hpp	2322;"	d
INTERNAL_CATCH_STRINGIFY	thirdparty/catch/include/catch/catch.hpp	72;"	d
INTERNAL_CATCH_STRINGIFY2	thirdparty/catch/include/catch/catch.hpp	71;"	d
INTERNAL_CATCH_TEST	thirdparty/catch/include/catch/catch.hpp	2057;"	d
INTERNAL_CATCH_TESTCASE	thirdparty/catch/include/catch/catch.hpp	709;"	d
INTERNAL_CATCH_TESTCASE2	thirdparty/catch/include/catch/catch.hpp	705;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	thirdparty/catch/include/catch/catch.hpp	725;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	thirdparty/catch/include/catch/catch.hpp	717;"	d
INTERNAL_CATCH_THROWS	thirdparty/catch/include/catch/catch.hpp	2095;"	d
INTERNAL_CATCH_THROWS_AS	thirdparty/catch/include/catch/catch.hpp	2112;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	thirdparty/catch/include/catch/catch.hpp	2610;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	thirdparty/catch/include/catch/catch.hpp	2605;"	d
INTERNAL_CATCH_UNIQUE_NAME	thirdparty/catch/include/catch/catch.hpp	66;"	d
INTERNAL_CATCH_UNIQUE_NAME	thirdparty/catch/include/catch/catch.hpp	68;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	thirdparty/catch/include/catch/catch.hpp	64;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	thirdparty/catch/include/catch/catch.hpp	63;"	d
INTERNAL_CHECK_THAT	thirdparty/catch/include/catch/catch.hpp	2155;"	d
INTMAX_C	thirdparty/glfw/src/deps/vs2008/stdint.h	241;"	d
INTMAX_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	186;"	d
INTMAX_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	185;"	d
INTPTR_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	176;"	d
INTPTR_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	180;"	d
INTPTR_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	175;"	d
INTPTR_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	179;"	d
INT_FAST16_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	163;"	d
INT_FAST16_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	162;"	d
INT_FAST32_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	165;"	d
INT_FAST32_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	164;"	d
INT_FAST64_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	167;"	d
INT_FAST64_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	166;"	d
INT_FAST8_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	161;"	d
INT_FAST8_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	160;"	d
INT_LEAST16_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	149;"	d
INT_LEAST16_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	148;"	d
INT_LEAST32_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	151;"	d
INT_LEAST32_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	150;"	d
INT_LEAST64_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	153;"	d
INT_LEAST64_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	152;"	d
INT_LEAST8_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	147;"	d
INT_LEAST8_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	146;"	d
INVALID_BITS	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1516;"	d	file:
INVALID_BITS	thirdparty/stb/include/stb/stb_vorbis.c	1515;"	d	file:
INVALID_PARAMETER	thirdparty/soloud/include/soloud/soloud_error.h	/^		INVALID_PARAMETER = 1, \/\/ Some parameter is invalid$/;"	e	enum:SoLoud::SOLOUD_ERRORS
INVALID_SOCKET	thirdparty/remotery/src/Remotery.c	2058;"	d	file:
INVERSE_DISTANCE	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			INVERSE_DISTANCE = 1,$/;"	e	enum:SoLoud::AudioSource::ATTENUATION_MODELS
IO	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiIO                 IO;$/;"	m	struct:ImGuiContext
IRQcount	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int IRQcount;$/;"	m	class:CPU
IS_PUSH_MODE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	858;"	d	file:
IS_PUSH_MODE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	860;"	d	file:
IS_PUSH_MODE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	862;"	d	file:
IS_PUSH_MODE	thirdparty/stb/include/stb/stb_vorbis.c	856;"	d	file:
IS_PUSH_MODE	thirdparty/stb/include/stb/stb_vorbis.c	858;"	d	file:
IS_PUSH_MODE	thirdparty/stb/include/stb/stb_vorbis.c	860;"	d	file:
IShared	thirdparty/catch/include/catch/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
ITestCase	thirdparty/catch/include/catch/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCaseRegistry	thirdparty/catch/include/catch/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
I_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule I_rules[] =$/;"	v	file:
Id	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID             Id;                         \/\/ widget id owning the text state$/;"	m	struct:ImGuiTextEditState
Id	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID     Id;$/;"	m	struct:ImGuiIniData
IdxBuffer	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<ImDrawIdx>     IdxBuffer;          \/\/ Index buffer. Each command consume ImDrawCmd::ElemCount of those$/;"	m	struct:ImDrawList
IdxBuffer	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<ImDrawIdx>     IdxBuffer;$/;"	m	struct:ImDrawChannel
ImCharIsSpace	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline bool      ImCharIsSpace(int c)            { return c == ' ' || c == '\\t' || c == 0x3000; }$/;"	f
ImClamp	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2 ImClamp(const ImVec2& f, const ImVec2& mn, ImVec2 mx)      { return ImVec2(ImClamp(f.x,mn.x,mx.x), ImClamp(f.y,mn.y,mx.y)); }$/;"	f
ImClamp	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline float  ImClamp(float v, float mn, float mx)                       { return (v < mn) ? mn : (v > mx) ? mx : v; }$/;"	f
ImClamp	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline int    ImClamp(int v, int mn, int mx)                             { return (v < mn) ? mn : (v > mx) ? mx : v; }$/;"	f
ImColor	thirdparty/imgui/include/imgui/imgui.h	/^    ImColor()                                                       { Value.x = Value.y = Value.z = Value.w = 0.0f; }$/;"	f	struct:ImColor
ImColor	thirdparty/imgui/include/imgui/imgui.h	/^    ImColor(ImU32 rgba)                                             { float sc = 1.0f\/255.0f; Value.x = (float)((rgba>>IM_COL32_R_SHIFT)&0xFF) * sc; Value.y = (float)((rgba>>IM_COL32_G_SHIFT)&0xFF) * sc; Value.z = (float)((rgba>>IM_COL32_B_SHIFT)&0xFF) * sc; Value.w = (float)((rgba>>IM_COL32_A_SHIFT)&0xFF) * sc; }$/;"	f	struct:ImColor
ImColor	thirdparty/imgui/include/imgui/imgui.h	/^    ImColor(const ImVec4& col)                                      { Value = col; }$/;"	f	struct:ImColor
ImColor	thirdparty/imgui/include/imgui/imgui.h	/^    ImColor(float r, float g, float b, float a = 1.0f)              { Value.x = r; Value.y = g; Value.z = b; Value.w = a; }$/;"	f	struct:ImColor
ImColor	thirdparty/imgui/include/imgui/imgui.h	/^    ImColor(int r, int g, int b, int a = 255)                       { float sc = 1.0f\/255.0f; Value.x = (float)r * sc; Value.y = (float)g * sc; Value.z = (float)b * sc; Value.w = (float)a * sc; }$/;"	f	struct:ImColor
ImColor	thirdparty/imgui/include/imgui/imgui.h	/^struct ImColor$/;"	s
ImDrawCallback	thirdparty/imgui/include/imgui/imgui.h	/^typedef void (*ImDrawCallback)(const ImDrawList* parent_list, const ImDrawCmd* cmd);$/;"	t
ImDrawChannel	thirdparty/imgui/include/imgui/imgui.h	/^struct ImDrawChannel$/;"	s
ImDrawCmd	thirdparty/imgui/include/imgui/imgui.h	/^    ImDrawCmd() { ElemCount = 0; ClipRect.x = ClipRect.y = -8192.0f; ClipRect.z = ClipRect.w = +8192.0f; TextureId = NULL; UserCallback = NULL; UserCallbackData = NULL; }$/;"	f	struct:ImDrawCmd
ImDrawCmd	thirdparty/imgui/include/imgui/imgui.h	/^struct ImDrawCmd$/;"	s
ImDrawData	thirdparty/imgui/include/imgui/imgui.h	/^    ImDrawData() { Valid = false; CmdLists = NULL; CmdListsCount = TotalVtxCount = TotalIdxCount = 0; }$/;"	f	struct:ImDrawData
ImDrawData	thirdparty/imgui/include/imgui/imgui.h	/^struct ImDrawData$/;"	s
ImDrawIdx	thirdparty/imgui/include/imgui/imgui.h	/^typedef unsigned short ImDrawIdx;$/;"	t
ImDrawList	thirdparty/imgui/include/imgui/imgui.h	/^    ImDrawList()  { _OwnerName = NULL; Clear(); }$/;"	f	struct:ImDrawList
ImDrawList	thirdparty/imgui/include/imgui/imgui.h	/^struct ImDrawList$/;"	s
ImDrawVert	thirdparty/imgui/include/imgui/imgui.h	/^struct ImDrawVert$/;"	s
ImFileLoadToMemory	thirdparty/imgui/src/imgui.cpp	/^void* ImFileLoadToMemory(const char* filename, const char* file_open_mode, int* out_file_size, int padding_bytes)$/;"	f
ImFileOpen	thirdparty/imgui/src/imgui.cpp	/^FILE* ImFileOpen(const char* filename, const char* mode)$/;"	f
ImFloor	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2 ImFloor(ImVec2 v)                                          { return ImVec2((float)(int)v.x, (float)(int)v.y); }$/;"	f
ImFloor	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline float  ImFloor(float f)                                           { return (float)(int)f; }$/;"	f
ImFont	thirdparty/imgui/include/imgui/imgui.h	/^struct ImFont$/;"	s
ImFont	thirdparty/imgui/src/imgui_draw.cpp	/^ImFont::ImFont()$/;"	f	class:ImFont
ImFontAtlas	thirdparty/imgui/include/imgui/imgui.h	/^struct ImFontAtlas$/;"	s
ImFontAtlas	thirdparty/imgui/src/imgui_draw.cpp	/^ImFontAtlas::ImFontAtlas()$/;"	f	class:ImFontAtlas
ImFontConfig	thirdparty/imgui/include/imgui/imgui.h	/^struct ImFontConfig$/;"	s
ImFontConfig	thirdparty/imgui/src/imgui_draw.cpp	/^ImFontConfig::ImFontConfig()$/;"	f	class:ImFontConfig
ImFormatString	thirdparty/imgui/src/imgui.cpp	/^int ImFormatString(char* buf, int buf_size, const char* fmt, ...)$/;"	f
ImFormatStringV	thirdparty/imgui/src/imgui.cpp	/^int ImFormatStringV(char* buf, int buf_size, const char* fmt, va_list args)$/;"	f
ImGUI	lib/nil_aspects/src/imgui/imgui_data.cpp	/^namespace ImGUI {$/;"	n	namespace:Nil	file:
ImGUI	lib/nil_aspects/src/imgui/imgui_data.hpp	/^namespace ImGUI {$/;"	n	namespace:Nil
ImGUI	lib/nil_aspects/src/imgui/imgui_resource.cpp	/^namespace ImGUI {$/;"	n	namespace:Nil	file:
ImGUI	lib/nil_aspects/src/imgui/imgui_resource.hpp	/^namespace ImGUI {$/;"	n	namespace:Nil
ImGui	thirdparty/imgui/include/imgui/imgui.h	/^namespace ImGui$/;"	n
ImGui	thirdparty/imgui/include/imgui/imgui_internal.h	/^namespace ImGui$/;"	n
ImGuiButtonFlags	thirdparty/imgui/include/imgui/imgui_internal.h	/^typedef int ImGuiButtonFlags;     \/\/ enum ImGuiButtonFlags_$/;"	t
ImGuiButtonFlags_	thirdparty/imgui/include/imgui/imgui_internal.h	/^enum ImGuiButtonFlags_$/;"	g
ImGuiButtonFlags_AlignTextBaseLine	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiButtonFlags_AlignTextBaseLine      = 1 << 8,   \/\/ vertically align button to match text baseline - ButtonEx() only$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_AllowOverlapMode	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiButtonFlags_AllowOverlapMode       = 1 << 10   \/\/ require previous frame HoveredId to either match id or be null before being usable$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_Disabled	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiButtonFlags_Disabled               = 1 << 7,   \/\/ disable interaction$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_DontClosePopups	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiButtonFlags_DontClosePopups        = 1 << 6,   \/\/ disable automatically closing parent popup on press$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_FlattenChilds	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiButtonFlags_FlattenChilds          = 1 << 5,   \/\/ allow interaction even if a child window is overlapping$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_NoKeyModifiers	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiButtonFlags_NoKeyModifiers         = 1 << 9,   \/\/ disable interaction if a key modifier is held$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnClick	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnClick         = 1 << 2,   \/\/ return pressed on click (default requires click+release)$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnClickRelease	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnClickRelease  = 1 << 1,   \/\/ (default) return pressed on click+release on same item (default if no PressedOn** flag is set)$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnDoubleClick	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnDoubleClick   = 1 << 4,   \/\/ return pressed on double-click (default requires click+release)$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnRelease	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnRelease       = 1 << 3,   \/\/ return pressed on release (default requires click+release)$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_Repeat	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiButtonFlags_Repeat                 = 1 << 0,   \/\/ hold to repeat$/;"	e	enum:ImGuiButtonFlags_
ImGuiCol	thirdparty/imgui/include/imgui/imgui.h	/^typedef int ImGuiCol;               \/\/ a color identifier for styling       \/\/ enum ImGuiCol_$/;"	t
ImGuiColMod	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct ImGuiColMod$/;"	s
ImGuiCol_	thirdparty/imgui/include/imgui/imgui.h	/^enum ImGuiCol_$/;"	g
ImGuiCol_Border	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_Border,$/;"	e	enum:ImGuiCol_
ImGuiCol_BorderShadow	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_BorderShadow,$/;"	e	enum:ImGuiCol_
ImGuiCol_Button	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_Button,$/;"	e	enum:ImGuiCol_
ImGuiCol_ButtonActive	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ButtonActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_ButtonHovered	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ButtonHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_COUNT	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_COUNT$/;"	e	enum:ImGuiCol_
ImGuiCol_CheckMark	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_CheckMark,$/;"	e	enum:ImGuiCol_
ImGuiCol_ChildWindowBg	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ChildWindowBg,         \/\/ Background of child windows$/;"	e	enum:ImGuiCol_
ImGuiCol_CloseButton	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_CloseButton,$/;"	e	enum:ImGuiCol_
ImGuiCol_CloseButtonActive	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_CloseButtonActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_CloseButtonHovered	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_CloseButtonHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_Column	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_Column,$/;"	e	enum:ImGuiCol_
ImGuiCol_ColumnActive	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ColumnActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_ColumnHovered	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ColumnHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_ComboBg	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ComboBg,$/;"	e	enum:ImGuiCol_
ImGuiCol_FrameBg	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_FrameBg,               \/\/ Background of checkbox, radio button, plot, slider, text input$/;"	e	enum:ImGuiCol_
ImGuiCol_FrameBgActive	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_FrameBgActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_FrameBgHovered	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_FrameBgHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_Header	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_Header,$/;"	e	enum:ImGuiCol_
ImGuiCol_HeaderActive	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_HeaderActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_HeaderHovered	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_HeaderHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_MenuBarBg	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_MenuBarBg,$/;"	e	enum:ImGuiCol_
ImGuiCol_ModalWindowDarkening	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ModalWindowDarkening,  \/\/ darken entire screen when a modal window is active$/;"	e	enum:ImGuiCol_
ImGuiCol_PlotHistogram	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_PlotHistogram,$/;"	e	enum:ImGuiCol_
ImGuiCol_PlotHistogramHovered	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_PlotHistogramHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_PlotLines	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_PlotLines,$/;"	e	enum:ImGuiCol_
ImGuiCol_PlotLinesHovered	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_PlotLinesHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_PopupBg	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_PopupBg,               \/\/ Background of popups, menus, tooltips windows$/;"	e	enum:ImGuiCol_
ImGuiCol_ResizeGrip	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ResizeGrip,$/;"	e	enum:ImGuiCol_
ImGuiCol_ResizeGripActive	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ResizeGripActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_ResizeGripHovered	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ResizeGripHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_ScrollbarBg	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ScrollbarBg,$/;"	e	enum:ImGuiCol_
ImGuiCol_ScrollbarGrab	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ScrollbarGrab,$/;"	e	enum:ImGuiCol_
ImGuiCol_ScrollbarGrabActive	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ScrollbarGrabActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_ScrollbarGrabHovered	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_ScrollbarGrabHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_SliderGrab	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_SliderGrab,$/;"	e	enum:ImGuiCol_
ImGuiCol_SliderGrabActive	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_SliderGrabActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_Text	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_Text,$/;"	e	enum:ImGuiCol_
ImGuiCol_TextDisabled	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_TextDisabled,$/;"	e	enum:ImGuiCol_
ImGuiCol_TextSelectedBg	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_TextSelectedBg,$/;"	e	enum:ImGuiCol_
ImGuiCol_TitleBg	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_TitleBg,$/;"	e	enum:ImGuiCol_
ImGuiCol_TitleBgActive	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_TitleBgActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_TitleBgCollapsed	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_TitleBgCollapsed,$/;"	e	enum:ImGuiCol_
ImGuiCol_WindowBg	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiCol_WindowBg,              \/\/ Background of normal windows$/;"	e	enum:ImGuiCol_
ImGuiColorEditMode	thirdparty/imgui/include/imgui/imgui.h	/^typedef int ImGuiColorEditMode;     \/\/ color edit mode for ColorEdit*()     \/\/ enum ImGuiColorEditMode_$/;"	t
ImGuiColorEditMode_	thirdparty/imgui/include/imgui/imgui.h	/^enum ImGuiColorEditMode_$/;"	g
ImGuiColorEditMode_HEX	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiColorEditMode_HEX = 2$/;"	e	enum:ImGuiColorEditMode_
ImGuiColorEditMode_HSV	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiColorEditMode_HSV = 1,$/;"	e	enum:ImGuiColorEditMode_
ImGuiColorEditMode_RGB	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiColorEditMode_RGB = 0,$/;"	e	enum:ImGuiColorEditMode_
ImGuiColorEditMode_UserSelect	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiColorEditMode_UserSelect = -2,$/;"	e	enum:ImGuiColorEditMode_
ImGuiColorEditMode_UserSelectShowButton	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiColorEditMode_UserSelectShowButton = -1,$/;"	e	enum:ImGuiColorEditMode_
ImGuiColumnData	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct ImGuiColumnData$/;"	s
ImGuiContext	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiContext()$/;"	f	struct:ImGuiContext
ImGuiContext	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct ImGuiContext$/;"	s
ImGuiCorner	thirdparty/imgui/include/imgui/imgui_internal.h	/^enum ImGuiCorner$/;"	g
ImGuiCorner_All	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiCorner_All         = 0x0F$/;"	e	enum:ImGuiCorner
ImGuiCorner_BottomLeft	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiCorner_BottomLeft  = 1 << 3, \/\/ 8$/;"	e	enum:ImGuiCorner
ImGuiCorner_BottomRight	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiCorner_BottomRight = 1 << 2, \/\/ 4$/;"	e	enum:ImGuiCorner
ImGuiCorner_TopLeft	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiCorner_TopLeft     = 1 << 0, \/\/ 1$/;"	e	enum:ImGuiCorner
ImGuiCorner_TopRight	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiCorner_TopRight    = 1 << 1, \/\/ 2$/;"	e	enum:ImGuiCorner
ImGuiDataType	thirdparty/imgui/include/imgui/imgui_internal.h	/^enum ImGuiDataType$/;"	g
ImGuiDataType_Float	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiDataType_Float,$/;"	e	enum:ImGuiDataType
ImGuiDataType_Float2	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiDataType_Float2,$/;"	e	enum:ImGuiDataType
ImGuiDataType_Int	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiDataType_Int,$/;"	e	enum:ImGuiDataType
ImGuiDrawContext	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiDrawContext()$/;"	f	struct:ImGuiDrawContext
ImGuiDrawContext	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct IMGUI_API ImGuiDrawContext$/;"	s
ImGuiGroupData	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct ImGuiGroupData$/;"	s
ImGuiID	thirdparty/imgui/include/imgui/imgui.h	/^typedef unsigned int ImGuiID;       \/\/ unique ID used by widgets (typically hashed from a stack of string)$/;"	t
ImGuiIO	thirdparty/imgui/include/imgui/imgui.h	/^struct ImGuiIO$/;"	s
ImGuiIO	thirdparty/imgui/src/imgui.cpp	/^ImGuiIO::ImGuiIO()$/;"	f	class:ImGuiIO
ImGuiIniData	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct ImGuiIniData$/;"	s
ImGuiInputTextFlags	thirdparty/imgui/include/imgui/imgui.h	/^typedef int ImGuiInputTextFlags;    \/\/ flags for InputText*()               \/\/ enum ImGuiInputTextFlags_$/;"	t
ImGuiInputTextFlags_	thirdparty/imgui/include/imgui/imgui.h	/^enum ImGuiInputTextFlags_$/;"	g
ImGuiInputTextFlags_AllowTabInput	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_AllowTabInput       = 1 << 10,  \/\/ Pressing TAB input a '\\t' character into the text field$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_AlwaysInsertMode	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_AlwaysInsertMode    = 1 << 13,  \/\/ Insert mode$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_AutoSelectAll	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_AutoSelectAll       = 1 << 4,   \/\/ Select entire text when first taking mouse focus$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CallbackAlways	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_CallbackAlways      = 1 << 8,   \/\/ Call user function every time. User code may query cursor position, modify text buffer.$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CallbackCharFilter	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_CallbackCharFilter  = 1 << 9,   \/\/ Call user function to filter character. Modify data->EventChar to replace\/filter input, or return 1 to discard character.$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CallbackCompletion	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_CallbackCompletion  = 1 << 6,   \/\/ Call user function on pressing TAB (for completion handling)$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CallbackHistory	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_CallbackHistory     = 1 << 7,   \/\/ Call user function on pressing Up\/Down arrows (for history handling)$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsDecimal	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsDecimal        = 1 << 0,   \/\/ Allow 0123456789.+-*\/$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsHexadecimal	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsHexadecimal    = 1 << 1,   \/\/ Allow 0123456789ABCDEFabcdef$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsNoBlank	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsNoBlank        = 1 << 3,   \/\/ Filter out spaces, tabs$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsUppercase	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsUppercase      = 1 << 2,   \/\/ Turn a..z into A..Z$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CtrlEnterForNewLine	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_CtrlEnterForNewLine = 1 << 11,  \/\/ In multi-line mode, unfocus with Enter, add new line with Ctrl+Enter (default is opposite: unfocus with Ctrl+Enter, add line with Enter).$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_EnterReturnsTrue	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_EnterReturnsTrue    = 1 << 5,   \/\/ Return 'true' when Enter is pressed (as opposed to when the value was modified)$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_Multiline	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_Multiline           = 1 << 20   \/\/ For internal use by InputTextMultiline()$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_NoHorizontalScroll	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_NoHorizontalScroll  = 1 << 12,  \/\/ Disable following the cursor horizontally$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_Password	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_Password            = 1 << 15,  \/\/ Password mode, display all characters as '*'$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_ReadOnly	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiInputTextFlags_ReadOnly            = 1 << 14,  \/\/ Read-only mode$/;"	e	enum:ImGuiInputTextFlags_
ImGuiKey	thirdparty/imgui/include/imgui/imgui.h	/^typedef int ImGuiKey;               \/\/ a key identifier (ImGui-side enum)   \/\/ enum ImGuiKey_$/;"	t
ImGuiKey_	thirdparty/imgui/include/imgui/imgui.h	/^enum ImGuiKey_$/;"	g
ImGuiKey_A	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_A,         \/\/ for text edit CTRL+A: select all$/;"	e	enum:ImGuiKey_
ImGuiKey_Backspace	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_Backspace, \/\/ for text edit$/;"	e	enum:ImGuiKey_
ImGuiKey_C	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_C,         \/\/ for text edit CTRL+C: copy$/;"	e	enum:ImGuiKey_
ImGuiKey_COUNT	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_COUNT$/;"	e	enum:ImGuiKey_
ImGuiKey_Delete	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_Delete,    \/\/ for text edit$/;"	e	enum:ImGuiKey_
ImGuiKey_DownArrow	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_DownArrow, \/\/ for text edit$/;"	e	enum:ImGuiKey_
ImGuiKey_End	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_End,       \/\/ for text edit$/;"	e	enum:ImGuiKey_
ImGuiKey_Enter	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_Enter,     \/\/ for text edit$/;"	e	enum:ImGuiKey_
ImGuiKey_Escape	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_Escape,    \/\/ for text edit$/;"	e	enum:ImGuiKey_
ImGuiKey_Home	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_Home,      \/\/ for text edit$/;"	e	enum:ImGuiKey_
ImGuiKey_LeftArrow	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_LeftArrow, \/\/ for text edit$/;"	e	enum:ImGuiKey_
ImGuiKey_PageDown	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_PageDown,$/;"	e	enum:ImGuiKey_
ImGuiKey_PageUp	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_PageUp,$/;"	e	enum:ImGuiKey_
ImGuiKey_RightArrow	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_RightArrow,\/\/ for text edit$/;"	e	enum:ImGuiKey_
ImGuiKey_Tab	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_Tab,       \/\/ for tabbing through fields$/;"	e	enum:ImGuiKey_
ImGuiKey_UpArrow	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_UpArrow,   \/\/ for text edit$/;"	e	enum:ImGuiKey_
ImGuiKey_V	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_V,         \/\/ for text edit CTRL+V: paste$/;"	e	enum:ImGuiKey_
ImGuiKey_X	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_X,         \/\/ for text edit CTRL+X: cut$/;"	e	enum:ImGuiKey_
ImGuiKey_Y	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_Y,         \/\/ for text edit CTRL+Y: redo$/;"	e	enum:ImGuiKey_
ImGuiKey_Z	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiKey_Z,         \/\/ for text edit CTRL+Z: undo$/;"	e	enum:ImGuiKey_
ImGuiLayoutType	thirdparty/imgui/include/imgui/imgui_internal.h	/^typedef int ImGuiLayoutType;      \/\/ enum ImGuiLayoutType_$/;"	t
ImGuiLayoutType_	thirdparty/imgui/include/imgui/imgui_internal.h	/^enum ImGuiLayoutType_$/;"	g
ImGuiLayoutType_Horizontal	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiLayoutType_Horizontal$/;"	e	enum:ImGuiLayoutType_
ImGuiLayoutType_Vertical	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiLayoutType_Vertical,$/;"	e	enum:ImGuiLayoutType_
ImGuiListClipper	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiListClipper(int items_count = -1, float items_height = -1.0f)  { Begin(items_count, items_height); } \/\/ NB: Begin() initialize every fields (as we allow user to call Begin\/End multiple times on a same instance if they want).$/;"	f	struct:ImGuiListClipper
ImGuiListClipper	thirdparty/imgui/include/imgui/imgui.h	/^struct ImGuiListClipper$/;"	s
ImGuiMouseCursor	thirdparty/imgui/include/imgui/imgui.h	/^typedef int ImGuiMouseCursor;       \/\/ a mouse cursor identifier            \/\/ enum ImGuiMouseCursor_$/;"	t
ImGuiMouseCursorData	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct ImGuiMouseCursorData$/;"	s
ImGuiMouseCursor_	thirdparty/imgui/include/imgui/imgui.h	/^enum ImGuiMouseCursor_$/;"	g
ImGuiMouseCursor_Arrow	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiMouseCursor_Arrow = 0,$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_Count_	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiMouseCursor_Count_$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_Move	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiMouseCursor_Move,              \/\/ Unused$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_None	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiMouseCursor_None = -1,$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeEW	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeEW,          \/\/ When hovering over a column$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeNESW	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeNESW,        \/\/ Unused$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeNS	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeNS,          \/\/ Unused$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeNWSE	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeNWSE,        \/\/ When hovering over the bottom-right corner of a window$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_TextInput	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiMouseCursor_TextInput,         \/\/ When hovering over InputText, etc.$/;"	e	enum:ImGuiMouseCursor_
ImGuiOnceUponAFrame	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiOnceUponAFrame() { RefFrame = -1; }$/;"	f	struct:ImGuiOnceUponAFrame
ImGuiOnceUponAFrame	thirdparty/imgui/include/imgui/imgui.h	/^struct ImGuiOnceUponAFrame$/;"	s
ImGuiPlotArrayGetterData	thirdparty/imgui/src/imgui.cpp	/^    ImGuiPlotArrayGetterData(const float* values, int stride) { Values = values; Stride = stride; }$/;"	f	struct:ImGuiPlotArrayGetterData
ImGuiPlotArrayGetterData	thirdparty/imgui/src/imgui.cpp	/^struct ImGuiPlotArrayGetterData$/;"	s	file:
ImGuiPlotType	thirdparty/imgui/include/imgui/imgui_internal.h	/^enum ImGuiPlotType$/;"	g
ImGuiPlotType_Histogram	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiPlotType_Histogram$/;"	e	enum:ImGuiPlotType
ImGuiPlotType_Lines	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiPlotType_Lines,$/;"	e	enum:ImGuiPlotType
ImGuiPopupRef	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiPopupRef(ImGuiID id, ImGuiWindow* parent_window, ImGuiID parent_menu_set, const ImVec2& mouse_pos) { PopupId = id; Window = NULL; ParentWindow = parent_window; ParentMenuSet = parent_menu_set; MousePosOnOpen = mouse_pos; }$/;"	f	struct:ImGuiPopupRef
ImGuiPopupRef	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct ImGuiPopupRef$/;"	s
ImGuiSelectableFlags	thirdparty/imgui/include/imgui/imgui.h	/^typedef int ImGuiSelectableFlags;   \/\/ flags for Selectable()               \/\/ enum ImGuiSelectableFlags_$/;"	t
ImGuiSelectableFlagsPrivate_	thirdparty/imgui/include/imgui/imgui_internal.h	/^enum ImGuiSelectableFlagsPrivate_$/;"	g
ImGuiSelectableFlags_	thirdparty/imgui/include/imgui/imgui.h	/^enum ImGuiSelectableFlags_$/;"	g
ImGuiSelectableFlags_AllowDoubleClick	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiSelectableFlags_AllowDoubleClick   = 1 << 2    \/\/ Generate press events on double clicks too$/;"	e	enum:ImGuiSelectableFlags_
ImGuiSelectableFlags_Disabled	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_Disabled           = 1 << 5,$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_DontClosePopups	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiSelectableFlags_DontClosePopups    = 1 << 0,   \/\/ Clicking this don't close parent popup window$/;"	e	enum:ImGuiSelectableFlags_
ImGuiSelectableFlags_DrawFillAvailWidth	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_DrawFillAvailWidth = 1 << 6$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_Menu	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_Menu               = 1 << 3,$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_MenuItem	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_MenuItem           = 1 << 4,$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_SpanAllColumns	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiSelectableFlags_SpanAllColumns     = 1 << 1,   \/\/ Selectable frame can span all columns (text will still fit in current column)$/;"	e	enum:ImGuiSelectableFlags_
ImGuiSetCond	thirdparty/imgui/include/imgui/imgui.h	/^typedef int ImGuiSetCond;           \/\/ condition flags for Set*()           \/\/ enum ImGuiSetCond_$/;"	t
ImGuiSetCond_	thirdparty/imgui/include/imgui/imgui.h	/^enum ImGuiSetCond_$/;"	g
ImGuiSetCond_Always	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiSetCond_Always        = 1 << 0, \/\/ Set the variable$/;"	e	enum:ImGuiSetCond_
ImGuiSetCond_Appearing	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiSetCond_Appearing     = 1 << 3  \/\/ Set the variable if the window is appearing after being hidden\/inactive (or the first time)$/;"	e	enum:ImGuiSetCond_
ImGuiSetCond_FirstUseEver	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiSetCond_FirstUseEver  = 1 << 2, \/\/ Set the variable if the window has no saved data (if doesn't exist in the .ini file)$/;"	e	enum:ImGuiSetCond_
ImGuiSetCond_Once	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiSetCond_Once          = 1 << 1, \/\/ Set the variable once per runtime session (only the first call with succeed)$/;"	e	enum:ImGuiSetCond_
ImGuiSimpleColumns	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct IMGUI_API ImGuiSimpleColumns$/;"	s
ImGuiSimpleColumns	thirdparty/imgui/src/imgui.cpp	/^ImGuiSimpleColumns::ImGuiSimpleColumns()$/;"	f	class:ImGuiSimpleColumns
ImGuiSizeConstraintCallback	thirdparty/imgui/include/imgui/imgui.h	/^typedef void (*ImGuiSizeConstraintCallback)(ImGuiSizeConstraintCallbackData* data);$/;"	t
ImGuiSizeConstraintCallbackData	thirdparty/imgui/include/imgui/imgui.h	/^struct ImGuiSizeConstraintCallbackData$/;"	s
ImGuiSliderFlags	thirdparty/imgui/include/imgui/imgui_internal.h	/^typedef int ImGuiSliderFlags;     \/\/ enum ImGuiSliderFlags_$/;"	t
ImGuiSliderFlags_	thirdparty/imgui/include/imgui/imgui_internal.h	/^enum ImGuiSliderFlags_$/;"	g
ImGuiSliderFlags_Vertical	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiSliderFlags_Vertical               = 1 << 0$/;"	e	enum:ImGuiSliderFlags_
ImGuiStb	thirdparty/imgui/include/imgui/imgui_internal.h	/^namespace ImGuiStb$/;"	n
ImGuiStb	thirdparty/imgui/src/imgui.cpp	/^namespace ImGuiStb$/;"	n	file:
ImGuiStorage	thirdparty/imgui/include/imgui/imgui.h	/^struct ImGuiStorage$/;"	s
ImGuiStyle	thirdparty/imgui/include/imgui/imgui.h	/^struct ImGuiStyle$/;"	s
ImGuiStyle	thirdparty/imgui/src/imgui.cpp	/^ImGuiStyle::ImGuiStyle()$/;"	f	class:ImGuiStyle
ImGuiStyleMod	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiStyleMod(ImGuiStyleVar idx, ImVec2 v)  { VarIdx = idx; BackupFloat[0] = v.x; BackupFloat[1] = v.y; }$/;"	f	struct:ImGuiStyleMod
ImGuiStyleMod	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiStyleMod(ImGuiStyleVar idx, float v)   { VarIdx = idx; BackupFloat[0] = v; }$/;"	f	struct:ImGuiStyleMod
ImGuiStyleMod	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiStyleMod(ImGuiStyleVar idx, int v)     { VarIdx = idx; BackupInt[0] = v; }$/;"	f	struct:ImGuiStyleMod
ImGuiStyleMod	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct ImGuiStyleMod$/;"	s
ImGuiStyleVar	thirdparty/imgui/include/imgui/imgui.h	/^typedef int ImGuiStyleVar;          \/\/ a variable identifier for styling    \/\/ enum ImGuiStyleVar_$/;"	t
ImGuiStyleVarInfo	thirdparty/imgui/src/imgui.cpp	/^struct ImGuiStyleVarInfo$/;"	s	file:
ImGuiStyleVar_	thirdparty/imgui/include/imgui/imgui.h	/^enum ImGuiStyleVar_$/;"	g
ImGuiStyleVar_Alpha	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiStyleVar_Alpha,               \/\/ float$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ButtonTextAlign	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiStyleVar_ButtonTextAlign,     \/\/ flags ImGuiAlign_*$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ChildWindowRounding	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiStyleVar_ChildWindowRounding, \/\/ float$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_Count_	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiStyleVar_Count_$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_FramePadding	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiStyleVar_FramePadding,        \/\/ ImVec2$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_FrameRounding	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiStyleVar_FrameRounding,       \/\/ float$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_GrabMinSize	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiStyleVar_GrabMinSize,         \/\/ float$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_IndentSpacing	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiStyleVar_IndentSpacing,       \/\/ float$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ItemInnerSpacing	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiStyleVar_ItemInnerSpacing,    \/\/ ImVec2$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ItemSpacing	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiStyleVar_ItemSpacing,         \/\/ ImVec2$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_WindowMinSize	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiStyleVar_WindowMinSize,       \/\/ ImVec2$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_WindowPadding	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiStyleVar_WindowPadding,       \/\/ ImVec2$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_WindowRounding	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiStyleVar_WindowRounding,      \/\/ float$/;"	e	enum:ImGuiStyleVar_
ImGuiTextBuffer	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiTextBuffer()   { Buf.push_back(0); }$/;"	f	struct:ImGuiTextBuffer
ImGuiTextBuffer	thirdparty/imgui/include/imgui/imgui.h	/^struct ImGuiTextBuffer$/;"	s
ImGuiTextEditCallback	thirdparty/imgui/include/imgui/imgui.h	/^typedef int (*ImGuiTextEditCallback)(ImGuiTextEditCallbackData *data);$/;"	t
ImGuiTextEditCallbackData	thirdparty/imgui/include/imgui/imgui.h	/^struct ImGuiTextEditCallbackData$/;"	s
ImGuiTextEditState	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiTextEditState()                            { memset(this, 0, sizeof(*this)); }$/;"	f	struct:ImGuiTextEditState
ImGuiTextEditState	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct IMGUI_API ImGuiTextEditState$/;"	s
ImGuiTextFilter	thirdparty/imgui/include/imgui/imgui.h	/^struct ImGuiTextFilter$/;"	s
ImGuiTextFilter	thirdparty/imgui/src/imgui.cpp	/^ImGuiTextFilter::ImGuiTextFilter(const char* default_filter)$/;"	f	class:ImGuiTextFilter
ImGuiTreeNodeFlags	thirdparty/imgui/include/imgui/imgui.h	/^typedef int ImGuiTreeNodeFlags;     \/\/ flags for TreeNode*(), Collapsing*() \/\/ enum ImGuiTreeNodeFlags_$/;"	t
ImGuiTreeNodeFlags	thirdparty/imgui/include/imgui/imgui_internal.h	/^typedef int ImGuiTreeNodeFlags;   \/\/ enum ImGuiTreeNodeFlags_$/;"	t
ImGuiTreeNodeFlags_	thirdparty/imgui/include/imgui/imgui.h	/^enum ImGuiTreeNodeFlags_$/;"	g
ImGuiTreeNodeFlags_AllowOverlapMode	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiTreeNodeFlags_AllowOverlapMode     = 1 << 2,   \/\/ Hit testing to allow subsequent widgets to overlap this one$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_Bullet	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiTreeNodeFlags_Bullet               = 1 << 9,   \/\/ Display a bullet instead of arrow$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_CollapsingHeader	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiTreeNodeFlags_CollapsingHeader     = ImGuiTreeNodeFlags_Framed | ImGuiTreeNodeFlags_NoAutoOpenOnLog$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_DefaultOpen	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiTreeNodeFlags_DefaultOpen          = 1 << 5,   \/\/ Default node to be open$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_Framed	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiTreeNodeFlags_Framed               = 1 << 1,   \/\/ Full colored frame (e.g. for CollapsingHeader)$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_Leaf	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiTreeNodeFlags_Leaf                 = 1 << 8,   \/\/ No collapsing, no arrow (use as a convenience for leaf nodes).$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_NoAutoOpenOnLog	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiTreeNodeFlags_NoAutoOpenOnLog      = 1 << 4,   \/\/ Don't automatically and temporarily open node when Logging is active (by default logging will automatically open tree nodes)$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_NoTreePushOnOpen	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiTreeNodeFlags_NoTreePushOnOpen     = 1 << 3,   \/\/ Don't do a TreePush() when open (e.g. for CollapsingHeader) = no extra indent nor pushing on ID stack$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_OpenOnArrow	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiTreeNodeFlags_OpenOnArrow          = 1 << 7,   \/\/ Only open when clicking on the arrow part. If ImGuiTreeNodeFlags_OpenOnDoubleClick is also set, single-click arrow or double-click all box to open.$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_OpenOnDoubleClick	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiTreeNodeFlags_OpenOnDoubleClick    = 1 << 6,   \/\/ Need double-click to open node$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_Selected	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiTreeNodeFlags_Selected             = 1 << 0,   \/\/ Draw as selected$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiWindow	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct IMGUI_API ImGuiWindow$/;"	s
ImGuiWindow	thirdparty/imgui/src/imgui.cpp	/^ImGuiWindow::ImGuiWindow(const char* name)$/;"	f	class:ImGuiWindow
ImGuiWindowFlags	thirdparty/imgui/include/imgui/imgui.h	/^typedef int ImGuiWindowFlags;       \/\/ window flags for Begin*()            \/\/ enum ImGuiWindowFlags_$/;"	t
ImGuiWindowFlags_	thirdparty/imgui/include/imgui/imgui.h	/^enum ImGuiWindowFlags_$/;"	g
ImGuiWindowFlags_AlwaysAutoResize	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_AlwaysAutoResize       = 1 << 6,   \/\/ Resize every window to its content every frame$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_AlwaysHorizontalScrollbar	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_AlwaysHorizontalScrollbar=1<< 15,  \/\/ Always show horizontal scrollbar (even if ContentSize.x < Size.x)$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_AlwaysUseWindowPadding	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_AlwaysUseWindowPadding = 1 << 16,  \/\/ Ensure child windows without border uses style.WindowPadding (ignored by default for non-bordered child windows, because more convenient)$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_AlwaysVerticalScrollbar	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_AlwaysVerticalScrollbar= 1 << 14,  \/\/ Always show vertical scrollbar (even if ContentSize.y < Size.y)$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_ChildMenu	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_ChildMenu              = 1 << 27   \/\/ Don't use! For internal use by BeginMenu()$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_ChildWindow	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_ChildWindow            = 1 << 20,  \/\/ Don't use! For internal use by BeginChild()$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_ChildWindowAutoFitX	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_ChildWindowAutoFitX    = 1 << 21,  \/\/ Don't use! For internal use by BeginChild()$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_ChildWindowAutoFitY	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_ChildWindowAutoFitY    = 1 << 22,  \/\/ Don't use! For internal use by BeginChild()$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_ComboBox	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_ComboBox               = 1 << 23,  \/\/ Don't use! For internal use by ComboBox()$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_HorizontalScrollbar	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_HorizontalScrollbar    = 1 << 11,  \/\/ Allow horizontal scrollbar to appear (off by default). You may use SetNextWindowContentSize(ImVec2(width,0.0f)); prior to calling Begin() to specify width. Read code in imgui_demo in the "Horizontal Scrolling" section.$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_MenuBar	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_MenuBar                = 1 << 10,  \/\/ Has a menu-bar$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_Modal	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_Modal                  = 1 << 26,  \/\/ Don't use! For internal use by BeginPopupModal()$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoBringToFrontOnFocus	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_NoBringToFrontOnFocus  = 1 << 13,  \/\/ Disable bringing window to front when taking focus (e.g. clicking on it or programatically giving it focus)$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoCollapse	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_NoCollapse             = 1 << 5,   \/\/ Disable user collapsing window by double-clicking on it$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoFocusOnAppearing	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_NoFocusOnAppearing     = 1 << 12,  \/\/ Disable taking focus when transitioning from hidden to visible state$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoInputs	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_NoInputs               = 1 << 9,   \/\/ Disable catching mouse or keyboard inputs$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoMove	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_NoMove                 = 1 << 2,   \/\/ Disable user moving the window$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoResize	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_NoResize               = 1 << 1,   \/\/ Disable user resizing with the lower-right grip$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoSavedSettings	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_NoSavedSettings        = 1 << 8,   \/\/ Never load\/save settings in .ini file$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoScrollWithMouse	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_NoScrollWithMouse      = 1 << 4,   \/\/ Disable user vertically scrolling with mouse wheel$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoScrollbar	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_NoScrollbar            = 1 << 3,   \/\/ Disable scrollbars (window can still scroll with mouse or programatically)$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoTitleBar	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_NoTitleBar             = 1 << 0,   \/\/ Disable title-bar$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_Popup	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_Popup                  = 1 << 25,  \/\/ Don't use! For internal use by BeginPopup()$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_ShowBorders	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_ShowBorders            = 1 << 7,   \/\/ Show borders around windows and items$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_Tooltip	thirdparty/imgui/include/imgui/imgui.h	/^    ImGuiWindowFlags_Tooltip                = 1 << 24,  \/\/ Don't use! For internal use by BeginTooltip()$/;"	e	enum:ImGuiWindowFlags_
ImGui_Aspect	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^namespace ImGui_Aspect {$/;"	n	namespace:Nil_ext
ImGui_Aspect	lib/nil_aspects/src/imgui/imgui_aspect.cpp	/^namespace ImGui_Aspect {$/;"	n	namespace:Nil_ext	file:
ImGui_ImplGlfwGL3_CharCallback	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfwGL3_CharCallback(GLFWwindow*, unsigned int c)$/;"	f
ImGui_ImplGlfwGL3_CreateDeviceObjects	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^bool ImGui_ImplGlfwGL3_CreateDeviceObjects()$/;"	f
ImGui_ImplGlfwGL3_CreateFontsTexture	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^bool ImGui_ImplGlfwGL3_CreateFontsTexture()$/;"	f
ImGui_ImplGlfwGL3_GetClipboardText	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static const char* ImGui_ImplGlfwGL3_GetClipboardText(void* user_data)$/;"	f	file:
ImGui_ImplGlfwGL3_Init	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^bool    ImGui_ImplGlfwGL3_Init(GLFWwindow* window, bool install_callbacks)$/;"	f
ImGui_ImplGlfwGL3_InvalidateDeviceObjects	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^void    ImGui_ImplGlfwGL3_InvalidateDeviceObjects()$/;"	f
ImGui_ImplGlfwGL3_KeyCallback	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfwGL3_KeyCallback(GLFWwindow*, int key, int, int action, int mods)$/;"	f
ImGui_ImplGlfwGL3_MouseButtonCallback	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfwGL3_MouseButtonCallback(GLFWwindow*, int button, int action, int \/*mods*\/)$/;"	f
ImGui_ImplGlfwGL3_NewFrame	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfwGL3_NewFrame()$/;"	f
ImGui_ImplGlfwGL3_RenderDrawLists	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfwGL3_RenderDrawLists(ImDrawData* draw_data)$/;"	f
ImGui_ImplGlfwGL3_ScrollCallback	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfwGL3_ScrollCallback(GLFWwindow*, double \/*xoffset*\/, double yoffset)$/;"	f
ImGui_ImplGlfwGL3_SetClipboardText	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static void ImGui_ImplGlfwGL3_SetClipboardText(void* user_data, const char* text)$/;"	f	file:
ImGui_ImplGlfwGL3_Shutdown	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfwGL3_Shutdown()$/;"	f
ImGuizmo	thirdparty/imguizmo/include/imguizmo/ImGuizmo.h	/^namespace ImGuizmo$/;"	n
ImGuizmo	thirdparty/imguizmo/src/ImGuizmo.cpp	/^namespace ImGuizmo$/;"	n	file:
ImHash	thirdparty/imgui/src/imgui.cpp	/^ImU32 ImHash(const void* data, int data_size, ImU32 seed)$/;"	f
ImInvLength	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline float  ImInvLength(const ImVec2& lhs, float fail_value)           { float d = lhs.x*lhs.x + lhs.y*lhs.y; if (d > 0.0f) return 1.0f \/ sqrtf(d); return fail_value; }$/;"	f
ImIsPointInTriangle	thirdparty/imgui/src/imgui.cpp	/^bool ImIsPointInTriangle(const ImVec2& p, const ImVec2& a, const ImVec2& b, const ImVec2& c)$/;"	f
ImLengthSqr	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline float  ImLengthSqr(const ImVec2& lhs)                             { return lhs.x*lhs.x + lhs.y*lhs.y; }$/;"	f
ImLengthSqr	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline float  ImLengthSqr(const ImVec4& lhs)                             { return lhs.x*lhs.x + lhs.y*lhs.y + lhs.z*lhs.z + lhs.w*lhs.w; }$/;"	f
ImLerp	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2 ImLerp(const ImVec2& a, const ImVec2& b, const ImVec2& t)  { return ImVec2(a.x + (b.x - a.x) * t.x, a.y + (b.y - a.y) * t.y); }$/;"	f
ImLerp	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline float  ImLerp(float a, float b, float t)                          { return a + (b - a) * t; }$/;"	f
ImMax	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2 ImMax(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(ImMax(lhs.x,rhs.x), ImMax(lhs.y,rhs.y)); }$/;"	f
ImMax	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline float  ImMax(float lhs, float rhs)                                { return lhs >= rhs ? lhs : rhs; }$/;"	f
ImMax	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline int    ImMax(int lhs, int rhs)                                    { return lhs >= rhs ? lhs : rhs; }$/;"	f
ImMin	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2 ImMin(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(ImMin(lhs.x,rhs.x), ImMin(lhs.y,rhs.y)); }$/;"	f
ImMin	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline float  ImMin(float lhs, float rhs)                                { return lhs < rhs ? lhs : rhs; }$/;"	f
ImMin	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline int    ImMin(int lhs, int rhs)                                    { return lhs < rhs ? lhs : rhs; }$/;"	f
ImPlacementNewDummy	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct ImPlacementNewDummy {};$/;"	s
ImRect	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImRect()                                        : Min(FLT_MAX,FLT_MAX), Max(-FLT_MAX,-FLT_MAX)  {}$/;"	f	struct:ImRect
ImRect	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                            {}$/;"	f	struct:ImRect
ImRect	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImRect(const ImVec4& v)                         : Min(v.x, v.y), Max(v.z, v.w)                  {}$/;"	f	struct:ImRect
ImRect	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImRect(float x1, float y1, float x2, float y2)  : Min(x1, y1), Max(x2, y2)                      {}$/;"	f	struct:ImRect
ImRect	thirdparty/imgui/include/imgui/imgui_internal.h	/^struct IMGUI_API ImRect$/;"	s
ImSaturate	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline float  ImSaturate(float f)                                        { return (f < 0.0f) ? 0.0f : (f > 1.0f) ? 1.0f : f; }$/;"	f
ImStrbolW	thirdparty/imgui/src/imgui.cpp	/^const ImWchar* ImStrbolW(const ImWchar* buf_mid_line, const ImWchar* buf_begin) \/\/ find beginning-of-line$/;"	f
ImStrdup	thirdparty/imgui/src/imgui.cpp	/^char* ImStrdup(const char *str)$/;"	f
ImStricmp	thirdparty/imgui/src/imgui.cpp	/^int ImStricmp(const char* str1, const char* str2)$/;"	f
ImStristr	thirdparty/imgui/src/imgui.cpp	/^const char* ImStristr(const char* haystack, const char* haystack_end, const char* needle, const char* needle_end)$/;"	f
ImStrlenW	thirdparty/imgui/src/imgui.cpp	/^int ImStrlenW(const ImWchar* str)$/;"	f
ImStrncpy	thirdparty/imgui/src/imgui.cpp	/^void ImStrncpy(char* dst, const char* src, int count)$/;"	f
ImStrnicmp	thirdparty/imgui/src/imgui.cpp	/^int ImStrnicmp(const char* str1, const char* str2, int count)$/;"	f
ImTextCharFromUtf8	thirdparty/imgui/src/imgui.cpp	/^int ImTextCharFromUtf8(unsigned int* out_char, const char* in_text, const char* in_text_end)$/;"	f
ImTextCharToUtf8	thirdparty/imgui/src/imgui.cpp	/^static inline int ImTextCharToUtf8(char* buf, int buf_size, unsigned int c)$/;"	f	file:
ImTextCountCharsFromUtf8	thirdparty/imgui/src/imgui.cpp	/^int ImTextCountCharsFromUtf8(const char* in_text, const char* in_text_end)$/;"	f
ImTextCountUtf8BytesFromChar	thirdparty/imgui/src/imgui.cpp	/^static inline int ImTextCountUtf8BytesFromChar(unsigned int c)$/;"	f	file:
ImTextCountUtf8BytesFromStr	thirdparty/imgui/src/imgui.cpp	/^int ImTextCountUtf8BytesFromStr(const ImWchar* in_text, const ImWchar* in_text_end)$/;"	f
ImTextStrFromUtf8	thirdparty/imgui/src/imgui.cpp	/^int ImTextStrFromUtf8(ImWchar* buf, int buf_size, const char* in_text, const char* in_text_end, const char** in_text_remaining)$/;"	f
ImTextStrToUtf8	thirdparty/imgui/src/imgui.cpp	/^int ImTextStrToUtf8(char* buf, int buf_size, const ImWchar* in_text, const ImWchar* in_text_end)$/;"	f
ImTextureID	thirdparty/imgui/include/imgui/imgui.h	/^typedef void* ImTextureID;          \/\/ user data to identify a texture (this is whatever to you want it to be! read the FAQ about ImTextureID in imgui.cpp)$/;"	t
ImU32	thirdparty/imgui/include/imgui/imgui.h	/^typedef unsigned int ImU32;         \/\/ 32-bit unsigned integer (typically used to store packed colors)$/;"	t
ImUpperPowerOfTwo	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline int       ImUpperPowerOfTwo(int v)        { v--; v |= v >> 1; v |= v >> 2; v |= v >> 4; v |= v >> 8; v |= v >> 16; v++; return v; }$/;"	f
ImVec2	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2() { x = y = 0.0f; }$/;"	f	struct:ImVec2
ImVec2	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2(float _x, float _y) { x = _x; y = _y; }$/;"	f	struct:ImVec2
ImVec2	thirdparty/imgui/include/imgui/imgui.h	/^struct ImVec2$/;"	s
ImVec4	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec4() { x = y = z = w = 0.0f; }$/;"	f	struct:ImVec4
ImVec4	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec4(float _x, float _y, float _z, float _w) { x = _x; y = _y; z = _z; w = _w; }$/;"	f	struct:ImVec4
ImVec4	thirdparty/imgui/include/imgui/imgui.h	/^struct ImVec4$/;"	s
ImVector	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector()                  { Size = Capacity = 0; Data = NULL; }$/;"	f	class:ImVector
ImVector	thirdparty/imgui/include/imgui/imgui.h	/^class ImVector$/;"	c
ImWchar	thirdparty/imgui/include/imgui/imgui.h	/^typedef unsigned short ImWchar;     \/\/ character for keyboard input\/display$/;"	t
Image	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Image(ImTextureID user_texture_id, const ImVec2& size, const ImVec2& uv0, const ImVec2& uv1, const ImVec4& tint_col, const ImVec4& border_col)$/;"	f	class:ImGui
ImageButton	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::ImageButton(ImTextureID user_texture_id, const ImVec2& size, const ImVec2& uv0, const ImVec2& uv1, int frame_padding, const ImVec4& bg_col, const ImVec4& tint_col)$/;"	f	class:ImGui
ImeSetInputScreenPosFn	thirdparty/imgui/include/imgui/imgui.h	/^    void        (*ImeSetInputScreenPosFn)(int x, int y);$/;"	m	struct:ImGuiIO
ImeSetInputScreenPosFn_DefaultImpl	thirdparty/imgui/src/imgui.cpp	/^static void ImeSetInputScreenPosFn_DefaultImpl(int x, int y)$/;"	f	file:
ImeSetInputScreenPosFn_DefaultImpl	thirdparty/imgui/src/imgui.cpp	/^static void ImeSetInputScreenPosFn_DefaultImpl(int, int) {}$/;"	f	file:
ImeWindowHandle	thirdparty/imgui/include/imgui/imgui.h	/^    void*       ImeWindowHandle;            \/\/ (Windows) Set this to your HWND to get automatic IME cursor positioning.$/;"	m	struct:ImGuiIO
Impl	lib/roa/src/interface/collection.cpp	/^struct Collection::Impl$/;"	s	class:ROA::Collection	file:
Impl	thirdparty/catch/include/catch/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Indent	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Indent(float indent_w)$/;"	f	class:ImGui
IndentSpacing	thirdparty/imgui/include/imgui/imgui.h	/^    float       IndentSpacing;              \/\/ Horizontal indentation when e.g. entering a tree node. Generally == (FontSize + FramePadding.x*2).$/;"	m	struct:ImGuiStyle
IndentX	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   IndentX;                \/\/ Indentation \/ start position from left of window (increased by TreePush\/TreePop, etc.)$/;"	m	struct:ImGuiDrawContext
IndexLookup	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<unsigned short>    IndexLookup;        \/\/              \/\/ Sparse. Index glyphs by Unicode code-point.$/;"	m	struct:ImFont
IndexWithinParent	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     IndexWithinParent;                  \/\/ Order within immediate parent window, if we are a child window. Otherwise 0.$/;"	m	struct:ImGuiWindow
IndexXAdvance	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<float>             IndexXAdvance;      \/\/              \/\/ Sparse. Glyphs->XAdvance in a directly indexable way (more cache-friendly, for CalcTextSize functions which are often bottleneck in large UI).$/;"	m	struct:ImFont
Info	thirdparty/catch/include/catch/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
IniFilename	thirdparty/imgui/include/imgui/imgui.h	/^    const char*   IniFilename;              \/\/ = "imgui.ini"        \/\/ Path to .ini file. NULL to disable .ini saving.$/;"	m	struct:ImGuiIO
IniSavingRate	thirdparty/imgui/include/imgui/imgui.h	/^    float         IniSavingRate;            \/\/ = 5.0f               \/\/ Maximum time between saving positions\/sizes to .ini file, in seconds.$/;"	m	struct:ImGuiIO
InitialText	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<char>      InitialText;                \/\/ backup of end-user buffer at the time of focus (in UTF-8, unaltered)$/;"	m	struct:ImGuiTextEditState
InitialiseNetwork	thirdparty/remotery/src/Remotery.c	/^static rmtError InitialiseNetwork()$/;"	f	file:
Initialize	thirdparty/glfw/src/egl_context.h	/^    PFN_eglInitialize           Initialize;$/;"	m	struct:_GLFWlibraryEGL
Initialized	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    Initialized;$/;"	m	struct:ImGuiContext
InputBuf	thirdparty/imgui/include/imgui/imgui.h	/^    char                InputBuf[256];$/;"	m	struct:ImGuiTextFilter
InputCharacters	thirdparty/imgui/include/imgui/imgui.h	/^    ImWchar     InputCharacters[16+1];      \/\/ List of characters input (translated by user from keypress+keyboard state). Fill using AddInputCharacter() helper.$/;"	m	struct:ImGuiIO
InputFloat	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputFloat(const char* label, float* v, float step, float step_fast, int decimal_precision, ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui
InputFloat2	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputFloat2(const char* label, float v[2], int decimal_precision, ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui
InputFloat3	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputFloat3(const char* label, float v[3], int decimal_precision, ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui
InputFloat4	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputFloat4(const char* label, float v[4], int decimal_precision, ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui
InputFloatN	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputFloatN(const char* label, float* v, int components, int decimal_precision, ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui
InputInt	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputInt(const char* label, int* v, int step, int step_fast, ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui
InputInt2	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputInt2(const char* label, int v[2], ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui
InputInt3	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputInt3(const char* label, int v[3], ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui
InputInt4	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputInt4(const char* label, int v[4], ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui
InputIntN	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputIntN(const char* label, int* v, int components, ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui
InputScalarAsWidgetReplacement	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputScalarAsWidgetReplacement(const ImRect& aabb, const char* label, ImGuiDataType data_type, void* data_ptr, ImGuiID id, int decimal_precision)$/;"	f	class:ImGui
InputScalarEx	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputScalarEx(const char* label, ImGuiDataType data_type, void* data_ptr, void* step_ptr, void* step_fast_ptr, const char* scalar_format, ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui
InputText	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputText(const char* label, char* buf, size_t buf_size, ImGuiInputTextFlags flags, ImGuiTextEditCallback callback, void* user_data)$/;"	f	class:ImGui
InputTextCalcTextLenAndLineCount	thirdparty/imgui/src/imgui.cpp	/^static int InputTextCalcTextLenAndLineCount(const char* text_begin, const char** out_text_end)$/;"	f	file:
InputTextCalcTextSizeW	thirdparty/imgui/src/imgui.cpp	/^static ImVec2 InputTextCalcTextSizeW(const ImWchar* text_begin, const ImWchar* text_end, const ImWchar** remaining, ImVec2* out_offset, bool stop_on_new_line)$/;"	f	file:
InputTextEx	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputTextEx(const char* label, char* buf, int buf_size, const ImVec2& size_arg, ImGuiInputTextFlags flags, ImGuiTextEditCallback callback, void* user_data)$/;"	f	class:ImGui
InputTextFilterCharacter	thirdparty/imgui/src/imgui.cpp	/^static bool InputTextFilterCharacter(unsigned int* p_char, ImGuiInputTextFlags flags, ImGuiTextEditCallback callback, void* user_data)$/;"	f	file:
InputTextMultiline	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InputTextMultiline(const char* label, char* buf, size_t buf_size, const ImVec2& size, ImGuiInputTextFlags flags, ImGuiTextEditCallback callback, void* user_data)$/;"	f	class:ImGui
InputTextPasswordFont	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImFont                  InputTextPasswordFont;$/;"	m	struct:ImGuiContext
InputTextState	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiTextEditState      InputTextState;$/;"	m	struct:ImGuiContext
InsertChars	thirdparty/imgui/src/imgui.cpp	/^void ImGuiTextEditCallbackData::InsertChars(int pos, const char* new_text, const char* new_text_end)$/;"	f	class:ImGuiTextEditCallbackData
Internal	thirdparty/catch/include/catch/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Interp	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^class Interp$/;"	c	file:
IntersectRayPlane	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static float IntersectRayPlane(const vec_t & rOrigin, const vec_t& rVector, const vec_t& plan)$/;"	f	namespace:ImGuizmo
Inverse	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   float matrix_t::Inverse(const matrix_t &srcMatrix, bool affine)$/;"	f	class:ImGuizmo::matrix_t
InvisibleButton	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::InvisibleButton(const char* str_id, const ImVec2& size_arg)$/;"	f	class:ImGui
IsActive	thirdparty/imgui/include/imgui/imgui.h	/^    bool                IsActive() const { return !Filters.empty(); }$/;"	f	struct:ImGuiTextFilter
IsAnyItemActive	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsAnyItemActive()$/;"	f	class:ImGui
IsAnyItemHovered	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsAnyItemHovered()$/;"	f	class:ImGui
IsClippedEx	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsClippedEx(const ImRect& bb, const ImGuiID* id, bool clip_even_when_logged)$/;"	f	class:ImGui
IsEqualTo	thirdparty/catch/include/catch/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	thirdparty/catch/include/catch/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	thirdparty/catch/include/catch/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsHovered	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsHovered(const ImRect& bb, ImGuiID id, bool flatten_childs)$/;"	f	class:ImGui
IsItemActive	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsItemActive()$/;"	f	class:ImGui
IsItemClicked	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsItemClicked(int mouse_button)$/;"	f	class:ImGui
IsItemHovered	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsItemHovered()$/;"	f	class:ImGui
IsItemHoveredRect	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsItemHoveredRect()$/;"	f	class:ImGui
IsItemVisible	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsItemVisible()$/;"	f	class:ImGui
IsKeyDown	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsKeyDown(int key_index)$/;"	f	class:ImGui
IsKeyPressed	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsKeyPressed(int key_index, bool repeat)$/;"	f	class:ImGui
IsKeyPressedMap	thirdparty/imgui/src/imgui.cpp	/^static bool IsKeyPressedMap(ImGuiKey key, bool repeat)$/;"	f	file:
IsKeyReleased	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsKeyReleased(int key_index)$/;"	f	class:ImGui
IsLessThan	thirdparty/catch/include/catch/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	thirdparty/catch/include/catch/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLittleEndian	thirdparty/remotery/src/Remotery.c	/^static rmtBool IsLittleEndian()$/;"	f	file:
IsLoaded	thirdparty/imgui/include/imgui/imgui.h	/^    bool                        IsLoaded() const                    { return ContainerAtlas != NULL; }$/;"	f	struct:ImFont
IsMouseClicked	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsMouseClicked(int button, bool repeat)$/;"	f	class:ImGui
IsMouseDoubleClicked	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsMouseDoubleClicked(int button)$/;"	f	class:ImGui
IsMouseDown	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsMouseDown(int button)$/;"	f	class:ImGui
IsMouseDragging	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsMouseDragging(int button, float lock_threshold)$/;"	f	class:ImGui
IsMouseHoveringAnyWindow	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsMouseHoveringAnyWindow()$/;"	f	class:ImGui
IsMouseHoveringRect	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsMouseHoveringRect(const ImVec2& r_min, const ImVec2& r_max, bool clip)$/;"	f	class:ImGui
IsMouseHoveringWindow	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsMouseHoveringWindow()$/;"	f	class:ImGui
IsMouseReleased	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsMouseReleased(int button)$/;"	f	class:ImGui
IsNotEqualTo	thirdparty/catch/include/catch/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsOver	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   bool IsOver()$/;"	f	namespace:ImGuizmo
IsPopupOpen	thirdparty/imgui/src/imgui.cpp	/^static bool IsPopupOpen(ImGuiID id)$/;"	f	file:
IsPosHoveringAnyWindow	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsPosHoveringAnyWindow(const ImVec2& pos)$/;"	f	class:ImGui
IsRectClipped	thirdparty/imgui/include/imgui/imgui.h	/^    static inline bool      IsRectClipped(const ImVec2& size) { return !IsRectVisible(size); } \/\/ OBSOLETE 1.39+$/;"	f	namespace:ImGui
IsRectVisible	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsRectVisible(const ImVec2& rect_min, const ImVec2& rect_max)$/;"	f	class:ImGui
IsRectVisible	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsRectVisible(const ImVec2& size)$/;"	f	class:ImGui
IsRootWindowFocused	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsRootWindowFocused()$/;"	f	class:ImGui
IsRootWindowOrAnyChildFocused	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsRootWindowOrAnyChildFocused()$/;"	f	class:ImGui
IsRootWindowOrAnyChildHovered	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsRootWindowOrAnyChildHovered()$/;"	f	class:ImGui
IsStreamInsertable	thirdparty/catch/include/catch/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsUsing	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   bool IsUsing()$/;"	f	namespace:ImGuizmo
IsWindowCollapsed	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsWindowCollapsed()$/;"	f	class:ImGui
IsWindowContentHoverable	thirdparty/imgui/src/imgui.cpp	/^static inline bool IsWindowContentHoverable(ImGuiWindow* window)$/;"	f	file:
IsWindowFocused	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsWindowFocused()$/;"	f	class:ImGui
IsWindowHovered	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::IsWindowHovered()$/;"	f	class:ImGui
ItemAdd	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::ItemAdd(const ImRect& bb, const ImGuiID* id)$/;"	f	class:ImGui
ItemInnerSpacing	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      ItemInnerSpacing;           \/\/ Horizontal and vertical spacing between within elements of a composed widget (e.g. a slider and its label)$/;"	m	struct:ImGuiStyle
ItemSize	thirdparty/imgui/src/imgui.cpp	/^void ImGui::ItemSize(const ImRect& bb, float text_offset_y)$/;"	f	class:ImGui
ItemSize	thirdparty/imgui/src/imgui.cpp	/^void ImGui::ItemSize(const ImVec2& size, float text_offset_y)$/;"	f	class:ImGui
ItemSpacing	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      ItemSpacing;                \/\/ Horizontal and vertical spacing between widgets\/lines$/;"	m	struct:ImGuiStyle
ItemWidth	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   ItemWidth;              \/\/ == ItemWidthStack.back(). 0.0: default, >0.0: width in pixels, <0.0: align xx pixels to the right of window$/;"	m	struct:ImGuiDrawContext
ItemWidthDefault	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   ItemWidthDefault;$/;"	m	struct:ImGuiWindow
ItemWidthStack	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<float>         ItemWidthStack;$/;"	m	struct:ImGuiDrawContext
ItemsCount	thirdparty/imgui/include/imgui/imgui.h	/^    int     ItemsCount, StepNo, DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper
ItemsHeight	thirdparty/imgui/include/imgui/imgui.h	/^    float   ItemsHeight;$/;"	m	struct:ImGuiListClipper
Items_ArrayGetter	thirdparty/imgui/src/imgui.cpp	/^static bool Items_ArrayGetter(void* data, int idx, const char** out_text)$/;"	f	file:
Items_SingleStringGetter	thirdparty/imgui/src/imgui.cpp	/^static bool Items_SingleStringGetter(void* data, int idx, const char** out_text)$/;"	f	file:
J	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	I					: 73,$/;"	p	class:namespace.Codes
JUMP	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^			JUMP,$/;"	e	enum:SoLoud::Sfxr::SFXR_PRESETS
J_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule J_rules[] =$/;"	v	file:
K	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	J					: 74,$/;"	p	class:namespace.Codes
KEYBOARD_INCLUDED_7F779786_CB96_43BB_97F1_188BF322F487	lib/nil/include/nil/data/keyboard.hpp	13;"	d
KEYBOARD_INCLUDED_A722474A_7FC4_42DF_92CE_0C94E65FB794	lib/roa/include/roa/keyboard.hpp	2;"	d
KEYCODES_INCLUDED_C644F8AB_B610_4B0D_9257_066851A09A52	lib/roa/include/roa/keycodes.hpp	2;"	d
KEY_INCLUDED_3DAC3A09_4DD9_45B0_A521_4369D4B4B930	lib/lib/include/lib/key.hpp	9;"	d
KHRONOS_APIATTRIBUTES	thirdparty/glfw/src/deps/KHR/khrplatform.h	127;"	d
KHRONOS_APIATTRIBUTES	thirdparty/glfw/src/deps/KHR/khrplatform.h	129;"	d
KHRONOS_APICALL	thirdparty/glfw/src/deps/KHR/khrplatform.h	101;"	d
KHRONOS_APICALL	thirdparty/glfw/src/deps/KHR/khrplatform.h	103;"	d
KHRONOS_APICALL	thirdparty/glfw/src/deps/KHR/khrplatform.h	105;"	d
KHRONOS_APIENTRY	thirdparty/glfw/src/deps/KHR/khrplatform.h	116;"	d
KHRONOS_APIENTRY	thirdparty/glfw/src/deps/KHR/khrplatform.h	118;"	d
KHRONOS_BOOLEAN_ENUM_FORCE_SIZE	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM$/;"	e	enum:__anon185
KHRONOS_FALSE	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^    KHRONOS_FALSE = 0,$/;"	e	enum:__anon185
KHRONOS_MAX_ENUM	thirdparty/glfw/src/deps/KHR/khrplatform.h	267;"	d
KHRONOS_SUPPORT_FLOAT	thirdparty/glfw/src/deps/KHR/khrplatform.h	147;"	d
KHRONOS_SUPPORT_FLOAT	thirdparty/glfw/src/deps/KHR/khrplatform.h	160;"	d
KHRONOS_SUPPORT_FLOAT	thirdparty/glfw/src/deps/KHR/khrplatform.h	172;"	d
KHRONOS_SUPPORT_FLOAT	thirdparty/glfw/src/deps/KHR/khrplatform.h	189;"	d
KHRONOS_SUPPORT_FLOAT	thirdparty/glfw/src/deps/KHR/khrplatform.h	199;"	d
KHRONOS_SUPPORT_FLOAT	thirdparty/glfw/src/deps/KHR/khrplatform.h	212;"	d
KHRONOS_SUPPORT_INT64	thirdparty/glfw/src/deps/KHR/khrplatform.h	146;"	d
KHRONOS_SUPPORT_INT64	thirdparty/glfw/src/deps/KHR/khrplatform.h	159;"	d
KHRONOS_SUPPORT_INT64	thirdparty/glfw/src/deps/KHR/khrplatform.h	171;"	d
KHRONOS_SUPPORT_INT64	thirdparty/glfw/src/deps/KHR/khrplatform.h	188;"	d
KHRONOS_SUPPORT_INT64	thirdparty/glfw/src/deps/KHR/khrplatform.h	198;"	d
KHRONOS_SUPPORT_INT64	thirdparty/glfw/src/deps/KHR/khrplatform.h	211;"	d
KHRONOS_TRUE	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^    KHRONOS_TRUE  = 1,$/;"	e	enum:__anon185
KHR_context_flush_control	thirdparty/glfw/src/egl_context.h	/^    GLFWbool        KHR_context_flush_control;$/;"	m	struct:_GLFWlibraryEGL
KHR_create_context	thirdparty/glfw/src/egl_context.h	/^    GLFWbool        KHR_create_context;$/;"	m	struct:_GLFWlibraryEGL
KHR_create_context_no_error	thirdparty/glfw/src/egl_context.h	/^    GLFWbool        KHR_create_context_no_error;$/;"	m	struct:_GLFWlibraryEGL
KHR_get_all_proc_addresses	thirdparty/glfw/src/egl_context.h	/^    GLFWbool        KHR_get_all_proc_addresses;$/;"	m	struct:_GLFWlibraryEGL
KHR_gl_colorspace	thirdparty/glfw/src/egl_context.h	/^    GLFWbool        KHR_gl_colorspace;$/;"	m	struct:_GLFWlibraryEGL
KHR_mir_surface	thirdparty/glfw/src/internal.h	/^        GLFWbool        KHR_mir_surface;$/;"	m	struct:_GLFWlibrary::__anon165
KHR_surface	thirdparty/glfw/src/internal.h	/^        GLFWbool        KHR_surface;$/;"	m	struct:_GLFWlibrary::__anon165
KHR_wayland_surface	thirdparty/glfw/src/internal.h	/^        GLFWbool        KHR_wayland_surface;$/;"	m	struct:_GLFWlibrary::__anon165
KHR_win32_surface	thirdparty/glfw/src/internal.h	/^        GLFWbool        KHR_win32_surface;$/;"	m	struct:_GLFWlibrary::__anon165
KHR_xcb_surface	thirdparty/glfw/src/internal.h	/^        GLFWbool        KHR_xcb_surface;$/;"	m	struct:_GLFWlibrary::__anon165
KHR_xlib_surface	thirdparty/glfw/src/internal.h	/^        GLFWbool        KHR_xlib_surface;$/;"	m	struct:_GLFWlibrary::__anon165
KLATT_H	thirdparty/soloud/src/audiosource/speech/klatt.h	2;"	d
K_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule K_rules[] =$/;"	v	file:
KeepAliveID	thirdparty/imgui/src/imgui.cpp	/^void ImGui::KeepAliveID(ImGuiID id)$/;"	f	class:ImGui
KeyAlt	thirdparty/imgui/include/imgui/imgui.h	/^    bool        KeyAlt;                     \/\/ Keyboard modifier pressed: Alt$/;"	m	struct:ImGuiIO
KeyCode	lib/nil/include/nil/data/keyboard.hpp	/^namespace KeyCode {$/;"	n	namespace:Nil::Data
KeyCode	lib/roa/include/roa/keycodes.hpp	/^namespace KeyCode {$/;"	n	namespace:ROA
KeyCtrl	thirdparty/imgui/include/imgui/imgui.h	/^    bool        KeyCtrl;                    \/\/ Keyboard modifier pressed: Control$/;"	m	struct:ImGuiIO
KeyMap	thirdparty/imgui/include/imgui/imgui.h	/^    int           KeyMap[ImGuiKey_COUNT];   \/\/ <unset>              \/\/ Map of indices into the KeysDown[512] entries array$/;"	m	struct:ImGuiIO
KeyRepeatDelay	thirdparty/imgui/include/imgui/imgui.h	/^    float         KeyRepeatDelay;           \/\/ = 0.250f             \/\/ When holding a key\/button, time before it starts repeating, in seconds (for buttons in Repeat mode, etc.).$/;"	m	struct:ImGuiIO
KeyRepeatRate	thirdparty/imgui/include/imgui/imgui.h	/^    float         KeyRepeatRate;            \/\/ = 0.020f             \/\/ When holding a key\/button, rate at which it repeats, in seconds.$/;"	m	struct:ImGuiIO
KeyShift	thirdparty/imgui/include/imgui/imgui.h	/^    bool        KeyShift;                   \/\/ Keyboard modifier pressed: Shift$/;"	m	struct:ImGuiIO
KeyState	lib/nil/include/nil/data/keyboard.hpp	/^namespace KeyState {$/;"	n	namespace:Nil::Data
KeyState	lib/roa/include/roa/keycodes.hpp	/^namespace KeyState {$/;"	n	namespace:ROA
KeySuper	thirdparty/imgui/include/imgui/imgui.h	/^    bool        KeySuper;                   \/\/ Keyboard modifier pressed: Cmd\/Super\/Windows$/;"	m	struct:ImGuiIO
Keyboard	lib/nil/include/nil/data/keyboard.hpp	/^struct Keyboard$/;"	s	namespace:Nil::Data
Keyboard	lib/roa/include/roa/keyboard.hpp	/^namespace Keyboard {$/;"	n	namespace:ROA
Keyboard	lib/roa/src/interface/keyboard.cpp	/^namespace Keyboard {$/;"	n	namespace:ROA	file:
KeysDown	thirdparty/imgui/include/imgui/imgui.h	/^    bool        KeysDown[512];              \/\/ Keyboard keys that are pressed (in whatever storage order you naturally have access to keyboard data)$/;"	m	struct:ImGuiIO
KeysDownDuration	thirdparty/imgui/include/imgui/imgui.h	/^    float       KeysDownDuration[512];      \/\/ Duration the keyboard key has been down (0.0f == just pressed)$/;"	m	struct:ImGuiIO
KeysDownDurationPrev	thirdparty/imgui/include/imgui/imgui.h	/^    float       KeysDownDurationPrev[512];  \/\/ Previous duration the key has been down$/;"	m	struct:ImGuiIO
L	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	K					: 75,$/;"	p	class:namespace.Codes
L	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	4996;"	d	file:
L	thirdparty/stb/include/stb/stb_vorbis.c	5002;"	d	file:
LARGE_INTEGER	thirdparty/remotery/src/Remotery.c	/^    typedef rmtU64 LARGE_INTEGER;$/;"	t	file:
LASER	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^			LASER,$/;"	e	enum:SoLoud::Sfxr::SFXR_PRESETS
LAST_MEDIA_KEY	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	FIRST_MEDIA_KEY		: 166,$/;"	p	class:namespace.Codes
LEFT	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	HOME				: 36,	\/\/ also NUM_NORTH_WEST$/;"	p	class:namespace.Codes
LEFT_HANDED_3D	thirdparty/soloud/include/soloud/soloud.h	/^			LEFT_HANDED_3D = 4$/;"	e	enum:SoLoud::Soloud::FLAGS
LEFT_PART	thirdparty/soloud/src/audiosource/speech/tts.cpp	76;"	d	file:
LIBVORBIS_MDCT	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	2344;"	d	file:
LIBVORBIS_MDCT	thirdparty/stb/include/stb/stb_vorbis.c	2343;"	d	file:
LIB_ALIGN_IMPL	lib/lib/include/lib/util_impl.hpp	16;"	d
LIB_ALLOC_IMPL	lib/lib/include/lib/util_impl.hpp	19;"	d
LIB_ARRAY_IMPL	lib/lib/include/lib/util_impl.hpp	22;"	d
LIB_ARRAY_SIZE	lib/lib/include/lib/helpers.hpp	28;"	d
LIB_ASSERT	lib/lib/include/lib/assert.hpp	18;"	d
LIB_ASSERT_IMPL	lib/lib/include/lib/util_impl.hpp	25;"	d
LIB_ASSERT_MSG	lib/lib/include/lib/assert.hpp	19;"	d
LIB_BENCH_NONE	lib/lib/include/lib/bench.hpp	16;"	d
LIB_BENCH_NONE	lib/lib/include/lib/bench.hpp	19;"	d
LIB_BITS_ASSERT	lib/lib/include/lib/bits.hpp	30;"	d
LIB_BITS_IMPL	lib/lib/include/lib/util_impl.hpp	28;"	d
LIB_BITS_INLINE	lib/lib/include/lib/bits.hpp	21;"	d
LIB_BITS_INLINE	lib/lib/include/lib/bits.hpp	23;"	d
LIB_BUFFER_IMPL	lib/lib/include/lib/util_impl.hpp	31;"	d
LIB_COLOR_IMPL	lib/lib/include/lib/util_impl.hpp	34;"	d
LIB_COLOR_INLINE	lib/lib/include/lib/color.hpp	27;"	d
LIB_COMPILER_CLANG	lib/lib/include/lib/platform.hpp	139;"	d
LIB_COMPILER_MULTILN_CONSTEXPR	lib/lib/include/lib/platform.hpp	198;"	d
LIB_CONVERT_IMPL	lib/lib/include/lib/util_impl.hpp	37;"	d
LIB_CONVERT_INLINE	lib/lib/include/lib/convert.hpp	19;"	d
LIB_DIRECTORY_IMPL	lib/lib/include/lib/util_impl.hpp	40;"	d
LIB_DIRECTORY_IMPL_INCLUDED	lib/lib/include/lib/directory.hpp	46;"	d
LIB_ENTITY_IMPL	lib/lib/include/lib/util_impl.hpp	43;"	d
LIB_ENTITY_INLINE	lib/lib/include/lib/entity.hpp	31;"	d
LIB_FILE_IMPL	lib/lib/include/lib/util_impl.hpp	46;"	d
LIB_FILE_IMPL_INCLUDED	lib/lib/include/lib/file.hpp	72;"	d
LIB_HELPERS_IMPL	lib/lib/include/lib/util_impl.hpp	49;"	d
LIB_IMPL_INCLUDED_2B1B9F18_0082_4CA6_8411_01B99B7A6959	lib/lib/include/lib/logging.hpp	156;"	d
LIB_KEY_ASM	lib/lib/include/lib/key.hpp	22;"	d
LIB_KEY_CPP	lib/lib/include/lib/key.hpp	20;"	d
LIB_KEY_IMPL	lib/lib/include/lib/util_impl.hpp	52;"	d
LIB_KEY_SIMD	lib/lib/include/lib/key.hpp	21;"	d
LIB_LOGGING_IMPL	lib/lib/include/lib/util_impl.hpp	55;"	d
LIB_MAX_FILE_PATH_SIZE	lib/lib/include/lib/platform.hpp	229;"	d
LIB_MEM_IMPL	lib/lib/include/lib/util_impl.hpp	58;"	d
LIB_MEM_IMPL_INCLUDED	lib/lib/include/lib/memory.hpp	188;"	d
LIB_MODEL_IMPL	lib/lib/include/lib/util_impl.hpp	61;"	d
LIB_NS_NAME	lib/lib/include/lib/alignment.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/alignment.hpp	30;"	d
LIB_NS_NAME	lib/lib/include/lib/alloc.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/alloc.hpp	19;"	d
LIB_NS_NAME	lib/lib/include/lib/array.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/array.hpp	28;"	d
LIB_NS_NAME	lib/lib/include/lib/bits.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/bits.hpp	35;"	d
LIB_NS_NAME	lib/lib/include/lib/color.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/color.hpp	32;"	d
LIB_NS_NAME	lib/lib/include/lib/convert.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/convert.hpp	24;"	d
LIB_NS_NAME	lib/lib/include/lib/directory.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/directory.hpp	16;"	d
LIB_NS_NAME	lib/lib/include/lib/entity.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/entity.hpp	36;"	d
LIB_NS_NAME	lib/lib/include/lib/file.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/file.hpp	19;"	d
LIB_NS_NAME	lib/lib/include/lib/helpers.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/helpers.hpp	16;"	d
LIB_NS_NAME	lib/lib/include/lib/key.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/key.hpp	25;"	d
LIB_NS_NAME	lib/lib/include/lib/logging.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/logging.hpp	22;"	d
LIB_NS_NAME	lib/lib/include/lib/memory.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/memory.hpp	27;"	d
LIB_NS_NAME	lib/lib/include/lib/model.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/model.hpp	29;"	d
LIB_NS_NAME	lib/lib/include/lib/number.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/number.hpp	23;"	d
LIB_NS_NAME	lib/lib/include/lib/nyaml.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/nyaml.hpp	29;"	d
LIB_NS_NAME	lib/lib/include/lib/platform.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/platform.hpp	20;"	d
LIB_NS_NAME	lib/lib/include/lib/string.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/string.hpp	25;"	d
LIB_NS_NAME	lib/lib/include/lib/string_pool.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/string_pool.hpp	36;"	d
LIB_NS_NAME	lib/lib/include/lib/timer.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/timer.hpp	29;"	d
LIB_NS_NAME	lib/lib/include/lib/util_fwd.hpp	/^namespace LIB_NS_NAME {$/;"	n
LIB_NS_NAME	lib/lib/include/lib/util_fwd.hpp	9;"	d
LIB_NUMBER_INLINE	lib/lib/include/lib/number.hpp	19;"	d
LIB_NYAML_IMPL	lib/lib/include/lib/util_impl.hpp	64;"	d
LIB_OBJ_MODEL_LOADER_IMPL	lib/lib/include/lib/util_impl.hpp	67;"	d
LIB_OPTIMIZATION_IMPL	lib/lib/include/lib/util_impl.hpp	70;"	d
LIB_PACKING_IMPL	lib/lib/include/lib/util_impl.hpp	73;"	d
LIB_PLATFORM_EM	lib/lib/include/lib/platform.hpp	47;"	d
LIB_PLATFORM_IMPL	lib/lib/include/lib/util_impl.hpp	76;"	d
LIB_PLATFORM_LINUX	lib/lib/include/lib/platform.hpp	34;"	d
LIB_PLATFORM_MAC	lib/lib/include/lib/platform.hpp	29;"	d
LIB_PLATFORM_NIX	lib/lib/include/lib/platform.hpp	30;"	d
LIB_PLATFORM_NIX	lib/lib/include/lib/platform.hpp	35;"	d
LIB_PLATFORM_NIX	lib/lib/include/lib/platform.hpp	49;"	d
LIB_PLATFORM_WEB	lib/lib/include/lib/platform.hpp	48;"	d
LIB_PLATFORM_WIN	lib/lib/include/lib/platform.hpp	39;"	d
LIB_PLATFORM_WIN	lib/lib/include/lib/platform.hpp	43;"	d
LIB_POOL_BUCKET_SIZE	lib/lib/include/lib/memory.hpp	37;"	d
LIB_POOL_BYTE_SIZE	lib/lib/include/lib/memory.hpp	32;"	d
LIB_STRING_IMPL	lib/lib/include/lib/util_impl.hpp	79;"	d
LIB_STRING_POOL_FREE	lib/lib/include/lib/string_pool.hpp	30;"	d
LIB_STRING_POOL_IMPL	lib/lib/include/lib/util_impl.hpp	82;"	d
LIB_STRING_POOL_MALLOC	lib/lib/include/lib/string_pool.hpp	25;"	d
LIB_STR_INLINE	lib/lib/include/lib/string.hpp	30;"	d
LIB_TIMER_IMPL	lib/lib/include/lib/util_impl.hpp	85;"	d
LIB_TIMER_INLINE	lib/lib/include/lib/timer.hpp	25;"	d
LIB_TYPES_IMPL	lib/lib/include/lib/util_impl.hpp	88;"	d
LIB_UNUSED	lib/lib/include/lib/helpers.hpp	26;"	d
LIGHT_INCLUDED_25EFE5DF_D8EC_4D8B_913B_2AAF362CD586	lib/nil/include/nil/data/light.hpp	2;"	d
LIGHT_INCLUDED_B49A5854_D775_4BFD_AD6B_2E23FE27E5D5	lib/roa/include/roa/light.hpp	2;"	d
LINEAR_DISTANCE	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			LINEAR_DISTANCE = 2,$/;"	e	enum:SoLoud::AudioSource::ATTENUATION_MODELS
LINE_OP	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1967;"	d	file:
LINE_OP	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1969;"	d	file:
LINE_OP	thirdparty/stb/include/stb/stb_vorbis.c	1966;"	d	file:
LINE_OP	thirdparty/stb/include/stb/stb_vorbis.c	1968;"	d	file:
LINKCMD	app/blank/data/Makefile	/^  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)$/;"	m
LINKCMD	app/fps_walk/data/Makefile	/^  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)$/;"	m
LINKCMD	app/perils/data/Makefile	/^  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)$/;"	m
LINKCMD	app/they_never_pay/data/Makefile	/^  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)$/;"	m
LINKCMD	app/tiles/data/Makefile	/^  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)$/;"	m
LINKCMD	lib/math/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	lib/nau/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	lib/nil_aspects/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	lib/roa/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	lib/rov/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	thirdparty/catch/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	thirdparty/glfw/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	thirdparty/imgui/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	thirdparty/imguizmo/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	thirdparty/json/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	thirdparty/opengl/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	thirdparty/remotery/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	thirdparty/soloud/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	thirdparty/stb/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINKCMD	thirdparty/tinydir/data/Makefile	/^  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)$/;"	m
LINMATH_H	thirdparty/glfw/src/deps/linmath.h	2;"	d
LINMATH_H_DEFINE_VEC	thirdparty/glfw/src/deps/linmath.h	10;"	d
LISTENER_RELATIVE	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			LISTENER_RELATIVE = 16,$/;"	e	enum:SoLoud::AudioSource::FLAGS
LISTENER_RELATIVE	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			LISTENER_RELATIVE = 16,$/;"	e	enum:SoLoud::AudioSourceInstance::FLAGS
LMGetKbdType	thirdparty/glfw/src/cocoa_platform.h	77;"	d
LOADED	lib/roa/include/roa/resource_status.hpp	/^  LOADED,$/;"	m	class:ROA::Resource_status
LOCAL	thirdparty/imguizmo/include/imguizmo/ImGuizmo.h	/^		LOCAL,$/;"	e	enum:ImGuizmo::MODE
LOFIFILTER_BITDEPTH	thirdparty/soloud/include/soloud/soloud_c.h	/^	LOFIFILTER_BITDEPTH = 2,$/;"	e	enum:SOLOUD_ENUMS
LOFIFILTER_SAMPLERATE	thirdparty/soloud/include/soloud/soloud_c.h	/^	LOFIFILTER_SAMPLERATE = 1,$/;"	e	enum:SOLOUD_ENUMS
LOFIFILTER_WET	thirdparty/soloud/include/soloud/soloud_c.h	/^	LOFIFILTER_WET = 0,$/;"	e	enum:SOLOUD_ENUMS
LOGGER	lib/lib/include/lib/logging.hpp	52;"	d
LOGGING_FILE_NAME	lib/lib/include/lib/logging.hpp	36;"	d
LOGGING_FUNC_STR	lib/lib/include/lib/logging.hpp	39;"	d
LOGGING_FUNC_STR	lib/lib/include/lib/logging.hpp	41;"	d
LOGGING_INCLUDED_55713C67_54CB_4844_B789_EC11EFA4F9E6	lib/lib/include/lib/logging.hpp	9;"	d
LOGIC_INCLUDED_AC052605_9926_4B8E_BFAC_06B52EA74A5C	lib/nil/include/nil/data/logic.hpp	2;"	d
LOGIC_INCLUDED_E2CDB8D6_BCF0_409F_953C_DB0C8723535B	lib/roa/include/roa/logic.hpp	2;"	d
LOG_ARGS	lib/lib/include/lib/logging.hpp	51;"	d
LOG_DEPRECATED	lib/lib/include/lib/logging.hpp	96;"	d
LOG_DEPRECATED	lib/lib/include/lib/logging.hpp	99;"	d
LOG_DEPRECATED_ONCE	lib/lib/include/lib/logging.hpp	100;"	d
LOG_DEPRECATED_ONCE	lib/lib/include/lib/logging.hpp	97;"	d
LOG_ERROR	lib/lib/include/lib/logging.hpp	80;"	d
LOG_ERROR	lib/lib/include/lib/logging.hpp	83;"	d
LOG_ERROR_ONCE	lib/lib/include/lib/logging.hpp	81;"	d
LOG_ERROR_ONCE	lib/lib/include/lib/logging.hpp	84;"	d
LOG_FATAL	lib/lib/include/lib/logging.hpp	88;"	d
LOG_FATAL	lib/lib/include/lib/logging.hpp	91;"	d
LOG_FATAL_ONCE	lib/lib/include/lib/logging.hpp	89;"	d
LOG_FATAL_ONCE	lib/lib/include/lib/logging.hpp	92;"	d
LOG_GET	lib/lib/include/lib/logging.hpp	49;"	d
LOG_INFO	lib/lib/include/lib/logging.hpp	64;"	d
LOG_INFO	lib/lib/include/lib/logging.hpp	67;"	d
LOG_INFO_ONCE	lib/lib/include/lib/logging.hpp	65;"	d
LOG_INFO_ONCE	lib/lib/include/lib/logging.hpp	68;"	d
LOG_NONE	lib/lib/include/lib/logging.hpp	45;"	d
LOG_ONE	lib/lib/include/lib/logging.hpp	46;"	d
LOG_TODO	lib/lib/include/lib/logging.hpp	56;"	d
LOG_TODO	lib/lib/include/lib/logging.hpp	59;"	d
LOG_TODO_ONCE	lib/lib/include/lib/logging.hpp	57;"	d
LOG_TODO_ONCE	lib/lib/include/lib/logging.hpp	60;"	d
LOG_V	lib/lib/include/lib/logging.hpp	47;"	d
LOG_WARNING	lib/lib/include/lib/logging.hpp	72;"	d
LOG_WARNING	lib/lib/include/lib/logging.hpp	75;"	d
LOG_WARNING_ONCE	lib/lib/include/lib/logging.hpp	73;"	d
LOG_WARNING_ONCE	lib/lib/include/lib/logging.hpp	76;"	d
LOOPING	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			LOOPING = 1,$/;"	e	enum:SoLoud::AudioSourceInstance::FLAGS
LOWPASS	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^			LOWPASS = 1,$/;"	e	enum:SoLoud::BiquadResonantFilter::FILTERTYPE
LPCDIACTIONA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIACTIONA *LPCDIACTIONA;$/;"	t
LPCDIACTIONFORMATA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIACTIONFORMATA *LPCDIACTIONFORMATA;$/;"	t
LPCDIACTIONFORMATW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIACTIONFORMATW *LPCDIACTIONFORMATW;$/;"	t
LPCDIACTIONW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIACTIONW *LPCDIACTIONW;$/;"	t
LPCDICOLORSET	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DICOLORSET *LPCDICOLORSET;$/;"	t
LPCDICONDITION	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DICONDITION *LPCDICONDITION;$/;"	t
LPCDICONFIGUREDEVICESPARAMSA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DICONFIGUREDEVICESPARAMSA *LPCDICONFIGUREDEVICESPARAMSA;$/;"	t
LPCDICONFIGUREDEVICESPARAMSW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DICONFIGUREDEVICESPARAMSW *LPCDICONFIGUREDEVICESPARAMSW;$/;"	t
LPCDICONSTANTFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DICONSTANTFORCE *LPCDICONSTANTFORCE;$/;"	t
LPCDICUSTOMFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DICUSTOMFORCE *LPCDICUSTOMFORCE;$/;"	t
LPCDIDATAFORMAT	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDATAFORMAT *LPCDIDATAFORMAT;$/;"	t
LPCDIDEVICEIMAGEINFOA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEIMAGEINFOA *LPCDIDEVICEIMAGEINFOA;$/;"	t
LPCDIDEVICEIMAGEINFOHEADERA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEIMAGEINFOHEADERA *LPCDIDEVICEIMAGEINFOHEADERA;$/;"	t
LPCDIDEVICEIMAGEINFOHEADERW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEIMAGEINFOHEADERW *LPCDIDEVICEIMAGEINFOHEADERW;$/;"	t
LPCDIDEVICEIMAGEINFOW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEIMAGEINFOW *LPCDIDEVICEIMAGEINFOW;$/;"	t
LPCDIDEVICEINSTANCEA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEINSTANCEA *LPCDIDEVICEINSTANCEA;$/;"	t
LPCDIDEVICEINSTANCEW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEINSTANCEW *LPCDIDEVICEINSTANCEW;$/;"	t
LPCDIDEVICEINSTANCE_DX3A	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEINSTANCE_DX3A *LPCDIDEVICEINSTANCE_DX3A;$/;"	t
LPCDIDEVICEINSTANCE_DX3W	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEINSTANCE_DX3W *LPCDIDEVICEINSTANCE_DX3W;$/;"	t
LPCDIDEVICEOBJECTDATA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEOBJECTDATA *LPCDIDEVICEOBJECTDATA;$/;"	t
LPCDIDEVICEOBJECTDATA_DX3	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEOBJECTDATA_DX3 *LPCDIDEVICEOBJECTDATA_DX3;$/;"	t
LPCDIDEVICEOBJECTINSTANCEA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEOBJECTINSTANCEA *LPCDIDEVICEOBJECTINSTANCEA;$/;"	t
LPCDIDEVICEOBJECTINSTANCEW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEOBJECTINSTANCEW *LPCDIDEVICEOBJECTINSTANCEW;$/;"	t
LPCDIDEVICEOBJECTINSTANCE_DX3A	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEOBJECTINSTANCE_DX3A *LPCDIDEVICEOBJECTINSTANCE_DX3A;$/;"	t
LPCDIDEVICEOBJECTINSTANCE_DX3W	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIDEVICEOBJECTINSTANCE_DX3W *LPCDIDEVICEOBJECTINSTANCE_DX3W;$/;"	t
LPCDIEFFECT	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIEFFECT *LPCDIEFFECT;$/;"	t
LPCDIEFFECTINFOA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIEFFECTINFOA *LPCDIEFFECTINFOA;$/;"	t
LPCDIEFFECTINFOW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIEFFECTINFOW *LPCDIEFFECTINFOW;$/;"	t
LPCDIEFFECT_DX5	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIEFFECT_DX5 *LPCDIEFFECT_DX5;$/;"	t
LPCDIENVELOPE	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIENVELOPE *LPCDIENVELOPE;$/;"	t
LPCDIFILEEFFECT	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIFILEEFFECT *LPCDIFILEEFFECT;$/;"	t
LPCDIOBJECTDATAFORMAT	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIOBJECTDATAFORMAT *LPCDIOBJECTDATAFORMAT;$/;"	t
LPCDIPERIODIC	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIPERIODIC *LPCDIPERIODIC;$/;"	t
LPCDIPROPCAL	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIPROPCAL *LPCDIPROPCAL;$/;"	t
LPCDIPROPCALPOV	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIPROPCALPOV *LPCDIPROPCALPOV;$/;"	t
LPCDIPROPCPOINTS	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIPROPCPOINTS *LPCDIPROPCPOINTS;$/;"	t
LPCDIPROPDWORD	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIPROPDWORD *LPCDIPROPDWORD;$/;"	t
LPCDIPROPGUIDANDPATH	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIPROPGUIDANDPATH *LPCDIPROPGUIDANDPATH;$/;"	t
LPCDIPROPHEADER	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIPROPHEADER *LPCDIPROPHEADER;$/;"	t
LPCDIPROPPOINTER	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIPROPPOINTER *LPCDIPROPPOINTER;$/;"	t
LPCDIPROPRANGE	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIPROPRANGE *LPCDIPROPRANGE;$/;"	t
LPCDIPROPSTRING	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIPROPSTRING *LPCDIPROPSTRING;$/;"	t
LPCDIRAMPFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef const DIRAMPFORCE *LPCDIRAMPFORCE;$/;"	t
LPDIACTIONA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIACTIONA, *LPDIACTIONA;$/;"	t	typeref:struct:_DIACTIONA
LPDIACTIONFORMATA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIACTIONFORMATA, *LPDIACTIONFORMATA;$/;"	t	typeref:struct:_DIACTIONFORMATA
LPDIACTIONFORMATW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIACTIONFORMATW, *LPDIACTIONFORMATW;$/;"	t	typeref:struct:_DIACTIONFORMATW
LPDIACTIONW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIACTIONW, *LPDIACTIONW;$/;"	t	typeref:struct:_DIACTIONW
LPDICOLORSET	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DICOLORSET, *LPDICOLORSET;$/;"	t	typeref:struct:_DICOLORSET
LPDICONDITION	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DICONDITION, *LPDICONDITION;$/;"	t	typeref:struct:DICONDITION
LPDICONFIGUREDEVICESCALLBACK	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDICONFIGUREDEVICESCALLBACK)(LPUNKNOWN,LPVOID);$/;"	t
LPDICONFIGUREDEVICESPARAMSA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DICONFIGUREDEVICESPARAMSA, *LPDICONFIGUREDEVICESPARAMSA;$/;"	t	typeref:struct:_DICONFIGUREDEVICESPARAMSA
LPDICONFIGUREDEVICESPARAMSW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DICONFIGUREDEVICESPARAMSW, *LPDICONFIGUREDEVICESPARAMSW;$/;"	t	typeref:struct:_DICONFIGUREDEVICESPARAMSW
LPDICONSTANTFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DICONSTANTFORCE, *LPDICONSTANTFORCE;$/;"	t	typeref:struct:DICONSTANTFORCE
LPDICUSTOMFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DICUSTOMFORCE, *LPDICUSTOMFORCE;$/;"	t	typeref:struct:DICUSTOMFORCE
LPDIDATAFORMAT	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDATAFORMAT, *LPDIDATAFORMAT;$/;"	t	typeref:struct:_DIDATAFORMAT
LPDIDEVCAPS	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVCAPS,*LPDIDEVCAPS;$/;"	t	typeref:struct:DIDEVCAPS
LPDIDEVCAPS_DX3	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVCAPS_DX3, *LPDIDEVCAPS_DX3;$/;"	t	typeref:struct:DIDEVCAPS_DX3
LPDIDEVICEIMAGEINFOA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOA, *LPDIDEVICEIMAGEINFOA;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOA
LPDIDEVICEIMAGEINFOHEADERA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOHEADERA, *LPDIDEVICEIMAGEINFOHEADERA;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOHEADERA
LPDIDEVICEIMAGEINFOHEADERW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOHEADERW, *LPDIDEVICEIMAGEINFOHEADERW;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOHEADERW
LPDIDEVICEIMAGEINFOW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEIMAGEINFOW, *LPDIDEVICEIMAGEINFOW;$/;"	t	typeref:struct:_DIDEVICEIMAGEINFOW
LPDIDEVICEINSTANCEA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEINSTANCEA, *LPDIDEVICEINSTANCEA;$/;"	t	typeref:struct:DIDEVICEINSTANCEA
LPDIDEVICEINSTANCEW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEINSTANCEW, *LPDIDEVICEINSTANCEW;$/;"	t	typeref:struct:DIDEVICEINSTANCEW
LPDIDEVICEINSTANCE_DX3A	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEINSTANCE_DX3A, *LPDIDEVICEINSTANCE_DX3A;$/;"	t	typeref:struct:DIDEVICEINSTANCE_DX3A
LPDIDEVICEINSTANCE_DX3W	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEINSTANCE_DX3W, *LPDIDEVICEINSTANCE_DX3W;$/;"	t	typeref:struct:DIDEVICEINSTANCE_DX3W
LPDIDEVICEOBJECTDATA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEOBJECTDATA, *LPDIDEVICEOBJECTDATA;$/;"	t	typeref:struct:DIDEVICEOBJECTDATA
LPDIDEVICEOBJECTDATA_DX3	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEOBJECTDATA_DX3,*LPDIDEVICEOBJECTDATA_DX3;$/;"	t	typeref:struct:DIDEVICEOBJECTDATA_DX3
LPDIDEVICEOBJECTINSTANCEA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCEA, *LPDIDEVICEOBJECTINSTANCEA;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCEA
LPDIDEVICEOBJECTINSTANCEW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCEW, *LPDIDEVICEOBJECTINSTANCEW;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCEW
LPDIDEVICEOBJECTINSTANCE_DX3A	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCE_DX3A, *LPDIDEVICEOBJECTINSTANCE_DX3A;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCE_DX3A
LPDIDEVICEOBJECTINSTANCE_DX3W	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIDEVICEOBJECTINSTANCE_DX3W, *LPDIDEVICEOBJECTINSTANCE_DX3W;$/;"	t	typeref:struct:DIDEVICEOBJECTINSTANCE_DX3W
LPDIEFFECT	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIEFFECT, *LPDIEFFECT;$/;"	t	typeref:struct:DIEFFECT
LPDIEFFECTINFOA	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIEFFECTINFOA, *LPDIEFFECTINFOA;$/;"	t	typeref:struct:DIEFFECTINFOA
LPDIEFFECTINFOW	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIEFFECTINFOW, *LPDIEFFECTINFOW;$/;"	t	typeref:struct:DIEFFECTINFOW
LPDIEFFECT_DX5	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIEFFECT_DX5, *LPDIEFFECT_DX5;$/;"	t	typeref:struct:DIEFFECT_DX5
LPDIEFFECT_DX6	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef LPDIEFFECT LPDIEFFECT_DX6;$/;"	t
LPDIEFFESCAPE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIEFFESCAPE, *LPDIEFFESCAPE;$/;"	t	typeref:struct:DIEFFESCAPE
LPDIENUMCREATEDEFFECTOBJECTSCALLBACK	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMCREATEDEFFECTOBJECTSCALLBACK)(LPDIRECTINPUTEFFECT, LPVOID);$/;"	t
LPDIENUMDEVICEOBJECTSCALLBACKA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMDEVICEOBJECTSCALLBACKA)(LPCDIDEVICEOBJECTINSTANCEA,LPVOID);$/;"	t
LPDIENUMDEVICEOBJECTSCALLBACKW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMDEVICEOBJECTSCALLBACKW)(LPCDIDEVICEOBJECTINSTANCEW,LPVOID);$/;"	t
LPDIENUMDEVICESBYSEMANTICSCBA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMDEVICESBYSEMANTICSCBA)(LPCDIDEVICEINSTANCEA,LPDIRECTINPUTDEVICE8A,DWORD,DWORD,LPVOID);$/;"	t
LPDIENUMDEVICESBYSEMANTICSCBW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMDEVICESBYSEMANTICSCBW)(LPCDIDEVICEINSTANCEW,LPDIRECTINPUTDEVICE8W,DWORD,DWORD,LPVOID);$/;"	t
LPDIENUMDEVICESCALLBACKA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMDEVICESCALLBACKA)(LPCDIDEVICEINSTANCEA,LPVOID);$/;"	t
LPDIENUMDEVICESCALLBACKW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMDEVICESCALLBACKW)(LPCDIDEVICEINSTANCEW,LPVOID);$/;"	t
LPDIENUMEFFECTSCALLBACKA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMEFFECTSCALLBACKA)(LPCDIEFFECTINFOA, LPVOID);$/;"	t
LPDIENUMEFFECTSCALLBACKW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMEFFECTSCALLBACKW)(LPCDIEFFECTINFOW, LPVOID);$/;"	t
LPDIENUMEFFECTSINFILECALLBACK	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef BOOL (CALLBACK *LPDIENUMEFFECTSINFILECALLBACK)(LPCDIFILEEFFECT , LPVOID);$/;"	t
LPDIENVELOPE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIENVELOPE, *LPDIENVELOPE;$/;"	t	typeref:struct:DIENVELOPE
LPDIFILEEFFECT	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIFILEEFFECT, *LPDIFILEEFFECT;$/;"	t	typeref:struct:DIFILEEFFECT
LPDIJOYSTATE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIJOYSTATE, *LPDIJOYSTATE;$/;"	t	typeref:struct:DIJOYSTATE
LPDIJOYSTATE2	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIJOYSTATE2, *LPDIJOYSTATE2;$/;"	t	typeref:struct:DIJOYSTATE2
LPDIOBJECTDATAFORMAT	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIOBJECTDATAFORMAT, *LPDIOBJECTDATAFORMAT;$/;"	t	typeref:struct:_DIOBJECTDATAFORMAT
LPDIPERIODIC	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPERIODIC, *LPDIPERIODIC;$/;"	t	typeref:struct:DIPERIODIC
LPDIPROPCAL	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPCAL, *LPDIPROPCAL;$/;"	t	typeref:struct:DIPROPCAL
LPDIPROPCALPOV	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPCALPOV, *LPDIPROPCALPOV;$/;"	t	typeref:struct:DIPROPCALPOV
LPDIPROPCPOINTS	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPCPOINTS, *LPDIPROPCPOINTS;$/;"	t	typeref:struct:DIPROPCPOINTS
LPDIPROPDWORD	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPDWORD, *LPDIPROPDWORD;$/;"	t	typeref:struct:DIPROPDWORD
LPDIPROPGUIDANDPATH	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPGUIDANDPATH, *LPDIPROPGUIDANDPATH;$/;"	t	typeref:struct:DIPROPGUIDANDPATH
LPDIPROPHEADER	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPHEADER,*LPDIPROPHEADER;$/;"	t	typeref:struct:DIPROPHEADER
LPDIPROPPOINTER	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPPOINTER, *LPDIPROPPOINTER;$/;"	t	typeref:struct:DIPROPPOINTER
LPDIPROPRANGE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPRANGE, *LPDIPROPRANGE;$/;"	t	typeref:struct:DIPROPRANGE
LPDIPROPSTRING	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIPROPSTRING, *LPDIPROPSTRING;$/;"	t	typeref:struct:DIPROPSTRING
LPDIRAMPFORCE	thirdparty/glfw/src/deps/mingw/dinput.h	/^} DIRAMPFORCE, *LPDIRAMPFORCE;$/;"	t	typeref:struct:DIRAMPFORCE
LPDIRECTINPUT2A	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInput2A *LPDIRECTINPUT2A;$/;"	t	typeref:struct:IDirectInput2A
LPDIRECTINPUT2W	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInput2W *LPDIRECTINPUT2W;$/;"	t	typeref:struct:IDirectInput2W
LPDIRECTINPUT7A	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInput7A *LPDIRECTINPUT7A;$/;"	t	typeref:struct:IDirectInput7A
LPDIRECTINPUT7W	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInput7W *LPDIRECTINPUT7W;$/;"	t	typeref:struct:IDirectInput7W
LPDIRECTINPUT8A	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInput8A *LPDIRECTINPUT8A;$/;"	t	typeref:struct:IDirectInput8A
LPDIRECTINPUT8W	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInput8W *LPDIRECTINPUT8W;$/;"	t	typeref:struct:IDirectInput8W
LPDIRECTINPUTA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInputA *LPDIRECTINPUTA;$/;"	t	typeref:struct:IDirectInputA
LPDIRECTINPUTDEVICE2A	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInputDevice2A *LPDIRECTINPUTDEVICE2A;$/;"	t	typeref:struct:IDirectInputDevice2A
LPDIRECTINPUTDEVICE2W	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInputDevice2W *LPDIRECTINPUTDEVICE2W;$/;"	t	typeref:struct:IDirectInputDevice2W
LPDIRECTINPUTDEVICE7A	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInputDevice7A *LPDIRECTINPUTDEVICE7A;$/;"	t	typeref:struct:IDirectInputDevice7A
LPDIRECTINPUTDEVICE7W	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInputDevice7W *LPDIRECTINPUTDEVICE7W;$/;"	t	typeref:struct:IDirectInputDevice7W
LPDIRECTINPUTDEVICE8A	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInputDevice8A *LPDIRECTINPUTDEVICE8A;$/;"	t	typeref:struct:IDirectInputDevice8A
LPDIRECTINPUTDEVICE8W	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInputDevice8W *LPDIRECTINPUTDEVICE8W;$/;"	t	typeref:struct:IDirectInputDevice8W
LPDIRECTINPUTDEVICEA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInputDeviceA *LPDIRECTINPUTDEVICEA;$/;"	t	typeref:struct:IDirectInputDeviceA
LPDIRECTINPUTDEVICEW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInputDeviceW *LPDIRECTINPUTDEVICEW;$/;"	t	typeref:struct:IDirectInputDeviceW
LPDIRECTINPUTEFFECT	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInputEffect *LPDIRECTINPUTEFFECT;$/;"	t	typeref:struct:IDirectInputEffect
LPDIRECTINPUTW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct IDirectInputW *LPDIRECTINPUTW;$/;"	t	typeref:struct:IDirectInputW
LPSYSKEYBOARDA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct SysKeyboardA *LPSYSKEYBOARDA;$/;"	t	typeref:struct:SysKeyboardA
LPSYSMOUSEA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct SysMouseA *LPSYSMOUSEA;$/;"	t	typeref:struct:SysMouseA
L_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule L_rules[] =$/;"	v	file:
LabelText	thirdparty/imgui/src/imgui.cpp	/^void ImGui::LabelText(const char* label, const char* fmt, ...)$/;"	f	class:ImGui
LabelTextV	thirdparty/imgui/src/imgui.cpp	/^void ImGui::LabelTextV(const char* label, const char* fmt, va_list args)$/;"	f	class:ImGui
LastFrameActive	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     LastFrameActive;$/;"	m	struct:ImGuiWindow
LastItemHoveredAndUsable	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    LastItemHoveredAndUsable;  \/\/ Item rectangle is hovered, and its window is currently interactable with (not blocked by a popup preventing access to the window)$/;"	m	struct:ImGuiDrawContext
LastItemHoveredRect	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    LastItemHoveredRect;       \/\/ Item rectangle is hovered, but its window may or not be currently interactable with (might be blocked by a popup preventing access to the window)$/;"	m	struct:ImGuiDrawContext
LastItemId	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID                 LastItemId;$/;"	m	struct:ImGuiDrawContext
LastItemRect	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImRect                  LastItemRect;$/;"	m	struct:ImGuiDrawContext
LayoutType	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiLayoutType         LayoutType;$/;"	m	struct:ImGuiDrawContext
Length	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float Length() const { return sqrtf(x*x + y*y + z*z); };$/;"	f	struct:ImGuizmo::vec_t
LengthSq	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float LengthSq() const { return (x*x + y*y + z*z); };$/;"	f	struct:ImGuizmo::vec_t
Lerp	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void Lerp(const vec_t& v, float t)$/;"	f	struct:ImGuizmo::vec_t
Light	lib/nil/include/nil/data/light.hpp	/^struct Light$/;"	s	namespace:Nil::Data
Light	lib/roa/src/interface/light.cpp	/^Light::Light()$/;"	f	class:ROA::Light
Light	lib/roa/src/interface/light.cpp	/^Light::Light(const ROA_nullptr null)$/;"	f	class:ROA::Light
Light_type	lib/roa/include/roa/light.hpp	/^enum class Light_type$/;"	c	namespace:ROA
Link	thirdparty/remotery/src/Remotery.c	/^    ObjectLink Link;$/;"	m	struct:D3D11Timestamp	file:
Link	thirdparty/remotery/src/Remotery.c	/^    ObjectLink Link;$/;"	m	struct:MetalTimestamp	file:
Link	thirdparty/remotery/src/Remotery.c	/^    ObjectLink Link;$/;"	m	struct:OpenGLTimestamp	file:
Link	thirdparty/remotery/src/Remotery.c	/^    ObjectLink Link;$/;"	m	struct:Sample	file:
ListBox	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::ListBox(const char* label, int* current_item, bool (*items_getter)(void*, int, const char**), void* data, int items_count, int height_in_items)$/;"	f	class:ImGui
ListBox	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::ListBox(const char* label, int* current_item, const char* const* items, int items_count, int height_items)$/;"	f	class:ImGui
ListBoxFooter	thirdparty/imgui/src/imgui.cpp	/^void ImGui::ListBoxFooter()$/;"	f	class:ImGui
ListBoxHeader	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::ListBoxHeader(const char* label, const ImVec2& size_arg)$/;"	f	class:ImGui
ListBoxHeader	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::ListBoxHeader(const char* label, int items_count, int height_in_items)$/;"	f	class:ImGui
LoadIniSettingsFromDisk	thirdparty/imgui/src/imgui.cpp	/^static void LoadIniSettingsFromDisk(const char* ini_filename)$/;"	f	file:
LocalStore.Get	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/LocalStore.js	/^}$/;"	f
LocalStore.Set	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/LocalStore.js	/^namespace("LocalStore");$/;"	f
LofiChannelData	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^	struct LofiChannelData$/;"	s	namespace:SoLoud
LofiFilter	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * LofiFilter;$/;"	t
LofiFilter	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^	class LofiFilter : public Filter$/;"	c	namespace:SoLoud
LofiFilter	thirdparty/soloud/src/filter/soloud_lofifilter.cpp	/^	LofiFilter::LofiFilter()$/;"	f	class:SoLoud::LofiFilter
LofiFilterInstance	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^	class LofiFilterInstance : public FilterInstance$/;"	c	namespace:SoLoud
LofiFilterInstance	thirdparty/soloud/src/filter/soloud_lofifilter.cpp	/^	LofiFilterInstance::LofiFilterInstance(LofiFilter *aParent)$/;"	f	class:SoLoud::LofiFilterInstance
LofiFilter_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * LofiFilter_create()$/;"	f
LofiFilter_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void LofiFilter_destroy(void * aClassPtr)$/;"	f
LofiFilter_setParams	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int LofiFilter_setParams(void * aClassPtr, float aSampleRate, float aBitdepth)$/;"	f
LogAutoExpandMaxDepth	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     LogAutoExpandMaxDepth;$/;"	m	struct:ImGuiContext
LogButtons	thirdparty/imgui/src/imgui.cpp	/^void ImGui::LogButtons()$/;"	f	class:ImGui
LogClipboard	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiTextBuffer*        LogClipboard;                       \/\/ Else log to clipboard. This is pointer so our GImGui static constructor doesn't call heap allocators.$/;"	m	struct:ImGuiContext
LogEnabled	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    LogEnabled;$/;"	m	struct:ImGuiContext
LogFile	thirdparty/imgui/include/imgui/imgui_internal.h	/^    FILE*                   LogFile;                            \/\/ If != NULL log to stdout\/ file$/;"	m	struct:ImGuiContext
LogFilename	thirdparty/imgui/include/imgui/imgui.h	/^    const char*   LogFilename;              \/\/ = "imgui_log.txt"    \/\/ Path to .log file (default parameter to ImGui::LogToFile when no file is specified).$/;"	m	struct:ImGuiIO
LogFinish	thirdparty/imgui/src/imgui.cpp	/^void ImGui::LogFinish()$/;"	f	class:ImGui
LogLinePosY	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   LogLinePosY;$/;"	m	struct:ImGuiDrawContext
LogRenderedText	thirdparty/imgui/src/imgui.cpp	/^static void LogRenderedText(const ImVec2& ref_pos, const char* text, const char* text_end)$/;"	f	file:
LogStartDepth	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     LogStartDepth;$/;"	m	struct:ImGuiContext
LogText	thirdparty/imgui/src/imgui.cpp	/^void ImGui::LogText(const char* fmt, ...)$/;"	f	class:ImGui
LogToClipboard	thirdparty/imgui/src/imgui.cpp	/^void ImGui::LogToClipboard(int max_depth)$/;"	f	class:ImGui
LogToFile	thirdparty/imgui/src/imgui.cpp	/^void ImGui::LogToFile(int max_depth, const char* filename)$/;"	f	class:ImGui
LogToTTY	thirdparty/imgui/src/imgui.cpp	/^void ImGui::LogToTTY(int max_depth)$/;"	f	class:ImGui
Logic	lib/nil/include/nil/data/logic.hpp	/^struct Logic$/;"	s	namespace:Nil::Data
Logic	lib/roa/src/interface/logic.cpp	/^Logic::Logic()$/;"	f	class:ROA::Logic
Logic	lib/roa/src/interface/logic.cpp	/^Logic::Logic(const ROA_nullptr null)$/;"	f	class:ROA::Logic
LowerBound	thirdparty/imgui/src/imgui.cpp	/^static ImVector<ImGuiStorage::Pair>::iterator LowerBound(ImVector<ImGuiStorage::Pair>& data, ImGuiID key)$/;"	f	file:
M	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	L					: 76,$/;"	p	class:namespace.Codes
M1	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^mdct_lookup M1,M2;$/;"	v
M1	thirdparty/stb/include/stb/stb_vorbis.c	/^mdct_lookup M1,M2;$/;"	v
M2	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^mdct_lookup M1,M2;$/;"	v
M2	thirdparty/stb/include/stb/stb_vorbis.c	/^mdct_lookup M1,M2;$/;"	v
MAC_ENTER	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	WIN_KEY_FF_LINUX	: 0,$/;"	p	class:namespace.Codes
MAC_FF_META	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	WIN_KEY				: 224,$/;"	p	class:namespace.Codes
MAC_WK_CMD_LEFT	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	MAC_FF_META			: 224,	\/\/ Firefox (Gecko) fires this for the meta key instead of 91$/;"	p	class:namespace.Codes
MAC_WK_CMD_RIGHT	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	MAC_WK_CMD_LEFT		: 91,	\/\/ WebKit Left Command key fired, same as META$/;"	p	class:namespace.Codes
MAGIC	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	5020;"	d	file:
MAGIC	thirdparty/stb/include/stb/stb_vorbis.c	5026;"	d	file:
MAKEDIPROP	thirdparty/glfw/src/deps/mingw/dinput.h	829;"	d
MAKEDIPROP	thirdparty/glfw/src/deps/mingw/dinput.h	831;"	d
MAKEDWORD	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	125;"	d	file:
MAKEDWORD	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	303;"	d	file:
MATCH_PART	thirdparty/soloud/src/audiosource/speech/tts.cpp	77;"	d	file:
MATERIAL_INCLUDED_1BC55ED8_5498_4064_BB1B_CFA9D585FED3	lib/roa/include/roa/material.hpp	2;"	d
MATERIAL_INCLUDED_B6F417E4_C08D_4638_AFEB_DE336CBEF01B	lib/nil/src/internal_data/resources/material_data.hpp	2;"	d
MATERIAL_INCLUDED_F58F218E_C94E_49D4_9CA3_34CBD7A35E26	lib/nil/include/nil/resource/material.hpp	2;"	d
MATH_AABB_INLINE	lib/math/include/math/geometry/aabb.hpp	16;"	d
MATH_ASSERT	lib/math/include/math/detail/detail.hpp	70;"	d
MATH_CONST	lib/math/include/math/detail/detail.hpp	58;"	d
MATH_CONST_CONSTEXPR	lib/math/include/math/general/constants.hpp	11;"	d
MATH_GENR_INLINE	lib/math/include/math/general/general.hpp	23;"	d
MATH_INCLUDED_B36273D6_32F5_4D9F_AF97_F2CC702156FD	lib/math/include/math/math.hpp	2;"	d
MATH_INLINE	lib/math/include/math/detail/detail.hpp	37;"	d
MATH_INLINE	lib/math/include/math/detail/detail.hpp	44;"	d
MATH_INLINE	lib/math/include/math/detail/detail.hpp	47;"	d
MATH_INLINE	lib/math/include/math/detail/detail.hpp	53;"	d
MATH_LIKELY	lib/math/include/math/detail/detail.hpp	60;"	d
MATH_MAT3_INLINE	lib/math/include/math/mat/mat3.hpp	104;"	d
MATH_MAT3_INLINE	lib/math/include/math/mat/mat3.hpp	18;"	d
MATH_MAT4_INLINE	lib/math/include/math/mat/mat4.hpp	117;"	d
MATH_MAT4_INLINE	lib/math/include/math/mat/mat4.hpp	18;"	d
MATH_MISC_INLINE	lib/math/include/math/geometry/misc.hpp	16;"	d
MATH_NIL_EXTENSIONS_INCLUDED_BE44ABF0_26B5_40A1_B384_D71D09A5C58A	lib/nil_aspects/include/aspect/math_nil_extensions.hpp	2;"	d
MATH_NS_NAME	lib/math/include/math/detail/detail.hpp	9;"	d
MATH_ON_FPU	lib/math/include/math/detail/detail.hpp	22;"	d
MATH_ON_SIMD	lib/math/include/math/detail/detail.hpp	18;"	d
MATH_ON_SSE2	lib/math/include/math/detail/detail.hpp	19;"	d
MATH_QUAT_INLINE	lib/math/include/math/detail/detail.hpp	67;"	d
MATH_RAY_INLINE	lib/math/include/math/geometry/ray.hpp	19;"	d
MATH_TO_STRING_INLINE	lib/math/include/math/to_string.hpp	18;"	d
MATH_TRANS_INLINE	lib/math/include/math/transform/transform.hpp	16;"	d
MATH_UNLIKELY	lib/math/include/math/detail/detail.hpp	61;"	d
MATH_VEC2_INLINE	lib/math/include/math/detail/detail.hpp	64;"	d
MATH_VEC3_INLINE	lib/math/include/math/detail/detail.hpp	65;"	d
MATH_VEC4_INLINE	lib/math/include/math/detail/detail.hpp	66;"	d
MATRIX33_INCLUDED_D6DCE389_FA7C_4C48_A303_C0EDC9A90C8B	lib/math/include/math/mat/mat3.hpp	2;"	d
MATRIX44_INCLUDED_45952EA8_98A0_40E4_8677_AE79A577E975	lib/math/include/math/mat/mat4.hpp	2;"	d
MATRIX_INCLUDED_998E4CEC_819E_4B20_BE2E_49E6C0D1CBAF	lib/math/include/math/mat/mat.hpp	2;"	d
MATRIX_TYPES_INCLUDED_2460E1C2_10A1_4101_A23D_C5E683367E4A	lib/math/include/math/mat/mat_types.hpp	2;"	d
MAT_FWD_INCLUDED_C49C5C95_9B21_4636_AA8B_50F0D0AAAB9E	lib/math/include/math/mat/mat_fwd.hpp	2;"	d
MAX	thirdparty/soloud/src/core/soloud_core_3d.cpp	140;"	d	file:
MAXCPOINTSNUM	thirdparty/glfw/src/deps/mingw/dinput.h	881;"	d
MAX_BLOCKSIZE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	608;"	d	file:
MAX_BLOCKSIZE	thirdparty/stb/include/stb/stb_vorbis.c	606;"	d	file:
MAX_BLOCKSIZE_LOG	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	607;"	d	file:
MAX_BLOCKSIZE_LOG	thirdparty/stb/include/stb/stb_vorbis.c	605;"	d	file:
MAX_BUFFER_SIZE	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	12;"	d	file:
MAX_CHANNELS	thirdparty/soloud/include/soloud/soloud.h	64;"	d
MAX_FUNC	thirdparty/soloud/src/tools/resamplerlab/main.cpp	30;"	d	file:
MAX_REGS	thirdparty/soloud/include/soloud/soloud_vic.h	/^			MAX_REGS$/;"	e	enum:SoLoud::Vic::__anon188
MAX_RESAMPLER	thirdparty/soloud/src/tools/resamplerlab/main.cpp	31;"	d	file:
MAX_THREADPOOL_TASKS	thirdparty/soloud/include/soloud/soloud_thread.h	50;"	d
MEMORY_INCLUDED_F78EEBC6_56DC_4B4A_8BEC_2E616E0F02AD	lib/lib/include/lib/memory.hpp	14;"	d
MESA_swap_control	thirdparty/glfw/src/glx_context.h	/^    GLFWbool        MESA_swap_control;$/;"	m	struct:_GLFWlibraryGLX
MESH	lib/lib/include/lib/memory.hpp	/^  MESH,$/;"	e	enum:LIB_NS_NAME::mem::tag::ENUM
MESH_INCLUDED_900EC7E8_4846_4CC9_8D4E_CC3CD8991D17	lib/roa/include/roa/mesh.hpp	2;"	d
MESH_INCLUDED_B8540088_3107_4C5A_A8B8_36D182202C3E	lib/nil/include/nil/resource/mesh.hpp	2;"	d
MESH_INCLUDED_DE6D03E1_2A27_49AC_962F_7442413F5396	lib/nil/src/internal_data/resources/mesh_data.hpp	2;"	d
MESH_RENDERER	lib/roa/include/roa/shader_type.hpp	/^  MESH_RENDERER,$/;"	m	class:ROA::Shader_type
META	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	Z					: 90,$/;"	p	class:namespace.Codes
MIN	thirdparty/soloud/src/core/soloud_core_3d.cpp	136;"	d	file:
MISC_INCLUDED_F161A14F_DB99_49FD_82A1_58EF2B4F889E	lib/math/include/math/geometry/misc.hpp	2;"	d
MODE	thirdparty/imguizmo/include/imguizmo/ImGuizmo.h	/^	enum MODE$/;"	g	namespace:ImGuizmo
MODEL_ALLOC	lib/lib/include/lib/model.hpp	20;"	d
MODEL_FREE	lib/lib/include/lib/model.hpp	24;"	d
MODEL_IMPL_INCLUDED_1F2E5258_471F_44A5_A74C_5738F155EA61	lib/lib/include/lib/model.hpp	97;"	d
MODEL_INCLUDED_1B02EBE3_255C_4436_9D68_3CCA6A3C58F2	lib/nil/include/nil/resource/load.hpp	2;"	d
MODEL_INCLUDED_30A27033_9719_4303_9004_F3940B34E3BC	lib/roa/include/roa/model.hpp	2;"	d
MODEL_INCLUDED_96BD3307_4311_4351_9AC5_524CB08EC60E	lib/lib/include/lib/model.hpp	9;"	d
MONOTONE_H	thirdparty/soloud/include/soloud/soloud_monotone.h	26;"	d
MONOTONE_SAW	thirdparty/soloud/include/soloud/soloud_c.h	/^	MONOTONE_SAW = 1,$/;"	e	enum:SOLOUD_ENUMS
MONOTONE_SAWSIN	thirdparty/soloud/include/soloud/soloud_c.h	/^	MONOTONE_SAWSIN = 3$/;"	e	enum:SOLOUD_ENUMS
MONOTONE_SIN	thirdparty/soloud/include/soloud/soloud_c.h	/^	MONOTONE_SIN = 2,$/;"	e	enum:SOLOUD_ENUMS
MONOTONE_SQUARE	thirdparty/soloud/include/soloud/soloud_c.h	/^	MONOTONE_SQUARE = 0,$/;"	e	enum:SOLOUD_ENUMS
MONOTONE_WAVEFORMS	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		enum MONOTONE_WAVEFORMS$/;"	g	class:SoLoud::Monotone
MOTIF_WM_HINTS	thirdparty/glfw/src/x11_platform.h	/^    Atom            MOTIF_WM_HINTS;$/;"	m	struct:_GLFWlibraryX11
MOUSE_INCLUDED_6C9B02A6_2E62_4821_9295_5A6EAB3DEB22	lib/roa/include/roa/mouse.hpp	2;"	d
MOUSE_INCLUDED_748856B2_7A08_493A_B2EE_D1CFC21A9B6F	lib/nil/include/nil/data/mouse.hpp	2;"	d
MOVETYPE	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   enum MOVETYPE$/;"	g	namespace:ImGuizmo	file:
MOVE_SCREEN	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      MOVE_SCREEN,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
MOVE_X	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      MOVE_X,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
MOVE_XY	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      MOVE_XY,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
MOVE_XZ	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      MOVE_XZ,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
MOVE_Y	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      MOVE_Y,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
MOVE_YZ	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      MOVE_YZ,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
MOVE_Z	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      MOVE_Z,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
MSGFLT_ALLOW	thirdparty/glfw/src/win32_platform.h	113;"	d
MULTICOLOR	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	24;"	d	file:
MULTIPLE	thirdparty/glfw/src/x11_platform.h	/^    Atom            MULTIPLE;$/;"	m	struct:_GLFWlibraryX11
MVK_macos_surface	thirdparty/glfw/src/internal.h	/^        GLFWbool        MVK_macos_surface;$/;"	m	struct:_GLFWlibrary::__anon165
M_PI	thirdparty/soloud/include/soloud/soloud.h	32;"	d
M_PI	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	18;"	d	file:
M_PI	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1003;"	d	file:
M_PI	thirdparty/soloud/src/tools/resamplerlab/main.cpp	38;"	d	file:
M_PI	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	16;"	d	file:
M_PI	thirdparty/stb/include/stb/stb_vorbis.c	1002;"	d	file:
M_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule M_rules[] =$/;"	v	file:
MakeCurrent	thirdparty/glfw/src/egl_context.h	/^    PFN_eglMakeCurrent          MakeCurrent;$/;"	m	struct:_GLFWlibraryEGL
MakeCurrent	thirdparty/glfw/src/glx_context.h	/^    PFNGLXMAKECURRENTPROC               MakeCurrent;$/;"	m	struct:_GLFWlibraryGLX
MakeCurrent	thirdparty/glfw/src/osmesa_context.h	/^    PFN_OSMesaMakeCurrent           MakeCurrent;$/;"	m	struct:_GLFWlibraryOSMesa
MakeCurrent	thirdparty/glfw/src/wgl_context.h	/^    PFN_wglMakeCurrent                  MakeCurrent;$/;"	m	struct:_GLFWlibraryWGL
Manipulate	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   void Manipulate(const float *view, const float *projection, OPERATION operation, MODE mode, float *matrix, float *deltaMatrix, float *snap, float *localBounds, float *boundsSnap)$/;"	f	namespace:ImGuizmo
MapCUDAResult	thirdparty/remotery/src/Remotery.c	/^static rmtError MapCUDAResult(CUresult result)$/;"	f	file:
Mapping	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} Mapping;$/;"	t	typeref:struct:__anon209	file:
Mapping	thirdparty/stb/include/stb/stb_vorbis.c	/^} Mapping;$/;"	t	typeref:struct:__anon122	file:
MappingChannel	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} MappingChannel;$/;"	t	typeref:struct:__anon208	file:
MappingChannel	thirdparty/stb/include/stb/stb_vorbis.c	/^} MappingChannel;$/;"	t	typeref:struct:__anon121	file:
MarkIniSettingsDirty	thirdparty/imgui/src/imgui.cpp	/^static void MarkIniSettingsDirty()$/;"	f	file:
Matcher	thirdparty/catch/include/catch/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	thirdparty/catch/include/catch/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
Matchers	thirdparty/catch/include/catch/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Material	lib/roa/src/interface/material.cpp	/^Material::Material()$/;"	f	class:ROA::Material
Math_general_test_data	lib/math/test/unit/general.cpp	/^struct Math_general_test_data$/;"	s	namespace:__anon49	file:
Max	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2      Max;    \/\/ Lower-right$/;"	m	struct:ImRect
MemAlloc	thirdparty/imgui/src/imgui.cpp	/^void* ImGui::MemAlloc(size_t sz)$/;"	f	class:ImGui
MemAllocFn	thirdparty/imgui/include/imgui/imgui.h	/^    void*       (*MemAllocFn)(size_t sz);$/;"	m	struct:ImGuiIO
MemFree	thirdparty/imgui/src/imgui.cpp	/^void ImGui::MemFree(void* ptr)$/;"	f	class:ImGui
MemFreeFn	thirdparty/imgui/include/imgui/imgui.h	/^    void        (*MemFreeFn)(void* ptr);$/;"	m	struct:ImGuiIO
MemoryFile	thirdparty/soloud/include/soloud/soloud_file.h	/^	class MemoryFile : public File$/;"	c	namespace:SoLoud
MemoryFile	thirdparty/soloud/src/core/soloud_file.cpp	/^	MemoryFile::MemoryFile()$/;"	f	class:SoLoud::MemoryFile
MemoryHandler	thirdparty/soloud/src/tools/tedsid2dump/mem.h	/^class MemoryHandler {$/;"	c
MenuBarAppending	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    MenuBarAppending;$/;"	m	struct:ImGuiDrawContext
MenuBarHeight	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       MenuBarHeight() const                   { return (Flags & ImGuiWindowFlags_MenuBar) ? CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f : 0.0f; }$/;"	f	struct:ImGuiWindow
MenuBarOffsetX	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   MenuBarOffsetX;$/;"	m	struct:ImGuiDrawContext
MenuBarRect	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImRect      MenuBarRect() const                     { float y1 = Pos.y + TitleBarHeight(); return ImRect(Pos.x, y1, Pos.x + SizeFull.x, y1 + MenuBarHeight()); }$/;"	f	struct:ImGuiWindow
MenuColumns	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiSimpleColumns      MenuColumns;                        \/\/ Simplified columns storage for menu items$/;"	m	struct:ImGuiWindow
MenuItem	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::MenuItem(const char* label, const char* shortcut, bool selected, bool enabled)$/;"	f	class:ImGui
MenuItem	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::MenuItem(const char* label, const char* shortcut, bool* p_selected, bool enabled)$/;"	f	class:ImGui
MergeGlyphCenterV	thirdparty/imgui/include/imgui/imgui.h	/^    bool            MergeGlyphCenterV;          \/\/ false    \/\/ When merging (multiple ImFontInput for one ImFont), vertically center new glyphs instead of aligning their baseline$/;"	m	struct:ImFontConfig
MergeMode	thirdparty/imgui/include/imgui/imgui.h	/^    bool            MergeMode;                  \/\/ false    \/\/ Merge into previous ImFont, so you can combine multiple inputs font into one ImFont (e.g. ASCII font + icons + Japanese glyphs).$/;"	m	struct:ImFontConfig
Mesh	lib/roa/src/interface/mesh.cpp	/^Mesh::Mesh()$/;"	f	class:ROA::Mesh
Message	thirdparty/remotery/src/Remotery.c	/^typedef struct Message$/;"	s	file:
Message	thirdparty/remotery/src/Remotery.c	/^} Message;$/;"	t	typeref:struct:Message	file:
MessageID	thirdparty/remotery/src/Remotery.c	/^typedef enum MessageID$/;"	g	file:
MessageID	thirdparty/remotery/src/Remotery.c	/^} MessageID;$/;"	t	typeref:enum:MessageID	file:
Metal	thirdparty/remotery/src/Remotery.c	/^typedef struct Metal_t Metal;$/;"	t	typeref:struct:Metal_t	file:
MetalSample	thirdparty/remotery/src/Remotery.c	/^typedef struct MetalSample$/;"	s	file:
MetalSample	thirdparty/remotery/src/Remotery.c	/^} MetalSample;$/;"	t	typeref:struct:MetalSample	file:
MetalSample_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError MetalSample_Constructor(MetalSample* sample)$/;"	f	file:
MetalSample_Destructor	thirdparty/remotery/src/Remotery.c	/^static void MetalSample_Destructor(MetalSample* sample)$/;"	f	file:
MetalTimestamp	thirdparty/remotery/src/Remotery.c	/^typedef struct MetalTimestamp$/;"	s	file:
MetalTimestamp	thirdparty/remotery/src/Remotery.c	/^} MetalTimestamp;$/;"	t	typeref:struct:MetalTimestamp	file:
MetalTimestamp_Begin	thirdparty/remotery/src/Remotery.c	/^static void MetalTimestamp_Begin(MetalTimestamp* stamp)$/;"	f	file:
MetalTimestamp_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError MetalTimestamp_Constructor(MetalTimestamp* stamp)$/;"	f	file:
MetalTimestamp_Destructor	thirdparty/remotery/src/Remotery.c	/^static void MetalTimestamp_Destructor(MetalTimestamp* stamp)$/;"	f	file:
MetalTimestamp_End	thirdparty/remotery/src/Remotery.c	/^static void MetalTimestamp_End(MetalTimestamp* stamp)$/;"	f	file:
MetalTimestamp_GetData	thirdparty/remotery/src/Remotery.c	/^static rmtBool MetalTimestamp_GetData(MetalTimestamp* stamp, rmtU64* out_start, rmtU64* out_end)$/;"	f	file:
Metal_Create	thirdparty/remotery/src/Remotery.c	/^static rmtError Metal_Create(Metal** metal)$/;"	f	file:
Metal_Destructor	thirdparty/remotery/src/Remotery.c	/^static void Metal_Destructor(Metal* metal)$/;"	f	file:
Metal_t	thirdparty/remotery/src/Remotery.c	/^struct Metal_t$/;"	s	file:
Method	thirdparty/soloud/src/tools/codegen/main.cpp	/^struct Method$/;"	s	file:
MethodTestCase	thirdparty/catch/include/catch/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	thirdparty/catch/include/catch/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MetricsActiveWindows	thirdparty/imgui/include/imgui/imgui.h	/^    int         MetricsActiveWindows;       \/\/ Number of visible root windows (exclude child windows)$/;"	m	struct:ImGuiIO
MetricsAllocs	thirdparty/imgui/include/imgui/imgui.h	/^    int         MetricsAllocs;              \/\/ Number of active memory allocations$/;"	m	struct:ImGuiIO
MetricsRenderIndices	thirdparty/imgui/include/imgui/imgui.h	/^    int         MetricsRenderIndices;       \/\/ Indices output during last call to Render() = number of triangles * 3$/;"	m	struct:ImGuiIO
MetricsRenderVertices	thirdparty/imgui/include/imgui/imgui.h	/^    int         MetricsRenderVertices;      \/\/ Vertices output during last call to Render()$/;"	m	struct:ImGuiIO
MetricsTotalSurface	thirdparty/imgui/include/imgui/imgui.h	/^    int                         MetricsTotalSurface;\/\/              \/\/ Total surface in pixels to get an idea of the font rasterization\/texture cost (not exact, we approximate the cost of padding between glyphs)$/;"	m	struct:ImFont
Min	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2      Min;    \/\/ Upper-left$/;"	m	struct:ImRect
ModalWindowDarkeningRatio	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   ModalWindowDarkeningRatio;$/;"	m	struct:ImGuiContext
Mode	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} Mode;$/;"	t	typeref:struct:__anon210	file:
Mode	thirdparty/stb/include/stb/stb_vorbis.c	/^} Mode;$/;"	t	typeref:struct:__anon123	file:
Model	lib/roa/include/roa/model.hpp	/^namespace Model {$/;"	n	namespace:ROA
Model	lib/roa/src/interface/model_scene.cpp	/^namespace Model {$/;"	n	namespace:ROA	file:
Monotone	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * Monotone;$/;"	t
Monotone	thirdparty/soloud/include/soloud/soloud_monotone.h	/^	class Monotone : public AudioSource$/;"	c	namespace:SoLoud
Monotone	thirdparty/soloud/src/audiosource/monotone/soloud_monotone.cpp	/^	Monotone::Monotone()$/;"	f	class:SoLoud::Monotone
MonotoneChannel	thirdparty/soloud/include/soloud/soloud_monotone.h	/^	struct MonotoneChannel$/;"	s	namespace:SoLoud
MonotoneHardwareChannel	thirdparty/soloud/include/soloud/soloud_monotone.h	/^	struct MonotoneHardwareChannel$/;"	s	namespace:SoLoud
MonotoneInstance	thirdparty/soloud/include/soloud/soloud_monotone.h	/^	class MonotoneInstance : public AudioSourceInstance$/;"	c	namespace:SoLoud
MonotoneInstance	thirdparty/soloud/src/audiosource/monotone/soloud_monotone.cpp	/^	MonotoneInstance::MonotoneInstance(Monotone *aParent)$/;"	f	class:SoLoud::MonotoneInstance
MonotoneSong	thirdparty/soloud/include/soloud/soloud_monotone.h	/^	struct MonotoneSong$/;"	s	namespace:SoLoud
Monotone_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * Monotone_create()$/;"	f
Monotone_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_destroy(void * aClassPtr)$/;"	f
Monotone_load	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Monotone_load(void * aClassPtr, const char * aFilename)$/;"	f
Monotone_loadFile	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Monotone_loadFile(void * aClassPtr, File * aFile)$/;"	f
Monotone_loadMem	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Monotone_loadMem(void * aClassPtr, unsigned char * aMem, unsigned int aLength)$/;"	f
Monotone_loadMemEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Monotone_loadMemEx(void * aClassPtr, unsigned char * aMem, unsigned int aLength, int aCopy, int aTakeOwnership)$/;"	f
Monotone_set3dAttenuation	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_set3dAttenuation(void * aClassPtr, unsigned int aAttenuationModel, float aAttenuationRolloffFactor)$/;"	f
Monotone_set3dAttenuator	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_set3dAttenuator(void * aClassPtr, AudioAttenuator * aAttenuator)$/;"	f
Monotone_set3dCollider	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_set3dCollider(void * aClassPtr, AudioCollider * aCollider)$/;"	f
Monotone_set3dColliderEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_set3dColliderEx(void * aClassPtr, AudioCollider * aCollider, int aUserData)$/;"	f
Monotone_set3dDistanceDelay	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_set3dDistanceDelay(void * aClassPtr, int aDistanceDelay)$/;"	f
Monotone_set3dDopplerFactor	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_set3dDopplerFactor(void * aClassPtr, float aDopplerFactor)$/;"	f
Monotone_set3dListenerRelative	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_set3dListenerRelative(void * aClassPtr, int aListenerRelative)$/;"	f
Monotone_set3dMinMaxDistance	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_set3dMinMaxDistance(void * aClassPtr, float aMinDistance, float aMaxDistance)$/;"	f
Monotone_set3dProcessing	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_set3dProcessing(void * aClassPtr, int aDo3dProcessing)$/;"	f
Monotone_setFilter	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_setFilter(void * aClassPtr, unsigned int aFilterId, Filter * aFilter)$/;"	f
Monotone_setInaudibleBehavior	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_setInaudibleBehavior(void * aClassPtr, int aMustTick, int aKill)$/;"	f
Monotone_setLooping	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_setLooping(void * aClassPtr, int aLoop)$/;"	f
Monotone_setParams	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Monotone_setParams(void * aClassPtr, int aHardwareChannels)$/;"	f
Monotone_setParamsEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Monotone_setParamsEx(void * aClassPtr, int aHardwareChannels, int aWaveform)$/;"	f
Monotone_setVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_setVolume(void * aClassPtr, float aVolume)$/;"	f
Monotone_stop	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Monotone_stop(void * aClassPtr)$/;"	f
Mouse	lib/nil/include/nil/data/mouse.hpp	/^struct Mouse$/;"	s	namespace:Nil::Data
Mouse	lib/roa/include/roa/mouse.hpp	/^namespace Mouse {$/;"	n	namespace:ROA
Mouse	lib/roa/src/interface/mouse.cpp	/^namespace Mouse {$/;"	n	namespace:ROA	file:
Mouse.ExitPointerLock	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Mouse.js	/^}$/;"	f
Mouse.PointerLockElement	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Mouse.js	/^}$/;"	f
Mouse.PointerLockSupported	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Mouse.js	/^})();$/;"	f
Mouse.RequestPointerLock	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Mouse.js	/^}$/;"	f
MouseClicked	thirdparty/imgui/include/imgui/imgui.h	/^    bool        MouseClicked[5];            \/\/ Mouse button went from !Down to Down$/;"	m	struct:ImGuiIO
MouseClickedPos	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      MouseClickedPos[5];         \/\/ Position at time of clicking$/;"	m	struct:ImGuiIO
MouseClickedTime	thirdparty/imgui/include/imgui/imgui.h	/^    float       MouseClickedTime[5];        \/\/ Time of last click (used to figure out double-click)$/;"	m	struct:ImGuiIO
MouseCursor	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiMouseCursor        MouseCursor;$/;"	m	struct:ImGuiContext
MouseCursorData	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiMouseCursorData    MouseCursorData[ImGuiMouseCursor_Count_];$/;"	m	struct:ImGuiContext
MouseDelta	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      MouseDelta;                 \/\/ Mouse delta. Note that this is zero if either current or previous position are negative, so a disappearing\/reappearing mouse won't have a huge delta for one frame.$/;"	m	struct:ImGuiIO
MouseDoubleClickMaxDist	thirdparty/imgui/include/imgui/imgui.h	/^    float         MouseDoubleClickMaxDist;  \/\/ = 6.0f               \/\/ Distance threshold to stay in to validate a double-click, in pixels.$/;"	m	struct:ImGuiIO
MouseDoubleClickTime	thirdparty/imgui/include/imgui/imgui.h	/^    float         MouseDoubleClickTime;     \/\/ = 0.30f              \/\/ Time for a double-click, in seconds.$/;"	m	struct:ImGuiIO
MouseDoubleClicked	thirdparty/imgui/include/imgui/imgui.h	/^    bool        MouseDoubleClicked[5];      \/\/ Has mouse button been double-clicked?$/;"	m	struct:ImGuiIO
MouseDown	thirdparty/imgui/include/imgui/imgui.h	/^    bool        MouseDown[5];               \/\/ Mouse buttons: left, right, middle + extras. ImGui itself mostly only uses left button (BeginPopupContext** are using right button). Others buttons allows us to track if the mouse is being used by your application + available to user as a convenience via IsMouse** API.$/;"	m	struct:ImGuiIO
MouseDownDuration	thirdparty/imgui/include/imgui/imgui.h	/^    float       MouseDownDuration[5];       \/\/ Duration the mouse button has been down (0.0f == just clicked)$/;"	m	struct:ImGuiIO
MouseDownDurationPrev	thirdparty/imgui/include/imgui/imgui.h	/^    float       MouseDownDurationPrev[5];   \/\/ Previous time the mouse button has been down$/;"	m	struct:ImGuiIO
MouseDownOwned	thirdparty/imgui/include/imgui/imgui.h	/^    bool        MouseDownOwned[5];          \/\/ Track if button was clicked inside a window. We don't request mouse capture from the application if click started outside ImGui bounds.$/;"	m	struct:ImGuiIO
MouseDragMaxDistanceSqr	thirdparty/imgui/include/imgui/imgui.h	/^    float       MouseDragMaxDistanceSqr[5]; \/\/ Squared maximum distance of how much mouse has traveled from the click point$/;"	m	struct:ImGuiIO
MouseDragThreshold	thirdparty/imgui/include/imgui/imgui.h	/^    float         MouseDragThreshold;       \/\/ = 6.0f               \/\/ Distance threshold before considering we are dragging$/;"	m	struct:ImGuiIO
MouseDrawCursor	thirdparty/imgui/include/imgui/imgui.h	/^    bool        MouseDrawCursor;            \/\/ Request ImGui to draw a mouse cursor for you (if you are on a platform without a mouse cursor).$/;"	m	struct:ImGuiIO
MousePos	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      MousePos;                   \/\/ Mouse position, in pixels (set to -1,-1 if no mouse \/ on another screen, etc.)$/;"	m	struct:ImGuiIO
MousePosOnOpen	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2          MousePosOnOpen; \/\/ Copy of mouse position at the time of opening popup$/;"	m	struct:ImGuiPopupRef
MousePosPrev	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      MousePosPrev;               \/\/ Previous mouse position temporary storage (nb: not for public use, set to MousePos in NewFrame())$/;"	m	struct:ImGuiIO
MouseReleased	thirdparty/imgui/include/imgui/imgui.h	/^    bool        MouseReleased[5];           \/\/ Mouse button went from Down to !Down$/;"	m	struct:ImGuiIO
MouseWheel	thirdparty/imgui/include/imgui/imgui.h	/^    float       MouseWheel;                 \/\/ Mouse wheel: 1 unit scrolls about 5 lines text.$/;"	m	struct:ImGuiIO
MoveId	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID                 MoveId;                             \/\/ == window->GetID("#MOVE")$/;"	m	struct:ImGuiWindow
MovedWindow	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiWindow*            MovedWindow;                        \/\/ Track the child window we clicked on to move a window.$/;"	m	struct:ImGuiContext
MovedWindowMoveId	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID                 MovedWindowMoveId;                  \/\/ == MovedWindow->RootWindow->MoveId$/;"	m	struct:ImGuiContext
MsgID_LogText	thirdparty/remotery/src/Remotery.c	/^    MsgID_LogText,$/;"	e	enum:MessageID	file:
MsgID_NotReady	thirdparty/remotery/src/Remotery.c	/^    MsgID_NotReady,$/;"	e	enum:MessageID	file:
MsgID_SampleTree	thirdparty/remotery/src/Remotery.c	/^    MsgID_SampleTree,$/;"	e	enum:MessageID	file:
Msg_SampleTree	thirdparty/remotery/src/Remotery.c	/^typedef struct Msg_SampleTree$/;"	s	file:
Msg_SampleTree	thirdparty/remotery/src/Remotery.c	/^} Msg_SampleTree;$/;"	t	typeref:struct:Msg_SampleTree	file:
Multiply	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void Multiply(const matrix_t &m1, const matrix_t &m2)$/;"	f	struct:ImGuizmo::matrix_t
Multiply	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void Multiply(const matrix_t &matrix)$/;"	f	struct:ImGuizmo::matrix_t
MurmurHash3_x86_32	thirdparty/remotery/src/Remotery.c	/^static rmtU32 MurmurHash3_x86_32(const void* key, int len, rmtU32 seed)$/;"	f	file:
N	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	M					: 77,$/;"	p	class:namespace.Codes
NAU_INCLUDED_38EB9B7F_8D78_411D_8EF1_E08A411AC701	lib/nau/include/nau/nau.h	2;"	d
NEAREST	lib/roa/include/roa/ray.hpp	/^  NEAREST,$/;"	m	class:ROA::Ray_search
NET_ACTIVE_WINDOW	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_ACTIVE_WINDOW;$/;"	m	struct:_GLFWlibraryX11
NET_FRAME_EXTENTS	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_FRAME_EXTENTS;$/;"	m	struct:_GLFWlibraryX11
NET_REQUEST_FRAME_EXTENTS	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_REQUEST_FRAME_EXTENTS;$/;"	m	struct:_GLFWlibraryX11
NET_WM_BYPASS_COMPOSITOR	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_BYPASS_COMPOSITOR;$/;"	m	struct:_GLFWlibraryX11
NET_WM_FULLSCREEN_MONITORS	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_FULLSCREEN_MONITORS;$/;"	m	struct:_GLFWlibraryX11
NET_WM_ICON	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_ICON;$/;"	m	struct:_GLFWlibraryX11
NET_WM_ICON_NAME	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_ICON_NAME;$/;"	m	struct:_GLFWlibraryX11
NET_WM_NAME	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_NAME;$/;"	m	struct:_GLFWlibraryX11
NET_WM_PID	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_PID;$/;"	m	struct:_GLFWlibraryX11
NET_WM_PING	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_PING;$/;"	m	struct:_GLFWlibraryX11
NET_WM_STATE	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_STATE;$/;"	m	struct:_GLFWlibraryX11
NET_WM_STATE_ABOVE	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_STATE_ABOVE;$/;"	m	struct:_GLFWlibraryX11
NET_WM_STATE_DEMANDS_ATTENTION	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_STATE_DEMANDS_ATTENTION;$/;"	m	struct:_GLFWlibraryX11
NET_WM_STATE_FULLSCREEN	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_STATE_FULLSCREEN;$/;"	m	struct:_GLFWlibraryX11
NET_WM_STATE_MAXIMIZED_HORZ	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_STATE_MAXIMIZED_HORZ;$/;"	m	struct:_GLFWlibraryX11
NET_WM_STATE_MAXIMIZED_VERT	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_STATE_MAXIMIZED_VERT;$/;"	m	struct:_GLFWlibraryX11
NET_WM_WINDOW_TYPE	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_WINDOW_TYPE;$/;"	m	struct:_GLFWlibraryX11
NET_WM_WINDOW_TYPE_NORMAL	thirdparty/glfw/src/x11_platform.h	/^    Atom            NET_WM_WINDOW_TYPE_NORMAL;$/;"	m	struct:_GLFWlibraryX11
NEXTTOKEN	thirdparty/soloud/src/tools/codegen/main.cpp	197;"	d	file:
NIL_AUDIO_SRC_SAMPLE	lib/nil/include/nil/fwd.hpp	/^  NIL_AUDIO_SRC_SAMPLE,$/;"	e	enum:__anon19
NIL_AUDIO_SRC_SONG	lib/nil/include/nil/fwd.hpp	/^  NIL_AUDIO_SRC_SONG,$/;"	e	enum:__anon19
NIL_BOOL	lib/nil/include/nil/fwd.hpp	/^typedef int NIL_BOOL;$/;"	t
NIL_CLEANUP_ON_EXIT	lib/nil/src/interface/nil.cpp	25;"	d	file:
NIL_COMMON_INCLUDED_3567BECD_5592_4853_8C6F_0732D54CE325	lib/nil/src/common/common.hpp	2;"	d
NIL_CPU_TASK_EARLY_THINK	lib/nil/include/nil/fwd.hpp	/^  NIL_CPU_TASK_EARLY_THINK,$/;"	e	enum:__anon17
NIL_CPU_TASK_LATE_THINK	lib/nil/include/nil/fwd.hpp	/^  NIL_CPU_TASK_LATE_THINK,$/;"	e	enum:__anon17
NIL_CPU_TASK_THINK	lib/nil/include/nil/fwd.hpp	/^  NIL_CPU_TASK_THINK,$/;"	e	enum:__anon17
NIL_DATA_FILENAME	lib/nil/include/nil/fwd.hpp	/^  NIL_DATA_FILENAME,$/;"	e	enum:__anon20
NIL_DATA_GETTER_ERROR	lib/nil/src/interface/data/common.hpp	21;"	d
NIL_DATA_GETTER_SETTER_HAS_SETUP	lib/nil/src/interface/data/common.hpp	16;"	d
NIL_DATA_LOCAL	lib/nil/include/nil/fwd.hpp	/^  NIL_DATA_LOCAL,$/;"	e	enum:__anon20
NIL_DATA_RAW	lib/nil/include/nil/fwd.hpp	/^  NIL_DATA_RAW,$/;"	e	enum:__anon20
NIL_DATA_SETTER_ERROR	lib/nil/src/interface/data/common.hpp	24;"	d
NIL_FALSE	lib/nil/include/nil/fwd.hpp	142;"	d
NIL_GPU_TASK_POST_RENDER	lib/nil/include/nil/fwd.hpp	/^  NIL_GPU_TASK_POST_RENDER,$/;"	e	enum:__anon18
NIL_GPU_TASK_PRE_RENDER	lib/nil/include/nil/fwd.hpp	/^  NIL_GPU_TASK_PRE_RENDER,$/;"	e	enum:__anon18
NIL_GPU_TASK_RENDER	lib/nil/include/nil/fwd.hpp	/^  NIL_GPU_TASK_RENDER,$/;"	e	enum:__anon18
NIL_GRAPH_TRANSFORM_STACK_HINT	lib/nil/src/graph/graph.cpp	1081;"	d	file:
NIL_GRAPH_TRANSFORM_STACK_HINT	lib/nil/src/graph/graph.cpp	18;"	d	file:
NIL_INCLUDED_AF3E5C57_06A2_419B_A843_2745F0D6F2D0	lib/nil/include/nil/nil.hpp	2;"	d
NIL_MAX_ASPECT_COUNT	lib/nil/src/internal_data/internal_data.hpp	15;"	d
NIL_MAX_CPU_TASK_QUEUE	lib/nil/src/internal_data/internal_data.hpp	19;"	d
NIL_MAX_GPU_TASK_QUEUE	lib/nil/src/internal_data/internal_data.hpp	23;"	d
NIL_MAX_NODE_NAME_LENGTH	lib/nil/src/graph/graph_data.hpp	16;"	d
NIL_MAX_NODE_NAME_LENGTH	lib/nil/src/graph/graph_data.hpp	97;"	d
NIL_MAX_TAG_NAME_LENGTH	lib/nil/src/interface/node.cpp	13;"	d	file:
NIL_MAX_TAG_NAME_LENGTH	lib/nil/src/interface/node.cpp	687;"	d	file:
NIL_RSRC_STATUS_ERROR	lib/nil/include/nil/fwd.hpp	/^  NIL_RSRC_STATUS_ERROR$/;"	e	enum:__anon15
NIL_RSRC_STATUS_FAILED	lib/nil/include/nil/fwd.hpp	/^  NIL_RSRC_STATUS_FAILED,$/;"	e	enum:__anon15
NIL_RSRC_STATUS_LOADED	lib/nil/include/nil/fwd.hpp	/^  NIL_RSRC_STATUS_LOADED,$/;"	e	enum:__anon15
NIL_RSRC_STATUS_NONE	lib/nil/include/nil/fwd.hpp	/^  NIL_RSRC_STATUS_NONE,$/;"	e	enum:__anon15
NIL_RSRC_STATUS_PENDING	lib/nil/include/nil/fwd.hpp	/^  NIL_RSRC_STATUS_PENDING,$/;"	e	enum:__anon15
NIL_SHD_LINE_RENDERER_01	lib/nil/include/nil/fwd.hpp	/^  NIL_SHD_LINE_RENDERER_01,$/;"	e	enum:__anon16
NIL_SHD_MESH_RENDERER_01	lib/nil/include/nil/fwd.hpp	/^  NIL_SHD_MESH_RENDERER_01,$/;"	e	enum:__anon16
NIL_SHD_NONE	lib/nil/include/nil/fwd.hpp	/^  NIL_SHD_NONE,$/;"	e	enum:__anon16
NIL_SHD_PAINT_RENDERER_01	lib/nil/include/nil/fwd.hpp	/^  NIL_SHD_PAINT_RENDERER_01,$/;"	e	enum:__anon16
NIL_TRUE	lib/nil/include/nil/fwd.hpp	141;"	d
NINE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	EIGHT				: 56,$/;"	p	class:namespace.Codes
NK_ABS	thirdparty/glfw/src/deps/nuklear.h	2999;"	d
NK_ADJACENCY_BONUS	thirdparty/glfw/src/deps/nuklear.h	3714;"	d
NK_ALIGNOF	thirdparty/glfw/src/deps/nuklear.h	3054;"	d
NK_ALIGNOF	thirdparty/glfw/src/deps/nuklear.h	3056;"	d
NK_ALIGNOF	thirdparty/glfw/src/deps/nuklear.h	3058;"	d
NK_ALIGN_PTR	thirdparty/glfw/src/deps/nuklear.h	3035;"	d
NK_ALIGN_PTR_BACK	thirdparty/glfw/src/deps/nuklear.h	3037;"	d
NK_ANTI_ALIASING_OFF	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_anti_aliasing   {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	e	enum:nk_anti_aliasing
NK_ANTI_ALIASING_ON	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_anti_aliasing   {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	e	enum:nk_anti_aliasing
NK_API	thirdparty/glfw/src/deps/nuklear.h	276;"	d
NK_API	thirdparty/glfw/src/deps/nuklear.h	278;"	d
NK_API	thirdparty/glfw/src/deps/nuklear.h	280;"	d
NK_API	thirdparty/glfw/src/deps/nuklear.h	283;"	d
NK_ASSERT	thirdparty/glfw/src/deps/nuklear.h	3095;"	d
NK_BETWEEN	thirdparty/glfw/src/deps/nuklear.h	3000;"	d
NK_BUFFER_BACK	thirdparty/glfw/src/deps/nuklear.h	/^    NK_BUFFER_BACK,$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_DEFAULT_INITIAL_SIZE	thirdparty/glfw/src/deps/nuklear.h	3080;"	d
NK_BUFFER_DYNAMIC	thirdparty/glfw/src/deps/nuklear.h	/^    NK_BUFFER_DYNAMIC$/;"	e	enum:nk_allocation_type
NK_BUFFER_FIXED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_BUFFER_FIXED,$/;"	e	enum:nk_allocation_type
NK_BUFFER_FRONT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_BUFFER_FRONT,$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_MAX	thirdparty/glfw/src/deps/nuklear.h	/^    NK_BUFFER_MAX$/;"	e	enum:nk_buffer_allocation_type
NK_BUTTON_BEHAVIOR_STACK_SIZE	thirdparty/glfw/src/deps/nuklear.h	2841;"	d
NK_BUTTON_DEFAULT	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	e	enum:nk_button_behavior
NK_BUTTON_LEFT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_BUTTON_LEFT,$/;"	e	enum:nk_buttons
NK_BUTTON_MAX	thirdparty/glfw/src/deps/nuklear.h	/^    NK_BUTTON_MAX$/;"	e	enum:nk_buttons
NK_BUTTON_MIDDLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_BUTTON_MIDDLE,$/;"	e	enum:nk_buttons
NK_BUTTON_REPEATER	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	e	enum:nk_button_behavior
NK_BUTTON_RIGHT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_BUTTON_RIGHT,$/;"	e	enum:nk_buttons
NK_CAMEL_BONUS	thirdparty/glfw/src/deps/nuklear.h	3718;"	d
NK_CHART_CLICKED	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	e	enum:nk_chart_event
NK_CHART_COLUMN	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_HOVERING	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	e	enum:nk_chart_event
NK_CHART_LINES	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_MAX	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_MAX_SLOT	thirdparty/glfw/src/deps/nuklear.h	2634;"	d
NK_CLAMP	thirdparty/glfw/src/deps/nuklear.h	318;"	d
NK_CLIPPING_OFF	thirdparty/glfw/src/deps/nuklear.h	/^    NK_CLIPPING_OFF = nk_false,$/;"	e	enum:nk_command_clipping
NK_CLIPPING_ON	thirdparty/glfw/src/deps/nuklear.h	/^    NK_CLIPPING_ON = nk_true$/;"	e	enum:nk_command_clipping
NK_COLOR	thirdparty/glfw/src/deps/nuklear.h	15172;"	d
NK_COLOR	thirdparty/glfw/src/deps/nuklear.h	15174;"	d
NK_COLOR	thirdparty/glfw/src/deps/nuklear.h	15178;"	d
NK_COLOR	thirdparty/glfw/src/deps/nuklear.h	15180;"	d
NK_COLOR_BORDER	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_BORDER,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_BUTTON,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON_ACTIVE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_BUTTON_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON_HOVER	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_BUTTON_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_CHART,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART_COLOR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_CHART_COLOR,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART_COLOR_HIGHLIGHT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_CHART_COLOR_HIGHLIGHT,$/;"	e	enum:nk_style_colors
NK_COLOR_COMBO	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_COMBO,$/;"	e	enum:nk_style_colors
NK_COLOR_COUNT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_COUNT$/;"	e	enum:nk_style_colors
NK_COLOR_EDIT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_EDIT,$/;"	e	enum:nk_style_colors
NK_COLOR_EDIT_CURSOR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_EDIT_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_HEADER	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_HEADER,$/;"	e	enum:nk_style_colors
NK_COLOR_MAP	thirdparty/glfw/src/deps/nuklear.h	15140;"	d
NK_COLOR_PROPERTY	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_PROPERTY,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_SCROLLBAR,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR_ACTIVE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR_HOVER	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_SELECT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_SELECT,$/;"	e	enum:nk_style_colors
NK_COLOR_SELECT_ACTIVE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_SELECT_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_SLIDER,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR_ACTIVE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR_HOVER	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_STACK_SIZE	thirdparty/glfw/src/deps/nuklear.h	2865;"	d
NK_COLOR_TAB_HEADER	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_TAB_HEADER,$/;"	e	enum:nk_style_colors
NK_COLOR_TEXT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_TEXT,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_TOGGLE,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE_CURSOR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_TOGGLE_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE_HOVER	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_TOGGLE_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_WINDOW	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COLOR_WINDOW,$/;"	e	enum:nk_style_colors
NK_COMMAND_ARC	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_ARC,$/;"	e	enum:nk_command_type
NK_COMMAND_ARC_FILLED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_ARC_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_CIRCLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_CIRCLE,$/;"	e	enum:nk_command_type
NK_COMMAND_CIRCLE_FILLED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_CIRCLE_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_CURVE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_CURVE,$/;"	e	enum:nk_command_type
NK_COMMAND_IMAGE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_IMAGE$/;"	e	enum:nk_command_type
NK_COMMAND_LINE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_LINE,$/;"	e	enum:nk_command_type
NK_COMMAND_NOP	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_NOP,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYGON	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_POLYGON,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYGON_FILLED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_POLYGON_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYLINE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_POLYLINE,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_RECT,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT_FILLED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_RECT_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT_MULTI_COLOR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_RECT_MULTI_COLOR,$/;"	e	enum:nk_command_type
NK_COMMAND_SCISSOR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_SCISSOR,$/;"	e	enum:nk_command_type
NK_COMMAND_TEXT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_TEXT,$/;"	e	enum:nk_command_type
NK_COMMAND_TRIANGLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_TRIANGLE,$/;"	e	enum:nk_command_type
NK_COMMAND_TRIANGLE_FILLED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COMMAND_TRIANGLE_FILLED,$/;"	e	enum:nk_command_type
NK_CONFIGURATION_STACK_TYPE	thirdparty/glfw/src/deps/nuklear.h	2868;"	d
NK_CONFIG_STACK	thirdparty/glfw/src/deps/nuklear.h	2873;"	d
NK_CONTAINER_OF	thirdparty/glfw/src/deps/nuklear.h	3041;"	d
NK_CONTAINS	thirdparty/glfw/src/deps/nuklear.h	3005;"	d
NK_COORD_PIXEL	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COORD_PIXEL \/* texture coordinates inside font glyphs are in absolute pixel *\/$/;"	e	enum:nk_font_coord_type
NK_COORD_UV	thirdparty/glfw/src/deps/nuklear.h	/^    NK_COORD_UV, \/* texture coordinates inside font glyphs are clamped between 0-1 *\/$/;"	e	enum:nk_font_coord_type
NK_COS	thirdparty/glfw/src/deps/nuklear.h	3111;"	d
NK_CURSOR_ARROW	thirdparty/glfw/src/deps/nuklear.h	/^    NK_CURSOR_ARROW,$/;"	e	enum:nk_style_cursor
NK_CURSOR_COUNT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_CURSOR_COUNT$/;"	e	enum:nk_style_cursor
NK_CURSOR_DATA_H	thirdparty/glfw/src/deps/nuklear.h	10583;"	d
NK_CURSOR_DATA_W	thirdparty/glfw/src/deps/nuklear.h	10582;"	d
NK_CURSOR_MOVE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_CURSOR_MOVE,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_HORIZONTAL	thirdparty/glfw/src/deps/nuklear.h	/^    NK_CURSOR_RESIZE_HORIZONTAL,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_TOP_LEFT_DOWN_RIGHT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_CURSOR_RESIZE_TOP_LEFT_DOWN_RIGHT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_TOP_RIGHT_DOWN_LEFT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_CURSOR_RESIZE_TOP_RIGHT_DOWN_LEFT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_VERTICAL	thirdparty/glfw/src/deps/nuklear.h	/^    NK_CURSOR_RESIZE_VERTICAL,$/;"	e	enum:nk_style_cursor
NK_CURSOR_TEXT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_CURSOR_TEXT,$/;"	e	enum:nk_style_cursor
NK_DEFAULT	thirdparty/glfw/src/deps/nuklear.h	3120;"	d
NK_DEFAULT_COMMAND_BUFFER_SIZE	thirdparty/glfw/src/deps/nuklear.h	3076;"	d
NK_DOWN	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_DO_NOT_STOP_ON_NEW_LINE	thirdparty/glfw/src/deps/nuklear.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	e	enum:__anon172
NK_DTOA	thirdparty/glfw/src/deps/nuklear.h	3117;"	d
NK_DYNAMIC	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	e	enum:nk_layout_format
NK_EDIT_ACTIVATED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_ACTIVATED   = NK_FLAG(2), \/* edit widget went from state inactive to state active *\/$/;"	e	enum:nk_edit_events
NK_EDIT_ACTIVE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_ACTIVE      = NK_FLAG(0), \/* edit widget is currently being modified *\/$/;"	e	enum:nk_edit_events
NK_EDIT_ALLOW_TAB	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_ALLOW_TAB               = NK_FLAG(3),$/;"	e	enum:nk_edit_flags
NK_EDIT_ALWAYS_INSERT_MODE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_ALWAYS_INSERT_MODE      = NK_FLAG(9),$/;"	e	enum:nk_edit_flags
NK_EDIT_AUTO_SELECT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_AUTO_SELECT             = NK_FLAG(1),$/;"	e	enum:nk_edit_flags
NK_EDIT_BOX	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_BOX     = NK_EDIT_ALWAYS_INSERT_MODE| NK_EDIT_SELECTABLE| NK_EDIT_MULTILINE|NK_EDIT_ALLOW_TAB|NK_EDIT_CLIPBOARD,$/;"	e	enum:nk_edit_types
NK_EDIT_CLIPBOARD	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_CLIPBOARD               = NK_FLAG(6),$/;"	e	enum:nk_edit_flags
NK_EDIT_COMMITED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_COMMITED    = NK_FLAG(4) \/* edit widget has received an enter and lost focus *\/$/;"	e	enum:nk_edit_events
NK_EDIT_CTRL_ENTER_NEWLINE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_CTRL_ENTER_NEWLINE      = NK_FLAG(7),$/;"	e	enum:nk_edit_flags
NK_EDIT_DEACTIVATED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_DEACTIVATED = NK_FLAG(3), \/* edit widget went from state active to state inactive *\/$/;"	e	enum:nk_edit_events
NK_EDIT_DEFAULT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_DEFAULT                 = 0,$/;"	e	enum:nk_edit_flags
NK_EDIT_EDITOR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_EDITOR  = NK_EDIT_SELECTABLE|NK_EDIT_MULTILINE|NK_EDIT_ALLOW_TAB| NK_EDIT_CLIPBOARD$/;"	e	enum:nk_edit_types
NK_EDIT_FIELD	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_FIELD   = NK_EDIT_SIMPLE|NK_EDIT_SELECTABLE|NK_EDIT_CLIPBOARD,$/;"	e	enum:nk_edit_types
NK_EDIT_GOTO_END_ON_ACTIVATE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_GOTO_END_ON_ACTIVATE    = NK_FLAG(12)$/;"	e	enum:nk_edit_flags
NK_EDIT_INACTIVE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_INACTIVE    = NK_FLAG(1), \/* edit widget is not active and is not being modified *\/$/;"	e	enum:nk_edit_events
NK_EDIT_MULTILINE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_MULTILINE               = NK_FLAG(11),$/;"	e	enum:nk_edit_flags
NK_EDIT_NO_CURSOR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_NO_CURSOR               = NK_FLAG(4),$/;"	e	enum:nk_edit_flags
NK_EDIT_NO_HORIZONTAL_SCROLL	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_NO_HORIZONTAL_SCROLL    = NK_FLAG(8),$/;"	e	enum:nk_edit_flags
NK_EDIT_READ_ONLY	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_READ_ONLY               = NK_FLAG(0),$/;"	e	enum:nk_edit_flags
NK_EDIT_SELECTABLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_SELECTABLE              = NK_FLAG(5),$/;"	e	enum:nk_edit_flags
NK_EDIT_SIG_ENTER	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_SIG_ENTER               = NK_FLAG(2),$/;"	e	enum:nk_edit_flags
NK_EDIT_SIMPLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_EDIT_SIMPLE  = NK_EDIT_ALWAYS_INSERT_MODE,$/;"	e	enum:nk_edit_types
NK_FILE_LINE	thirdparty/glfw/src/deps/nuklear.h	310;"	d
NK_FILE_LINE	thirdparty/glfw/src/deps/nuklear.h	312;"	d
NK_FILTER_FLOAT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FILTER_FLOAT$/;"	e	enum:nk_property_filter
NK_FILTER_INT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FILTER_INT,$/;"	e	enum:nk_property_filter
NK_FIXED	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	e	enum:nk_modify
NK_FLAG	thirdparty/glfw/src/deps/nuklear.h	291;"	d
NK_FLAGS_STACK_SIZE	thirdparty/glfw/src/deps/nuklear.h	2861;"	d
NK_FLOAT_PRECISION	thirdparty/glfw/src/deps/nuklear.h	3165;"	d
NK_FLOAT_STACK_SIZE	thirdparty/glfw/src/deps/nuklear.h	2853;"	d
NK_FONT_ATLAS_ALPHA8	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FONT_ATLAS_ALPHA8,$/;"	e	enum:nk_font_atlas_format
NK_FONT_ATLAS_RGBA32	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FONT_ATLAS_RGBA32$/;"	e	enum:nk_font_atlas_format
NK_FONT_STACK_SIZE	thirdparty/glfw/src/deps/nuklear.h	2845;"	d
NK_FORMAT_COLOR_BEGIN	thirdparty/glfw/src/deps/nuklear.h	/^NK_FORMAT_COLOR_BEGIN,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COLOR_END	thirdparty/glfw/src/deps/nuklear.h	/^NK_FORMAT_COLOR_END = NK_FORMAT_RGBA32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COUNT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_COUNT$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_DOUBLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_DOUBLE,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_FLOAT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_FLOAT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R16G15B16	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_R16G15B16,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R16G15B16A16	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_R16G15B16A16,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_R32G32B32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_R32G32B32A32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32_DOUBLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_R32G32B32A32_DOUBLE,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32_FLOAT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_R32G32B32A32_FLOAT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R8G8B8	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_R8G8B8 = NK_FORMAT_COLOR_BEGIN,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R8G8B8A8	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_R8G8B8A8,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_RGB32	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_RGB32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_RGBA32	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_RGBA32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SCHAR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_SCHAR,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SINT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_SINT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SSHORT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_SSHORT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_UCHAR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_UCHAR,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_UINT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_UINT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_USHORT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_FORMAT_USHORT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_GLFW3_DEFAULT	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    NK_GLFW3_DEFAULT = 0,$/;"	e	enum:nk_glfw_init_state
NK_GLFW3_INSTALL_CALLBACKS	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    NK_GLFW3_INSTALL_CALLBACKS$/;"	e	enum:nk_glfw_init_state
NK_GLFW_GL2_H_	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	14;"	d
NK_GLFW_TEXT_MAX	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	45;"	d
NK_GLOBAL	thirdparty/glfw/src/deps/nuklear.h	289;"	d
NK_HEADER_LEFT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_HEADER_LEFT,$/;"	e	enum:nk_style_header_align
NK_HEADER_RIGHT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_HEADER_RIGHT$/;"	e	enum:nk_style_header_align
NK_HIDDEN	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	e	enum:nk_show_states
NK_HORIZONTAL	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	e	enum:nk_orientation
NK_INBOX	thirdparty/glfw/src/deps/nuklear.h	3001;"	d
NK_INPUT_MAX	thirdparty/glfw/src/deps/nuklear.h	257;"	d
NK_INSERT_BACK	thirdparty/glfw/src/deps/nuklear.h	/^    NK_INSERT_BACK, \/* inserts window into the back of list (front of screen) *\/$/;"	e	enum:nk_window_insert_location
NK_INSERT_FRONT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_INSERT_FRONT \/* inserts window into the front of list (back of screen) *\/$/;"	e	enum:nk_window_insert_location
NK_INT16	thirdparty/glfw/src/deps/nuklear.h	331;"	d
NK_INT16	thirdparty/glfw/src/deps/nuklear.h	345;"	d
NK_INT32	thirdparty/glfw/src/deps/nuklear.h	333;"	d
NK_INT32	thirdparty/glfw/src/deps/nuklear.h	352;"	d
NK_INT32	thirdparty/glfw/src/deps/nuklear.h	354;"	d
NK_INT8	thirdparty/glfw/src/deps/nuklear.h	329;"	d
NK_INT8	thirdparty/glfw/src/deps/nuklear.h	339;"	d
NK_INTERN	thirdparty/glfw/src/deps/nuklear.h	287;"	d
NK_INTERSECT	thirdparty/glfw/src/deps/nuklear.h	3003;"	d
NK_KEY_BACKSPACE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_BACKSPACE,$/;"	e	enum:nk_keys
NK_KEY_COPY	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_COPY,$/;"	e	enum:nk_keys
NK_KEY_CTRL	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_CTRL,$/;"	e	enum:nk_keys
NK_KEY_CUT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_CUT,$/;"	e	enum:nk_keys
NK_KEY_DEL	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_DEL,$/;"	e	enum:nk_keys
NK_KEY_DOWN	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_DOWN,$/;"	e	enum:nk_keys
NK_KEY_ENTER	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_ENTER,$/;"	e	enum:nk_keys
NK_KEY_LEFT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_LEFT,$/;"	e	enum:nk_keys
NK_KEY_MAX	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_MAX$/;"	e	enum:nk_keys
NK_KEY_NONE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_NONE,$/;"	e	enum:nk_keys
NK_KEY_PASTE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_PASTE,$/;"	e	enum:nk_keys
NK_KEY_RIGHT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_RIGHT,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_DOWN	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_SCROLL_DOWN,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_END	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_SCROLL_END,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_START	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_SCROLL_START,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_UP	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_SCROLL_UP,$/;"	e	enum:nk_keys
NK_KEY_SHIFT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_SHIFT,$/;"	e	enum:nk_keys
NK_KEY_TAB	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_TAB,$/;"	e	enum:nk_keys
NK_KEY_TEXT_END	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_TEXT_END,$/;"	e	enum:nk_keys
NK_KEY_TEXT_INSERT_MODE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_TEXT_INSERT_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_LINE_END	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_TEXT_LINE_END,$/;"	e	enum:nk_keys
NK_KEY_TEXT_LINE_START	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_TEXT_LINE_START,$/;"	e	enum:nk_keys
NK_KEY_TEXT_REDO	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_TEXT_REDO,$/;"	e	enum:nk_keys
NK_KEY_TEXT_REPLACE_MODE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_TEXT_REPLACE_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_RESET_MODE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_TEXT_RESET_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_SELECT_ALL	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_TEXT_SELECT_ALL,$/;"	e	enum:nk_keys
NK_KEY_TEXT_START	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_TEXT_START,$/;"	e	enum:nk_keys
NK_KEY_TEXT_UNDO	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_TEXT_UNDO,$/;"	e	enum:nk_keys
NK_KEY_TEXT_WORD_LEFT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_TEXT_WORD_LEFT,$/;"	e	enum:nk_keys
NK_KEY_TEXT_WORD_RIGHT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_TEXT_WORD_RIGHT,$/;"	e	enum:nk_keys
NK_KEY_UP	thirdparty/glfw/src/deps/nuklear.h	/^    NK_KEY_UP,$/;"	e	enum:nk_keys
NK_LAYOUT_COUNT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_LAYOUT_COUNT$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC	thirdparty/glfw/src/deps/nuklear.h	/^    NK_LAYOUT_DYNAMIC,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_FIXED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_LAYOUT_DYNAMIC_FIXED = 0,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_FREE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_LAYOUT_DYNAMIC_FREE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_ROW	thirdparty/glfw/src/deps/nuklear.h	/^    NK_LAYOUT_DYNAMIC_ROW,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC	thirdparty/glfw/src/deps/nuklear.h	/^    NK_LAYOUT_STATIC,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_FIXED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_LAYOUT_STATIC_FIXED,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_FREE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_LAYOUT_STATIC_FREE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_ROW	thirdparty/glfw/src/deps/nuklear.h	/^    NK_LAYOUT_STATIC_ROW,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_TEMPLATE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_LAYOUT_TEMPLATE,$/;"	e	enum:nk_panel_row_layout_type
NK_LEADING_LETTER_PENALTY	thirdparty/glfw/src/deps/nuklear.h	3720;"	d
NK_LEFT	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_LEN	thirdparty/glfw/src/deps/nuklear.h	2998;"	d
NK_MACRO_STRINGIFY	thirdparty/glfw/src/deps/nuklear.h	293;"	d
NK_MAX	thirdparty/glfw/src/deps/nuklear.h	317;"	d
NK_MAXIMIZED	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	e	enum:nk_collapse_states
NK_MAX_FLOAT_PRECISION	thirdparty/glfw/src/deps/nuklear.h	2994;"	d
NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS	thirdparty/glfw/src/deps/nuklear.h	2631;"	d
NK_MAX_LEADING_LETTER_PENALTY	thirdparty/glfw/src/deps/nuklear.h	3722;"	d
NK_MAX_NUMBER_BUFFER	thirdparty/glfw/src/deps/nuklear.h	260;"	d
NK_MAX_SORT_STACK	thirdparty/glfw/src/deps/nuklear.h	8173;"	d
NK_MAX_SORT_STACK	thirdparty/glfw/src/deps/nuklear.h	8196;"	d
NK_MEMCPY	thirdparty/glfw/src/deps/nuklear.h	3102;"	d
NK_MEMSET	thirdparty/glfw/src/deps/nuklear.h	3099;"	d
NK_MIN	thirdparty/glfw/src/deps/nuklear.h	316;"	d
NK_MINIMIZED	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	e	enum:nk_collapse_states
NK_MODIFIABLE	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	e	enum:nk_modify
NK_NUKLEAR_H_	thirdparty/glfw/src/deps/nuklear.h	241;"	d
NK_OFFSETOF	thirdparty/glfw/src/deps/nuklear.h	3040;"	d
NK_PANEL_COMBO	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PANEL_COMBO      = NK_FLAG(5),$/;"	e	enum:nk_panel_type
NK_PANEL_CONTEXTUAL	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PANEL_CONTEXTUAL = NK_FLAG(4),$/;"	e	enum:nk_panel_type
NK_PANEL_GROUP	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PANEL_GROUP      = NK_FLAG(1),$/;"	e	enum:nk_panel_type
NK_PANEL_MENU	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PANEL_MENU       = NK_FLAG(6),$/;"	e	enum:nk_panel_type
NK_PANEL_POPUP	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PANEL_POPUP      = NK_FLAG(2),$/;"	e	enum:nk_panel_type
NK_PANEL_SET_NONBLOCK	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PANEL_SET_NONBLOCK = NK_PANEL_CONTEXTUAL|NK_PANEL_COMBO|NK_PANEL_MENU|NK_PANEL_TOOLTIP,$/;"	e	enum:nk_panel_set
NK_PANEL_SET_POPUP	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PANEL_SET_POPUP = NK_PANEL_SET_NONBLOCK|NK_PANEL_POPUP,$/;"	e	enum:nk_panel_set
NK_PANEL_SET_SUB	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PANEL_SET_SUB = NK_PANEL_SET_POPUP|NK_PANEL_GROUP$/;"	e	enum:nk_panel_set
NK_PANEL_TOOLTIP	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PANEL_TOOLTIP    = NK_FLAG(7)$/;"	e	enum:nk_panel_type
NK_PANEL_WINDOW	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PANEL_WINDOW     = NK_FLAG(0),$/;"	e	enum:nk_panel_type
NK_PI	thirdparty/glfw/src/deps/nuklear.h	2992;"	d
NK_POINTER_TYPE	thirdparty/glfw/src/deps/nuklear.h	336;"	d
NK_POINTER_TYPE	thirdparty/glfw/src/deps/nuklear.h	381;"	d
NK_POINTER_TYPE	thirdparty/glfw/src/deps/nuklear.h	383;"	d
NK_POINTER_TYPE	thirdparty/glfw/src/deps/nuklear.h	386;"	d
NK_POINTER_TYPE	thirdparty/glfw/src/deps/nuklear.h	388;"	d
NK_POINTER_TYPE	thirdparty/glfw/src/deps/nuklear.h	391;"	d
NK_POOL_DEFAULT_CAPACITY	thirdparty/glfw/src/deps/nuklear.h	3072;"	d
NK_POPUP_DYNAMIC	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	e	enum:nk_popup_type
NK_POPUP_STATIC	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	e	enum:nk_popup_type
NK_PROPERTY_DEFAULT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PROPERTY_DEFAULT,$/;"	e	enum:nk_property_status
NK_PROPERTY_DOUBLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PROPERTY_DOUBLE$/;"	e	enum:nk_property_kind
NK_PROPERTY_DRAG	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PROPERTY_DRAG$/;"	e	enum:nk_property_status
NK_PROPERTY_EDIT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PROPERTY_EDIT,$/;"	e	enum:nk_property_status
NK_PROPERTY_FLOAT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PROPERTY_FLOAT,$/;"	e	enum:nk_property_kind
NK_PROPERTY_INT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_PROPERTY_INT,$/;"	e	enum:nk_property_kind
NK_PTR_TO_UINT	thirdparty/glfw/src/deps/nuklear.h	3023;"	d
NK_PTR_TO_UINT	thirdparty/glfw/src/deps/nuklear.h	3026;"	d
NK_PTR_TO_UINT	thirdparty/glfw/src/deps/nuklear.h	3029;"	d
NK_PTR_TO_UINT	thirdparty/glfw/src/deps/nuklear.h	3032;"	d
NK_RGB	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	e	enum:nk_color_format
NK_RGBA	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	e	enum:nk_color_format
NK_RIGHT	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_ROTL	thirdparty/glfw/src/deps/nuklear.h	4372;"	d
NK_ROTL	thirdparty/glfw/src/deps/nuklear.h	4422;"	d
NK_RP_HEURISTIC	thirdparty/glfw/src/deps/nuklear.h	/^enum NK_RP_HEURISTIC {$/;"	g
NK_RP_HEURISTIC_Skyline_BF_sortHeight	thirdparty/glfw/src/deps/nuklear.h	/^    NK_RP_HEURISTIC_Skyline_BF_sortHeight$/;"	e	enum:NK_RP_HEURISTIC
NK_RP_HEURISTIC_Skyline_BL_sortHeight	thirdparty/glfw/src/deps/nuklear.h	/^    NK_RP_HEURISTIC_Skyline_BL_sortHeight = NK_RP_HEURISTIC_Skyline_default,$/;"	e	enum:NK_RP_HEURISTIC
NK_RP_HEURISTIC_Skyline_default	thirdparty/glfw/src/deps/nuklear.h	/^    NK_RP_HEURISTIC_Skyline_default=0,$/;"	e	enum:NK_RP_HEURISTIC
NK_RP_INIT_STATE	thirdparty/glfw/src/deps/nuklear.h	/^enum NK_RP_INIT_STATE{NK_RP__INIT_skyline = 1};$/;"	g
NK_RP__INIT_skyline	thirdparty/glfw/src/deps/nuklear.h	/^enum NK_RP_INIT_STATE{NK_RP__INIT_skyline = 1};$/;"	e	enum:NK_RP_INIT_STATE
NK_RP__MAXVAL	thirdparty/glfw/src/deps/nuklear.h	7861;"	d
NK_SATURATE	thirdparty/glfw/src/deps/nuklear.h	2997;"	d
NK_SCHAR_MAX	thirdparty/glfw/src/deps/nuklear.h	3139;"	d
NK_SCHAR_MIN	thirdparty/glfw/src/deps/nuklear.h	3138;"	d
NK_SCROLLBAR_HIDING_TIMEOUT	thirdparty/glfw/src/deps/nuklear.h	263;"	d
NK_SEPARATOR_BONUS	thirdparty/glfw/src/deps/nuklear.h	3716;"	d
NK_SHOWN	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	e	enum:nk_show_states
NK_SIN	thirdparty/glfw/src/deps/nuklear.h	3108;"	d
NK_SINT_MAX	thirdparty/glfw/src/deps/nuklear.h	3147;"	d
NK_SINT_MIN	thirdparty/glfw/src/deps/nuklear.h	3146;"	d
NK_SIZE_TYPE	thirdparty/glfw/src/deps/nuklear.h	335;"	d
NK_SIZE_TYPE	thirdparty/glfw/src/deps/nuklear.h	366;"	d
NK_SIZE_TYPE	thirdparty/glfw/src/deps/nuklear.h	368;"	d
NK_SIZE_TYPE	thirdparty/glfw/src/deps/nuklear.h	371;"	d
NK_SIZE_TYPE	thirdparty/glfw/src/deps/nuklear.h	373;"	d
NK_SIZE_TYPE	thirdparty/glfw/src/deps/nuklear.h	376;"	d
NK_SQRT	thirdparty/glfw/src/deps/nuklear.h	3105;"	d
NK_SSHORT_MAX	thirdparty/glfw/src/deps/nuklear.h	3143;"	d
NK_SSHORT_MIN	thirdparty/glfw/src/deps/nuklear.h	3142;"	d
NK_STATIC	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	e	enum:nk_layout_format
NK_STATIC_ASSERT	thirdparty/glfw/src/deps/nuklear.h	305;"	d
NK_STOP_ON_NEW_LINE	thirdparty/glfw/src/deps/nuklear.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	e	enum:__anon172
NK_STORAGE	thirdparty/glfw/src/deps/nuklear.h	288;"	d
NK_STRINGIFY	thirdparty/glfw/src/deps/nuklear.h	292;"	d
NK_STRING_JOIN	thirdparty/glfw/src/deps/nuklear.h	296;"	d
NK_STRING_JOIN_DELAY	thirdparty/glfw/src/deps/nuklear.h	295;"	d
NK_STRING_JOIN_IMMEDIATE	thirdparty/glfw/src/deps/nuklear.h	294;"	d
NK_STROKE_CLOSED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_STROKE_CLOSED = nk_true$/;"	e	enum:nk_draw_list_stroke
NK_STROKE_OPEN	thirdparty/glfw/src/deps/nuklear.h	/^    NK_STROKE_OPEN = nk_false,$/;"	e	enum:nk_draw_list_stroke
NK_STRTOD	thirdparty/glfw/src/deps/nuklear.h	3114;"	d
NK_STYLE_ITEM_COLOR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_STYLE_ITEM_COLOR,$/;"	e	enum:nk_style_item_type
NK_STYLE_ITEM_IMAGE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_STYLE_ITEM_IMAGE$/;"	e	enum:nk_style_item_type
NK_STYLE_ITEM_STACK_SIZE	thirdparty/glfw/src/deps/nuklear.h	2849;"	d
NK_STYLE_POP_IMPLEMENATION	thirdparty/glfw/src/deps/nuklear.h	15807;"	d
NK_STYLE_PUSH_IMPLEMENATION	thirdparty/glfw/src/deps/nuklear.h	15789;"	d
NK_SYMBOL_CIRCLE_OUTLINE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_CIRCLE_OUTLINE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_CIRCLE_SOLID	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_CIRCLE_SOLID,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_MAX	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_MAX$/;"	e	enum:nk_symbol_type
NK_SYMBOL_MINUS	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_MINUS,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_NONE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_NONE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_PLUS	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_PLUS,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_RECT_OUTLINE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_RECT_OUTLINE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_RECT_SOLID	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_RECT_SOLID,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_DOWN	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_TRIANGLE_DOWN,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_LEFT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_TRIANGLE_LEFT,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_RIGHT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_TRIANGLE_RIGHT,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_UP	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_TRIANGLE_UP,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_UNDERSCORE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_UNDERSCORE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_X	thirdparty/glfw/src/deps/nuklear.h	/^    NK_SYMBOL_X,$/;"	e	enum:nk_symbol_type
NK_TEXTEDIT_UNDOCHARCOUNT	thirdparty/glfw/src/deps/nuklear.h	1645;"	d
NK_TEXTEDIT_UNDOSTATECOUNT	thirdparty/glfw/src/deps/nuklear.h	1641;"	d
NK_TEXT_ALIGN_BOTTOM	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_ALIGN_BOTTOM      = 0x20$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_CENTERED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_ALIGN_CENTERED    = 0x02,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_LEFT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_ALIGN_LEFT        = 0x01,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_MIDDLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_ALIGN_MIDDLE      = 0x10,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_RIGHT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_ALIGN_RIGHT       = 0x04,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_TOP	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_ALIGN_TOP         = 0x08,$/;"	e	enum:nk_text_align
NK_TEXT_CENTERED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_CENTERED    = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_CENTERED,$/;"	e	enum:nk_text_alignment
NK_TEXT_EDIT_MODE_INSERT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_EDIT_MODE_INSERT,$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_REPLACE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_EDIT_MODE_REPLACE$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_VIEW	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_EDIT_MODE_VIEW,$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MULTI_LINE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_EDIT_MULTI_LINE$/;"	e	enum:nk_text_edit_type
NK_TEXT_EDIT_SINGLE_LINE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_EDIT_SINGLE_LINE,$/;"	e	enum:nk_text_edit_type
NK_TEXT_HAS_SELECTION	thirdparty/glfw/src/deps/nuklear.h	11565;"	d
NK_TEXT_LEFT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_LEFT        = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_LEFT,$/;"	e	enum:nk_text_alignment
NK_TEXT_RIGHT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TEXT_RIGHT       = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_RIGHT$/;"	e	enum:nk_text_alignment
NK_TLOOP	thirdparty/glfw/src/deps/nuklear.h	3407;"	d
NK_TLOOP	thirdparty/glfw/src/deps/nuklear.h	3446;"	d
NK_TLOOP1	thirdparty/glfw/src/deps/nuklear.h	3408;"	d
NK_TLOOP1	thirdparty/glfw/src/deps/nuklear.h	3447;"	d
NK_TOGGLE_CHECK	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TOGGLE_CHECK,$/;"	e	enum:nk_toggle_type
NK_TOGGLE_OPTION	thirdparty/glfw/src/deps/nuklear.h	/^    NK_TOGGLE_OPTION$/;"	e	enum:nk_toggle_type
NK_TO_HEX	thirdparty/glfw/src/deps/nuklear.h	4526;"	d
NK_TO_HEX	thirdparty/glfw/src/deps/nuklear.h	4536;"	d
NK_TO_HEX	thirdparty/glfw/src/deps/nuklear.h	4542;"	d
NK_TO_HEX	thirdparty/glfw/src/deps/nuklear.h	4550;"	d
NK_TREE_NODE	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	e	enum:nk_tree_type
NK_TREE_TAB	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	e	enum:nk_tree_type
NK_TT_MACSTYLE_BOLD	thirdparty/glfw/src/deps/nuklear.h	8331;"	d
NK_TT_MACSTYLE_DONTCARE	thirdparty/glfw/src/deps/nuklear.h	8330;"	d
NK_TT_MACSTYLE_ITALIC	thirdparty/glfw/src/deps/nuklear.h	8332;"	d
NK_TT_MACSTYLE_NONE	thirdparty/glfw/src/deps/nuklear.h	8334;"	d
NK_TT_MACSTYLE_UNDERSCORE	thirdparty/glfw/src/deps/nuklear.h	8333;"	d
NK_TT_MAC_EID_ARABIC	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_EID_ROMAN        =0,   NK_TT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon177
NK_TT_MAC_EID_CHINESE_TRAD	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_EID_CHINESE_TRAD =2,   NK_TT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon177
NK_TT_MAC_EID_GREEK	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_EID_CHINESE_TRAD =2,   NK_TT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon177
NK_TT_MAC_EID_HEBREW	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_EID_JAPANESE     =1,   NK_TT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon177
NK_TT_MAC_EID_JAPANESE	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_EID_JAPANESE     =1,   NK_TT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon177
NK_TT_MAC_EID_KOREAN	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_EID_KOREAN       =3,   NK_TT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon177
NK_TT_MAC_EID_ROMAN	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_EID_ROMAN        =0,   NK_TT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon177
NK_TT_MAC_EID_RUSSIAN	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_EID_KOREAN       =3,   NK_TT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon177
NK_TT_MAC_LANG_ARABIC	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_ARABIC       =12,   NK_TT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon179
NK_TT_MAC_LANG_CHINESE_SIMPLIFIED	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_HEBREW       =10,   NK_TT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon179
NK_TT_MAC_LANG_CHINESE_TRAD	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_ITALIAN      =3 ,   NK_TT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon179
NK_TT_MAC_LANG_DUTCH	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_DUTCH        =4 ,   NK_TT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon179
NK_TT_MAC_LANG_ENGLISH	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_ENGLISH      =0 ,   NK_TT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon179
NK_TT_MAC_LANG_FRENCH	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_FRENCH       =1 ,   NK_TT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon179
NK_TT_MAC_LANG_GERMAN	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_GERMAN       =2 ,   NK_TT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon179
NK_TT_MAC_LANG_HEBREW	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_HEBREW       =10,   NK_TT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon179
NK_TT_MAC_LANG_ITALIAN	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_ITALIAN      =3 ,   NK_TT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon179
NK_TT_MAC_LANG_JAPANESE	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_ENGLISH      =0 ,   NK_TT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon179
NK_TT_MAC_LANG_KOREAN	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_ARABIC       =12,   NK_TT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon179
NK_TT_MAC_LANG_RUSSIAN	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_DUTCH        =4 ,   NK_TT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon179
NK_TT_MAC_LANG_SPANISH	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_FRENCH       =1 ,   NK_TT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon179
NK_TT_MAC_LANG_SWEDISH	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MAC_LANG_GERMAN       =2 ,   NK_TT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon179
NK_TT_MAX_OVERSAMPLE	thirdparty/glfw/src/deps/nuklear.h	8237;"	d
NK_TT_MS_EID_SHIFTJIS	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_EID_SHIFTJIS      =2,$/;"	e	enum:__anon176
NK_TT_MS_EID_SYMBOL	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_EID_SYMBOL        =0,$/;"	e	enum:__anon176
NK_TT_MS_EID_UNICODE_BMP	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_EID_UNICODE_BMP   =1,$/;"	e	enum:__anon176
NK_TT_MS_EID_UNICODE_FULL	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_EID_UNICODE_FULL  =10$/;"	e	enum:__anon176
NK_TT_MS_LANG_CHINESE	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_LANG_CHINESE     =0x0804,   NK_TT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon178
NK_TT_MS_LANG_DUTCH	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_LANG_DUTCH       =0x0413,   NK_TT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon178
NK_TT_MS_LANG_ENGLISH	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_LANG_ENGLISH     =0x0409,   NK_TT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon178
NK_TT_MS_LANG_FRENCH	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_LANG_FRENCH      =0x040c,   NK_TT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon178
NK_TT_MS_LANG_GERMAN	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_LANG_GERMAN      =0x0407,   NK_TT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon178
NK_TT_MS_LANG_HEBREW	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_LANG_HEBREW      =0x040d,   NK_TT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon178
NK_TT_MS_LANG_ITALIAN	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_LANG_ENGLISH     =0x0409,   NK_TT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon178
NK_TT_MS_LANG_JAPANESE	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_LANG_CHINESE     =0x0804,   NK_TT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon178
NK_TT_MS_LANG_KOREAN	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_LANG_DUTCH       =0x0413,   NK_TT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon178
NK_TT_MS_LANG_RUSSIAN	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_LANG_FRENCH      =0x040c,   NK_TT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon178
NK_TT_MS_LANG_SPANISH	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_LANG_GERMAN      =0x0407,   NK_TT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon178
NK_TT_MS_LANG_SWEDISH	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_MS_LANG_HEBREW      =0x040d,   NK_TT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon178
NK_TT_PLATFORM_ID_ISO	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_PLATFORM_ID_ISO       =2,$/;"	e	enum:__anon174
NK_TT_PLATFORM_ID_MAC	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_PLATFORM_ID_MAC       =1,$/;"	e	enum:__anon174
NK_TT_PLATFORM_ID_MICROSOFT	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_PLATFORM_ID_MICROSOFT =3$/;"	e	enum:__anon174
NK_TT_PLATFORM_ID_UNICODE	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_PLATFORM_ID_UNICODE   =0,$/;"	e	enum:__anon174
NK_TT_UNICODE_EID_ISO_10646	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_UNICODE_EID_ISO_10646      =2,$/;"	e	enum:__anon175
NK_TT_UNICODE_EID_UNICODE_1_0	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_1_0    =0,$/;"	e	enum:__anon175
NK_TT_UNICODE_EID_UNICODE_1_1	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_1_1    =1,$/;"	e	enum:__anon175
NK_TT_UNICODE_EID_UNICODE_2_0_BMP	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_2_0_BMP=3,$/;"	e	enum:__anon175
NK_TT_UNICODE_EID_UNICODE_2_0_FULL	thirdparty/glfw/src/deps/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_2_0_FULL=4$/;"	e	enum:__anon175
NK_TT__COMPARE	thirdparty/glfw/src/deps/nuklear.h	9278;"	d
NK_TT__OVER_MASK	thirdparty/glfw/src/deps/nuklear.h	8238;"	d
NK_TT_vcurve	thirdparty/glfw/src/deps/nuklear.h	/^  NK_TT_vcurve$/;"	e	enum:__anon173
NK_TT_vline	thirdparty/glfw/src/deps/nuklear.h	/^  NK_TT_vline,$/;"	e	enum:__anon173
NK_TT_vmove	thirdparty/glfw/src/deps/nuklear.h	/^  NK_TT_vmove=1,$/;"	e	enum:__anon173
NK_UCHAR_MAX	thirdparty/glfw/src/deps/nuklear.h	3141;"	d
NK_UCHAR_MIN	thirdparty/glfw/src/deps/nuklear.h	3140;"	d
NK_UINT16	thirdparty/glfw/src/deps/nuklear.h	332;"	d
NK_UINT16	thirdparty/glfw/src/deps/nuklear.h	348;"	d
NK_UINT32	thirdparty/glfw/src/deps/nuklear.h	334;"	d
NK_UINT32	thirdparty/glfw/src/deps/nuklear.h	359;"	d
NK_UINT32	thirdparty/glfw/src/deps/nuklear.h	361;"	d
NK_UINT8	thirdparty/glfw/src/deps/nuklear.h	330;"	d
NK_UINT8	thirdparty/glfw/src/deps/nuklear.h	342;"	d
NK_UINT_MAX	thirdparty/glfw/src/deps/nuklear.h	3149;"	d
NK_UINT_MIN	thirdparty/glfw/src/deps/nuklear.h	3148;"	d
NK_UINT_TO_PTR	thirdparty/glfw/src/deps/nuklear.h	3022;"	d
NK_UINT_TO_PTR	thirdparty/glfw/src/deps/nuklear.h	3025;"	d
NK_UINT_TO_PTR	thirdparty/glfw/src/deps/nuklear.h	3028;"	d
NK_UINT_TO_PTR	thirdparty/glfw/src/deps/nuklear.h	3031;"	d
NK_UNDEFINED	thirdparty/glfw/src/deps/nuklear.h	253;"	d
NK_UNIQUE_NAME	thirdparty/glfw/src/deps/nuklear.h	299;"	d
NK_UNIQUE_NAME	thirdparty/glfw/src/deps/nuklear.h	301;"	d
NK_UNMATCHED_LETTER_PENALTY	thirdparty/glfw/src/deps/nuklear.h	3724;"	d
NK_UNUSED	thirdparty/glfw/src/deps/nuklear.h	2996;"	d
NK_UP	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_USHORT_MAX	thirdparty/glfw/src/deps/nuklear.h	3145;"	d
NK_USHORT_MIN	thirdparty/glfw/src/deps/nuklear.h	3144;"	d
NK_UTF_INVALID	thirdparty/glfw/src/deps/nuklear.h	254;"	d
NK_UTF_INVALID	thirdparty/glfw/src/deps/nuklear.h	2993;"	d
NK_UTF_SIZE	thirdparty/glfw/src/deps/nuklear.h	255;"	d
NK_VALUE_PAGE_CAPACITY	thirdparty/glfw/src/deps/nuklear.h	2909;"	d
NK_VECTOR_STACK_SIZE	thirdparty/glfw/src/deps/nuklear.h	2857;"	d
NK_VERTEX_ATTRIBUTE_COUNT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_VERTEX_ATTRIBUTE_COUNT$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_COLOR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_VERTEX_COLOR,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_LAYOUT_END	thirdparty/glfw/src/deps/nuklear.h	2099;"	d
NK_VERTEX_POSITION	thirdparty/glfw/src/deps/nuklear.h	/^    NK_VERTEX_POSITION,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_TEXCOORD	thirdparty/glfw/src/deps/nuklear.h	/^    NK_VERTEX_TEXCOORD,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTICAL	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	e	enum:nk_orientation
NK_VSNPRINTF	thirdparty/glfw/src/deps/nuklear.h	3132;"	d
NK_VSNPRINTF	thirdparty/glfw/src/deps/nuklear.h	3134;"	d
NK_WIDGET_INVALID	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WIDGET_INVALID, \/* The widget cannot be seen and is completely out of view *\/$/;"	e	enum:nk_widget_layout_states
NK_WIDGET_ROM	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WIDGET_ROM \/* The widget is partially visible and cannot be updated *\/$/;"	e	enum:nk_widget_layout_states
NK_WIDGET_STATE_ACTIVE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WIDGET_STATE_ACTIVE      = NK_WIDGET_STATE_ACTIVED|NK_WIDGET_STATE_MODIFIED \/* widget is currently activated *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ACTIVED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WIDGET_STATE_ACTIVED     = NK_FLAG(5),\/* widget is currently activated *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ENTERED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WIDGET_STATE_ENTERED     = NK_FLAG(3), \/* widget has been hovered on the current frame *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_HOVER	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WIDGET_STATE_HOVER       = NK_FLAG(4), \/* widget is being hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_HOVERED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WIDGET_STATE_HOVERED     = NK_WIDGET_STATE_HOVER|NK_WIDGET_STATE_MODIFIED, \/* widget is being hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_INACTIVE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WIDGET_STATE_INACTIVE    = NK_FLAG(2), \/* widget is neither active nor hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_LEFT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WIDGET_STATE_LEFT        = NK_FLAG(6), \/* widget is from this frame on not hovered anymore *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_MODIFIED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WIDGET_STATE_MODIFIED    = NK_FLAG(1),$/;"	e	enum:nk_widget_states
NK_WIDGET_VALID	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WIDGET_VALID, \/* The widget is completely inside the window and can be updated and drawn *\/$/;"	e	enum:nk_widget_layout_states
NK_WINDOW_BACKGROUND	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_BACKGROUND        = NK_FLAG(8), \/* Always keep window in the background *\/$/;"	e	enum:nk_panel_flags
NK_WINDOW_BORDER	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_BORDER            = NK_FLAG(0), \/* Draws a border around the window to visually separate the window from the background *\/$/;"	e	enum:nk_panel_flags
NK_WINDOW_CLOSABLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_CLOSABLE          = NK_FLAG(3), \/* adds a closable icon into the header *\/$/;"	e	enum:nk_panel_flags
NK_WINDOW_CLOSED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_CLOSED        = NK_FLAG(13),$/;"	e	enum:nk_window_flags
NK_WINDOW_DYNAMIC	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_DYNAMIC       = NK_WINDOW_PRIVATE,$/;"	e	enum:nk_window_flags
NK_WINDOW_HIDDEN	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_HIDDEN        = NK_FLAG(12),$/;"	e	enum:nk_window_flags
NK_WINDOW_MAX_NAME	thirdparty/glfw/src/deps/nuklear.h	2732;"	d
NK_WINDOW_MINIMIZABLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_MINIMIZABLE       = NK_FLAG(4), \/* adds a minimize icon into the header *\/$/;"	e	enum:nk_panel_flags
NK_WINDOW_MINIMIZED	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_MINIMIZED     = NK_FLAG(14),$/;"	e	enum:nk_window_flags
NK_WINDOW_MOVABLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_MOVABLE           = NK_FLAG(1), \/* The movable flag indicates that a window can be moved by user input or by dragging the window header *\/$/;"	e	enum:nk_panel_flags
NK_WINDOW_NO_SCROLLBAR	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_NO_SCROLLBAR      = NK_FLAG(5), \/* Removes the scrollbar from the window *\/$/;"	e	enum:nk_panel_flags
NK_WINDOW_PRIVATE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_PRIVATE       = NK_FLAG(10),$/;"	e	enum:nk_window_flags
NK_WINDOW_REMOVE_ROM	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_REMOVE_ROM    = NK_FLAG(15)$/;"	e	enum:nk_window_flags
NK_WINDOW_ROM	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_ROM           = NK_FLAG(11),$/;"	e	enum:nk_window_flags
NK_WINDOW_SCALABLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_SCALABLE          = NK_FLAG(2), \/* The scalable flag indicates that a window can be scaled by user input by dragging a scaler icon at the button of the window *\/$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCALE_LEFT	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_SCALE_LEFT        = NK_FLAG(9) \/* Puts window scaler in the left-ottom corner instead right-bottom*\/$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCROLL_AUTO_HIDE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_SCROLL_AUTO_HIDE  = NK_FLAG(7), \/* Automatically hides the window scrollbar if no user interaction: also requires delta time in `nk_context` to be set each frame *\/$/;"	e	enum:nk_panel_flags
NK_WINDOW_TITLE	thirdparty/glfw/src/deps/nuklear.h	/^    NK_WINDOW_TITLE             = NK_FLAG(6), \/* Forces a header at the top at the window showing the title *\/$/;"	e	enum:nk_panel_flags
NODE_INCLUDED_83839DB1_FCF2_4E9D_A4A5_D8491B0024C8	lib/nil/include/nil/node.hpp	2;"	d
NOISE	thirdparty/soloud/include/soloud/soloud_vic.h	/^			NOISE,$/;"	e	enum:SoLoud::Vic::__anon188
NOMINMAX	lib/lib/include/lib/directory.hpp	54;"	d
NOMINMAX	lib/lib/include/lib/file.hpp	87;"	d
NOMINMAX	thirdparty/catch/include/catch/catch.hpp	6991;"	d
NOMINMAX	thirdparty/glfw/src/win32_platform.h	30;"	d
NOMINMAX	thirdparty/imgui/src/imgui.cpp	9622;"	d	file:
NONAMELESSSTRUCT	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	16;"	d
NONAMELESSUNION	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	12;"	d
NONAMELESSUNION	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	8;"	d
NONE	lib/nil/include/nil/data/window.hpp	/^  enum { NONE, OGL }  type;$/;"	e	enum:Nil::Data::Window::__anon12
NONE	lib/roa/include/roa/shader_type.hpp	/^  NONE,$/;"	m	class:ROA::Shader_type
NONE	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      NONE,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
NONE	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^			NONE = 0,$/;"	e	enum:SoLoud::BiquadResonantFilter::FILTERTYPE
NORMAL	lib/lib/include/lib/model.hpp	/^  NORMAL,$/;"	e	enum:LIB_NS_NAME::map_type::ENUM
NOT_IMPLEMENTED	thirdparty/soloud/include/soloud/soloud_error.h	/^		NOT_IMPLEMENTED   = 6, \/\/ Feature not implemented$/;"	e	enum:SoLoud::SOLOUD_ERRORS
NO_ATTENUATION	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			NO_ATTENUATION = 0,$/;"	e	enum:SoLoud::AudioSource::ATTENUATION_MODELS
NO_CODE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1007;"	d	file:
NO_CODE	thirdparty/stb/include/stb/stb_vorbis.c	1006;"	d	file:
NO_CURR_STATE	lib/nil/include/nil/data/audio.hpp	/^  enum { NO_CURR_STATE, PLAYING, STOPPED }   current_state;$/;"	e	enum:Nil::Data::Audio::__anon11
NO_REQ_STATE	lib/nil/include/nil/data/audio.hpp	/^  enum { NO_REQ_STATE, PLAY, STOP }          request_state;$/;"	e	enum:Nil::Data::Audio::__anon10
NPAR	thirdparty/soloud/src/audiosource/speech/klatt.h	8;"	d
NRL	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static int NRL(const char *s, int n, darray *phone)$/;"	f	file:
NTSC	thirdparty/soloud/include/soloud/soloud_vic.h	/^			NTSC,$/;"	e	enum:SoLoud::Vic::__anon187
NULL	thirdparty/glfw/src/deps/tinycthread.c	47;"	d	file:
NULL	thirdparty/soloud/src/audiosource/speech/klatt.cpp	11;"	d	file:
NULL	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	565;"	d	file:
NULL	thirdparty/stb/include/stb/stb_vorbis.c	562;"	d	file:
NULLDRIVER	thirdparty/soloud/include/soloud/soloud.h	/^			NULLDRIVER,$/;"	e	enum:SoLoud::Soloud::BACKENDS
NULL_	thirdparty/glfw/src/x11_platform.h	/^    Atom            NULL_;$/;"	m	struct:_GLFWlibraryX11
NUMBER	lib/lib/include/lib/memory.hpp	/^  NUMBER,$/;"	e	enum:LIB_NS_NAME::mem::tag::ENUM
NUMBER_INCLUDED_FCDC3C6E_9E33_45F8_A724_3B4D4AB0A69E	lib/lib/include/lib/number.hpp	9;"	d
NUMLOCK	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	F12					: 123,$/;"	p	class:namespace.Codes
NUM_CENTER	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	TAB					: 9,$/;"	p	class:namespace.Codes
NUM_DIVISION	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_PERIOD			: 110,$/;"	p	class:namespace.Codes
NUM_EIGHT	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_SEVEN			: 103,$/;"	p	class:namespace.Codes
NUM_FIVE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_FOUR			: 100,$/;"	p	class:namespace.Codes
NUM_FOUR	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_THREE			: 99,$/;"	p	class:namespace.Codes
NUM_MINUS	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_PLUS			: 107,$/;"	p	class:namespace.Codes
NUM_MULTIPLY	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_NINE			: 105,$/;"	p	class:namespace.Codes
NUM_NINE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_EIGHT			: 104,$/;"	p	class:namespace.Codes
NUM_ONE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_ZERO			: 96,$/;"	p	class:namespace.Codes
NUM_PERIOD	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_MINUS			: 109,$/;"	p	class:namespace.Codes
NUM_PLUS	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_MULTIPLY		: 106,$/;"	p	class:namespace.Codes
NUM_SEVEN	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_SIX				: 102,$/;"	p	class:namespace.Codes
NUM_SIX	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_FIVE			: 101,$/;"	p	class:namespace.Codes
NUM_THREE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_TWO				: 98,$/;"	p	class:namespace.Codes
NUM_TWO	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUM_ONE				: 97,$/;"	p	class:namespace.Codes
NUM_ZERO	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	CONTEXT_MENU		: 93,$/;"	p	class:namespace.Codes
NYAML_INCLUDED_EE4C9622_B507_4F22_A19A_C6547F8AEF1B	lib/lib/include/lib/nyaml.hpp	13;"	d
NYAML_INDENT_SIZE	lib/lib/include/lib/nyaml.hpp	25;"	d
N_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule N_rules[] =$/;"	v	file:
Name	thirdparty/imgui/include/imgui/imgui.h	/^    char            Name[32];                               \/\/ Name (strictly for debugging)$/;"	m	struct:ImFontConfig
Name	thirdparty/imgui/include/imgui/imgui_internal.h	/^    char*                   Name;$/;"	m	struct:ImGuiWindow
Name	thirdparty/imgui/include/imgui/imgui_internal.h	/^    char*       Name;$/;"	m	struct:ImGuiIniData
NameAndDesc	thirdparty/catch/include/catch/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	thirdparty/catch/include/catch/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
Nau_ctx	lib/nau/src/nau.cpp	/^struct Nau_ctx$/;"	s	namespace:__anon42	file:
Nau_renderable	lib/nau/include/nau/nau.h	/^struct Nau_renderable$/;"	s
NewFrame	thirdparty/imgui/src/imgui.cpp	/^void ImGui::NewFrame()$/;"	f	class:ImGui
NewLine	thirdparty/imgui/src/imgui.cpp	/^void ImGui::NewLine()$/;"	f	class:ImGui
New_0	thirdparty/remotery/src/Remotery.c	558;"	d	file:
New_1	thirdparty/remotery/src/Remotery.c	560;"	d	file:
New_2	thirdparty/remotery/src/Remotery.c	562;"	d	file:
New_3	thirdparty/remotery/src/Remotery.c	564;"	d	file:
NextColumn	thirdparty/imgui/src/imgui.cpp	/^void ImGui::NextColumn()$/;"	f	class:ImGui
NextWidth	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       Width, NextWidth;$/;"	m	struct:ImGuiSimpleColumns
NextWidths	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       Pos[8], NextWidths[8];$/;"	m	struct:ImGuiSimpleColumns
Nil	lib/nil/include/nil/aspect.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/data/audio.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/data/bounding_box.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/data/camera.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/data/developer.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/data/gamepad.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/data/keyboard.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/data/light.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/data/logic.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/data/mouse.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/data/renderable.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/data/renderable_text.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/data/transform.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/data/window.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/fwd.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/node.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/include/nil/resource/directory.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/src/asset_loading/asset_loading.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/src/asset_loading/load_gltf.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/asset_loading/load_obj.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/graph/graph.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/graph/graph.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/src/graph/graph_data.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/src/graph/graph_fwd.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/src/interface/data/audio.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/data/bounding_box.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/data/camera.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/data/common.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil/src/interface/data/developer.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/data/gamepad.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/data/keyboard.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/data/light.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/data/logic.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/data/mouse.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/data/renderable.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/data/renderable_text.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/data/transform.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/data/window.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/node.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/interface/resource/directory.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/internal_data/internal_data.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil/src/internal_data/internal_data.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil_aspects/src/imgui/imgui_data.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil_aspects/src/imgui/imgui_data.hpp	/^namespace Nil {$/;"	n
Nil	lib/nil_aspects/src/imgui/imgui_resource.cpp	/^namespace Nil {$/;"	n	file:
Nil	lib/nil_aspects/src/imgui/imgui_resource.hpp	/^namespace Nil {$/;"	n
Nil_aspect	lib/nil/include/nil/aspect.hpp	/^struct Nil_aspect$/;"	s
Nil_aspect_callback	lib/nil/src/internal_data/internal_data.hpp	/^struct Nil_aspect_callback$/;"	s
Nil_aspect_callback_fn	lib/nil/include/nil/fwd.hpp	/^typedef void(*Nil_aspect_callback_fn)(Nil_ctx *ctx, void *self);$/;"	t
Nil_audio_src	lib/nil/include/nil/resource/audio.hpp	/^struct Nil_audio_src$/;"	s
Nil_audio_src_data	lib/nil/src/internal_data/resources/audio_src_data.hpp	/^struct Nil_audio_src_data$/;"	s
Nil_audio_src_type	lib/nil/include/nil/fwd.hpp	/^} Nil_audio_src_type;$/;"	t	typeref:enum:__anon19
Nil_cpu_task	lib/nil/src/internal_data/internal_data.hpp	/^struct Nil_cpu_task$/;"	s
Nil_cpu_task_fn	lib/nil/include/nil/fwd.hpp	/^typedef void(*Nil_cpu_task_fn)(Nil_ctx *ctx, void *user_data);$/;"	t
Nil_cpu_task_queue	lib/nil/include/nil/fwd.hpp	/^} Nil_cpu_task_queue;$/;"	t	typeref:enum:__anon17
Nil_ctx	lib/nil/src/internal_data/internal_data.hpp	/^struct Nil_ctx$/;"	s
Nil_data_type	lib/nil/include/nil/fwd.hpp	/^} Nil_data_type;$/;"	t	typeref:enum:__anon20
Nil_detail	lib/nil/src/common/common.cpp	/^namespace Nil_detail {$/;"	n	file:
Nil_detail	lib/nil/src/common/common.hpp	/^namespace Nil_detail {$/;"	n
Nil_ext	lib/nil_aspects/include/aspect/aspects.hpp	/^namespace Nil_ext {$/;"	n
Nil_ext	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^namespace Nil_ext {$/;"	n
Nil_ext	lib/nil_aspects/include/aspect/renderer_aspect.hpp	/^namespace Nil_ext {$/;"	n
Nil_ext	lib/nil_aspects/include/aspect/roa_aspect.hpp	/^namespace Nil_ext {$/;"	n
Nil_ext	lib/nil_aspects/include/aspect/so_loud.hpp	/^namespace Nil_ext {$/;"	n
Nil_ext	lib/nil_aspects/src/aspects.cpp	/^namespace Nil_ext {$/;"	n	file:
Nil_ext	lib/nil_aspects/src/imgui/imgui_aspect.cpp	/^namespace Nil_ext {$/;"	n	file:
Nil_ext	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^namespace Nil_ext {$/;"	n	file:
Nil_ext	lib/nil_aspects/src/renderer/rov_extensions.cpp	/^namespace Nil_ext {$/;"	n	file:
Nil_ext	lib/nil_aspects/src/renderer/rov_extensions.hpp	/^namespace Nil_ext {$/;"	n
Nil_ext	lib/nil_aspects/src/roa_aspect.cpp	/^namespace Nil_ext {$/;"	n	file:
Nil_ext	lib/nil_aspects/src/so_loud.cpp	/^namespace Nil_ext {$/;"	n	file:
Nil_font	lib/nil/include/nil/resource/font.hpp	/^struct Nil_font$/;"	s
Nil_gpu_task	lib/nil/src/internal_data/internal_data.hpp	/^struct Nil_gpu_task$/;"	s
Nil_gpu_task_fn	lib/nil/include/nil/fwd.hpp	/^typedef void(*Nil_gpu_task_fn)(Nil_ctx *ctx, void *user_data);$/;"	t
Nil_gpu_task_queue	lib/nil/include/nil/fwd.hpp	/^} Nil_gpu_task_queue;$/;"	t	typeref:enum:__anon18
Nil_material	lib/nil/include/nil/resource/material.hpp	/^struct Nil_material$/;"	s
Nil_material_data	lib/nil/src/internal_data/resources/material_data.hpp	/^struct Nil_material_data$/;"	s
Nil_mesh	lib/nil/include/nil/resource/mesh.hpp	/^struct Nil_mesh$/;"	s
Nil_mesh_data	lib/nil/src/internal_data/resources/mesh_data.hpp	/^struct Nil_mesh_data$/;"	s
Nil_resource_status	lib/nil/include/nil/fwd.hpp	/^} Nil_resource_status;$/;"	t	typeref:enum:__anon15
Nil_shader	lib/nil/include/nil/resource/shader.hpp	/^struct Nil_shader$/;"	s
Nil_shader_data	lib/nil/src/internal_data/resources/shader_data.hpp	/^struct Nil_shader_data$/;"	s
Nil_shader_type	lib/nil/include/nil/fwd.hpp	/^} Nil_shader_type;$/;"	t	typeref:enum:__anon16
Nil_texture	lib/nil/include/nil/resource/texture.hpp	/^struct Nil_texture$/;"	s
Nil_texture_data	lib/nil/src/internal_data/resources/texture_data.hpp	/^struct Nil_texture_data$/;"	s
No	thirdparty/catch/include/catch/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
Node	lib/nil/src/interface/node.cpp	/^Node::Node()$/;"	f	class:Nil::Node
Node	lib/nil/src/interface/node.cpp	/^Node::Node(const Node &other)$/;"	f	class:Nil::Node
Node	lib/nil/src/interface/node.cpp	/^Node::Node(const uint32_t node_id, const bool is_owning)$/;"	f	class:Nil::Node
NoiseCounter	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             NoiseCounter;$/;"	m	class:TED
NoiseCounter	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static int             NoiseCounter;$/;"	v	file:
NonCopyable	thirdparty/catch/include/catch/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	thirdparty/catch/include/catch/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
Normal	thirdparty/catch/include/catch/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normalize	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t Normalize() { (*this) *= (1.f \/ Length()); return (*this); }$/;"	f	struct:ImGuizmo::vec_t
Normalize	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t Normalize(const vec_t& v) { this->Set(v.x, v.y, v.z, v.w); this->Normalize(); return (*this); }$/;"	f	struct:ImGuizmo::vec_t
Normalized	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   vec_t Normalized(const vec_t& v) { vec_t res; res = v; res.Normalize(); return res; }$/;"	f	namespace:ImGuizmo
Not	thirdparty/catch/include/catch/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	thirdparty/catch/include/catch/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	thirdparty/catch/include/catch/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	thirdparty/catch/include/catch/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
NotImplementedException	thirdparty/catch/include/catch/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	thirdparty/catch/include/catch/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
Nothing	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static const char Nothing[] = " ";$/;"	v	file:
O	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	N					: 78,$/;"	p	class:namespace.Codes
OBJDIR	app/blank/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/Blank$/;"	m
OBJDIR	app/blank/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/Blank$/;"	m
OBJDIR	app/blank/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/Blank$/;"	m
OBJDIR	app/fps_walk/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/SpinningCubes$/;"	m
OBJDIR	app/fps_walk/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/SpinningCubes$/;"	m
OBJDIR	app/fps_walk/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/SpinningCubes$/;"	m
OBJDIR	app/perils/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/PerilsPast$/;"	m
OBJDIR	app/perils/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/PerilsPast$/;"	m
OBJDIR	app/perils/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/PerilsPast$/;"	m
OBJDIR	app/they_never_pay/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/TheyNeverPay$/;"	m
OBJDIR	app/they_never_pay/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/TheyNeverPay$/;"	m
OBJDIR	app/they_never_pay/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/TheyNeverPay$/;"	m
OBJDIR	app/tiles/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/Development\/Tiles$/;"	m
OBJDIR	app/tiles/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/Release\/Tiles$/;"	m
OBJDIR	app/tiles/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/Staging\/Tiles$/;"	m
OBJDIR	lib/math/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/Development\/Math$/;"	m
OBJDIR	lib/math/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/Release\/Math$/;"	m
OBJDIR	lib/math/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/Staging\/Math$/;"	m
OBJDIR	lib/nau/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/Development\/Nau$/;"	m
OBJDIR	lib/nau/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/Release\/Nau$/;"	m
OBJDIR	lib/nau/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/Staging\/Nau$/;"	m
OBJDIR	lib/nil_aspects/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/AspectsControllers$/;"	m
OBJDIR	lib/nil_aspects/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/AspectsControllers$/;"	m
OBJDIR	lib/nil_aspects/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/AspectsControllers$/;"	m
OBJDIR	lib/roa/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/Development\/ROA$/;"	m
OBJDIR	lib/roa/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/Release\/ROA$/;"	m
OBJDIR	lib/roa/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/Staging\/ROA$/;"	m
OBJDIR	lib/rov/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/ROV$/;"	m
OBJDIR	lib/rov/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/ROV$/;"	m
OBJDIR	lib/rov/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/ROV$/;"	m
OBJDIR	thirdparty/catch/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/Catch$/;"	m
OBJDIR	thirdparty/catch/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/Catch$/;"	m
OBJDIR	thirdparty/catch/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/Catch$/;"	m
OBJDIR	thirdparty/glfw/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/GLFW$/;"	m
OBJDIR	thirdparty/glfw/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/GLFW$/;"	m
OBJDIR	thirdparty/glfw/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/GLFW$/;"	m
OBJDIR	thirdparty/imgui/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/ImGUI$/;"	m
OBJDIR	thirdparty/imgui/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/ImGUI$/;"	m
OBJDIR	thirdparty/imgui/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/ImGUI$/;"	m
OBJDIR	thirdparty/imguizmo/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/ImGuizmo$/;"	m
OBJDIR	thirdparty/imguizmo/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/ImGuizmo$/;"	m
OBJDIR	thirdparty/imguizmo/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/ImGuizmo$/;"	m
OBJDIR	thirdparty/json/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/Json$/;"	m
OBJDIR	thirdparty/json/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/Json$/;"	m
OBJDIR	thirdparty/json/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/Json$/;"	m
OBJDIR	thirdparty/opengl/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/OpenGL$/;"	m
OBJDIR	thirdparty/opengl/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/OpenGL$/;"	m
OBJDIR	thirdparty/opengl/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/OpenGL$/;"	m
OBJDIR	thirdparty/remotery/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/Remotery$/;"	m
OBJDIR	thirdparty/remotery/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/Remotery$/;"	m
OBJDIR	thirdparty/remotery/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/Remotery$/;"	m
OBJDIR	thirdparty/soloud/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/SoLoud$/;"	m
OBJDIR	thirdparty/soloud/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/SoLoud$/;"	m
OBJDIR	thirdparty/soloud/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/SoLoud$/;"	m
OBJDIR	thirdparty/stb/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/STB$/;"	m
OBJDIR	thirdparty/stb/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/STB$/;"	m
OBJDIR	thirdparty/stb/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/STB$/;"	m
OBJDIR	thirdparty/tinydir/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/development\/TinyDIR$/;"	m
OBJDIR	thirdparty/tinydir/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/release\/TinyDIR$/;"	m
OBJDIR	thirdparty/tinydir/data/Makefile	/^  OBJDIR     = ..\/..\/..\/output\/objects\/staging\/TinyDIR$/;"	m
OBJECTS	app/blank/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	app/fps_walk/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	app/perils/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	app/they_never_pay/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	app/tiles/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	lib/math/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	lib/nau/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	lib/nil_aspects/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	lib/roa/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	lib/rov/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	thirdparty/catch/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	thirdparty/glfw/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	thirdparty/imgui/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	thirdparty/imguizmo/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	thirdparty/json/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	thirdparty/opengl/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	thirdparty/remotery/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	thirdparty/soloud/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	thirdparty/stb/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECTS	thirdparty/tinydir/data/Makefile	/^OBJECTS := \\$/;"	m
OBJECT_INCLUDED_EC4C4710_83A5_4AC8_AF58_EAD6699152E9	lib/roa/include/roa/object.hpp	2;"	d
OC_TEST_CASE	thirdparty/catch/include/catch/catch.hpp	3059;"	d
OFFSETOF	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	262;"	d	file:
OFFSETOF	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	266;"	d	file:
OGL	lib/nil/include/nil/data/window.hpp	/^  enum { NONE, OGL }  type;$/;"	e	enum:Nil::Data::Window::__anon12
ONE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	ZERO				: 48,$/;"	p	class:namespace.Codes
OPENAL	thirdparty/soloud/include/soloud/soloud.h	/^			OPENAL,$/;"	e	enum:SoLoud::Soloud::BACKENDS
OPENMPT_H	thirdparty/soloud/include/soloud/soloud_openmpt.h	26;"	d
OPENSLES	thirdparty/soloud/include/soloud/soloud.h	/^			OPENSLES,$/;"	e	enum:SoLoud::Soloud::BACKENDS
OPEN_GL3_INCLUDED_F0DFC029_F493_471A_B85E_B9C512D3ABF9	lib/nau/include/nau/renderers/opengl3.h	2;"	d
OPEN_SQUARE_BRACKET	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	SINGLE_QUOTE		: 222,	\/\/ needs localization$/;"	p	class:namespace.Codes
OPERATION	thirdparty/imguizmo/include/imguizmo/ImGuizmo.h	/^	enum OPERATION$/;"	g	namespace:ImGuizmo
OPTIMIZATIONS_INCLUDED_2E400156_3060_4EDE_BE19_89C6645A7407	lib/lib/include/lib/optimizations.hpp	9;"	d
ORTHOGRAPHIC	lib/nil/include/nil/data/camera.hpp	/^  enum { PERSPECTIVE, ORTHOGRAPHIC } type;$/;"	e	enum:Nil::Data::Camera::__anon13
OSCRELOADVAL	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	6;"	d	file:
OSCRELOADVAL	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	8;"	d	file:
OSMESA_ACCUM_BITS	thirdparty/glfw/src/osmesa_context.h	32;"	d
OSMESA_COMPAT_PROFILE	thirdparty/glfw/src/osmesa_context.h	35;"	d
OSMESA_CONTEXT_MAJOR_VERSION	thirdparty/glfw/src/osmesa_context.h	36;"	d
OSMESA_CONTEXT_MINOR_VERSION	thirdparty/glfw/src/osmesa_context.h	37;"	d
OSMESA_CORE_PROFILE	thirdparty/glfw/src/osmesa_context.h	34;"	d
OSMESA_DEPTH_BITS	thirdparty/glfw/src/osmesa_context.h	30;"	d
OSMESA_FORMAT	thirdparty/glfw/src/osmesa_context.h	29;"	d
OSMESA_PROFILE	thirdparty/glfw/src/osmesa_context.h	33;"	d
OSMESA_RGBA	thirdparty/glfw/src/osmesa_context.h	28;"	d
OSMESA_STENCIL_BITS	thirdparty/glfw/src/osmesa_context.h	31;"	d
OSMESAproc	thirdparty/glfw/src/osmesa_context.h	/^typedef void (*OSMESAproc)();$/;"	t
OSMesaContext	thirdparty/glfw/src/osmesa_context.h	/^typedef void* OSMesaContext;$/;"	t
OSMesaCreateContextAttribs	thirdparty/glfw/src/osmesa_context.h	50;"	d
OSMesaCreateContextExt	thirdparty/glfw/src/osmesa_context.h	49;"	d
OSMesaDestroyContext	thirdparty/glfw/src/osmesa_context.h	51;"	d
OSMesaGetColorBuffer	thirdparty/glfw/src/osmesa_context.h	53;"	d
OSMesaGetDepthBuffer	thirdparty/glfw/src/osmesa_context.h	54;"	d
OSMesaGetProcAddress	thirdparty/glfw/src/osmesa_context.h	55;"	d
OSMesaMakeCurrent	thirdparty/glfw/src/osmesa_context.h	52;"	d
OSS	thirdparty/soloud/include/soloud/soloud.h	/^			OSS,$/;"	e	enum:SoLoud::Soloud::BACKENDS
OSSData	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^    struct OSSData$/;"	s	namespace:SoLoud	file:
OSS_DEVICES	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^    static const char *OSS_DEVICES[OSS_DEVICE_COUNT] = $/;"	m	namespace:SoLoud	file:
OSS_DEVICE_COUNT	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^    static const int OSS_DEVICE_COUNT = 4;$/;"	m	namespace:SoLoud	file:
OSXBehaviors	thirdparty/imgui/include/imgui/imgui.h	/^    bool          OSXBehaviors;             \/\/ = defined(__APPLE__) \/\/ OS X style: Text editing cursor movement using Alt instead of Ctrl, Shortcuts using Cmd\/Super instead of Ctrl, Line\/Text Start and End using Cmd+Arrows instead of Home\/End, Double click selects by word instead of selecting whole text, Multi-selection in lists uses Cmd\/Super instead of Ctrl$/;"	m	struct:ImGuiIO
OUTDIR	thirdparty/soloud/src/tools/codegen/main.cpp	33;"	d	file:
OUTDIR	thirdparty/soloud/src/tools/lutgen/main.cpp	31;"	d	file:
OUT_OF_MEMORY	thirdparty/soloud/include/soloud/soloud_error.h	/^		OUT_OF_MEMORY     = 5, \/\/ Out of memory$/;"	e	enum:SoLoud::SOLOUD_ERRORS
OUT_PART	thirdparty/soloud/src/audiosource/speech/tts.cpp	79;"	d	file:
OVERWRITE_ARRAY_SIZE	thirdparty/stb/include/stb/stb_image_resize.h	2297;"	d
O_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule O_rules[] =$/;"	v	file:
ObjConstructor	thirdparty/remotery/src/Remotery.c	/^typedef rmtError (*ObjConstructor)(void*);$/;"	t	file:
ObjDestructor	thirdparty/remotery/src/Remotery.c	/^typedef void (*ObjDestructor)(void*);$/;"	t	file:
Object	lib/roa/include/roa/object.hpp	/^class Object$/;"	c	namespace:ROA
Object	lib/roa/src/interface/object.cpp	/^Object::Object()$/;"	f	class:ROA::Object
Object	lib/roa/src/interface/object.cpp	/^Object::Object(const ROA_nullptr)$/;"	f	class:ROA::Object
Object	lib/roa/src/interface/object.cpp	/^Object::Object(const uint32_t instance_id)$/;"	f	class:ROA::Object
ObjectAllocator	thirdparty/remotery/src/Remotery.c	/^} ObjectAllocator;$/;"	t	typeref:struct:__anon55	file:
ObjectAllocator_Alloc	thirdparty/remotery/src/Remotery.c	/^static rmtError ObjectAllocator_Alloc(ObjectAllocator* allocator, void** object)$/;"	f	file:
ObjectAllocator_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError ObjectAllocator_Constructor(ObjectAllocator* allocator, rmtU32 object_size, ObjConstructor constructor, ObjDestructor destructor)$/;"	f	file:
ObjectAllocator_Destructor	thirdparty/remotery/src/Remotery.c	/^static void ObjectAllocator_Destructor(ObjectAllocator* allocator)$/;"	f	file:
ObjectAllocator_Free	thirdparty/remotery/src/Remotery.c	/^static void ObjectAllocator_Free(ObjectAllocator* allocator, void* object)$/;"	f	file:
ObjectAllocator_FreeRange	thirdparty/remotery/src/Remotery.c	/^static void ObjectAllocator_FreeRange(ObjectAllocator* allocator, void* start, void* end, rmtU32 count)$/;"	f	file:
ObjectAllocator_Pop	thirdparty/remotery/src/Remotery.c	/^static ObjectLink* ObjectAllocator_Pop(ObjectAllocator* allocator)$/;"	f	file:
ObjectAllocator_Push	thirdparty/remotery/src/Remotery.c	/^static void ObjectAllocator_Push(ObjectAllocator* allocator, ObjectLink* start, ObjectLink* end)$/;"	f	file:
ObjectLink	thirdparty/remotery/src/Remotery.c	/^} ObjectLink;$/;"	t	typeref:struct:ObjectLink_s	file:
ObjectLink_Constructor	thirdparty/remotery/src/Remotery.c	/^static void ObjectLink_Constructor(ObjectLink* link)$/;"	f	file:
ObjectLink_s	thirdparty/remotery/src/Remotery.c	/^typedef struct ObjectLink_s$/;"	s	file:
OfType	thirdparty/catch/include/catch/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
Offset	thirdparty/imgui/src/imgui.cpp	/^    ImU32           Offset;$/;"	m	struct:ImGuiStyleVarInfo	file:
OffsetNorm	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       OffsetNorm;     \/\/ Column start offset, normalized 0.0 (far left) -> 1.0 (far right)$/;"	m	struct:ImGuiColumnData
Ok	thirdparty/catch/include/catch/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
OnBufferEnd	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        void __stdcall OnBufferEnd(void *aBufferContext) $/;"	f	class:SoLoud::VoiceCallback	file:
OnBufferStart	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        void __stdcall OnBufferStart(void *aBufferContext) {}$/;"	f	class:SoLoud::VoiceCallback	file:
OnKeyPressed	thirdparty/imgui/src/imgui.cpp	/^void ImGuiTextEditState::OnKeyPressed(int key)$/;"	f	class:ImGuiTextEditState
OnLoopEnd	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        void __stdcall OnLoopEnd(void *aBufferContext) {}$/;"	f	class:SoLoud::VoiceCallback	file:
OnStreamEnd	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        void __stdcall OnStreamEnd() {}$/;"	f	class:SoLoud::VoiceCallback	file:
OnVoiceError	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        void __stdcall OnVoiceError(void *aBufferContext, HRESULT aError) {}$/;"	f	class:SoLoud::VoiceCallback	file:
OnVoiceProcessingPassEnd	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        void __stdcall OnVoiceProcessingPassEnd() {}$/;"	f	class:SoLoud::VoiceCallback	file:
OnVoiceProcessingPassStart	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        void __stdcall OnVoiceProcessingPassStart(UINT32 aBytesRequired) {}$/;"	f	class:SoLoud::VoiceCallback	file:
OpenGL	thirdparty/remotery/src/Remotery.c	/^typedef struct OpenGL_t OpenGL;$/;"	t	typeref:struct:OpenGL_t	file:
OpenGLSample	thirdparty/remotery/src/Remotery.c	/^typedef struct OpenGLSample$/;"	s	file:
OpenGLSample	thirdparty/remotery/src/Remotery.c	/^} OpenGLSample;$/;"	t	typeref:struct:OpenGLSample	file:
OpenGLSample_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError OpenGLSample_Constructor(OpenGLSample* sample)$/;"	f	file:
OpenGLSample_Destructor	thirdparty/remotery/src/Remotery.c	/^static void OpenGLSample_Destructor(OpenGLSample* sample)$/;"	f	file:
OpenGLTimestamp	thirdparty/remotery/src/Remotery.c	/^typedef struct OpenGLTimestamp$/;"	s	file:
OpenGLTimestamp	thirdparty/remotery/src/Remotery.c	/^} OpenGLTimestamp;$/;"	t	typeref:struct:OpenGLTimestamp	file:
OpenGLTimestamp_Begin	thirdparty/remotery/src/Remotery.c	/^static void OpenGLTimestamp_Begin(OpenGLTimestamp* stamp)$/;"	f	file:
OpenGLTimestamp_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError OpenGLTimestamp_Constructor(OpenGLTimestamp* stamp)$/;"	f	file:
OpenGLTimestamp_Destructor	thirdparty/remotery/src/Remotery.c	/^static void OpenGLTimestamp_Destructor(OpenGLTimestamp* stamp)$/;"	f	file:
OpenGLTimestamp_End	thirdparty/remotery/src/Remotery.c	/^static void OpenGLTimestamp_End(OpenGLTimestamp* stamp)$/;"	f	file:
OpenGLTimestamp_GetData	thirdparty/remotery/src/Remotery.c	/^static rmtBool OpenGLTimestamp_GetData(OpenGLTimestamp* stamp, rmtU64* out_start, rmtU64* out_end, rmtU64* out_first_timestamp)$/;"	f	file:
OpenGL_Create	thirdparty/remotery/src/Remotery.c	/^static rmtError OpenGL_Create(OpenGL** opengl)$/;"	f	file:
OpenGL_Destructor	thirdparty/remotery/src/Remotery.c	/^static void OpenGL_Destructor(OpenGL* opengl)$/;"	f	file:
OpenGL_t	thirdparty/remotery/src/Remotery.c	/^struct OpenGL_t$/;"	s	file:
OpenPopup	thirdparty/imgui/src/imgui.cpp	/^void ImGui::OpenPopup(const char* str_id)$/;"	f	class:ImGui
OpenPopupEx	thirdparty/imgui/src/imgui.cpp	/^void ImGui::OpenPopupEx(const char* str_id, bool reopen_existing)$/;"	f	class:ImGui
OpenPopupStack	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImGuiPopupRef> OpenPopupStack;                     \/\/ Which popups are open (persistent)$/;"	m	struct:ImGuiContext
Openmpt	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * Openmpt;$/;"	t
Openmpt	thirdparty/soloud/include/soloud/soloud_openmpt.h	/^	class Openmpt : public AudioSource$/;"	c	namespace:SoLoud
Openmpt	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt.cpp	/^	Openmpt::Openmpt()$/;"	f	class:SoLoud::Openmpt
OpenmptInstance	thirdparty/soloud/include/soloud/soloud_openmpt.h	/^	class OpenmptInstance : public AudioSourceInstance$/;"	c	namespace:SoLoud
OpenmptInstance	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt.cpp	/^	OpenmptInstance::OpenmptInstance(Openmpt *aParent)$/;"	f	class:SoLoud::OpenmptInstance
Openmpt_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * Openmpt_create()$/;"	f
Openmpt_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_destroy(void * aClassPtr)$/;"	f
Openmpt_load	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Openmpt_load(void * aClassPtr, const char * aFilename)$/;"	f
Openmpt_loadFile	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Openmpt_loadFile(void * aClassPtr, File * aFile)$/;"	f
Openmpt_loadMem	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Openmpt_loadMem(void * aClassPtr, unsigned char * aMem, unsigned int aLength)$/;"	f
Openmpt_loadMemEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Openmpt_loadMemEx(void * aClassPtr, unsigned char * aMem, unsigned int aLength, int aCopy, int aTakeOwnership)$/;"	f
Openmpt_set3dAttenuation	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_set3dAttenuation(void * aClassPtr, unsigned int aAttenuationModel, float aAttenuationRolloffFactor)$/;"	f
Openmpt_set3dAttenuator	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_set3dAttenuator(void * aClassPtr, AudioAttenuator * aAttenuator)$/;"	f
Openmpt_set3dCollider	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_set3dCollider(void * aClassPtr, AudioCollider * aCollider)$/;"	f
Openmpt_set3dColliderEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_set3dColliderEx(void * aClassPtr, AudioCollider * aCollider, int aUserData)$/;"	f
Openmpt_set3dDistanceDelay	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_set3dDistanceDelay(void * aClassPtr, int aDistanceDelay)$/;"	f
Openmpt_set3dDopplerFactor	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_set3dDopplerFactor(void * aClassPtr, float aDopplerFactor)$/;"	f
Openmpt_set3dListenerRelative	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_set3dListenerRelative(void * aClassPtr, int aListenerRelative)$/;"	f
Openmpt_set3dMinMaxDistance	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_set3dMinMaxDistance(void * aClassPtr, float aMinDistance, float aMaxDistance)$/;"	f
Openmpt_set3dProcessing	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_set3dProcessing(void * aClassPtr, int aDo3dProcessing)$/;"	f
Openmpt_setFilter	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_setFilter(void * aClassPtr, unsigned int aFilterId, Filter * aFilter)$/;"	f
Openmpt_setInaudibleBehavior	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_setInaudibleBehavior(void * aClassPtr, int aMustTick, int aKill)$/;"	f
Openmpt_setLooping	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_setLooping(void * aClassPtr, int aLoop)$/;"	f
Openmpt_setVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_setVolume(void * aClassPtr, float aVolume)$/;"	f
Openmpt_stop	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Openmpt_stop(void * aClassPtr)$/;"	f
Operator	thirdparty/catch/include/catch/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
OperatorTraits	thirdparty/catch/include/catch/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	thirdparty/catch/include/catch/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	thirdparty/catch/include/catch/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	thirdparty/catch/include/catch/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	thirdparty/catch/include/catch/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	thirdparty/catch/include/catch/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
Ord_twenties	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static const char *Ord_twenties[] =$/;"	v	file:
Ordinals	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static const char *Ordinals[] =$/;"	v	file:
OrthoNormalize	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void OrthoNormalize()$/;"	f	struct:ImGuizmo::matrix_t
OsImePosRequest	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  OsImePosRequest, OsImePosSet;       \/\/ Cursor position request & last passed to the OS Input Method Editor$/;"	m	struct:ImGuiContext
OsImePosSet	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  OsImePosRequest, OsImePosSet;       \/\/ Cursor position request & last passed to the OS Input Method Editor$/;"	m	struct:ImGuiContext
OscReload	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             OscReload[2];$/;"	m	class:TED
OscReload	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static int             OscReload[2];$/;"	v	file:
Overlaps	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool        Overlaps(const ImRect& r) const { return r.Min.y < Max.y  && r.Max.y > Min.y  && r.Min.x < Max.x && r.Max.x > Min.x; }$/;"	f	struct:ImRect
OverlayDrawList	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImDrawList              OverlayDrawList;                    \/\/ Optional software render of mouse cursors, if io.MouseDrawCursor is set + a few debug overlays$/;"	m	struct:ImGuiContext
OversampleH	thirdparty/imgui/include/imgui/imgui.h	/^    int             OversampleH, OversampleV;   \/\/ 3, 1     \/\/ Rasterize at higher quality for sub-pixel positioning. We don't use sub-pixel positions on the Y axis.$/;"	m	struct:ImFontConfig
OversampleV	thirdparty/imgui/include/imgui/imgui.h	/^    int             OversampleH, OversampleV;   \/\/ 3, 1     \/\/ Rasterize at higher quality for sub-pixel positioning. We don't use sub-pixel positions on the Y axis.$/;"	m	struct:ImFontConfig
P	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	O					: 79,$/;"	p	class:namespace.Codes
PACK	lib/lib/include/lib/packing.hpp	16;"	d
PACK	lib/lib/include/lib/packing.hpp	18;"	d
PACKING_INCLUDED_D28FC95F_63A7_4D4E_8515_6D6CEEDAA8D7	lib/lib/include/lib/packing.hpp	9;"	d
PAGEFLAG_continued_packet	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1395;"	d	file:
PAGEFLAG_continued_packet	thirdparty/stb/include/stb/stb_vorbis.c	1394;"	d	file:
PAGEFLAG_first_page	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1396;"	d	file:
PAGEFLAG_first_page	thirdparty/stb/include/stb/stb_vorbis.c	1395;"	d	file:
PAGEFLAG_last_page	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1397;"	d	file:
PAGEFLAG_last_page	thirdparty/stb/include/stb/stb_vorbis.c	1396;"	d	file:
PAGE_DOWN	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	PAGE_UP				: 33,	\/\/ also NUM_NORTH_EAST$/;"	p	class:namespace.Codes
PAGE_UP	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	SPACE				: 32,$/;"	p	class:namespace.Codes
PAL	thirdparty/soloud/include/soloud/soloud_vic.h	/^			PAL	= 0,$/;"	e	enum:SoLoud::Vic::__anon187
PANE_RENDERER	lib/roa/include/roa/shader_type.hpp	/^  PANE_RENDERER,$/;"	m	class:ROA::Shader_type
PARSEERROR	thirdparty/soloud/src/tools/codegen/main.cpp	200;"	d	file:
PAUSE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	ALT					: 18,$/;"	p	class:namespace.Codes
PAUSED	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			PAUSED = 4,$/;"	e	enum:SoLoud::AudioSourceInstance::FLAGS
PC	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int  PC;$/;"	m	class:CPU
PCHANGEFILTERSTRUCT	thirdparty/glfw/src/win32_platform.h	/^} CHANGEFILTERSTRUCT, *PCHANGEFILTERSTRUCT;$/;"	t	typeref:struct:tagCHANGEFILTERSTRUCT
PCPOINT	thirdparty/glfw/src/deps/mingw/dinput.h	/^} CPOINT, *PCPOINT;$/;"	t	typeref:struct:_CPOINT
PENDING	lib/roa/include/roa/resource_status.hpp	/^  PENDING,$/;"	m	class:ROA::Resource_status
PERIOD	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	COMMA				: 188,	\/\/ needs localization$/;"	p	class:namespace.Codes
PERSPECTIVE	lib/nil/include/nil/data/camera.hpp	/^  enum { PERSPECTIVE, ORTHOGRAPHIC } type;$/;"	e	enum:Nil::Data::Camera::__anon13
PFNGLACCUMPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLACCUMPROC)(GLenum op, GLfloat value);$/;"	t
PFNGLACTIVEPROGRAMEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t
PFNGLACTIVESHADERPROGRAMPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t
PFNGLACTIVETEXTUREPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC)(GLenum texture);$/;"	t
PFNGLACTIVETEXTUREPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLALPHAFUNCPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLALPHAFUNCPROC)(GLenum func, GLfloat ref);$/;"	t
PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC) (void);$/;"	t
PFNGLARETEXTURESRESIDENTPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTPROC)(GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	t
PFNGLARRAYELEMENTPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTPROC)(GLint i);$/;"	t
PFNGLATTACHSHADERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);$/;"	t
PFNGLATTACHSHADERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLBEGINCONDITIONALRENDERNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINCONDITIONALRENDERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id, GLenum mode);$/;"	t
PFNGLBEGINCONDITIONALRENDERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINPERFMONITORAMDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLBEGINPERFQUERYINTELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLBEGINPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBEGINPROC)(GLenum mode);$/;"	t
PFNGLBEGINQUERYINDEXEDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	thirdparty/remotery/src/Remotery.c	/^typedef void (GLAPIENTRY * PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t	file:
PFNGLBEGINTRANSFORMFEEDBACKPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC)(GLuint program, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDBUFFERBASEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERRANGEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERRANGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERSBASEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers);$/;"	t
PFNGLBINDBUFFERSRANGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);$/;"	t
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC)(GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAMEBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDFRAMEBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDIMAGETEXTUREPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);$/;"	t
PFNGLBINDIMAGETEXTURESPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);$/;"	t
PFNGLBINDMULTITEXTUREEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint texture);$/;"	t
PFNGLBINDPROGRAMPIPELINEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLBINDRENDERBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDRENDERBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDSAMPLERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t
PFNGLBINDSAMPLERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *samplers);$/;"	t
PFNGLBINDTEXTUREPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTUREPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTURESPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);$/;"	t
PFNGLBINDTEXTUREUNITPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);$/;"	t
PFNGLBINDTRANSFORMFEEDBACKPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDVERTEXARRAYPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC)(GLuint array);$/;"	t
PFNGLBINDVERTEXARRAYPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLBINDVERTEXBUFFERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);$/;"	t
PFNGLBITMAPPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBITMAPPROC)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);$/;"	t
PFNGLBLENDBARRIERKHRPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERKHRPROC) (void);$/;"	t
PFNGLBLENDBARRIERNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);$/;"	t
PFNGLBLENDCOLORPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLBLENDCOLORPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLBLENDEQUATIONIARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC)(GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCIARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);$/;"	t
PFNGLBLENDFUNCPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);$/;"	t
PFNGLBLENDFUNCSEPARATEIARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDPARAMETERINVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);$/;"	t
PFNGLBLITFRAMEBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBLITFRAMEBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBLITNAMEDFRAMEBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBUFFERADDRESSRANGENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);$/;"	t
PFNGLBUFFERDATAPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);$/;"	t
PFNGLBUFFERDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, GLenum usage);$/;"	t
PFNGLBUFFERPAGECOMMITMENTARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	t
PFNGLBUFFERSTORAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	t
PFNGLBUFFERSUBDATAPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLBUFFERSUBDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLCALLCOMMANDLISTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCALLCOMMANDLISTNVPROC) (GLuint list);$/;"	t
PFNGLCALLLISTPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCALLLISTPROC)(GLuint list);$/;"	t
PFNGLCALLLISTSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCALLLISTSPROC)(GLsizei n, GLenum type, const void *lists);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum target);$/;"	t
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum target);$/;"	t
PFNGLCLAMPCOLORPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC)(GLenum target, GLenum clamp);$/;"	t
PFNGLCLAMPCOLORPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLEARACCUMPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCLEARACCUMPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLCLEARBUFFERDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERFIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARBUFFERFIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARBUFFERFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC)(GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARBUFFERFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARBUFFERIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC)(GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARBUFFERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARBUFFERSUBDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERUIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC)(GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARBUFFERUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARCOLORPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLCLEARCOLORPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLCLEARDEPTHFPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t
PFNGLCLEARDEPTHPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHPROC)(GLdouble depth);$/;"	t
PFNGLCLEARDEPTHPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);$/;"	t
PFNGLCLEARINDEXPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCLEARINDEXPROC)(GLfloat c);$/;"	t
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERSUBDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCLEARPROC)(GLbitfield mask);$/;"	t
PFNGLCLEARPROC	thirdparty/glfw/src/internal.h	/^typedef void (APIENTRY * PFNGLCLEARPROC)(GLbitfield);$/;"	t
PFNGLCLEARPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);$/;"	t
PFNGLCLEARSTENCILPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCLEARSTENCILPROC)(GLint s);$/;"	t
PFNGLCLEARSTENCILPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);$/;"	t
PFNGLCLEARTEXIMAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARTEXSUBIMAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLIENTACTIVETEXTUREPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC)(GLenum texture);$/;"	t
PFNGLCLIENTATTRIBDEFAULTEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLCLIENTWAITSYNCPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLCLIENTWAITSYNCPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLCLIPCONTROLPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);$/;"	t
PFNGLCLIPPLANEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCLIPPLANEPROC)(GLenum plane, const GLdouble *equation);$/;"	t
PFNGLCOLOR3BPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLCOLOR3BVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3BVPROC)(const GLbyte *v);$/;"	t
PFNGLCOLOR3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLCOLOR3DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3DVPROC)(const GLdouble *v);$/;"	t
PFNGLCOLOR3FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLCOLOR3FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVPROC)(const GLfloat *v);$/;"	t
PFNGLCOLOR3IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3IPROC)(GLint red, GLint green, GLint blue);$/;"	t
PFNGLCOLOR3IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3IVPROC)(const GLint *v);$/;"	t
PFNGLCOLOR3SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLCOLOR3SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3SVPROC)(const GLshort *v);$/;"	t
PFNGLCOLOR3UBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLCOLOR3UBVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3UBVPROC)(const GLubyte *v);$/;"	t
PFNGLCOLOR3UIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLCOLOR3UIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3UIVPROC)(const GLuint *v);$/;"	t
PFNGLCOLOR3USPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLCOLOR3USVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR3USVPROC)(const GLushort *v);$/;"	t
PFNGLCOLOR4BPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4BPROC)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);$/;"	t
PFNGLCOLOR4BVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4BVPROC)(const GLbyte *v);$/;"	t
PFNGLCOLOR4DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4DPROC)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);$/;"	t
PFNGLCOLOR4DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4DVPROC)(const GLdouble *v);$/;"	t
PFNGLCOLOR4FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4FPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLCOLOR4FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4FVPROC)(const GLfloat *v);$/;"	t
PFNGLCOLOR4IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4IPROC)(GLint red, GLint green, GLint blue, GLint alpha);$/;"	t
PFNGLCOLOR4IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4IVPROC)(const GLint *v);$/;"	t
PFNGLCOLOR4SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4SPROC)(GLshort red, GLshort green, GLshort blue, GLshort alpha);$/;"	t
PFNGLCOLOR4SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4SVPROC)(const GLshort *v);$/;"	t
PFNGLCOLOR4UBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBPROC)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);$/;"	t
PFNGLCOLOR4UBVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVPROC)(const GLubyte *v);$/;"	t
PFNGLCOLOR4UIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4UIPROC)(GLuint red, GLuint green, GLuint blue, GLuint alpha);$/;"	t
PFNGLCOLOR4UIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4UIVPROC)(const GLuint *v);$/;"	t
PFNGLCOLOR4USPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4USPROC)(GLushort red, GLushort green, GLushort blue, GLushort alpha);$/;"	t
PFNGLCOLOR4USVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLOR4USVPROC)(const GLushort *v);$/;"	t
PFNGLCOLORFORMATNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLCOLORMASKIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORMASKIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORMASKPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLCOLORMASKPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLCOLORMATERIALPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLORMATERIALPROC)(GLenum face, GLenum mode);$/;"	t
PFNGLCOLORPOINTERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLCOMMANDLISTSEGMENTSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMMANDLISTSEGMENTSNVPROC) (GLuint list, GLuint segments);$/;"	t
PFNGLCOMPILECOMMANDLISTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILECOMMANDLISTNVPROC) (GLuint list);$/;"	t
PFNGLCOMPILESHADERINCLUDEARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);$/;"	t
PFNGLCOMPILESHADERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC)(GLuint shader);$/;"	t
PFNGLCOMPILESHADERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCONSERVATIVERASTERPARAMETERFNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERFNVPROC) (GLenum pname, GLfloat value);$/;"	t
PFNGLCONSERVATIVERASTERPARAMETERINVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLCOPYBUFFERSUBDATAPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYBUFFERSUBDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYIMAGESUBDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	t
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYNAMEDBUFFERSUBDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYPATHNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);$/;"	t
PFNGLCOPYPIXELSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOPYPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);$/;"	t
PFNGLCOPYTEXIMAGE1DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOVERAGEMODULATIONNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);$/;"	t
PFNGLCOVERAGEMODULATIONTABLENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat *v);$/;"	t
PFNGLCOVERFILLPATHINSTANCEDNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLCOVERFILLPATHNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLCOVERSTROKEPATHNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t
PFNGLCREATEBUFFERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLCREATECOMMANDLISTSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATECOMMANDLISTSNVPROC) (GLsizei n, GLuint *lists);$/;"	t
PFNGLCREATEFRAMEBUFFERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLCREATEPERFQUERYINTELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);$/;"	t
PFNGLCREATEPROGRAMPIPELINESPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLCREATEPROGRAMPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC)();$/;"	t
PFNGLCREATEPROGRAMPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t
PFNGLCREATEQUERIESPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint *ids);$/;"	t
PFNGLCREATERENDERBUFFERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLCREATESAMPLERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint *samplers);$/;"	t
PFNGLCREATESHADERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC)(GLenum type);$/;"	t
PFNGLCREATESHADERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t
PFNGLCREATESHADERPROGRAMEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);$/;"	t
PFNGLCREATESHADERPROGRAMVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar *const*strings);$/;"	t
PFNGLCREATESTATESNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATESTATESNVPROC) (GLsizei n, GLuint *states);$/;"	t
PFNGLCREATESYNCFROMCLEVENTARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struct _cl_event *event, GLbitfield flags);$/;"	t
PFNGLCREATETEXTURESPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint *textures);$/;"	t
PFNGLCREATETRANSFORMFEEDBACKSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLCREATEVERTEXARRAYSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLCULLFACEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLCULLFACEPROC)(GLenum mode);$/;"	t
PFNGLCULLFACEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);$/;"	t
PFNGLDEBUGMESSAGECALLBACKARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKKHRPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKKHRPROC)(GLDEBUGPROCKHR callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECONTROLARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGECONTROLKHRPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLKHRPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGECONTROLPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGECONTROLPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGEINSERTARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTKHRPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTKHRPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDELETEBUFFERSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEBUFFERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETECOMMANDLISTSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETECOMMANDLISTSNVPROC) (GLsizei n, const GLuint *lists);$/;"	t
PFNGLDELETEFRAMEBUFFERSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETEFRAMEBUFFERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETELISTSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDELETELISTSPROC)(GLuint list, GLsizei range);$/;"	t
PFNGLDELETENAMEDSTRINGARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLDELETEPATHSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);$/;"	t
PFNGLDELETEPERFMONITORSAMDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLDELETEPERFQUERYINTELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLDELETEPROGRAMPIPELINESPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t
PFNGLDELETEPROGRAMPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC)(GLuint program);$/;"	t
PFNGLDELETEPROGRAMPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLDELETEQUERIESPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERIESPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERIESPROC	thirdparty/remotery/src/Remotery.c	/^typedef void (GLAPIENTRY * PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint* ids);$/;"	t	file:
PFNGLDELETERENDERBUFFERSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC)(GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETERENDERBUFFERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETESAMPLERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t
PFNGLDELETESHADERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC)(GLuint shader);$/;"	t
PFNGLDELETESHADERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t
PFNGLDELETESTATESNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESTATESNVPROC) (GLsizei n, const GLuint *states);$/;"	t
PFNGLDELETESYNCPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC)(GLsync sync);$/;"	t
PFNGLDELETESYNCPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t
PFNGLDELETETEXTURESPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETETEXTURESPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETETRANSFORMFEEDBACKSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEVERTEXARRAYSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXARRAYSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDEPTHFUNCPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDEPTHFUNCPROC)(GLenum func);$/;"	t
PFNGLDEPTHFUNCPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);$/;"	t
PFNGLDEPTHMASKPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDEPTHMASKPROC)(GLboolean flag);$/;"	t
PFNGLDEPTHMASKPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);$/;"	t
PFNGLDEPTHRANGEARRAYVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);$/;"	t
PFNGLDEPTHRANGEFPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t
PFNGLDEPTHRANGEINDEXEDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t
PFNGLDEPTHRANGEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEPROC)(GLdouble near, GLdouble far);$/;"	t
PFNGLDEPTHRANGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble near, GLdouble far);$/;"	t
PFNGLDETACHSHADERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);$/;"	t
PFNGLDETACHSHADERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLDISABLECLIENTSTATEIEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLDISABLECLIENTSTATEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEPROC)(GLenum array);$/;"	t
PFNGLDISABLEINDEXEDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC)(GLenum target, GLuint index);$/;"	t
PFNGLDISABLEIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDISABLEPROC)(GLenum cap);$/;"	t
PFNGLDISABLEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);$/;"	t
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLDISABLEVERTEXARRAYATTRIBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLDISABLEVERTEXARRAYEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);$/;"	t
PFNGLDISPATCHCOMPUTEINDIRECTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t
PFNGLDISPATCHCOMPUTEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);$/;"	t
PFNGLDRAWARRAYSINDIRECTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);$/;"	t
PFNGLDRAWARRAYSINSTANCEDARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWARRAYSINSTANCEDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);$/;"	t
PFNGLDRAWARRAYSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWARRAYSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERPROC)(GLenum buf);$/;"	t
PFNGLDRAWBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum buf);$/;"	t
PFNGLDRAWBUFFERSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWCOMMANDSADDRESSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSADDRESSNVPROC) (GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);$/;"	t
PFNGLDRAWCOMMANDSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSNVPROC) (GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);$/;"	t
PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) (const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	t
PFNGLDRAWCOMMANDSSTATESNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESNVPROC) (GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	t
PFNGLDRAWELEMENTSBASEVERTEXPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSBASEVERTEXPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINDIRECTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);$/;"	t
PFNGLDRAWELEMENTSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices);$/;"	t
PFNGLDRAWELEMENTSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices);$/;"	t
PFNGLDRAWPIXELSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDRAWPIXELSPROC)(GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	t
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);$/;"	t
PFNGLDRAWVKIMAGENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWVKIMAGENVPROC) (GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);$/;"	t
PFNGLEDGEFLAGFORMATNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t
PFNGLEDGEFLAGPOINTERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERPROC)(GLsizei stride, const void *pointer);$/;"	t
PFNGLEDGEFLAGPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPROC)(GLboolean flag);$/;"	t
PFNGLEDGEFLAGVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGVPROC)(const GLboolean *flag);$/;"	t
PFNGLENABLECLIENTSTATEIEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLENABLECLIENTSTATEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEPROC)(GLenum array);$/;"	t
PFNGLENABLEINDEXEDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC)(GLenum target, GLuint index);$/;"	t
PFNGLENABLEIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLENABLEPROC)(GLenum cap);$/;"	t
PFNGLENABLEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);$/;"	t
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLENABLEVERTEXARRAYATTRIBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLENABLEVERTEXARRAYEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLENDCONDITIONALRENDERNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t
PFNGLENDCONDITIONALRENDERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC)();$/;"	t
PFNGLENDCONDITIONALRENDERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t
PFNGLENDLISTPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLENDLISTPROC)();$/;"	t
PFNGLENDPERFMONITORAMDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLENDPERFQUERYINTELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLENDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLENDPROC)();$/;"	t
PFNGLENDQUERYINDEXEDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENDQUERYPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC)(GLenum target);$/;"	t
PFNGLENDQUERYPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDQUERYPROC	thirdparty/remotery/src/Remotery.c	/^typedef void (GLAPIENTRY * PFNGLENDQUERYPROC) (GLenum target);$/;"	t	file:
PFNGLENDTRANSFORMFEEDBACKPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC)();$/;"	t
PFNGLENDTRANSFORMFEEDBACKPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLEVALCOORD1DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1DPROC)(GLdouble u);$/;"	t
PFNGLEVALCOORD1DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1DVPROC)(const GLdouble *u);$/;"	t
PFNGLEVALCOORD1FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1FPROC)(GLfloat u);$/;"	t
PFNGLEVALCOORD1FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1FVPROC)(const GLfloat *u);$/;"	t
PFNGLEVALCOORD2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2DPROC)(GLdouble u, GLdouble v);$/;"	t
PFNGLEVALCOORD2DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2DVPROC)(const GLdouble *u);$/;"	t
PFNGLEVALCOORD2FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2FPROC)(GLfloat u, GLfloat v);$/;"	t
PFNGLEVALCOORD2FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2FVPROC)(const GLfloat *u);$/;"	t
PFNGLEVALMESH1PROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEVALMESH1PROC)(GLenum mode, GLint i1, GLint i2);$/;"	t
PFNGLEVALMESH2PROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEVALMESH2PROC)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);$/;"	t
PFNGLEVALPOINT1PROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEVALPOINT1PROC)(GLint i);$/;"	t
PFNGLEVALPOINT2PROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLEVALPOINT2PROC)(GLint i, GLint j);$/;"	t
PFNGLEVALUATEDEPTHVALUESARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLEVALUATEDEPTHVALUESARBPROC) (void);$/;"	t
PFNGLFEEDBACKBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFEEDBACKBUFFERPROC)(GLsizei size, GLenum type, GLfloat *buffer);$/;"	t
PFNGLFENCESYNCPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);$/;"	t
PFNGLFENCESYNCPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t
PFNGLFINISHPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFINISHPROC)();$/;"	t
PFNGLFINISHPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFINISHPROC) (void);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFLUSHPROC)();$/;"	t
PFNGLFLUSHPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHPROC) (void);$/;"	t
PFNGLFOGCOORDDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC)(GLdouble coord);$/;"	t
PFNGLFOGCOORDDVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC)(const GLdouble *coord);$/;"	t
PFNGLFOGCOORDFORMATNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLFOGCOORDFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC)(GLfloat coord);$/;"	t
PFNGLFOGCOORDFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC)(const GLfloat *coord);$/;"	t
PFNGLFOGCOORDPOINTERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC)(GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLFOGFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFOGFPROC)(GLenum pname, GLfloat param);$/;"	t
PFNGLFOGFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFOGFVPROC)(GLenum pname, const GLfloat *params);$/;"	t
PFNGLFOGIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFOGIPROC)(GLenum pname, GLint param);$/;"	t
PFNGLFOGIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFOGIVPROC)(GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTCOVERAGECOLORNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOVERAGECOLORNVPROC) (GLuint color);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	t
PFNGLFRAMEBUFFERPARAMETERIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLenum target, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLenum target, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTUREARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);$/;"	t
PFNGLFRAMEBUFFERTEXTUREPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRONTFACEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFRONTFACEPROC)(GLenum mode);$/;"	t
PFNGLFRONTFACEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);$/;"	t
PFNGLFRUSTUMPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLFRUSTUMPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLGENBUFFERSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC)(GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENBUFFERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENERATEMIPMAPPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC)(GLenum target);$/;"	t
PFNGLGENERATEMIPMAPPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t
PFNGLGENERATETEXTUREMIPMAPEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t
PFNGLGENERATETEXTUREMIPMAPPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);$/;"	t
PFNGLGENFRAMEBUFFERSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENFRAMEBUFFERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENLISTSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLuint (APIENTRYP PFNGLGENLISTSPROC)(GLsizei range);$/;"	t
PFNGLGENPATHSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);$/;"	t
PFNGLGENPERFMONITORSAMDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLGENPROGRAMPIPELINESPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLGENQUERIESPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC)(GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERIESPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERIESPROC	thirdparty/remotery/src/Remotery.c	/^typedef void (GLAPIENTRY * PFNGLGENQUERIESPROC) (GLsizei n, GLuint* ids);$/;"	t	file:
PFNGLGENRENDERBUFFERSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENRENDERBUFFERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENSAMPLERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t
PFNGLGENTEXTURESPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESPROC)(GLsizei n, GLuint *textures);$/;"	t
PFNGLGENTEXTURESPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);$/;"	t
PFNGLGENTRANSFORMFEEDBACKSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENVERTEXARRAYSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint *arrays);$/;"	t
PFNGLGENVERTEXARRAYSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEATTRIBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEATTRIBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINENAMEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	t
PFNGLGETACTIVEUNIFORMNAMEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	t
PFNGLGETACTIVEUNIFORMNAMEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMSIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEUNIFORMSIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC)(GLuint program, const GLchar *name);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETBOOLEANINDEXEDVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBOOLEANI_VPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC)(GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBOOLEANI_VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBOOLEANVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean *data);$/;"	t
PFNGLGETBOOLEANVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *data);$/;"	t
PFNGLGETBUFFERPARAMETERI64VPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETBUFFERPARAMETERI64VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERUI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname, void **params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, void *data);$/;"	t
PFNGLGETCLIPPLANEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETCLIPPLANEPROC)(GLenum plane, GLdouble *equation);$/;"	t
PFNGLGETCOMMANDHEADERNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETCOMMANDHEADERNVPROC) (GLenum tokenID, GLuint size);$/;"	t
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint lod, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint level, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint lod, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETCOVERAGEMODULATIONTABLENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufsize, GLfloat *v);$/;"	t
PFNGLGETDEBUGMESSAGELOGARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDEBUGMESSAGELOGKHRPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGKHRPROC)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDEBUGMESSAGELOGPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDEBUGMESSAGELOGPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDOUBLEINDEXEDVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETDOUBLEI_VEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params);$/;"	t
PFNGLGETDOUBLEI_VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETDOUBLEVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble *data);$/;"	t
PFNGLGETDOUBLEVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *data);$/;"	t
PFNGLGETERRORPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLenum (APIENTRYP PFNGLGETERRORPROC)();$/;"	t
PFNGLGETERRORPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);$/;"	t
PFNGLGETERRORPROC	thirdparty/remotery/src/Remotery.c	/^typedef GLenum (GLAPIENTRY * PFNGLGETERRORPROC) (void);$/;"	t	file:
PFNGLGETFIRSTPERFQUERYIDINTELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);$/;"	t
PFNGLGETFLOATINDEXEDVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFLOATI_VEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);$/;"	t
PFNGLGETFLOATI_VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFLOATVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETFLOATVPROC)(GLenum pname, GLfloat *data);$/;"	t
PFNGLGETFLOATVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *data);$/;"	t
PFNGLGETFRAGDATAINDEXPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATALOCATIONPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC)(GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATALOCATIONPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC)();$/;"	t
PFNGLGETGRAPHICSRESETSTATUSARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) (void);$/;"	t
PFNGLGETIMAGEHANDLEARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	t
PFNGLGETIMAGEHANDLENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	t
PFNGLGETINTEGER64I_VPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index, GLint64 *data);$/;"	t
PFNGLGETINTEGER64I_VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t
PFNGLGETINTEGER64VPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64 *data);$/;"	t
PFNGLGETINTEGER64VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);$/;"	t
PFNGLGETINTEGERINDEXEDVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERI_VPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERI_VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERUI64I_VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);$/;"	t
PFNGLGETINTEGERUI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);$/;"	t
PFNGLGETINTEGERVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETINTEGERVPROC)(GLenum pname, GLint *data);$/;"	t
PFNGLGETINTEGERVPROC	thirdparty/glfw/src/internal.h	/^typedef void (APIENTRY * PFNGLGETINTEGERVPROC)(GLenum,GLint*);$/;"	t
PFNGLGETINTEGERVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *data);$/;"	t
PFNGLGETINTERNALFORMATI64VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);$/;"	t
PFNGLGETINTERNALFORMATIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETINTERNALFORMATSAMPLEIVNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETLIGHTFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETLIGHTFVPROC)(GLenum light, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETLIGHTIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETLIGHTIVPROC)(GLenum light, GLenum pname, GLint *params);$/;"	t
PFNGLGETMAPDVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETMAPDVPROC)(GLenum target, GLenum query, GLdouble *v);$/;"	t
PFNGLGETMAPFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETMAPFVPROC)(GLenum target, GLenum query, GLfloat *v);$/;"	t
PFNGLGETMAPIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETMAPIVPROC)(GLenum target, GLenum query, GLint *v);$/;"	t
PFNGLGETMATERIALFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETMATERIALFVPROC)(GLenum face, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMATERIALIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETMATERIALIVPROC)(GLenum face, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTISAMPLEFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETMULTISAMPLEFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETMULTITEXENVFVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXENVIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXGENDVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETMULTITEXGENFVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXGENIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXIMAGEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERFVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void **params);$/;"	t
PFNGLGETNAMEDBUFFERPOINTERVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void **params);$/;"	t
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);$/;"	t
PFNGLGETNAMEDBUFFERSUBDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum pname, GLint *param);$/;"	t
PFNGLGETNAMEDPROGRAMIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum pname, void *string);$/;"	t
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDSTRINGARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);$/;"	t
PFNGLGETNAMEDSTRINGIVARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);$/;"	t
PFNGLGETNCOLORTABLEARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNCOLORTABLEARBPROC)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);$/;"	t
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)(GLenum target, GLint lod, GLsizei bufSize, void *img);$/;"	t
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, void *img);$/;"	t
PFNGLGETNCOMPRESSEDTEXIMAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETNCONVOLUTIONFILTERARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);$/;"	t
PFNGLGETNEXTPERFQUERYIDINTELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);$/;"	t
PFNGLGETNHISTOGRAMARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNHISTOGRAMARBPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);$/;"	t
PFNGLGETNMAPDVARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNMAPDVARBPROC)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);$/;"	t
PFNGLGETNMAPFVARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNMAPFVARBPROC)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);$/;"	t
PFNGLGETNMAPIVARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNMAPIVARBPROC)(GLenum target, GLenum query, GLsizei bufSize, GLint *v);$/;"	t
PFNGLGETNMINMAXARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNMINMAXARBPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);$/;"	t
PFNGLGETNPIXELMAPFVARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPFVARBPROC)(GLenum map, GLsizei bufSize, GLfloat *values);$/;"	t
PFNGLGETNPIXELMAPUIVARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVARBPROC)(GLenum map, GLsizei bufSize, GLuint *values);$/;"	t
PFNGLGETNPIXELMAPUSVARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVARBPROC)(GLenum map, GLsizei bufSize, GLushort *values);$/;"	t
PFNGLGETNPOLYGONSTIPPLEARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC)(GLsizei bufSize, GLubyte *pattern);$/;"	t
PFNGLGETNSEPARABLEFILTERARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);$/;"	t
PFNGLGETNTEXIMAGEARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);$/;"	t
PFNGLGETNTEXIMAGEARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);$/;"	t
PFNGLGETNTEXIMAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETNUNIFORMDVARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
PFNGLGETNUNIFORMDVARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
PFNGLGETNUNIFORMDVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
PFNGLGETNUNIFORMFVARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMFVARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMI64VARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint64 *params);$/;"	t
PFNGLGETNUNIFORMIVARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMIVARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMUI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);$/;"	t
PFNGLGETNUNIFORMUIVARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
PFNGLGETNUNIFORMUIVARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
PFNGLGETNUNIFORMUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
PFNGLGETOBJECTLABELEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTLABELKHRPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELKHRPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTLABELPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTLABELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTPTRLABELKHRPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELKHRPROC)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTPTRLABELPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTPTRLABELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETPATHCOMMANDSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);$/;"	t
PFNGLGETPATHCOORDSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);$/;"	t
PFNGLGETPATHDASHARRAYNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);$/;"	t
PFNGLGETPATHLENGTHNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments);$/;"	t
PFNGLGETPATHMETRICRANGENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);$/;"	t
PFNGLGETPATHMETRICSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);$/;"	t
PFNGLGETPATHPARAMETERFVNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *value);$/;"	t
PFNGLGETPATHPARAMETERIVNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value);$/;"	t
PFNGLGETPATHSPACINGNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);$/;"	t
PFNGLGETPERFCOUNTERINFOINTELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);$/;"	t
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	t
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, void *data);$/;"	t
PFNGLGETPERFMONITORCOUNTERSAMDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	t
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	t
PFNGLGETPERFMONITORGROUPSAMDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	t
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	t
PFNGLGETPERFQUERYDATAINTELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);$/;"	t
PFNGLGETPERFQUERYIDBYNAMEINTELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId);$/;"	t
PFNGLGETPERFQUERYINFOINTELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);$/;"	t
PFNGLGETPIXELMAPFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETPIXELMAPFVPROC)(GLenum map, GLfloat *values);$/;"	t
PFNGLGETPIXELMAPUIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETPIXELMAPUIVPROC)(GLenum map, GLuint *values);$/;"	t
PFNGLGETPIXELMAPUSVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETPIXELMAPUSVPROC)(GLenum map, GLushort *values);$/;"	t
PFNGLGETPOINTERINDEXEDVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **data);$/;"	t
PFNGLGETPOINTERI_VEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);$/;"	t
PFNGLGETPOINTERVKHRPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVKHRPROC)(GLenum pname, void **params);$/;"	t
PFNGLGETPOINTERVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVPROC)(GLenum pname, void **params);$/;"	t
PFNGLGETPOINTERVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, void **params);$/;"	t
PFNGLGETPOLYGONSTIPPLEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETPOLYGONSTIPPLEPROC)(GLubyte *mask);$/;"	t
PFNGLGETPROGRAMBINARYPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMINTERFACEIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC)(GLuint program, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMPIPELINEIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMRESOURCEFVNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);$/;"	t
PFNGLGETPROGRAMRESOURCEINDEXPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCEIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCENAMEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETPROGRAMSTAGEIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);$/;"	t
PFNGLGETQUERYBUFFEROBJECTI64VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYBUFFEROBJECTIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYBUFFEROBJECTUI64VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYBUFFEROBJECTUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYINDEXEDIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTI64VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETQUERYOBJECTI64VPROC	thirdparty/remotery/src/Remotery.c	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64* params);$/;"	t	file:
PFNGLGETQUERYOBJECTIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC)(GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	thirdparty/remotery/src/Remotery.c	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint* params);$/;"	t	file:
PFNGLGETQUERYOBJECTUI64VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VPROC	thirdparty/remotery/src/Remotery.c	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64* params);$/;"	t	file:
PFNGLGETQUERYOBJECTUIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	thirdparty/remotery/src/Remotery.c	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint* params);$/;"	t	file:
PFNGLGETRENDERBUFFERPARAMETERIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERINFOLOGPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETSHADERINFOLOGPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETSHADERIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC)(GLuint shader, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERPRECISIONFORMATPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);$/;"	t
PFNGLGETSHADERSOURCEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
PFNGLGETSHADERSOURCEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
PFNGLGETSTAGEINDEXNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLushort (APIENTRYP PFNGLGETSTAGEINDEXNVPROC) (GLenum shadertype);$/;"	t
PFNGLGETSTRINGIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGIPROC)(GLenum name, GLuint index);$/;"	t
PFNGLGETSTRINGIPROC	thirdparty/glfw/src/internal.h	/^typedef const GLubyte* (APIENTRY * PFNGLGETSTRINGIPROC)(GLenum,GLuint);$/;"	t
PFNGLGETSTRINGIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t
PFNGLGETSTRINGPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGPROC)(GLenum name);$/;"	t
PFNGLGETSTRINGPROC	thirdparty/glfw/src/internal.h	/^typedef const GLubyte* (APIENTRY * PFNGLGETSTRINGPROC)(GLenum);$/;"	t
PFNGLGETSTRINGPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);$/;"	t
PFNGLGETSUBROUTINEINDEXPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSYNCIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLGETSYNCIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLGETTEXENVFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETTEXENVFVPROC)(GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXENVIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETTEXENVIVPROC)(GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXGENDVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETTEXGENDVPROC)(GLenum coord, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETTEXGENFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETTEXGENFVPROC)(GLenum coord, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXGENIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETTEXGENIVPROC)(GLenum coord, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXIMAGEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLGETTEXIMAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLGETTEXLEVELPARAMETERFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXLEVELPARAMETERFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXLEVELPARAMETERIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXLEVELPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXPARAMETERFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXPARAMETERIIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREHANDLEARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);$/;"	t
PFNGLGETTEXTUREHANDLENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);$/;"	t
PFNGLGETTEXTUREIMAGEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLGETTEXTUREIMAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERFVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTUREPARAMETERFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTURESAMPLERHANDLEARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler);$/;"	t
PFNGLGETTEXTURESAMPLERHANDLENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler);$/;"	t
PFNGLGETTEXTURESUBIMAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETTRANSFORMFEEDBACKI64_VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint64 *param);$/;"	t
PFNGLGETTRANSFORMFEEDBACKIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint *param);$/;"	t
PFNGLGETTRANSFORMFEEDBACKI_VPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint *param);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETUNIFORMBLOCKINDEXPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program, const GLchar *uniformBlockName);$/;"	t
PFNGLGETUNIFORMBLOCKINDEXPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);$/;"	t
PFNGLGETUNIFORMDVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);$/;"	t
PFNGLGETUNIFORMFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC)(GLuint program, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VARBPROC) (GLuint program, GLint location, GLint64 *params);$/;"	t
PFNGLGETUNIFORMI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT *params);$/;"	t
PFNGLGETUNIFORMINDICESPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);$/;"	t
PFNGLGETUNIFORMINDICESPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);$/;"	t
PFNGLGETUNIFORMIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC)(GLuint program, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC)(GLuint program, const GLchar *name);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETUNIFORMSUBROUTINEUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMUI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLuint64 *params);$/;"	t
PFNGLGETUNIFORMUI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);$/;"	t
PFNGLGETUNIFORMUIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC)(GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETVERTEXARRAYINDEXED64IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);$/;"	t
PFNGLGETVERTEXARRAYINDEXEDIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYINTEGERVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, void **param);$/;"	t
PFNGLGETVERTEXARRAYPOINTERVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **param);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC)(GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC)(GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBIIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC)(GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBLDVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBLI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBLUI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBLUI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index, GLenum pname, void **pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **pointer);$/;"	t
PFNGLGETVKPROCADDRNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLVULKANPROCNV (APIENTRYP PFNGLGETVKPROCADDRNVPROC) (const GLchar *name);$/;"	t
PFNGLHINTPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLHINTPROC)(GLenum target, GLenum mode);$/;"	t
PFNGLHINTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLINDEXDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINDEXDPROC)(GLdouble c);$/;"	t
PFNGLINDEXDVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINDEXDVPROC)(const GLdouble *c);$/;"	t
PFNGLINDEXFORMATNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLINDEXFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINDEXFPROC)(GLfloat c);$/;"	t
PFNGLINDEXFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINDEXFVPROC)(const GLfloat *c);$/;"	t
PFNGLINDEXIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINDEXIPROC)(GLint c);$/;"	t
PFNGLINDEXIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINDEXIVPROC)(const GLint *c);$/;"	t
PFNGLINDEXMASKPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINDEXMASKPROC)(GLuint mask);$/;"	t
PFNGLINDEXPOINTERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERPROC)(GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLINDEXSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINDEXSPROC)(GLshort c);$/;"	t
PFNGLINDEXSVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINDEXSVPROC)(const GLshort *c);$/;"	t
PFNGLINDEXUBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINDEXUBPROC)(GLubyte c);$/;"	t
PFNGLINDEXUBVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINDEXUBVPROC)(const GLubyte *c);$/;"	t
PFNGLINITNAMESPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINITNAMESPROC)();$/;"	t
PFNGLINSERTEVENTMARKEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t
PFNGLINTERLEAVEDARRAYSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLINTERLEAVEDARRAYSPROC)(GLenum format, GLsizei stride, const void *pointer);$/;"	t
PFNGLINTERPOLATEPATHSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);$/;"	t
PFNGLINVALIDATEBUFFERDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t
PFNGLINVALIDATEBUFFERSUBDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLINVALIDATEFRAMEBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLINVALIDATESUBFRAMEBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLINVALIDATETEXIMAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t
PFNGLINVALIDATETEXSUBIMAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLISBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC)(GLuint buffer);$/;"	t
PFNGLISBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERRESIDENTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLISCOMMANDLISTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISCOMMANDLISTNVPROC) (GLuint list);$/;"	t
PFNGLISENABLEDINDEXEDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC)(GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC)(GLenum cap);$/;"	t
PFNGLISENABLEDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);$/;"	t
PFNGLISFRAMEBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);$/;"	t
PFNGLISFRAMEBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t
PFNGLISIMAGEHANDLERESIDENTARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLISIMAGEHANDLERESIDENTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLISLISTPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLISLISTPROC)(GLuint list);$/;"	t
PFNGLISNAMEDBUFFERRESIDENTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLISNAMEDSTRINGARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLISPATHNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);$/;"	t
PFNGLISPOINTINFILLPATHNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x, GLfloat y);$/;"	t
PFNGLISPOINTINSTROKEPATHNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y);$/;"	t
PFNGLISPROGRAMPIPELINEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLISPROGRAMPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC)(GLuint program);$/;"	t
PFNGLISPROGRAMPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t
PFNGLISQUERYPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC)(GLuint id);$/;"	t
PFNGLISQUERYPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISRENDERBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);$/;"	t
PFNGLISRENDERBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t
PFNGLISSAMPLERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t
PFNGLISSHADERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC)(GLuint shader);$/;"	t
PFNGLISSHADERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t
PFNGLISSTATENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSTATENVPROC) (GLuint state);$/;"	t
PFNGLISSYNCPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC)(GLsync sync);$/;"	t
PFNGLISSYNCPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t
PFNGLISTEXTUREHANDLERESIDENTARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLISTEXTUREHANDLERESIDENTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLISTEXTUREPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC)(GLuint texture);$/;"	t
PFNGLISTEXTUREPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);$/;"	t
PFNGLISTRANSFORMFEEDBACKPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t
PFNGLISVERTEXARRAYPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC)(GLuint array);$/;"	t
PFNGLISVERTEXARRAYPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLLABELOBJECTEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, const GLchar *label);$/;"	t
PFNGLLIGHTFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLIGHTFPROC)(GLenum light, GLenum pname, GLfloat param);$/;"	t
PFNGLLIGHTFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLIGHTFVPROC)(GLenum light, GLenum pname, const GLfloat *params);$/;"	t
PFNGLLIGHTIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLIGHTIPROC)(GLenum light, GLenum pname, GLint param);$/;"	t
PFNGLLIGHTIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLIGHTIVPROC)(GLenum light, GLenum pname, const GLint *params);$/;"	t
PFNGLLIGHTMODELFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELFPROC)(GLenum pname, GLfloat param);$/;"	t
PFNGLLIGHTMODELFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELFVPROC)(GLenum pname, const GLfloat *params);$/;"	t
PFNGLLIGHTMODELIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELIPROC)(GLenum pname, GLint param);$/;"	t
PFNGLLIGHTMODELIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELIVPROC)(GLenum pname, const GLint *params);$/;"	t
PFNGLLINESTIPPLEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLINESTIPPLEPROC)(GLint factor, GLushort pattern);$/;"	t
PFNGLLINEWIDTHPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHPROC)(GLfloat width);$/;"	t
PFNGLLINEWIDTHPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);$/;"	t
PFNGLLINKPROGRAMPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC)(GLuint program);$/;"	t
PFNGLLINKPROGRAMPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t
PFNGLLISTBASEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLISTBASEPROC)(GLuint base);$/;"	t
PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) (GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	t
PFNGLLOADIDENTITYPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYPROC)();$/;"	t
PFNGLLOADMATRIXDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLOADMATRIXDPROC)(const GLdouble *m);$/;"	t
PFNGLLOADMATRIXFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLOADMATRIXFPROC)(const GLfloat *m);$/;"	t
PFNGLLOADNAMEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLOADNAMEPROC)(GLuint name);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC)(const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC)(const GLfloat *m);$/;"	t
PFNGLLOGICOPPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLLOGICOPPROC)(GLenum opcode);$/;"	t
PFNGLLOGICOPPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);$/;"	t
PFNGLMAKEBUFFERNONRESIDENTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLMAKEBUFFERRESIDENTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);$/;"	t
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);$/;"	t
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAP1DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMAP1DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);$/;"	t
PFNGLMAP1FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMAP1FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);$/;"	t
PFNGLMAP2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMAP2DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);$/;"	t
PFNGLMAP2FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMAP2FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);$/;"	t
PFNGLMAPBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void * (APIENTRYP PFNGLMAPBUFFERPROC)(GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERRANGEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void * (APIENTRYP PFNGLMAPBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPBUFFERRANGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPGRID1DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMAPGRID1DPROC)(GLint un, GLdouble u1, GLdouble u2);$/;"	t
PFNGLMAPGRID1FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMAPGRID1FPROC)(GLint un, GLfloat u1, GLfloat u2);$/;"	t
PFNGLMAPGRID2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMAPGRID2DPROC)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);$/;"	t
PFNGLMAPGRID2FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMAPGRID2FPROC)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);$/;"	t
PFNGLMAPNAMEDBUFFEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAPNAMEDBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPNAMEDBUFFERRANGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMATERIALFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMATERIALFPROC)(GLenum face, GLenum pname, GLfloat param);$/;"	t
PFNGLMATERIALFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMATERIALFVPROC)(GLenum face, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMATERIALIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMATERIALIPROC)(GLenum face, GLenum pname, GLint param);$/;"	t
PFNGLMATERIALIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMATERIALIVPROC)(GLenum face, GLenum pname, const GLint *params);$/;"	t
PFNGLMATRIXFRUSTUMEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXLOAD3X2FNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOAD3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOAD3X3FNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOAD3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADFEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADIDENTITYEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMODEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMATRIXMODEPROC)(GLenum mode);$/;"	t
PFNGLMATRIXMULT3X2FNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULT3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULT3X3FNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULT3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTFEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXORTHOEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXPOPEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXPUSHEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXROTATEDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXROTATEFEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXSCALEDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXSCALEFEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXTRANSLATEDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXTRANSLATEFEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMAXSHADERCOMPILERTHREADSARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSARBPROC) (GLuint count);$/;"	t
PFNGLMEMORYBARRIERBYREGIONPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);$/;"	t
PFNGLMEMORYBARRIERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t
PFNGLMINSAMPLESHADINGARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t
PFNGLMINSAMPLESHADINGPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);$/;"	t
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);$/;"	t
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);$/;"	t
PFNGLMULTITEXBUFFEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLMULTITEXCOORD1DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC)(GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC)(GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC)(GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC)(GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC)(GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC)(GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC)(GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC)(GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC)(GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC)(GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC)(GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC)(GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC)(GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC)(GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC)(GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC)(GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC)(GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC)(GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC)(GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC)(GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC)(GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC)(GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC)(GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC)(GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC)(GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC)(GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC)(GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORDPOINTEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLMULTITEXENVFEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXENVFVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXENVIEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXENVIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXGENDEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);$/;"	t
PFNGLMULTITEXGENDVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);$/;"	t
PFNGLMULTITEXGENFEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXGENFVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXGENIEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXGENIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXIMAGE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXIMAGE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXIMAGE3DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXPARAMETERFEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXPARAMETERFVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXPARAMETERIEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXPARAMETERIIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXPARAMETERIUIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLMULTITEXPARAMETERIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXRENDERBUFFEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLMULTITEXSUBIMAGE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE3DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTMATRIXDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTMATRIXDPROC)(const GLdouble *m);$/;"	t
PFNGLMULTMATRIXFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTMATRIXFPROC)(const GLfloat *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC)(const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC)(const GLfloat *m);$/;"	t
PFNGLNAMEDBUFFERDATAEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);$/;"	t
PFNGLNAMEDBUFFERDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);$/;"	t
PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	t
PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	t
PFNGLNAMEDBUFFERSTORAGEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	t
PFNGLNAMEDBUFFERSTORAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	t
PFNGLNAMEDBUFFERSUBDATAEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLNAMEDBUFFERSUBDATAPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum buf);$/;"	t
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	t
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pname, GLint param);$/;"	t
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pname, GLint param);$/;"	t
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum src);$/;"	t
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMSTRINGEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDSTRINGARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);$/;"	t
PFNGLNEWLISTPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLNEWLISTPROC)(GLuint list, GLenum mode);$/;"	t
PFNGLNORMAL3BPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLNORMAL3BPROC)(GLbyte nx, GLbyte ny, GLbyte nz);$/;"	t
PFNGLNORMAL3BVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLNORMAL3BVPROC)(const GLbyte *v);$/;"	t
PFNGLNORMAL3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLNORMAL3DPROC)(GLdouble nx, GLdouble ny, GLdouble nz);$/;"	t
PFNGLNORMAL3DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLNORMAL3DVPROC)(const GLdouble *v);$/;"	t
PFNGLNORMAL3FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLNORMAL3FPROC)(GLfloat nx, GLfloat ny, GLfloat nz);$/;"	t
PFNGLNORMAL3FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVPROC)(const GLfloat *v);$/;"	t
PFNGLNORMAL3IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLNORMAL3IPROC)(GLint nx, GLint ny, GLint nz);$/;"	t
PFNGLNORMAL3IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLNORMAL3IVPROC)(const GLint *v);$/;"	t
PFNGLNORMAL3SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLNORMAL3SPROC)(GLshort nx, GLshort ny, GLshort nz);$/;"	t
PFNGLNORMAL3SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLNORMAL3SVPROC)(const GLshort *v);$/;"	t
PFNGLNORMALFORMATNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLNORMALPOINTERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERPROC)(GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLOBJECTLABELKHRPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELKHRPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTLABELPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTLABELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPTRLABELKHRPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELKHRPROC)(const void *ptr, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPTRLABELPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC)(const void *ptr, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPTRLABELPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);$/;"	t
PFNGLORTHOPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLORTHOPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLPASSTHROUGHPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPASSTHROUGHPROC)(GLfloat token);$/;"	t
PFNGLPATCHPARAMETERFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t
PFNGLPATCHPARAMETERIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t
PFNGLPATHCOMMANDSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPATHCOORDSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPATHCOVERDEPTHFUNCNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);$/;"	t
PFNGLPATHDASHARRAYNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat *dashArray);$/;"	t
PFNGLPATHGLYPHINDEXARRAYNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHGLYPHINDEXRANGENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);$/;"	t
PFNGLPATHGLYPHRANGENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHGLYPHSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHPARAMETERFNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);$/;"	t
PFNGLPATHPARAMETERFVNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *value);$/;"	t
PFNGLPATHPARAMETERINVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);$/;"	t
PFNGLPATHPARAMETERIVNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *value);$/;"	t
PFNGLPATHSTENCILDEPTHOFFSETNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);$/;"	t
PFNGLPATHSTENCILFUNCNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLPATHSTRINGNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, const void *pathString);$/;"	t
PFNGLPATHSUBCOMMANDSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPATHSUBCOORDSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPAUSETRANSFORMFEEDBACKPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLPIXELMAPFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPIXELMAPFVPROC)(GLenum map, GLsizei mapsize, const GLfloat *values);$/;"	t
PFNGLPIXELMAPUIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPIXELMAPUIVPROC)(GLenum map, GLsizei mapsize, const GLuint *values);$/;"	t
PFNGLPIXELMAPUSVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPIXELMAPUSVPROC)(GLenum map, GLsizei mapsize, const GLushort *values);$/;"	t
PFNGLPIXELSTOREFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELSTOREFPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELSTOREIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);$/;"	t
PFNGLPIXELSTOREIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPIXELTRANSFERFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFERFPROC)(GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTRANSFERIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFERIPROC)(GLenum pname, GLint param);$/;"	t
PFNGLPIXELZOOMPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPIXELZOOMPROC)(GLfloat xfactor, GLfloat yfactor);$/;"	t
PFNGLPOINTALONGPATHNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);$/;"	t
PFNGLPOINTPARAMETERFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC)(GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTSIZEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEPROC)(GLfloat size);$/;"	t
PFNGLPOINTSIZEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);$/;"	t
PFNGLPOLYGONMODEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);$/;"	t
PFNGLPOLYGONMODEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLPOLYGONOFFSETCLAMPEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPEXTPROC) (GLfloat factor, GLfloat units, GLfloat clamp);$/;"	t
PFNGLPOLYGONOFFSETPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);$/;"	t
PFNGLPOLYGONOFFSETPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);$/;"	t
PFNGLPOLYGONSTIPPLEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOLYGONSTIPPLEPROC)(const GLubyte *mask);$/;"	t
PFNGLPOPATTRIBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOPATTRIBPROC)();$/;"	t
PFNGLPOPCLIENTATTRIBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOPCLIENTATTRIBPROC)();$/;"	t
PFNGLPOPDEBUGGROUPKHRPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPKHRPROC)();$/;"	t
PFNGLPOPDEBUGGROUPPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC)();$/;"	t
PFNGLPOPDEBUGGROUPPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t
PFNGLPOPGROUPMARKEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t
PFNGLPOPMATRIXPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOPMATRIXPROC)();$/;"	t
PFNGLPOPNAMEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPOPNAMEPROC)();$/;"	t
PFNGLPRIMITIVEBOUNDINGBOXARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPRIMITIVEBOUNDINGBOXARBPROC) (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);$/;"	t
PFNGLPRIMITIVERESTARTINDEXPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTINDEXPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t
PFNGLPRIORITIZETEXTURESPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESPROC)(GLsizei n, const GLuint *textures, const GLfloat *priorities);$/;"	t
PFNGLPROGRAMBINARYPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);$/;"	t
PFNGLPROGRAMPARAMETERIARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);$/;"	t
PFNGLPROGRAMUNIFORM1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble x);$/;"	t
PFNGLPROGRAMUNIFORM1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);$/;"	t
PFNGLPROGRAMUNIFORM1DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1FEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1I64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64ARBPROC) (GLuint program, GLint location, GLint64 x);$/;"	t
PFNGLPROGRAMUNIFORM1I64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64EXT x);$/;"	t
PFNGLPROGRAMUNIFORM1I64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM1I64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM1IEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UI64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64ARBPROC) (GLuint program, GLint location, GLuint64 x);$/;"	t
PFNGLPROGRAMUNIFORM1UI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x);$/;"	t
PFNGLPROGRAMUNIFORM1UI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM1UI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLPROGRAMUNIFORM2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);$/;"	t
PFNGLPROGRAMUNIFORM2DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2FEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2I64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y);$/;"	t
PFNGLPROGRAMUNIFORM2I64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLPROGRAMUNIFORM2I64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM2I64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM2IEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UI64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y);$/;"	t
PFNGLPROGRAMUNIFORM2UI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLPROGRAMUNIFORM2UI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM2UI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLPROGRAMUNIFORM3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);$/;"	t
PFNGLPROGRAMUNIFORM3DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3FEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3I64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);$/;"	t
PFNGLPROGRAMUNIFORM3I64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLPROGRAMUNIFORM3I64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM3I64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM3IEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UI64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);$/;"	t
PFNGLPROGRAMUNIFORM3UI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLPROGRAMUNIFORM3UI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM3UI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMUNIFORM4DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);$/;"	t
PFNGLPROGRAMUNIFORM4DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4FEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4I64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);$/;"	t
PFNGLPROGRAMUNIFORM4I64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLPROGRAMUNIFORM4I64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM4I64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM4IEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UI64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);$/;"	t
PFNGLPROGRAMUNIFORM4UI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLPROGRAMUNIFORM4UI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM4UI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, GLuint64 value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GLuint64 value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMUI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);$/;"	t
PFNGLPROGRAMUNIFORMUI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROVOKINGVERTEXPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC)(GLenum mode);$/;"	t
PFNGLPROVOKINGVERTEXPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t
PFNGLPUSHATTRIBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPUSHATTRIBPROC)(GLbitfield mask);$/;"	t
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLPUSHCLIENTATTRIBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBPROC)(GLbitfield mask);$/;"	t
PFNGLPUSHDEBUGGROUPKHRPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPKHRPROC)(GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	t
PFNGLPUSHDEBUGGROUPPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC)(GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	t
PFNGLPUSHDEBUGGROUPPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	t
PFNGLPUSHGROUPMARKEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t
PFNGLPUSHMATRIXPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPUSHMATRIXPROC)();$/;"	t
PFNGLPUSHNAMEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLPUSHNAMEPROC)(GLuint name);$/;"	t
PFNGLQUERYCOUNTERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t
PFNGLQUERYCOUNTERPROC	thirdparty/remotery/src/Remotery.c	/^typedef void (GLAPIENTRY * PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t	file:
PFNGLRASTERPOS2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2DPROC)(GLdouble x, GLdouble y);$/;"	t
PFNGLRASTERPOS2DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2DVPROC)(const GLdouble *v);$/;"	t
PFNGLRASTERPOS2FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2FPROC)(GLfloat x, GLfloat y);$/;"	t
PFNGLRASTERPOS2FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2FVPROC)(const GLfloat *v);$/;"	t
PFNGLRASTERPOS2IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2IPROC)(GLint x, GLint y);$/;"	t
PFNGLRASTERPOS2IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2IVPROC)(const GLint *v);$/;"	t
PFNGLRASTERPOS2SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2SPROC)(GLshort x, GLshort y);$/;"	t
PFNGLRASTERPOS2SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2SVPROC)(const GLshort *v);$/;"	t
PFNGLRASTERPOS3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLRASTERPOS3DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3DVPROC)(const GLdouble *v);$/;"	t
PFNGLRASTERPOS3FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLRASTERPOS3FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3FVPROC)(const GLfloat *v);$/;"	t
PFNGLRASTERPOS3IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3IPROC)(GLint x, GLint y, GLint z);$/;"	t
PFNGLRASTERPOS3IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3IVPROC)(const GLint *v);$/;"	t
PFNGLRASTERPOS3SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3SPROC)(GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLRASTERPOS3SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3SVPROC)(const GLshort *v);$/;"	t
PFNGLRASTERPOS4DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLRASTERPOS4DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4DVPROC)(const GLdouble *v);$/;"	t
PFNGLRASTERPOS4FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLRASTERPOS4FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4FVPROC)(const GLfloat *v);$/;"	t
PFNGLRASTERPOS4IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4IPROC)(GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLRASTERPOS4IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4IVPROC)(const GLint *v);$/;"	t
PFNGLRASTERPOS4SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLRASTERPOS4SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4SVPROC)(const GLshort *v);$/;"	t
PFNGLRASTERSAMPLESEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) (GLuint samples, GLboolean fixedsamplelocations);$/;"	t
PFNGLREADBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLREADBUFFERPROC)(GLenum src);$/;"	t
PFNGLREADBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum src);$/;"	t
PFNGLREADNPIXELSARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	t
PFNGLREADNPIXELSARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	t
PFNGLREADNPIXELSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	t
PFNGLREADPIXELSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLREADPIXELSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLRECTDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRECTDPROC)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);$/;"	t
PFNGLRECTDVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRECTDVPROC)(const GLdouble *v1, const GLdouble *v2);$/;"	t
PFNGLRECTFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRECTFPROC)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);$/;"	t
PFNGLRECTFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRECTFVPROC)(const GLfloat *v1, const GLfloat *v2);$/;"	t
PFNGLRECTIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRECTIPROC)(GLint x1, GLint y1, GLint x2, GLint y2);$/;"	t
PFNGLRECTIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRECTIVPROC)(const GLint *v1, const GLint *v2);$/;"	t
PFNGLRECTSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRECTSPROC)(GLshort x1, GLshort y1, GLshort x2, GLshort y2);$/;"	t
PFNGLRECTSVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRECTSVPROC)(const GLshort *v1, const GLshort *v2);$/;"	t
PFNGLRELEASESHADERCOMPILERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERMODEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLint (APIENTRYP PFNGLRENDERMODEPROC)(GLenum mode);$/;"	t
PFNGLRESOLVEDEPTHVALUESNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRESOLVEDEPTHVALUESNVPROC) (void);$/;"	t
PFNGLRESUMETRANSFORMFEEDBACKPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLROTATEDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLROTATEDPROC)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLROTATEFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLROTATEFPROC)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLSAMPLECOVERAGEARBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC)(GLfloat value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);$/;"	t
PFNGLSAMPLEMASKIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);$/;"	t
PFNGLSAMPLERPARAMETERFPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);$/;"	t
PFNGLSAMPLERPARAMETERFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	t
PFNGLSAMPLERPARAMETERIIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSAMPLERPARAMETERIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t
PFNGLSAMPLERPARAMETERIUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);$/;"	t
PFNGLSAMPLERPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSCALEDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSCALEDPROC)(GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLSCALEFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSCALEFPROC)(GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLSCISSORARRAYVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t
PFNGLSCISSORINDEXEDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);$/;"	t
PFNGLSCISSORINDEXEDVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLSCISSORPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLSCISSORPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLSECONDARYCOLOR3BPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC)(const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC)(const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC)(const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC)(GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC)(const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC)(const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3UBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC)(const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC)(const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3USPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC)(const GLushort *v);$/;"	t
PFNGLSECONDARYCOLORFORMATNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLSECONDARYCOLORPOINTERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLSELECTBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSELECTBUFFERPROC)(GLsizei size, GLuint *buffer);$/;"	t
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);$/;"	t
PFNGLSHADEMODELPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSHADEMODELPROC)(GLenum mode);$/;"	t
PFNGLSHADERBINARYPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);$/;"	t
PFNGLSHADERSOURCEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);$/;"	t
PFNGLSHADERSOURCEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);$/;"	t
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);$/;"	t
PFNGLSIGNALVKFENCENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSIGNALVKFENCENVPROC) (GLuint64 vkFence);$/;"	t
PFNGLSIGNALVKSEMAPHORENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSIGNALVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t
PFNGLSPECIALIZESHADERARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSPECIALIZESHADERARBPROC) (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);$/;"	t
PFNGLSTATECAPTURENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTATECAPTURENVPROC) (GLuint state, GLenum mode);$/;"	t
PFNGLSTENCILFILLPATHINSTANCEDNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILFILLPATHNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);$/;"	t
PFNGLSTENCILFUNCPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILMASKPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKPROC)(GLuint mask);$/;"	t
PFNGLSTENCILMASKPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILOPPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);$/;"	t
PFNGLSTENCILOPPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILSTROKEPATHNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask);$/;"	t
PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILTHENCOVERFILLPATHNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);$/;"	t
PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask, GLenum coverMode);$/;"	t
PFNGLSUBPIXELPRECISIONBIASNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSUBPIXELPRECISIONBIASNVPROC) (GLuint xbits, GLuint ybits);$/;"	t
PFNGLTEXBUFFERARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC)(GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERRANGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXCOORD1DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1DPROC)(GLdouble s);$/;"	t
PFNGLTEXCOORD1DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1DVPROC)(const GLdouble *v);$/;"	t
PFNGLTEXCOORD1FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1FPROC)(GLfloat s);$/;"	t
PFNGLTEXCOORD1FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1FVPROC)(const GLfloat *v);$/;"	t
PFNGLTEXCOORD1IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1IPROC)(GLint s);$/;"	t
PFNGLTEXCOORD1IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1IVPROC)(const GLint *v);$/;"	t
PFNGLTEXCOORD1SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1SPROC)(GLshort s);$/;"	t
PFNGLTEXCOORD1SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1SVPROC)(const GLshort *v);$/;"	t
PFNGLTEXCOORD2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2DPROC)(GLdouble s, GLdouble t);$/;"	t
PFNGLTEXCOORD2DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2DVPROC)(const GLdouble *v);$/;"	t
PFNGLTEXCOORD2FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FPROC)(GLfloat s, GLfloat t);$/;"	t
PFNGLTEXCOORD2FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVPROC)(const GLfloat *v);$/;"	t
PFNGLTEXCOORD2IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2IPROC)(GLint s, GLint t);$/;"	t
PFNGLTEXCOORD2IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2IVPROC)(const GLint *v);$/;"	t
PFNGLTEXCOORD2SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2SPROC)(GLshort s, GLshort t);$/;"	t
PFNGLTEXCOORD2SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2SVPROC)(const GLshort *v);$/;"	t
PFNGLTEXCOORD3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3DPROC)(GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLTEXCOORD3DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3DVPROC)(const GLdouble *v);$/;"	t
PFNGLTEXCOORD3FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3FPROC)(GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLTEXCOORD3FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3FVPROC)(const GLfloat *v);$/;"	t
PFNGLTEXCOORD3IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3IPROC)(GLint s, GLint t, GLint r);$/;"	t
PFNGLTEXCOORD3IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3IVPROC)(const GLint *v);$/;"	t
PFNGLTEXCOORD3SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3SPROC)(GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLTEXCOORD3SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3SVPROC)(const GLshort *v);$/;"	t
PFNGLTEXCOORD4DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4DPROC)(GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLTEXCOORD4DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4DVPROC)(const GLdouble *v);$/;"	t
PFNGLTEXCOORD4FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLTEXCOORD4FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVPROC)(const GLfloat *v);$/;"	t
PFNGLTEXCOORD4IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4IPROC)(GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLTEXCOORD4IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4IVPROC)(const GLint *v);$/;"	t
PFNGLTEXCOORD4SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4SPROC)(GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLTEXCOORD4SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4SVPROC)(const GLshort *v);$/;"	t
PFNGLTEXCOORDFORMATNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLTEXCOORDPOINTERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLTEXENVFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXENVFPROC)(GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXENVFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXENVFVPROC)(GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXENVIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXENVIPROC)(GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXENVIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXENVIVPROC)(GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXGENDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXGENDPROC)(GLenum coord, GLenum pname, GLdouble param);$/;"	t
PFNGLTEXGENDVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXGENDVPROC)(GLenum coord, GLenum pname, const GLdouble *params);$/;"	t
PFNGLTEXGENFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXGENFPROC)(GLenum coord, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXGENFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXGENFVPROC)(GLenum coord, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXGENIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXGENIPROC)(GLenum coord, GLenum pname, GLint param);$/;"	t
PFNGLTEXGENIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXGENIVPROC)(GLenum coord, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXIMAGE1DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXIMAGE1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXIMAGE2DMULTISAMPLEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE2DMULTISAMPLEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXIMAGE2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXIMAGE3DMULTISAMPLEPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DMULTISAMPLEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXIMAGE3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXPAGECOMMITMENTARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);$/;"	t
PFNGLTEXPARAMETERFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXPARAMETERFPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXPARAMETERFVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXPARAMETERFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXPARAMETERIIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXPARAMETERIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXPARAMETERIUIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXPARAMETERIUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXPARAMETERIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXSTORAGE1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXSUBIMAGE1DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXSUBIMAGE1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREBARRIERNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t
PFNGLTEXTUREBARRIERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) (void);$/;"	t
PFNGLTEXTUREBUFFEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXTUREBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXTUREBUFFERRANGEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXTUREBUFFERRANGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXTUREIMAGE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREIMAGE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREIMAGE3DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREPAGECOMMITMENTEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);$/;"	t
PFNGLTEXTUREPARAMETERFEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXTUREPARAMETERFPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXTUREPARAMETERFVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXTUREPARAMETERFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLfloat *param);$/;"	t
PFNGLTEXTUREPARAMETERIEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXTUREPARAMETERIIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint param);$/;"	t
PFNGLTEXTUREPARAMETERIUIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXTUREPARAMETERIUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXTUREPARAMETERIVEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLint *param);$/;"	t
PFNGLTEXTURERENDERBUFFEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLTEXTURESTORAGE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE3DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTURESUBIMAGE1DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE2DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE3DEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREVIEWPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);$/;"	t
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLuint buffer);$/;"	t
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMPATHNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLTRANSLATEDPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTRANSLATEDPROC)(GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLTRANSLATEFPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLTRANSLATEFPROC)(GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLUNIFORM1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t
PFNGLUNIFORM1DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM1FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC)(GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1I64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64ARBPROC) (GLint location, GLint64 x);$/;"	t
PFNGLUNIFORM1I64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	t
PFNGLUNIFORM1I64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM1I64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM1IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC)(GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC)(GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1UI64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64ARBPROC) (GLint location, GLuint64 x);$/;"	t
PFNGLUNIFORM1UI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	t
PFNGLUNIFORM1UI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM1UI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM1UIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC)(GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM1UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLUNIFORM2DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM2FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC)(GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2I64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64ARBPROC) (GLint location, GLint64 x, GLint64 y);$/;"	t
PFNGLUNIFORM2I64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLUNIFORM2I64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM2I64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM2IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC)(GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2UI64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y);$/;"	t
PFNGLUNIFORM2UI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLUNIFORM2UI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM2UI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM2UIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC)(GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLUNIFORM3DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM3FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC)(GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3I64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 z);$/;"	t
PFNGLUNIFORM3I64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLUNIFORM3I64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM3I64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM3IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC)(GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC)(GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3UI64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuint64 z);$/;"	t
PFNGLUNIFORM3UI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLUNIFORM3UI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM3UI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM3UIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC)(GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLUNIFORM4DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM4FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC)(GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4I64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);$/;"	t
PFNGLUNIFORM4I64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLUNIFORM4I64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM4I64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM4IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC)(GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4UI64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);$/;"	t
PFNGLUNIFORM4UI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLUNIFORM4UI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM4UI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM4UIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC)(GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORMBLOCKBINDINGPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	t
PFNGLUNIFORMBLOCKBINDINGPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	t
PFNGLUNIFORMHANDLEUI64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);$/;"	t
PFNGLUNIFORMHANDLEUI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);$/;"	t
PFNGLUNIFORMHANDLEUI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORMHANDLEUI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORMMATRIX2DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X3DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X3FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X3FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X4DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X4FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X4FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X2DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X2FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X2FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X4DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X4FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X4FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X2DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X2FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X2FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X3DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X3FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X3FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMSUBROUTINESUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);$/;"	t
PFNGLUNIFORMUI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t
PFNGLUNIFORMUI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNMAPBUFFERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC)(GLenum target);$/;"	t
PFNGLUNMAPBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUNMAPNAMEDBUFFEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t
PFNGLUNMAPNAMEDBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLUSEPROGRAMPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC)(GLuint program);$/;"	t
PFNGLUSEPROGRAMPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLUSEPROGRAMSTAGESPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	t
PFNGLUSESHADERPROGRAMEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMPIPELINEPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLVALIDATEPROGRAMPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC)(GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVERTEX2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX2DPROC)(GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEX2DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX2DVPROC)(const GLdouble *v);$/;"	t
PFNGLVERTEX2FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX2FPROC)(GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEX2FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX2FVPROC)(const GLfloat *v);$/;"	t
PFNGLVERTEX2IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX2IPROC)(GLint x, GLint y);$/;"	t
PFNGLVERTEX2IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX2IVPROC)(const GLint *v);$/;"	t
PFNGLVERTEX2SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX2SPROC)(GLshort x, GLshort y);$/;"	t
PFNGLVERTEX2SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX2SVPROC)(const GLshort *v);$/;"	t
PFNGLVERTEX3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX3DPROC)(GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEX3DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX3DVPROC)(const GLdouble *v);$/;"	t
PFNGLVERTEX3FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX3FPROC)(GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEX3FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX3FVPROC)(const GLfloat *v);$/;"	t
PFNGLVERTEX3IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX3IPROC)(GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEX3IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX3IVPROC)(const GLint *v);$/;"	t
PFNGLVERTEX3SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX3SPROC)(GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEX3SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX3SVPROC)(const GLshort *v);$/;"	t
PFNGLVERTEX4DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEX4DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX4DVPROC)(const GLdouble *v);$/;"	t
PFNGLVERTEX4FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEX4FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX4FVPROC)(const GLfloat *v);$/;"	t
PFNGLVERTEX4IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX4IPROC)(GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEX4IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX4IVPROC)(const GLint *v);$/;"	t
PFNGLVERTEX4SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEX4SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEX4SVPROC)(const GLshort *v);$/;"	t
PFNGLVERTEXARRAYATTRIBBINDINGPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXARRAYATTRIBFORMATPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYATTRIBIFORMATPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYATTRIBLFORMATPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYBINDINGDIVISORPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYELEMENTBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);$/;"	t
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXARRAYVERTEXBUFFERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLVERTEXARRAYVERTEXBUFFERSPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);$/;"	t
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXATTRIB1DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC)(GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC)(GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC)(GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC)(GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC)(GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC)(GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC)(GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC)(GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC)(GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC)(GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC)(GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC)(GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC)(GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC)(GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC)(GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC)(GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC)(GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC)(GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC)(GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC)(GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC)(GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC)(GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC)(GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC)(GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC)(GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBBINDINGPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXATTRIBDIVISORARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBDIVISORPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBFORMATNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBFORMATPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBI1IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC)(GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC)(GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC)(GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC)(GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC)(GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC)(GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC)(GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC)(GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4BVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC)(GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4BVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC)(GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4IVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC)(GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4SVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UIPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4USVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC)(GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBI4USVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBIFORMATNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBIFORMATPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBIPOINTERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBIPOINTERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBL1DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIBL1DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL1I64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1I64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL1UI64ARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1UI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1UI64VARBPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL1UI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL2DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIBL2DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL2I64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLVERTEXATTRIBL2I64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL2UI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLVERTEXATTRIBL2UI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL3DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIBL3DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL3I64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLVERTEXATTRIBL3I64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL3UI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLVERTEXATTRIBL3UI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL4DPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIBL4DVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL4I64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLVERTEXATTRIBL4I64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL4UI64NVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLVERTEXATTRIBL4UI64VNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBLFORMATNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBLFORMATPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBLPOINTERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBP1UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP1UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP2UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP2UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP3UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP3UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP4UIPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP4UIVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXBINDINGDIVISORPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXFORMATNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXPOINTERPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVIEWPORTARRAYVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVIEWPORTINDEXEDFPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);$/;"	t
PFNGLVIEWPORTINDEXEDFVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVIEWPORTPOSITIONWSCALENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPOSITIONWSCALENVPROC) (GLuint index, GLfloat xcoeff, GLfloat ycoeff);$/;"	t
PFNGLVIEWPORTPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLVIEWPORTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLVIEWPORTSWIZZLENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTSWIZZLENVPROC) (GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);$/;"	t
PFNGLWAITSYNCPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLWAITSYNCPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLWAITVKSEMAPHORENVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLWAITVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t
PFNGLWEIGHTPATHSNVPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);$/;"	t
PFNGLWINDOWPOS2DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC)(GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC)(const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC)(GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC)(const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC)(GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC)(const GLint *v);$/;"	t
PFNGLWINDOWPOS2SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC)(GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC)(const GLshort *v);$/;"	t
PFNGLWINDOWPOS3DPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC)(const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3FPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC)(const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3IPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC)(GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC)(const GLint *v);$/;"	t
PFNGLWINDOWPOS3SPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC)(GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SVPROC	thirdparty/glfw/src/deps/glad/glad.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC)(const GLshort *v);$/;"	t
PFNGLWINDOWRECTANGLESEXTPROC	thirdparty/opengl/include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLWINDOWRECTANGLESEXTPROC) (GLenum mode, GLsizei count, const GLint *box);$/;"	t
PFNGLXCREATECONTEXTATTRIBSARBPROC	thirdparty/glfw/src/glx_context.h	/^typedef GLXContext (*PFNGLXCREATECONTEXTATTRIBSARBPROC)(Display*,GLXFBConfig,GLXContext,Bool,const int*);$/;"	t
PFNGLXCREATENEWCONTEXTPROC	thirdparty/glfw/src/glx_context.h	/^typedef GLXContext (*PFNGLXCREATENEWCONTEXTPROC)(Display*,GLXFBConfig,int,GLXContext,Bool);$/;"	t
PFNGLXCREATEWINDOWPROC	thirdparty/glfw/src/glx_context.h	/^typedef GLXWindow (*PFNGLXCREATEWINDOWPROC)(Display*,GLXFBConfig,Window,const int*);$/;"	t
PFNGLXDESTROYCONTEXTPROC	thirdparty/glfw/src/glx_context.h	/^typedef void (*PFNGLXDESTROYCONTEXTPROC)(Display*,GLXContext);$/;"	t
PFNGLXDESTROYWINDOWPROC	thirdparty/glfw/src/glx_context.h	/^typedef void (*PFNGLXDESTROYWINDOWPROC)(Display*,GLXWindow);$/;"	t
PFNGLXGETCLIENTSTRINGPROC	thirdparty/glfw/src/glx_context.h	/^typedef const char* (*PFNGLXGETCLIENTSTRINGPROC)(Display*,int);$/;"	t
PFNGLXGETFBCONFIGATTRIBPROC	thirdparty/glfw/src/glx_context.h	/^typedef int (*PFNGLXGETFBCONFIGATTRIBPROC)(Display*,GLXFBConfig,int,int*);$/;"	t
PFNGLXGETFBCONFIGSPROC	thirdparty/glfw/src/glx_context.h	/^typedef GLXFBConfig* (*PFNGLXGETFBCONFIGSPROC)(Display*,int,int*);$/;"	t
PFNGLXGETPROCADDRESSPROC	thirdparty/glfw/src/glx_context.h	/^typedef __GLXextproc (* PFNGLXGETPROCADDRESSPROC)(const GLubyte *procName);$/;"	t
PFNGLXGETVISUALFROMFBCONFIGPROC	thirdparty/glfw/src/glx_context.h	/^typedef XVisualInfo* (*PFNGLXGETVISUALFROMFBCONFIGPROC)(Display*,GLXFBConfig);$/;"	t
PFNGLXMAKECURRENTPROC	thirdparty/glfw/src/glx_context.h	/^typedef Bool (*PFNGLXMAKECURRENTPROC)(Display*,GLXDrawable,GLXContext);$/;"	t
PFNGLXQUERYEXTENSIONPROC	thirdparty/glfw/src/glx_context.h	/^typedef Bool (*PFNGLXQUERYEXTENSIONPROC)(Display*,int*,int*);$/;"	t
PFNGLXQUERYEXTENSIONSSTRINGPROC	thirdparty/glfw/src/glx_context.h	/^typedef const char* (*PFNGLXQUERYEXTENSIONSSTRINGPROC)(Display*,int);$/;"	t
PFNGLXQUERYVERSIONPROC	thirdparty/glfw/src/glx_context.h	/^typedef Bool (*PFNGLXQUERYVERSIONPROC)(Display*,int*,int*);$/;"	t
PFNGLXSWAPBUFFERSPROC	thirdparty/glfw/src/glx_context.h	/^typedef void (*PFNGLXSWAPBUFFERSPROC)(Display*,GLXDrawable);$/;"	t
PFNGLXSWAPINTERVALEXTPROC	thirdparty/glfw/src/glx_context.h	/^typedef void (*PFNGLXSWAPINTERVALEXTPROC)(Display*,GLXDrawable,int);$/;"	t
PFNGLXSWAPINTERVALMESAPROC	thirdparty/glfw/src/glx_context.h	/^typedef int (*PFNGLXSWAPINTERVALMESAPROC)(int);$/;"	t
PFNGLXSWAPINTERVALSGIPROC	thirdparty/glfw/src/glx_context.h	/^typedef int (*PFNGLXSWAPINTERVALSGIPROC)(int);$/;"	t
PFNWGLCREATECONTEXTATTRIBSARBPROC	thirdparty/glfw/src/wgl_context.h	/^typedef HGLRC (WINAPI * PFNWGLCREATECONTEXTATTRIBSARBPROC)(HDC,HGLRC,const int*);$/;"	t
PFNWGLGETEXTENSIONSSTRINGARBPROC	thirdparty/glfw/src/wgl_context.h	/^typedef const char* (WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC)(HDC);$/;"	t
PFNWGLGETEXTENSIONSSTRINGEXTPROC	thirdparty/glfw/src/wgl_context.h	/^typedef const char* (WINAPI * PFNWGLGETEXTENSIONSSTRINGEXTPROC)(void);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVARBPROC	thirdparty/glfw/src/wgl_context.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC)(HDC,int,int,UINT,const int*,int*);$/;"	t
PFNWGLSWAPINTERVALEXTPROC	thirdparty/glfw/src/wgl_context.h	/^typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC)(int);$/;"	t
PFN_ChangeWindowMessageFilterEx	thirdparty/glfw/src/win32_platform.h	/^typedef BOOL (WINAPI * PFN_ChangeWindowMessageFilterEx)(HWND,UINT,DWORD,PCHANGEFILTERSTRUCT);$/;"	t
PFN_DirectInput8Create	thirdparty/glfw/src/win32_platform.h	/^typedef HRESULT (WINAPI * PFN_DirectInput8Create)(HINSTANCE,DWORD,REFIID,LPVOID*,LPUNKNOWN);$/;"	t
PFN_DwmFlush	thirdparty/glfw/src/win32_platform.h	/^typedef HRESULT (WINAPI * PFN_DwmFlush)(VOID);$/;"	t
PFN_DwmIsCompositionEnabled	thirdparty/glfw/src/win32_platform.h	/^typedef HRESULT (WINAPI * PFN_DwmIsCompositionEnabled)(BOOL*);$/;"	t
PFN_LMGetKbdType	thirdparty/glfw/src/cocoa_platform.h	/^typedef UInt8 (*PFN_LMGetKbdType)(void);$/;"	t
PFN_OSMesaCreateContextAttribs	thirdparty/glfw/src/osmesa_context.h	/^typedef OSMesaContext (GLAPIENTRY * PFN_OSMesaCreateContextAttribs)(const int*,OSMesaContext);$/;"	t
PFN_OSMesaCreateContextExt	thirdparty/glfw/src/osmesa_context.h	/^typedef OSMesaContext (GLAPIENTRY * PFN_OSMesaCreateContextExt)(GLenum,GLint,GLint,GLint,OSMesaContext);$/;"	t
PFN_OSMesaDestroyContext	thirdparty/glfw/src/osmesa_context.h	/^typedef void (GLAPIENTRY * PFN_OSMesaDestroyContext)(OSMesaContext);$/;"	t
PFN_OSMesaGetColorBuffer	thirdparty/glfw/src/osmesa_context.h	/^typedef int (GLAPIENTRY * PFN_OSMesaGetColorBuffer)(OSMesaContext,int*,int*,int*,void**);$/;"	t
PFN_OSMesaGetDepthBuffer	thirdparty/glfw/src/osmesa_context.h	/^typedef int (GLAPIENTRY * PFN_OSMesaGetDepthBuffer)(OSMesaContext,int*,int*,int*,void**);$/;"	t
PFN_OSMesaGetProcAddress	thirdparty/glfw/src/osmesa_context.h	/^typedef GLFWglproc (GLAPIENTRY * PFN_OSMesaGetProcAddress)(const char*);$/;"	t
PFN_OSMesaMakeCurrent	thirdparty/glfw/src/osmesa_context.h	/^typedef int (GLAPIENTRY * PFN_OSMesaMakeCurrent)(OSMesaContext,void*,int,int,int);$/;"	t
PFN_SetProcessDPIAware	thirdparty/glfw/src/win32_platform.h	/^typedef BOOL (WINAPI * PFN_SetProcessDPIAware)(void);$/;"	t
PFN_SetProcessDpiAwareness	thirdparty/glfw/src/win32_platform.h	/^typedef HRESULT (WINAPI * PFN_SetProcessDpiAwareness)(PROCESS_DPI_AWARENESS);$/;"	t
PFN_TISCopyCurrentKeyboardLayoutInputSource	thirdparty/glfw/src/cocoa_platform.h	/^typedef TISInputSourceRef (*PFN_TISCopyCurrentKeyboardLayoutInputSource)(void);$/;"	t
PFN_TISGetInputSourceProperty	thirdparty/glfw/src/cocoa_platform.h	/^typedef void* (*PFN_TISGetInputSourceProperty)(TISInputSourceRef,CFStringRef);$/;"	t
PFN_XF86VidModeGetGammaRamp	thirdparty/glfw/src/x11_platform.h	/^typedef Bool (* PFN_XF86VidModeGetGammaRamp)(Display*,int,int,unsigned short*,unsigned short*,unsigned short*);$/;"	t
PFN_XF86VidModeGetGammaRampSize	thirdparty/glfw/src/x11_platform.h	/^typedef Bool (* PFN_XF86VidModeGetGammaRampSize)(Display*,int,int*);$/;"	t
PFN_XF86VidModeQueryExtension	thirdparty/glfw/src/x11_platform.h	/^typedef Bool (* PFN_XF86VidModeQueryExtension)(Display*,int*,int*);$/;"	t
PFN_XF86VidModeSetGammaRamp	thirdparty/glfw/src/x11_platform.h	/^typedef Bool (* PFN_XF86VidModeSetGammaRamp)(Display*,int,int,unsigned short*,unsigned short*,unsigned short*);$/;"	t
PFN_XGetXCBConnection	thirdparty/glfw/src/x11_platform.h	/^typedef xcb_connection_t* (* PFN_XGetXCBConnection)(Display*);$/;"	t
PFN_XIQueryVersion	thirdparty/glfw/src/x11_platform.h	/^typedef Status (* PFN_XIQueryVersion)(Display*,int*,int*);$/;"	t
PFN_XISelectEvents	thirdparty/glfw/src/x11_platform.h	/^typedef int (* PFN_XISelectEvents)(Display*,Window,XIEventMask*,int);$/;"	t
PFN_XInputGetCapabilities	thirdparty/glfw/src/win32_platform.h	/^typedef DWORD (WINAPI * PFN_XInputGetCapabilities)(DWORD,DWORD,XINPUT_CAPABILITIES*);$/;"	t
PFN_XInputGetState	thirdparty/glfw/src/win32_platform.h	/^typedef DWORD (WINAPI * PFN_XInputGetState)(DWORD,XINPUT_STATE*);$/;"	t
PFN_eglBindAPI	thirdparty/glfw/src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglBindAPI)(EGLenum);$/;"	t
PFN_eglCreateContext	thirdparty/glfw/src/egl_context.h	/^typedef EGLContext (EGLAPIENTRY * PFN_eglCreateContext)(EGLDisplay,EGLConfig,EGLContext,const EGLint*);$/;"	t
PFN_eglCreateWindowSurface	thirdparty/glfw/src/egl_context.h	/^typedef EGLSurface (EGLAPIENTRY * PFN_eglCreateWindowSurface)(EGLDisplay,EGLConfig,EGLNativeWindowType,const EGLint*);$/;"	t
PFN_eglDestroyContext	thirdparty/glfw/src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglDestroyContext)(EGLDisplay,EGLContext);$/;"	t
PFN_eglDestroySurface	thirdparty/glfw/src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglDestroySurface)(EGLDisplay,EGLSurface);$/;"	t
PFN_eglGetConfigAttrib	thirdparty/glfw/src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglGetConfigAttrib)(EGLDisplay,EGLConfig,EGLint,EGLint*);$/;"	t
PFN_eglGetConfigs	thirdparty/glfw/src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglGetConfigs)(EGLDisplay,EGLConfig*,EGLint,EGLint*);$/;"	t
PFN_eglGetDisplay	thirdparty/glfw/src/egl_context.h	/^typedef EGLDisplay (EGLAPIENTRY * PFN_eglGetDisplay)(EGLNativeDisplayType);$/;"	t
PFN_eglGetError	thirdparty/glfw/src/egl_context.h	/^typedef EGLint (EGLAPIENTRY * PFN_eglGetError)(void);$/;"	t
PFN_eglGetProcAddress	thirdparty/glfw/src/egl_context.h	/^typedef GLFWglproc (EGLAPIENTRY * PFN_eglGetProcAddress)(const char*);$/;"	t
PFN_eglInitialize	thirdparty/glfw/src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglInitialize)(EGLDisplay,EGLint*,EGLint*);$/;"	t
PFN_eglMakeCurrent	thirdparty/glfw/src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglMakeCurrent)(EGLDisplay,EGLSurface,EGLSurface,EGLContext);$/;"	t
PFN_eglQueryString	thirdparty/glfw/src/egl_context.h	/^typedef const char* (EGLAPIENTRY * PFN_eglQueryString)(EGLDisplay,EGLint);$/;"	t
PFN_eglSwapBuffers	thirdparty/glfw/src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglSwapBuffers)(EGLDisplay,EGLSurface);$/;"	t
PFN_eglSwapInterval	thirdparty/glfw/src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglSwapInterval)(EGLDisplay,EGLint);$/;"	t
PFN_eglTerminate	thirdparty/glfw/src/egl_context.h	/^typedef EGLBoolean (EGLAPIENTRY * PFN_eglTerminate)(EGLDisplay);$/;"	t
PFN_timeGetTime	thirdparty/glfw/src/win32_platform.h	/^typedef DWORD (WINAPI * PFN_timeGetTime)(void);$/;"	t
PFN_vkAcquireNextImageKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkAcquireNextImageKHR)(VkDevice device, VkSwapchainKHR swapchain, uint64_t timeout, VkSemaphore semaphore, VkFence fence, uint32_t* pImageIndex);$/;"	t
PFN_vkAcquireXlibDisplayEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkAcquireXlibDisplayEXT)(VkPhysicalDevice physicalDevice, Display* dpy, VkDisplayKHR display);$/;"	t
PFN_vkAllocateCommandBuffers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkAllocateCommandBuffers)(VkDevice device, const VkCommandBufferAllocateInfo* pAllocateInfo, VkCommandBuffer* pCommandBuffers);$/;"	t
PFN_vkAllocateDescriptorSets	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkAllocateDescriptorSets)(VkDevice device, const VkDescriptorSetAllocateInfo* pAllocateInfo, VkDescriptorSet* pDescriptorSets);$/;"	t
PFN_vkAllocateMemory	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkAllocateMemory)(VkDevice device, const VkMemoryAllocateInfo* pAllocateInfo, const VkAllocationCallbacks* pAllocator, VkDeviceMemory* pMemory);$/;"	t
PFN_vkAllocationFunction	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void* (VKAPI_PTR *PFN_vkAllocationFunction)($/;"	t
PFN_vkBeginCommandBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkBeginCommandBuffer)(VkCommandBuffer commandBuffer, const VkCommandBufferBeginInfo* pBeginInfo);$/;"	t
PFN_vkBindBufferMemory	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkBindBufferMemory)(VkDevice device, VkBuffer buffer, VkDeviceMemory memory, VkDeviceSize memoryOffset);$/;"	t
PFN_vkBindImageMemory	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkBindImageMemory)(VkDevice device, VkImage image, VkDeviceMemory memory, VkDeviceSize memoryOffset);$/;"	t
PFN_vkCmdBeginQuery	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBeginQuery)(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t query, VkQueryControlFlags flags);$/;"	t
PFN_vkCmdBeginRenderPass	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBeginRenderPass)(VkCommandBuffer commandBuffer, const VkRenderPassBeginInfo* pRenderPassBegin, VkSubpassContents contents);$/;"	t
PFN_vkCmdBindDescriptorSets	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBindDescriptorSets)(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipelineLayout layout, uint32_t firstSet, uint32_t descriptorSetCount, const VkDescriptorSet* pDescriptorSets, uint32_t dynamicOffsetCount, const uint32_t* pDynamicOffsets);$/;"	t
PFN_vkCmdBindIndexBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBindIndexBuffer)(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkIndexType indexType);$/;"	t
PFN_vkCmdBindPipeline	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBindPipeline)(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipeline pipeline);$/;"	t
PFN_vkCmdBindVertexBuffers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBindVertexBuffers)(VkCommandBuffer commandBuffer, uint32_t firstBinding, uint32_t bindingCount, const VkBuffer* pBuffers, const VkDeviceSize* pOffsets);$/;"	t
PFN_vkCmdBlitImage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBlitImage)(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkImageBlit* pRegions, VkFilter filter);$/;"	t
PFN_vkCmdClearAttachments	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdClearAttachments)(VkCommandBuffer commandBuffer, uint32_t attachmentCount, const VkClearAttachment* pAttachments, uint32_t rectCount, const VkClearRect* pRects);$/;"	t
PFN_vkCmdClearColorImage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdClearColorImage)(VkCommandBuffer commandBuffer, VkImage image, VkImageLayout imageLayout, const VkClearColorValue* pColor, uint32_t rangeCount, const VkImageSubresourceRange* pRanges);$/;"	t
PFN_vkCmdClearDepthStencilImage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdClearDepthStencilImage)(VkCommandBuffer commandBuffer, VkImage image, VkImageLayout imageLayout, const VkClearDepthStencilValue* pDepthStencil, uint32_t rangeCount, const VkImageSubresourceRange* pRanges);$/;"	t
PFN_vkCmdCopyBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdCopyBuffer)(VkCommandBuffer commandBuffer, VkBuffer srcBuffer, VkBuffer dstBuffer, uint32_t regionCount, const VkBufferCopy* pRegions);$/;"	t
PFN_vkCmdCopyBufferToImage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdCopyBufferToImage)(VkCommandBuffer commandBuffer, VkBuffer srcBuffer, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkBufferImageCopy* pRegions);$/;"	t
PFN_vkCmdCopyImage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdCopyImage)(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkImageCopy* pRegions);$/;"	t
PFN_vkCmdCopyImageToBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdCopyImageToBuffer)(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkBuffer dstBuffer, uint32_t regionCount, const VkBufferImageCopy* pRegions);$/;"	t
PFN_vkCmdCopyQueryPoolResults	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdCopyQueryPoolResults)(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount, VkBuffer dstBuffer, VkDeviceSize dstOffset, VkDeviceSize stride, VkQueryResultFlags flags);$/;"	t
PFN_vkCmdDebugMarkerBeginEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDebugMarkerBeginEXT)(VkCommandBuffer commandBuffer, VkDebugMarkerMarkerInfoEXT* pMarkerInfo);$/;"	t
PFN_vkCmdDebugMarkerEndEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDebugMarkerEndEXT)(VkCommandBuffer commandBuffer);$/;"	t
PFN_vkCmdDebugMarkerInsertEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDebugMarkerInsertEXT)(VkCommandBuffer commandBuffer, VkDebugMarkerMarkerInfoEXT* pMarkerInfo);$/;"	t
PFN_vkCmdDispatch	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDispatch)(VkCommandBuffer commandBuffer, uint32_t x, uint32_t y, uint32_t z);$/;"	t
PFN_vkCmdDispatchIndirect	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDispatchIndirect)(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset);$/;"	t
PFN_vkCmdDraw	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDraw)(VkCommandBuffer commandBuffer, uint32_t vertexCount, uint32_t instanceCount, uint32_t firstVertex, uint32_t firstInstance);$/;"	t
PFN_vkCmdDrawIndexed	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDrawIndexed)(VkCommandBuffer commandBuffer, uint32_t indexCount, uint32_t instanceCount, uint32_t firstIndex, int32_t vertexOffset, uint32_t firstInstance);$/;"	t
PFN_vkCmdDrawIndexedIndirect	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDrawIndexedIndirect)(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, uint32_t drawCount, uint32_t stride);$/;"	t
PFN_vkCmdDrawIndexedIndirectCountAMD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDrawIndexedIndirectCountAMD)(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkBuffer countBuffer, VkDeviceSize countBufferOffset, uint32_t maxDrawCount, uint32_t stride);$/;"	t
PFN_vkCmdDrawIndirect	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDrawIndirect)(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, uint32_t drawCount, uint32_t stride);$/;"	t
PFN_vkCmdDrawIndirectCountAMD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDrawIndirectCountAMD)(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkBuffer countBuffer, VkDeviceSize countBufferOffset, uint32_t maxDrawCount, uint32_t stride);$/;"	t
PFN_vkCmdEndQuery	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdEndQuery)(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t query);$/;"	t
PFN_vkCmdEndRenderPass	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdEndRenderPass)(VkCommandBuffer commandBuffer);$/;"	t
PFN_vkCmdExecuteCommands	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdExecuteCommands)(VkCommandBuffer commandBuffer, uint32_t commandBufferCount, const VkCommandBuffer* pCommandBuffers);$/;"	t
PFN_vkCmdFillBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdFillBuffer)(VkCommandBuffer commandBuffer, VkBuffer dstBuffer, VkDeviceSize dstOffset, VkDeviceSize size, uint32_t data);$/;"	t
PFN_vkCmdNextSubpass	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdNextSubpass)(VkCommandBuffer commandBuffer, VkSubpassContents contents);$/;"	t
PFN_vkCmdPipelineBarrier	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdPipelineBarrier)(VkCommandBuffer commandBuffer, VkPipelineStageFlags srcStageMask, VkPipelineStageFlags dstStageMask, VkDependencyFlags dependencyFlags, uint32_t memoryBarrierCount, const VkMemoryBarrier* pMemoryBarriers, uint32_t bufferMemoryBarrierCount, const VkBufferMemoryBarrier* pBufferMemoryBarriers, uint32_t imageMemoryBarrierCount, const VkImageMemoryBarrier* pImageMemoryBarriers);$/;"	t
PFN_vkCmdProcessCommandsNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdProcessCommandsNVX)(VkCommandBuffer commandBuffer, const VkCmdProcessCommandsInfoNVX* pProcessCommandsInfo);$/;"	t
PFN_vkCmdPushConstants	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdPushConstants)(VkCommandBuffer commandBuffer, VkPipelineLayout layout, VkShaderStageFlags stageFlags, uint32_t offset, uint32_t size, const void* pValues);$/;"	t
PFN_vkCmdReserveSpaceForCommandsNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdReserveSpaceForCommandsNVX)(VkCommandBuffer commandBuffer, const VkCmdReserveSpaceForCommandsInfoNVX* pReserveSpaceInfo);$/;"	t
PFN_vkCmdResetEvent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdResetEvent)(VkCommandBuffer commandBuffer, VkEvent event, VkPipelineStageFlags stageMask);$/;"	t
PFN_vkCmdResetQueryPool	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdResetQueryPool)(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount);$/;"	t
PFN_vkCmdResolveImage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdResolveImage)(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkImageResolve* pRegions);$/;"	t
PFN_vkCmdSetBlendConstants	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetBlendConstants)(VkCommandBuffer commandBuffer, const float blendConstants[4]);$/;"	t
PFN_vkCmdSetDepthBias	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetDepthBias)(VkCommandBuffer commandBuffer, float depthBiasConstantFactor, float depthBiasClamp, float depthBiasSlopeFactor);$/;"	t
PFN_vkCmdSetDepthBounds	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetDepthBounds)(VkCommandBuffer commandBuffer, float minDepthBounds, float maxDepthBounds);$/;"	t
PFN_vkCmdSetEvent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetEvent)(VkCommandBuffer commandBuffer, VkEvent event, VkPipelineStageFlags stageMask);$/;"	t
PFN_vkCmdSetLineWidth	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetLineWidth)(VkCommandBuffer commandBuffer, float lineWidth);$/;"	t
PFN_vkCmdSetScissor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetScissor)(VkCommandBuffer commandBuffer, uint32_t firstScissor, uint32_t scissorCount, const VkRect2D* pScissors);$/;"	t
PFN_vkCmdSetStencilCompareMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetStencilCompareMask)(VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, uint32_t compareMask);$/;"	t
PFN_vkCmdSetStencilReference	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetStencilReference)(VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, uint32_t reference);$/;"	t
PFN_vkCmdSetStencilWriteMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetStencilWriteMask)(VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, uint32_t writeMask);$/;"	t
PFN_vkCmdSetViewport	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetViewport)(VkCommandBuffer commandBuffer, uint32_t firstViewport, uint32_t viewportCount, const VkViewport* pViewports);$/;"	t
PFN_vkCmdUpdateBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdUpdateBuffer)(VkCommandBuffer commandBuffer, VkBuffer dstBuffer, VkDeviceSize dstOffset, VkDeviceSize dataSize, const void* pData);$/;"	t
PFN_vkCmdWaitEvents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdWaitEvents)(VkCommandBuffer commandBuffer, uint32_t eventCount, const VkEvent* pEvents, VkPipelineStageFlags srcStageMask, VkPipelineStageFlags dstStageMask, uint32_t memoryBarrierCount, const VkMemoryBarrier* pMemoryBarriers, uint32_t bufferMemoryBarrierCount, const VkBufferMemoryBarrier* pBufferMemoryBarriers, uint32_t imageMemoryBarrierCount, const VkImageMemoryBarrier* pImageMemoryBarriers);$/;"	t
PFN_vkCmdWriteTimestamp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdWriteTimestamp)(VkCommandBuffer commandBuffer, VkPipelineStageFlagBits pipelineStage, VkQueryPool queryPool, uint32_t query);$/;"	t
PFN_vkCreateAndroidSurfaceKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateAndroidSurfaceKHR)(VkInstance instance, const VkAndroidSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreateBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateBuffer)(VkDevice device, const VkBufferCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkBuffer* pBuffer);$/;"	t
PFN_vkCreateBufferView	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateBufferView)(VkDevice device, const VkBufferViewCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkBufferView* pView);$/;"	t
PFN_vkCreateCommandPool	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateCommandPool)(VkDevice device, const VkCommandPoolCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkCommandPool* pCommandPool);$/;"	t
PFN_vkCreateComputePipelines	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateComputePipelines)(VkDevice device, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkComputePipelineCreateInfo* pCreateInfos, const VkAllocationCallbacks* pAllocator, VkPipeline* pPipelines);$/;"	t
PFN_vkCreateDebugReportCallbackEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateDebugReportCallbackEXT)(VkInstance instance, const VkDebugReportCallbackCreateInfoEXT* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDebugReportCallbackEXT* pCallback);$/;"	t
PFN_vkCreateDescriptorPool	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateDescriptorPool)(VkDevice device, const VkDescriptorPoolCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDescriptorPool* pDescriptorPool);$/;"	t
PFN_vkCreateDescriptorSetLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateDescriptorSetLayout)(VkDevice device, const VkDescriptorSetLayoutCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDescriptorSetLayout* pSetLayout);$/;"	t
PFN_vkCreateDevice	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateDevice)(VkPhysicalDevice physicalDevice, const VkDeviceCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDevice* pDevice);$/;"	t
PFN_vkCreateDisplayModeKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateDisplayModeKHR)(VkPhysicalDevice physicalDevice, VkDisplayKHR display, const VkDisplayModeCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDisplayModeKHR* pMode);$/;"	t
PFN_vkCreateDisplayPlaneSurfaceKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateDisplayPlaneSurfaceKHR)(VkInstance instance, const VkDisplaySurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreateEvent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateEvent)(VkDevice device, const VkEventCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkEvent* pEvent);$/;"	t
PFN_vkCreateFence	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateFence)(VkDevice device, const VkFenceCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkFence* pFence);$/;"	t
PFN_vkCreateFramebuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateFramebuffer)(VkDevice device, const VkFramebufferCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkFramebuffer* pFramebuffer);$/;"	t
PFN_vkCreateGraphicsPipelines	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateGraphicsPipelines)(VkDevice device, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkGraphicsPipelineCreateInfo* pCreateInfos, const VkAllocationCallbacks* pAllocator, VkPipeline* pPipelines);$/;"	t
PFN_vkCreateImage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateImage)(VkDevice device, const VkImageCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkImage* pImage);$/;"	t
PFN_vkCreateImageView	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateImageView)(VkDevice device, const VkImageViewCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkImageView* pView);$/;"	t
PFN_vkCreateIndirectCommandsLayoutNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateIndirectCommandsLayoutNVX)(VkDevice device, const VkIndirectCommandsLayoutCreateInfoNVX* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkIndirectCommandsLayoutNVX* pIndirectCommandsLayout);$/;"	t
PFN_vkCreateInstance	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateInstance)(const VkInstanceCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkInstance* pInstance);$/;"	t
PFN_vkCreateMacOSSurfaceMVK	thirdparty/glfw/src/cocoa_platform.h	/^typedef VkResult (APIENTRY *PFN_vkCreateMacOSSurfaceMVK)(VkInstance,const VkMacOSSurfaceCreateInfoMVK*,const VkAllocationCallbacks*,VkSurfaceKHR*);$/;"	t
PFN_vkCreateMirSurfaceKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateMirSurfaceKHR)(VkInstance instance, const VkMirSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreateMirWindowKHR	thirdparty/glfw/src/mir_platform.h	/^typedef VkResult (APIENTRY *PFN_vkCreateMirWindowKHR)(VkInstance,const VkMirWindowCreateInfoKHR*,const VkAllocationCallbacks*,VkSurfaceKHR*);$/;"	t
PFN_vkCreateObjectTableNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateObjectTableNVX)(VkDevice device, const VkObjectTableCreateInfoNVX* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkObjectTableNVX* pObjectTable);$/;"	t
PFN_vkCreatePipelineCache	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreatePipelineCache)(VkDevice device, const VkPipelineCacheCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkPipelineCache* pPipelineCache);$/;"	t
PFN_vkCreatePipelineLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreatePipelineLayout)(VkDevice device, const VkPipelineLayoutCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkPipelineLayout* pPipelineLayout);$/;"	t
PFN_vkCreateQueryPool	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateQueryPool)(VkDevice device, const VkQueryPoolCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkQueryPool* pQueryPool);$/;"	t
PFN_vkCreateRenderPass	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateRenderPass)(VkDevice device, const VkRenderPassCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkRenderPass* pRenderPass);$/;"	t
PFN_vkCreateSampler	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateSampler)(VkDevice device, const VkSamplerCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSampler* pSampler);$/;"	t
PFN_vkCreateSemaphore	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateSemaphore)(VkDevice device, const VkSemaphoreCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSemaphore* pSemaphore);$/;"	t
PFN_vkCreateShaderModule	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateShaderModule)(VkDevice device, const VkShaderModuleCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkShaderModule* pShaderModule);$/;"	t
PFN_vkCreateSharedSwapchainsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateSharedSwapchainsKHR)(VkDevice device, uint32_t swapchainCount, const VkSwapchainCreateInfoKHR* pCreateInfos, const VkAllocationCallbacks* pAllocator, VkSwapchainKHR* pSwapchains);$/;"	t
PFN_vkCreateSwapchainKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateSwapchainKHR)(VkDevice device, const VkSwapchainCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSwapchainKHR* pSwapchain);$/;"	t
PFN_vkCreateViSurfaceNN	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateViSurfaceNN)(VkInstance instance, const VkViSurfaceCreateInfoNN* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreateWaylandSurfaceKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateWaylandSurfaceKHR)(VkInstance instance, const VkWaylandSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreateWaylandSurfaceKHR	thirdparty/glfw/src/wl_platform.h	/^typedef VkResult (APIENTRY *PFN_vkCreateWaylandSurfaceKHR)(VkInstance,const VkWaylandSurfaceCreateInfoKHR*,const VkAllocationCallbacks*,VkSurfaceKHR*);$/;"	t
PFN_vkCreateWin32SurfaceKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateWin32SurfaceKHR)(VkInstance instance, const VkWin32SurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreateWin32SurfaceKHR	thirdparty/glfw/src/win32_platform.h	/^typedef VkResult (APIENTRY *PFN_vkCreateWin32SurfaceKHR)(VkInstance,const VkWin32SurfaceCreateInfoKHR*,const VkAllocationCallbacks*,VkSurfaceKHR*);$/;"	t
PFN_vkCreateXcbSurfaceKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateXcbSurfaceKHR)(VkInstance instance, const VkXcbSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreateXcbSurfaceKHR	thirdparty/glfw/src/x11_platform.h	/^typedef VkResult (APIENTRY *PFN_vkCreateXcbSurfaceKHR)(VkInstance,const VkXcbSurfaceCreateInfoKHR*,const VkAllocationCallbacks*,VkSurfaceKHR*);$/;"	t
PFN_vkCreateXlibSurfaceKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateXlibSurfaceKHR)(VkInstance instance, const VkXlibSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreateXlibSurfaceKHR	thirdparty/glfw/src/x11_platform.h	/^typedef VkResult (APIENTRY *PFN_vkCreateXlibSurfaceKHR)(VkInstance,const VkXlibSurfaceCreateInfoKHR*,const VkAllocationCallbacks*,VkSurfaceKHR*);$/;"	t
PFN_vkDebugMarkerSetObjectNameEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkDebugMarkerSetObjectNameEXT)(VkDevice device, VkDebugMarkerObjectNameInfoEXT* pNameInfo);$/;"	t
PFN_vkDebugMarkerSetObjectTagEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkDebugMarkerSetObjectTagEXT)(VkDevice device, VkDebugMarkerObjectTagInfoEXT* pTagInfo);$/;"	t
PFN_vkDebugReportCallbackEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkBool32 (VKAPI_PTR *PFN_vkDebugReportCallbackEXT)($/;"	t
PFN_vkDebugReportMessageEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDebugReportMessageEXT)(VkInstance instance, VkDebugReportFlagsEXT flags, VkDebugReportObjectTypeEXT objectType, uint64_t object, size_t location, int32_t messageCode, const char* pLayerPrefix, const char* pMessage);$/;"	t
PFN_vkDestroyBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyBuffer)(VkDevice device, VkBuffer buffer, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyBufferView	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyBufferView)(VkDevice device, VkBufferView bufferView, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyCommandPool	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyCommandPool)(VkDevice device, VkCommandPool commandPool, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyDebugReportCallbackEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyDebugReportCallbackEXT)(VkInstance instance, VkDebugReportCallbackEXT callback, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyDescriptorPool	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyDescriptorPool)(VkDevice device, VkDescriptorPool descriptorPool, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyDescriptorSetLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyDescriptorSetLayout)(VkDevice device, VkDescriptorSetLayout descriptorSetLayout, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyDevice	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyDevice)(VkDevice device, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyEvent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyEvent)(VkDevice device, VkEvent event, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyFence	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyFence)(VkDevice device, VkFence fence, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyFramebuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyFramebuffer)(VkDevice device, VkFramebuffer framebuffer, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyImage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyImage)(VkDevice device, VkImage image, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyImageView	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyImageView)(VkDevice device, VkImageView imageView, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyIndirectCommandsLayoutNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyIndirectCommandsLayoutNVX)(VkDevice device, VkIndirectCommandsLayoutNVX indirectCommandsLayout, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyInstance	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyInstance)(VkInstance instance, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyObjectTableNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyObjectTableNVX)(VkDevice device, VkObjectTableNVX objectTable, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyPipeline	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyPipeline)(VkDevice device, VkPipeline pipeline, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyPipelineCache	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyPipelineCache)(VkDevice device, VkPipelineCache pipelineCache, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyPipelineLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyPipelineLayout)(VkDevice device, VkPipelineLayout pipelineLayout, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyQueryPool	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyQueryPool)(VkDevice device, VkQueryPool queryPool, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyRenderPass	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyRenderPass)(VkDevice device, VkRenderPass renderPass, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroySampler	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroySampler)(VkDevice device, VkSampler sampler, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroySemaphore	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroySemaphore)(VkDevice device, VkSemaphore semaphore, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyShaderModule	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyShaderModule)(VkDevice device, VkShaderModule shaderModule, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroySurfaceKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroySurfaceKHR)(VkInstance instance, VkSurfaceKHR surface, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroySwapchainKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroySwapchainKHR)(VkDevice device, VkSwapchainKHR swapchain, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDeviceWaitIdle	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkDeviceWaitIdle)(VkDevice device);$/;"	t
PFN_vkDisplayPowerControlEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkDisplayPowerControlEXT)(VkDevice device, VkDisplayKHR display, const VkDisplayPowerInfoEXT* pDisplayPowerInfo);$/;"	t
PFN_vkEndCommandBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkEndCommandBuffer)(VkCommandBuffer commandBuffer);$/;"	t
PFN_vkEnumerateDeviceExtensionProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkEnumerateDeviceExtensionProperties)(VkPhysicalDevice physicalDevice, const char* pLayerName, uint32_t* pPropertyCount, VkExtensionProperties* pProperties);$/;"	t
PFN_vkEnumerateDeviceLayerProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkEnumerateDeviceLayerProperties)(VkPhysicalDevice physicalDevice, uint32_t* pPropertyCount, VkLayerProperties* pProperties);$/;"	t
PFN_vkEnumerateInstanceExtensionProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkEnumerateInstanceExtensionProperties)(const char* pLayerName, uint32_t* pPropertyCount, VkExtensionProperties* pProperties);$/;"	t
PFN_vkEnumerateInstanceExtensionProperties	thirdparty/glfw/src/internal.h	/^  typedef VkResult (APIENTRY * PFN_vkEnumerateInstanceExtensionProperties)(const char*,uint32_t*,VkExtensionProperties*);$/;"	t
PFN_vkEnumerateInstanceLayerProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkEnumerateInstanceLayerProperties)(uint32_t* pPropertyCount, VkLayerProperties* pProperties);$/;"	t
PFN_vkEnumeratePhysicalDevices	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkEnumeratePhysicalDevices)(VkInstance instance, uint32_t* pPhysicalDeviceCount, VkPhysicalDevice* pPhysicalDevices);$/;"	t
PFN_vkFlushMappedMemoryRanges	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkFlushMappedMemoryRanges)(VkDevice device, uint32_t memoryRangeCount, const VkMappedMemoryRange* pMemoryRanges);$/;"	t
PFN_vkFreeCommandBuffers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkFreeCommandBuffers)(VkDevice device, VkCommandPool commandPool, uint32_t commandBufferCount, const VkCommandBuffer* pCommandBuffers);$/;"	t
PFN_vkFreeDescriptorSets	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkFreeDescriptorSets)(VkDevice device, VkDescriptorPool descriptorPool, uint32_t descriptorSetCount, const VkDescriptorSet* pDescriptorSets);$/;"	t
PFN_vkFreeFunction	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkFreeFunction)($/;"	t
PFN_vkFreeMemory	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkFreeMemory)(VkDevice device, VkDeviceMemory memory, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkGetBufferMemoryRequirements	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetBufferMemoryRequirements)(VkDevice device, VkBuffer buffer, VkMemoryRequirements* pMemoryRequirements);$/;"	t
PFN_vkGetDeviceMemoryCommitment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetDeviceMemoryCommitment)(VkDevice device, VkDeviceMemory memory, VkDeviceSize* pCommittedMemoryInBytes);$/;"	t
PFN_vkGetDeviceProcAddr	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef PFN_vkVoidFunction (VKAPI_PTR *PFN_vkGetDeviceProcAddr)(VkDevice device, const char* pName);$/;"	t
PFN_vkGetDeviceQueue	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetDeviceQueue)(VkDevice device, uint32_t queueFamilyIndex, uint32_t queueIndex, VkQueue* pQueue);$/;"	t
PFN_vkGetDisplayModePropertiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetDisplayModePropertiesKHR)(VkPhysicalDevice physicalDevice, VkDisplayKHR display, uint32_t* pPropertyCount, VkDisplayModePropertiesKHR* pProperties);$/;"	t
PFN_vkGetDisplayPlaneCapabilitiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetDisplayPlaneCapabilitiesKHR)(VkPhysicalDevice physicalDevice, VkDisplayModeKHR mode, uint32_t planeIndex, VkDisplayPlaneCapabilitiesKHR* pCapabilities);$/;"	t
PFN_vkGetDisplayPlaneSupportedDisplaysKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetDisplayPlaneSupportedDisplaysKHR)(VkPhysicalDevice physicalDevice, uint32_t planeIndex, uint32_t* pDisplayCount, VkDisplayKHR* pDisplays);$/;"	t
PFN_vkGetEventStatus	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetEventStatus)(VkDevice device, VkEvent event);$/;"	t
PFN_vkGetFenceStatus	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetFenceStatus)(VkDevice device, VkFence fence);$/;"	t
PFN_vkGetImageMemoryRequirements	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetImageMemoryRequirements)(VkDevice device, VkImage image, VkMemoryRequirements* pMemoryRequirements);$/;"	t
PFN_vkGetImageSparseMemoryRequirements	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetImageSparseMemoryRequirements)(VkDevice device, VkImage image, uint32_t* pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements* pSparseMemoryRequirements);$/;"	t
PFN_vkGetImageSubresourceLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetImageSubresourceLayout)(VkDevice device, VkImage image, const VkImageSubresource* pSubresource, VkSubresourceLayout* pLayout);$/;"	t
PFN_vkGetInstanceProcAddr	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef PFN_vkVoidFunction (VKAPI_PTR *PFN_vkGetInstanceProcAddr)(VkInstance instance, const char* pName);$/;"	t
PFN_vkGetInstanceProcAddr	thirdparty/glfw/src/internal.h	/^  typedef PFN_vkVoidFunction (APIENTRY * PFN_vkGetInstanceProcAddr)(VkInstance,const char*);$/;"	t
PFN_vkGetMemoryWin32HandleNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetMemoryWin32HandleNV)(VkDevice device, VkDeviceMemory memory, VkExternalMemoryHandleTypeFlagsNV handleType, HANDLE* pHandle);$/;"	t
PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR)(VkPhysicalDevice physicalDevice, uint32_t* pPropertyCount, VkDisplayPlanePropertiesKHR* pProperties);$/;"	t
PFN_vkGetPhysicalDeviceDisplayPropertiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceDisplayPropertiesKHR)(VkPhysicalDevice physicalDevice, uint32_t* pPropertyCount, VkDisplayPropertiesKHR* pProperties);$/;"	t
PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV)(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkImageTiling tiling, VkImageUsageFlags usage, VkImageCreateFlags flags, VkExternalMemoryHandleTypeFlagsNV externalHandleType, VkExternalImageFormatPropertiesNV* pExternalImageFormatProperties);$/;"	t
PFN_vkGetPhysicalDeviceFeatures	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceFeatures)(VkPhysicalDevice physicalDevice, VkPhysicalDeviceFeatures* pFeatures);$/;"	t
PFN_vkGetPhysicalDeviceFeatures2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceFeatures2KHR)(VkPhysicalDevice physicalDevice, VkPhysicalDeviceFeatures2KHR* pFeatures);$/;"	t
PFN_vkGetPhysicalDeviceFormatProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceFormatProperties)(VkPhysicalDevice physicalDevice, VkFormat format, VkFormatProperties* pFormatProperties);$/;"	t
PFN_vkGetPhysicalDeviceFormatProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceFormatProperties2KHR)(VkPhysicalDevice physicalDevice, VkFormat format, VkFormatProperties2KHR* pFormatProperties);$/;"	t
PFN_vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX)(VkPhysicalDevice physicalDevice, VkDeviceGeneratedCommandsFeaturesNVX* pFeatures, VkDeviceGeneratedCommandsLimitsNVX* pLimits);$/;"	t
PFN_vkGetPhysicalDeviceImageFormatProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceImageFormatProperties)(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkImageTiling tiling, VkImageUsageFlags usage, VkImageCreateFlags flags, VkImageFormatProperties* pImageFormatProperties);$/;"	t
PFN_vkGetPhysicalDeviceImageFormatProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceImageFormatProperties2KHR)(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceImageFormatInfo2KHR* pImageFormatInfo, VkImageFormatProperties2KHR* pImageFormatProperties);$/;"	t
PFN_vkGetPhysicalDeviceMemoryProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceMemoryProperties)(VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties* pMemoryProperties);$/;"	t
PFN_vkGetPhysicalDeviceMemoryProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceMemoryProperties2KHR)(VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties2KHR* pMemoryProperties);$/;"	t
PFN_vkGetPhysicalDeviceMirPresentationSupportKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkBool32 (VKAPI_PTR *PFN_vkGetPhysicalDeviceMirPresentationSupportKHR)(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, MirConnection* connection);$/;"	t
PFN_vkGetPhysicalDeviceMirPresentationSupportKHR	thirdparty/glfw/src/mir_platform.h	/^typedef VkBool32 (APIENTRY *PFN_vkGetPhysicalDeviceMirPresentationSupportKHR)(VkPhysicalDevice,uint32_t,MirConnection*);$/;"	t
PFN_vkGetPhysicalDeviceProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceProperties)(VkPhysicalDevice physicalDevice, VkPhysicalDeviceProperties* pProperties);$/;"	t
PFN_vkGetPhysicalDeviceProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceProperties2KHR)(VkPhysicalDevice physicalDevice, VkPhysicalDeviceProperties2KHR* pProperties);$/;"	t
PFN_vkGetPhysicalDeviceQueueFamilyProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceQueueFamilyProperties)(VkPhysicalDevice physicalDevice, uint32_t* pQueueFamilyPropertyCount, VkQueueFamilyProperties* pQueueFamilyProperties);$/;"	t
PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR)(VkPhysicalDevice physicalDevice, uint32_t* pQueueFamilyPropertyCount, VkQueueFamilyProperties2KHR* pQueueFamilyProperties);$/;"	t
PFN_vkGetPhysicalDeviceSparseImageFormatProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceSparseImageFormatProperties)(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkSampleCountFlagBits samples, VkImageUsageFlags usage, VkImageTiling tiling, uint32_t* pPropertyCount, VkSparseImageFormatProperties* pProperties);$/;"	t
PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR)(VkPhysicalDevice physicalDevice, const VkPhysicalDeviceSparseImageFormatInfo2KHR* pFormatInfo, uint32_t* pPropertyCount, VkSparseImageFormatProperties2KHR* pProperties);$/;"	t
PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT)(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, VkSurfaceCapabilities2EXT* pSurfaceCapabilities);$/;"	t
PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR)(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, VkSurfaceCapabilitiesKHR* pSurfaceCapabilities);$/;"	t
PFN_vkGetPhysicalDeviceSurfaceFormatsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceSurfaceFormatsKHR)(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, uint32_t* pSurfaceFormatCount, VkSurfaceFormatKHR* pSurfaceFormats);$/;"	t
PFN_vkGetPhysicalDeviceSurfacePresentModesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceSurfacePresentModesKHR)(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, uint32_t* pPresentModeCount, VkPresentModeKHR* pPresentModes);$/;"	t
PFN_vkGetPhysicalDeviceSurfaceSupportKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceSurfaceSupportKHR)(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, VkSurfaceKHR surface, VkBool32* pSupported);$/;"	t
PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkBool32 (VKAPI_PTR *PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR)(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, struct wl_display* display);$/;"	t
PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR	thirdparty/glfw/src/wl_platform.h	/^typedef VkBool32 (APIENTRY *PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR)(VkPhysicalDevice,uint32_t,struct wl_display*);$/;"	t
PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkBool32 (VKAPI_PTR *PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR)(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex);$/;"	t
PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR	thirdparty/glfw/src/win32_platform.h	/^typedef VkBool32 (APIENTRY *PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR)(VkPhysicalDevice,uint32_t);$/;"	t
PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkBool32 (VKAPI_PTR *PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR)(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, xcb_connection_t* connection, xcb_visualid_t visual_id);$/;"	t
PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR	thirdparty/glfw/src/x11_platform.h	/^typedef VkBool32 (APIENTRY *PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR)(VkPhysicalDevice,uint32_t,xcb_connection_t*,xcb_visualid_t);$/;"	t
PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkBool32 (VKAPI_PTR *PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR)(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, Display* dpy, VisualID visualID);$/;"	t
PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR	thirdparty/glfw/src/x11_platform.h	/^typedef VkBool32 (APIENTRY *PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR)(VkPhysicalDevice,uint32_t,Display*,VisualID);$/;"	t
PFN_vkGetPipelineCacheData	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPipelineCacheData)(VkDevice device, VkPipelineCache pipelineCache, size_t* pDataSize, void* pData);$/;"	t
PFN_vkGetQueryPoolResults	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetQueryPoolResults)(VkDevice device, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount, size_t dataSize, void* pData, VkDeviceSize stride, VkQueryResultFlags flags);$/;"	t
PFN_vkGetRandROutputDisplayEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetRandROutputDisplayEXT)(VkPhysicalDevice physicalDevice, Display* dpy, RROutput rrOutput, VkDisplayKHR* pDisplay);$/;"	t
PFN_vkGetRenderAreaGranularity	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetRenderAreaGranularity)(VkDevice device, VkRenderPass renderPass, VkExtent2D* pGranularity);$/;"	t
PFN_vkGetSwapchainCounterEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetSwapchainCounterEXT)(VkDevice device, VkSwapchainKHR swapchain, VkSurfaceCounterFlagBitsEXT counter, uint64_t* pCounterValue);$/;"	t
PFN_vkGetSwapchainImagesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetSwapchainImagesKHR)(VkDevice device, VkSwapchainKHR swapchain, uint32_t* pSwapchainImageCount, VkImage* pSwapchainImages);$/;"	t
PFN_vkInternalAllocationNotification	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkInternalAllocationNotification)($/;"	t
PFN_vkInternalFreeNotification	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkInternalFreeNotification)($/;"	t
PFN_vkInvalidateMappedMemoryRanges	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkInvalidateMappedMemoryRanges)(VkDevice device, uint32_t memoryRangeCount, const VkMappedMemoryRange* pMemoryRanges);$/;"	t
PFN_vkMapMemory	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkMapMemory)(VkDevice device, VkDeviceMemory memory, VkDeviceSize offset, VkDeviceSize size, VkMemoryMapFlags flags, void** ppData);$/;"	t
PFN_vkMergePipelineCaches	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkMergePipelineCaches)(VkDevice device, VkPipelineCache dstCache, uint32_t srcCacheCount, const VkPipelineCache* pSrcCaches);$/;"	t
PFN_vkQueueBindSparse	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkQueueBindSparse)(VkQueue queue, uint32_t bindInfoCount, const VkBindSparseInfo* pBindInfo, VkFence fence);$/;"	t
PFN_vkQueuePresentKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkQueuePresentKHR)(VkQueue queue, const VkPresentInfoKHR* pPresentInfo);$/;"	t
PFN_vkQueueSubmit	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkQueueSubmit)(VkQueue queue, uint32_t submitCount, const VkSubmitInfo* pSubmits, VkFence fence);$/;"	t
PFN_vkQueueWaitIdle	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkQueueWaitIdle)(VkQueue queue);$/;"	t
PFN_vkReallocationFunction	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void* (VKAPI_PTR *PFN_vkReallocationFunction)($/;"	t
PFN_vkRegisterDeviceEventEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkRegisterDeviceEventEXT)(VkDevice device, const VkDeviceEventInfoEXT* pDeviceEventInfo, const VkAllocationCallbacks* pAllocator, VkFence* pFence);$/;"	t
PFN_vkRegisterDisplayEventEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkRegisterDisplayEventEXT)(VkDevice device, VkDisplayKHR display, const VkDisplayEventInfoEXT* pDisplayEventInfo, const VkAllocationCallbacks* pAllocator, VkFence* pFence);$/;"	t
PFN_vkRegisterObjectsNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkRegisterObjectsNVX)(VkDevice device, VkObjectTableNVX objectTable, uint32_t objectCount, const VkObjectTableEntryNVX* const*    ppObjectTableEntries, const uint32_t* pObjectIndices);$/;"	t
PFN_vkReleaseDisplayEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkReleaseDisplayEXT)(VkPhysicalDevice physicalDevice, VkDisplayKHR display);$/;"	t
PFN_vkResetCommandBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkResetCommandBuffer)(VkCommandBuffer commandBuffer, VkCommandBufferResetFlags flags);$/;"	t
PFN_vkResetCommandPool	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkResetCommandPool)(VkDevice device, VkCommandPool commandPool, VkCommandPoolResetFlags flags);$/;"	t
PFN_vkResetDescriptorPool	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkResetDescriptorPool)(VkDevice device, VkDescriptorPool descriptorPool, VkDescriptorPoolResetFlags flags);$/;"	t
PFN_vkResetEvent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkResetEvent)(VkDevice device, VkEvent event);$/;"	t
PFN_vkResetFences	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkResetFences)(VkDevice device, uint32_t fenceCount, const VkFence* pFences);$/;"	t
PFN_vkSetEvent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkSetEvent)(VkDevice device, VkEvent event);$/;"	t
PFN_vkTrimCommandPoolKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkTrimCommandPoolKHR)(VkDevice device, VkCommandPool commandPool, VkCommandPoolTrimFlagsKHR flags);$/;"	t
PFN_vkUnmapMemory	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkUnmapMemory)(VkDevice device, VkDeviceMemory memory);$/;"	t
PFN_vkUnregisterObjectsNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkUnregisterObjectsNVX)(VkDevice device, VkObjectTableNVX objectTable, uint32_t objectCount, const VkObjectEntryTypeNVX* pObjectEntryTypes, const uint32_t* pObjectIndices);$/;"	t
PFN_vkUpdateDescriptorSets	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkUpdateDescriptorSets)(VkDevice device, uint32_t descriptorWriteCount, const VkWriteDescriptorSet* pDescriptorWrites, uint32_t descriptorCopyCount, const VkCopyDescriptorSet* pDescriptorCopies);$/;"	t
PFN_vkVoidFunction	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkVoidFunction)(void);$/;"	t
PFN_vkVoidFunction	thirdparty/glfw/src/internal.h	/^typedef void (APIENTRY * PFN_vkVoidFunction)(void);$/;"	t
PFN_vkWaitForFences	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkWaitForFences)(VkDevice device, uint32_t fenceCount, const VkFence* pFences, VkBool32 waitAll, uint64_t timeout);$/;"	t
PFN_wglCreateContext	thirdparty/glfw/src/wgl_context.h	/^typedef HGLRC (WINAPI * PFN_wglCreateContext)(HDC);$/;"	t
PFN_wglDeleteContext	thirdparty/glfw/src/wgl_context.h	/^typedef BOOL (WINAPI * PFN_wglDeleteContext)(HGLRC);$/;"	t
PFN_wglGetCurrentDC	thirdparty/glfw/src/wgl_context.h	/^typedef HDC (WINAPI * PFN_wglGetCurrentDC)(void);$/;"	t
PFN_wglGetProcAddress	thirdparty/glfw/src/wgl_context.h	/^typedef PROC (WINAPI * PFN_wglGetProcAddress)(LPCSTR);$/;"	t
PFN_wglMakeCurrent	thirdparty/glfw/src/wgl_context.h	/^typedef BOOL (WINAPI * PFN_wglMakeCurrent)(HDC,HGLRC);$/;"	t
PFN_wglShareLists	thirdparty/glfw/src/wgl_context.h	/^typedef BOOL (WINAPI * PFN_wglShareLists)(HGLRC,HGLRC);$/;"	t
PHANTOM	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	WIN_IME				: 229,$/;"	p	class:namespace.Codes
PHONEME_COUNT	thirdparty/soloud/src/audiosource/speech/klatt.cpp	97;"	d	file:
PI	thirdparty/soloud/src/audiosource/speech/klatt.cpp	7;"	d	file:
PI	thirdparty/soloud/src/audiosource/speech/resonator.cpp	5;"	d	file:
PLANE_INCLUDED_45A3D802_C8E0_4369_B9CA_3AC4810E8DDD	lib/math/include/math/geometry/plane.hpp	2;"	d
PLATFORM_INCLUDED_0AD3FC5D_27E8_4FE2_862B_9D854FF664EB	lib/lib/include/lib/platform.hpp	10;"	d
PLAY	lib/nil/include/nil/data/audio.hpp	/^  enum { NO_REQ_STATE, PLAY, STOP }          request_state;$/;"	e	enum:Nil::Data::Audio::__anon10
PLAYBACK_LEFT	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	4993;"	d	file:
PLAYBACK_LEFT	thirdparty/stb/include/stb/stb_vorbis.c	4999;"	d	file:
PLAYBACK_MONO	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	4992;"	d	file:
PLAYBACK_MONO	thirdparty/stb/include/stb/stb_vorbis.c	4998;"	d	file:
PLAYBACK_RIGHT	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	4994;"	d	file:
PLAYBACK_RIGHT	thirdparty/stb/include/stb/stb_vorbis.c	5000;"	d	file:
PLAYING	lib/nil/include/nil/data/audio.hpp	/^  enum { NO_CURR_STATE, PLAYING, STOPPED }   current_state;$/;"	e	enum:Nil::Data::Audio::__anon11
POINT	lib/nil/include/nil/data/light.hpp	/^  enum { POINT, DIR, SPOT } type;$/;"	e	enum:Nil::Data::Light::__anon9
POINT	lib/roa/include/roa/light.hpp	/^  POINT,$/;"	m	class:ROA::Light_type
POINT_INCLUDED_3BFC963F_9E13_4DC6_AC95_14FEBF79F131	lib/roa/include/roa/point.hpp	2;"	d
PORTAUDIO	thirdparty/soloud/include/soloud/soloud.h	/^			PORTAUDIO,$/;"	e	enum:SoLoud::Soloud::BACKENDS
POSTBUILDCMDS	app/blank/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	app/fps_walk/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	app/perils/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	app/they_never_pay/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	app/tiles/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	lib/math/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	lib/nau/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	lib/nil_aspects/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	lib/roa/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	lib/rov/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	thirdparty/catch/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	thirdparty/glfw/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	thirdparty/imgui/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	thirdparty/imguizmo/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	thirdparty/json/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	thirdparty/opengl/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	thirdparty/remotery/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	thirdparty/soloud/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	thirdparty/stb/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POSTBUILDCMDS	thirdparty/tinydir/data/Makefile	/^  define POSTBUILDCMDS$/;"	m
POWERUP	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^			POWERUP,$/;"	e	enum:SoLoud::Sfxr::SFXR_PRESETS
PREBUILDCMDS	app/blank/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	app/fps_walk/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	app/perils/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	app/they_never_pay/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	app/tiles/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	lib/math/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	lib/nau/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	lib/nil_aspects/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	lib/roa/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	lib/rov/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	thirdparty/catch/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	thirdparty/glfw/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	thirdparty/imgui/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	thirdparty/imguizmo/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	thirdparty/json/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	thirdparty/opengl/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	thirdparty/remotery/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	thirdparty/soloud/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	thirdparty/stb/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PREBUILDCMDS	thirdparty/tinydir/data/Makefile	/^  define PREBUILDCMDS$/;"	m
PRECISION	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	5;"	d	file:
PRECISION	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	7;"	d	file:
PRELINKCMDS	app/blank/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	app/fps_walk/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	app/perils/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	app/they_never_pay/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	app/tiles/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	lib/math/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	lib/nau/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	lib/nil_aspects/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	lib/roa/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	lib/rov/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	thirdparty/catch/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	thirdparty/glfw/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	thirdparty/imgui/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	thirdparty/imguizmo/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	thirdparty/json/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	thirdparty/opengl/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	thirdparty/remotery/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	thirdparty/soloud/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	thirdparty/stb/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRELINKCMDS	thirdparty/tinydir/data/Makefile	/^  define PRELINKCMDS$/;"	m
PRINT_SCREEN	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	DOWN				: 40,	\/\/ also NUM_SOUTH$/;"	p	class:namespace.Codes
PROCESS_3D	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			PROCESS_3D = 8,$/;"	e	enum:SoLoud::AudioSource::FLAGS
PROCESS_3D	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			PROCESS_3D = 8,$/;"	e	enum:SoLoud::AudioSourceInstance::FLAGS
PROCESS_DPI_AWARENESS	thirdparty/glfw/src/win32_platform.h	/^typedef enum PROCESS_DPI_AWARENESS$/;"	g
PROCESS_DPI_AWARENESS	thirdparty/glfw/src/win32_platform.h	/^} PROCESS_DPI_AWARENESS;$/;"	t	typeref:enum:PROCESS_DPI_AWARENESS
PROCESS_DPI_UNAWARE	thirdparty/glfw/src/win32_platform.h	/^    PROCESS_DPI_UNAWARE = 0,$/;"	e	enum:PROCESS_DPI_AWARENESS
PROCESS_PER_MONITOR_DPI_AWARE	thirdparty/glfw/src/win32_platform.h	/^    PROCESS_PER_MONITOR_DPI_AWARE = 2$/;"	e	enum:PROCESS_DPI_AWARENESS
PROCESS_SYSTEM_DPI_AWARE	thirdparty/glfw/src/win32_platform.h	/^    PROCESS_SYSTEM_DPI_AWARE = 1,$/;"	e	enum:PROCESS_DPI_AWARENESS
PROJECTS	scripts/solution/Makefile	/^PROJECTS := Lib ROA Nil Nau AspectsControllers ROV Math OpenGL TinyDIR Remotery Json STB ImGUI ImGuizmo GLFW SoLoud Catch PerilsPast Blank LibTest ROATest NilTest NauTests ROVTest MathTest$/;"	m
PROTECTED	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			PROTECTED = 2,$/;"	e	enum:SoLoud::AudioSourceInstance::FLAGS
PSID_AUTHOR	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_AUTHOR = 54,		\/\/ Author name (dto.)$/;"	e	enum:__anon196
PSID_COPYRIGHT	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_COPYRIGHT = 86,	\/\/ Copyright info (dto.)$/;"	e	enum:__anon196
PSID_DEFSONG	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_DEFSONG = 16,		\/\/ Main subsong number$/;"	e	enum:__anon196
PSID_FLAGS	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_FLAGS = 118,		\/\/ Flags (only in version 2 header)$/;"	e	enum:__anon196
PSID_ID	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_ID = 0,			\/\/ 'PSID'$/;"	e	enum:__anon196
PSID_INIT	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_INIT = 10,			\/\/ C64 init routine address$/;"	e	enum:__anon196
PSID_LENGTH	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_LENGTH = 6,		\/\/ Header length$/;"	e	enum:__anon196
PSID_MAIN	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_MAIN = 12,			\/\/ C64 replay routine address$/;"	e	enum:__anon196
PSID_MAX_HEADER_LENGTH	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^const int PSID_MAX_HEADER_LENGTH = 124;		\/\/ Version 2$/;"	v
PSID_MIN_HEADER_LENGTH	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^const int PSID_MIN_HEADER_LENGTH = 118;		\/\/ Version 1$/;"	v
PSID_NAME	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_NAME = 22,			\/\/ Module name (ISO Latin1 character set)$/;"	e	enum:__anon196
PSID_NUMBER	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_NUMBER = 14,		\/\/ Number of subsongs$/;"	e	enum:__anon196
PSID_RESERVED	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_RESERVED = 120$/;"	e	enum:__anon196
PSID_SPEED	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_SPEED = 18,		\/\/ Speed flags (1 bit\/song)$/;"	e	enum:__anon196
PSID_START	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_START = 8,			\/\/ C64 load address$/;"	e	enum:__anon196
PSID_VERSION	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	PSID_VERSION = 4,		\/\/ 1 or 2$/;"	e	enum:__anon196
PTRDIFF_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	193;"	d
PTRDIFF_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	196;"	d
PTRDIFF_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	192;"	d
PTRDIFF_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	195;"	d
PURE	lib/lib/include/lib/optimizations.hpp	39;"	d
PURE	lib/lib/include/lib/optimizations.hpp	42;"	d
PXINPUT_BATTERY_INFORMATION	thirdparty/glfw/src/deps/mingw/xinput.h	/^} XINPUT_BATTERY_INFORMATION, *PXINPUT_BATTERY_INFORMATION;$/;"	t	typeref:struct:_XINPUT_BATTERY_INFORMATION
PXINPUT_CAPABILITIES	thirdparty/glfw/src/deps/mingw/xinput.h	/^} XINPUT_CAPABILITIES, *PXINPUT_CAPABILITIES;$/;"	t	typeref:struct:_XINPUT_CAPABILITIES
PXINPUT_GAMEPAD	thirdparty/glfw/src/deps/mingw/xinput.h	/^} XINPUT_GAMEPAD, *PXINPUT_GAMEPAD;$/;"	t	typeref:struct:_XINPUT_GAMEPAD
PXINPUT_KEYSTROKE	thirdparty/glfw/src/deps/mingw/xinput.h	/^} XINPUT_KEYSTROKE, *PXINPUT_KEYSTROKE;$/;"	t	typeref:struct:_XINPUT_KEYSTROKE
PXINPUT_STATE	thirdparty/glfw/src/deps/mingw/xinput.h	/^} XINPUT_STATE, *PXINPUT_STATE;$/;"	t	typeref:struct:_XINPUT_STATE
PXINPUT_VIBRATION	thirdparty/glfw/src/deps/mingw/xinput.h	/^} XINPUT_VIBRATION, *PXINPUT_VIBRATION;$/;"	t	typeref:struct:_XINPUT_VIBRATION
PYOUTDIR	thirdparty/soloud/src/tools/codegen/main.cpp	34;"	d	file:
P_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule P_rules[] =$/;"	v	file:
Pa_CloseStreamProc	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^typedef PaError (*Pa_CloseStreamProc)( PaStream *stream );$/;"	t	file:
Pa_InitializeProc	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^typedef PaError (*Pa_InitializeProc)( void );$/;"	t	file:
Pa_OpenDefaultStreamProc	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^typedef PaError (*Pa_OpenDefaultStreamProc)( PaStream** stream,$/;"	t	file:
Pa_StartStreamProc	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^typedef PaError (*Pa_StartStreamProc)( PaStream *stream );$/;"	t	file:
Pa_TerminateProc	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^typedef PaError (*Pa_TerminateProc)( void );$/;"	t	file:
Pair	thirdparty/imgui/include/imgui/imgui.h	/^        Pair(ImGuiID _key, float _val_f) { key = _key; val_f = _val_f; }$/;"	f	struct:ImGuiStorage::Pair
Pair	thirdparty/imgui/include/imgui/imgui.h	/^        Pair(ImGuiID _key, int _val_i) { key = _key; val_i = _val_i; }$/;"	f	struct:ImGuiStorage::Pair
Pair	thirdparty/imgui/include/imgui/imgui.h	/^        Pair(ImGuiID _key, void* _val_p) { key = _key; val_p = _val_p; }$/;"	f	struct:ImGuiStorage::Pair
Pair	thirdparty/imgui/include/imgui/imgui.h	/^    struct Pair$/;"	s	struct:ImGuiStorage
ParentMenuSet	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID         ParentMenuSet;  \/\/ Set on OpenPopup()$/;"	m	struct:ImGuiPopupRef
ParentWindow	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiWindow*            ParentWindow;                       \/\/ If we are a child window, this is pointing to our parent window. Else point to NULL.$/;"	m	struct:ImGuiWindow
ParentWindow	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiWindow*    ParentWindow;   \/\/ Set on OpenPopup()$/;"	m	struct:ImGuiPopupRef
ParseFormatPrecision	thirdparty/imgui/src/imgui.cpp	/^int ImGui::ParseFormatPrecision(const char* fmt, int default_precision)$/;"	f	class:ImGui
PassFilter	thirdparty/imgui/src/imgui.cpp	/^bool ImGuiTextFilter::PassFilter(const char* text, const char* text_end) const$/;"	f	class:ImGuiTextFilter
PathArcTo	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::PathArcTo(const ImVec2& centre, float radius, float amin, float amax, int num_segments)$/;"	f	class:ImDrawList
PathArcToFast	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::PathArcToFast(const ImVec2& centre, float radius, int amin, int amax)$/;"	f	class:ImDrawList
PathBezierCurveTo	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::PathBezierCurveTo(const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, int num_segments)$/;"	f	class:ImDrawList
PathBezierToCasteljau	thirdparty/imgui/src/imgui_draw.cpp	/^static void PathBezierToCasteljau(ImVector<ImVec2>* path, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4, float tess_tol, int level)$/;"	f	file:
PathClear	thirdparty/imgui/include/imgui/imgui.h	/^    inline    void  PathClear()                                                 { _Path.resize(0); }$/;"	f	struct:ImDrawList
PathFill	thirdparty/imgui/include/imgui/imgui.h	/^    inline    void  PathFill(ImU32 col)                                         { AddConvexPolyFilled(_Path.Data, _Path.Size, col, true); PathClear(); }$/;"	f	struct:ImDrawList
PathLineTo	thirdparty/imgui/include/imgui/imgui.h	/^    inline    void  PathLineTo(const ImVec2& pos)                               { _Path.push_back(pos); }$/;"	f	struct:ImDrawList
PathLineToMergeDuplicate	thirdparty/imgui/include/imgui/imgui.h	/^    inline    void  PathLineToMergeDuplicate(const ImVec2& pos)                 { if (_Path.Size == 0 || memcmp(&_Path[_Path.Size-1], &pos, 8) != 0) _Path.push_back(pos); }$/;"	f	struct:ImDrawList
PathRect	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::PathRect(const ImVec2& a, const ImVec2& b, float rounding, int rounding_corners)$/;"	f	class:ImDrawList
PathStroke	thirdparty/imgui/include/imgui/imgui.h	/^    inline    void  PathStroke(ImU32 col, bool closed, float thickness = 1.0f)  { AddPolyline(_Path.Data, _Path.Size, col, closed, thickness, true); PathClear(); }$/;"	f	struct:ImDrawList
PhonemeToElements	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^class PhonemeToElements $/;"	c	file:
PixelSnapH	thirdparty/imgui/include/imgui/imgui.h	/^    bool            PixelSnapH;                 \/\/ false    \/\/ Align every glyph to pixel boundary. Useful e.g. if you are merging a non-pixel aligned font with the default font. If enabled, you can set OversampleH\/V to 1.$/;"	m	struct:ImFontConfig
PlotEx	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PlotEx(ImGuiPlotType plot_type, const char* label, float (*values_getter)(void* data, int idx), void* data, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 graph_size)$/;"	f	class:ImGui
PlotHistogram	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PlotHistogram(const char* label, const float* values, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 graph_size, int stride)$/;"	f	class:ImGui
PlotHistogram	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PlotHistogram(const char* label, float (*values_getter)(void* data, int idx), void* data, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 graph_size)$/;"	f	class:ImGui
PlotLines	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PlotLines(const char* label, const float* values, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 graph_size, int stride)$/;"	f	class:ImGui
PlotLines	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PlotLines(const char* label, float (*values_getter)(void* data, int idx), void* data, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 graph_size)$/;"	f	class:ImGui
Plot_ArrayGetter	thirdparty/imgui/src/imgui.cpp	/^static float Plot_ArrayGetter(void* data, int idx)$/;"	f	file:
Point	lib/roa/include/roa/point.hpp	/^struct Point$/;"	s	namespace:ROA
Point	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} Point;$/;"	t	typeref:struct:__anon213	file:
Pool	thirdparty/soloud/include/soloud/soloud_thread.h	/^		class Pool$/;"	c	namespace:SoLoud::Thread
Pool	thirdparty/soloud/src/core/soloud_thread.cpp	/^		Pool::Pool()$/;"	f	class:SoLoud::Thread::Pool
PoolTask	thirdparty/soloud/include/soloud/soloud_thread.h	/^		class PoolTask$/;"	c	namespace:SoLoud::Thread
PopAllowKeyboardFocus	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PopAllowKeyboardFocus()$/;"	f	class:ImGui
PopButtonRepeat	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PopButtonRepeat()$/;"	f	class:ImGui
PopClipRect	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PopClipRect()$/;"	f	class:ImGui
PopClipRect	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::PopClipRect()$/;"	f	class:ImDrawList
PopFont	thirdparty/imgui/src/imgui.cpp	/^void  ImGui::PopFont()$/;"	f	class:ImGui
PopID	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PopID()$/;"	f	class:ImGui
PopItemWidth	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PopItemWidth()$/;"	f	class:ImGui
PopStyleColor	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PopStyleColor(int count)$/;"	f	class:ImGui
PopStyleVar	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PopStyleVar(int count)$/;"	f	class:ImGui
PopTextWrapPos	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PopTextWrapPos()$/;"	f	class:ImGui
PopTextureID	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::PopTextureID()$/;"	f	class:ImDrawList
PopupId	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID                 PopupId;                            \/\/ ID in the popup stack when this window is used as a popup\/menu (because we use generic Name\/ID for recycling)$/;"	m	struct:ImGuiWindow
PopupId	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID         PopupId;        \/\/ Set on OpenPopup()$/;"	m	struct:ImGuiPopupRef
Pos	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2  Pos;            \/\/ Read-only.	Window position, for reference.$/;"	m	struct:ImGuiSizeConstraintCallbackData
Pos	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  Pos;                                \/\/ Position rounded-up to nearest pixel$/;"	m	struct:ImGuiWindow
Pos	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2      Pos;$/;"	m	struct:ImGuiIniData
Pos	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       Pos[8], NextWidths[8];$/;"	m	struct:ImGuiSimpleColumns
PosFloat	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  PosFloat;$/;"	m	struct:ImGuiWindow
PrevLineHeight	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   PrevLineHeight;$/;"	m	struct:ImGuiDrawContext
PrevLineTextBaseOffset	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   PrevLineTextBaseOffset;$/;"	m	struct:ImGuiDrawContext
Prg	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * Prg;$/;"	t
Prg	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^	class Prg$/;"	c	namespace:SoLoud
Prg	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	Prg::Prg()$/;"	f	class:SoLoud::Prg
Prg_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * Prg_create()$/;"	f
Prg_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Prg_destroy(void * aClassPtr)$/;"	f
Prg_rand	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Prg_rand(void * aClassPtr)$/;"	f
Prg_srand	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Prg_srand(void * aClassPtr, int aSeed)$/;"	f
PrimQuadUV	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::PrimQuadUV(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, const ImVec2& uv_a, const ImVec2& uv_b, const ImVec2& uv_c, const ImVec2& uv_d, ImU32 col)$/;"	f	class:ImDrawList
PrimRect	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::PrimRect(const ImVec2& a, const ImVec2& c, ImU32 col)$/;"	f	class:ImDrawList
PrimRectUV	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::PrimRectUV(const ImVec2& a, const ImVec2& c, const ImVec2& uv_a, const ImVec2& uv_c, ImU32 col)$/;"	f	class:ImDrawList
PrimReserve	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::PrimReserve(int idx_count, int vtx_count)$/;"	f	class:ImDrawList
PrimVtx	thirdparty/imgui/include/imgui/imgui.h	/^    inline    void  PrimVtx(const ImVec2& pos, const ImVec2& uv, ImU32 col)     { PrimWriteIdx((ImDrawIdx)_VtxCurrentIdx); PrimWriteVtx(pos, uv, col); }$/;"	f	struct:ImDrawList
PrimWriteIdx	thirdparty/imgui/include/imgui/imgui.h	/^    inline    void  PrimWriteIdx(ImDrawIdx idx)                                 { *_IdxWritePtr = idx; _IdxWritePtr++; }$/;"	f	struct:ImDrawList
PrimWriteVtx	thirdparty/imgui/include/imgui/imgui.h	/^    inline    void  PrimWriteVtx(const ImVec2& pos, const ImVec2& uv, ImU32 col){ _VtxWritePtr->pos = pos; _VtxWritePtr->uv = uv; _VtxWritePtr->col = col; _VtxWritePtr++; _VtxCurrentIdx++; }$/;"	f	struct:ImDrawList
PrivateClipboard	thirdparty/imgui/include/imgui/imgui_internal.h	/^    char*                   PrivateClipboard;                   \/\/ If no custom clipboard handler is defined$/;"	m	struct:ImGuiContext
ProbedPage	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} ProbedPage;$/;"	t	typeref:struct:__anon212	file:
ProbedPage	thirdparty/stb/include/stb/stb_vorbis.c	/^} ProbedPage;$/;"	t	typeref:struct:__anon125	file:
ProgressBar	thirdparty/imgui/src/imgui.cpp	/^void ImGui::ProgressBar(float fraction, const ImVec2& size_arg, const char* overlay)$/;"	f	class:ImGui
PsidHeader	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^struct PsidHeader {$/;"	s
Ptr	thirdparty/catch/include/catch/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	thirdparty/catch/include/catch/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	thirdparty/catch/include/catch/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	thirdparty/catch/include/catch/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
PushAllowKeyboardFocus	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PushAllowKeyboardFocus(bool allow_keyboard_focus)$/;"	f	class:ImGui
PushButtonRepeat	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PushButtonRepeat(bool repeat)$/;"	f	class:ImGui
PushClipRect	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PushClipRect(const ImVec2& clip_rect_min, const ImVec2& clip_rect_max, bool intersect_with_current_clip_rect)$/;"	f	class:ImGui
PushClipRect	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::PushClipRect(ImVec2 cr_min, ImVec2 cr_max, bool intersect_with_current_clip_rect)$/;"	f	class:ImDrawList
PushClipRectFullScreen	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::PushClipRectFullScreen()$/;"	f	class:ImDrawList
PushColumnClipRect	thirdparty/imgui/src/imgui.cpp	/^static void PushColumnClipRect(int column_index)$/;"	f	file:
PushFont	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PushFont(ImFont* font)$/;"	f	class:ImGui
PushID	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PushID(const char* str_id)$/;"	f	class:ImGui
PushID	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PushID(const char* str_id_begin, const char* str_id_end)$/;"	f	class:ImGui
PushID	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PushID(const void* ptr_id)$/;"	f	class:ImGui
PushID	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PushID(int int_id)$/;"	f	class:ImGui
PushItemWidth	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PushItemWidth(float item_width)$/;"	f	class:ImGui
PushMultiItemsWidths	thirdparty/imgui/src/imgui.cpp	/^static void PushMultiItemsWidths(int components, float w_full)$/;"	f	file:
PushStyleColor	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PushStyleColor(ImGuiCol idx, const ImVec4& col)$/;"	f	class:ImGui
PushStyleVar	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PushStyleVar(ImGuiStyleVar idx, const ImVec2& val)$/;"	f	class:ImGui
PushStyleVar	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PushStyleVar(ImGuiStyleVar idx, float val)$/;"	f	class:ImGui
PushTextWrapPos	thirdparty/imgui/src/imgui.cpp	/^void ImGui::PushTextWrapPos(float wrap_pos_x)$/;"	f	class:ImGui
PushTextureID	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::PushTextureID(const ImTextureID& texture_id)$/;"	f	class:ImDrawList
Q	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	P					: 80,$/;"	p	class:namespace.Codes
QUATERNION_INCLUDED_7B01C7AE_4716_42D9_8240_9E35BC8CD4A0	lib/roa/include/roa/quaternion.hpp	2;"	d
QUATERNION_INCLUDED_ED2C1105_82A1_477F_B62C_5093DE20C971	lib/math/include/math/quat/quat.hpp	2;"	d
QUATERNION_TYPES_INCLUDED_14E724D5_7132_4778_9DAE_0215B606AF3C	lib/math/include/math/quat/quat_types.hpp	2;"	d
QUAT_FWD_INCLUDED_E068A6C2_115C_40F6_B84E_8A27F1A0AAA9	lib/math/include/math/quat/quat_fwd.hpp	2;"	d
QUERY_INCLUDED_489939B1_CF06_4E2C_95D6_56D93F51A8B7	lib/roa/include/roa/query.hpp	2;"	d
QUESTION_MARK	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	FF_DASH				: 173,	\/\/ Firefox (Gecko) fires this for dash instead of 189$/;"	p	class:namespace.Codes
Q_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule Q_rules[] =$/;"	v	file:
Quaternion	lib/roa/src/interface/quaternion.cpp	/^Quaternion::Quaternion()$/;"	f	class:ROA::Quaternion
Quaternion	lib/roa/src/interface/quaternion.cpp	/^Quaternion::Quaternion(const Vector3 &axis, const float angle)$/;"	f	class:ROA::Quaternion
Quaternion	lib/roa/src/interface/quaternion.cpp	/^Quaternion::Quaternion(const float *data)$/;"	f	class:ROA::Quaternion
Quaternion	lib/roa/src/interface/quaternion.cpp	/^Quaternion::Quaternion(const float x, const float y, const float z, const float w)$/;"	f	class:ROA::Quaternion
Query	lib/roa/include/roa/query.hpp	/^namespace Query {$/;"	n	namespace:ROA
Query	lib/roa/src/interface/query.cpp	/^namespace Query {$/;"	n	namespace:ROA	file:
QueryExtension	thirdparty/glfw/src/glx_context.h	/^    PFNGLXQUERYEXTENSIONPROC            QueryExtension;$/;"	m	struct:_GLFWlibraryGLX
QueryExtension	thirdparty/glfw/src/x11_platform.h	/^        PFN_XF86VidModeQueryExtension QueryExtension;$/;"	m	struct:_GLFWlibraryX11::__anon151
QueryExtensionsString	thirdparty/glfw/src/glx_context.h	/^    PFNGLXQUERYEXTENSIONSSTRINGPROC     QueryExtensionsString;$/;"	m	struct:_GLFWlibraryGLX
QueryString	thirdparty/glfw/src/egl_context.h	/^    PFN_eglQueryString          QueryString;$/;"	m	struct:_GLFWlibraryEGL
QueryVersion	thirdparty/glfw/src/glx_context.h	/^    PFNGLXQUERYVERSIONPROC              QueryVersion;$/;"	m	struct:_GLFWlibraryGLX
QueryVersion	thirdparty/glfw/src/x11_platform.h	/^        PFN_XIQueryVersion QueryVersion;$/;"	m	struct:_GLFWlibraryX11::__anon152
QueueLine	thirdparty/remotery/src/Remotery.c	/^static rmtBool QueueLine(rmtMessageQueue* queue, unsigned char* text, rmtU32 size, struct ThreadSampler* thread_sampler)$/;"	f	file:
R	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	Q					: 81,$/;"	p	class:namespace.Codes
R	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	4998;"	d	file:
R	thirdparty/stb/include/stb/stb_vorbis.c	5004;"	d	file:
RAD2DEG	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const float RAD2DEG = (180.f \/ ZPI);$/;"	m	namespace:ImGuizmo	file:
RAMMask	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^  	unsigned int RAMMask;$/;"	m	class:TED
RAMSIZE	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	15;"	d
RAMenable	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^  	bool RAMenable;$/;"	m	class:TED
RAY_INCLUDED_9580B5C2_5FD1_4185_9537_C6C4F7EC3A4E	lib/math/include/math/geometry/ray.hpp	2;"	d
RAY_INCLUDED_F76939C9_4A90_4FAF_BCCC_420E17CDDC17	lib/roa/include/roa/ray.hpp	2;"	d
RCNEGATE	thirdparty/remotery/src/Remotery.c	1088;"	d	file:
RENDERABLES_INCLUDED_F72EDFB7_3245_4DC6_B40C_182978AEDA59	lib/roa/include/roa/renderable.hpp	2;"	d
RENDERABLE_INCLUDED_75C9D93A_7575_4AE3_A4F5_91D82D1C1DD9	lib/nil/include/nil/data/renderable.hpp	2;"	d
RENDERABLE_TEXT_INCLUDED_621C658B_0D6F_4DD3_A06A_4733302FF9B8	lib/nil/include/nil/data/renderable_text.hpp	2;"	d
RESAMPLER_LINEAR	thirdparty/soloud/include/soloud/soloud.h	61;"	d
RESONANCE	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^			RESONANCE = 3$/;"	e	enum:SoLoud::BiquadResonantFilter::FILTERATTRIBUTE
RESONANCE	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^			RESONANCE = 3$/;"	e	enum:SoLoud::BiquadResonantFilterInstance::FILTERATTRIBUTE
RESONATOR_H	thirdparty/soloud/src/audiosource/speech/resonator.h	2;"	d
RESOURCES	app/blank/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	app/fps_walk/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	app/perils/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	app/they_never_pay/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	app/tiles/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	lib/math/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	lib/nau/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	lib/nil_aspects/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	lib/roa/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	lib/rov/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	thirdparty/catch/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	thirdparty/glfw/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	thirdparty/imgui/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	thirdparty/imguizmo/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	thirdparty/json/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	thirdparty/opengl/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	thirdparty/remotery/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	thirdparty/soloud/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	thirdparty/stb/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCES	thirdparty/tinydir/data/Makefile	/^RESOURCES := \\$/;"	m
RESOURCE_IDENTIFIERS_INCLUDED_D6439D8E_717F_4313_B651_D11887E9807D	lib/roa/src/common/resource_identifiers.hpp	2;"	d
RESOURCE_INCLUDED_640A77F1_21DA_4527_86D2_B0F2B28006D5	lib/nil/include/nil/resource/resource.hpp	2;"	d
RESOURCE_INCLUDED_B70107CE_DD80_40F4_B6FF_E10A026783D5	lib/roa/include/roa/resource.hpp	2;"	d
RESOURCE_INTERFACE_INCLUDED_99563A0D_3D83_46D5_BF6C_5964DB4BBD8B	lib/roa/include/roa/detail/resource_interface.hpp	2;"	d
RESOURCE_STATUS_INCLUDED_3C958A6A_34C8_4C22_80CA_F77128C759BF	lib/roa/include/roa/resource_status.hpp	2;"	d
REVERSE	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	27;"	d	file:
RIGHT	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	UP					: 38,	\/\/ also NUM_NORTH$/;"	p	class:namespace.Codes
RIGHT_PART	thirdparty/soloud/src/audiosource/speech/tts.cpp	78;"	d	file:
RMTSF_Aggregate	thirdparty/remotery/include/remotery/Remotery.h	/^    RMTSF_Aggregate     = 1,$/;"	e	enum:rmtSampleFlags
RMTSF_None	thirdparty/remotery/include/remotery/Remotery.h	/^    RMTSF_None          = 0,$/;"	e	enum:rmtSampleFlags
RMT_API	thirdparty/remotery/include/remotery/Remotery.h	104;"	d
RMT_API	thirdparty/remotery/include/remotery/Remotery.h	106;"	d
RMT_API	thirdparty/remotery/include/remotery/Remotery.h	110;"	d
RMT_API	thirdparty/remotery/include/remotery/Remotery.h	112;"	d
RMT_API	thirdparty/remotery/include/remotery/Remotery.h	116;"	d
RMT_ENABLED	thirdparty/remotery/include/remotery/Remotery.h	47;"	d
RMT_ERROR_CREATE_THREAD_FAIL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_CREATE_THREAD_FAIL,               \/\/ Failed to create a thread for the server$/;"	e	enum:rmtError
RMT_ERROR_CUDA_DEINITIALIZED	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_CUDA_DEINITIALIZED,               \/\/ This indicates that the CUDA driver is in the process of shutting down$/;"	e	enum:rmtError
RMT_ERROR_CUDA_INVALID_CONTEXT	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_CUDA_INVALID_CONTEXT,             \/\/ This most frequently indicates that there is no context bound to the current thread$/;"	e	enum:rmtError
RMT_ERROR_CUDA_INVALID_HANDLE	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_CUDA_INVALID_HANDLE,              \/\/ This indicates that a resource handle passed to the API call was not valid$/;"	e	enum:rmtError
RMT_ERROR_CUDA_INVALID_VALUE	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_CUDA_INVALID_VALUE,               \/\/ This indicates that one or more of the parameters passed to the API call is not within an acceptable range of values$/;"	e	enum:rmtError
RMT_ERROR_CUDA_NOT_INITIALIZED	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_CUDA_NOT_INITIALIZED,             \/\/ This indicates that the CUDA driver has not been initialized with cuInit() or that initialization has failed$/;"	e	enum:rmtError
RMT_ERROR_CUDA_OUT_OF_MEMORY	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_CUDA_OUT_OF_MEMORY,               \/\/ The API call failed because it was unable to allocate enough memory to perform the requested operation$/;"	e	enum:rmtError
RMT_ERROR_CUDA_UNKNOWN	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_CUDA_UNKNOWN,$/;"	e	enum:rmtError
RMT_ERROR_D3D11_FAILED_TO_CREATE_QUERY	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_D3D11_FAILED_TO_CREATE_QUERY,     \/\/ Failed to create query for sample$/;"	e	enum:rmtError
RMT_ERROR_ERROR_NOT_READY	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_ERROR_NOT_READY,                  \/\/ This indicates that a resource handle passed to the API call was not valid$/;"	e	enum:rmtError
RMT_ERROR_MALLOC_FAIL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_MALLOC_FAIL,                      \/\/ Malloc call within remotery failed$/;"	e	enum:rmtError
RMT_ERROR_NONE	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_NONE,$/;"	e	enum:rmtError
RMT_ERROR_OPENGL_ERROR	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_OPENGL_ERROR,                     \/\/ Generic OpenGL error, no need to expose detail since app will need an OpenGL error callback registered$/;"	e	enum:rmtError
RMT_ERROR_REMOTERY_NOT_CREATED	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_REMOTERY_NOT_CREATED,             \/\/ Remotery object has not been created$/;"	e	enum:rmtError
RMT_ERROR_SEND_ON_INCOMPLETE_PROFILE	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SEND_ON_INCOMPLETE_PROFILE,       \/\/ An attempt was made to send an incomplete profile tree to the client$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_ACCEPT_FAIL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_ACCEPT_FAIL,               \/\/ Server failed to accept connection from client$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_BIND_FAIL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_BIND_FAIL,                 \/\/ Can't bind a socket for the server$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_CREATE_FAIL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_CREATE_FAIL,               \/\/ Can't create a socket for connection to the remote viewer$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_INIT_NETWORK_FAIL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_INIT_NETWORK_FAIL,         \/\/ Network initialisation failure (e.g. on Win32, WSAStartup fails)$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_INVALID_POLL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_INVALID_POLL,              \/\/ Poll attempt on an invalid socket$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_LISTEN_FAIL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_LISTEN_FAIL,               \/\/ Created server socket failed to enter a listen state$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_POLL_ERRORS	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_POLL_ERRORS,               \/\/ Poll notified that the socket has errors$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_RECV_FAILED	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_RECV_FAILED,               \/\/ Unrecoverable error occured while client\/server tried to receive data$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_RECV_NO_DATA	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_RECV_NO_DATA,              \/\/ No data available when attempting a receive$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_RECV_TIMEOUT	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_RECV_TIMEOUT,              \/\/ Timed out trying to receive data$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_SELECT_FAIL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_SELECT_FAIL,               \/\/ Server failed to call select on socket$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_SEND_FAIL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_SEND_FAIL,                 \/\/ Unrecoverable error occured while client\/server tried to send data$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_SEND_TIMEOUT	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_SEND_TIMEOUT,              \/\/ Timed out trying to send data$/;"	e	enum:rmtError
RMT_ERROR_SOCKET_SET_NON_BLOCKING_FAIL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_SOCKET_SET_NON_BLOCKING_FAIL,     \/\/ Created server socket failed to switch to a non-blocking state$/;"	e	enum:rmtError
RMT_ERROR_TLS_ALLOC_FAIL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_TLS_ALLOC_FAIL,                   \/\/ Attempt to allocate thread local storage failed$/;"	e	enum:rmtError
RMT_ERROR_VIRTUAL_MEMORY_BUFFER_FAIL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_VIRTUAL_MEMORY_BUFFER_FAIL,       \/\/ Failed to create a virtual memory mirror buffer$/;"	e	enum:rmtError
RMT_ERROR_WEBSOCKET_BAD_FRAME_HEADER	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_WEBSOCKET_BAD_FRAME_HEADER,       \/\/ Couldn't parse WebSocket frame header$/;"	e	enum:rmtError
RMT_ERROR_WEBSOCKET_BAD_FRAME_HEADER_MASK	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_WEBSOCKET_BAD_FRAME_HEADER_MASK,  \/\/ Partially received frame header data mask$/;"	e	enum:rmtError
RMT_ERROR_WEBSOCKET_BAD_FRAME_HEADER_SIZE	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_WEBSOCKET_BAD_FRAME_HEADER_SIZE,  \/\/ Partially received wide frame header size$/;"	e	enum:rmtError
RMT_ERROR_WEBSOCKET_DISCONNECTED	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_WEBSOCKET_DISCONNECTED,           \/\/ WebSocket server received a disconnect request and closed the socket$/;"	e	enum:rmtError
RMT_ERROR_WEBSOCKET_HANDSHAKE_BAD_HOST	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_WEBSOCKET_HANDSHAKE_BAD_HOST,     \/\/ WebSocket server handshake failed, host is not allowed to connect$/;"	e	enum:rmtError
RMT_ERROR_WEBSOCKET_HANDSHAKE_BAD_KEY	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_WEBSOCKET_HANDSHAKE_BAD_KEY,      \/\/ WebSocket server handshake failed, WebSocket key is ill-formed$/;"	e	enum:rmtError
RMT_ERROR_WEBSOCKET_HANDSHAKE_BAD_VERSION	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_WEBSOCKET_HANDSHAKE_BAD_VERSION,  \/\/ WebSocket server handshake failed, unsupported WebSocket version$/;"	e	enum:rmtError
RMT_ERROR_WEBSOCKET_HANDSHAKE_NOT_GET	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_WEBSOCKET_HANDSHAKE_NOT_GET,      \/\/ WebSocket server handshake failed, not HTTP GET$/;"	e	enum:rmtError
RMT_ERROR_WEBSOCKET_HANDSHAKE_NO_HOST	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_WEBSOCKET_HANDSHAKE_NO_HOST,      \/\/ WebSocket server handshake failed, can't locate host$/;"	e	enum:rmtError
RMT_ERROR_WEBSOCKET_HANDSHAKE_NO_KEY	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_WEBSOCKET_HANDSHAKE_NO_KEY,       \/\/ WebSocket server handshake failed, can't locate WebSocket key$/;"	e	enum:rmtError
RMT_ERROR_WEBSOCKET_HANDSHAKE_NO_VERSION	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_WEBSOCKET_HANDSHAKE_NO_VERSION,   \/\/ WebSocket server handshake failed, can't locate WebSocket version$/;"	e	enum:rmtError
RMT_ERROR_WEBSOCKET_HANDSHAKE_STRING_FAIL	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_WEBSOCKET_HANDSHAKE_STRING_FAIL,  \/\/ WebSocket server handshake failed, internal error, bad string code$/;"	e	enum:rmtError
RMT_ERROR_WEBSOCKET_RECEIVE_TIMEOUT	thirdparty/remotery/include/remotery/Remotery.h	/^    RMT_ERROR_WEBSOCKET_RECEIVE_TIMEOUT,        \/\/ Timeout receiving frame header$/;"	e	enum:rmtError
RMT_FALSE	thirdparty/remotery/include/remotery/Remotery.h	167;"	d
RMT_GL_GET_FUN	thirdparty/remotery/src/Remotery.c	5969;"	d	file:
RMT_IMPL	thirdparty/remotery/src/Remotery.c	49;"	d	file:
RMT_INCLUDED_H	thirdparty/remotery/include/remotery/Remotery.h	42;"	d
RMT_NOT_FOUND	thirdparty/remotery/src/Remotery.c	1811;"	d	file:
RMT_OPTIONAL	thirdparty/remotery/include/remotery/Remotery.h	149;"	d
RMT_OPTIONAL_RET	thirdparty/remotery/include/remotery/Remotery.h	150;"	d
RMT_PLATFORM_LINUX	thirdparty/remotery/include/remotery/Remotery.h	94;"	d
RMT_PLATFORM_MACOS	thirdparty/remotery/include/remotery/Remotery.h	97;"	d
RMT_PLATFORM_POSIX	thirdparty/remotery/include/remotery/Remotery.h	95;"	d
RMT_PLATFORM_POSIX	thirdparty/remotery/include/remotery/Remotery.h	98;"	d
RMT_PLATFORM_WINDOWS	thirdparty/remotery/include/remotery/Remotery.h	92;"	d
RMT_TRUE	thirdparty/remotery/include/remotery/Remotery.h	166;"	d
RMT_UNREFERENCED_PARAMETER	thirdparty/remotery/src/Remotery.c	140;"	d	file:
RMT_UNREFERENCED_PARAMETER	thirdparty/remotery/src/Remotery.c	142;"	d	file:
RMT_USE_CUDA	thirdparty/remotery/include/remotery/Remotery.h	57;"	d
RMT_USE_D3D11	thirdparty/remotery/include/remotery/Remotery.h	62;"	d
RMT_USE_METAL	thirdparty/remotery/include/remotery/Remotery.h	72;"	d
RMT_USE_OPENGL	thirdparty/remotery/include/remotery/Remotery.h	67;"	d
RMT_USE_POSIX_THREADNAMES	thirdparty/remotery/include/remotery/Remotery.h	77;"	d
RMT_USE_TINYCRT	thirdparty/remotery/include/remotery/Remotery.h	52;"	d
ROA	lib/roa/include/roa/application.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/audio_player.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/audio_source.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/bounding_box.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/camera.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/collection.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/color.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/component.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/data.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/fundamental.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/keyboard.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/keycodes.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/light.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/logic.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/material.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/mesh.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/model.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/mouse.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/object.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/point.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/quaternion.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/query.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/ray.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/renderable.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/resource.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/resource_status.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/scene.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/shader.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/shader_type.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/time.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/transform.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/include/roa/vector3.hpp	/^namespace ROA {$/;"	n
ROA	lib/roa/src/interface/application.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/audio_player.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/audio_source.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/bounding_box.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/camera.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/collection.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/color.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/component.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/keyboard.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/light.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/logic.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/material.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/mesh.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/model_scene.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/mouse.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/object.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/quaternion.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/query.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/ray.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/renderable.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/resource.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/shader.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/time.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/transform.cpp	/^namespace ROA {$/;"	n	file:
ROA	lib/roa/src/interface/vector3.cpp	/^namespace ROA {$/;"	n	file:
ROA_ASPECT_INCLUDED_FEBAF5C0_076C_42E2_A285_70400D002CCD	lib/nil_aspects/include/aspect/roa_aspect.hpp	2;"	d
ROA_ASSERT	lib/roa/include/roa/assert.hpp	8;"	d
ROA_Aspect	lib/nil_aspects/include/aspect/roa_aspect.hpp	/^namespace ROA_Aspect {$/;"	n	namespace:Nil_ext
ROA_Aspect	lib/nil_aspects/src/roa_aspect.cpp	/^namespace ROA_Aspect {$/;"	n	namespace:Nil_ext	file:
ROA_COMPONENT_RTTI	lib/roa/include/roa/component.hpp	12;"	d
ROA_DATA_INCLUDED_5D865112_9FA0_4F10_B81B_BA1B557DD53C	lib/roa/include/roa/data.hpp	5;"	d
ROA_INCLUDED_0ED99D72_0896_45BA_87B9_8FC01F505F4C	lib/roa/include/roa/roa.hpp	5;"	d
ROA_detail	lib/roa/include/roa/detail/component_interface.hpp	/^namespace ROA_detail {$/;"	n
ROA_detail	lib/roa/include/roa/detail/resource_interface.hpp	/^namespace ROA_detail {$/;"	n
ROA_detail	lib/roa/src/common/common.cpp	/^namespace ROA_detail {$/;"	n	file:
ROA_detail	lib/roa/src/common/common.hpp	/^namespace ROA_detail {$/;"	n
ROA_detail	lib/roa/src/common/context.cpp	/^namespace ROA_detail {$/;"	n	file:
ROA_detail	lib/roa/src/common/context.hpp	/^namespace ROA_detail {$/;"	n
ROA_detail	lib/roa/src/common/resource_identifiers.hpp	/^namespace ROA_detail {$/;"	n
ROA_detail	lib/roa/src/component/component_engine.cpp	/^namespace ROA_detail {$/;"	n	file:
ROA_detail	lib/roa/src/component/component_engine.hpp	/^namespace ROA_detail {$/;"	n
ROA_detail	lib/roa/src/interface/detail/component_interface.cpp	/^namespace ROA_detail {$/;"	n	file:
ROA_detail	lib/roa/src/interface/detail/resource_interface.cpp	/^namespace ROA_detail {$/;"	n	file:
ROMSIZE	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	16;"	d
ROTATE	thirdparty/imguizmo/include/imguizmo/ImGuizmo.h	/^		ROTATE,$/;"	e	enum:ImGuizmo::OPERATION
ROTATE_SCREEN	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      ROTATE_SCREEN,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
ROTATE_X	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      ROTATE_X,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
ROTATE_Y	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      ROTATE_Y,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
ROTATE_Z	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      ROTATE_Z,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
ROV_Aspect	lib/nil_aspects/include/aspect/renderer_aspect.hpp	/^namespace ROV_Aspect {$/;"	n	namespace:Nil_ext
ROV_Aspect	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^namespace ROV_Aspect {$/;"	n	namespace:Nil_ext	file:
ROV_EXTENSIONS_INCLUDED_D901B900_7537_40F4_934B_75746A4E3AA9	lib/nil_aspects/src/renderer/rov_extensions.hpp	2;"	d
ROV_GL_EXEC_INCLUDED_9D909A69_DD1F_40DC_9C6C_6BF5C6914E66	lib/rov/src/ogl/rov_gl_exec.hpp	2;"	d
ROV_GL_INCLUDED_7F9FD302_5953_4A67_BA19_FF7909998971	lib/rov/src/ogl/rov_gl.hpp	3;"	d
ROV_GL_RESOURCES_INCLUDED_5BA7BFD7_4B62_4071_B0F3_B736A3D5F5DC	lib/rov/src/ogl/rov_gl_resources.hpp	2;"	d
ROV_INCLUDED_7964B68E_F4A3_4F34_BD80_C488CCB98569	lib/rov/include/rov/rov.hpp	2;"	d
ROV_Internal	lib/rov/src/nop/rov_nop.cpp	/^namespace ROV_Internal {$/;"	n	file:
ROV_Internal	lib/rov/src/nop/rov_nop.hpp	/^namespace ROV_Internal {$/;"	n
ROV_Internal	lib/rov/src/ogl/rov_gl.cpp	/^namespace ROV_Internal {$/;"	n	file:
ROV_Internal	lib/rov/src/ogl/rov_gl.hpp	/^namespace ROV_Internal {$/;"	n
ROV_Internal	lib/rov/src/ogl/rov_gl_exec.cpp	/^namespace ROV_Internal {$/;"	n	file:
ROV_Internal	lib/rov/src/ogl/rov_gl_exec.hpp	/^namespace ROV_Internal {$/;"	n
ROV_Internal	lib/rov/src/ogl/rov_gl_resources.cpp	/^namespace ROV_Internal {$/;"	n	file:
ROV_Internal	lib/rov/src/ogl/rov_gl_resources.hpp	/^namespace ROV_Internal {$/;"	n
ROV_Internal	lib/rov/src/rov_data.cpp	/^namespace ROV_Internal {$/;"	n	file:
ROV_Internal	lib/rov/src/rov_data.hpp	/^namespace ROV_Internal {$/;"	n
ROV_NOP_INCLUDED_6DB81942_8B8E_49D4_9ABD_6F1AE1DE0A85	lib/rov/src/nop/rov_nop.hpp	4;"	d
ROV_PLATFORM_EXEC_INCLUDED_A4B15F54_F56E_45BE_8E34_D451F985452C	lib/rov/src/rov_data.hpp	2;"	d
ROV_data	lib/rov/src/rov.cpp	/^struct ROV_data {$/;"	s	namespace:__anon48	file:
RSIZE_MAX_STR	thirdparty/remotery/src/Remotery.c	1087;"	d	file:
R_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule R_rules[] =$/;"	v	file:
RadioButton	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::RadioButton(const char* label, bool active)$/;"	f	class:ImGui
RadioButton	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::RadioButton(const char* label, int* v, int v_button)$/;"	f	class:ImGui
Ram	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^ 	unsigned char Ram[RAMSIZE];$/;"	m	class:TED
RamExt	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char RamExt[4][RAMSIZE];	\/\/ Ram slots for 256 K RAM$/;"	m	class:TED
RateCountPeriod	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^const unsigned int SIDsound::RateCountPeriod[16] = {$/;"	m	class:SIDsound	file:
RateCountPeriod	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	static const unsigned int RateCountPeriod[16]; \/\/ Factors for A\/D\/S\/R Timing$/;"	m	class:SIDsound
RateCountPeriod	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^const unsigned int SIDsound::RateCountPeriod[16] = {$/;"	m	class:SIDsound	file:
RateCountPeriod	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	static const unsigned int RateCountPeriod[16]; \/\/ Factors for A\/D\/S\/R Timing$/;"	m	class:SIDsound
Ray	lib/roa/include/roa/ray.hpp	/^class Ray$/;"	c	namespace:ROA
Ray	lib/roa/src/interface/ray.cpp	/^Ray::Ray(const Vector3 &start, const Vector3 &end)$/;"	f	class:ROA::Ray
Ray_search	lib/roa/include/roa/ray.hpp	/^enum class Ray_search {$/;"	c	namespace:ROA
Read	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^unsigned char TED::Read(unsigned int addr)$/;"	f	class:TED
ReadOnly	thirdparty/imgui/include/imgui/imgui.h	/^    bool                ReadOnly;       \/\/ Read-only mode                       \/\/ Read-only$/;"	m	struct:ImGuiTextEditCallbackData
ReceiveFrameHeader	thirdparty/remotery/src/Remotery.c	/^static rmtError ReceiveFrameHeader(WebSocket* web_socket)$/;"	f	file:
RecomposeMatrixFromComponents	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   void RecomposeMatrixFromComponents(const float *translation, const float *rotation, const float *scale, float *matrix)$/;"	f	namespace:ImGuizmo
Rect	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImRect      Rect() const                            { return ImRect(Pos.x, Pos.y, Pos.x+Size.x, Pos.y+Size.y); }$/;"	f	struct:ImGuiWindow
Reduce	thirdparty/imgui/include/imgui/imgui_internal.h	/^    void        Reduce(const ImVec2& amount)    { Min.x += amount.x; Min.y += amount.y; Max.x -= amount.x; Max.y -= amount.y; }$/;"	f	struct:ImRect
RefFrame	thirdparty/imgui/include/imgui/imgui.h	/^    mutable int RefFrame;$/;"	m	struct:ImGuiOnceUponAFrame
Remotery	thirdparty/remotery/include/remotery/Remotery.h	/^typedef struct Remotery Remotery;$/;"	t	typeref:struct:Remotery
Remotery	thirdparty/remotery/src/Remotery.c	/^struct Remotery$/;"	s	file:
Remotery_BlockingDeleteSampleTree	thirdparty/remotery/src/Remotery.c	/^static void Remotery_BlockingDeleteSampleTree(Remotery* rmt, enum SampleType sample_type)$/;"	f	file:
Remotery_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError Remotery_Constructor(Remotery* rmt)$/;"	f	file:
Remotery_ConsumeMessageQueue	thirdparty/remotery/src/Remotery.c	/^static rmtError Remotery_ConsumeMessageQueue(Remotery* rmt)$/;"	f	file:
Remotery_DestroyThreadSamplers	thirdparty/remotery/src/Remotery.c	/^static void Remotery_DestroyThreadSamplers(Remotery* rmt)$/;"	f	file:
Remotery_Destructor	thirdparty/remotery/src/Remotery.c	/^static void Remotery_Destructor(Remotery* rmt)$/;"	f	file:
Remotery_FlushMessageQueue	thirdparty/remotery/src/Remotery.c	/^static void Remotery_FlushMessageQueue(Remotery* rmt)$/;"	f	file:
Remotery_GetThreadSampler	thirdparty/remotery/src/Remotery.c	/^static rmtError Remotery_GetThreadSampler(Remotery* rmt, ThreadSampler** thread_sampler)$/;"	f	file:
Remotery_ReceiveMessage	thirdparty/remotery/src/Remotery.c	/^static rmtError Remotery_ReceiveMessage(void* context, char* message_data, rmtU32 message_length)$/;"	f	file:
Remotery_SendLogTextMessage	thirdparty/remotery/src/Remotery.c	/^static rmtError Remotery_SendLogTextMessage(Remotery* rmt, Message* message)$/;"	f	file:
Remotery_SendSampleTreeMessage	thirdparty/remotery/src/Remotery.c	/^static rmtError Remotery_SendSampleTreeMessage(Remotery* rmt, Message* message)$/;"	f	file:
Remotery_ThreadMain	thirdparty/remotery/src/Remotery.c	/^static rmtError Remotery_ThreadMain(rmtThread* thread)$/;"	f	file:
Render	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Render()$/;"	f	class:ImGui
RenderBullet	thirdparty/imgui/src/imgui.cpp	/^void ImGui::RenderBullet(ImVec2 pos)$/;"	f	class:ImGui
RenderChar	thirdparty/imgui/src/imgui_draw.cpp	/^void ImFont::RenderChar(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, unsigned short c) const$/;"	f	class:ImFont
RenderCheckMark	thirdparty/imgui/src/imgui.cpp	/^void ImGui::RenderCheckMark(ImVec2 pos, ImU32 col)$/;"	f	class:ImGui
RenderCollapseTriangle	thirdparty/imgui/src/imgui.cpp	/^void ImGui::RenderCollapseTriangle(ImVec2 p_min, bool is_open, float scale)$/;"	f	class:ImGui
RenderCustomTexData	thirdparty/imgui/src/imgui_draw.cpp	/^void ImFontAtlas::RenderCustomTexData(int pass, void* p_rects)$/;"	f	class:ImFontAtlas
RenderDrawData	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImDrawData              RenderDrawData;                     \/\/ Main ImDrawData instance to pass render information to the user$/;"	m	struct:ImGuiContext
RenderDrawLists	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImDrawList*>   RenderDrawLists[3];$/;"	m	struct:ImGuiContext
RenderDrawListsFn	thirdparty/imgui/include/imgui/imgui.h	/^    void        (*RenderDrawListsFn)(ImDrawData* data);$/;"	m	struct:ImGuiIO
RenderFrame	thirdparty/imgui/src/imgui.cpp	/^void ImGui::RenderFrame(ImVec2 p_min, ImVec2 p_max, ImU32 fill_col, bool border, float rounding)$/;"	f	class:ImGui
RenderText	thirdparty/imgui/src/imgui.cpp	/^void ImGui::RenderText(ImVec2 pos, const char* text, const char* text_end, bool hide_text_after_hash)$/;"	f	class:ImGui
RenderText	thirdparty/imgui/src/imgui_draw.cpp	/^void ImFont::RenderText(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, const ImVec4& clip_rect, const char* text_begin, const char* text_end, float wrap_width, bool cpu_fine_clip) const$/;"	f	class:ImFont
RenderTextClipped	thirdparty/imgui/src/imgui.cpp	/^void ImGui::RenderTextClipped(const ImVec2& pos_min, const ImVec2& pos_max, const char* text, const char* text_end, const ImVec2* text_size_if_known, const ImVec2& align, const ImRect* clip_rect)$/;"	f	class:ImGui
RenderTextWrapped	thirdparty/imgui/src/imgui.cpp	/^void ImGui::RenderTextWrapped(ImVec2 pos, const char* text, const char* text_end, float wrap_width)$/;"	f	class:ImGui
Renderable	lib/nil/include/nil/data/renderable.hpp	/^struct Renderable$/;"	s	namespace:Nil::Data
Renderable	lib/roa/include/roa/renderable.hpp	/^class Renderable : public Object$/;"	c	namespace:ROA
Renderable	lib/roa/src/interface/renderable.cpp	/^Renderable::Renderable()$/;"	f	class:ROA::Renderable
Renderable	lib/roa/src/interface/renderable.cpp	/^Renderable::Renderable(const Mesh &mesh, const Material &mat)$/;"	f	class:ROA::Renderable
Renderable	lib/roa/src/interface/renderable.cpp	/^Renderable::Renderable(const ROA_nullptr null)$/;"	f	class:ROA::Renderable
Renderable_text	lib/nil/include/nil/data/renderable_text.hpp	/^struct Renderable_text$/;"	s	namespace:Nil::Data
Reset	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^void CPU::Reset()$/;"	f	class:CPU
Reset	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::Reset()$/;"	f	class:TED
ResetMouseDragDelta	thirdparty/imgui/src/imgui.cpp	/^void ImGui::ResetMouseDragDelta(int button)$/;"	f	class:ImGui
Residue	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} Residue;$/;"	t	typeref:struct:__anon207	file:
Residue	thirdparty/stb/include/stb/stb_vorbis.c	/^} Residue;$/;"	t	typeref:struct:__anon120	file:
Resource	lib/nil/include/nil/resource/directory.hpp	/^namespace Resource {$/;"	n	namespace:Nil
Resource	lib/nil/src/interface/resource/directory.cpp	/^namespace Resource {$/;"	n	namespace:Nil	file:
Resource	lib/roa/include/roa/resource.hpp	/^class Resource$/;"	c	namespace:ROA
Resource	lib/roa/src/common/resource_identifiers.hpp	/^namespace Resource {$/;"	n	namespace:ROA_detail
Resource	lib/roa/src/interface/resource.cpp	/^Resource::Resource()$/;"	f	class:ROA::Resource
Resource	lib/roa/src/interface/resource.cpp	/^Resource::Resource(Resource &&other)$/;"	f	class:ROA::Resource
Resource	lib/roa/src/interface/resource.cpp	/^Resource::Resource(const Resource &other)$/;"	f	class:ROA::Resource
Resource_status	lib/roa/include/roa/resource_status.hpp	/^enum class Resource_status {$/;"	c	namespace:ROA
ResultBuilder	thirdparty/catch/include/catch/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultDisposition	thirdparty/catch/include/catch/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultWas	thirdparty/catch/include/catch/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
RomHi	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^  	unsigned char RomHi[4][ROMSIZE];$/;"	m	class:TED
RomLo	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^  	unsigned char RomLo[4][ROMSIZE];$/;"	m	class:TED
RootNonPopupWindow	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiWindow*            RootNonPopupWindow;                 \/\/ If we are a child window, this is pointing to the first non-child non-popup parent window. Else point to ourself.$/;"	m	struct:ImGuiWindow
RootWindow	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiWindow*            RootWindow;                         \/\/ If we are a child window, this is pointing to the first non-child parent window. Else point to ourself.$/;"	m	struct:ImGuiWindow
RotationAxis	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   void matrix_t::RotationAxis(const vec_t & axis, float angle)$/;"	f	class:ImGuizmo::matrix_t
RoundScalar	thirdparty/imgui/src/imgui.cpp	/^float ImGui::RoundScalar(float value, int decimal_precision)$/;"	f	class:ImGui
Rule	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^typedef const char *Rule[4];$/;"	t	file:
Rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule *Rules[] =$/;"	v	file:
S	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	R					: 82,$/;"	p	class:namespace.Codes
SAFE_RELEASE	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	44;"	d	file:
SAMPLERATE	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^			SAMPLERATE = 1,$/;"	e	enum:SoLoud::BiquadResonantFilter::FILTERATTRIBUTE
SAMPLERATE	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^			SAMPLERATE = 1,$/;"	e	enum:SoLoud::BiquadResonantFilterInstance::FILTERATTRIBUTE
SAMPLERATE	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^			SAMPLERATE,$/;"	e	enum:SoLoud::LofiFilter::FILTERPARAMS
SAMPLERATE	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^			SAMPLERATE,$/;"	e	enum:SoLoud::LofiFilterInstance::FILTERPARAMS
SAMPLE_GRANULARITY	thirdparty/soloud/include/soloud/soloud.h	55;"	d
SAMPLE_GRANULARITY	thirdparty/soloud/src/tools/resamplerlab/main.cpp	173;"	d	file:
SAMPLE_NAME_LEN	thirdparty/remotery/src/Remotery.c	3710;"	d	file:
SAMPLE_unknown	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	4516;"	d	file:
SAMPLE_unknown	thirdparty/stb/include/stb/stb_vorbis.c	4517;"	d	file:
SAVE_TARGETS	thirdparty/glfw/src/x11_platform.h	/^    Atom            SAVE_TARGETS;$/;"	m	struct:_GLFWlibraryX11
SAW	thirdparty/soloud/include/soloud/soloud_monotone.h	/^			SAW    = 1,$/;"	e	enum:SoLoud::Monotone::MONOTONE_WAVEFORMS
SAWSIN	thirdparty/soloud/include/soloud/soloud_monotone.h	/^			SAWSIN = 3$/;"	e	enum:SoLoud::Monotone::MONOTONE_WAVEFORMS
SBC	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^inline void CPU::SBC(const unsigned char value)$/;"	f	class:CPU
SCALE	thirdparty/imguizmo/include/imguizmo/ImGuizmo.h	/^		SCALE$/;"	e	enum:ImGuizmo::OPERATION
SCALE_X	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      SCALE_X,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
SCALE_XYZ	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      SCALE_XYZ,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
SCALE_Y	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      SCALE_Y,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
SCALE_Z	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      SCALE_Z,$/;"	e	enum:ImGuizmo::MOVETYPE	file:
SCENARIO	thirdparty/catch/include/catch/catch.hpp	10430;"	d
SCENARIO_METHOD	thirdparty/catch/include/catch/catch.hpp	10431;"	d
SCENE_INCLUDED_0AAA3AB3_E344_420D_B5ED_FD0AF3C0762E	lib/roa/include/roa/scene.hpp	2;"	d
SCROLL_LOCK	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	NUMLOCK				: 144,$/;"	p	class:namespace.Codes
SCR_HSIZE	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	17;"	d
SCR_VSIZE	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	18;"	d
SDL	thirdparty/soloud/include/soloud/soloud.h	/^			SDL,$/;"	e	enum:SoLoud::Soloud::BACKENDS
SDL2	thirdparty/soloud/include/soloud/soloud.h	/^			SDL2,$/;"	e	enum:SoLoud::Soloud::BACKENDS
SDLCloseAudio	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^typedef void (*SDLCloseAudio)();$/;"	t	file:
SDLOpenAudio	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^typedef int (*SDLOpenAudio)(SDL_AudioSpec *desired, SDL_AudioSpec *obtained);$/;"	t	file:
SDLPauseAudio	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^typedef void (*SDLPauseAudio)(int pause_on);$/;"	t	file:
SD_SEND	thirdparty/remotery/src/Remotery.c	2060;"	d	file:
SEMICOLON	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	LAST_MEDIA_KEY		: 183,$/;"	p	class:namespace.Codes
SETFLAGS_ZN	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	4;"	d
SEVEN	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	SIX					: 54,$/;"	p	class:namespace.Codes
SFXR_BLIP	thirdparty/soloud/include/soloud/soloud_c.h	/^	SFXR_BLIP = 6,$/;"	e	enum:SOLOUD_ENUMS
SFXR_COIN	thirdparty/soloud/include/soloud/soloud_c.h	/^	SFXR_COIN = 0,$/;"	e	enum:SOLOUD_ENUMS
SFXR_EXPLOSION	thirdparty/soloud/include/soloud/soloud_c.h	/^	SFXR_EXPLOSION = 2,$/;"	e	enum:SOLOUD_ENUMS
SFXR_H	thirdparty/soloud/include/soloud/soloud_sfxr.h	27;"	d
SFXR_HURT	thirdparty/soloud/include/soloud/soloud_c.h	/^	SFXR_HURT = 4,$/;"	e	enum:SOLOUD_ENUMS
SFXR_JUMP	thirdparty/soloud/include/soloud/soloud_c.h	/^	SFXR_JUMP = 5,$/;"	e	enum:SOLOUD_ENUMS
SFXR_LASER	thirdparty/soloud/include/soloud/soloud_c.h	/^	SFXR_LASER = 1,$/;"	e	enum:SOLOUD_ENUMS
SFXR_POWERUP	thirdparty/soloud/include/soloud/soloud_c.h	/^	SFXR_POWERUP = 3,$/;"	e	enum:SOLOUD_ENUMS
SFXR_PRESETS	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		enum SFXR_PRESETS $/;"	g	class:SoLoud::Sfxr
SGI_swap_control	thirdparty/glfw/src/glx_context.h	/^    GLFWbool        SGI_swap_control;$/;"	m	struct:_GLFWlibraryGLX
SHA1	thirdparty/remotery/src/Remotery.c	/^} SHA1;$/;"	t	typeref:struct:__anon62	file:
SHA1_Calculate	thirdparty/remotery/src/Remotery.c	/^static SHA1 SHA1_Calculate(const void* src, unsigned int length)$/;"	f	file:
SHADER_INCLUDED_69FC0F54_CDC9_4734_ACE5_E5369C3A3E57	lib/nil/include/nil/resource/shader.hpp	2;"	d
SHADER_INCLUDED_72F4AAFA_8511_4E31_B987_90951F83344A	lib/roa/include/roa/shader.hpp	2;"	d
SHADER_INCLUDED_A6CCEEC8_C089_4FF8_8AEB_61A152D6C4B3	lib/nil/src/internal_data/resources/shader_data.hpp	2;"	d
SHADER_TYPE_INCLUDED_D89A2E75_5322_4D71_951B_A3366EEB1633	lib/roa/include/roa/shader_type.hpp	2;"	d
SHELLTYPE	app/blank/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	app/blank/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	app/fps_walk/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	app/fps_walk/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	app/perils/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	app/perils/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	app/they_never_pay/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	app/they_never_pay/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	app/tiles/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	app/tiles/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	lib/math/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	lib/math/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	lib/nau/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	lib/nau/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	lib/nil_aspects/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	lib/nil_aspects/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	lib/roa/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	lib/roa/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	lib/rov/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	lib/rov/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	thirdparty/catch/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	thirdparty/catch/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	thirdparty/glfw/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	thirdparty/glfw/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	thirdparty/imgui/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	thirdparty/imgui/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	thirdparty/imguizmo/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	thirdparty/imguizmo/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	thirdparty/json/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	thirdparty/json/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	thirdparty/opengl/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	thirdparty/opengl/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	thirdparty/remotery/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	thirdparty/remotery/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	thirdparty/soloud/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	thirdparty/soloud/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	thirdparty/stb/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	thirdparty/stb/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHELLTYPE	thirdparty/tinydir/data/Makefile	/^  SHELLTYPE := posix$/;"	m
SHELLTYPE	thirdparty/tinydir/data/Makefile	/^SHELLTYPE := msdos$/;"	m
SHEREDOM_JSON_H_INCLUDED	thirdparty/json/include/json/json.h	30;"	d
SHIFT	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	ENTER				: 13,$/;"	p	class:namespace.Codes
SHOULD_LOOP	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			SHOULD_LOOP = 1,$/;"	e	enum:SoLoud::AudioSource::FLAGS
SID6581	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	SID6581 = 0,$/;"	e	enum:__anon197
SID6581	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	SID6581 = 0,$/;"	e	enum:__anon191
SID6581R1	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	SID6581R1$/;"	e	enum:__anon197
SID6581R1	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	SID6581R1$/;"	e	enum:__anon191
SID8580	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	SID8580,$/;"	e	enum:__anon197
SID8580	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	SID8580,$/;"	e	enum:__anon191
SID8580DB	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	SID8580DB,$/;"	e	enum:__anon197
SID8580DB	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	SID8580DB,$/;"	e	enum:__anon191
SIDVoice	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	class SIDVoice {$/;"	c	class:SIDsound
SIDVoice	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	class SIDVoice {$/;"	c	class:SIDsound
SIDsound	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^SIDsound::SIDsound(unsigned int model, unsigned int chnlDisableMask) : enableDigiBlaster(false)$/;"	f	class:SIDsound
SIDsound	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^class SIDsound $/;"	c
SIDsound	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^SIDsound::SIDsound(unsigned int model, unsigned int chnlDisableMask) : enableDigiBlaster(false)$/;"	f	class:SIDsound
SIDsound	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^class SIDsound $/;"	c
SIG_ATOMIC_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	200;"	d
SIG_ATOMIC_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	199;"	d
SILENT	app/blank/data/Makefile	/^  SILENT = @$/;"	m
SILENT	app/fps_walk/data/Makefile	/^  SILENT = @$/;"	m
SILENT	app/perils/data/Makefile	/^  SILENT = @$/;"	m
SILENT	app/they_never_pay/data/Makefile	/^  SILENT = @$/;"	m
SILENT	app/tiles/data/Makefile	/^  SILENT = @$/;"	m
SILENT	lib/math/data/Makefile	/^  SILENT = @$/;"	m
SILENT	lib/nau/data/Makefile	/^  SILENT = @$/;"	m
SILENT	lib/nil_aspects/data/Makefile	/^  SILENT = @$/;"	m
SILENT	lib/roa/data/Makefile	/^  SILENT = @$/;"	m
SILENT	lib/rov/data/Makefile	/^  SILENT = @$/;"	m
SILENT	thirdparty/catch/data/Makefile	/^  SILENT = @$/;"	m
SILENT	thirdparty/glfw/data/Makefile	/^  SILENT = @$/;"	m
SILENT	thirdparty/imgui/data/Makefile	/^  SILENT = @$/;"	m
SILENT	thirdparty/imguizmo/data/Makefile	/^  SILENT = @$/;"	m
SILENT	thirdparty/json/data/Makefile	/^  SILENT = @$/;"	m
SILENT	thirdparty/opengl/data/Makefile	/^  SILENT = @$/;"	m
SILENT	thirdparty/remotery/data/Makefile	/^  SILENT = @$/;"	m
SILENT	thirdparty/soloud/data/Makefile	/^  SILENT = @$/;"	m
SILENT	thirdparty/stb/data/Makefile	/^  SILENT = @$/;"	m
SILENT	thirdparty/tinydir/data/Makefile	/^  SILENT = @$/;"	m
SIMD_TYPE	lib/math/include/math/vec/vec_types.hpp	15;"	d
SIMD_TYPE	lib/math/include/math/vec/vec_types.hpp	19;"	d
SIN	thirdparty/soloud/include/soloud/soloud_monotone.h	/^			SIN    = 2,$/;"	e	enum:SoLoud::Monotone::MONOTONE_WAVEFORMS
SINGLE_INSTANCE	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			SINGLE_INSTANCE = 2,$/;"	e	enum:SoLoud::AudioSource::FLAGS
SINGLE_QUOTE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	TILDE				: 192,	\/\/ needs localization$/;"	p	class:namespace.Codes
SIX	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	FIVE				: 53,$/;"	p	class:namespace.Codes
SIZE_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	204;"	d
SIZE_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	206;"	d
SLASH	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	PERIOD				: 190,	\/\/ needs localization$/;"	p	class:namespace.Codes
SOCKET	thirdparty/remotery/src/Remotery.c	/^    typedef int SOCKET;$/;"	t	file:
SOCKET_ERROR	thirdparty/remotery/src/Remotery.c	2059;"	d	file:
SOLOUD_ALSA	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_ALSA = 7,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_ASPECT_INCLUDED_433AF29E_B0ED_4559_97FF_21001B45BB80	lib/nil_aspects/include/aspect/so_loud.hpp	2;"	d
SOLOUD_AUDIOSOURCE_H	thirdparty/soloud/include/soloud/soloud_audiosource.h	26;"	d
SOLOUD_AUTO	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_AUTO = 0,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_BACKEND_MAX	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_BACKEND_MAX = 13,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_BASSBOOSTFILTER_H	thirdparty/soloud/include/soloud/soloud_bassboostfilter.h	26;"	d
SOLOUD_BQRFILTER_H	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	26;"	d
SOLOUD_BUS_H	thirdparty/soloud/include/soloud/soloud_bus.h	26;"	d
SOLOUD_CLIP_ROUNDOFF	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_CLIP_ROUNDOFF = 1,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_COREAUDIO	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_COREAUDIO = 10,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_C_H_INCLUDED	thirdparty/soloud/include/soloud/soloud_c.h	33;"	d
SOLOUD_DCREMOVAL_H	thirdparty/soloud/include/soloud/soloud_dcremovalfilter.h	26;"	d
SOLOUD_ECHOFILTER_H	thirdparty/soloud/include/soloud/soloud_echofilter.h	26;"	d
SOLOUD_ENABLE_VISUALIZATION	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_ENABLE_VISUALIZATION = 2,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_ENUMS	thirdparty/soloud/include/soloud/soloud_c.h	/^enum SOLOUD_ENUMS$/;"	g
SOLOUD_ERRORS	thirdparty/soloud/include/soloud/soloud_error.h	/^	enum SOLOUD_ERRORS$/;"	g	namespace:SoLoud
SOLOUD_ERROR_H	thirdparty/soloud/include/soloud/soloud_error.h	25;"	d
SOLOUD_FADER_H	thirdparty/soloud/include/soloud/soloud_fader.h	26;"	d
SOLOUD_FFTFILTER_H	thirdparty/soloud/include/soloud/soloud_fftfilter.h	26;"	d
SOLOUD_FFT_H	thirdparty/soloud/include/soloud/soloud_fft.h	26;"	d
SOLOUD_FILE_H	thirdparty/soloud/include/soloud/soloud_file.h	26;"	d
SOLOUD_FILTER_H	thirdparty/soloud/include/soloud/soloud_filter.h	26;"	d
SOLOUD_FLANGERFILTER_H	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	26;"	d
SOLOUD_H	thirdparty/soloud/include/soloud/soloud.h	26;"	d
SOLOUD_INTERNAL_H	thirdparty/soloud/include/soloud/soloud_internal.h	26;"	d
SOLOUD_LEFT_HANDED_3D	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_LEFT_HANDED_3D = 4,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_LOFIFILTER_H	thirdparty/soloud/include/soloud/soloud_lofifilter.h	26;"	d
SOLOUD_NULLDRIVER	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_NULLDRIVER = 12,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_OPENAL	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_OPENAL = 9,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_OPENSLES	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_OPENSLES = 11,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_OSS	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_OSS = 8,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_PORTAUDIO	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_PORTAUDIO = 3,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_SDL	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_SDL = 1,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_SDL2	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_SDL2 = 2,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_SPEECH_H	thirdparty/soloud/include/soloud/soloud_speech.h	25;"	d
SOLOUD_SSE_INTRINSICS	thirdparty/soloud/include/soloud/soloud.h	41;"	d
SOLOUD_THREAD_H	thirdparty/soloud/include/soloud/soloud_thread.h	26;"	d
SOLOUD_VERSION	thirdparty/soloud/include/soloud/soloud.h	45;"	d
SOLOUD_VIC_H	thirdparty/soloud/include/soloud/soloud_vic.h	29;"	d
SOLOUD_WASAPI	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_WASAPI = 6,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_WAVSTREAM_H	thirdparty/soloud/include/soloud/soloud_wavstream.h	26;"	d
SOLOUD_WAV_H	thirdparty/soloud/include/soloud/soloud_wav.h	26;"	d
SOLOUD_WINMM	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_WINMM = 4,$/;"	e	enum:SOLOUD_ENUMS
SOLOUD_XAUDIO2	thirdparty/soloud/include/soloud/soloud_c.h	/^	SOLOUD_XAUDIO2 = 5,$/;"	e	enum:SOLOUD_ENUMS
SOPRANO	thirdparty/soloud/include/soloud/soloud_vic.h	/^			SOPRANO,$/;"	e	enum:SoLoud::Vic::__anon188
SOUND_FREQ_PAL_C64	thirdparty/soloud/src/audiosource/tedsid/sid.h	4;"	d
SOUND_FREQ_PAL_C64	thirdparty/soloud/src/tools/tedsid2dump/sid.h	4;"	d
SO_NO_ERROR	thirdparty/soloud/include/soloud/soloud_error.h	/^		SO_NO_ERROR       = 0, \/\/ No error$/;"	e	enum:SoLoud::SOLOUD_ERRORS
SP	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned char  SP;$/;"	m	class:CPU
SPACE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	ESC					: 27,$/;"	p	class:namespace.Codes
SPECULAR	lib/lib/include/lib/model.hpp	/^  SPECULAR,$/;"	e	enum:LIB_NS_NAME::map_type::ENUM
SPOT	lib/nil/include/nil/data/light.hpp	/^  enum { POINT, DIR, SPOT } type;$/;"	e	enum:Nil::Data::Light::__anon9
SQUARE	thirdparty/soloud/include/soloud/soloud_monotone.h	/^			SQUARE = 0,$/;"	e	enum:SoLoud::Monotone::MONOTONE_WAVEFORMS
ST	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int  ST; \/\/ NV1BDIZC$/;"	m	class:CPU
STBIDEF	thirdparty/stb/include/stb/stb_image.h	328;"	d
STBIDEF	thirdparty/stb/include/stb/stb_image.h	330;"	d
STBIRDEF	thirdparty/stb/include/stb/stb_image_resize.h	197;"	d
STBIRDEF	thirdparty/stb/include/stb/stb_image_resize.h	200;"	d
STBIRDEF	thirdparty/stb/include/stb/stb_image_resize.h	202;"	d
STBIR_ALPHA_CHANNEL_NONE	thirdparty/stb/include/stb/stb_image_resize.h	240;"	d
STBIR_ALPHA_EPSILON	thirdparty/stb/include/stb/stb_image_resize.h	452;"	d
STBIR_ASSERT	thirdparty/stb/include/stb/stb_image_resize.h	388;"	d
STBIR_COLORSPACE_LINEAR	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_COLORSPACE_LINEAR,$/;"	e	enum:__anon68
STBIR_COLORSPACE_SRGB	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_COLORSPACE_SRGB,$/;"	e	enum:__anon68
STBIR_DEFAULT_FILTER_DOWNSAMPLE	thirdparty/stb/include/stb/stb_image_resize.h	430;"	d
STBIR_DEFAULT_FILTER_UPSAMPLE	thirdparty/stb/include/stb/stb_image_resize.h	426;"	d
STBIR_EDGE_CLAMP	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_EDGE_CLAMP   = 1,$/;"	e	enum:__anon66
STBIR_EDGE_REFLECT	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_EDGE_REFLECT = 2,$/;"	e	enum:__anon66
STBIR_EDGE_WRAP	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_EDGE_WRAP    = 3,$/;"	e	enum:__anon66
STBIR_EDGE_ZERO	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_EDGE_ZERO    = 4,$/;"	e	enum:__anon66
STBIR_FILTER_BOX	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_FILTER_BOX          = 1,  \/\/ A trapezoid w\/1-pixel wide ramps, same result as box for integer scale ratios$/;"	e	enum:__anon67
STBIR_FILTER_CATMULLROM	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_FILTER_CATMULLROM   = 4,  \/\/ An interpolating cubic spline$/;"	e	enum:__anon67
STBIR_FILTER_CUBICBSPLINE	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_FILTER_CUBICBSPLINE = 3,  \/\/ The cubic b-spline (aka Mitchell-Netrevalli with B=1,C=0), gaussian-esque$/;"	e	enum:__anon67
STBIR_FILTER_DEFAULT	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_FILTER_DEFAULT      = 0,  \/\/ use same filter type that easy-to-use API chooses$/;"	e	enum:__anon67
STBIR_FILTER_MITCHELL	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_FILTER_MITCHELL     = 5,  \/\/ Mitchell-Netrevalli filter with B=1\/3, C=1\/3$/;"	e	enum:__anon67
STBIR_FILTER_TRIANGLE	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_FILTER_TRIANGLE     = 2,  \/\/ On upsampling, produces same results as bilinear texture filtering$/;"	e	enum:__anon67
STBIR_FLAG_ALPHA_PREMULTIPLIED	thirdparty/stb/include/stb/stb_image_resize.h	245;"	d
STBIR_FLAG_ALPHA_USES_COLORSPACE	thirdparty/stb/include/stb/stb_image_resize.h	248;"	d
STBIR_FREE	thirdparty/stb/include/stb/stb_image_resize.h	400;"	d
STBIR_INCLUDE_STB_IMAGE_RESIZE_H	thirdparty/stb/include/stb/stb_image_resize.h	183;"	d
STBIR_MALLOC	thirdparty/stb/include/stb/stb_image_resize.h	399;"	d
STBIR_MAX_CHANNELS	thirdparty/stb/include/stb/stb_image_resize.h	438;"	d
STBIR_MAX_COLORSPACES	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_MAX_COLORSPACES,$/;"	e	enum:__anon68
STBIR_MAX_TYPES	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_MAX_TYPES$/;"	e	enum:__anon69
STBIR_PROGRESS_REPORT	thirdparty/stb/include/stb/stb_image_resize.h	434;"	d
STBIR_TYPE_FLOAT	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_TYPE_FLOAT ,$/;"	e	enum:__anon69
STBIR_TYPE_UINT16	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_TYPE_UINT16,$/;"	e	enum:__anon69
STBIR_TYPE_UINT32	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_TYPE_UINT32,$/;"	e	enum:__anon69
STBIR_TYPE_UINT8	thirdparty/stb/include/stb/stb_image_resize.h	/^    STBIR_TYPE_UINT8 ,$/;"	e	enum:__anon69
STBIR__ARRAY_SIZE	thirdparty/stb/include/stb/stb_image_resize.h	423;"	d
STBIR__DECODE	thirdparty/stb/include/stb/stb_image_resize.h	1239;"	d
STBIR__ENCODE_LINEAR16	thirdparty/stb/include/stb/stb_image_resize.h	1733;"	d
STBIR__ENCODE_LINEAR8	thirdparty/stb/include/stb/stb_image_resize.h	1732;"	d
STBIR__NEXT_MEMPTR	thirdparty/stb/include/stb/stb_image_resize.h	2368;"	d
STBIR__NEXT_MEMPTR	thirdparty/stb/include/stb/stb_image_resize.h	2393;"	d
STBIR__NOTUSED	thirdparty/stb/include/stb/stb_image_resize.h	418;"	d
STBIR__NOTUSED	thirdparty/stb/include/stb/stb_image_resize.h	420;"	d
STBIR__ROUND_INT	thirdparty/stb/include/stb/stb_image_resize.h	1728;"	d
STBIR__ROUND_UINT	thirdparty/stb/include/stb/stb_image_resize.h	1729;"	d
STBIR__UNUSED_PARAM	thirdparty/stb/include/stb/stb_image_resize.h	458;"	d
STBIR__UNUSED_PARAM	thirdparty/stb/include/stb/stb_image_resize.h	460;"	d
STBIWDEF	thirdparty/glfw/src/deps/stb_image_write.h	123;"	d
STBIWDEF	thirdparty/glfw/src/deps/stb_image_write.h	125;"	d
STBIWDEF	thirdparty/stb/include/stb/stb_image_write.h	132;"	d
STBIWDEF	thirdparty/stb/include/stb/stb_image_write.h	134;"	d
STBIW_ASSERT	thirdparty/glfw/src/deps/stb_image_write.h	195;"	d
STBIW_ASSERT	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	126;"	d
STBIW_ASSERT	thirdparty/stb/include/stb/stb_image_write.h	206;"	d
STBIW_FREE	thirdparty/glfw/src/deps/stb_image_write.h	180;"	d
STBIW_FREE	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	117;"	d
STBIW_FREE	thirdparty/stb/include/stb/stb_image_write.h	191;"	d
STBIW_MALLOC	thirdparty/glfw/src/deps/stb_image_write.h	178;"	d
STBIW_MALLOC	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	115;"	d
STBIW_MALLOC	thirdparty/stb/include/stb/stb_image_write.h	189;"	d
STBIW_MEMMOVE	thirdparty/glfw/src/deps/stb_image_write.h	189;"	d
STBIW_MEMMOVE	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	120;"	d
STBIW_MEMMOVE	thirdparty/stb/include/stb/stb_image_write.h	200;"	d
STBIW_REALLOC	thirdparty/glfw/src/deps/stb_image_write.h	179;"	d
STBIW_REALLOC	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	116;"	d
STBIW_REALLOC	thirdparty/stb/include/stb/stb_image_write.h	190;"	d
STBIW_REALLOC_SIZED	thirdparty/glfw/src/deps/stb_image_write.h	184;"	d
STBIW_REALLOC_SIZED	thirdparty/stb/include/stb/stb_image_write.h	195;"	d
STBIW_UCHAR	thirdparty/glfw/src/deps/stb_image_write.h	198;"	d
STBIW_UCHAR	thirdparty/stb/include/stb/stb_image_write.h	209;"	d
STBI_ASSERT	thirdparty/stb/include/stb/stb_image.h	516;"	d
STBI_FREE	thirdparty/stb/include/stb/stb_image.h	574;"	d
STBI_HAS_LROTL	thirdparty/stb/include/stb/stb_image.h	554;"	d
STBI_INCLUDE_STB_IMAGE_H	thirdparty/stb/include/stb/stb_image.h	103;"	d
STBI_MALLOC	thirdparty/stb/include/stb/stb_image.h	572;"	d
STBI_NEON	thirdparty/stb/include/stb/stb_image.h	663;"	d
STBI_NOTUSED	thirdparty/stb/include/stb/stb_image.h	548;"	d
STBI_NOTUSED	thirdparty/stb/include/stb/stb_image.h	550;"	d
STBI_NO_BMP	thirdparty/stb/include/stb/stb_image.h	473;"	d
STBI_NO_GIF	thirdparty/stb/include/stb/stb_image.h	482;"	d
STBI_NO_HDR	thirdparty/stb/include/stb/stb_image.h	485;"	d
STBI_NO_JPEG	thirdparty/stb/include/stb/stb_image.h	467;"	d
STBI_NO_PIC	thirdparty/stb/include/stb/stb_image.h	488;"	d
STBI_NO_PNG	thirdparty/stb/include/stb/stb_image.h	470;"	d
STBI_NO_PNM	thirdparty/stb/include/stb/stb_image.h	491;"	d
STBI_NO_PSD	thirdparty/stb/include/stb/stb_image.h	476;"	d
STBI_NO_SIMD	thirdparty/stb/include/stb/stb_image.h	596;"	d
STBI_NO_SIMD	thirdparty/stb/include/stb/stb_image.h	611;"	d
STBI_NO_TGA	thirdparty/stb/include/stb/stb_image.h	479;"	d
STBI_NO_ZLIB	thirdparty/stb/include/stb/stb_image.h	496;"	d
STBI_ONLY_BMP	thirdparty/stb/src/stb.cpp	6;"	d	file:
STBI_ONLY_JPEG	thirdparty/stb/src/stb.cpp	4;"	d	file:
STBI_ONLY_PNG	thirdparty/stb/src/stb.cpp	5;"	d	file:
STBI_ONLY_TGA	thirdparty/stb/src/stb.cpp	7;"	d	file:
STBI_ORDER_BGR	thirdparty/stb/include/stb/stb_image.h	/^   STBI_ORDER_BGR$/;"	e	enum:__anon77
STBI_ORDER_RGB	thirdparty/stb/include/stb/stb_image.h	/^   STBI_ORDER_RGB,$/;"	e	enum:__anon77
STBI_REALLOC	thirdparty/stb/include/stb/stb_image.h	573;"	d
STBI_REALLOC_SIZED	thirdparty/stb/include/stb/stb_image.h	578;"	d
STBI_SIMD_ALIGN	thirdparty/stb/include/stb/stb_image.h	641;"	d
STBI_SIMD_ALIGN	thirdparty/stb/include/stb/stb_image.h	649;"	d
STBI_SIMD_ALIGN	thirdparty/stb/include/stb/stb_image.h	669;"	d
STBI_SIMD_ALIGN	thirdparty/stb/include/stb/stb_image.h	673;"	d
STBI_SSE2	thirdparty/stb/include/stb/stb_image.h	615;"	d
STBI_VERSION	thirdparty/stb/include/stb/stb_image.h	308;"	d
STBI__BYTECAST	thirdparty/stb/include/stb/stb_image.h	1452;"	d
STBI__CASE	thirdparty/stb/include/stb/stb_image.h	1490;"	d
STBI__CASE	thirdparty/stb/include/stb/stb_image.h	1508;"	d
STBI__CASE	thirdparty/stb/include/stb/stb_image.h	1539;"	d
STBI__CASE	thirdparty/stb/include/stb/stb_image.h	1557;"	d
STBI__CASE	thirdparty/stb/include/stb/stb_image.h	4360;"	d
STBI__CASE	thirdparty/stb/include/stb/stb_image.h	4373;"	d
STBI__CASE	thirdparty/stb/include/stb/stb_image.h	4377;"	d
STBI__CASE	thirdparty/stb/include/stb/stb_image.h	4390;"	d
STBI__COMBO	thirdparty/stb/include/stb/stb_image.h	1489;"	d
STBI__COMBO	thirdparty/stb/include/stb/stb_image.h	1538;"	d
STBI__F_avg	thirdparty/stb/include/stb/stb_image.h	/^   STBI__F_avg=3,$/;"	e	enum:__anon88
STBI__F_avg_first	thirdparty/stb/include/stb/stb_image.h	/^   STBI__F_avg_first,$/;"	e	enum:__anon88
STBI__F_none	thirdparty/stb/include/stb/stb_image.h	/^   STBI__F_none=0,$/;"	e	enum:__anon88
STBI__F_paeth	thirdparty/stb/include/stb/stb_image.h	/^   STBI__F_paeth=4,$/;"	e	enum:__anon88
STBI__F_paeth_first	thirdparty/stb/include/stb/stb_image.h	/^   STBI__F_paeth_first$/;"	e	enum:__anon88
STBI__F_sub	thirdparty/stb/include/stb/stb_image.h	/^   STBI__F_sub=1,$/;"	e	enum:__anon88
STBI__F_up	thirdparty/stb/include/stb/stb_image.h	/^   STBI__F_up=2,$/;"	e	enum:__anon88
STBI__HDR_BUFLEN	thirdparty/stb/include/stb/stb_image.h	6426;"	d
STBI__IDCT_1D	thirdparty/stb/include/stb/stb_image.h	2118;"	d
STBI__MARKER_none	thirdparty/stb/include/stb/stb_image.h	2603;"	d
STBI__PNG_TYPE	thirdparty/stb/include/stb/stb_image.h	4678;"	d
STBI__RESTART	thirdparty/stb/include/stb/stb_image.h	2620;"	d
STBI__SCAN_header	thirdparty/stb/include/stb/stb_image.h	/^   STBI__SCAN_header$/;"	e	enum:__anon79
STBI__SCAN_load	thirdparty/stb/include/stb/stb_image.h	/^   STBI__SCAN_load=0,$/;"	e	enum:__anon79
STBI__SCAN_type	thirdparty/stb/include/stb/stb_image.h	/^   STBI__SCAN_type,$/;"	e	enum:__anon79
STBI__X64_TARGET	thirdparty/stb/include/stb/stb_image.h	583;"	d
STBI__X86_TARGET	thirdparty/stb/include/stb/stb_image.h	585;"	d
STBI__ZFAST_BITS	thirdparty/stb/include/stb/stb_image.h	3740;"	d
STBI__ZFAST_MASK	thirdparty/stb/include/stb/stb_image.h	3741;"	d
STBI_default	thirdparty/stb/include/stb/stb_image.h	/^   STBI_default = 0, \/\/ only used for desired_channels$/;"	e	enum:__anon74
STBI_grey	thirdparty/stb/include/stb/stb_image.h	/^   STBI_grey       = 1,$/;"	e	enum:__anon74
STBI_grey_alpha	thirdparty/stb/include/stb/stb_image.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anon74
STBI_rgb	thirdparty/stb/include/stb/stb_image.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anon74
STBI_rgb_alpha	thirdparty/stb/include/stb/stb_image.h	/^   STBI_rgb_alpha  = 4$/;"	e	enum:__anon74
STBRP_ASSERT	thirdparty/imgui/src/imgui_draw.cpp	84;"	d	file:
STBRP_ASSERT	thirdparty/stb/include/stb/stb_rect_pack.h	204;"	d
STBRP_DEF	thirdparty/stb/include/stb/stb_rect_pack.h	62;"	d
STBRP_DEF	thirdparty/stb/include/stb/stb_rect_pack.h	64;"	d
STBRP_HEURISTIC_Skyline_BF_sortHeight	thirdparty/stb/include/stb/stb_rect_pack.h	/^   STBRP_HEURISTIC_Skyline_BF_sortHeight$/;"	e	enum:__anon93
STBRP_HEURISTIC_Skyline_BL_sortHeight	thirdparty/stb/include/stb/stb_rect_pack.h	/^   STBRP_HEURISTIC_Skyline_BL_sortHeight = STBRP_HEURISTIC_Skyline_default,$/;"	e	enum:__anon93
STBRP_HEURISTIC_Skyline_default	thirdparty/stb/include/stb/stb_rect_pack.h	/^   STBRP_HEURISTIC_Skyline_default=0,$/;"	e	enum:__anon93
STBRP_SORT	thirdparty/stb/include/stb/stb_rect_pack.h	199;"	d
STBRP_STATIC	thirdparty/imgui/src/imgui_draw.cpp	86;"	d	file:
STBRP__INIT_skyline	thirdparty/stb/include/stb/stb_rect_pack.h	/^   STBRP__INIT_skyline = 1$/;"	e	enum:__anon94
STBRP__MAXVAL	thirdparty/stb/include/stb/stb_rect_pack.h	535;"	d
STBRP__MAXVAL	thirdparty/stb/include/stb/stb_rect_pack.h	537;"	d
STBRP__NOTUSED	thirdparty/stb/include/stb/stb_rect_pack.h	208;"	d
STBRP__NOTUSED	thirdparty/stb/include/stb/stb_rect_pack.h	210;"	d
STBTT_DEF	thirdparty/stb/include/stb/stb_truetype.h	470;"	d
STBTT_DEF	thirdparty/stb/include/stb/stb_truetype.h	472;"	d
STBTT_FIX	thirdparty/stb/include/stb/stb_truetype.h	2443;"	d
STBTT_FIXMASK	thirdparty/stb/include/stb/stb_truetype.h	2444;"	d
STBTT_FIXSHIFT	thirdparty/stb/include/stb/stb_truetype.h	2442;"	d
STBTT_MACSTYLE_BOLD	thirdparty/stb/include/stb/stb_truetype.h	966;"	d
STBTT_MACSTYLE_DONTCARE	thirdparty/stb/include/stb/stb_truetype.h	965;"	d
STBTT_MACSTYLE_ITALIC	thirdparty/stb/include/stb/stb_truetype.h	967;"	d
STBTT_MACSTYLE_NONE	thirdparty/stb/include/stb/stb_truetype.h	969;"	d
STBTT_MACSTYLE_UNDERSCORE	thirdparty/stb/include/stb/stb_truetype.h	968;"	d
STBTT_MAC_EID_ARABIC	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon107
STBTT_MAC_EID_CHINESE_TRAD	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon107
STBTT_MAC_EID_GREEK	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon107
STBTT_MAC_EID_HEBREW	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon107
STBTT_MAC_EID_JAPANESE	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon107
STBTT_MAC_EID_KOREAN	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon107
STBTT_MAC_EID_ROMAN	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon107
STBTT_MAC_EID_RUSSIAN	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon107
STBTT_MAC_LANG_ARABIC	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon109
STBTT_MAC_LANG_CHINESE_SIMPLIFIED	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon109
STBTT_MAC_LANG_CHINESE_TRAD	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon109
STBTT_MAC_LANG_DUTCH	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon109
STBTT_MAC_LANG_ENGLISH	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon109
STBTT_MAC_LANG_FRENCH	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon109
STBTT_MAC_LANG_GERMAN	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon109
STBTT_MAC_LANG_HEBREW	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon109
STBTT_MAC_LANG_ITALIAN	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon109
STBTT_MAC_LANG_JAPANESE	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon109
STBTT_MAC_LANG_KOREAN	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon109
STBTT_MAC_LANG_RUSSIAN	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon109
STBTT_MAC_LANG_SPANISH	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon109
STBTT_MAC_LANG_SWEDISH	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon109
STBTT_MAX_OVERSAMPLE	thirdparty/stb/include/stb/stb_truetype.h	1048;"	d
STBTT_MS_EID_SHIFTJIS	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_EID_SHIFTJIS      =2,$/;"	e	enum:__anon106
STBTT_MS_EID_SYMBOL	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_EID_SYMBOL        =0,$/;"	e	enum:__anon106
STBTT_MS_EID_UNICODE_BMP	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_EID_UNICODE_BMP   =1,$/;"	e	enum:__anon106
STBTT_MS_EID_UNICODE_FULL	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_EID_UNICODE_FULL  =10$/;"	e	enum:__anon106
STBTT_MS_LANG_CHINESE	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon108
STBTT_MS_LANG_DUTCH	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon108
STBTT_MS_LANG_ENGLISH	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon108
STBTT_MS_LANG_FRENCH	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon108
STBTT_MS_LANG_GERMAN	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon108
STBTT_MS_LANG_HEBREW	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon108
STBTT_MS_LANG_ITALIAN	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon108
STBTT_MS_LANG_JAPANESE	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon108
STBTT_MS_LANG_KOREAN	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon108
STBTT_MS_LANG_RUSSIAN	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon108
STBTT_MS_LANG_SPANISH	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon108
STBTT_MS_LANG_SWEDISH	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon108
STBTT_PLATFORM_ID_ISO	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_PLATFORM_ID_ISO       =2,$/;"	e	enum:__anon104
STBTT_PLATFORM_ID_MAC	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_PLATFORM_ID_MAC       =1,$/;"	e	enum:__anon104
STBTT_PLATFORM_ID_MICROSOFT	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_PLATFORM_ID_MICROSOFT =3$/;"	e	enum:__anon104
STBTT_PLATFORM_ID_UNICODE	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_PLATFORM_ID_UNICODE   =0,$/;"	e	enum:__anon104
STBTT_POINT_SIZE	thirdparty/stb/include/stb/stb_truetype.h	567;"	d
STBTT_RASTERIZER_VERSION	thirdparty/stb/include/stb/stb_truetype.h	1058;"	d
STBTT_STATIC	thirdparty/imgui/src/imgui_draw.cpp	95;"	d	file:
STBTT_UNICODE_EID_ISO_10646	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_UNICODE_EID_ISO_10646      =2,$/;"	e	enum:__anon105
STBTT_UNICODE_EID_UNICODE_1_0	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_1_0    =0,$/;"	e	enum:__anon105
STBTT_UNICODE_EID_UNICODE_1_1	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_1_1    =1,$/;"	e	enum:__anon105
STBTT_UNICODE_EID_UNICODE_2_0_BMP	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_2_0_BMP=3,$/;"	e	enum:__anon105
STBTT_UNICODE_EID_UNICODE_2_0_FULL	thirdparty/stb/include/stb/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_2_0_FULL=4$/;"	e	enum:__anon105
STBTT__COMPARE	thirdparty/stb/include/stb/stb_truetype.h	2932;"	d
STBTT__CSCTX_INIT	thirdparty/stb/include/stb/stb_truetype.h	1832;"	d
STBTT__CSERR	thirdparty/stb/include/stb/stb_truetype.h	1941;"	d
STBTT__CSERR	thirdparty/stb/include/stb/stb_truetype.h	2189;"	d
STBTT__NOTUSED	thirdparty/stb/include/stb/stb_truetype.h	1062;"	d
STBTT__NOTUSED	thirdparty/stb/include/stb/stb_truetype.h	1064;"	d
STBTT__OVER_MASK	thirdparty/stb/include/stb/stb_truetype.h	3533;"	d
STBTT_acos	thirdparty/stb/include/stb/stb_truetype.h	422;"	d
STBTT_assert	thirdparty/imgui/src/imgui_draw.cpp	93;"	d	file:
STBTT_assert	thirdparty/stb/include/stb/stb_truetype.h	444;"	d
STBTT_cos	thirdparty/stb/include/stb/stb_truetype.h	421;"	d
STBTT_fabs	thirdparty/stb/include/stb/stb_truetype.h	427;"	d
STBTT_fabs	thirdparty/stb/include/stb/stb_truetype.h	432;"	d
STBTT_free	thirdparty/imgui/src/imgui_draw.cpp	92;"	d	file:
STBTT_free	thirdparty/stb/include/stb/stb_truetype.h	439;"	d
STBTT_iceil	thirdparty/stb/include/stb/stb_truetype.h	410;"	d
STBTT_ifloor	thirdparty/stb/include/stb/stb_truetype.h	409;"	d
STBTT_malloc	thirdparty/imgui/src/imgui_draw.cpp	91;"	d	file:
STBTT_malloc	thirdparty/stb/include/stb/stb_truetype.h	438;"	d
STBTT_max	thirdparty/stb/include/stb/stb_truetype.h	3892;"	d
STBTT_memcpy	thirdparty/stb/include/stb/stb_truetype.h	454;"	d
STBTT_memset	thirdparty/stb/include/stb/stb_truetype.h	455;"	d
STBTT_min	thirdparty/stb/include/stb/stb_truetype.h	3891;"	d
STBTT_pow	thirdparty/stb/include/stb/stb_truetype.h	416;"	d
STBTT_sqrt	thirdparty/stb/include/stb/stb_truetype.h	415;"	d
STBTT_strlen	thirdparty/stb/include/stb/stb_truetype.h	449;"	d
STBTT_vcubic	thirdparty/stb/include/stb/stb_truetype.h	/^      STBTT_vcubic$/;"	e	enum:__anon101
STBTT_vcurve	thirdparty/stb/include/stb/stb_truetype.h	/^      STBTT_vcurve,$/;"	e	enum:__anon101
STBTT_vline	thirdparty/stb/include/stb/stb_truetype.h	/^      STBTT_vline,$/;"	e	enum:__anon101
STBTT_vmove	thirdparty/stb/include/stb/stb_truetype.h	/^      STBTT_vmove=1,$/;"	e	enum:__anon101
STBV_CDECL	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1114;"	d	file:
STBV_CDECL	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1116;"	d	file:
STBV_CDECL	thirdparty/stb/include/stb/stb_vorbis.c	1113;"	d	file:
STBV_CDECL	thirdparty/stb/include/stb/stb_vorbis.c	1115;"	d	file:
STBVorbisError	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^enum STBVorbisError$/;"	g	file:
STBVorbisError	thirdparty/stb/include/stb/stb_vorbis.c	/^enum STBVorbisError$/;"	g	file:
STB_COMPRESS_DXT_BLOCK	thirdparty/stb/include/stb/stb_dxt.h	35;"	d
STB_DXT_DITHER	thirdparty/stb/include/stb/stb_dxt.h	31;"	d
STB_DXT_HIGHQUAL	thirdparty/stb/include/stb/stb_dxt.h	32;"	d
STB_DXT_NORMAL	thirdparty/stb/include/stb/stb_dxt.h	30;"	d
STB_IMAGE_IMPLEMENTATION	thirdparty/stb/src/stb.cpp	8;"	d	file:
STB_IMAGE_RESIZE_IMPLEMENTATION	thirdparty/stb/src/stb.cpp	14;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.c	1;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	thirdparty/stb/src/stb.cpp	11;"	d	file:
STB_INCLUDE_STB_DXT_H	thirdparty/stb/include/stb/stb_dxt.h	27;"	d
STB_INCLUDE_STB_RECT_PACK_H	thirdparty/stb/include/stb/stb_rect_pack.h	57;"	d
STB_PERLIN_IMPLEMENTATION	thirdparty/stb/src/stb.cpp	17;"	d	file:
STB_RECT_PACK_IMPLEMENTATION	thirdparty/imgui/src/imgui_draw.cpp	87;"	d	file:
STB_RECT_PACK_VERSION	thirdparty/stb/include/stb/stb_rect_pack.h	59;"	d
STB_TEXTEDIT_CHARTYPE	thirdparty/imgui/include/imgui/imgui_internal.h	60;"	d
STB_TEXTEDIT_CHARTYPE	thirdparty/imgui/include/imgui/imgui_internal.h	62;"	d
STB_TEXTEDIT_CHARTYPE	thirdparty/stb/include/stb/stb_textedit.h	281;"	d
STB_TEXTEDIT_DELETECHARS	thirdparty/imgui/src/imgui.cpp	/^static void STB_TEXTEDIT_DELETECHARS(STB_TEXTEDIT_STRING* obj, int pos, int n)$/;"	f	namespace:ImGuiStb
STB_TEXTEDIT_GETCHAR	thirdparty/imgui/src/imgui.cpp	/^static ImWchar STB_TEXTEDIT_GETCHAR(const STB_TEXTEDIT_STRING* obj, int idx)                      { return obj->Text[idx]; }$/;"	f	namespace:ImGuiStb
STB_TEXTEDIT_GETWIDTH	thirdparty/imgui/src/imgui.cpp	/^static float   STB_TEXTEDIT_GETWIDTH(STB_TEXTEDIT_STRING* obj, int line_start_idx, int char_idx)  { ImWchar c = obj->Text[line_start_idx+char_idx]; if (c == '\\n') return STB_TEXTEDIT_GETWIDTH_NEWLINE; return GImGui->Font->GetCharAdvance(c) * (GImGui->FontSize \/ GImGui->Font->FontSize); }$/;"	f	namespace:ImGuiStb
STB_TEXTEDIT_GETWIDTH_NEWLINE	thirdparty/imgui/include/imgui/imgui_internal.h	63;"	d
STB_TEXTEDIT_IMPLEMENTATION	thirdparty/imgui/src/imgui.cpp	7559;"	d	file:
STB_TEXTEDIT_INSERTCHARS	thirdparty/imgui/src/imgui.cpp	/^static bool STB_TEXTEDIT_INSERTCHARS(STB_TEXTEDIT_STRING* obj, int pos, const ImWchar* new_text, int new_text_len)$/;"	f	namespace:ImGuiStb
STB_TEXTEDIT_KEYTOTEXT	thirdparty/imgui/src/imgui.cpp	/^static int     STB_TEXTEDIT_KEYTOTEXT(int key)                                                    { return key >= 0x10000 ? 0 : key; }$/;"	f	namespace:ImGuiStb
STB_TEXTEDIT_K_BACKSPACE	thirdparty/imgui/src/imgui.cpp	7552;"	d	file:
STB_TEXTEDIT_K_DELETE	thirdparty/imgui/src/imgui.cpp	7551;"	d	file:
STB_TEXTEDIT_K_DOWN	thirdparty/imgui/src/imgui.cpp	7546;"	d	file:
STB_TEXTEDIT_K_LEFT	thirdparty/imgui/src/imgui.cpp	7543;"	d	file:
STB_TEXTEDIT_K_LINEEND	thirdparty/imgui/src/imgui.cpp	7548;"	d	file:
STB_TEXTEDIT_K_LINESTART	thirdparty/imgui/src/imgui.cpp	7547;"	d	file:
STB_TEXTEDIT_K_REDO	thirdparty/imgui/src/imgui.cpp	7554;"	d	file:
STB_TEXTEDIT_K_RIGHT	thirdparty/imgui/src/imgui.cpp	7544;"	d	file:
STB_TEXTEDIT_K_SHIFT	thirdparty/imgui/src/imgui.cpp	7557;"	d	file:
STB_TEXTEDIT_K_TEXTEND	thirdparty/imgui/src/imgui.cpp	7550;"	d	file:
STB_TEXTEDIT_K_TEXTSTART	thirdparty/imgui/src/imgui.cpp	7549;"	d	file:
STB_TEXTEDIT_K_UNDO	thirdparty/imgui/src/imgui.cpp	7553;"	d	file:
STB_TEXTEDIT_K_UP	thirdparty/imgui/src/imgui.cpp	7545;"	d	file:
STB_TEXTEDIT_K_WORDLEFT	thirdparty/imgui/src/imgui.cpp	7555;"	d	file:
STB_TEXTEDIT_K_WORDRIGHT	thirdparty/imgui/src/imgui.cpp	7556;"	d	file:
STB_TEXTEDIT_LAYOUTROW	thirdparty/imgui/src/imgui.cpp	/^static void    STB_TEXTEDIT_LAYOUTROW(StbTexteditRow* r, STB_TEXTEDIT_STRING* obj, int line_start_idx)$/;"	f	namespace:ImGuiStb
STB_TEXTEDIT_MOVEWORDLEFT	thirdparty/imgui/src/imgui.cpp	7501;"	d	file:
STB_TEXTEDIT_MOVEWORDLEFT_IMPL	thirdparty/imgui/src/imgui.cpp	/^static int  STB_TEXTEDIT_MOVEWORDLEFT_IMPL(STB_TEXTEDIT_STRING* obj, int idx)   { idx--; while (idx >= 0 && !is_word_boundary_from_right(obj, idx)) idx--; return idx < 0 ? 0 : idx; }$/;"	f	namespace:ImGuiStb
STB_TEXTEDIT_MOVEWORDRIGHT	thirdparty/imgui/src/imgui.cpp	7502;"	d	file:
STB_TEXTEDIT_MOVEWORDRIGHT_IMPL	thirdparty/imgui/src/imgui.cpp	/^static int  STB_TEXTEDIT_MOVEWORDRIGHT_IMPL(STB_TEXTEDIT_STRING* obj, int idx)  { idx++; int len = obj->CurLenW; while (idx < len && !is_word_boundary_from_left(obj, idx)) idx++; return idx > len ? len : idx; }$/;"	f	namespace:ImGuiStb
STB_TEXTEDIT_MOVEWORDRIGHT_IMPL	thirdparty/imgui/src/imgui.cpp	/^static int  STB_TEXTEDIT_MOVEWORDRIGHT_IMPL(STB_TEXTEDIT_STRING* obj, int idx)  { idx++; int len = obj->CurLenW; while (idx < len && !is_word_boundary_from_right(obj, idx)) idx++; return idx > len ? len : idx; }$/;"	f	namespace:ImGuiStb
STB_TEXTEDIT_NEWLINE	thirdparty/imgui/src/imgui.cpp	/^static ImWchar STB_TEXTEDIT_NEWLINE = '\\n';$/;"	m	namespace:ImGuiStb	file:
STB_TEXTEDIT_POSITIONTYPE	thirdparty/stb/include/stb/stb_textedit.h	284;"	d
STB_TEXTEDIT_STRING	thirdparty/imgui/include/imgui/imgui_internal.h	59;"	d
STB_TEXTEDIT_STRING	thirdparty/imgui/include/imgui/imgui_internal.h	61;"	d
STB_TEXTEDIT_STRINGLEN	thirdparty/imgui/src/imgui.cpp	/^static int     STB_TEXTEDIT_STRINGLEN(const STB_TEXTEDIT_STRING* obj)                             { return obj->CurLenW; }$/;"	f	namespace:ImGuiStb
STB_TEXTEDIT_UNDOCHARCOUNT	thirdparty/stb/include/stb/stb_textedit.h	278;"	d
STB_TEXTEDIT_UNDOSTATECOUNT	thirdparty/stb/include/stb/stb_textedit.h	275;"	d
STB_TEXTEDIT_memmove	thirdparty/stb/include/stb/stb_textedit.h	372;"	d
STB_TEXT_HAS_SELECTION	thirdparty/stb/include/stb/stb_textedit.h	539;"	d
STB_TRUETYPE_IMPLEMENTATION	thirdparty/imgui/src/imgui_draw.cpp	96;"	d	file:
STB_TRUETYPE_IMPLEMENTATION	thirdparty/stb/src/stb.cpp	1;"	d	file:
STB_TexteditState	thirdparty/stb/include/stb/stb_textedit.h	/^} STB_TexteditState;$/;"	t	typeref:struct:__anon132
STB_VORBIS_ENDIAN	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	540;"	d	file:
STB_VORBIS_ENDIAN	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	542;"	d	file:
STB_VORBIS_ENDIAN	thirdparty/stb/include/stb/stb_vorbis.c	535;"	d	file:
STB_VORBIS_ENDIAN	thirdparty/stb/include/stb/stb_vorbis.c	537;"	d	file:
STB_VORBIS_FAST_HUFFMAN_LENGTH	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	458;"	d	file:
STB_VORBIS_FAST_HUFFMAN_LENGTH	thirdparty/stb/include/stb/stb_vorbis.c	453;"	d	file:
STB_VORBIS_FAST_HUFFMAN_SHORT	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	472;"	d	file:
STB_VORBIS_FAST_HUFFMAN_SHORT	thirdparty/stb/include/stb/stb_vorbis.c	467;"	d	file:
STB_VORBIS_HEADER_ONLY	thirdparty/soloud/src/audiosource/wav/stb_vorbis.h	1;"	d
STB_VORBIS_INCLUDE_STB_VORBIS_H	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	63;"	d	file:
STB_VORBIS_INCLUDE_STB_VORBIS_H	thirdparty/stb/include/stb/stb_vorbis.c	60;"	d	file:
STB_VORBIS_MAX_CHANNELS	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	433;"	d	file:
STB_VORBIS_MAX_CHANNELS	thirdparty/stb/include/stb/stb_vorbis.c	428;"	d	file:
STB_VORBIS_NO_INTEGER_CONVERSION	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	525;"	d	file:
STB_VORBIS_NO_INTEGER_CONVERSION	thirdparty/stb/include/stb/stb_vorbis.c	520;"	d	file:
STB_VORBIS_NO_STDIO	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	526;"	d	file:
STB_VORBIS_NO_STDIO	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	530;"	d	file:
STB_VORBIS_NO_STDIO	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	66;"	d	file:
STB_VORBIS_NO_STDIO	thirdparty/stb/include/stb/stb_vorbis.c	521;"	d	file:
STB_VORBIS_NO_STDIO	thirdparty/stb/include/stb/stb_vorbis.c	525;"	d	file:
STB_VORBIS_NO_STDIO	thirdparty/stb/include/stb/stb_vorbis.c	63;"	d	file:
STB_VORBIS_PUSHDATA_CRC_COUNT	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	449;"	d	file:
STB_VORBIS_PUSHDATA_CRC_COUNT	thirdparty/stb/include/stb/stb_vorbis.c	444;"	d	file:
STITCH_CLARA_CLOSE_NAMESPACE	thirdparty/catch/include/catch/catch.hpp	3629;"	d
STITCH_CLARA_CLOSE_NAMESPACE	thirdparty/catch/include/catch/catch.hpp	4612;"	d
STITCH_CLARA_OPEN_NAMESPACE	thirdparty/catch/include/catch/catch.hpp	3618;"	d
STITCH_CLARA_OPEN_NAMESPACE	thirdparty/catch/include/catch/catch.hpp	3628;"	d
STITCH_CLARA_OPEN_NAMESPACE	thirdparty/catch/include/catch/catch.hpp	4611;"	d
STITCH_CLARA_OPEN_NAMESPACE	thirdparty/catch/include/catch/catch.hpp	4615;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	thirdparty/catch/include/catch/catch.hpp	3634;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	thirdparty/catch/include/catch/catch.hpp	3784;"	d
STOP	lib/nil/include/nil/data/audio.hpp	/^  enum { NO_REQ_STATE, PLAY, STOP }          request_state;$/;"	e	enum:Nil::Data::Audio::__anon10
STOPPED	lib/nil/include/nil/data/audio.hpp	/^  enum { NO_CURR_STATE, PLAYING, STOPPED }   current_state;$/;"	e	enum:Nil::Data::Audio::__anon11
STRING	lib/lib/include/lib/memory.hpp	/^  STRING,$/;"	e	enum:LIB_NS_NAME::mem::tag::ENUM
STRING_HELPERS_INCLUDED_CC0C05E9_7D4D_4A69_B002_6E59BDC031B9	lib/lib/include/lib/string.hpp	9;"	d
STRING_POOL_IMPL_INCLUDED_8B50BA25_E5FB_4CC4_951D_C5F7A28EA1D0	lib/lib/include/lib/string_pool.hpp	77;"	d
STRING_POOL_INCLUDED_26A88090_79A3_42D1_8803_1895B52DAF00	lib/lib/include/lib/string_pool.hpp	15;"	d
S_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule S_rules[] =$/;"	v	file:
SafeBool	thirdparty/catch/include/catch/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SameLine	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SameLine(float pos_x, float spacing_w)$/;"	f	class:ImGui
Sample	thirdparty/remotery/src/Remotery.c	/^    Sample Sample;$/;"	m	struct:CUDASample	file:
Sample	thirdparty/remotery/src/Remotery.c	/^    Sample Sample;$/;"	m	struct:D3D11Sample	file:
Sample	thirdparty/remotery/src/Remotery.c	/^typedef struct Sample$/;"	s	file:
Sample	thirdparty/remotery/src/Remotery.c	/^} Sample;$/;"	t	typeref:struct:Sample	file:
SampleTree	thirdparty/remotery/src/Remotery.c	/^typedef struct SampleTree$/;"	s	file:
SampleTree	thirdparty/remotery/src/Remotery.c	/^} SampleTree;$/;"	t	typeref:struct:SampleTree	file:
SampleTree_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError SampleTree_Constructor(SampleTree* tree, rmtU32 sample_size, ObjConstructor constructor, ObjDestructor destructor)$/;"	f	file:
SampleTree_Destructor	thirdparty/remotery/src/Remotery.c	/^static void SampleTree_Destructor(SampleTree* tree)$/;"	f	file:
SampleTree_Pop	thirdparty/remotery/src/Remotery.c	/^static void SampleTree_Pop(SampleTree* tree, Sample* sample)$/;"	f	file:
SampleTree_Push	thirdparty/remotery/src/Remotery.c	/^static rmtError SampleTree_Push(SampleTree* tree, rmtU32 name_hash, rmtU32 flags, Sample** sample)$/;"	f	file:
SampleType	thirdparty/remotery/src/Remotery.c	/^enum SampleType$/;"	g	file:
SampleType_CPU	thirdparty/remotery/src/Remotery.c	/^    SampleType_CPU,$/;"	e	enum:SampleType	file:
SampleType_CUDA	thirdparty/remotery/src/Remotery.c	/^    SampleType_CUDA,$/;"	e	enum:SampleType	file:
SampleType_Count	thirdparty/remotery/src/Remotery.c	/^    SampleType_Count,$/;"	e	enum:SampleType	file:
SampleType_D3D11	thirdparty/remotery/src/Remotery.c	/^    SampleType_D3D11,$/;"	e	enum:SampleType	file:
SampleType_Metal	thirdparty/remotery/src/Remotery.c	/^    SampleType_Metal,$/;"	e	enum:SampleType	file:
SampleType_OpenGL	thirdparty/remotery/src/Remotery.c	/^    SampleType_OpenGL,$/;"	e	enum:SampleType	file:
Sample_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError Sample_Constructor(Sample* sample)$/;"	f	file:
Sample_Destructor	thirdparty/remotery/src/Remotery.c	/^static void Sample_Destructor(Sample* sample)$/;"	f	file:
Sample_Prepare	thirdparty/remotery/src/Remotery.c	/^static void Sample_Prepare(Sample* sample, rmtU32 name_hash, Sample* parent)$/;"	f	file:
SaveIniSettingsToDisk	thirdparty/imgui/src/imgui.cpp	/^static void SaveIniSettingsToDisk(const char* ini_filename)$/;"	f	file:
ScalarAsInputTextId	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiID                 ScalarAsInputTextId;                \/\/ Temporary text input when CTRL+clicking on a slider, etc.$/;"	m	struct:ImGuiContext
Scale	thirdparty/imgui/include/imgui/imgui.h	/^    float                       Scale;              \/\/ = 1.f        \/\/ Base font scale, multiplied by the per-window font scale which you can adjust with SetFontScale()$/;"	m	struct:ImFont
Scale	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void Scale(const vec_t& s) { Scale(s.x, s.y, s.z); }$/;"	f	struct:ImGuizmo::matrix_t
Scale	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void Scale(float _x, float _y, float _z)$/;"	f	struct:ImGuizmo::matrix_t
ScaleClipRects	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawData::ScaleClipRects(const ImVec2& scale)$/;"	f	class:ImDrawData
Scene	lib/roa/include/roa/scene.hpp	/^namespace Scene {$/;"	n	namespace:ROA
Scene	lib/roa/src/interface/model_scene.cpp	/^namespace Scene {$/;"	n	namespace:ROA	file:
ScreenOn	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static bool ScreenOn, AttribFetch;$/;"	v	file:
Scroll	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  Scroll;$/;"	m	struct:ImGuiWindow
ScrollTarget	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  ScrollTarget;                       \/\/ target scroll position. stored as cursor position with scrolling canceled out, so the highest point is always 0.0f. (FLT_MAX for no change)$/;"	m	struct:ImGuiWindow
ScrollTargetCenterRatio	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  ScrollTargetCenterRatio;            \/\/ 0.0f = scroll so that target position is at top, 0.5f = scroll so that target position is centered$/;"	m	struct:ImGuiWindow
ScrollX	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float               ScrollX;$/;"	m	struct:ImGuiTextEditState
Scrollbar	thirdparty/imgui/src/imgui.cpp	/^static void Scrollbar(ImGuiWindow* window, bool horizontal)$/;"	f	file:
ScrollbarClickDeltaToGrabCenter	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  ScrollbarClickDeltaToGrabCenter;    \/\/ Distance between mouse and center of grab box, normalized in parent space. Use storage?$/;"	m	struct:ImGuiContext
ScrollbarRounding	thirdparty/imgui/include/imgui/imgui.h	/^    float       ScrollbarRounding;          \/\/ Radius of grab corners for scrollbar$/;"	m	struct:ImGuiStyle
ScrollbarSize	thirdparty/imgui/include/imgui/imgui.h	/^    float       ScrollbarSize;              \/\/ Width of the vertical scrollbar, Height of the horizontal scrollbar$/;"	m	struct:ImGuiStyle
ScrollbarSizes	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  ScrollbarSizes;$/;"	m	struct:ImGuiWindow
ScrollbarX	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    ScrollbarX, ScrollbarY;$/;"	m	struct:ImGuiWindow
ScrollbarY	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    ScrollbarX, ScrollbarY;$/;"	m	struct:ImGuiWindow
SelectAll	thirdparty/imgui/include/imgui/imgui_internal.h	/^    void                SelectAll()                 { StbState.select_start = 0; StbState.select_end = CurLenW; StbState.cursor = StbState.select_end; StbState.has_preferred_x = false; }$/;"	f	struct:ImGuiTextEditState
SelectEvents	thirdparty/glfw/src/x11_platform.h	/^        PFN_XISelectEvents SelectEvents;$/;"	m	struct:_GLFWlibraryX11::__anon152
Selectable	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::Selectable(const char* label, bool selected, ImGuiSelectableFlags flags, const ImVec2& size_arg)$/;"	f	class:ImGui
Selectable	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::Selectable(const char* label, bool* p_selected, ImGuiSelectableFlags flags, const ImVec2& size_arg)$/;"	f	class:ImGui
SelectedAllMouseLock	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                SelectedAllMouseLock;$/;"	m	struct:ImGuiTextEditState
SelectionEnd	thirdparty/imgui/include/imgui/imgui.h	/^    int                 SelectionEnd;   \/\/                                      \/\/ Read-write$/;"	m	struct:ImGuiTextEditCallbackData
SelectionStart	thirdparty/imgui/include/imgui/imgui.h	/^    int                 SelectionStart; \/\/                                      \/\/ Read-write (== to SelectionEnd when no selection)$/;"	m	struct:ImGuiTextEditCallbackData
Separator	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Separator()$/;"	f	class:ImGui
Server	thirdparty/remotery/src/Remotery.c	/^} Server;$/;"	t	typeref:struct:__anon65	file:
Server_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError Server_Constructor(Server* server, rmtU16 port, rmtBool limit_connections_to_localhost)$/;"	f	file:
Server_CreateListenSocket	thirdparty/remotery/src/Remotery.c	/^static rmtError Server_CreateListenSocket(Server* server, rmtU16 port, rmtBool limit_connections_to_localhost)$/;"	f	file:
Server_Destructor	thirdparty/remotery/src/Remotery.c	/^static void Server_Destructor(Server* server)$/;"	f	file:
Server_DisconnectClient	thirdparty/remotery/src/Remotery.c	/^static void Server_DisconnectClient(Server* server)$/;"	f	file:
Server_IsClientConnected	thirdparty/remotery/src/Remotery.c	/^static rmtBool Server_IsClientConnected(Server* server)$/;"	f	file:
Server_ReceiveHandler	thirdparty/remotery/src/Remotery.c	/^typedef rmtError (*Server_ReceiveHandler)(void*, char*, rmtU32);$/;"	t	file:
Server_ReceiveMessage	thirdparty/remotery/src/Remotery.c	/^static rmtError Server_ReceiveMessage(Server* server, char message_first_byte, rmtU32 message_length)$/;"	f	file:
Server_Send	thirdparty/remotery/src/Remotery.c	/^static rmtError Server_Send(Server* server, const void* data, rmtU32 length, rmtU32 timeout)$/;"	f	file:
Server_Update	thirdparty/remotery/src/Remotery.c	/^static void Server_Update(Server* server)$/;"	f	file:
Set	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void Set(float _x, float _y, float _z = 0.f, float _w = 0.f) { x = _x; y = _y; z = _z; w = _w; }$/;"	f	struct:ImGuizmo::vec_t
Set	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void Set(float v) { x = y = z = w = v; }$/;"	f	struct:ImGuizmo::vec_t
SetActiveID	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetActiveID(ImGuiID id, ImGuiWindow* window)$/;"	f	class:ImGui
SetAllInt	thirdparty/imgui/src/imgui.cpp	/^void ImGuiStorage::SetAllInt(int v)$/;"	f	class:ImGuiStorage
SetBool	thirdparty/imgui/src/imgui.cpp	/^void ImGuiStorage::SetBool(ImGuiID key, bool val)$/;"	f	class:ImGuiStorage
SetClipboardText	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetClipboardText(const char* text)$/;"	f	class:ImGui
SetClipboardTextFn	thirdparty/imgui/include/imgui/imgui.h	/^    void        (*SetClipboardTextFn)(void* user_data, const char* text);$/;"	m	struct:ImGuiIO
SetClipboardTextFn_DefaultImpl	thirdparty/imgui/src/imgui.cpp	/^static void SetClipboardTextFn_DefaultImpl(void*, const char* text)$/;"	f	file:
SetColumnOffset	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetColumnOffset(int column_index, float offset)$/;"	f	class:ImGui
SetCurrentContext	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetCurrentContext(ImGuiContext* ctx)$/;"	f	class:ImGui
SetCurrentFont	thirdparty/imgui/src/imgui.cpp	/^static void SetCurrentFont(ImFont* font)$/;"	f	file:
SetCurrentWindow	thirdparty/imgui/src/imgui.cpp	/^static void SetCurrentWindow(ImGuiWindow* window)$/;"	f	file:
SetCursorPos	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetCursorPos(const ImVec2& local_pos)$/;"	f	class:ImGui
SetCursorPosX	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetCursorPosX(float x)$/;"	f	class:ImGui
SetCursorPosY	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetCursorPosY(float y)$/;"	f	class:ImGui
SetCursorPosYAndSetupDummyPrevLine	thirdparty/imgui/src/imgui.cpp	/^static void SetCursorPosYAndSetupDummyPrevLine(float pos_y, float line_height)$/;"	f	file:
SetCursorScreenPos	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetCursorScreenPos(const ImVec2& screen_pos)$/;"	f	class:ImGui
SetDebuggerThreadName	thirdparty/remotery/src/Remotery.c	/^static void SetDebuggerThreadName(const char* name)$/;"	f	file:
SetFallbackChar	thirdparty/imgui/src/imgui_draw.cpp	/^void ImFont::SetFallbackChar(ImWchar c)$/;"	f	class:ImFont
SetFloat	thirdparty/imgui/src/imgui.cpp	/^void ImGuiStorage::SetFloat(ImGuiID key, float val)$/;"	f	class:ImGuiStorage
SetGammaRamp	thirdparty/glfw/src/x11_platform.h	/^        PFN_XF86VidModeSetGammaRamp SetGammaRamp;$/;"	m	struct:_GLFWlibraryX11::__anon151
SetHSV	thirdparty/imgui/include/imgui/imgui.h	/^    inline void    SetHSV(float h, float s, float v, float a = 1.0f){ ImGui::ColorConvertHSVtoRGB(h, s, v, Value.x, Value.y, Value.z); Value.w = a; }$/;"	f	struct:ImColor
SetHoveredID	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetHoveredID(ImGuiID id)$/;"	f	class:ImGui
SetInt	thirdparty/imgui/src/imgui.cpp	/^void ImGuiStorage::SetInt(ImGuiID key, int val)$/;"	f	class:ImGuiStorage
SetItemAllowOverlap	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetItemAllowOverlap()$/;"	f	class:ImGui
SetKeyboardFocusHere	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetKeyboardFocusHere(int offset)$/;"	f	class:ImGui
SetMouseCursor	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetMouseCursor(ImGuiMouseCursor cursor_type)$/;"	f	class:ImGui
SetNextTreeNodeOpen	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetNextTreeNodeOpen(bool is_open, ImGuiSetCond cond)$/;"	f	class:ImGui
SetNextTreeNodeOpenCond	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiSetCond            SetNextTreeNodeOpenCond;$/;"	m	struct:ImGuiContext
SetNextTreeNodeOpenVal	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    SetNextTreeNodeOpenVal;$/;"	m	struct:ImGuiContext
SetNextWindowCollapsed	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetNextWindowCollapsed(bool collapsed, ImGuiSetCond cond)$/;"	f	class:ImGui
SetNextWindowCollapsedCond	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiSetCond            SetNextWindowCollapsedCond;$/;"	m	struct:ImGuiContext
SetNextWindowCollapsedVal	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    SetNextWindowCollapsedVal;$/;"	m	struct:ImGuiContext
SetNextWindowContentSize	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetNextWindowContentSize(const ImVec2& size)$/;"	f	class:ImGui
SetNextWindowContentSizeCond	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiSetCond            SetNextWindowContentSizeCond;$/;"	m	struct:ImGuiContext
SetNextWindowContentSizeVal	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  SetNextWindowContentSizeVal;$/;"	m	struct:ImGuiContext
SetNextWindowContentWidth	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetNextWindowContentWidth(float width)$/;"	f	class:ImGui
SetNextWindowFocus	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    SetNextWindowFocus;$/;"	m	struct:ImGuiContext
SetNextWindowFocus	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetNextWindowFocus()$/;"	f	class:ImGui
SetNextWindowPos	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetNextWindowPos(const ImVec2& pos, ImGuiSetCond cond)$/;"	f	class:ImGui
SetNextWindowPosCenter	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetNextWindowPosCenter(ImGuiSetCond cond)$/;"	f	class:ImGui
SetNextWindowPosCond	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiSetCond            SetNextWindowPosCond;$/;"	m	struct:ImGuiContext
SetNextWindowPosVal	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  SetNextWindowPosVal;$/;"	m	struct:ImGuiContext
SetNextWindowSize	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetNextWindowSize(const ImVec2& size, ImGuiSetCond cond)$/;"	f	class:ImGui
SetNextWindowSizeCond	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiSetCond            SetNextWindowSizeCond;$/;"	m	struct:ImGuiContext
SetNextWindowSizeConstraint	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    SetNextWindowSizeConstraint;$/;"	m	struct:ImGuiContext
SetNextWindowSizeConstraintCallback	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiSizeConstraintCallback SetNextWindowSizeConstraintCallback;$/;"	m	struct:ImGuiContext
SetNextWindowSizeConstraintCallbackUserData	thirdparty/imgui/include/imgui/imgui_internal.h	/^    void*                       SetNextWindowSizeConstraintCallbackUserData;$/;"	m	struct:ImGuiContext
SetNextWindowSizeConstraintRect	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImRect                  SetNextWindowSizeConstraintRect;           \/\/ Valid if 'SetNextWindowSizeConstraint' is true$/;"	m	struct:ImGuiContext
SetNextWindowSizeConstraints	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetNextWindowSizeConstraints(const ImVec2& size_min, const ImVec2& size_max, ImGuiSizeConstraintCallback custom_callback, void* custom_callback_user_data)$/;"	f	class:ImGui
SetNextWindowSizeVal	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  SetNextWindowSizeVal;$/;"	m	struct:ImGuiContext
SetProcessDPIAware	thirdparty/glfw/src/win32_platform.h	/^        PFN_SetProcessDPIAware          SetProcessDPIAware;$/;"	m	struct:_GLFWlibraryWin32::__anon156
SetProcessDpiAwareness	thirdparty/glfw/src/win32_platform.h	/^        PFN_SetProcessDpiAwareness      SetProcessDpiAwareness;$/;"	m	struct:_GLFWlibraryWin32::__anon158
SetRect	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   void SetRect(float x, float y, float width, float height)$/;"	f	namespace:ImGuizmo
SetScrollFromPosY	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetScrollFromPosY(float pos_y, float center_y_ratio)$/;"	f	class:ImGui
SetScrollHere	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetScrollHere(float center_y_ratio)$/;"	f	class:ImGui
SetScrollPosHere	thirdparty/imgui/include/imgui/imgui.h	/^    static inline void      SetScrollPosHere() { SetScrollHere(); }                            \/\/ OBSOLETE 1.42+$/;"	f	namespace:ImGui
SetScrollX	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetScrollX(float scroll_x)$/;"	f	class:ImGui
SetScrollY	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetScrollY(float scroll_y)$/;"	f	class:ImGui
SetStateStorage	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetStateStorage(ImGuiStorage* tree)$/;"	f	class:ImGui
SetTexID	thirdparty/imgui/include/imgui/imgui.h	/^    void                        SetTexID(void* id)  { TexID = id; }$/;"	f	struct:ImFontAtlas
SetToIdentity	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void SetToIdentity() $/;"	f	struct:ImGuizmo::matrix_t
SetTooltip	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetTooltip(const char* fmt, ...)$/;"	f	class:ImGui
SetTooltipV	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetTooltipV(const char* fmt, va_list args)$/;"	f	class:ImGui
SetVFlag	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		inline void SetVFlag() { ST|=0x40; };$/;"	f	class:CPU
SetVoidPtr	thirdparty/imgui/src/imgui.cpp	/^void ImGuiStorage::SetVoidPtr(ImGuiID key, void* val)$/;"	f	class:ImGuiStorage
SetWindowCollapsed	thirdparty/imgui/src/imgui.cpp	/^static void SetWindowCollapsed(ImGuiWindow* window, bool collapsed, ImGuiSetCond cond)$/;"	f	file:
SetWindowCollapsed	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetWindowCollapsed(bool collapsed, ImGuiSetCond cond)$/;"	f	class:ImGui
SetWindowCollapsed	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetWindowCollapsed(const char* name, bool collapsed, ImGuiSetCond cond)$/;"	f	class:ImGui
SetWindowCollapsedAllowFlags	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     SetWindowCollapsedAllowFlags;       \/\/ bit ImGuiSetCond_*** specify if SetWindowCollapsed() call will succeed with this particular flag.$/;"	m	struct:ImGuiWindow
SetWindowFocus	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetWindowFocus()$/;"	f	class:ImGui
SetWindowFocus	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetWindowFocus(const char* name)$/;"	f	class:ImGui
SetWindowFontScale	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetWindowFontScale(float scale)$/;"	f	class:ImGui
SetWindowPos	thirdparty/imgui/src/imgui.cpp	/^static void SetWindowPos(ImGuiWindow* window, const ImVec2& pos, ImGuiSetCond cond)$/;"	f	file:
SetWindowPos	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetWindowPos(const ImVec2& pos, ImGuiSetCond cond)$/;"	f	class:ImGui
SetWindowPos	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetWindowPos(const char* name, const ImVec2& pos, ImGuiSetCond cond)$/;"	f	class:ImGui
SetWindowPosAllowFlags	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     SetWindowPosAllowFlags;             \/\/ bit ImGuiSetCond_*** specify if SetWindowPos() call will succeed with this particular flag.$/;"	m	struct:ImGuiWindow
SetWindowPosCenterWanted	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    SetWindowPosCenterWanted;$/;"	m	struct:ImGuiWindow
SetWindowScrollY	thirdparty/imgui/src/imgui.cpp	/^static void SetWindowScrollY(ImGuiWindow* window, float new_scroll_y)$/;"	f	file:
SetWindowSize	thirdparty/imgui/src/imgui.cpp	/^static void SetWindowSize(ImGuiWindow* window, const ImVec2& size, ImGuiSetCond cond)$/;"	f	file:
SetWindowSize	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetWindowSize(const ImVec2& size, ImGuiSetCond cond)$/;"	f	class:ImGui
SetWindowSize	thirdparty/imgui/src/imgui.cpp	/^void ImGui::SetWindowSize(const char* name, const ImVec2& size, ImGuiSetCond cond)$/;"	f	class:ImGui
SetWindowSizeAllowFlags	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     SetWindowSizeAllowFlags;            \/\/ bit ImGuiSetCond_*** specify if SetWindowSize() call will succeed with this particular flag.$/;"	m	struct:ImGuiWindow
Settings	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImGuiIniData>  Settings;                           \/\/ .ini Settings$/;"	m	struct:ImGuiContext
SettingsDirtyTimer	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   SettingsDirtyTimer;                 \/\/ Save .ini Settings on disk when time reaches zero$/;"	m	struct:ImGuiContext
Sfxr	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * Sfxr;$/;"	t
Sfxr	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^	class Sfxr : public AudioSource$/;"	c	namespace:SoLoud
Sfxr	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	Sfxr::Sfxr()$/;"	f	class:SoLoud::Sfxr
SfxrInstance	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^	class SfxrInstance : public AudioSourceInstance$/;"	c	namespace:SoLoud
SfxrInstance	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	SfxrInstance::SfxrInstance(Sfxr *aParent)$/;"	f	class:SoLoud::SfxrInstance
SfxrParams	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^	struct SfxrParams$/;"	s	namespace:SoLoud
Sfxr_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * Sfxr_create()$/;"	f
Sfxr_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_destroy(void * aClassPtr)$/;"	f
Sfxr_loadParams	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Sfxr_loadParams(void * aClassPtr, const char * aFilename)$/;"	f
Sfxr_loadParamsFile	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Sfxr_loadParamsFile(void * aClassPtr, File * aFile)$/;"	f
Sfxr_loadParamsMem	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Sfxr_loadParamsMem(void * aClassPtr, unsigned char * aMem, unsigned int aLength)$/;"	f
Sfxr_loadParamsMemEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Sfxr_loadParamsMemEx(void * aClassPtr, unsigned char * aMem, unsigned int aLength, int aCopy, int aTakeOwnership)$/;"	f
Sfxr_loadPreset	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Sfxr_loadPreset(void * aClassPtr, int aPresetNo, int aRandSeed)$/;"	f
Sfxr_resetParams	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_resetParams(void * aClassPtr)$/;"	f
Sfxr_set3dAttenuation	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_set3dAttenuation(void * aClassPtr, unsigned int aAttenuationModel, float aAttenuationRolloffFactor)$/;"	f
Sfxr_set3dAttenuator	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_set3dAttenuator(void * aClassPtr, AudioAttenuator * aAttenuator)$/;"	f
Sfxr_set3dCollider	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_set3dCollider(void * aClassPtr, AudioCollider * aCollider)$/;"	f
Sfxr_set3dColliderEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_set3dColliderEx(void * aClassPtr, AudioCollider * aCollider, int aUserData)$/;"	f
Sfxr_set3dDistanceDelay	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_set3dDistanceDelay(void * aClassPtr, int aDistanceDelay)$/;"	f
Sfxr_set3dDopplerFactor	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_set3dDopplerFactor(void * aClassPtr, float aDopplerFactor)$/;"	f
Sfxr_set3dListenerRelative	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_set3dListenerRelative(void * aClassPtr, int aListenerRelative)$/;"	f
Sfxr_set3dMinMaxDistance	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_set3dMinMaxDistance(void * aClassPtr, float aMinDistance, float aMaxDistance)$/;"	f
Sfxr_set3dProcessing	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_set3dProcessing(void * aClassPtr, int aDo3dProcessing)$/;"	f
Sfxr_setFilter	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_setFilter(void * aClassPtr, unsigned int aFilterId, Filter * aFilter)$/;"	f
Sfxr_setInaudibleBehavior	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_setInaudibleBehavior(void * aClassPtr, int aMustTick, int aKill)$/;"	f
Sfxr_setLooping	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_setLooping(void * aClassPtr, int aLoop)$/;"	f
Sfxr_setVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_setVolume(void * aClassPtr, float aVolume)$/;"	f
Sfxr_stop	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Sfxr_stop(void * aClassPtr)$/;"	f
Shader	lib/roa/src/interface/shader.cpp	/^Shader::Shader()$/;"	f	class:ROA::Shader
Shader_type	lib/roa/include/roa/shader_type.hpp	/^enum class Shader_type$/;"	c	namespace:ROA
ShareLists	thirdparty/glfw/src/wgl_context.h	/^    PFN_wglShareLists                   ShareLists;$/;"	m	struct:_GLFWlibraryWGL
SharedImpl	thirdparty/catch/include/catch/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	thirdparty/catch/include/catch/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
ShowMetricsWindow	thirdparty/imgui/src/imgui.cpp	/^void ImGui::ShowMetricsWindow(bool* p_open)$/;"	f	class:ImGui
Shutdown	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Shutdown()$/;"	f	class:ImGui
ShutdownNetwork	thirdparty/remotery/src/Remotery.c	/^static void ShutdownNetwork()$/;"	f	file:
SideBorderFlipFlop	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static bool SideBorderFlipFlop, CharacterWindow;$/;"	v	file:
Silent	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static const char Silent[] = "";$/;"	v	file:
Size	thirdparty/imgui/include/imgui/imgui.h	/^    int                         Size;$/;"	m	class:ImVector
Size	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  Size;                               \/\/ Current size (==SizeFull or collapsed title bar size)$/;"	m	struct:ImGuiWindow
Size	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2              Size;$/;"	m	struct:ImGuiMouseCursorData
Size	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2      Size;$/;"	m	struct:ImGuiIniData
SizeContents	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  SizeContents;                       \/\/ Size of contents (== extents reach of the drawing cursor) from previous frame$/;"	m	struct:ImGuiWindow
SizeContentsExplicit	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  SizeContentsExplicit;               \/\/ Size of contents explicitly set by the user via SetNextWindowContentSize()$/;"	m	struct:ImGuiWindow
SizeFull	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  SizeFull;                           \/\/ Size when non collapsed$/;"	m	struct:ImGuiWindow
SizePixels	thirdparty/imgui/include/imgui/imgui.h	/^    float           SizePixels;                 \/\/          \/\/ Size in pixels for rasterizer$/;"	m	struct:ImFontConfig
SkipItems	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    SkipItems;                          \/\/ == Visible && !Collapsed$/;"	m	struct:ImGuiWindow
SliderAngle	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::SliderAngle(const char* label, float* v_rad, float v_degrees_min, float v_degrees_max)$/;"	f	class:ImGui
SliderBehavior	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::SliderBehavior(const ImRect& frame_bb, ImGuiID id, float* v, float v_min, float v_max, float power, int decimal_precision, ImGuiSliderFlags flags)$/;"	f	class:ImGui
SliderBehaviorCalcRatioFromValue	thirdparty/imgui/src/imgui.cpp	/^static inline float SliderBehaviorCalcRatioFromValue(float v, float v_min, float v_max, float power, float linear_zero_pos)$/;"	f	file:
SliderFloat	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::SliderFloat(const char* label, float* v, float v_min, float v_max, const char* display_format, float power)$/;"	f	class:ImGui
SliderFloat2	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::SliderFloat2(const char* label, float v[2], float v_min, float v_max, const char* display_format, float power)$/;"	f	class:ImGui
SliderFloat3	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::SliderFloat3(const char* label, float v[3], float v_min, float v_max, const char* display_format, float power)$/;"	f	class:ImGui
SliderFloat4	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::SliderFloat4(const char* label, float v[4], float v_min, float v_max, const char* display_format, float power)$/;"	f	class:ImGui
SliderFloatN	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::SliderFloatN(const char* label, float* v, int components, float v_min, float v_max, const char* display_format, float power)$/;"	f	class:ImGui
SliderInt	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::SliderInt(const char* label, int* v, int v_min, int v_max, const char* display_format)$/;"	f	class:ImGui
SliderInt2	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::SliderInt2(const char* label, int v[2], int v_min, int v_max, const char* display_format)$/;"	f	class:ImGui
SliderInt3	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::SliderInt3(const char* label, int v[3], int v_min, int v_max, const char* display_format)$/;"	f	class:ImGui
SliderInt4	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::SliderInt4(const char* label, int v[4], int v_min, int v_max, const char* display_format)$/;"	f	class:ImGui
SliderIntN	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::SliderIntN(const char* label, int* v, int components, int v_min, int v_max, const char* display_format)$/;"	f	class:ImGui
Slope	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	Slope() $/;"	f	class:Slope
Slope	thirdparty/soloud/src/audiosource/speech/klatt.h	/^class Slope$/;"	c
SmallButton	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::SmallButton(const char* label)$/;"	f	class:ImGui
Snd1Status	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             Snd1Status;$/;"	m	class:TED
Snd1Status	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static int             Snd1Status;$/;"	v	file:
Snd2Status	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             Snd2Status;$/;"	m	class:TED
Snd2Status	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static int             Snd2Status;$/;"	v	file:
SndNoiseStatus	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             SndNoiseStatus;$/;"	m	class:TED
SndNoiseStatus	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static int             SndNoiseStatus;$/;"	v	file:
SoLoud	thirdparty/soloud/include/soloud/soloud.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_bassboostfilter.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_bus.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_dcremovalfilter.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_echofilter.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_error.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_fader.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_fft.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_fftfilter.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_file.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_filter.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_internal.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_monotone.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_openmpt.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_speech.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_tedsid.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_thread.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_vic.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_wav.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^namespace SoLoud$/;"	n
SoLoud	thirdparty/soloud/src/audiosource/monotone/soloud_monotone.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/audiosource/speech/soloud_speech.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/audiosource/vic/soloud_vic.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/coreaudio/soloud_coreaudio.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/null/soloud_null.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/openal/soloud_openal.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/opensles/soloud_opensles.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/portaudio/soloud_portaudio.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/sdl/soloud_sdl.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/sdl2_static/soloud_sdl2_static.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/sdl_static/soloud_sdl_static.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/vita_homebrew/soloud_vita_homebrew.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_bus.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_core_basicops.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_core_faderops.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_core_filterops.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_core_voicegroup.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_core_voiceops.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_fader.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_fft.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_file.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_filter.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/core/soloud_thread.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/filter/soloud_bassboostfilter.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/filter/soloud_biquadresonantfilter.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/filter/soloud_dcremovalfilter.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/filter/soloud_echofilter.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/filter/soloud_fftfilter.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/filter/soloud_flangerfilter.cpp	/^namespace SoLoud$/;"	n	file:
SoLoud	thirdparty/soloud/src/filter/soloud_lofifilter.cpp	/^namespace SoLoud$/;"	n	file:
SoLoudWinMMData	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^    struct SoLoudWinMMData$/;"	s	namespace:SoLoud	file:
SoLoud_Aspect	lib/nil_aspects/include/aspect/so_loud.hpp	/^namespace SoLoud_Aspect {$/;"	n	namespace:Nil_ext
SoLoud_Aspect	lib/nil_aspects/src/so_loud.cpp	/^namespace SoLoud_Aspect {$/;"	n	namespace:Nil_ext	file:
SocketStatus	thirdparty/remotery/src/Remotery.c	/^} SocketStatus;$/;"	t	typeref:struct:__anon61	file:
Soloud	thirdparty/soloud/include/soloud/soloud.h	/^	class Soloud$/;"	c	namespace:SoLoud
Soloud	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * Soloud;$/;"	t
Soloud	thirdparty/soloud/src/core/soloud.cpp	/^	Soloud::Soloud()$/;"	f	class:SoLoud::Soloud
Soloud_Filehack	thirdparty/soloud/include/soloud/soloud_file.h	/^typedef void* Soloud_Filehack;$/;"	t
Soloud_Filehack	thirdparty/soloud/include/soloud/soloud_file_hack_on.h	/^typedef void* Soloud_Filehack;$/;"	t
Soloud_Filehack_fclose	thirdparty/soloud/src/core/soloud_file.cpp	/^	int Soloud_Filehack_fclose(Soloud_Filehack *f)$/;"	f
Soloud_Filehack_fgetc	thirdparty/soloud/src/core/soloud_file.cpp	/^	int Soloud_Filehack_fgetc(Soloud_Filehack *f)$/;"	f
Soloud_Filehack_fopen	thirdparty/soloud/src/core/soloud_file.cpp	/^	Soloud_Filehack * Soloud_Filehack_fopen(const char *aFilename, char *aMode)$/;"	f
Soloud_Filehack_fread	thirdparty/soloud/src/core/soloud_file.cpp	/^	int Soloud_Filehack_fread(void *dst, int s, int c, Soloud_Filehack *f)$/;"	f
Soloud_Filehack_fseek	thirdparty/soloud/src/core/soloud_file.cpp	/^	int Soloud_Filehack_fseek(Soloud_Filehack *f, int idx, int base)$/;"	f
Soloud_Filehack_ftell	thirdparty/soloud/src/core/soloud_file.cpp	/^	int Soloud_Filehack_ftell(Soloud_Filehack *f)$/;"	f
Soloud_addVoiceToGroup	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_addVoiceToGroup(void * aClassPtr, unsigned int aVoiceGroupHandle, unsigned int aVoiceHandle)$/;"	f
Soloud_calcFFT	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float * Soloud_calcFFT(void * aClassPtr)$/;"	f
Soloud_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * Soloud_create()$/;"	f
Soloud_createVoiceGroup	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_createVoiceGroup(void * aClassPtr)$/;"	f
Soloud_deinit	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_deinit(void * aClassPtr)$/;"	f
Soloud_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_destroy(void * aClassPtr)$/;"	f
Soloud_destroyVoiceGroup	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_destroyVoiceGroup(void * aClassPtr, unsigned int aVoiceGroupHandle)$/;"	f
Soloud_fadeFilterParameter	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_fadeFilterParameter(void * aClassPtr, unsigned int aVoiceHandle, unsigned int aFilterId, unsigned int aAttributeId, float aTo, double aTime)$/;"	f
Soloud_fadeGlobalVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_fadeGlobalVolume(void * aClassPtr, float aTo, double aTime)$/;"	f
Soloud_fadePan	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_fadePan(void * aClassPtr, unsigned int aVoiceHandle, float aTo, double aTime)$/;"	f
Soloud_fadeRelativePlaySpeed	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_fadeRelativePlaySpeed(void * aClassPtr, unsigned int aVoiceHandle, float aTo, double aTime)$/;"	f
Soloud_fadeVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_fadeVolume(void * aClassPtr, unsigned int aVoiceHandle, float aTo, double aTime)$/;"	f
Soloud_fft_bitrev_10	thirdparty/soloud/src/core/soloud_fft_lut.cpp	/^int Soloud_fft_bitrev_10[1024] = {$/;"	v
Soloud_fft_bitrev_8	thirdparty/soloud/src/core/soloud_fft_lut.cpp	/^int Soloud_fft_bitrev_8[256] = {$/;"	v
Soloud_fft_trig_10	thirdparty/soloud/src/core/soloud_fft_lut.cpp	/^float Soloud_fft_trig_10[508] = {$/;"	v
Soloud_fft_trig_8	thirdparty/soloud/src/core/soloud_fft_lut.cpp	/^float Soloud_fft_trig_8[124] = {$/;"	v
Soloud_get3dSoundSpeed	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float Soloud_get3dSoundSpeed(void * aClassPtr)$/;"	f
Soloud_getActiveVoiceCount	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_getActiveVoiceCount(void * aClassPtr)$/;"	f
Soloud_getBackendBufferSize	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_getBackendBufferSize(void * aClassPtr)$/;"	f
Soloud_getBackendChannels	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_getBackendChannels(void * aClassPtr)$/;"	f
Soloud_getBackendId	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_getBackendId(void * aClassPtr)$/;"	f
Soloud_getBackendSamplerate	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_getBackendSamplerate(void * aClassPtr)$/;"	f
Soloud_getBackendString	thirdparty/soloud/src/c_api/soloud_c.cpp	/^const char * Soloud_getBackendString(void * aClassPtr)$/;"	f
Soloud_getErrorString	thirdparty/soloud/src/c_api/soloud_c.cpp	/^const char * Soloud_getErrorString(void * aClassPtr, int aErrorCode)$/;"	f
Soloud_getFilterParameter	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float Soloud_getFilterParameter(void * aClassPtr, unsigned int aVoiceHandle, unsigned int aFilterId, unsigned int aAttributeId)$/;"	f
Soloud_getGlobalVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float Soloud_getGlobalVolume(void * aClassPtr)$/;"	f
Soloud_getInfo	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float Soloud_getInfo(void * aClassPtr, unsigned int aVoiceHandle, unsigned int aInfoKey)$/;"	f
Soloud_getLoopCount	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_getLoopCount(void * aClassPtr, unsigned int aVoiceHandle)$/;"	f
Soloud_getLooping	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_getLooping(void * aClassPtr, unsigned int aVoiceHandle)$/;"	f
Soloud_getMaxActiveVoiceCount	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_getMaxActiveVoiceCount(void * aClassPtr)$/;"	f
Soloud_getOverallVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float Soloud_getOverallVolume(void * aClassPtr, unsigned int aVoiceHandle)$/;"	f
Soloud_getPan	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float Soloud_getPan(void * aClassPtr, unsigned int aVoiceHandle)$/;"	f
Soloud_getPause	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_getPause(void * aClassPtr, unsigned int aVoiceHandle)$/;"	f
Soloud_getPostClipScaler	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float Soloud_getPostClipScaler(void * aClassPtr)$/;"	f
Soloud_getProtectVoice	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_getProtectVoice(void * aClassPtr, unsigned int aVoiceHandle)$/;"	f
Soloud_getRelativePlaySpeed	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float Soloud_getRelativePlaySpeed(void * aClassPtr, unsigned int aVoiceHandle)$/;"	f
Soloud_getSamplerate	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float Soloud_getSamplerate(void * aClassPtr, unsigned int aVoiceHandle)$/;"	f
Soloud_getStreamTime	thirdparty/soloud/src/c_api/soloud_c.cpp	/^double Soloud_getStreamTime(void * aClassPtr, unsigned int aVoiceHandle)$/;"	f
Soloud_getVersion	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_getVersion(void * aClassPtr)$/;"	f
Soloud_getVoiceCount	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_getVoiceCount(void * aClassPtr)$/;"	f
Soloud_getVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float Soloud_getVolume(void * aClassPtr, unsigned int aVoiceHandle)$/;"	f
Soloud_getWave	thirdparty/soloud/src/c_api/soloud_c.cpp	/^float * Soloud_getWave(void * aClassPtr)$/;"	f
Soloud_init	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_init(void * aClassPtr)$/;"	f
Soloud_initEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_initEx(void * aClassPtr, unsigned int aFlags, unsigned int aBackend, unsigned int aSamplerate, unsigned int aBufferSize, unsigned int aChannels)$/;"	f
Soloud_isValidVoiceHandle	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_isValidVoiceHandle(void * aClassPtr, unsigned int aVoiceHandle)$/;"	f
Soloud_isVoiceGroup	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_isVoiceGroup(void * aClassPtr, unsigned int aVoiceGroupHandle)$/;"	f
Soloud_isVoiceGroupEmpty	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_isVoiceGroupEmpty(void * aClassPtr, unsigned int aVoiceGroupHandle)$/;"	f
Soloud_mix	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_mix(void * aClassPtr, float * aBuffer, unsigned int aSamples)$/;"	f
Soloud_mixSigned16	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_mixSigned16(void * aClassPtr, short * aBuffer, unsigned int aSamples)$/;"	f
Soloud_oscillateFilterParameter	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_oscillateFilterParameter(void * aClassPtr, unsigned int aVoiceHandle, unsigned int aFilterId, unsigned int aAttributeId, float aFrom, float aTo, double aTime)$/;"	f
Soloud_oscillateGlobalVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_oscillateGlobalVolume(void * aClassPtr, float aFrom, float aTo, double aTime)$/;"	f
Soloud_oscillatePan	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_oscillatePan(void * aClassPtr, unsigned int aVoiceHandle, float aFrom, float aTo, double aTime)$/;"	f
Soloud_oscillateRelativePlaySpeed	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_oscillateRelativePlaySpeed(void * aClassPtr, unsigned int aVoiceHandle, float aFrom, float aTo, double aTime)$/;"	f
Soloud_oscillateVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_oscillateVolume(void * aClassPtr, unsigned int aVoiceHandle, float aFrom, float aTo, double aTime)$/;"	f
Soloud_play	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_play(void * aClassPtr, AudioSource * aSound)$/;"	f
Soloud_play3d	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_play3d(void * aClassPtr, AudioSource * aSound, float aPosX, float aPosY, float aPosZ)$/;"	f
Soloud_play3dClocked	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_play3dClocked(void * aClassPtr, double aSoundTime, AudioSource * aSound, float aPosX, float aPosY, float aPosZ)$/;"	f
Soloud_play3dClockedEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_play3dClockedEx(void * aClassPtr, double aSoundTime, AudioSource * aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, unsigned int aBus)$/;"	f
Soloud_play3dEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_play3dEx(void * aClassPtr, AudioSource * aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, int aPaused, unsigned int aBus)$/;"	f
Soloud_playClocked	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_playClocked(void * aClassPtr, double aSoundTime, AudioSource * aSound)$/;"	f
Soloud_playClockedEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_playClockedEx(void * aClassPtr, double aSoundTime, AudioSource * aSound, float aVolume, float aPan, unsigned int aBus)$/;"	f
Soloud_playEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^unsigned int Soloud_playEx(void * aClassPtr, AudioSource * aSound, float aVolume, float aPan, int aPaused, unsigned int aBus)$/;"	f
Soloud_schedulePause	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_schedulePause(void * aClassPtr, unsigned int aVoiceHandle, double aTime)$/;"	f
Soloud_scheduleStop	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_scheduleStop(void * aClassPtr, unsigned int aVoiceHandle, double aTime)$/;"	f
Soloud_seek	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_seek(void * aClassPtr, unsigned int aVoiceHandle, double aSeconds)$/;"	f
Soloud_set3dListenerAt	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_set3dListenerAt(void * aClassPtr, float aAtX, float aAtY, float aAtZ)$/;"	f
Soloud_set3dListenerParameters	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_set3dListenerParameters(void * aClassPtr, float aPosX, float aPosY, float aPosZ, float aAtX, float aAtY, float aAtZ, float aUpX, float aUpY, float aUpZ)$/;"	f
Soloud_set3dListenerParametersEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_set3dListenerParametersEx(void * aClassPtr, float aPosX, float aPosY, float aPosZ, float aAtX, float aAtY, float aAtZ, float aUpX, float aUpY, float aUpZ, float aVelocityX, float aVelocityY, float aVelocityZ)$/;"	f
Soloud_set3dListenerPosition	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_set3dListenerPosition(void * aClassPtr, float aPosX, float aPosY, float aPosZ)$/;"	f
Soloud_set3dListenerUp	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_set3dListenerUp(void * aClassPtr, float aUpX, float aUpY, float aUpZ)$/;"	f
Soloud_set3dListenerVelocity	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_set3dListenerVelocity(void * aClassPtr, float aVelocityX, float aVelocityY, float aVelocityZ)$/;"	f
Soloud_set3dSoundSpeed	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_set3dSoundSpeed(void * aClassPtr, float aSpeed)$/;"	f
Soloud_set3dSourceAttenuation	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_set3dSourceAttenuation(void * aClassPtr, unsigned int aVoiceHandle, unsigned int aAttenuationModel, float aAttenuationRolloffFactor)$/;"	f
Soloud_set3dSourceDopplerFactor	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_set3dSourceDopplerFactor(void * aClassPtr, unsigned int aVoiceHandle, float aDopplerFactor)$/;"	f
Soloud_set3dSourceMinMaxDistance	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_set3dSourceMinMaxDistance(void * aClassPtr, unsigned int aVoiceHandle, float aMinDistance, float aMaxDistance)$/;"	f
Soloud_set3dSourceParameters	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_set3dSourceParameters(void * aClassPtr, unsigned int aVoiceHandle, float aPosX, float aPosY, float aPosZ)$/;"	f
Soloud_set3dSourceParametersEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_set3dSourceParametersEx(void * aClassPtr, unsigned int aVoiceHandle, float aPosX, float aPosY, float aPosZ, float aVelocityX, float aVelocityY, float aVelocityZ)$/;"	f
Soloud_set3dSourcePosition	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_set3dSourcePosition(void * aClassPtr, unsigned int aVoiceHandle, float aPosX, float aPosY, float aPosZ)$/;"	f
Soloud_set3dSourceVelocity	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_set3dSourceVelocity(void * aClassPtr, unsigned int aVoiceHandle, float aVelocityX, float aVelocityY, float aVelocityZ)$/;"	f
Soloud_setDelaySamples	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setDelaySamples(void * aClassPtr, unsigned int aVoiceHandle, unsigned int aSamples)$/;"	f
Soloud_setFilterParameter	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setFilterParameter(void * aClassPtr, unsigned int aVoiceHandle, unsigned int aFilterId, unsigned int aAttributeId, float aValue)$/;"	f
Soloud_setGlobalFilter	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setGlobalFilter(void * aClassPtr, unsigned int aFilterId, Filter * aFilter)$/;"	f
Soloud_setGlobalVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setGlobalVolume(void * aClassPtr, float aVolume)$/;"	f
Soloud_setInaudibleBehavior	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setInaudibleBehavior(void * aClassPtr, unsigned int aVoiceHandle, int aMustTick, int aKill)$/;"	f
Soloud_setLooping	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setLooping(void * aClassPtr, unsigned int aVoiceHandle, int aLooping)$/;"	f
Soloud_setMaxActiveVoiceCount	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_setMaxActiveVoiceCount(void * aClassPtr, unsigned int aVoiceCount)$/;"	f
Soloud_setPan	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setPan(void * aClassPtr, unsigned int aVoiceHandle, float aPan)$/;"	f
Soloud_setPanAbsolute	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setPanAbsolute(void * aClassPtr, unsigned int aVoiceHandle, float aLVolume, float aRVolume)$/;"	f
Soloud_setPanAbsoluteEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setPanAbsoluteEx(void * aClassPtr, unsigned int aVoiceHandle, float aLVolume, float aRVolume, float aLBVolume, float aRBVolume, float aCVolume, float aSVolume)$/;"	f
Soloud_setPause	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setPause(void * aClassPtr, unsigned int aVoiceHandle, int aPause)$/;"	f
Soloud_setPauseAll	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setPauseAll(void * aClassPtr, int aPause)$/;"	f
Soloud_setPostClipScaler	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setPostClipScaler(void * aClassPtr, float aScaler)$/;"	f
Soloud_setProtectVoice	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setProtectVoice(void * aClassPtr, unsigned int aVoiceHandle, int aProtect)$/;"	f
Soloud_setRelativePlaySpeed	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_setRelativePlaySpeed(void * aClassPtr, unsigned int aVoiceHandle, float aSpeed)$/;"	f
Soloud_setSamplerate	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setSamplerate(void * aClassPtr, unsigned int aVoiceHandle, float aSamplerate)$/;"	f
Soloud_setSpeakerPosition	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Soloud_setSpeakerPosition(void * aClassPtr, unsigned int aChannel, float aX, float aY, float aZ)$/;"	f
Soloud_setVisualizationEnable	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setVisualizationEnable(void * aClassPtr, int aEnable)$/;"	f
Soloud_setVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_setVolume(void * aClassPtr, unsigned int aVoiceHandle, float aVolume)$/;"	f
Soloud_stop	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_stop(void * aClassPtr, unsigned int aVoiceHandle)$/;"	f
Soloud_stopAll	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_stopAll(void * aClassPtr)$/;"	f
Soloud_stopAudioSource	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_stopAudioSource(void * aClassPtr, AudioSource * aSound)$/;"	f
Soloud_update3dAudio	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Soloud_update3dAudio(void * aClassPtr)$/;"	f
SourceLineInfo	thirdparty/catch/include/catch/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
Spacing	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       Spacing;$/;"	m	struct:ImGuiSimpleColumns
Spacing	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Spacing()$/;"	f	class:ImGui
Speech	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * Speech;$/;"	t
Speech	thirdparty/soloud/include/soloud/soloud_speech.h	/^	class Speech : public AudioSource$/;"	c	namespace:SoLoud
Speech	thirdparty/soloud/src/audiosource/speech/soloud_speech.cpp	/^	Speech::Speech()$/;"	f	class:SoLoud::Speech
SpeechInstance	thirdparty/soloud/include/soloud/soloud_speech.h	/^	class SpeechInstance : public AudioSourceInstance$/;"	c	namespace:SoLoud
SpeechInstance	thirdparty/soloud/src/audiosource/speech/soloud_speech.cpp	/^	SpeechInstance::SpeechInstance(Speech *aParent)$/;"	f	class:SoLoud::SpeechInstance
Speech_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * Speech_create()$/;"	f
Speech_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_destroy(void * aClassPtr)$/;"	f
Speech_set3dAttenuation	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_set3dAttenuation(void * aClassPtr, unsigned int aAttenuationModel, float aAttenuationRolloffFactor)$/;"	f
Speech_set3dAttenuator	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_set3dAttenuator(void * aClassPtr, AudioAttenuator * aAttenuator)$/;"	f
Speech_set3dCollider	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_set3dCollider(void * aClassPtr, AudioCollider * aCollider)$/;"	f
Speech_set3dColliderEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_set3dColliderEx(void * aClassPtr, AudioCollider * aCollider, int aUserData)$/;"	f
Speech_set3dDistanceDelay	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_set3dDistanceDelay(void * aClassPtr, int aDistanceDelay)$/;"	f
Speech_set3dDopplerFactor	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_set3dDopplerFactor(void * aClassPtr, float aDopplerFactor)$/;"	f
Speech_set3dListenerRelative	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_set3dListenerRelative(void * aClassPtr, int aListenerRelative)$/;"	f
Speech_set3dMinMaxDistance	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_set3dMinMaxDistance(void * aClassPtr, float aMinDistance, float aMaxDistance)$/;"	f
Speech_set3dProcessing	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_set3dProcessing(void * aClassPtr, int aDo3dProcessing)$/;"	f
Speech_setFilter	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_setFilter(void * aClassPtr, unsigned int aFilterId, Filter * aFilter)$/;"	f
Speech_setInaudibleBehavior	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_setInaudibleBehavior(void * aClassPtr, int aMustTick, int aKill)$/;"	f
Speech_setLooping	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_setLooping(void * aClassPtr, int aLoop)$/;"	f
Speech_setText	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Speech_setText(void * aClassPtr, const char * aText)$/;"	f
Speech_setVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_setVolume(void * aClassPtr, float aVolume)$/;"	f
Speech_stop	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Speech_stop(void * aClassPtr)$/;"	f
StackSizesBackup	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     StackSizesBackup[6];    \/\/ Store size of various stacks for asserting$/;"	m	struct:ImGuiDrawContext
StartFunc	thirdparty/remotery/src/Remotery.c	/^    static void* StartFunc( void* pArgs )$/;"	f	file:
StartPosY	thirdparty/imgui/include/imgui/imgui.h	/^    float   StartPosY;$/;"	m	struct:ImGuiListClipper
StartsWith	thirdparty/catch/include/catch/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	thirdparty/catch/include/catch/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	thirdparty/catch/include/catch/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	thirdparty/catch/include/catch/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	thirdparty/catch/include/catch/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StateStorage	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiStorage            StateStorage;$/;"	m	struct:ImGuiWindow
StateStorage	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiStorage*           StateStorage;$/;"	m	struct:ImGuiDrawContext
StbFindState	thirdparty/stb/include/stb/stb_textedit.h	/^} StbFindState;$/;"	t	typeref:struct:__anon134
StbState	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiStb::STB_TexteditState   StbState;$/;"	m	struct:ImGuiTextEditState
StbTexteditRow	thirdparty/stb/include/stb/stb_textedit.h	/^} StbTexteditRow;$/;"	t	typeref:struct:__anon133
StbUndoRecord	thirdparty/stb/include/stb/stb_textedit.h	/^} StbUndoRecord;$/;"	t	typeref:struct:__anon130
StbUndoState	thirdparty/stb/include/stb/stb_textedit.h	/^} StbUndoState;$/;"	t	typeref:struct:__anon131
StdString	thirdparty/catch/include/catch/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
Step	thirdparty/imgui/src/imgui.cpp	/^bool ImGuiListClipper::Step()$/;"	f	class:ImGuiListClipper
StepNo	thirdparty/imgui/include/imgui/imgui.h	/^    int     ItemsCount, StepNo, DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper
StreamEndStop	thirdparty/catch/include/catch/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StressDur	thirdparty/soloud/src/audiosource/speech/klatt.cpp	99;"	d	file:
Stride	thirdparty/imgui/src/imgui.cpp	/^    int Stride;$/;"	m	struct:ImGuiPlotArrayGetterData	file:
StringMaker	thirdparty/catch/include/catch/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	thirdparty/catch/include/catch/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	thirdparty/catch/include/catch/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMakerBase	thirdparty/catch/include/catch/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	thirdparty/catch/include/catch/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringTable	thirdparty/remotery/src/Remotery.c	/^} StringTable;$/;"	t	typeref:struct:__anon59	file:
StringTable_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError StringTable_Constructor(StringTable* table)$/;"	f	file:
StringTable_Destructor	thirdparty/remotery/src/Remotery.c	/^static void StringTable_Destructor(StringTable* table)$/;"	f	file:
StringTable_Find	thirdparty/remotery/src/Remotery.c	/^static rmtPStr StringTable_Find(StringTable* table, rmtU32 name_hash)$/;"	f	file:
StringTable_Insert	thirdparty/remotery/src/Remotery.c	/^static void StringTable_Insert(StringTable* table, rmtU32 name_hash, rmtPStr name)$/;"	f	file:
Style	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiStyle              Style;$/;"	m	struct:ImGuiContext
StyleModifiers	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImGuiStyleMod> StyleModifiers;                     \/\/ Stack for PushStyleVar()\/PopStyleVar()$/;"	m	struct:ImGuiContext
SubType	thirdparty/glfw/src/deps/mingw/xinput.h	/^    BYTE SubType;$/;"	m	struct:_XINPUT_CAPABILITIES
SuppressFail	thirdparty/catch/include/catch/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SwapBuffers	thirdparty/glfw/src/egl_context.h	/^    PFN_eglSwapBuffers          SwapBuffers;$/;"	m	struct:_GLFWlibraryEGL
SwapBuffers	thirdparty/glfw/src/glx_context.h	/^    PFNGLXSWAPBUFFERSPROC               SwapBuffers;$/;"	m	struct:_GLFWlibraryGLX
SwapInterval	thirdparty/glfw/src/egl_context.h	/^    PFN_eglSwapInterval         SwapInterval;$/;"	m	struct:_GLFWlibraryEGL
SwapIntervalEXT	thirdparty/glfw/src/glx_context.h	/^    PFNGLXSWAPINTERVALEXTPROC           SwapIntervalEXT;$/;"	m	struct:_GLFWlibraryGLX
SwapIntervalEXT	thirdparty/glfw/src/wgl_context.h	/^    PFNWGLSWAPINTERVALEXTPROC           SwapIntervalEXT;$/;"	m	struct:_GLFWlibraryWGL
SwapIntervalMESA	thirdparty/glfw/src/glx_context.h	/^    PFNGLXSWAPINTERVALMESAPROC          SwapIntervalMESA;$/;"	m	struct:_GLFWlibraryGLX
SwapIntervalSGI	thirdparty/glfw/src/glx_context.h	/^    PFNGLXSWAPINTERVALSGIPROC           SwapIntervalSGI;$/;"	m	struct:_GLFWlibraryGLX
T	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	S					: 83,$/;"	p	class:namespace.Codes
TAB	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	BACKSPACE			: 8,$/;"	p	class:namespace.Codes
TARGET	app/blank/data/Makefile	/^  TARGET     = $(TARGETDIR)\/Blank$/;"	m
TARGET	app/fps_walk/data/Makefile	/^  TARGET     = $(TARGETDIR)\/SpinningCubes$/;"	m
TARGET	app/perils/data/Makefile	/^  TARGET     = $(TARGETDIR)\/PerilsPast$/;"	m
TARGET	app/they_never_pay/data/Makefile	/^  TARGET     = $(TARGETDIR)\/TheyNeverPay$/;"	m
TARGET	app/tiles/data/Makefile	/^  TARGET     = $(TARGETDIR)\/Tiles$/;"	m
TARGET	lib/math/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libMath.a$/;"	m
TARGET	lib/nau/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libNau.a$/;"	m
TARGET	lib/nil_aspects/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libAspectsControllers.a$/;"	m
TARGET	lib/roa/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libROA.a$/;"	m
TARGET	lib/rov/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libROV.a$/;"	m
TARGET	thirdparty/catch/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libCatch.a$/;"	m
TARGET	thirdparty/glfw/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libGLFW.a$/;"	m
TARGET	thirdparty/imgui/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libImGUI.a$/;"	m
TARGET	thirdparty/imguizmo/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libImGuizmo.a$/;"	m
TARGET	thirdparty/json/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libJson.a$/;"	m
TARGET	thirdparty/opengl/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libOpenGL.a$/;"	m
TARGET	thirdparty/remotery/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libRemotery.a$/;"	m
TARGET	thirdparty/soloud/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libSoLoud.a$/;"	m
TARGET	thirdparty/stb/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libSTB.a$/;"	m
TARGET	thirdparty/tinydir/data/Makefile	/^  TARGET     = $(TARGETDIR)\/libTinyDIR.a$/;"	m
TARGETDIR	app/blank/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	app/blank/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	app/blank/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	app/fps_walk/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	app/fps_walk/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	app/fps_walk/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	app/perils/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	app/perils/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	app/perils/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	app/they_never_pay/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	app/they_never_pay/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	app/they_never_pay/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	app/tiles/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/Development$/;"	m
TARGETDIR	app/tiles/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/Release$/;"	m
TARGETDIR	app/tiles/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/Staging$/;"	m
TARGETDIR	lib/math/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/Development$/;"	m
TARGETDIR	lib/math/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/Release$/;"	m
TARGETDIR	lib/math/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/Staging$/;"	m
TARGETDIR	lib/nau/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/Development$/;"	m
TARGETDIR	lib/nau/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/Release$/;"	m
TARGETDIR	lib/nau/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/Staging$/;"	m
TARGETDIR	lib/nil_aspects/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	lib/nil_aspects/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	lib/nil_aspects/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	lib/roa/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/Development$/;"	m
TARGETDIR	lib/roa/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/Release$/;"	m
TARGETDIR	lib/roa/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/Staging$/;"	m
TARGETDIR	lib/rov/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	lib/rov/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	lib/rov/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	thirdparty/catch/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	thirdparty/catch/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	thirdparty/catch/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	thirdparty/glfw/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	thirdparty/glfw/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	thirdparty/glfw/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	thirdparty/imgui/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	thirdparty/imgui/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	thirdparty/imgui/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	thirdparty/imguizmo/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	thirdparty/imguizmo/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	thirdparty/imguizmo/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	thirdparty/json/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	thirdparty/json/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	thirdparty/json/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	thirdparty/opengl/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	thirdparty/opengl/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	thirdparty/opengl/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	thirdparty/remotery/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	thirdparty/remotery/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	thirdparty/remotery/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	thirdparty/soloud/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	thirdparty/soloud/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	thirdparty/soloud/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	thirdparty/stb/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	thirdparty/stb/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	thirdparty/stb/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETDIR	thirdparty/tinydir/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/development$/;"	m
TARGETDIR	thirdparty/tinydir/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/release$/;"	m
TARGETDIR	thirdparty/tinydir/data/Makefile	/^  TARGETDIR  = ..\/..\/..\/output\/staging$/;"	m
TARGETS	thirdparty/glfw/src/x11_platform.h	/^    Atom            TARGETS;$/;"	m	struct:_GLFWlibraryX11
TASK_INCLUDED_A1087C62_BA4D_4992_8A72_E3E163AB8317	lib/nil/include/nil/task.hpp	2;"	d
TASK_QUEUE_INCLUDED_2BA00441_1AD8_42FE_80D9_6A5E3538451C	lib/nil/src/internal_data/task_queue.hpp	2;"	d
TAU	thirdparty/soloud/src/tools/resamplerlab/main.cpp	34;"	d	file:
TBC_TEXT_FORMAT_CONSOLE_WIDTH	thirdparty/catch/include/catch/catch.hpp	4820;"	d
TBC_TEXT_FORMAT_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3641;"	d
TCPSocket	thirdparty/remotery/src/Remotery.c	/^} TCPSocket;$/;"	t	typeref:struct:__anon60	file:
TCPSocketWouldBlock	thirdparty/remotery/src/Remotery.c	/^static int TCPSocketWouldBlock()$/;"	f	file:
TCPSocket_AcceptConnection	thirdparty/remotery/src/Remotery.c	/^static rmtError TCPSocket_AcceptConnection(TCPSocket* tcp_socket, TCPSocket** client_socket)$/;"	f	file:
TCPSocket_Close	thirdparty/remotery/src/Remotery.c	/^static void TCPSocket_Close(TCPSocket* tcp_socket)$/;"	f	file:
TCPSocket_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError TCPSocket_Constructor(TCPSocket* tcp_socket)$/;"	f	file:
TCPSocket_Destructor	thirdparty/remotery/src/Remotery.c	/^static void TCPSocket_Destructor(TCPSocket* tcp_socket)$/;"	f	file:
TCPSocket_PollStatus	thirdparty/remotery/src/Remotery.c	/^static SocketStatus TCPSocket_PollStatus(TCPSocket* tcp_socket)$/;"	f	file:
TCPSocket_Receive	thirdparty/remotery/src/Remotery.c	/^static rmtError TCPSocket_Receive(TCPSocket* tcp_socket, void* data, rmtU32 length, rmtU32 timeout_ms)$/;"	f	file:
TCPSocket_RunServer	thirdparty/remotery/src/Remotery.c	/^static rmtError TCPSocket_RunServer(TCPSocket* tcp_socket, rmtU16 port, rmtBool limit_connections_to_localhost)$/;"	f	file:
TCPSocket_Send	thirdparty/remotery/src/Remotery.c	/^static rmtError TCPSocket_Send(TCPSocket* tcp_socket, const void* data, rmtU32 length, rmtU32 timeout_ms)$/;"	f	file:
TDMA	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^	TDMA = 1 << 7$/;"	e	enum:__anon190	file:
TDS	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^	TDS = 1 << 2,$/;"	e	enum:__anon190	file:
TED	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	/^TED::TED()$/;"	f	class:TED
TED	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^class TED $/;"	c
TED	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^TED::TED() : filter(0), sidCard(0)$/;"	f	class:TED
TED	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^class TED : public MemoryHandler {$/;"	c
TEDSID_H	thirdparty/soloud/include/soloud/soloud_tedsid.h	26;"	d
TED_SOUND_CLOCK	thirdparty/soloud/src/audiosource/tedsid/sid.h	5;"	d
TED_SOUND_CLOCK	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	7;"	d	file:
TED_SOUND_CLOCK	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	19;"	d
TEXTMODE	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	23;"	d	file:
TEXTURE	lib/lib/include/lib/memory.hpp	/^  TEXTURE,$/;"	e	enum:LIB_NS_NAME::mem::tag::ENUM
TEXTURE_INCLUDED_4F51B28A_804B_4894_9AC0_43838A184317	lib/nil/src/internal_data/resources/texture_data.hpp	2;"	d
TEXTURE_INCLUDED_56366719_6675_4A06_AEA8_5615D7AA8B07	lib/nil/include/nil/resource/texture.hpp	2;"	d
TFX_AsciiFontdata	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^unsigned char TFX_AsciiFontdata[12*256] = {$/;"	v
THALT1	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^	THALT1 = 1 << 4,$/;"	e	enum:__anon190	file:
THALT2	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^	THALT2 = 1 << 5,$/;"	e	enum:__anon190	file:
THALT3	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^	THALT3 = 1 << 6,$/;"	e	enum:__anon190	file:
THEN	thirdparty/catch/include/catch/catch.hpp	10439;"	d
THREADNAME_INFO	thirdparty/remotery/src/Remotery.c	/^    } THREADNAME_INFO;$/;"	t	typeref:struct:tagTHREADNAME_INFO	file:
THREE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	TWO					: 50,$/;"	p	class:namespace.Codes
TILDE	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	APOSTROPHE			: 192,	\/\/ needs localization$/;"	p	class:namespace.Codes
TIMER_INCLUDED_3B5C0BA4_B185_4918_A3B3_64FF42D0BD49	lib/lib/include/lib/timer.hpp	9;"	d
TIME_INCLUDED_	lib/roa/include/roa/time.hpp	2;"	d
TIME_UTC	thirdparty/glfw/src/deps/tinycthread.h	101;"	d
TIME_UTC	thirdparty/glfw/src/deps/tinycthread.h	103;"	d
TINYCTHREAD_VERSION	thirdparty/glfw/src/deps/tinycthread.h	137;"	d
TINYCTHREAD_VERSION_MAJOR	thirdparty/glfw/src/deps/tinycthread.h	133;"	d
TINYCTHREAD_VERSION_MINOR	thirdparty/glfw/src/deps/tinycthread.h	135;"	d
TINYDIR_H	thirdparty/tinydir/include/tinydir/tinydir.h	27;"	d
TINYDIR_STRING	thirdparty/tinydir/include/tinydir/tinydir.h	66;"	d
TINYDIR_STRING	thirdparty/tinydir/include/tinydir/tinydir.h	75;"	d
TISCopyCurrentKeyboardLayoutInputSource	thirdparty/glfw/src/cocoa_platform.h	73;"	d
TISGetInputSourceProperty	thirdparty/glfw/src/cocoa_platform.h	75;"	d
TLS_INVALID_HANDLE	thirdparty/remotery/src/Remotery.c	360;"	d	file:
TO_STRING_INCLUDED_AB8A4646_3D89_48D2_AE8B_908920B6D905	lib/math/include/math/to_string.hpp	2;"	d
TRANSFORM_FWD_INCLUDED_BB09801A_0D5D_47D5_B7BB_D4FCF2D94D9B	lib/math/include/math/transform/transform_fwd.hpp	2;"	d
TRANSFORM_INCLUDED_77C38CC7_A63D_4206_9184_978F2705C5D9	lib/nil/include/nil/data/transform.hpp	2;"	d
TRANSFORM_INCLUDED_E79342EA_D69A_4FEB_BEAD_BA21D7B8B8E6	lib/math/include/math/transform/transform.hpp	2;"	d
TRANSFORM_INCLUDED_FDDE6A65_DD29_4846_B08C_7B64E56519C2	lib/roa/include/roa/transform.hpp	2;"	d
TRANSFORM_TYPES_INCLUDED_8D47B2F6_5764_483F_98BA_CE06AEEFB50C	lib/math/include/math/transform/transform_types.hpp	2;"	d
TRANSLATE	thirdparty/imguizmo/include/imguizmo/ImGuizmo.h	/^		TRANSLATE,$/;"	e	enum:ImGuizmo::OPERATION
TRFSH	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^	TRFSH = 1 << 3,$/;"	e	enum:__anon190	file:
TRUE	thirdparty/glfw/src/deps/tinycthread.c	50;"	d	file:
TRUE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	619;"	d	file:
TRUE	thirdparty/soloud/src/tools/tedsid2dump/types.h	28;"	d
TRUE	thirdparty/stb/include/stb/stb_vorbis.c	617;"	d	file:
TSS	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^	TSS = 1 << 1,$/;"	e	enum:__anon190	file:
TSS_DTOR_ITERATIONS	thirdparty/glfw/src/deps/tinycthread.h	168;"	d
TSTATE_T_LEN	thirdparty/soloud/src/tools/tedsid2dump/types.h	20;"	d
TSTATE_T_LEN	thirdparty/soloud/src/tools/tedsid2dump/types.h	24;"	d
TSTATE_T_MID	thirdparty/soloud/src/tools/tedsid2dump/types.h	19;"	d
TSTATE_T_MID	thirdparty/soloud/src/tools/tedsid2dump/types.h	23;"	d
TVScanLineCounter	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static unsigned int	TVScanLineCounter;$/;"	v	file:
TWO	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	ONE					: 49,$/;"	p	class:namespace.Codes
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2613;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	7219;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	821;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	763;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3608;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3088;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	7733;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	61;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	79;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3091;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	4978;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	6958;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	451;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	6771;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	7871;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	1987;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	10263;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	1283;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	6620;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	1280;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	5753;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2330;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	7145;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	14;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3074;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	1950;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3346;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2510;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	454;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2516;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	5035;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2036;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2694;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	603;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	7555;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	7558;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	4815;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	883;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	7520;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	1894;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	6750;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	58;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	1502;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2880;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2718;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	1990;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	478;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	9069;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	6398;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	8523;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	9905;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	9473;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	9264;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	8389;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	8758;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	6580;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	8520;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	8152;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	766;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	769;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3085;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	5447;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	7833;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2173;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2176;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3407;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	6774;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3404;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2697;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	8297;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	8300;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	7299;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2797;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	6401;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	5450;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	600;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3102;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3094;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	4818;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2274;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	7960;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	1492;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	2179;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	7486;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	6165;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3110;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	8845;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3789;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	thirdparty/catch/include/catch/catch.hpp	3627;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	thirdparty/catch/include/catch/catch.hpp	12;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	thirdparty/catch/include/catch/catch.hpp	4828;"	d
TYPES_INCLUDED_5FD988D5_036E_4258_B281_177280BCEF26	lib/lib/include/lib/types.hpp	9;"	d
T_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule T_rules[] =$/;"	v	file:
TedSid	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * TedSid;$/;"	t
TedSid	thirdparty/soloud/include/soloud/soloud_tedsid.h	/^	class TedSid : public AudioSource$/;"	c	namespace:SoLoud
TedSid	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	TedSid::TedSid()$/;"	f	class:SoLoud::TedSid
TedSidInstance	thirdparty/soloud/include/soloud/soloud_tedsid.h	/^	class TedSidInstance : public AudioSourceInstance$/;"	c	namespace:SoLoud
TedSidInstance	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	TedSidInstance::TedSidInstance(TedSid *aParent)$/;"	f	class:SoLoud::TedSidInstance
TedSid_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * TedSid_create()$/;"	f
TedSid_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_destroy(void * aClassPtr)$/;"	f
TedSid_load	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int TedSid_load(void * aClassPtr, const char * aFilename)$/;"	f
TedSid_loadFile	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int TedSid_loadFile(void * aClassPtr, File * aFile)$/;"	f
TedSid_loadFileToMem	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int TedSid_loadFileToMem(void * aClassPtr, File * aFile)$/;"	f
TedSid_loadMem	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int TedSid_loadMem(void * aClassPtr, unsigned char * aMem, unsigned int aLength)$/;"	f
TedSid_loadMemEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int TedSid_loadMemEx(void * aClassPtr, unsigned char * aMem, unsigned int aLength, int aCopy, int aTakeOwnership)$/;"	f
TedSid_loadToMem	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int TedSid_loadToMem(void * aClassPtr, const char * aFilename)$/;"	f
TedSid_set3dAttenuation	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_set3dAttenuation(void * aClassPtr, unsigned int aAttenuationModel, float aAttenuationRolloffFactor)$/;"	f
TedSid_set3dAttenuator	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_set3dAttenuator(void * aClassPtr, AudioAttenuator * aAttenuator)$/;"	f
TedSid_set3dCollider	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_set3dCollider(void * aClassPtr, AudioCollider * aCollider)$/;"	f
TedSid_set3dColliderEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_set3dColliderEx(void * aClassPtr, AudioCollider * aCollider, int aUserData)$/;"	f
TedSid_set3dDistanceDelay	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_set3dDistanceDelay(void * aClassPtr, int aDistanceDelay)$/;"	f
TedSid_set3dDopplerFactor	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_set3dDopplerFactor(void * aClassPtr, float aDopplerFactor)$/;"	f
TedSid_set3dListenerRelative	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_set3dListenerRelative(void * aClassPtr, int aListenerRelative)$/;"	f
TedSid_set3dMinMaxDistance	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_set3dMinMaxDistance(void * aClassPtr, float aMinDistance, float aMaxDistance)$/;"	f
TedSid_set3dProcessing	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_set3dProcessing(void * aClassPtr, int aDo3dProcessing)$/;"	f
TedSid_setFilter	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_setFilter(void * aClassPtr, unsigned int aFilterId, Filter * aFilter)$/;"	f
TedSid_setInaudibleBehavior	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_setInaudibleBehavior(void * aClassPtr, int aMustTick, int aKill)$/;"	f
TedSid_setLooping	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_setLooping(void * aClassPtr, int aLoop)$/;"	f
TedSid_setVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_setVolume(void * aClassPtr, float aVolume)$/;"	f
TedSid_stop	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void TedSid_stop(void * aClassPtr)$/;"	f
TempBuffer	thirdparty/imgui/include/imgui/imgui_internal.h	/^    char                    TempBuffer[1024*3+1];               \/\/ temporary text buffer$/;"	m	struct:ImGuiContext
TempTextBuffer	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<char>      TempTextBuffer;$/;"	m	struct:ImGuiTextEditState
Terminate	thirdparty/glfw/src/egl_context.h	/^    PFN_eglTerminate            Terminate;$/;"	m	struct:_GLFWlibraryEGL
TestFailureException	thirdparty/catch/include/catch/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFunction	thirdparty/catch/include/catch/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TexDesiredWidth	thirdparty/imgui/include/imgui/imgui.h	/^    int                         TexDesiredWidth;    \/\/ Texture width desired by user before Build(). Must be a power-of-two. If have many glyphs your graphics API have texture size restrictions you may want to increase texture width to decrease height.$/;"	m	struct:ImFontAtlas
TexHeight	thirdparty/imgui/include/imgui/imgui.h	/^    int                         TexHeight;          \/\/ Texture height calculated during Build().$/;"	m	struct:ImFontAtlas
TexID	thirdparty/imgui/include/imgui/imgui.h	/^    void*                       TexID;              \/\/ User data to refer to the texture once it has been uploaded to user's graphic systems. It ia passed back to you during rendering.$/;"	m	struct:ImFontAtlas
TexPixelsAlpha8	thirdparty/imgui/include/imgui/imgui.h	/^    unsigned char*              TexPixelsAlpha8;    \/\/ 1 component per pixel, each component is unsigned 8-bit. Total size = TexWidth * TexHeight$/;"	m	struct:ImFontAtlas
TexPixelsRGBA32	thirdparty/imgui/include/imgui/imgui.h	/^    unsigned int*               TexPixelsRGBA32;    \/\/ 4 component per pixel, each component is unsigned 8-bit. Total size = TexWidth * TexHeight * 4$/;"	m	struct:ImFontAtlas
TexUvMax	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2              TexUvMax[2];$/;"	m	struct:ImGuiMouseCursorData
TexUvMin	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2              TexUvMin[2];$/;"	m	struct:ImGuiMouseCursorData
TexUvWhitePixel	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2                      TexUvWhitePixel;    \/\/ Texture coordinates to a white pixel$/;"	m	struct:ImFontAtlas
TexWidth	thirdparty/imgui/include/imgui/imgui.h	/^    int                         TexWidth;           \/\/ Texture width calculated during Build().$/;"	m	struct:ImFontAtlas
Text	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImWchar>   Text;                       \/\/ edit buffer, we need to persist but can't guarantee the persistence of the user-provided buffer. so we copy into own buffer.$/;"	m	struct:ImGuiTextEditState
Text	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Text(const char* fmt, ...)$/;"	f	class:ImGui
TextColored	thirdparty/imgui/src/imgui.cpp	/^void ImGui::TextColored(const ImVec4& col, const char* fmt, ...)$/;"	f	class:ImGui
TextColoredV	thirdparty/imgui/src/imgui.cpp	/^void ImGui::TextColoredV(const ImVec4& col, const char* fmt, va_list args)$/;"	f	class:ImGui
TextDisabled	thirdparty/imgui/src/imgui.cpp	/^void ImGui::TextDisabled(const char* fmt, ...)$/;"	f	class:ImGui
TextDisabledV	thirdparty/imgui/src/imgui.cpp	/^void ImGui::TextDisabledV(const char* fmt, va_list args)$/;"	f	class:ImGui
TextRange	thirdparty/imgui/include/imgui/imgui.h	/^        TextRange() { b = e = NULL; }$/;"	f	struct:ImGuiTextFilter::TextRange
TextRange	thirdparty/imgui/include/imgui/imgui.h	/^        TextRange(const char* _b, const char* _e) { b = _b; e = _e; }$/;"	f	struct:ImGuiTextFilter::TextRange
TextRange	thirdparty/imgui/include/imgui/imgui.h	/^    struct TextRange$/;"	s	struct:ImGuiTextFilter
TextUnformatted	thirdparty/imgui/src/imgui.cpp	/^void ImGui::TextUnformatted(const char* text, const char* text_end)$/;"	f	class:ImGui
TextV	thirdparty/imgui/src/imgui.cpp	/^void ImGui::TextV(const char* fmt, va_list args)$/;"	f	class:ImGui
TextWrapPos	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   TextWrapPos;            \/\/ == TextWrapPosStack.back() [empty == -1.0f]$/;"	m	struct:ImGuiDrawContext
TextWrapPosStack	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<float>         TextWrapPosStack;$/;"	m	struct:ImGuiDrawContext
TextWrapped	thirdparty/imgui/src/imgui.cpp	/^void ImGui::TextWrapped(const char* fmt, ...)$/;"	f	class:ImGui
TextWrappedV	thirdparty/imgui/src/imgui.cpp	/^void ImGui::TextWrappedV(const char* fmt, va_list args)$/;"	f	class:ImGui
TextureId	thirdparty/imgui/include/imgui/imgui.h	/^    ImTextureID     TextureId;              \/\/ User-provided texture ID. Set by user in ImfontAtlas::SetTexID() for fonts or passed to Image*() functions. Ignore if never using images or multiple fonts atlas.$/;"	m	struct:ImDrawCmd
Thread	thirdparty/soloud/include/soloud/soloud_thread.h	/^	namespace Thread$/;"	n	namespace:SoLoud
Thread	thirdparty/soloud/src/core/soloud_thread.cpp	/^	namespace Thread$/;"	n	namespace:SoLoud	file:
ThreadHandle	thirdparty/soloud/include/soloud/soloud_thread.h	/^        typedef ThreadHandleData* ThreadHandle;$/;"	t	namespace:SoLoud::Thread
ThreadHandleData	thirdparty/soloud/src/core/soloud_thread.cpp	/^        struct ThreadHandleData$/;"	s	namespace:SoLoud::Thread	file:
ThreadProc	thirdparty/remotery/src/Remotery.c	/^typedef rmtError(*ThreadProc)(rmtThread* thread);$/;"	t	file:
ThreadProcWindows	thirdparty/remotery/src/Remotery.c	/^    static DWORD WINAPI ThreadProcWindows(LPVOID lpParameter)$/;"	f	file:
ThreadSampler	thirdparty/remotery/src/Remotery.c	/^typedef struct ThreadSampler$/;"	s	file:
ThreadSampler	thirdparty/remotery/src/Remotery.c	/^} ThreadSampler;$/;"	t	typeref:struct:ThreadSampler	file:
ThreadSampler_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError ThreadSampler_Constructor(ThreadSampler* thread_sampler)$/;"	f	file:
ThreadSampler_Destructor	thirdparty/remotery/src/Remotery.c	/^static void ThreadSampler_Destructor(ThreadSampler* ts)$/;"	f	file:
ThreadSampler_GetNameHash	thirdparty/remotery/src/Remotery.c	/^static rmtU32 ThreadSampler_GetNameHash(ThreadSampler* ts, rmtPStr name, rmtU32* hash_cache)$/;"	f	file:
ThreadSampler_Pop	thirdparty/remotery/src/Remotery.c	/^static rmtBool ThreadSampler_Pop(ThreadSampler* ts, rmtMessageQueue* queue, Sample* sample)$/;"	f	file:
ThreadSampler_Push	thirdparty/remotery/src/Remotery.c	/^static rmtError ThreadSampler_Push(SampleTree* tree, rmtU32 name_hash, rmtU32 flags, Sample** sample)$/;"	f	file:
Thread_t	thirdparty/remotery/src/Remotery.c	/^struct Thread_t$/;"	s	file:
ThrewException	thirdparty/catch/include/catch/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
Time	lib/roa/include/roa/time.hpp	/^namespace Time {$/;"	n	namespace:ROA
Time	lib/roa/src/interface/time.cpp	/^namespace Time {$/;"	n	namespace:ROA	file:
Time	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float                   Time;$/;"	m	struct:ImGuiContext
TitleBarHeight	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       TitleBarHeight() const                  { return (Flags & ImGuiWindowFlags_NoTitleBar) ? 0.0f : CalcFontSize() + GImGui->Style.FramePadding.y * 2.0f; }$/;"	f	struct:ImGuiWindow
TitleBarRect	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImRect      TitleBarRect() const                    { return ImRect(Pos, ImVec2(Pos.x + SizeFull.x, Pos.y + TitleBarHeight())); }$/;"	f	struct:ImGuiWindow
Tooltip	thirdparty/imgui/include/imgui/imgui_internal.h	/^    char                    Tooltip[1024];$/;"	m	struct:ImGuiContext
TotalIdxCount	thirdparty/imgui/include/imgui/imgui.h	/^    int             TotalIdxCount;          \/\/ For convenience, sum of all cmd_lists idx_buffer.Size$/;"	m	struct:ImDrawData
TotalVtxCount	thirdparty/imgui/include/imgui/imgui.h	/^    int             TotalVtxCount;          \/\/ For convenience, sum of all cmd_lists vtx_buffer.Size$/;"	m	struct:ImDrawData
TouchExtraPadding	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      TouchExtraPadding;          \/\/ Expand reactive bounding box for touch-based system where touch position is not accurate enough. Unfortunately we don't sort widgets so priority on overlap will always be given to the first widget. So don't grow this too much!$/;"	m	struct:ImGuiStyle
Transform	lib/nil/include/nil/data/transform.hpp	/^struct Transform$/;"	s	namespace:Nil::Data
Transform	lib/roa/src/interface/transform.cpp	/^Transform::Transform($/;"	f	class:ROA::Transform
Transform	lib/roa/src/interface/transform.cpp	/^Transform::Transform()$/;"	f	class:ROA::Transform
Transform	lib/roa/src/interface/transform.cpp	/^Transform::Transform(const ROA_nullptr null)$/;"	f	class:ROA::Transform
Transform	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   void vec_t::Transform(const matrix_t& matrix)$/;"	f	class:ImGuizmo::vec_t
Transform	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   void vec_t::Transform(const vec_t & s, const matrix_t& matrix)$/;"	f	class:ImGuizmo::vec_t
TransformPoint	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void TransformPoint(const vec_t& v, const matrix_t& matrix) { (*this) = v; this->TransformPoint(matrix); }$/;"	f	struct:ImGuizmo::vec_t
TransformPoint	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   void vec_t::TransformPoint(const matrix_t& matrix)$/;"	f	class:ImGuizmo::vec_t
TransformVector	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void TransformVector(const vec_t& v, const matrix_t& matrix) { (*this) = v; this->TransformVector(matrix); }$/;"	f	struct:ImGuizmo::vec_t
TransformVector	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   void vec_t::TransformVector(const matrix_t& matrix)$/;"	f	class:ImGuizmo::vec_t
Transform_data	lib/nil/src/interface/data/transform.cpp	/^  explicit Transform_data()$/;"	f	struct:__anon34::Transform_data
Transform_data	lib/nil/src/interface/data/transform.cpp	/^struct Transform_data$/;"	s	namespace:__anon34	file:
Translation	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void Translation(const vec_t& vt)$/;"	f	struct:ImGuizmo::matrix_t
Translation	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void Translation(float _x, float _y, float _z) { this->Translation(makeVect(_x, _y, _z)); }$/;"	f	struct:ImGuizmo::matrix_t
Transpose	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      void Transpose()$/;"	f	struct:ImGuizmo::matrix_t
TreeAdvanceToLabelPos	thirdparty/imgui/src/imgui.cpp	/^void ImGui::TreeAdvanceToLabelPos()$/;"	f	class:ImGui
TreeDepth	thirdparty/imgui/include/imgui/imgui_internal.h	/^    int                     TreeDepth;$/;"	m	struct:ImGuiDrawContext
TreeNode	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::TreeNode(const char* label)$/;"	f	class:ImGui
TreeNode	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::TreeNode(const char* str_id, const char* fmt, ...)$/;"	f	class:ImGui
TreeNode	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::TreeNode(const void* ptr_id, const char* fmt, ...)$/;"	f	class:ImGui
TreeNodeBehavior	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::TreeNodeBehavior(ImGuiID id, ImGuiTreeNodeFlags flags, const char* label, const char* label_end)$/;"	f	class:ImGui
TreeNodeBehaviorIsOpen	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::TreeNodeBehaviorIsOpen(ImGuiID id, ImGuiTreeNodeFlags flags)$/;"	f	class:ImGui
TreeNodeEx	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::TreeNodeEx(const char* label, ImGuiTreeNodeFlags flags)$/;"	f	class:ImGui
TreeNodeEx	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::TreeNodeEx(const char* str_id, ImGuiTreeNodeFlags flags, const char* fmt, ...)$/;"	f	class:ImGui
TreeNodeEx	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::TreeNodeEx(const void* ptr_id, ImGuiTreeNodeFlags flags, const char* fmt, ...)$/;"	f	class:ImGui
TreeNodeExV	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::TreeNodeExV(const char* str_id, ImGuiTreeNodeFlags flags, const char* fmt, va_list args)$/;"	f	class:ImGui
TreeNodeExV	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::TreeNodeExV(const void* ptr_id, ImGuiTreeNodeFlags flags, const char* fmt, va_list args)$/;"	f	class:ImGui
TreeNodeV	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::TreeNodeV(const char* str_id, const char* fmt, va_list args)$/;"	f	class:ImGui
TreeNodeV	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::TreeNodeV(const void* ptr_id, const char* fmt, va_list args)$/;"	f	class:ImGui
TreePop	thirdparty/imgui/src/imgui.cpp	/^void ImGui::TreePop()$/;"	f	class:ImGui
TreePush	thirdparty/imgui/src/imgui.cpp	/^void ImGui::TreePush(const char* str_id)$/;"	f	class:ImGui
TreePush	thirdparty/imgui/src/imgui.cpp	/^void ImGui::TreePush(const void* ptr_id)$/;"	f	class:ImGui
TreePushRawID	thirdparty/imgui/src/imgui.cpp	/^void ImGui::TreePushRawID(ImGuiID id)$/;"	f	class:ImGui
TrueType	thirdparty/catch/include/catch/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TupleDetail	thirdparty/catch/include/catch/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
Twenties	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static const char *Twenties[] =$/;"	v	file:
Type	thirdparty/glfw/src/deps/mingw/xinput.h	/^    BYTE Type;$/;"	m	struct:_XINPUT_CAPABILITIES
Type	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiMouseCursor    Type;$/;"	m	struct:ImGuiMouseCursorData
Type	thirdparty/imgui/src/imgui.cpp	/^    ImGuiDataType   Type;$/;"	m	struct:ImGuiStyleVarInfo	file:
U	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	T					: 84,$/;"	p	class:namespace.Codes
U0	thirdparty/imgui/include/imgui/imgui.h	/^        float                   U0, V0, U1, V1;     \/\/ Texture coordinates$/;"	m	struct:ImFont::Glyph
U1	thirdparty/imgui/include/imgui/imgui.h	/^        float                   U0, V0, U1, V1;     \/\/ Texture coordinates$/;"	m	struct:ImFont::Glyph
U32ToByteArray	thirdparty/remotery/src/Remotery.c	/^static void U32ToByteArray(rmtU8* dest, rmtU32 value)$/;"	f	file:
UINT16_C	thirdparty/glfw/src/deps/vs2008/stdint.h	236;"	d
UINT16_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	141;"	d
UINT32_C	thirdparty/glfw/src/deps/vs2008/stdint.h	237;"	d
UINT32_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	142;"	d
UINT64_C	thirdparty/glfw/src/deps/vs2008/stdint.h	238;"	d
UINT64_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	143;"	d
UINT8_C	thirdparty/glfw/src/deps/vs2008/stdint.h	235;"	d
UINT8_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	140;"	d
UINTMAX_C	thirdparty/glfw/src/deps/vs2008/stdint.h	242;"	d
UINTMAX_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	187;"	d
UINTPTR_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	177;"	d
UINTPTR_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	181;"	d
UINT_FAST16_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	169;"	d
UINT_FAST32_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	170;"	d
UINT_FAST64_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	171;"	d
UINT_FAST8_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	168;"	d
UINT_LEAST16_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	155;"	d
UINT_LEAST32_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	156;"	d
UINT_LEAST64_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	157;"	d
UINT_LEAST8_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	154;"	d
UNICODE	thirdparty/glfw/src/win32_platform.h	48;"	d
UNICODE	thirdparty/tinydir/include/tinydir/tinydir.h	34;"	d
UNICODE_NOCHAR	thirdparty/glfw/src/win32_platform.h	90;"	d
UNKNOWN	lib/lib/include/lib/model.hpp	/^  UNKNOWN,$/;"	e	enum:LIB_NS_NAME::map_type::ENUM
UNKNOWN	lib/roa/include/roa/resource_status.hpp	/^  UNKNOWN,$/;"	m	class:ROA::Resource_status
UNKNOWN_ERROR	thirdparty/soloud/include/soloud/soloud_error.h	/^		UNKNOWN_ERROR     = 7  \/\/ Other error$/;"	e	enum:SoLoud::SOLOUD_ERRORS
UNREACHABLE	lib/lib/include/lib/optimizations.hpp	28;"	d
UNREACHABLE	lib/lib/include/lib/optimizations.hpp	30;"	d
UP	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	LEFT				: 37,	\/\/ also NUM_WEST$/;"	p	class:namespace.Codes
USE_MEMORY	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1287;"	d	file:
USE_MEMORY	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	1289;"	d	file:
USE_MEMORY	thirdparty/stb/include/stb/stb_vorbis.c	1286;"	d	file:
USE_MEMORY	thirdparty/stb/include/stb/stb_vorbis.c	1288;"	d	file:
UTF8_STRING	thirdparty/glfw/src/x11_platform.h	/^    Atom            UTF8_STRING;$/;"	m	struct:_GLFWlibraryX11
UTILITIES_INCLUDED_7D47F345_CB57_4D84_A636_075DFB3C3411	lib/lib/include/lib/utilities.hpp	9;"	d
UTILS_FWD_INCLUED_31E631DB_DC6B_4ABD_9125_6C9672979CC9	lib/lib/include/lib/util_fwd.hpp	2;"	d
U_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule U_rules[] =$/;"	v	file:
Unicode	thirdparty/glfw/src/deps/mingw/xinput.h	/^    WCHAR Unicode;$/;"	m	struct:_XINPUT_KEYSTROKE
Unindent	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Unindent(float indent_w)$/;"	f	class:ImGui
Unknown	thirdparty/catch/include/catch/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Update	thirdparty/imgui/src/imgui.cpp	/^void ImGuiSimpleColumns::Update(int count, float spacing, bool clear)$/;"	f	class:ImGuiSimpleColumns
UpdateClipRect	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::UpdateClipRect()$/;"	f	class:ImDrawList
UpdateD3D11Frame	thirdparty/remotery/src/Remotery.c	/^static void UpdateD3D11Frame(void)$/;"	f	file:
UpdateMetalFrame	thirdparty/remotery/src/Remotery.c	/^static void UpdateMetalFrame(void)$/;"	f	file:
UpdateOpenGLFrame	thirdparty/remotery/src/Remotery.c	/^static void UpdateOpenGLFrame(void)$/;"	f	file:
UpdateSerialState	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::UpdateSerialState(unsigned char portVal)$/;"	f	class:TED
UpdateTextureID	thirdparty/imgui/src/imgui_draw.cpp	/^void ImDrawList::UpdateTextureID()$/;"	f	class:ImDrawList
UserCallback	thirdparty/imgui/include/imgui/imgui.h	/^    ImDrawCallback  UserCallback;           \/\/ If != NULL, call the function instead of rendering the vertices. clip_rect and texture_id will be set normally.$/;"	m	struct:ImDrawCmd
UserCallbackData	thirdparty/imgui/include/imgui/imgui.h	/^    void*           UserCallbackData;       \/\/ The draw callback code can access this.$/;"	m	struct:ImDrawCmd
UserData	thirdparty/imgui/include/imgui/imgui.h	/^    void*               UserData;       \/\/ What user passed to InputText()      \/\/ Read-only$/;"	m	struct:ImGuiTextEditCallbackData
UserData	thirdparty/imgui/include/imgui/imgui.h	/^    void*         UserData;                 \/\/ = NULL               \/\/ Store your own data for retrieval by callbacks.$/;"	m	struct:ImGuiIO
UserData	thirdparty/imgui/include/imgui/imgui.h	/^    void*   UserData;       \/\/ Read-only.   What user passed to SetNextWindowSizeConstraints()$/;"	m	struct:ImGuiSizeConstraintCallbackData
UserIndex	thirdparty/glfw/src/deps/mingw/xinput.h	/^    BYTE UserIndex;$/;"	m	struct:_XINPUT_KEYSTROKE
V	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	U					: 85,$/;"	p	class:namespace.Codes
V0	thirdparty/imgui/include/imgui/imgui.h	/^        float                   U0, V0, U1, V1;     \/\/ Texture coordinates$/;"	m	struct:ImFont::Glyph
V1	thirdparty/imgui/include/imgui/imgui.h	/^        float                   U0, V0, U1, V1;     \/\/ Texture coordinates$/;"	m	struct:ImFont::Glyph
VBlanking	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static bool VBlanking;$/;"	v	file:
VC_EXTRALEAN	thirdparty/glfw/src/win32_platform.h	34;"	d
VEC3_INCLUDED_DD26787F_2663_4F50_85D0_7188D23BA64B	lib/math/include/math/vec/vec3.hpp	2;"	d
VEC4_INCLUDED_9C1AD544_35E1_456B_B882_DB0C9DAEBF09	lib/math/include/math/vec/vec4.hpp	2;"	d
VECTOR2_INCLUDED_077ABD34_E392_49BA_8472_D6541EF2744E	lib/math/include/math/vec/vec2.hpp	2;"	d
VECTOR3_INCLUDED_17E996D5_A00B_425E_AD53_01BF0A55217E	lib/roa/include/roa/vector3.hpp	2;"	d
VECTOR_INCLUDED_61D06A64_BC38_456C_B5B7_E6E787FD9D2D	lib/math/include/math/vec/vec.hpp	2;"	d
VECTOR_TYPES_INCLUDED_76A0D96A_8385_4283_9EA9_CF89D0D5A10C	lib/math/include/math/vec/vec_types.hpp	2;"	d
VEC_FWD_INCLUDED_1E1D9FD5_8870_49DD_A293_93C1655C6E03	lib/math/include/math/vec/vec_fwd.hpp	2;"	d
VERSION	thirdparty/soloud/src/tools/codegen/main.cpp	31;"	d	file:
VERSION	thirdparty/soloud/src/tools/lutgen/main.cpp	29;"	d	file:
VISUALIZATION_DATA	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^			VISUALIZATION_DATA = 4,$/;"	e	enum:SoLoud::AudioSource::FLAGS
VITA_HOMEBREW	thirdparty/soloud/include/soloud/soloud.h	/^			VITA_HOMEBREW,$/;"	e	enum:SoLoud::Soloud::BACKENDS
VKAPI_ATTR	thirdparty/glfw/src/deps/vulkan/vk_platform.h	51;"	d
VKAPI_ATTR	thirdparty/glfw/src/deps/vulkan/vk_platform.h	61;"	d
VKAPI_ATTR	thirdparty/glfw/src/deps/vulkan/vk_platform.h	66;"	d
VKAPI_CALL	thirdparty/glfw/src/deps/vulkan/vk_platform.h	52;"	d
VKAPI_CALL	thirdparty/glfw/src/deps/vulkan/vk_platform.h	62;"	d
VKAPI_CALL	thirdparty/glfw/src/deps/vulkan/vk_platform.h	67;"	d
VKAPI_PTR	thirdparty/glfw/src/deps/vulkan/vk_platform.h	53;"	d
VKAPI_PTR	thirdparty/glfw/src/deps/vulkan/vk_platform.h	63;"	d
VKAPI_PTR	thirdparty/glfw/src/deps/vulkan/vk_platform.h	68;"	d
VK_ACCESS_COLOR_ATTACHMENT_READ_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_COLOR_ATTACHMENT_READ_BIT = 0x00000080,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT = 0x00000100,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_COMMAND_PROCESS_READ_BIT_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_COMMAND_PROCESS_READ_BIT_NVX = 0x00020000,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_COMMAND_PROCESS_WRITE_BIT_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_COMMAND_PROCESS_WRITE_BIT_NVX = 0x00040000,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT = 0x00000200,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = 0x00000400,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_HOST_READ_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_HOST_READ_BIT = 0x00002000,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_HOST_WRITE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_HOST_WRITE_BIT = 0x00004000,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_INDEX_READ_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_INDEX_READ_BIT = 0x00000002,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_INDIRECT_COMMAND_READ_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_INDIRECT_COMMAND_READ_BIT = 0x00000001,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_INPUT_ATTACHMENT_READ_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_INPUT_ATTACHMENT_READ_BIT = 0x00000010,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_MEMORY_READ_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_MEMORY_READ_BIT = 0x00008000,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_MEMORY_WRITE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_MEMORY_WRITE_BIT = 0x00010000,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_SHADER_READ_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_SHADER_READ_BIT = 0x00000020,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_SHADER_WRITE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_SHADER_WRITE_BIT = 0x00000040,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_TRANSFER_READ_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_TRANSFER_READ_BIT = 0x00000800,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_TRANSFER_WRITE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_TRANSFER_WRITE_BIT = 0x00001000,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_UNIFORM_READ_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_UNIFORM_READ_BIT = 0x00000008,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT = 0x00000004,$/;"	e	enum:VkAccessFlagBits
VK_AMD_DRAW_INDIRECT_COUNT_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4151;"	d
VK_AMD_DRAW_INDIRECT_COUNT_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4150;"	d
VK_AMD_GCN_SHADER_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4121;"	d
VK_AMD_GCN_SHADER_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4120;"	d
VK_AMD_GPU_SHADER_HALF_FLOAT_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4183;"	d
VK_AMD_GPU_SHADER_HALF_FLOAT_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4182;"	d
VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4178;"	d
VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4177;"	d
VK_AMD_RASTERIZATION_ORDER_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4032;"	d
VK_AMD_RASTERIZATION_ORDER_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4031;"	d
VK_AMD_SHADER_BALLOT_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4188;"	d
VK_AMD_SHADER_BALLOT_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4187;"	d
VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4059;"	d
VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4058;"	d
VK_AMD_SHADER_TRINARY_MINMAX_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4054;"	d
VK_AMD_SHADER_TRINARY_MINMAX_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4053;"	d
VK_AMD_draw_indirect_count	thirdparty/glfw/src/deps/vulkan/vulkan.h	4149;"	d
VK_AMD_gcn_shader	thirdparty/glfw/src/deps/vulkan/vulkan.h	4119;"	d
VK_AMD_gpu_shader_half_float	thirdparty/glfw/src/deps/vulkan/vulkan.h	4181;"	d
VK_AMD_negative_viewport_height	thirdparty/glfw/src/deps/vulkan/vulkan.h	4176;"	d
VK_AMD_rasterization_order	thirdparty/glfw/src/deps/vulkan/vulkan.h	4030;"	d
VK_AMD_shader_ballot	thirdparty/glfw/src/deps/vulkan/vulkan.h	4186;"	d
VK_AMD_shader_explicit_vertex_parameter	thirdparty/glfw/src/deps/vulkan/vulkan.h	4057;"	d
VK_AMD_shader_trinary_minmax	thirdparty/glfw/src/deps/vulkan/vulkan.h	4052;"	d
VK_API_VERSION_1_0	thirdparty/glfw/src/deps/vulkan/vulkan.h	40;"	d
VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkAttachmentDescriptionFlagBits
VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT = 0x00000001,$/;"	e	enum:VkAttachmentDescriptionFlagBits
VK_ATTACHMENT_LOAD_OP_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_BEGIN_RANGE = VK_ATTACHMENT_LOAD_OP_LOAD,$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_CLEAR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_CLEAR = 1,$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_DONT_CARE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_DONT_CARE = 2,$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_END_RANGE = VK_ATTACHMENT_LOAD_OP_DONT_CARE,$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_LOAD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_LOAD = 0,$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_RANGE_SIZE = (VK_ATTACHMENT_LOAD_OP_DONT_CARE - VK_ATTACHMENT_LOAD_OP_LOAD + 1),$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_STORE_OP_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_BEGIN_RANGE = VK_ATTACHMENT_STORE_OP_STORE,$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_STORE_OP_DONT_CARE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_DONT_CARE = 1,$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_STORE_OP_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_END_RANGE = VK_ATTACHMENT_STORE_OP_DONT_CARE,$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_STORE_OP_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_STORE_OP_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_RANGE_SIZE = (VK_ATTACHMENT_STORE_OP_DONT_CARE - VK_ATTACHMENT_STORE_OP_STORE + 1),$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_STORE_OP_STORE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_STORE = 0,$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_UNUSED	thirdparty/glfw/src/deps/vulkan/vulkan.h	101;"	d
VK_BLEND_FACTOR_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_BEGIN_RANGE = VK_BLEND_FACTOR_ZERO,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_CONSTANT_ALPHA	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_CONSTANT_ALPHA = 12,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_CONSTANT_COLOR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_CONSTANT_COLOR = 10,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_DST_ALPHA	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_DST_ALPHA = 8,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_DST_COLOR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_DST_COLOR = 4,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_END_RANGE = VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE = 1,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA = 13,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR = 11,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA = 9,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR = 5,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA = 18,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR = 16,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA = 7,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR = 3,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_RANGE_SIZE = (VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA - VK_BLEND_FACTOR_ZERO + 1),$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC1_ALPHA	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_SRC1_ALPHA = 17,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC1_COLOR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_SRC1_COLOR = 15,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC_ALPHA	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_SRC_ALPHA = 6,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC_ALPHA_SATURATE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_SRC_ALPHA_SATURATE = 14,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC_COLOR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_SRC_COLOR = 2,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ZERO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ZERO = 0,$/;"	e	enum:VkBlendFactor
VK_BLEND_OP_ADD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_OP_ADD = 0,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_OP_BEGIN_RANGE = VK_BLEND_OP_ADD,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_OP_END_RANGE = VK_BLEND_OP_MAX,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_MAX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_OP_MAX = 4,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_OP_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkBlendOp
VK_BLEND_OP_MIN	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_OP_MIN = 3,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_OP_RANGE_SIZE = (VK_BLEND_OP_MAX - VK_BLEND_OP_ADD + 1),$/;"	e	enum:VkBlendOp
VK_BLEND_OP_REVERSE_SUBTRACT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_OP_REVERSE_SUBTRACT = 2,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_SUBTRACT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BLEND_OP_SUBTRACT = 1,$/;"	e	enum:VkBlendOp
VK_BORDER_COLOR_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BORDER_COLOR_BEGIN_RANGE = VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BORDER_COLOR_END_RANGE = VK_BORDER_COLOR_INT_OPAQUE_WHITE,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK = 2,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE = 4,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK = 0,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_INT_OPAQUE_BLACK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BORDER_COLOR_INT_OPAQUE_BLACK = 3,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_INT_OPAQUE_WHITE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BORDER_COLOR_INT_OPAQUE_WHITE = 5,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_INT_TRANSPARENT_BLACK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BORDER_COLOR_INT_TRANSPARENT_BLACK = 1,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BORDER_COLOR_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BORDER_COLOR_RANGE_SIZE = (VK_BORDER_COLOR_INT_OPAQUE_WHITE - VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK + 1),$/;"	e	enum:VkBorderColor
VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkBufferCreateFlagBits
VK_BUFFER_CREATE_SPARSE_ALIASED_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_CREATE_SPARSE_ALIASED_BIT = 0x00000004,$/;"	e	enum:VkBufferCreateFlagBits
VK_BUFFER_CREATE_SPARSE_BINDING_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_CREATE_SPARSE_BINDING_BIT = 0x00000001,$/;"	e	enum:VkBufferCreateFlagBits
VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT = 0x00000002,$/;"	e	enum:VkBufferCreateFlagBits
VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_INDEX_BUFFER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_INDEX_BUFFER_BIT = 0x00000040,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT = 0x00000100,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_STORAGE_BUFFER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_STORAGE_BUFFER_BIT = 0x00000020,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT = 0x00000008,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_TRANSFER_DST_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_TRANSFER_DST_BIT = 0x00000002,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_TRANSFER_SRC_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_TRANSFER_SRC_BIT = 0x00000001,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT = 0x00000010,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT = 0x00000004,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_VERTEX_BUFFER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_VERTEX_BUFFER_BIT = 0x00000080,$/;"	e	enum:VkBufferUsageFlagBits
VK_COLORSPACE_SRGB_NONLINEAR_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	3223;"	d
VK_COLOR_COMPONENT_A_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_COMPONENT_A_BIT = 0x00000008,$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_COMPONENT_B_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_COMPONENT_B_BIT = 0x00000004,$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_COMPONENT_G_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_COMPONENT_G_BIT = 0x00000002,$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_COMPONENT_R_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_COMPONENT_R_BIT = 0x00000001,$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT = 1000104011,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT = 1000104012,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_BEGIN_RANGE_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_BEGIN_RANGE_KHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_BT2020_LINEAR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_BT2020_LINEAR_EXT = 1000104009,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_BT2020_NONLINEAR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_BT2020_NONLINEAR_EXT = 1000104010,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_BT709_LINEAR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_BT709_LINEAR_EXT = 1000104007,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_BT709_NONLINEAR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_BT709_NONLINEAR_EXT = 1000104008,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_DCI_P3_LINEAR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_DCI_P3_LINEAR_EXT = 1000104005,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT = 1000104006,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT = 1000104001,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT = 1000104002,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_END_RANGE_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_END_RANGE_KHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_MAX_ENUM_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_MAX_ENUM_KHR = 0x7FFFFFFF$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_RANGE_SIZE_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_RANGE_SIZE_KHR = (VK_COLOR_SPACE_SRGB_NONLINEAR_KHR - VK_COLOR_SPACE_SRGB_NONLINEAR_KHR + 1),$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_SCRGB_LINEAR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_SCRGB_LINEAR_EXT = 1000104003,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_SCRGB_NONLINEAR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_SCRGB_NONLINEAR_EXT = 1000104004,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_SRGB_NONLINEAR_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COLOR_SPACE_SRGB_NONLINEAR_KHR = 0,$/;"	e	enum:VkColorSpaceKHR
VK_COMMAND_BUFFER_LEVEL_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_BEGIN_RANGE = VK_COMMAND_BUFFER_LEVEL_PRIMARY,$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_LEVEL_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_END_RANGE = VK_COMMAND_BUFFER_LEVEL_SECONDARY,$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_LEVEL_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_LEVEL_PRIMARY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_PRIMARY = 0,$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_LEVEL_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_RANGE_SIZE = (VK_COMMAND_BUFFER_LEVEL_SECONDARY - VK_COMMAND_BUFFER_LEVEL_PRIMARY + 1),$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_LEVEL_SECONDARY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_SECONDARY = 1,$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCommandBufferResetFlagBits
VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT = 0x00000001,$/;"	e	enum:VkCommandBufferResetFlagBits
VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCommandBufferUsageFlagBits
VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT = 0x00000001,$/;"	e	enum:VkCommandBufferUsageFlagBits
VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT = 0x00000002,$/;"	e	enum:VkCommandBufferUsageFlagBits
VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT = 0x00000004,$/;"	e	enum:VkCommandBufferUsageFlagBits
VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCommandPoolCreateFlagBits
VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT = 0x00000002,$/;"	e	enum:VkCommandPoolCreateFlagBits
VK_COMMAND_POOL_CREATE_TRANSIENT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_POOL_CREATE_TRANSIENT_BIT = 0x00000001,$/;"	e	enum:VkCommandPoolCreateFlagBits
VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCommandPoolResetFlagBits
VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT = 0x00000001,$/;"	e	enum:VkCommandPoolResetFlagBits
VK_COMPARE_OP_ALWAYS	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPARE_OP_ALWAYS = 7,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPARE_OP_BEGIN_RANGE = VK_COMPARE_OP_NEVER,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPARE_OP_END_RANGE = VK_COMPARE_OP_ALWAYS,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_EQUAL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPARE_OP_EQUAL = 2,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_GREATER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPARE_OP_GREATER = 4,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_GREATER_OR_EQUAL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPARE_OP_GREATER_OR_EQUAL = 6,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_LESS	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPARE_OP_LESS = 1,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_LESS_OR_EQUAL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPARE_OP_LESS_OR_EQUAL = 3,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPARE_OP_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_NEVER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPARE_OP_NEVER = 0,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_NOT_EQUAL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPARE_OP_NOT_EQUAL = 5,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPARE_OP_RANGE_SIZE = (VK_COMPARE_OP_ALWAYS - VK_COMPARE_OP_NEVER + 1),$/;"	e	enum:VkCompareOp
VK_COMPONENT_SWIZZLE_A	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_A = 6,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_B	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_B = 5,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_BEGIN_RANGE = VK_COMPONENT_SWIZZLE_IDENTITY,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_END_RANGE = VK_COMPONENT_SWIZZLE_A,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_G	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_G = 4,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_IDENTITY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_IDENTITY = 0,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_ONE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_ONE = 2,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_R	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_R = 3,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_RANGE_SIZE = (VK_COMPONENT_SWIZZLE_A - VK_COMPONENT_SWIZZLE_IDENTITY + 1),$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_ZERO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_ZERO = 1,$/;"	e	enum:VkComponentSwizzle
VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR = 0x7FFFFFFF$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR = 0x00000008,$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR = 0x00000001,$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR = 0x00000004,$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR = 0x00000002,$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_CULL_MODE_BACK_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_CULL_MODE_BACK_BIT = 0x00000002,$/;"	e	enum:VkCullModeFlagBits
VK_CULL_MODE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_CULL_MODE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCullModeFlagBits
VK_CULL_MODE_FRONT_AND_BACK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_CULL_MODE_FRONT_AND_BACK = 0x00000003,$/;"	e	enum:VkCullModeFlagBits
VK_CULL_MODE_FRONT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_CULL_MODE_FRONT_BIT = 0x00000001,$/;"	e	enum:VkCullModeFlagBits
VK_CULL_MODE_NONE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_CULL_MODE_NONE = 0,$/;"	e	enum:VkCullModeFlagBits
VK_DEBUG_REPORT_DEBUG_BIT_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_DEBUG_BIT_EXT = 0x00000010,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_ERROR_BEGIN_RANGE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_BEGIN_RANGE_EXT = VK_DEBUG_REPORT_ERROR_NONE_EXT,$/;"	e	enum:VkDebugReportErrorEXT
VK_DEBUG_REPORT_ERROR_BIT_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_BIT_EXT = 0x00000008,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_ERROR_CALLBACK_REF_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_CALLBACK_REF_EXT = 1,$/;"	e	enum:VkDebugReportErrorEXT
VK_DEBUG_REPORT_ERROR_END_RANGE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_END_RANGE_EXT = VK_DEBUG_REPORT_ERROR_CALLBACK_REF_EXT,$/;"	e	enum:VkDebugReportErrorEXT
VK_DEBUG_REPORT_ERROR_MAX_ENUM_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_MAX_ENUM_EXT = 0x7FFFFFFF$/;"	e	enum:VkDebugReportErrorEXT
VK_DEBUG_REPORT_ERROR_NONE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_NONE_EXT = 0,$/;"	e	enum:VkDebugReportErrorEXT
VK_DEBUG_REPORT_ERROR_RANGE_SIZE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_RANGE_SIZE_EXT = (VK_DEBUG_REPORT_ERROR_CALLBACK_REF_EXT - VK_DEBUG_REPORT_ERROR_NONE_EXT + 1),$/;"	e	enum:VkDebugReportErrorEXT
VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT = 0x7FFFFFFF$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_INFORMATION_BIT_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_INFORMATION_BIT_EXT = 0x00000001,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_OBJECT_TYPE_BEGIN_RANGE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_BEGIN_RANGE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT = 9,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT = 13,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT = 6,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT = 25,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT = 28,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT = 22,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT = 23,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT = 20,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT = 3,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT = 8,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT = 29,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT = 30,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_END_RANGE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_END_RANGE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT = 11,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT = 7,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT = 24,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT = 10,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT = 14,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT = 32,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT = 1,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT = 0x7FFFFFFF$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT = 31,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT = 2,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT = 16,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT = 19,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT = 17,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT = 12,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT = 4,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_RANGE_SIZE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_RANGE_SIZE_EXT = (VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT - VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT + 1),$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT = 18,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT = 21,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT = 5,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT = 15,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT = 26,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT = 27,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT = 0,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT = 0x00000004,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_WARNING_BIT_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_WARNING_BIT_EXT = 0x00000002,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEFINE_HANDLE	thirdparty/glfw/src/deps/vulkan/vulkan.h	53;"	d
VK_DEFINE_NON_DISPATCHABLE_HANDLE	thirdparty/glfw/src/deps/vulkan/vulkan.h	58;"	d
VK_DEFINE_NON_DISPATCHABLE_HANDLE	thirdparty/glfw/src/deps/vulkan/vulkan.h	60;"	d
VK_DEPENDENCY_BY_REGION_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEPENDENCY_BY_REGION_BIT = 0x00000001,$/;"	e	enum:VkDependencyFlagBits
VK_DEPENDENCY_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEPENDENCY_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkDependencyFlagBits
VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkDescriptorPoolCreateFlagBits
VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT = 0x00000001,$/;"	e	enum:VkDescriptorPoolCreateFlagBits
VK_DESCRIPTOR_TYPE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_BEGIN_RANGE = VK_DESCRIPTOR_TYPE_SAMPLER,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER = 1,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_END_RANGE = VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT = 10,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_RANGE_SIZE = (VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT - VK_DESCRIPTOR_TYPE_SAMPLER + 1),$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE = 2,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_SAMPLER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_SAMPLER = 0,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_STORAGE_BUFFER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_STORAGE_BUFFER = 7,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC = 9,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_STORAGE_IMAGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_STORAGE_IMAGE = 3,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER = 5,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER = 6,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC = 8,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER = 4,$/;"	e	enum:VkDescriptorType
VK_DEVICE_EVENT_TYPE_BEGIN_RANGE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEVICE_EVENT_TYPE_BEGIN_RANGE_EXT = VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT,$/;"	e	enum:VkDeviceEventTypeEXT
VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT = 0,$/;"	e	enum:VkDeviceEventTypeEXT
VK_DEVICE_EVENT_TYPE_END_RANGE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEVICE_EVENT_TYPE_END_RANGE_EXT = VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT,$/;"	e	enum:VkDeviceEventTypeEXT
VK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT = 0x7FFFFFFF$/;"	e	enum:VkDeviceEventTypeEXT
VK_DEVICE_EVENT_TYPE_RANGE_SIZE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DEVICE_EVENT_TYPE_RANGE_SIZE_EXT = (VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT - VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT + 1),$/;"	e	enum:VkDeviceEventTypeEXT
VK_DISPLAY_EVENT_TYPE_BEGIN_RANGE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_EVENT_TYPE_BEGIN_RANGE_EXT = VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT,$/;"	e	enum:VkDisplayEventTypeEXT
VK_DISPLAY_EVENT_TYPE_END_RANGE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_EVENT_TYPE_END_RANGE_EXT = VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT,$/;"	e	enum:VkDisplayEventTypeEXT
VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT = 0,$/;"	e	enum:VkDisplayEventTypeEXT
VK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT = 0x7FFFFFFF$/;"	e	enum:VkDisplayEventTypeEXT
VK_DISPLAY_EVENT_TYPE_RANGE_SIZE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_EVENT_TYPE_RANGE_SIZE_EXT = (VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT - VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT + 1),$/;"	e	enum:VkDisplayEventTypeEXT
VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR = 0x7FFFFFFF$/;"	e	enum:VkDisplayPlaneAlphaFlagBitsKHR
VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR = 0x00000002,$/;"	e	enum:VkDisplayPlaneAlphaFlagBitsKHR
VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR = 0x00000001,$/;"	e	enum:VkDisplayPlaneAlphaFlagBitsKHR
VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR = 0x00000004,$/;"	e	enum:VkDisplayPlaneAlphaFlagBitsKHR
VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR = 0x00000008,$/;"	e	enum:VkDisplayPlaneAlphaFlagBitsKHR
VK_DISPLAY_POWER_STATE_BEGIN_RANGE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_POWER_STATE_BEGIN_RANGE_EXT = VK_DISPLAY_POWER_STATE_OFF_EXT,$/;"	e	enum:VkDisplayPowerStateEXT
VK_DISPLAY_POWER_STATE_END_RANGE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_POWER_STATE_END_RANGE_EXT = VK_DISPLAY_POWER_STATE_ON_EXT,$/;"	e	enum:VkDisplayPowerStateEXT
VK_DISPLAY_POWER_STATE_MAX_ENUM_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_POWER_STATE_MAX_ENUM_EXT = 0x7FFFFFFF$/;"	e	enum:VkDisplayPowerStateEXT
VK_DISPLAY_POWER_STATE_OFF_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_POWER_STATE_OFF_EXT = 0,$/;"	e	enum:VkDisplayPowerStateEXT
VK_DISPLAY_POWER_STATE_ON_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_POWER_STATE_ON_EXT = 2,$/;"	e	enum:VkDisplayPowerStateEXT
VK_DISPLAY_POWER_STATE_RANGE_SIZE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_POWER_STATE_RANGE_SIZE_EXT = (VK_DISPLAY_POWER_STATE_ON_EXT - VK_DISPLAY_POWER_STATE_OFF_EXT + 1),$/;"	e	enum:VkDisplayPowerStateEXT
VK_DISPLAY_POWER_STATE_SUSPEND_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DISPLAY_POWER_STATE_SUSPEND_EXT = 1,$/;"	e	enum:VkDisplayPowerStateEXT
VK_DYNAMIC_STATE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_BEGIN_RANGE = VK_DYNAMIC_STATE_VIEWPORT,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_BLEND_CONSTANTS	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_BLEND_CONSTANTS = 4,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_DEPTH_BIAS	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_DEPTH_BIAS = 3,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_DEPTH_BOUNDS	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_DEPTH_BOUNDS = 5,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_END_RANGE = VK_DYNAMIC_STATE_STENCIL_REFERENCE,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_LINE_WIDTH	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_LINE_WIDTH = 2,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_RANGE_SIZE = (VK_DYNAMIC_STATE_STENCIL_REFERENCE - VK_DYNAMIC_STATE_VIEWPORT + 1),$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_SCISSOR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_SCISSOR = 1,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK = 6,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_STENCIL_REFERENCE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_STENCIL_REFERENCE = 8,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_STENCIL_WRITE_MASK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_STENCIL_WRITE_MASK = 7,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_VIEWPORT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_VIEWPORT = 0,$/;"	e	enum:VkDynamicState
VK_ERROR_DEVICE_LOST	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_DEVICE_LOST = -4,$/;"	e	enum:VkResult
VK_ERROR_DEVICE_LOST	thirdparty/glfw/src/internal.h	/^    VK_ERROR_DEVICE_LOST = -4,$/;"	e	enum:VkResult
VK_ERROR_EXTENSION_NOT_PRESENT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_EXTENSION_NOT_PRESENT = -7,$/;"	e	enum:VkResult
VK_ERROR_EXTENSION_NOT_PRESENT	thirdparty/glfw/src/internal.h	/^    VK_ERROR_EXTENSION_NOT_PRESENT = -7,$/;"	e	enum:VkResult
VK_ERROR_FEATURE_NOT_PRESENT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_FEATURE_NOT_PRESENT = -8,$/;"	e	enum:VkResult
VK_ERROR_FEATURE_NOT_PRESENT	thirdparty/glfw/src/internal.h	/^    VK_ERROR_FEATURE_NOT_PRESENT = -8,$/;"	e	enum:VkResult
VK_ERROR_FORMAT_NOT_SUPPORTED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_FORMAT_NOT_SUPPORTED = -11,$/;"	e	enum:VkResult
VK_ERROR_FORMAT_NOT_SUPPORTED	thirdparty/glfw/src/internal.h	/^    VK_ERROR_FORMAT_NOT_SUPPORTED = -11,$/;"	e	enum:VkResult
VK_ERROR_FRAGMENTED_POOL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_FRAGMENTED_POOL = -12,$/;"	e	enum:VkResult
VK_ERROR_INCOMPATIBLE_DISPLAY_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_INCOMPATIBLE_DISPLAY_KHR = -1000003001,$/;"	e	enum:VkResult
VK_ERROR_INCOMPATIBLE_DISPLAY_KHR	thirdparty/glfw/src/internal.h	/^    VK_ERROR_INCOMPATIBLE_DISPLAY_KHR = -1000003001,$/;"	e	enum:VkResult
VK_ERROR_INCOMPATIBLE_DRIVER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_INCOMPATIBLE_DRIVER = -9,$/;"	e	enum:VkResult
VK_ERROR_INCOMPATIBLE_DRIVER	thirdparty/glfw/src/internal.h	/^    VK_ERROR_INCOMPATIBLE_DRIVER = -9,$/;"	e	enum:VkResult
VK_ERROR_INITIALIZATION_FAILED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_INITIALIZATION_FAILED = -3,$/;"	e	enum:VkResult
VK_ERROR_INITIALIZATION_FAILED	thirdparty/glfw/src/internal.h	/^    VK_ERROR_INITIALIZATION_FAILED = -3,$/;"	e	enum:VkResult
VK_ERROR_INVALID_SHADER_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_INVALID_SHADER_NV = -1000012000,$/;"	e	enum:VkResult
VK_ERROR_LAYER_NOT_PRESENT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_LAYER_NOT_PRESENT = -6,$/;"	e	enum:VkResult
VK_ERROR_LAYER_NOT_PRESENT	thirdparty/glfw/src/internal.h	/^    VK_ERROR_LAYER_NOT_PRESENT = -6,$/;"	e	enum:VkResult
VK_ERROR_MEMORY_MAP_FAILED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_MEMORY_MAP_FAILED = -5,$/;"	e	enum:VkResult
VK_ERROR_MEMORY_MAP_FAILED	thirdparty/glfw/src/internal.h	/^    VK_ERROR_MEMORY_MAP_FAILED = -5,$/;"	e	enum:VkResult
VK_ERROR_NATIVE_WINDOW_IN_USE_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_NATIVE_WINDOW_IN_USE_KHR = -1000000001,$/;"	e	enum:VkResult
VK_ERROR_NATIVE_WINDOW_IN_USE_KHR	thirdparty/glfw/src/internal.h	/^    VK_ERROR_NATIVE_WINDOW_IN_USE_KHR = -1000000001,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_DATE_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_OUT_OF_DATE_KHR = -1000001004,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_DATE_KHR	thirdparty/glfw/src/internal.h	/^    VK_ERROR_OUT_OF_DATE_KHR = -1000001004,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_DEVICE_MEMORY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_OUT_OF_DEVICE_MEMORY = -2,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_DEVICE_MEMORY	thirdparty/glfw/src/internal.h	/^    VK_ERROR_OUT_OF_DEVICE_MEMORY = -2,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_HOST_MEMORY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_OUT_OF_HOST_MEMORY = -1,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_HOST_MEMORY	thirdparty/glfw/src/internal.h	/^    VK_ERROR_OUT_OF_HOST_MEMORY = -1,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_POOL_MEMORY_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_OUT_OF_POOL_MEMORY_KHR = -1000069000,$/;"	e	enum:VkResult
VK_ERROR_SURFACE_LOST_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_SURFACE_LOST_KHR = -1000000000,$/;"	e	enum:VkResult
VK_ERROR_SURFACE_LOST_KHR	thirdparty/glfw/src/internal.h	/^    VK_ERROR_SURFACE_LOST_KHR = -1000000000,$/;"	e	enum:VkResult
VK_ERROR_TOO_MANY_OBJECTS	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_TOO_MANY_OBJECTS = -10,$/;"	e	enum:VkResult
VK_ERROR_TOO_MANY_OBJECTS	thirdparty/glfw/src/internal.h	/^    VK_ERROR_TOO_MANY_OBJECTS = -10,$/;"	e	enum:VkResult
VK_ERROR_VALIDATION_FAILED_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_ERROR_VALIDATION_FAILED_EXT = -1000011001,$/;"	e	enum:VkResult
VK_ERROR_VALIDATION_FAILED_EXT	thirdparty/glfw/src/internal.h	/^    VK_ERROR_VALIDATION_FAILED_EXT = -1000011001,$/;"	e	enum:VkResult
VK_EVENT_RESET	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_EVENT_RESET = 4,$/;"	e	enum:VkResult
VK_EVENT_RESET	thirdparty/glfw/src/internal.h	/^    VK_EVENT_RESET = 4,$/;"	e	enum:VkResult
VK_EVENT_SET	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_EVENT_SET = 3,$/;"	e	enum:VkResult
VK_EVENT_SET	thirdparty/glfw/src/internal.h	/^    VK_EVENT_SET = 3,$/;"	e	enum:VkResult
VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV = 0x00000001,$/;"	e	enum:VkExternalMemoryFeatureFlagBitsNV
VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV = 0x00000002,$/;"	e	enum:VkExternalMemoryFeatureFlagBitsNV
VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_NV = 0x7FFFFFFF$/;"	e	enum:VkExternalMemoryFeatureFlagBitsNV
VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV = 0x00000004,$/;"	e	enum:VkExternalMemoryFeatureFlagBitsNV
VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV = 0x00000004,$/;"	e	enum:VkExternalMemoryHandleTypeFlagBitsNV
VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV = 0x00000008,$/;"	e	enum:VkExternalMemoryHandleTypeFlagBitsNV
VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_NV = 0x7FFFFFFF$/;"	e	enum:VkExternalMemoryHandleTypeFlagBitsNV
VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV = 0x00000001,$/;"	e	enum:VkExternalMemoryHandleTypeFlagBitsNV
VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV = 0x00000002,$/;"	e	enum:VkExternalMemoryHandleTypeFlagBitsNV
VK_EXT_ACQUIRE_XLIB_DISPLAY_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4611;"	d
VK_EXT_ACQUIRE_XLIB_DISPLAY_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4610;"	d
VK_EXT_DEBUG_MARKER_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4064;"	d
VK_EXT_DEBUG_MARKER_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4063;"	d
VK_EXT_DEBUG_REPORT_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3909;"	d
VK_EXT_DEBUG_REPORT_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3908;"	d
VK_EXT_DIRECT_MODE_DISPLAY_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4596;"	d
VK_EXT_DIRECT_MODE_DISPLAY_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4595;"	d
VK_EXT_DISPLAY_CONTROL_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4669;"	d
VK_EXT_DISPLAY_CONTROL_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4668;"	d
VK_EXT_DISPLAY_SURFACE_COUNTER_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4632;"	d
VK_EXT_DISPLAY_SURFACE_COUNTER_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4631;"	d
VK_EXT_SHADER_SUBGROUP_BALLOT_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4359;"	d
VK_EXT_SHADER_SUBGROUP_BALLOT_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4358;"	d
VK_EXT_SHADER_SUBGROUP_VOTE_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4364;"	d
VK_EXT_SHADER_SUBGROUP_VOTE_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4363;"	d
VK_EXT_VALIDATION_FLAGS_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4311;"	d
VK_EXT_VALIDATION_FLAGS_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4310;"	d
VK_EXT_acquire_xlib_display	thirdparty/glfw/src/deps/vulkan/vulkan.h	4607;"	d
VK_EXT_debug_marker	thirdparty/glfw/src/deps/vulkan/vulkan.h	4062;"	d
VK_EXT_debug_report	thirdparty/glfw/src/deps/vulkan/vulkan.h	3905;"	d
VK_EXT_direct_mode_display	thirdparty/glfw/src/deps/vulkan/vulkan.h	4594;"	d
VK_EXT_display_control	thirdparty/glfw/src/deps/vulkan/vulkan.h	4667;"	d
VK_EXT_display_surface_counter	thirdparty/glfw/src/deps/vulkan/vulkan.h	4630;"	d
VK_EXT_shader_subgroup_ballot	thirdparty/glfw/src/deps/vulkan/vulkan.h	4357;"	d
VK_EXT_shader_subgroup_vote	thirdparty/glfw/src/deps/vulkan/vulkan.h	4362;"	d
VK_EXT_swapchain_colorspace	thirdparty/glfw/src/deps/vulkan/vulkan.h	4754;"	d
VK_EXT_validation_flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	4309;"	d
VK_FALSE	thirdparty/glfw/src/deps/vulkan/vulkan.h	103;"	d
VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkFenceCreateFlagBits
VK_FENCE_CREATE_SIGNALED_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FENCE_CREATE_SIGNALED_BIT = 0x00000001,$/;"	e	enum:VkFenceCreateFlagBits
VK_FILTER_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FILTER_BEGIN_RANGE = VK_FILTER_NEAREST,$/;"	e	enum:VkFilter
VK_FILTER_CUBIC_IMG	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FILTER_CUBIC_IMG = 1000015000,$/;"	e	enum:VkFilter
VK_FILTER_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FILTER_END_RANGE = VK_FILTER_LINEAR,$/;"	e	enum:VkFilter
VK_FILTER_LINEAR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FILTER_LINEAR = 1,$/;"	e	enum:VkFilter
VK_FILTER_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FILTER_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkFilter
VK_FILTER_NEAREST	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FILTER_NEAREST = 0,$/;"	e	enum:VkFilter
VK_FILTER_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FILTER_RANGE_SIZE = (VK_FILTER_LINEAR - VK_FILTER_NEAREST + 1),$/;"	e	enum:VkFilter
VK_FORMAT_A1R5G5B5_UNORM_PACK16	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A1R5G5B5_UNORM_PACK16 = 8,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_SINT_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A2B10G10R10_SINT_PACK32 = 69,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_SNORM_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A2B10G10R10_SNORM_PACK32 = 65,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_SSCALED_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A2B10G10R10_SSCALED_PACK32 = 67,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_UINT_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A2B10G10R10_UINT_PACK32 = 68,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_UNORM_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A2B10G10R10_UNORM_PACK32 = 64,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_USCALED_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A2B10G10R10_USCALED_PACK32 = 66,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_SINT_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A2R10G10B10_SINT_PACK32 = 63,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_SNORM_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A2R10G10B10_SNORM_PACK32 = 59,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_SSCALED_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A2R10G10B10_SSCALED_PACK32 = 61,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_UINT_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A2R10G10B10_UINT_PACK32 = 62,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_UNORM_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A2R10G10B10_UNORM_PACK32 = 58,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_USCALED_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A2R10G10B10_USCALED_PACK32 = 60,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_SINT_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_SINT_PACK32 = 56,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_SNORM_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_SNORM_PACK32 = 52,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_SRGB_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_SRGB_PACK32 = 57,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_SSCALED_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_SSCALED_PACK32 = 54,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_UINT_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_UINT_PACK32 = 55,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_UNORM_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_UNORM_PACK32 = 51,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_USCALED_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_USCALED_PACK32 = 53,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x10_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x10_SRGB_BLOCK = 180,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x10_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x10_UNORM_BLOCK = 179,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x5_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x5_SRGB_BLOCK = 174,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x5_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x5_UNORM_BLOCK = 173,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x6_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x6_SRGB_BLOCK = 176,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x6_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x6_UNORM_BLOCK = 175,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x8_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x8_SRGB_BLOCK = 178,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x8_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x8_UNORM_BLOCK = 177,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_12x10_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_12x10_SRGB_BLOCK = 182,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_12x10_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_12x10_UNORM_BLOCK = 181,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_12x12_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_12x12_SRGB_BLOCK = 184,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_12x12_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_12x12_UNORM_BLOCK = 183,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_4x4_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_4x4_SRGB_BLOCK = 158,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_4x4_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_4x4_UNORM_BLOCK = 157,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_5x4_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_5x4_SRGB_BLOCK = 160,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_5x4_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_5x4_UNORM_BLOCK = 159,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_5x5_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_5x5_SRGB_BLOCK = 162,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_5x5_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_5x5_UNORM_BLOCK = 161,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_6x5_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_6x5_SRGB_BLOCK = 164,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_6x5_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_6x5_UNORM_BLOCK = 163,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_6x6_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_6x6_SRGB_BLOCK = 166,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_6x6_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_6x6_UNORM_BLOCK = 165,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x5_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_8x5_SRGB_BLOCK = 168,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x5_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_8x5_UNORM_BLOCK = 167,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x6_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_8x6_SRGB_BLOCK = 170,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x6_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_8x6_UNORM_BLOCK = 169,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x8_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_8x8_SRGB_BLOCK = 172,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x8_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_8x8_UNORM_BLOCK = 171,$/;"	e	enum:VkFormat
VK_FORMAT_B10G11R11_UFLOAT_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B10G11R11_UFLOAT_PACK32 = 122,$/;"	e	enum:VkFormat
VK_FORMAT_B4G4R4A4_UNORM_PACK16	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B4G4R4A4_UNORM_PACK16 = 3,$/;"	e	enum:VkFormat
VK_FORMAT_B5G5R5A1_UNORM_PACK16	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B5G5R5A1_UNORM_PACK16 = 7,$/;"	e	enum:VkFormat
VK_FORMAT_B5G6R5_UNORM_PACK16	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B5G6R5_UNORM_PACK16 = 5,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_SINT = 49,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_SNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_SNORM = 45,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_SRGB	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_SRGB = 50,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_SSCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_SSCALED = 47,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_UINT = 48,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_UNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_UNORM = 44,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_USCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_USCALED = 46,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_SINT = 35,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_SNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_SNORM = 31,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_SRGB	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_SRGB = 36,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_SSCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_SSCALED = 33,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_UINT = 34,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_UNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_UNORM = 30,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_USCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_USCALED = 32,$/;"	e	enum:VkFormat
VK_FORMAT_BC1_RGBA_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC1_RGBA_SRGB_BLOCK = 134,$/;"	e	enum:VkFormat
VK_FORMAT_BC1_RGBA_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC1_RGBA_UNORM_BLOCK = 133,$/;"	e	enum:VkFormat
VK_FORMAT_BC1_RGB_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC1_RGB_SRGB_BLOCK = 132,$/;"	e	enum:VkFormat
VK_FORMAT_BC1_RGB_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC1_RGB_UNORM_BLOCK = 131,$/;"	e	enum:VkFormat
VK_FORMAT_BC2_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC2_SRGB_BLOCK = 136,$/;"	e	enum:VkFormat
VK_FORMAT_BC2_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC2_UNORM_BLOCK = 135,$/;"	e	enum:VkFormat
VK_FORMAT_BC3_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC3_SRGB_BLOCK = 138,$/;"	e	enum:VkFormat
VK_FORMAT_BC3_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC3_UNORM_BLOCK = 137,$/;"	e	enum:VkFormat
VK_FORMAT_BC4_SNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC4_SNORM_BLOCK = 140,$/;"	e	enum:VkFormat
VK_FORMAT_BC4_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC4_UNORM_BLOCK = 139,$/;"	e	enum:VkFormat
VK_FORMAT_BC5_SNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC5_SNORM_BLOCK = 142,$/;"	e	enum:VkFormat
VK_FORMAT_BC5_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC5_UNORM_BLOCK = 141,$/;"	e	enum:VkFormat
VK_FORMAT_BC6H_SFLOAT_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC6H_SFLOAT_BLOCK = 144,$/;"	e	enum:VkFormat
VK_FORMAT_BC6H_UFLOAT_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC6H_UFLOAT_BLOCK = 143,$/;"	e	enum:VkFormat
VK_FORMAT_BC7_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC7_SRGB_BLOCK = 146,$/;"	e	enum:VkFormat
VK_FORMAT_BC7_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BC7_UNORM_BLOCK = 145,$/;"	e	enum:VkFormat
VK_FORMAT_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_BEGIN_RANGE = VK_FORMAT_UNDEFINED,$/;"	e	enum:VkFormat
VK_FORMAT_D16_UNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_D16_UNORM = 124,$/;"	e	enum:VkFormat
VK_FORMAT_D16_UNORM_S8_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_D16_UNORM_S8_UINT = 128,$/;"	e	enum:VkFormat
VK_FORMAT_D24_UNORM_S8_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_D24_UNORM_S8_UINT = 129,$/;"	e	enum:VkFormat
VK_FORMAT_D32_SFLOAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_D32_SFLOAT = 126,$/;"	e	enum:VkFormat
VK_FORMAT_D32_SFLOAT_S8_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_D32_SFLOAT_S8_UINT = 130,$/;"	e	enum:VkFormat
VK_FORMAT_E5B9G9R9_UFLOAT_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 = 123,$/;"	e	enum:VkFormat
VK_FORMAT_EAC_R11G11_SNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_EAC_R11G11_SNORM_BLOCK = 156,$/;"	e	enum:VkFormat
VK_FORMAT_EAC_R11G11_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_EAC_R11G11_UNORM_BLOCK = 155,$/;"	e	enum:VkFormat
VK_FORMAT_EAC_R11_SNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_EAC_R11_SNORM_BLOCK = 154,$/;"	e	enum:VkFormat
VK_FORMAT_EAC_R11_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_EAC_R11_UNORM_BLOCK = 153,$/;"	e	enum:VkFormat
VK_FORMAT_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_END_RANGE = VK_FORMAT_ASTC_12x12_SRGB_BLOCK,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK = 150,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK = 149,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK = 152,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK = 151,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK = 148,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK = 147,$/;"	e	enum:VkFormat
VK_FORMAT_FEATURE_BLIT_DST_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_BLIT_DST_BIT = 0x00000800,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_BLIT_SRC_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_BLIT_SRC_BIT = 0x00000400,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT = 0x00000080,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT = 0x00000100,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT = 0x00000200,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT = 0x00000001,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG = 0x00002000,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT = 0x00001000,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT = 0x00000004,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT = 0x00000002,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT = 0x00000020,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT = 0x00000010,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR = 0x00008000,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR = 0x00004000,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT = 0x00000008,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT = 0x00000040,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkFormat
VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG = 1000054004,$/;"	e	enum:VkFormat
VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG = 1000054000,$/;"	e	enum:VkFormat
VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG = 1000054005,$/;"	e	enum:VkFormat
VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG = 1000054001,$/;"	e	enum:VkFormat
VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG = 1000054006,$/;"	e	enum:VkFormat
VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG = 1000054002,$/;"	e	enum:VkFormat
VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG = 1000054007,$/;"	e	enum:VkFormat
VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG = 1000054003,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_SFLOAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_SFLOAT = 97,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_SINT = 96,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_SNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_SNORM = 92,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_SSCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_SSCALED = 94,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_UINT = 95,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_UNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_UNORM = 91,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_USCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_USCALED = 93,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_SFLOAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_SFLOAT = 90,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_SINT = 89,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_SNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_SNORM = 85,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_SSCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_SSCALED = 87,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_UINT = 88,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_UNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_UNORM = 84,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_USCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_USCALED = 86,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_SFLOAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_SFLOAT = 83,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_SINT = 82,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_SNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_SNORM = 78,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_SSCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_SSCALED = 80,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_UINT = 81,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_UNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_UNORM = 77,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_USCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_USCALED = 79,$/;"	e	enum:VkFormat
VK_FORMAT_R16_SFLOAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16_SFLOAT = 76,$/;"	e	enum:VkFormat
VK_FORMAT_R16_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16_SINT = 75,$/;"	e	enum:VkFormat
VK_FORMAT_R16_SNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16_SNORM = 71,$/;"	e	enum:VkFormat
VK_FORMAT_R16_SSCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16_SSCALED = 73,$/;"	e	enum:VkFormat
VK_FORMAT_R16_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16_UINT = 74,$/;"	e	enum:VkFormat
VK_FORMAT_R16_UNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16_UNORM = 70,$/;"	e	enum:VkFormat
VK_FORMAT_R16_USCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R16_USCALED = 72,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32A32_SFLOAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R32G32B32A32_SFLOAT = 109,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32A32_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R32G32B32A32_SINT = 108,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32A32_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R32G32B32A32_UINT = 107,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32_SFLOAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R32G32B32_SFLOAT = 106,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R32G32B32_SINT = 105,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R32G32B32_UINT = 104,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32_SFLOAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R32G32_SFLOAT = 103,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R32G32_SINT = 102,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R32G32_UINT = 101,$/;"	e	enum:VkFormat
VK_FORMAT_R32_SFLOAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R32_SFLOAT = 100,$/;"	e	enum:VkFormat
VK_FORMAT_R32_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R32_SINT = 99,$/;"	e	enum:VkFormat
VK_FORMAT_R32_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R32_UINT = 98,$/;"	e	enum:VkFormat
VK_FORMAT_R4G4B4A4_UNORM_PACK16	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R4G4B4A4_UNORM_PACK16 = 2,$/;"	e	enum:VkFormat
VK_FORMAT_R4G4_UNORM_PACK8	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R4G4_UNORM_PACK8 = 1,$/;"	e	enum:VkFormat
VK_FORMAT_R5G5B5A1_UNORM_PACK16	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R5G5B5A1_UNORM_PACK16 = 6,$/;"	e	enum:VkFormat
VK_FORMAT_R5G6B5_UNORM_PACK16	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R5G6B5_UNORM_PACK16 = 4,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64A64_SFLOAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R64G64B64A64_SFLOAT = 121,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64A64_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R64G64B64A64_SINT = 120,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64A64_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R64G64B64A64_UINT = 119,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64_SFLOAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R64G64B64_SFLOAT = 118,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R64G64B64_SINT = 117,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R64G64B64_UINT = 116,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64_SFLOAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R64G64_SFLOAT = 115,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R64G64_SINT = 114,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R64G64_UINT = 113,$/;"	e	enum:VkFormat
VK_FORMAT_R64_SFLOAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R64_SFLOAT = 112,$/;"	e	enum:VkFormat
VK_FORMAT_R64_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R64_SINT = 111,$/;"	e	enum:VkFormat
VK_FORMAT_R64_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R64_UINT = 110,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_SINT = 42,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_SNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_SNORM = 38,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_SRGB	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_SRGB = 43,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_SSCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_SSCALED = 40,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_UINT = 41,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_UNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_UNORM = 37,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_USCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_USCALED = 39,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_SINT = 28,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_SNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_SNORM = 24,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_SRGB	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_SRGB = 29,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_SSCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_SSCALED = 26,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_UINT = 27,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_UNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_UNORM = 23,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_USCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_USCALED = 25,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_SINT = 21,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_SNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_SNORM = 17,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_SRGB	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_SRGB = 22,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_SSCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_SSCALED = 19,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_UINT = 20,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_UNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_UNORM = 16,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_USCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_USCALED = 18,$/;"	e	enum:VkFormat
VK_FORMAT_R8_SINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8_SINT = 14,$/;"	e	enum:VkFormat
VK_FORMAT_R8_SNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8_SNORM = 10,$/;"	e	enum:VkFormat
VK_FORMAT_R8_SRGB	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8_SRGB = 15,$/;"	e	enum:VkFormat
VK_FORMAT_R8_SSCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8_SSCALED = 12,$/;"	e	enum:VkFormat
VK_FORMAT_R8_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8_UINT = 13,$/;"	e	enum:VkFormat
VK_FORMAT_R8_UNORM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8_UNORM = 9,$/;"	e	enum:VkFormat
VK_FORMAT_R8_USCALED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_R8_USCALED = 11,$/;"	e	enum:VkFormat
VK_FORMAT_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_RANGE_SIZE = (VK_FORMAT_ASTC_12x12_SRGB_BLOCK - VK_FORMAT_UNDEFINED + 1),$/;"	e	enum:VkFormat
VK_FORMAT_S8_UINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_S8_UINT = 127,$/;"	e	enum:VkFormat
VK_FORMAT_UNDEFINED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_UNDEFINED = 0,$/;"	e	enum:VkFormat
VK_FORMAT_X8_D24_UNORM_PACK32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FORMAT_X8_D24_UNORM_PACK32 = 125,$/;"	e	enum:VkFormat
VK_FRONT_FACE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FRONT_FACE_BEGIN_RANGE = VK_FRONT_FACE_COUNTER_CLOCKWISE,$/;"	e	enum:VkFrontFace
VK_FRONT_FACE_CLOCKWISE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FRONT_FACE_CLOCKWISE = 1,$/;"	e	enum:VkFrontFace
VK_FRONT_FACE_COUNTER_CLOCKWISE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FRONT_FACE_COUNTER_CLOCKWISE = 0,$/;"	e	enum:VkFrontFace
VK_FRONT_FACE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FRONT_FACE_END_RANGE = VK_FRONT_FACE_CLOCKWISE,$/;"	e	enum:VkFrontFace
VK_FRONT_FACE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FRONT_FACE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkFrontFace
VK_FRONT_FACE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_FRONT_FACE_RANGE_SIZE = (VK_FRONT_FACE_CLOCKWISE - VK_FRONT_FACE_COUNTER_CLOCKWISE + 1),$/;"	e	enum:VkFrontFace
VK_HEADER_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	46;"	d
VK_IMAGE_ASPECT_COLOR_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_ASPECT_COLOR_BIT = 0x00000001,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_DEPTH_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_ASPECT_DEPTH_BIT = 0x00000002,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_METADATA_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_ASPECT_METADATA_BIT = 0x00000008,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_STENCIL_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_ASPECT_STENCIL_BIT = 0x00000004,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR = 0x00000020,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT = 0x00000010,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT = 0x00000008,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_SPARSE_ALIASED_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_CREATE_SPARSE_ALIASED_BIT = 0x00000004,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_SPARSE_BINDING_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_CREATE_SPARSE_BINDING_BIT = 0x00000001,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT = 0x00000002,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_LAYOUT_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_BEGIN_RANGE = VK_IMAGE_LAYOUT_UNDEFINED,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL = 2,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = 3,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL = 4,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_END_RANGE = VK_IMAGE_LAYOUT_PREINITIALIZED,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_GENERAL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_GENERAL = 1,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_PREINITIALIZED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_PREINITIALIZED = 8,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_PRESENT_SRC_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_PRESENT_SRC_KHR = 1000001002,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_RANGE_SIZE = (VK_IMAGE_LAYOUT_PREINITIALIZED - VK_IMAGE_LAYOUT_UNDEFINED + 1),$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL = 5,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL = 7,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL = 6,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_UNDEFINED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_UNDEFINED = 0,$/;"	e	enum:VkImageLayout
VK_IMAGE_TILING_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_TILING_BEGIN_RANGE = VK_IMAGE_TILING_OPTIMAL,$/;"	e	enum:VkImageTiling
VK_IMAGE_TILING_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_TILING_END_RANGE = VK_IMAGE_TILING_LINEAR,$/;"	e	enum:VkImageTiling
VK_IMAGE_TILING_LINEAR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_TILING_LINEAR = 1,$/;"	e	enum:VkImageTiling
VK_IMAGE_TILING_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_TILING_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageTiling
VK_IMAGE_TILING_OPTIMAL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_TILING_OPTIMAL = 0,$/;"	e	enum:VkImageTiling
VK_IMAGE_TILING_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_TILING_RANGE_SIZE = (VK_IMAGE_TILING_LINEAR - VK_IMAGE_TILING_OPTIMAL + 1),$/;"	e	enum:VkImageTiling
VK_IMAGE_TYPE_1D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_1D = 0,$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_2D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_2D = 1,$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_3D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_3D = 2,$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_BEGIN_RANGE = VK_IMAGE_TYPE_1D,$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_END_RANGE = VK_IMAGE_TYPE_3D,$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_RANGE_SIZE = (VK_IMAGE_TYPE_3D - VK_IMAGE_TYPE_1D + 1),$/;"	e	enum:VkImageType
VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT = 0x00000010,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT = 0x00000020,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT = 0x00000080,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_SAMPLED_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_SAMPLED_BIT = 0x00000004,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_STORAGE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_STORAGE_BIT = 0x00000008,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_TRANSFER_DST_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_TRANSFER_DST_BIT = 0x00000002,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_TRANSFER_SRC_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_TRANSFER_SRC_BIT = 0x00000001,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT = 0x00000040,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_VIEW_TYPE_1D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_1D = 0,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_1D_ARRAY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_1D_ARRAY = 4,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_2D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_2D = 1,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_2D_ARRAY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_2D_ARRAY = 5,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_3D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_3D = 2,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_BEGIN_RANGE = VK_IMAGE_VIEW_TYPE_1D,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_CUBE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_CUBE = 3,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_CUBE_ARRAY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_CUBE_ARRAY = 6,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_END_RANGE = VK_IMAGE_VIEW_TYPE_CUBE_ARRAY,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_RANGE_SIZE = (VK_IMAGE_VIEW_TYPE_CUBE_ARRAY - VK_IMAGE_VIEW_TYPE_1D + 1),$/;"	e	enum:VkImageViewType
VK_IMG_FILTER_CUBIC_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4027;"	d
VK_IMG_FILTER_CUBIC_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4026;"	d
VK_IMG_FORMAT_PVRTC_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4193;"	d
VK_IMG_FORMAT_PVRTC_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4192;"	d
VK_IMG_filter_cubic	thirdparty/glfw/src/deps/vulkan/vulkan.h	4025;"	d
VK_IMG_format_pvrtc	thirdparty/glfw/src/deps/vulkan/vulkan.h	4191;"	d
VK_INCOMPLETE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INCOMPLETE = 5,$/;"	e	enum:VkResult
VK_INCOMPLETE	thirdparty/glfw/src/internal.h	/^    VK_INCOMPLETE = 5,$/;"	e	enum:VkResult
VK_INDEX_TYPE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDEX_TYPE_BEGIN_RANGE = VK_INDEX_TYPE_UINT16,$/;"	e	enum:VkIndexType
VK_INDEX_TYPE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDEX_TYPE_END_RANGE = VK_INDEX_TYPE_UINT32,$/;"	e	enum:VkIndexType
VK_INDEX_TYPE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDEX_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkIndexType
VK_INDEX_TYPE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDEX_TYPE_RANGE_SIZE = (VK_INDEX_TYPE_UINT32 - VK_INDEX_TYPE_UINT16 + 1),$/;"	e	enum:VkIndexType
VK_INDEX_TYPE_UINT16	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDEX_TYPE_UINT16 = 0,$/;"	e	enum:VkIndexType
VK_INDEX_TYPE_UINT32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDEX_TYPE_UINT32 = 1,$/;"	e	enum:VkIndexType
VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EMPTY_EXECUTIONS_BIT_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EMPTY_EXECUTIONS_BIT_NVX = 0x00000004,$/;"	e	enum:VkIndirectCommandsLayoutUsageFlagBitsNVX
VK_INDIRECT_COMMANDS_LAYOUT_USAGE_FLAG_BITS_MAX_ENUM_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_FLAG_BITS_MAX_ENUM_NVX = 0x7FFFFFFF$/;"	e	enum:VkIndirectCommandsLayoutUsageFlagBitsNVX
VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NVX = 0x00000008,$/;"	e	enum:VkIndirectCommandsLayoutUsageFlagBitsNVX
VK_INDIRECT_COMMANDS_LAYOUT_USAGE_SPARSE_SEQUENCES_BIT_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_SPARSE_SEQUENCES_BIT_NVX = 0x00000002,$/;"	e	enum:VkIndirectCommandsLayoutUsageFlagBitsNVX
VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NVX = 0x00000001,$/;"	e	enum:VkIndirectCommandsLayoutUsageFlagBitsNVX
VK_INDIRECT_COMMANDS_TOKEN_DESCRIPTOR_SET_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_TOKEN_DESCRIPTOR_SET_NVX = 1,$/;"	e	enum:VkIndirectCommandsTokenTypeNVX
VK_INDIRECT_COMMANDS_TOKEN_DISPATCH_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_TOKEN_DISPATCH_NVX = 7,$/;"	e	enum:VkIndirectCommandsTokenTypeNVX
VK_INDIRECT_COMMANDS_TOKEN_DRAW_INDEXED_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_TOKEN_DRAW_INDEXED_NVX = 5,$/;"	e	enum:VkIndirectCommandsTokenTypeNVX
VK_INDIRECT_COMMANDS_TOKEN_DRAW_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_TOKEN_DRAW_NVX = 6,$/;"	e	enum:VkIndirectCommandsTokenTypeNVX
VK_INDIRECT_COMMANDS_TOKEN_INDEX_BUFFER_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_TOKEN_INDEX_BUFFER_NVX = 2,$/;"	e	enum:VkIndirectCommandsTokenTypeNVX
VK_INDIRECT_COMMANDS_TOKEN_PIPELINE_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_TOKEN_PIPELINE_NVX = 0,$/;"	e	enum:VkIndirectCommandsTokenTypeNVX
VK_INDIRECT_COMMANDS_TOKEN_PUSH_CONSTANT_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_TOKEN_PUSH_CONSTANT_NVX = 4,$/;"	e	enum:VkIndirectCommandsTokenTypeNVX
VK_INDIRECT_COMMANDS_TOKEN_TYPE_BEGIN_RANGE_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_TOKEN_TYPE_BEGIN_RANGE_NVX = VK_INDIRECT_COMMANDS_TOKEN_PIPELINE_NVX,$/;"	e	enum:VkIndirectCommandsTokenTypeNVX
VK_INDIRECT_COMMANDS_TOKEN_TYPE_END_RANGE_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_TOKEN_TYPE_END_RANGE_NVX = VK_INDIRECT_COMMANDS_TOKEN_DISPATCH_NVX,$/;"	e	enum:VkIndirectCommandsTokenTypeNVX
VK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NVX = 0x7FFFFFFF$/;"	e	enum:VkIndirectCommandsTokenTypeNVX
VK_INDIRECT_COMMANDS_TOKEN_TYPE_RANGE_SIZE_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_TOKEN_TYPE_RANGE_SIZE_NVX = (VK_INDIRECT_COMMANDS_TOKEN_DISPATCH_NVX - VK_INDIRECT_COMMANDS_TOKEN_PIPELINE_NVX + 1),$/;"	e	enum:VkIndirectCommandsTokenTypeNVX
VK_INDIRECT_COMMANDS_TOKEN_VERTEX_BUFFER_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INDIRECT_COMMANDS_TOKEN_VERTEX_BUFFER_NVX = 3,$/;"	e	enum:VkIndirectCommandsTokenTypeNVX
VK_INTERNAL_ALLOCATION_TYPE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INTERNAL_ALLOCATION_TYPE_BEGIN_RANGE = VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE,$/;"	e	enum:VkInternalAllocationType
VK_INTERNAL_ALLOCATION_TYPE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INTERNAL_ALLOCATION_TYPE_END_RANGE = VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE,$/;"	e	enum:VkInternalAllocationType
VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE = 0,$/;"	e	enum:VkInternalAllocationType
VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkInternalAllocationType
VK_INTERNAL_ALLOCATION_TYPE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_INTERNAL_ALLOCATION_TYPE_RANGE_SIZE = (VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE - VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE + 1),$/;"	e	enum:VkInternalAllocationType
VK_KHR_ANDROID_SURFACE_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3713;"	d
VK_KHR_ANDROID_SURFACE_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3712;"	d
VK_KHR_DISPLAY_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3419;"	d
VK_KHR_DISPLAY_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3418;"	d
VK_KHR_DISPLAY_SWAPCHAIN_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3544;"	d
VK_KHR_DISPLAY_SWAPCHAIN_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3543;"	d
VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3777;"	d
VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3776;"	d
VK_KHR_MAINTENANCE1_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3892;"	d
VK_KHR_MAINTENANCE1_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3891;"	d
VK_KHR_MIR_SURFACE_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3678;"	d
VK_KHR_MIR_SURFACE_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3677;"	d
VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3772;"	d
VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3771;"	d
VK_KHR_SHADER_DRAW_PARAMETERS_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3887;"	d
VK_KHR_SHADER_DRAW_PARAMETERS_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3886;"	d
VK_KHR_SURFACE_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3222;"	d
VK_KHR_SURFACE_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3221;"	d
VK_KHR_SWAPCHAIN_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3340;"	d
VK_KHR_SWAPCHAIN_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3339;"	d
VK_KHR_WAYLAND_SURFACE_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3643;"	d
VK_KHR_WAYLAND_SURFACE_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3642;"	d
VK_KHR_WIN32_SURFACE_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3741;"	d
VK_KHR_WIN32_SURFACE_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3740;"	d
VK_KHR_XCB_SURFACE_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3607;"	d
VK_KHR_XCB_SURFACE_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3606;"	d
VK_KHR_XLIB_SURFACE_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	3571;"	d
VK_KHR_XLIB_SURFACE_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	3570;"	d
VK_KHR_android_surface	thirdparty/glfw/src/deps/vulkan/vulkan.h	3709;"	d
VK_KHR_display	thirdparty/glfw/src/deps/vulkan/vulkan.h	3414;"	d
VK_KHR_display_swapchain	thirdparty/glfw/src/deps/vulkan/vulkan.h	3542;"	d
VK_KHR_get_physical_device_properties2	thirdparty/glfw/src/deps/vulkan/vulkan.h	3775;"	d
VK_KHR_maintenance1	thirdparty/glfw/src/deps/vulkan/vulkan.h	3890;"	d
VK_KHR_mir_surface	thirdparty/glfw/src/deps/vulkan/vulkan.h	3674;"	d
VK_KHR_sampler_mirror_clamp_to_edge	thirdparty/glfw/src/deps/vulkan/vulkan.h	3770;"	d
VK_KHR_shader_draw_parameters	thirdparty/glfw/src/deps/vulkan/vulkan.h	3885;"	d
VK_KHR_surface	thirdparty/glfw/src/deps/vulkan/vulkan.h	3218;"	d
VK_KHR_swapchain	thirdparty/glfw/src/deps/vulkan/vulkan.h	3336;"	d
VK_KHR_wayland_surface	thirdparty/glfw/src/deps/vulkan/vulkan.h	3639;"	d
VK_KHR_win32_surface	thirdparty/glfw/src/deps/vulkan/vulkan.h	3737;"	d
VK_KHR_xcb_surface	thirdparty/glfw/src/deps/vulkan/vulkan.h	3603;"	d
VK_KHR_xlib_surface	thirdparty/glfw/src/deps/vulkan/vulkan.h	3567;"	d
VK_LOD_CLAMP_NONE	thirdparty/glfw/src/deps/vulkan/vulkan.h	97;"	d
VK_LOGIC_OP_AND	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_AND = 1,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_AND_INVERTED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_AND_INVERTED = 4,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_AND_REVERSE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_AND_REVERSE = 2,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_BEGIN_RANGE = VK_LOGIC_OP_CLEAR,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_CLEAR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_CLEAR = 0,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_COPY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_COPY = 3,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_COPY_INVERTED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_COPY_INVERTED = 12,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_END_RANGE = VK_LOGIC_OP_SET,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_EQUIVALENT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_EQUIVALENT = 9,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_INVERT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_INVERT = 10,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_NAND	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_NAND = 14,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_NOR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_NOR = 8,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_NO_OP	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_NO_OP = 5,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_OR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_OR = 7,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_OR_INVERTED	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_OR_INVERTED = 13,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_OR_REVERSE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_OR_REVERSE = 11,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_RANGE_SIZE = (VK_LOGIC_OP_SET - VK_LOGIC_OP_CLEAR + 1),$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_SET	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_SET = 15,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_XOR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_LOGIC_OP_XOR = 6,$/;"	e	enum:VkLogicOp
VK_MAKE_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	33;"	d
VK_MAX_DESCRIPTION_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	111;"	d
VK_MAX_EXTENSION_NAME_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	110;"	d
VK_MAX_MEMORY_HEAPS	thirdparty/glfw/src/deps/vulkan/vulkan.h	109;"	d
VK_MAX_MEMORY_TYPES	thirdparty/glfw/src/deps/vulkan/vulkan.h	108;"	d
VK_MAX_PHYSICAL_DEVICE_NAME_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	106;"	d
VK_MEMORY_HEAP_DEVICE_LOCAL_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_MEMORY_HEAP_DEVICE_LOCAL_BIT = 0x00000001,$/;"	e	enum:VkMemoryHeapFlagBits
VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkMemoryHeapFlagBits
VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT = 0x00000001,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_HOST_CACHED_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_MEMORY_PROPERTY_HOST_CACHED_BIT = 0x00000008,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_HOST_COHERENT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_MEMORY_PROPERTY_HOST_COHERENT_BIT = 0x00000004,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT = 0x00000002,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT = 0x00000010,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_NN_VI_SURFACE_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4334;"	d
VK_NN_VI_SURFACE_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4333;"	d
VK_NN_vi_surface	thirdparty/glfw/src/deps/vulkan/vulkan.h	4332;"	d
VK_NOT_READY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_NOT_READY = 1,$/;"	e	enum:VkResult
VK_NOT_READY	thirdparty/glfw/src/internal.h	/^    VK_NOT_READY = 1,$/;"	e	enum:VkResult
VK_NULL_HANDLE	thirdparty/glfw/src/deps/vulkan/vulkan.h	49;"	d
VK_NULL_HANDLE	thirdparty/glfw/src/internal.h	109;"	d
VK_NVX_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4372;"	d
VK_NVX_DEVICE_GENERATED_COMMANDS_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4371;"	d
VK_NVX_device_generated_commands	thirdparty/glfw/src/deps/vulkan/vulkan.h	4367;"	d
VK_NV_DEDICATED_ALLOCATION_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4126;"	d
VK_NV_DEDICATED_ALLOCATION_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4125;"	d
VK_NV_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4198;"	d
VK_NV_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4197;"	d
VK_NV_EXTERNAL_MEMORY_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4242;"	d
VK_NV_EXTERNAL_MEMORY_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4241;"	d
VK_NV_EXTERNAL_MEMORY_WIN32_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4261;"	d
VK_NV_EXTERNAL_MEMORY_WIN32_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4260;"	d
VK_NV_GLSL_SHADER_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4022;"	d
VK_NV_GLSL_SHADER_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4021;"	d
VK_NV_WIN32_KEYED_MUTEX_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4292;"	d
VK_NV_WIN32_KEYED_MUTEX_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4291;"	d
VK_NV_dedicated_allocation	thirdparty/glfw/src/deps/vulkan/vulkan.h	4124;"	d
VK_NV_external_memory	thirdparty/glfw/src/deps/vulkan/vulkan.h	4240;"	d
VK_NV_external_memory_capabilities	thirdparty/glfw/src/deps/vulkan/vulkan.h	4196;"	d
VK_NV_external_memory_win32	thirdparty/glfw/src/deps/vulkan/vulkan.h	4259;"	d
VK_NV_glsl_shader	thirdparty/glfw/src/deps/vulkan/vulkan.h	4020;"	d
VK_NV_win32_keyed_mutex	thirdparty/glfw/src/deps/vulkan/vulkan.h	4290;"	d
VK_OBJECT_ENTRY_DESCRIPTOR_SET_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_OBJECT_ENTRY_DESCRIPTOR_SET_NVX = 0,$/;"	e	enum:VkObjectEntryTypeNVX
VK_OBJECT_ENTRY_INDEX_BUFFER_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_OBJECT_ENTRY_INDEX_BUFFER_NVX = 2,$/;"	e	enum:VkObjectEntryTypeNVX
VK_OBJECT_ENTRY_PIPELINE_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_OBJECT_ENTRY_PIPELINE_NVX = 1,$/;"	e	enum:VkObjectEntryTypeNVX
VK_OBJECT_ENTRY_PUSH_CONSTANT_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_OBJECT_ENTRY_PUSH_CONSTANT_NVX = 4,$/;"	e	enum:VkObjectEntryTypeNVX
VK_OBJECT_ENTRY_TYPE_BEGIN_RANGE_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_OBJECT_ENTRY_TYPE_BEGIN_RANGE_NVX = VK_OBJECT_ENTRY_DESCRIPTOR_SET_NVX,$/;"	e	enum:VkObjectEntryTypeNVX
VK_OBJECT_ENTRY_TYPE_END_RANGE_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_OBJECT_ENTRY_TYPE_END_RANGE_NVX = VK_OBJECT_ENTRY_PUSH_CONSTANT_NVX,$/;"	e	enum:VkObjectEntryTypeNVX
VK_OBJECT_ENTRY_TYPE_MAX_ENUM_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_OBJECT_ENTRY_TYPE_MAX_ENUM_NVX = 0x7FFFFFFF$/;"	e	enum:VkObjectEntryTypeNVX
VK_OBJECT_ENTRY_TYPE_RANGE_SIZE_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_OBJECT_ENTRY_TYPE_RANGE_SIZE_NVX = (VK_OBJECT_ENTRY_PUSH_CONSTANT_NVX - VK_OBJECT_ENTRY_DESCRIPTOR_SET_NVX + 1),$/;"	e	enum:VkObjectEntryTypeNVX
VK_OBJECT_ENTRY_USAGE_COMPUTE_BIT_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_OBJECT_ENTRY_USAGE_COMPUTE_BIT_NVX = 0x00000002,$/;"	e	enum:VkObjectEntryUsageFlagBitsNVX
VK_OBJECT_ENTRY_USAGE_FLAG_BITS_MAX_ENUM_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_OBJECT_ENTRY_USAGE_FLAG_BITS_MAX_ENUM_NVX = 0x7FFFFFFF$/;"	e	enum:VkObjectEntryUsageFlagBitsNVX
VK_OBJECT_ENTRY_USAGE_GRAPHICS_BIT_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_OBJECT_ENTRY_USAGE_GRAPHICS_BIT_NVX = 0x00000001,$/;"	e	enum:VkObjectEntryUsageFlagBitsNVX
VK_OBJECT_ENTRY_VERTEX_BUFFER_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_OBJECT_ENTRY_VERTEX_BUFFER_NVX = 3,$/;"	e	enum:VkObjectEntryTypeNVX
VK_PAD_A	thirdparty/glfw/src/deps/mingw/xinput.h	60;"	d
VK_PAD_B	thirdparty/glfw/src/deps/mingw/xinput.h	61;"	d
VK_PAD_BACK	thirdparty/glfw/src/deps/mingw/xinput.h	73;"	d
VK_PAD_DPAD_DOWN	thirdparty/glfw/src/deps/mingw/xinput.h	69;"	d
VK_PAD_DPAD_LEFT	thirdparty/glfw/src/deps/mingw/xinput.h	70;"	d
VK_PAD_DPAD_RIGHT	thirdparty/glfw/src/deps/mingw/xinput.h	71;"	d
VK_PAD_DPAD_UP	thirdparty/glfw/src/deps/mingw/xinput.h	68;"	d
VK_PAD_LSHOULDER	thirdparty/glfw/src/deps/mingw/xinput.h	65;"	d
VK_PAD_LTHUMB_DOWN	thirdparty/glfw/src/deps/mingw/xinput.h	77;"	d
VK_PAD_LTHUMB_DOWNLEFT	thirdparty/glfw/src/deps/mingw/xinput.h	83;"	d
VK_PAD_LTHUMB_DOWNRIGHT	thirdparty/glfw/src/deps/mingw/xinput.h	82;"	d
VK_PAD_LTHUMB_LEFT	thirdparty/glfw/src/deps/mingw/xinput.h	79;"	d
VK_PAD_LTHUMB_PRESS	thirdparty/glfw/src/deps/mingw/xinput.h	74;"	d
VK_PAD_LTHUMB_RIGHT	thirdparty/glfw/src/deps/mingw/xinput.h	78;"	d
VK_PAD_LTHUMB_UP	thirdparty/glfw/src/deps/mingw/xinput.h	76;"	d
VK_PAD_LTHUMB_UPLEFT	thirdparty/glfw/src/deps/mingw/xinput.h	80;"	d
VK_PAD_LTHUMB_UPRIGHT	thirdparty/glfw/src/deps/mingw/xinput.h	81;"	d
VK_PAD_LTRIGGER	thirdparty/glfw/src/deps/mingw/xinput.h	66;"	d
VK_PAD_RSHOULDER	thirdparty/glfw/src/deps/mingw/xinput.h	64;"	d
VK_PAD_RTHUMB_DOWN	thirdparty/glfw/src/deps/mingw/xinput.h	85;"	d
VK_PAD_RTHUMB_DOWNLEFT	thirdparty/glfw/src/deps/mingw/xinput.h	91;"	d
VK_PAD_RTHUMB_DOWNRIGHT	thirdparty/glfw/src/deps/mingw/xinput.h	90;"	d
VK_PAD_RTHUMB_LEFT	thirdparty/glfw/src/deps/mingw/xinput.h	87;"	d
VK_PAD_RTHUMB_PRESS	thirdparty/glfw/src/deps/mingw/xinput.h	75;"	d
VK_PAD_RTHUMB_RIGHT	thirdparty/glfw/src/deps/mingw/xinput.h	86;"	d
VK_PAD_RTHUMB_UP	thirdparty/glfw/src/deps/mingw/xinput.h	84;"	d
VK_PAD_RTHUMB_UPLEFT	thirdparty/glfw/src/deps/mingw/xinput.h	88;"	d
VK_PAD_RTHUMB_UPRIGHT	thirdparty/glfw/src/deps/mingw/xinput.h	89;"	d
VK_PAD_RTRIGGER	thirdparty/glfw/src/deps/mingw/xinput.h	67;"	d
VK_PAD_START	thirdparty/glfw/src/deps/mingw/xinput.h	72;"	d
VK_PAD_X	thirdparty/glfw/src/deps/mingw/xinput.h	62;"	d
VK_PAD_Y	thirdparty/glfw/src/deps/mingw/xinput.h	63;"	d
VK_PHYSICAL_DEVICE_TYPE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_BEGIN_RANGE = VK_PHYSICAL_DEVICE_TYPE_OTHER,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_CPU	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_CPU = 4,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU = 2,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_END_RANGE = VK_PHYSICAL_DEVICE_TYPE_CPU,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU = 1,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_OTHER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_OTHER = 0,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_RANGE_SIZE = (VK_PHYSICAL_DEVICE_TYPE_CPU - VK_PHYSICAL_DEVICE_TYPE_OTHER + 1),$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU = 3,$/;"	e	enum:VkPhysicalDeviceType
VK_PIPELINE_BIND_POINT_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_BIND_POINT_BEGIN_RANGE = VK_PIPELINE_BIND_POINT_GRAPHICS,$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_BIND_POINT_COMPUTE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_BIND_POINT_COMPUTE = 1,$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_BIND_POINT_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_BIND_POINT_END_RANGE = VK_PIPELINE_BIND_POINT_COMPUTE,$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_BIND_POINT_GRAPHICS	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_BIND_POINT_GRAPHICS = 0,$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_BIND_POINT_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_BIND_POINT_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_BIND_POINT_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_BIND_POINT_RANGE_SIZE = (VK_PIPELINE_BIND_POINT_COMPUTE - VK_PIPELINE_BIND_POINT_GRAPHICS + 1),$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_CACHE_HEADER_VERSION_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_CACHE_HEADER_VERSION_BEGIN_RANGE = VK_PIPELINE_CACHE_HEADER_VERSION_ONE,$/;"	e	enum:VkPipelineCacheHeaderVersion
VK_PIPELINE_CACHE_HEADER_VERSION_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_CACHE_HEADER_VERSION_END_RANGE = VK_PIPELINE_CACHE_HEADER_VERSION_ONE,$/;"	e	enum:VkPipelineCacheHeaderVersion
VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPipelineCacheHeaderVersion
VK_PIPELINE_CACHE_HEADER_VERSION_ONE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_CACHE_HEADER_VERSION_ONE = 1,$/;"	e	enum:VkPipelineCacheHeaderVersion
VK_PIPELINE_CACHE_HEADER_VERSION_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_CACHE_HEADER_VERSION_RANGE_SIZE = (VK_PIPELINE_CACHE_HEADER_VERSION_ONE - VK_PIPELINE_CACHE_HEADER_VERSION_ONE + 1),$/;"	e	enum:VkPipelineCacheHeaderVersion
VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT = 0x00000002,$/;"	e	enum:VkPipelineCreateFlagBits
VK_PIPELINE_CREATE_DERIVATIVE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_CREATE_DERIVATIVE_BIT = 0x00000004,$/;"	e	enum:VkPipelineCreateFlagBits
VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT = 0x00000001,$/;"	e	enum:VkPipelineCreateFlagBits
VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPipelineCreateFlagBits
VK_PIPELINE_STAGE_ALL_COMMANDS_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_ALL_COMMANDS_BIT = 0x00010000,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT = 0x00008000,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT = 0x00002000,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT = 0x00000400,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_COMMAND_PROCESS_BIT_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_COMMAND_PROCESS_BIT_NVX = 0x00020000,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT = 0x00000800,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT = 0x00000002,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT = 0x00000100,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT = 0x00000080,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT = 0x00000040,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_HOST_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_HOST_BIT = 0x00004000,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT = 0x00000200,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT = 0x00000010,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT = 0x00000020,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT = 0x00000001,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_TRANSFER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_TRANSFER_BIT = 0x00001000,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_VERTEX_INPUT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_VERTEX_INPUT_BIT = 0x00000004,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_VERTEX_SHADER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_VERTEX_SHADER_BIT = 0x00000008,$/;"	e	enum:VkPipelineStageFlagBits
VK_PLATFORM_H_	thirdparty/glfw/src/deps/vulkan/vk_platform.h	22;"	d
VK_POLYGON_MODE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_POLYGON_MODE_BEGIN_RANGE = VK_POLYGON_MODE_FILL,$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_POLYGON_MODE_END_RANGE = VK_POLYGON_MODE_POINT,$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_FILL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_POLYGON_MODE_FILL = 0,$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_LINE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_POLYGON_MODE_LINE = 1,$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_POLYGON_MODE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_POINT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_POLYGON_MODE_POINT = 2,$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_POLYGON_MODE_RANGE_SIZE = (VK_POLYGON_MODE_POINT - VK_POLYGON_MODE_FILL + 1),$/;"	e	enum:VkPolygonMode
VK_PRESENT_MODE_BEGIN_RANGE_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRESENT_MODE_BEGIN_RANGE_KHR = VK_PRESENT_MODE_IMMEDIATE_KHR,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_END_RANGE_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRESENT_MODE_END_RANGE_KHR = VK_PRESENT_MODE_FIFO_RELAXED_KHR,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_FIFO_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRESENT_MODE_FIFO_KHR = 2,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_FIFO_RELAXED_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRESENT_MODE_FIFO_RELAXED_KHR = 3,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_IMMEDIATE_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRESENT_MODE_IMMEDIATE_KHR = 0,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_MAILBOX_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRESENT_MODE_MAILBOX_KHR = 1,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_MAX_ENUM_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRESENT_MODE_MAX_ENUM_KHR = 0x7FFFFFFF$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_RANGE_SIZE_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRESENT_MODE_RANGE_SIZE_KHR = (VK_PRESENT_MODE_FIFO_RELAXED_KHR - VK_PRESENT_MODE_IMMEDIATE_KHR + 1),$/;"	e	enum:VkPresentModeKHR
VK_PRIMITIVE_TOPOLOGY_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_BEGIN_RANGE = VK_PRIMITIVE_TOPOLOGY_POINT_LIST,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_END_RANGE = VK_PRIMITIVE_TOPOLOGY_PATCH_LIST,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_LINE_LIST	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_LINE_LIST = 1,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY = 6,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_LINE_STRIP	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_LINE_STRIP = 2,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY = 7,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_PATCH_LIST	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_PATCH_LIST = 10,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_POINT_LIST	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_POINT_LIST = 0,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_RANGE_SIZE = (VK_PRIMITIVE_TOPOLOGY_PATCH_LIST - VK_PRIMITIVE_TOPOLOGY_POINT_LIST + 1),$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN = 5,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST = 3,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY = 8,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP = 4,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY = 9,$/;"	e	enum:VkPrimitiveTopology
VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkQueryControlFlagBits
VK_QUERY_CONTROL_PRECISE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_CONTROL_PRECISE_BIT = 0x00000001,$/;"	e	enum:VkQueryControlFlagBits
VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT = 0x00000020,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT = 0x00000040,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT = 0x00000400,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT = 0x00000080,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT = 0x00000008,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT = 0x00000010,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT = 0x00000002,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT = 0x00000001,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT = 0x00000100,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT = 0x00000200,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT = 0x00000004,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_RESULT_64_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_RESULT_64_BIT = 0x00000001,$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_RESULT_PARTIAL_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_RESULT_PARTIAL_BIT = 0x00000008,$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_RESULT_WAIT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_RESULT_WAIT_BIT = 0x00000002,$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_RESULT_WITH_AVAILABILITY_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_RESULT_WITH_AVAILABILITY_BIT = 0x00000004,$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_TYPE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_TYPE_BEGIN_RANGE = VK_QUERY_TYPE_OCCLUSION,$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_TYPE_END_RANGE = VK_QUERY_TYPE_TIMESTAMP,$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_OCCLUSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_TYPE_OCCLUSION = 0,$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_PIPELINE_STATISTICS	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_TYPE_PIPELINE_STATISTICS = 1,$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_TYPE_RANGE_SIZE = (VK_QUERY_TYPE_TIMESTAMP - VK_QUERY_TYPE_OCCLUSION + 1),$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_TIMESTAMP	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUERY_TYPE_TIMESTAMP = 2,$/;"	e	enum:VkQueryType
VK_QUEUE_COMPUTE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUEUE_COMPUTE_BIT = 0x00000002,$/;"	e	enum:VkQueueFlagBits
VK_QUEUE_FAMILY_IGNORED	thirdparty/glfw/src/deps/vulkan/vulkan.h	104;"	d
VK_QUEUE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUEUE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkQueueFlagBits
VK_QUEUE_GRAPHICS_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUEUE_GRAPHICS_BIT = 0x00000001,$/;"	e	enum:VkQueueFlagBits
VK_QUEUE_SPARSE_BINDING_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUEUE_SPARSE_BINDING_BIT = 0x00000008,$/;"	e	enum:VkQueueFlagBits
VK_QUEUE_TRANSFER_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_QUEUE_TRANSFER_BIT = 0x00000004,$/;"	e	enum:VkQueueFlagBits
VK_RASTERIZATION_ORDER_BEGIN_RANGE_AMD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_RASTERIZATION_ORDER_BEGIN_RANGE_AMD = VK_RASTERIZATION_ORDER_STRICT_AMD,$/;"	e	enum:VkRasterizationOrderAMD
VK_RASTERIZATION_ORDER_END_RANGE_AMD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_RASTERIZATION_ORDER_END_RANGE_AMD = VK_RASTERIZATION_ORDER_RELAXED_AMD,$/;"	e	enum:VkRasterizationOrderAMD
VK_RASTERIZATION_ORDER_MAX_ENUM_AMD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_RASTERIZATION_ORDER_MAX_ENUM_AMD = 0x7FFFFFFF$/;"	e	enum:VkRasterizationOrderAMD
VK_RASTERIZATION_ORDER_RANGE_SIZE_AMD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_RASTERIZATION_ORDER_RANGE_SIZE_AMD = (VK_RASTERIZATION_ORDER_RELAXED_AMD - VK_RASTERIZATION_ORDER_STRICT_AMD + 1),$/;"	e	enum:VkRasterizationOrderAMD
VK_RASTERIZATION_ORDER_RELAXED_AMD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_RASTERIZATION_ORDER_RELAXED_AMD = 1,$/;"	e	enum:VkRasterizationOrderAMD
VK_RASTERIZATION_ORDER_STRICT_AMD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_RASTERIZATION_ORDER_STRICT_AMD = 0,$/;"	e	enum:VkRasterizationOrderAMD
VK_REMAINING_ARRAY_LAYERS	thirdparty/glfw/src/deps/vulkan/vulkan.h	99;"	d
VK_REMAINING_MIP_LEVELS	thirdparty/glfw/src/deps/vulkan/vulkan.h	98;"	d
VK_RESULT_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_RESULT_BEGIN_RANGE = VK_ERROR_FRAGMENTED_POOL,$/;"	e	enum:VkResult
VK_RESULT_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_RESULT_END_RANGE = VK_INCOMPLETE,$/;"	e	enum:VkResult
VK_RESULT_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_RESULT_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkResult
VK_RESULT_MAX_ENUM	thirdparty/glfw/src/internal.h	/^    VK_RESULT_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkResult
VK_RESULT_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_RESULT_RANGE_SIZE = (VK_INCOMPLETE - VK_ERROR_FRAGMENTED_POOL + 1),$/;"	e	enum:VkResult
VK_SAMPLER_ADDRESS_MODE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_BEGIN_RANGE = VK_SAMPLER_ADDRESS_MODE_REPEAT,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER = 3,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE = 2,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_END_RANGE = VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT = 1,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE = 4,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_RANGE_SIZE = (VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER - VK_SAMPLER_ADDRESS_MODE_REPEAT + 1),$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_REPEAT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_REPEAT = 0,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_MIPMAP_MODE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_BEGIN_RANGE = VK_SAMPLER_MIPMAP_MODE_NEAREST,$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLER_MIPMAP_MODE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_END_RANGE = VK_SAMPLER_MIPMAP_MODE_LINEAR,$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLER_MIPMAP_MODE_LINEAR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_LINEAR = 1,$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLER_MIPMAP_MODE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLER_MIPMAP_MODE_NEAREST	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_NEAREST = 0,$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLER_MIPMAP_MODE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_RANGE_SIZE = (VK_SAMPLER_MIPMAP_MODE_LINEAR - VK_SAMPLER_MIPMAP_MODE_NEAREST + 1),$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLE_COUNT_16_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_16_BIT = 0x00000010,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_1_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_1_BIT = 0x00000001,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_2_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_2_BIT = 0x00000002,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_32_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_32_BIT = 0x00000020,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_4_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_4_BIT = 0x00000004,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_64_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_64_BIT = 0x00000040,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_8_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_8_BIT = 0x00000008,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSampleCountFlagBits
VK_SHADER_STAGE_ALL	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHADER_STAGE_ALL = 0x7FFFFFFF,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_ALL_GRAPHICS	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHADER_STAGE_ALL_GRAPHICS = 0x0000001F,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_COMPUTE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHADER_STAGE_COMPUTE_BIT = 0x00000020,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_FRAGMENT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHADER_STAGE_FRAGMENT_BIT = 0x00000010,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_GEOMETRY_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHADER_STAGE_GEOMETRY_BIT = 0x00000008,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT = 0x00000002,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT = 0x00000004,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_VERTEX_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHADER_STAGE_VERTEX_BIT = 0x00000001,$/;"	e	enum:VkShaderStageFlagBits
VK_SHARING_MODE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHARING_MODE_BEGIN_RANGE = VK_SHARING_MODE_EXCLUSIVE,$/;"	e	enum:VkSharingMode
VK_SHARING_MODE_CONCURRENT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHARING_MODE_CONCURRENT = 1,$/;"	e	enum:VkSharingMode
VK_SHARING_MODE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHARING_MODE_END_RANGE = VK_SHARING_MODE_CONCURRENT,$/;"	e	enum:VkSharingMode
VK_SHARING_MODE_EXCLUSIVE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHARING_MODE_EXCLUSIVE = 0,$/;"	e	enum:VkSharingMode
VK_SHARING_MODE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHARING_MODE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSharingMode
VK_SHARING_MODE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SHARING_MODE_RANGE_SIZE = (VK_SHARING_MODE_CONCURRENT - VK_SHARING_MODE_EXCLUSIVE + 1),$/;"	e	enum:VkSharingMode
VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT = 0x00000002,$/;"	e	enum:VkSparseImageFormatFlagBits
VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSparseImageFormatFlagBits
VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT = 0x00000004,$/;"	e	enum:VkSparseImageFormatFlagBits
VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT = 0x00000001,$/;"	e	enum:VkSparseImageFormatFlagBits
VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSparseMemoryBindFlagBits
VK_SPARSE_MEMORY_BIND_METADATA_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SPARSE_MEMORY_BIND_METADATA_BIT = 0x00000001,$/;"	e	enum:VkSparseMemoryBindFlagBits
VK_STENCIL_FACE_BACK_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_FACE_BACK_BIT = 0x00000002,$/;"	e	enum:VkStencilFaceFlagBits
VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkStencilFaceFlagBits
VK_STENCIL_FACE_FRONT_BIT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_FACE_FRONT_BIT = 0x00000001,$/;"	e	enum:VkStencilFaceFlagBits
VK_STENCIL_FRONT_AND_BACK	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_FRONT_AND_BACK = 0x00000003,$/;"	e	enum:VkStencilFaceFlagBits
VK_STENCIL_OP_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_OP_BEGIN_RANGE = VK_STENCIL_OP_KEEP,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_DECREMENT_AND_CLAMP	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_OP_DECREMENT_AND_CLAMP = 4,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_DECREMENT_AND_WRAP	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_OP_DECREMENT_AND_WRAP = 7,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_OP_END_RANGE = VK_STENCIL_OP_DECREMENT_AND_WRAP,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_INCREMENT_AND_CLAMP	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_OP_INCREMENT_AND_CLAMP = 3,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_INCREMENT_AND_WRAP	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_OP_INCREMENT_AND_WRAP = 6,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_INVERT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_OP_INVERT = 5,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_KEEP	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_OP_KEEP = 0,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_OP_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_OP_RANGE_SIZE = (VK_STENCIL_OP_DECREMENT_AND_WRAP - VK_STENCIL_OP_KEEP + 1),$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_REPLACE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_OP_REPLACE = 2,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_ZERO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STENCIL_OP_ZERO = 1,$/;"	e	enum:VkStencilOp
VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR = 1000008000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_APPLICATION_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_APPLICATION_INFO = 0,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_BEGIN_RANGE = VK_STRUCTURE_TYPE_APPLICATION_INFO,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BIND_SPARSE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_BIND_SPARSE_INFO = 7,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO = 12,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER = 44,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO = 13,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX = 1000086002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX = 1000086003,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO = 40,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO = 42,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO = 41,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO = 39,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO = 29,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET = 36,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT = 1000022002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT = 1000022000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT = 1000022001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT = 1000011000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	3910;"	d
VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV = 1000026001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV = 1000026000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV = 1000026002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO = 33,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO = 34,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO = 32,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO = 3,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT = 1000091001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX = 1000086005,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX = 1000086004,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO = 2,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT = 1000091002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR = 1000002000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT = 1000091000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR = 1000003000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR = 1000002001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_END_RANGE = VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EVENT_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_EVENT_CREATE_INFO = 10,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV = 1000056001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV = 1000057001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV = 1000056000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_FENCE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_FENCE_CREATE_INFO = 8,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR = 1000059002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO = 37,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO = 28,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO = 14,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR = 1000059003,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER = 45,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO = 15,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV = 1000057000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX = 1000086001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO = 1,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO = 48,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO = 47,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK	thirdparty/glfw/src/internal.h	/^    VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK = 1000053000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE = 6,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MAX_ENUM	thirdparty/glfw/src/internal.h	/^    VK_STRUCTURE_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO = 5,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MEMORY_BARRIER	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_MEMORY_BARRIER = 46,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MIR_SURFACE_CREATE_INFO_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_MIR_SURFACE_CREATE_INFO_KHR = 1000007000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MIR_SURFACE_CREATE_INFO_KHR	thirdparty/glfw/src/internal.h	/^    VK_STRUCTURE_TYPE_MIR_SURFACE_CREATE_INFO_KHR = 1000007000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX = 1000086000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR = 1000059000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR = 1000059004,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR = 1000059006,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR = 1000059001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR = 1000059008,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO = 17,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO = 26,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO = 25,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO = 27,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO = 20,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO = 30,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO = 24,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO = 23,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD = 1000018000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO = 18,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO = 21,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO = 19,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO = 22,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PRESENT_INFO_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PRESENT_INFO_KHR = 1000001001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO = 11,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR = 1000059005,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_RANGE_SIZE = (VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO - VK_STRUCTURE_TYPE_APPLICATION_INFO + 1),$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO = 43,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO = 38,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO = 31,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO = 9,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO = 16,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR = 1000059007,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SUBMIT_INFO	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_SUBMIT_INFO = 4,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT = 1000090000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT = 1000091003,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR = 1000001000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT = 1000061000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN = 1000062000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR = 1000006000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR	thirdparty/glfw/src/internal.h	/^    VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR = 1000006000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV = 1000058000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR = 1000009000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR	thirdparty/glfw/src/internal.h	/^    VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR = 1000009000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET = 35,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR = 1000005000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR	thirdparty/glfw/src/internal.h	/^    VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR = 1000005000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR = 1000004000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR	thirdparty/glfw/src/internal.h	/^    VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR = 1000004000,$/;"	e	enum:VkStructureType
VK_SUBOPTIMAL_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SUBOPTIMAL_KHR = 1000001003,$/;"	e	enum:VkResult
VK_SUBOPTIMAL_KHR	thirdparty/glfw/src/internal.h	/^    VK_SUBOPTIMAL_KHR = 1000001003,$/;"	e	enum:VkResult
VK_SUBPASS_CONTENTS_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SUBPASS_CONTENTS_BEGIN_RANGE = VK_SUBPASS_CONTENTS_INLINE,$/;"	e	enum:VkSubpassContents
VK_SUBPASS_CONTENTS_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SUBPASS_CONTENTS_END_RANGE = VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS,$/;"	e	enum:VkSubpassContents
VK_SUBPASS_CONTENTS_INLINE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SUBPASS_CONTENTS_INLINE = 0,$/;"	e	enum:VkSubpassContents
VK_SUBPASS_CONTENTS_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SUBPASS_CONTENTS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSubpassContents
VK_SUBPASS_CONTENTS_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SUBPASS_CONTENTS_RANGE_SIZE = (VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS - VK_SUBPASS_CONTENTS_INLINE + 1),$/;"	e	enum:VkSubpassContents
VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS = 1,$/;"	e	enum:VkSubpassContents
VK_SUBPASS_EXTERNAL	thirdparty/glfw/src/deps/vulkan/vulkan.h	105;"	d
VK_SUCCESS	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SUCCESS = 0,$/;"	e	enum:VkResult
VK_SUCCESS	thirdparty/glfw/src/internal.h	/^    VK_SUCCESS = 0,$/;"	e	enum:VkResult
VK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT = 0x7FFFFFFF$/;"	e	enum:VkSurfaceCounterFlagBitsEXT
VK_SURFACE_COUNTER_VBLANK_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SURFACE_COUNTER_VBLANK_EXT = 0x00000001,$/;"	e	enum:VkSurfaceCounterFlagBitsEXT
VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR = 0x7FFFFFFF$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR = 0x00000010,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR = 0x00000040,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR = 0x00000080,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR = 0x00000020,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR = 0x00000001,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR = 0x00000100,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR = 0x00000004,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR = 0x00000008,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR = 0x00000002,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SWAPCHAIN_COLOR_SPACE_EXTENSION_NAME	thirdparty/glfw/src/deps/vulkan/vulkan.h	4756;"	d
VK_SWAPCHAIN_COLOR_SPACE_SPEC_VERSION	thirdparty/glfw/src/deps/vulkan/vulkan.h	4755;"	d
VK_SYSTEM_ALLOCATION_SCOPE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_BEGIN_RANGE = VK_SYSTEM_ALLOCATION_SCOPE_COMMAND,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_CACHE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_CACHE = 2,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_COMMAND	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_COMMAND = 0,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_DEVICE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_DEVICE = 3,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_END_RANGE = VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE = 4,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_OBJECT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_OBJECT = 1,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_RANGE_SIZE = (VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE - VK_SYSTEM_ALLOCATION_SCOPE_COMMAND + 1),$/;"	e	enum:VkSystemAllocationScope
VK_TIMEOUT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_TIMEOUT = 2,$/;"	e	enum:VkResult
VK_TIMEOUT	thirdparty/glfw/src/internal.h	/^    VK_TIMEOUT = 2,$/;"	e	enum:VkResult
VK_TRUE	thirdparty/glfw/src/deps/vulkan/vulkan.h	102;"	d
VK_UUID_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	107;"	d
VK_VALIDATION_CHECK_ALL_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_VALIDATION_CHECK_ALL_EXT = 0,$/;"	e	enum:VkValidationCheckEXT
VK_VALIDATION_CHECK_BEGIN_RANGE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_VALIDATION_CHECK_BEGIN_RANGE_EXT = VK_VALIDATION_CHECK_ALL_EXT,$/;"	e	enum:VkValidationCheckEXT
VK_VALIDATION_CHECK_END_RANGE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_VALIDATION_CHECK_END_RANGE_EXT = VK_VALIDATION_CHECK_ALL_EXT,$/;"	e	enum:VkValidationCheckEXT
VK_VALIDATION_CHECK_MAX_ENUM_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_VALIDATION_CHECK_MAX_ENUM_EXT = 0x7FFFFFFF$/;"	e	enum:VkValidationCheckEXT
VK_VALIDATION_CHECK_RANGE_SIZE_EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_VALIDATION_CHECK_RANGE_SIZE_EXT = (VK_VALIDATION_CHECK_ALL_EXT - VK_VALIDATION_CHECK_ALL_EXT + 1),$/;"	e	enum:VkValidationCheckEXT
VK_VERSION_1_0	thirdparty/glfw/src/deps/vulkan/vulkan.h	30;"	d
VK_VERSION_MAJOR	thirdparty/glfw/src/deps/vulkan/vulkan.h	42;"	d
VK_VERSION_MINOR	thirdparty/glfw/src/deps/vulkan/vulkan.h	43;"	d
VK_VERSION_PATCH	thirdparty/glfw/src/deps/vulkan/vulkan.h	44;"	d
VK_VERTEX_INPUT_RATE_BEGIN_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_VERTEX_INPUT_RATE_BEGIN_RANGE = VK_VERTEX_INPUT_RATE_VERTEX,$/;"	e	enum:VkVertexInputRate
VK_VERTEX_INPUT_RATE_END_RANGE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_VERTEX_INPUT_RATE_END_RANGE = VK_VERTEX_INPUT_RATE_INSTANCE,$/;"	e	enum:VkVertexInputRate
VK_VERTEX_INPUT_RATE_INSTANCE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_VERTEX_INPUT_RATE_INSTANCE = 1,$/;"	e	enum:VkVertexInputRate
VK_VERTEX_INPUT_RATE_MAX_ENUM	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_VERTEX_INPUT_RATE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkVertexInputRate
VK_VERTEX_INPUT_RATE_RANGE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_VERTEX_INPUT_RATE_RANGE_SIZE = (VK_VERTEX_INPUT_RATE_INSTANCE - VK_VERTEX_INPUT_RATE_VERTEX + 1),$/;"	e	enum:VkVertexInputRate
VK_VERTEX_INPUT_RATE_VERTEX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VK_VERTEX_INPUT_RATE_VERTEX = 0,$/;"	e	enum:VkVertexInputRate
VK_WHOLE_SIZE	thirdparty/glfw/src/deps/vulkan/vulkan.h	100;"	d
VOICE_COUNT	thirdparty/soloud/include/soloud/soloud.h	58;"	d
VORBIS__no_error	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS__no_error,$/;"	e	enum:STBVorbisError	file:
VORBIS__no_error	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS__no_error,$/;"	e	enum:STBVorbisError	file:
VORBIS_bad_packet_type	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_bad_packet_type,$/;"	e	enum:STBVorbisError	file:
VORBIS_bad_packet_type	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_bad_packet_type,$/;"	e	enum:STBVorbisError	file:
VORBIS_cant_find_last_page	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_cant_find_last_page,$/;"	e	enum:STBVorbisError	file:
VORBIS_cant_find_last_page	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_cant_find_last_page,$/;"	e	enum:STBVorbisError	file:
VORBIS_continued_packet_flag_invalid	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_continued_packet_flag_invalid,$/;"	e	enum:STBVorbisError	file:
VORBIS_continued_packet_flag_invalid	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_continued_packet_flag_invalid,$/;"	e	enum:STBVorbisError	file:
VORBIS_feature_not_supported	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_feature_not_supported,        \/\/ uses floor 0$/;"	e	enum:STBVorbisError	file:
VORBIS_feature_not_supported	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_feature_not_supported,        \/\/ uses floor 0$/;"	e	enum:STBVorbisError	file:
VORBIS_file_open_failure	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_file_open_failure,            \/\/ fopen() failed$/;"	e	enum:STBVorbisError	file:
VORBIS_file_open_failure	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_file_open_failure,            \/\/ fopen() failed$/;"	e	enum:STBVorbisError	file:
VORBIS_incorrect_stream_serial_number	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_incorrect_stream_serial_number,$/;"	e	enum:STBVorbisError	file:
VORBIS_incorrect_stream_serial_number	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_incorrect_stream_serial_number,$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_api_mixing	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_invalid_api_mixing,           \/\/ can't mix API modes$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_api_mixing	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_invalid_api_mixing,           \/\/ can't mix API modes$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_first_page	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_invalid_first_page,$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_first_page	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_invalid_first_page,$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_setup	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_invalid_setup=20,$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_setup	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_invalid_setup=20,$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_stream	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_invalid_stream,$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_stream	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_invalid_stream,$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_stream_structure_version	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_invalid_stream_structure_version,$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_stream_structure_version	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_invalid_stream_structure_version,$/;"	e	enum:STBVorbisError	file:
VORBIS_missing_capture_pattern	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_missing_capture_pattern=30,$/;"	e	enum:STBVorbisError	file:
VORBIS_missing_capture_pattern	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_missing_capture_pattern=30,$/;"	e	enum:STBVorbisError	file:
VORBIS_need_more_data	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_need_more_data=1,             \/\/ not a real error$/;"	e	enum:STBVorbisError	file:
VORBIS_need_more_data	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_need_more_data=1,             \/\/ not a real error$/;"	e	enum:STBVorbisError	file:
VORBIS_outofmem	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_outofmem,                     \/\/ not enough memory$/;"	e	enum:STBVorbisError	file:
VORBIS_outofmem	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_outofmem,                     \/\/ not enough memory$/;"	e	enum:STBVorbisError	file:
VORBIS_packet_comment	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_packet_comment = 3,$/;"	e	enum:__anon214	file:
VORBIS_packet_comment	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_packet_comment = 3,$/;"	e	enum:__anon127	file:
VORBIS_packet_id	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_packet_id = 1,$/;"	e	enum:__anon214	file:
VORBIS_packet_id	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_packet_id = 1,$/;"	e	enum:__anon127	file:
VORBIS_packet_setup	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_packet_setup = 5$/;"	e	enum:__anon214	file:
VORBIS_packet_setup	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_packet_setup = 5$/;"	e	enum:__anon127	file:
VORBIS_seek_failed	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_seek_failed$/;"	e	enum:STBVorbisError	file:
VORBIS_seek_failed	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_seek_failed$/;"	e	enum:STBVorbisError	file:
VORBIS_seek_invalid	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_seek_invalid,                 \/\/ seek past EOF$/;"	e	enum:STBVorbisError	file:
VORBIS_seek_invalid	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_seek_invalid,                 \/\/ seek past EOF$/;"	e	enum:STBVorbisError	file:
VORBIS_seek_without_length	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_seek_without_length,          \/\/ can't seek in unknown-length file$/;"	e	enum:STBVorbisError	file:
VORBIS_seek_without_length	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_seek_without_length,          \/\/ can't seek in unknown-length file$/;"	e	enum:STBVorbisError	file:
VORBIS_too_many_channels	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_too_many_channels,            \/\/ STB_VORBIS_MAX_CHANNELS is too small$/;"	e	enum:STBVorbisError	file:
VORBIS_too_many_channels	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_too_many_channels,            \/\/ STB_VORBIS_MAX_CHANNELS is too small$/;"	e	enum:STBVorbisError	file:
VORBIS_unexpected_eof	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   VORBIS_unexpected_eof=10,            \/\/ file is truncated?$/;"	e	enum:STBVorbisError	file:
VORBIS_unexpected_eof	thirdparty/stb/include/stb/stb_vorbis.c	/^   VORBIS_unexpected_eof=10,            \/\/ file is truncated?$/;"	e	enum:STBVorbisError	file:
VSliderFloat	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::VSliderFloat(const char* label, const ImVec2& size, float* v, float v_min, float v_max, const char* display_format, float power)$/;"	f	class:ImGui
VSliderInt	thirdparty/imgui/src/imgui.cpp	/^bool ImGui::VSliderInt(const char* label, const ImVec2& size, int* v, int v_min, int v_max, const char* display_format)$/;"	f	class:ImGui
VULKAN_H_	thirdparty/glfw/src/deps/vulkan/vulkan.h	2;"	d
V_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule V_rules[] =$/;"	v	file:
Valid	thirdparty/imgui/include/imgui/imgui.h	/^    bool            Valid;                  \/\/ Only valid after Render() is called and before the next NewFrame() is called.$/;"	m	struct:ImDrawData
Value	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec4              Value;$/;"	m	struct:ImColor
Value	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Value(const char* prefix, bool b)$/;"	f	class:ImGui
Value	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Value(const char* prefix, float v, const char* float_format)$/;"	f	class:ImGui
Value	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Value(const char* prefix, int v)$/;"	f	class:ImGui
Value	thirdparty/imgui/src/imgui.cpp	/^void ImGui::Value(const char* prefix, unsigned int v)$/;"	f	class:ImGui
ValueColor	thirdparty/imgui/src/imgui.cpp	/^void ImGui::ValueColor(const char* prefix, ImU32 v)$/;"	f	class:ImGui
ValueColor	thirdparty/imgui/src/imgui.cpp	/^void ImGui::ValueColor(const char* prefix, const ImVec4& v)$/;"	f	class:ImGui
Values	thirdparty/imgui/src/imgui.cpp	/^    const float* Values;$/;"	m	struct:ImGuiPlotArrayGetterData	file:
VarIdx	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiStyleVar   VarIdx;$/;"	m	struct:ImGuiStyleMod
Vbp	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	int Vbp; \/\/ bandpass$/;"	m	class:SIDsound
Vbp	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	int Vbp; \/\/ bandpass$/;"	m	class:SIDsound
Vector3	lib/roa/src/interface/vector3.cpp	/^Vector3::Vector3()$/;"	f	class:ROA::Vector3
Vector3	lib/roa/src/interface/vector3.cpp	/^Vector3::Vector3(const float *data)$/;"	f	class:ROA::Vector3
Vector3	lib/roa/src/interface/vector3.cpp	/^Vector3::Vector3(const float x, const float y, const float z)$/;"	f	class:ROA::Vector3
VertSubActive	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static bool VertSubActive;$/;"	v	file:
VertSubCount	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static unsigned int		VertSubCount;$/;"	v	file:
Vhp	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	int Vhp; \/\/ highpass$/;"	m	class:SIDsound
Vhp	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	int Vhp; \/\/ highpass$/;"	m	class:SIDsound
Vibration	thirdparty/glfw/src/deps/mingw/xinput.h	/^    XINPUT_VIBRATION Vibration;$/;"	m	struct:_XINPUT_CAPABILITIES
Vic	thirdparty/soloud/include/soloud/soloud_vic.h	/^	class Vic : public AudioSource$/;"	c	namespace:SoLoud
Vic	thirdparty/soloud/src/audiosource/vic/soloud_vic.cpp	/^	Vic::Vic()$/;"	f	class:SoLoud::Vic
VicInstance	thirdparty/soloud/include/soloud/soloud_vic.h	/^	class VicInstance : public AudioSourceInstance$/;"	c	namespace:SoLoud
VicInstance	thirdparty/soloud/src/audiosource/vic/soloud_vic.cpp	/^	VicInstance::VicInstance(Vic *aParent)$/;"	f	class:SoLoud::VicInstance
VideoBase	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static unsigned char	*VideoBase;$/;"	v	file:
VirtualKey	thirdparty/glfw/src/deps/mingw/xinput.h	/^    WORD VirtualKey;$/;"	m	struct:_XINPUT_KEYSTROKE
VirtualMirrorBuffer	thirdparty/remotery/src/Remotery.c	/^typedef struct VirtualMirrorBuffer$/;"	s	file:
VirtualMirrorBuffer	thirdparty/remotery/src/Remotery.c	/^} VirtualMirrorBuffer;$/;"	t	typeref:struct:VirtualMirrorBuffer	file:
VirtualMirrorBuffer_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError VirtualMirrorBuffer_Constructor(VirtualMirrorBuffer* buffer, rmtU32 size, int nb_attempts)$/;"	f	file:
VirtualMirrorBuffer_Destructor	thirdparty/remotery/src/Remotery.c	/^static void VirtualMirrorBuffer_Destructor(VirtualMirrorBuffer* buffer)$/;"	f	file:
VitaData	thirdparty/soloud/src/backend/vita_homebrew/soloud_vita_homebrew.cpp	/^	struct VitaData {$/;"	s	namespace:SoLoud	file:
VkAccessFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkAccessFlagBits {$/;"	g
VkAccessFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkAccessFlagBits;$/;"	t	typeref:enum:VkAccessFlagBits
VkAccessFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkAccessFlags;$/;"	t
VkAllocationCallbacks	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkAllocationCallbacks {$/;"	s
VkAllocationCallbacks	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkAllocationCallbacks;$/;"	t	typeref:struct:VkAllocationCallbacks
VkAllocationCallbacks	thirdparty/glfw/src/internal.h	/^typedef struct VkAllocationCallbacks VkAllocationCallbacks;$/;"	t	typeref:struct:VkAllocationCallbacks
VkAndroidSurfaceCreateFlagsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkAndroidSurfaceCreateFlagsKHR;$/;"	t
VkAndroidSurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkAndroidSurfaceCreateInfoKHR {$/;"	s
VkAndroidSurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkAndroidSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkAndroidSurfaceCreateInfoKHR
VkApplicationInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkApplicationInfo {$/;"	s
VkApplicationInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkApplicationInfo;$/;"	t	typeref:struct:VkApplicationInfo
VkAttachmentDescription	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkAttachmentDescription {$/;"	s
VkAttachmentDescription	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkAttachmentDescription;$/;"	t	typeref:struct:VkAttachmentDescription
VkAttachmentDescriptionFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkAttachmentDescriptionFlagBits {$/;"	g
VkAttachmentDescriptionFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkAttachmentDescriptionFlagBits;$/;"	t	typeref:enum:VkAttachmentDescriptionFlagBits
VkAttachmentDescriptionFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkAttachmentDescriptionFlags;$/;"	t
VkAttachmentLoadOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkAttachmentLoadOp {$/;"	g
VkAttachmentLoadOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkAttachmentLoadOp;$/;"	t	typeref:enum:VkAttachmentLoadOp
VkAttachmentReference	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkAttachmentReference {$/;"	s
VkAttachmentReference	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkAttachmentReference;$/;"	t	typeref:struct:VkAttachmentReference
VkAttachmentStoreOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkAttachmentStoreOp {$/;"	g
VkAttachmentStoreOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkAttachmentStoreOp;$/;"	t	typeref:enum:VkAttachmentStoreOp
VkBindSparseInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkBindSparseInfo {$/;"	s
VkBindSparseInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkBindSparseInfo;$/;"	t	typeref:struct:VkBindSparseInfo
VkBlendFactor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkBlendFactor {$/;"	g
VkBlendFactor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkBlendFactor;$/;"	t	typeref:enum:VkBlendFactor
VkBlendOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkBlendOp {$/;"	g
VkBlendOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkBlendOp;$/;"	t	typeref:enum:VkBlendOp
VkBool32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef uint32_t VkBool32;$/;"	t
VkBool32	thirdparty/glfw/src/internal.h	/^typedef uint32_t VkBool32;$/;"	t
VkBorderColor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkBorderColor {$/;"	g
VkBorderColor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkBorderColor;$/;"	t	typeref:enum:VkBorderColor
VkBufferCopy	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkBufferCopy {$/;"	s
VkBufferCopy	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkBufferCopy;$/;"	t	typeref:struct:VkBufferCopy
VkBufferCreateFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkBufferCreateFlagBits {$/;"	g
VkBufferCreateFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkBufferCreateFlagBits;$/;"	t	typeref:enum:VkBufferCreateFlagBits
VkBufferCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkBufferCreateFlags;$/;"	t
VkBufferCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkBufferCreateInfo {$/;"	s
VkBufferCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkBufferCreateInfo;$/;"	t	typeref:struct:VkBufferCreateInfo
VkBufferImageCopy	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkBufferImageCopy {$/;"	s
VkBufferImageCopy	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkBufferImageCopy;$/;"	t	typeref:struct:VkBufferImageCopy
VkBufferMemoryBarrier	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkBufferMemoryBarrier {$/;"	s
VkBufferMemoryBarrier	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkBufferMemoryBarrier;$/;"	t	typeref:struct:VkBufferMemoryBarrier
VkBufferUsageFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkBufferUsageFlagBits {$/;"	g
VkBufferUsageFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkBufferUsageFlagBits;$/;"	t	typeref:enum:VkBufferUsageFlagBits
VkBufferUsageFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkBufferUsageFlags;$/;"	t
VkBufferViewCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkBufferViewCreateFlags;$/;"	t
VkBufferViewCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkBufferViewCreateInfo {$/;"	s
VkBufferViewCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkBufferViewCreateInfo;$/;"	t	typeref:struct:VkBufferViewCreateInfo
VkClearAttachment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkClearAttachment {$/;"	s
VkClearAttachment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkClearAttachment;$/;"	t	typeref:struct:VkClearAttachment
VkClearColorValue	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef union VkClearColorValue {$/;"	u
VkClearColorValue	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkClearColorValue;$/;"	t	typeref:union:VkClearColorValue
VkClearDepthStencilValue	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkClearDepthStencilValue {$/;"	s
VkClearDepthStencilValue	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkClearDepthStencilValue;$/;"	t	typeref:struct:VkClearDepthStencilValue
VkClearRect	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkClearRect {$/;"	s
VkClearRect	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkClearRect;$/;"	t	typeref:struct:VkClearRect
VkClearValue	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef union VkClearValue {$/;"	u
VkClearValue	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkClearValue;$/;"	t	typeref:union:VkClearValue
VkCmdProcessCommandsInfoNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkCmdProcessCommandsInfoNVX {$/;"	s
VkCmdProcessCommandsInfoNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCmdProcessCommandsInfoNVX;$/;"	t	typeref:struct:VkCmdProcessCommandsInfoNVX
VkCmdReserveSpaceForCommandsInfoNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkCmdReserveSpaceForCommandsInfoNVX {$/;"	s
VkCmdReserveSpaceForCommandsInfoNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCmdReserveSpaceForCommandsInfoNVX;$/;"	t	typeref:struct:VkCmdReserveSpaceForCommandsInfoNVX
VkColorComponentFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkColorComponentFlagBits {$/;"	g
VkColorComponentFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkColorComponentFlagBits;$/;"	t	typeref:enum:VkColorComponentFlagBits
VkColorComponentFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkColorComponentFlags;$/;"	t
VkColorSpaceKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkColorSpaceKHR {$/;"	g
VkColorSpaceKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkColorSpaceKHR;$/;"	t	typeref:enum:VkColorSpaceKHR
VkCommandBufferAllocateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkCommandBufferAllocateInfo {$/;"	s
VkCommandBufferAllocateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCommandBufferAllocateInfo;$/;"	t	typeref:struct:VkCommandBufferAllocateInfo
VkCommandBufferBeginInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkCommandBufferBeginInfo {$/;"	s
VkCommandBufferBeginInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCommandBufferBeginInfo;$/;"	t	typeref:struct:VkCommandBufferBeginInfo
VkCommandBufferInheritanceInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkCommandBufferInheritanceInfo {$/;"	s
VkCommandBufferInheritanceInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCommandBufferInheritanceInfo;$/;"	t	typeref:struct:VkCommandBufferInheritanceInfo
VkCommandBufferLevel	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkCommandBufferLevel {$/;"	g
VkCommandBufferLevel	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCommandBufferLevel;$/;"	t	typeref:enum:VkCommandBufferLevel
VkCommandBufferResetFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkCommandBufferResetFlagBits {$/;"	g
VkCommandBufferResetFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCommandBufferResetFlagBits;$/;"	t	typeref:enum:VkCommandBufferResetFlagBits
VkCommandBufferResetFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkCommandBufferResetFlags;$/;"	t
VkCommandBufferUsageFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkCommandBufferUsageFlagBits {$/;"	g
VkCommandBufferUsageFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCommandBufferUsageFlagBits;$/;"	t	typeref:enum:VkCommandBufferUsageFlagBits
VkCommandBufferUsageFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkCommandBufferUsageFlags;$/;"	t
VkCommandPoolCreateFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkCommandPoolCreateFlagBits {$/;"	g
VkCommandPoolCreateFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCommandPoolCreateFlagBits;$/;"	t	typeref:enum:VkCommandPoolCreateFlagBits
VkCommandPoolCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkCommandPoolCreateFlags;$/;"	t
VkCommandPoolCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkCommandPoolCreateInfo {$/;"	s
VkCommandPoolCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCommandPoolCreateInfo;$/;"	t	typeref:struct:VkCommandPoolCreateInfo
VkCommandPoolResetFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkCommandPoolResetFlagBits {$/;"	g
VkCommandPoolResetFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCommandPoolResetFlagBits;$/;"	t	typeref:enum:VkCommandPoolResetFlagBits
VkCommandPoolResetFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkCommandPoolResetFlags;$/;"	t
VkCommandPoolTrimFlagsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkCommandPoolTrimFlagsKHR;$/;"	t
VkCompareOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkCompareOp {$/;"	g
VkCompareOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCompareOp;$/;"	t	typeref:enum:VkCompareOp
VkComponentMapping	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkComponentMapping {$/;"	s
VkComponentMapping	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkComponentMapping;$/;"	t	typeref:struct:VkComponentMapping
VkComponentSwizzle	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkComponentSwizzle {$/;"	g
VkComponentSwizzle	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkComponentSwizzle;$/;"	t	typeref:enum:VkComponentSwizzle
VkCompositeAlphaFlagBitsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkCompositeAlphaFlagBitsKHR {$/;"	g
VkCompositeAlphaFlagBitsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCompositeAlphaFlagBitsKHR;$/;"	t	typeref:enum:VkCompositeAlphaFlagBitsKHR
VkCompositeAlphaFlagsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkCompositeAlphaFlagsKHR;$/;"	t
VkComputePipelineCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkComputePipelineCreateInfo {$/;"	s
VkComputePipelineCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkComputePipelineCreateInfo;$/;"	t	typeref:struct:VkComputePipelineCreateInfo
VkCopyDescriptorSet	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkCopyDescriptorSet {$/;"	s
VkCopyDescriptorSet	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCopyDescriptorSet;$/;"	t	typeref:struct:VkCopyDescriptorSet
VkCullModeFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkCullModeFlagBits {$/;"	g
VkCullModeFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkCullModeFlagBits;$/;"	t	typeref:enum:VkCullModeFlagBits
VkCullModeFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkCullModeFlags;$/;"	t
VkDebugMarkerMarkerInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDebugMarkerMarkerInfoEXT {$/;"	s
VkDebugMarkerMarkerInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDebugMarkerMarkerInfoEXT;$/;"	t	typeref:struct:VkDebugMarkerMarkerInfoEXT
VkDebugMarkerObjectNameInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDebugMarkerObjectNameInfoEXT {$/;"	s
VkDebugMarkerObjectNameInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDebugMarkerObjectNameInfoEXT;$/;"	t	typeref:struct:VkDebugMarkerObjectNameInfoEXT
VkDebugMarkerObjectTagInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDebugMarkerObjectTagInfoEXT {$/;"	s
VkDebugMarkerObjectTagInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDebugMarkerObjectTagInfoEXT;$/;"	t	typeref:struct:VkDebugMarkerObjectTagInfoEXT
VkDebugReportCallbackCreateInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDebugReportCallbackCreateInfoEXT {$/;"	s
VkDebugReportCallbackCreateInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDebugReportCallbackCreateInfoEXT;$/;"	t	typeref:struct:VkDebugReportCallbackCreateInfoEXT
VkDebugReportErrorEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkDebugReportErrorEXT {$/;"	g
VkDebugReportErrorEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDebugReportErrorEXT;$/;"	t	typeref:enum:VkDebugReportErrorEXT
VkDebugReportFlagBitsEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkDebugReportFlagBitsEXT {$/;"	g
VkDebugReportFlagBitsEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDebugReportFlagBitsEXT;$/;"	t	typeref:enum:VkDebugReportFlagBitsEXT
VkDebugReportFlagsEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkDebugReportFlagsEXT;$/;"	t
VkDebugReportObjectTypeEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkDebugReportObjectTypeEXT {$/;"	g
VkDebugReportObjectTypeEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDebugReportObjectTypeEXT;$/;"	t	typeref:enum:VkDebugReportObjectTypeEXT
VkDedicatedAllocationBufferCreateInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDedicatedAllocationBufferCreateInfoNV {$/;"	s
VkDedicatedAllocationBufferCreateInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDedicatedAllocationBufferCreateInfoNV;$/;"	t	typeref:struct:VkDedicatedAllocationBufferCreateInfoNV
VkDedicatedAllocationImageCreateInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDedicatedAllocationImageCreateInfoNV {$/;"	s
VkDedicatedAllocationImageCreateInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDedicatedAllocationImageCreateInfoNV;$/;"	t	typeref:struct:VkDedicatedAllocationImageCreateInfoNV
VkDedicatedAllocationMemoryAllocateInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDedicatedAllocationMemoryAllocateInfoNV {$/;"	s
VkDedicatedAllocationMemoryAllocateInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDedicatedAllocationMemoryAllocateInfoNV;$/;"	t	typeref:struct:VkDedicatedAllocationMemoryAllocateInfoNV
VkDependencyFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkDependencyFlagBits {$/;"	g
VkDependencyFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDependencyFlagBits;$/;"	t	typeref:enum:VkDependencyFlagBits
VkDependencyFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkDependencyFlags;$/;"	t
VkDescriptorBufferInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDescriptorBufferInfo {$/;"	s
VkDescriptorBufferInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDescriptorBufferInfo;$/;"	t	typeref:struct:VkDescriptorBufferInfo
VkDescriptorImageInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDescriptorImageInfo {$/;"	s
VkDescriptorImageInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDescriptorImageInfo;$/;"	t	typeref:struct:VkDescriptorImageInfo
VkDescriptorPoolCreateFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkDescriptorPoolCreateFlagBits {$/;"	g
VkDescriptorPoolCreateFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDescriptorPoolCreateFlagBits;$/;"	t	typeref:enum:VkDescriptorPoolCreateFlagBits
VkDescriptorPoolCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkDescriptorPoolCreateFlags;$/;"	t
VkDescriptorPoolCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDescriptorPoolCreateInfo {$/;"	s
VkDescriptorPoolCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDescriptorPoolCreateInfo;$/;"	t	typeref:struct:VkDescriptorPoolCreateInfo
VkDescriptorPoolResetFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkDescriptorPoolResetFlags;$/;"	t
VkDescriptorPoolSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDescriptorPoolSize {$/;"	s
VkDescriptorPoolSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDescriptorPoolSize;$/;"	t	typeref:struct:VkDescriptorPoolSize
VkDescriptorSetAllocateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDescriptorSetAllocateInfo {$/;"	s
VkDescriptorSetAllocateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDescriptorSetAllocateInfo;$/;"	t	typeref:struct:VkDescriptorSetAllocateInfo
VkDescriptorSetLayoutBinding	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDescriptorSetLayoutBinding {$/;"	s
VkDescriptorSetLayoutBinding	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDescriptorSetLayoutBinding;$/;"	t	typeref:struct:VkDescriptorSetLayoutBinding
VkDescriptorSetLayoutCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkDescriptorSetLayoutCreateFlags;$/;"	t
VkDescriptorSetLayoutCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDescriptorSetLayoutCreateInfo {$/;"	s
VkDescriptorSetLayoutCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDescriptorSetLayoutCreateInfo;$/;"	t	typeref:struct:VkDescriptorSetLayoutCreateInfo
VkDescriptorType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkDescriptorType {$/;"	g
VkDescriptorType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDescriptorType;$/;"	t	typeref:enum:VkDescriptorType
VkDeviceCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkDeviceCreateFlags;$/;"	t
VkDeviceCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDeviceCreateInfo {$/;"	s
VkDeviceCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDeviceCreateInfo;$/;"	t	typeref:struct:VkDeviceCreateInfo
VkDeviceEventInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDeviceEventInfoEXT {$/;"	s
VkDeviceEventInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDeviceEventInfoEXT;$/;"	t	typeref:struct:VkDeviceEventInfoEXT
VkDeviceEventTypeEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkDeviceEventTypeEXT {$/;"	g
VkDeviceEventTypeEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDeviceEventTypeEXT;$/;"	t	typeref:enum:VkDeviceEventTypeEXT
VkDeviceGeneratedCommandsFeaturesNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDeviceGeneratedCommandsFeaturesNVX {$/;"	s
VkDeviceGeneratedCommandsFeaturesNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDeviceGeneratedCommandsFeaturesNVX;$/;"	t	typeref:struct:VkDeviceGeneratedCommandsFeaturesNVX
VkDeviceGeneratedCommandsLimitsNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDeviceGeneratedCommandsLimitsNVX {$/;"	s
VkDeviceGeneratedCommandsLimitsNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDeviceGeneratedCommandsLimitsNVX;$/;"	t	typeref:struct:VkDeviceGeneratedCommandsLimitsNVX
VkDeviceQueueCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkDeviceQueueCreateFlags;$/;"	t
VkDeviceQueueCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDeviceQueueCreateInfo {$/;"	s
VkDeviceQueueCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDeviceQueueCreateInfo;$/;"	t	typeref:struct:VkDeviceQueueCreateInfo
VkDeviceSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef uint64_t VkDeviceSize;$/;"	t
VkDispatchIndirectCommand	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDispatchIndirectCommand {$/;"	s
VkDispatchIndirectCommand	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDispatchIndirectCommand;$/;"	t	typeref:struct:VkDispatchIndirectCommand
VkDisplayEventInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDisplayEventInfoEXT {$/;"	s
VkDisplayEventInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDisplayEventInfoEXT;$/;"	t	typeref:struct:VkDisplayEventInfoEXT
VkDisplayEventTypeEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkDisplayEventTypeEXT {$/;"	g
VkDisplayEventTypeEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDisplayEventTypeEXT;$/;"	t	typeref:enum:VkDisplayEventTypeEXT
VkDisplayModeCreateFlagsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkDisplayModeCreateFlagsKHR;$/;"	t
VkDisplayModeCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDisplayModeCreateInfoKHR {$/;"	s
VkDisplayModeCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDisplayModeCreateInfoKHR;$/;"	t	typeref:struct:VkDisplayModeCreateInfoKHR
VkDisplayModeParametersKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDisplayModeParametersKHR {$/;"	s
VkDisplayModeParametersKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDisplayModeParametersKHR;$/;"	t	typeref:struct:VkDisplayModeParametersKHR
VkDisplayModePropertiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDisplayModePropertiesKHR {$/;"	s
VkDisplayModePropertiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDisplayModePropertiesKHR;$/;"	t	typeref:struct:VkDisplayModePropertiesKHR
VkDisplayPlaneAlphaFlagBitsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkDisplayPlaneAlphaFlagBitsKHR {$/;"	g
VkDisplayPlaneAlphaFlagBitsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDisplayPlaneAlphaFlagBitsKHR;$/;"	t	typeref:enum:VkDisplayPlaneAlphaFlagBitsKHR
VkDisplayPlaneAlphaFlagsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkDisplayPlaneAlphaFlagsKHR;$/;"	t
VkDisplayPlaneCapabilitiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDisplayPlaneCapabilitiesKHR {$/;"	s
VkDisplayPlaneCapabilitiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDisplayPlaneCapabilitiesKHR;$/;"	t	typeref:struct:VkDisplayPlaneCapabilitiesKHR
VkDisplayPlanePropertiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDisplayPlanePropertiesKHR {$/;"	s
VkDisplayPlanePropertiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDisplayPlanePropertiesKHR;$/;"	t	typeref:struct:VkDisplayPlanePropertiesKHR
VkDisplayPowerInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDisplayPowerInfoEXT {$/;"	s
VkDisplayPowerInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDisplayPowerInfoEXT;$/;"	t	typeref:struct:VkDisplayPowerInfoEXT
VkDisplayPowerStateEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkDisplayPowerStateEXT {$/;"	g
VkDisplayPowerStateEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDisplayPowerStateEXT;$/;"	t	typeref:enum:VkDisplayPowerStateEXT
VkDisplayPresentInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDisplayPresentInfoKHR {$/;"	s
VkDisplayPresentInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDisplayPresentInfoKHR;$/;"	t	typeref:struct:VkDisplayPresentInfoKHR
VkDisplayPropertiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDisplayPropertiesKHR {$/;"	s
VkDisplayPropertiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDisplayPropertiesKHR;$/;"	t	typeref:struct:VkDisplayPropertiesKHR
VkDisplaySurfaceCreateFlagsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkDisplaySurfaceCreateFlagsKHR;$/;"	t
VkDisplaySurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDisplaySurfaceCreateInfoKHR {$/;"	s
VkDisplaySurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDisplaySurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkDisplaySurfaceCreateInfoKHR
VkDrawIndexedIndirectCommand	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDrawIndexedIndirectCommand {$/;"	s
VkDrawIndexedIndirectCommand	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDrawIndexedIndirectCommand;$/;"	t	typeref:struct:VkDrawIndexedIndirectCommand
VkDrawIndirectCommand	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkDrawIndirectCommand {$/;"	s
VkDrawIndirectCommand	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDrawIndirectCommand;$/;"	t	typeref:struct:VkDrawIndirectCommand
VkDynamicState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkDynamicState {$/;"	g
VkDynamicState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkDynamicState;$/;"	t	typeref:enum:VkDynamicState
VkEventCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkEventCreateFlags;$/;"	t
VkEventCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkEventCreateInfo {$/;"	s
VkEventCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkEventCreateInfo;$/;"	t	typeref:struct:VkEventCreateInfo
VkExportMemoryAllocateInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkExportMemoryAllocateInfoNV {$/;"	s
VkExportMemoryAllocateInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkExportMemoryAllocateInfoNV;$/;"	t	typeref:struct:VkExportMemoryAllocateInfoNV
VkExportMemoryWin32HandleInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkExportMemoryWin32HandleInfoNV {$/;"	s
VkExportMemoryWin32HandleInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkExportMemoryWin32HandleInfoNV;$/;"	t	typeref:struct:VkExportMemoryWin32HandleInfoNV
VkExtensionProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkExtensionProperties {$/;"	s
VkExtensionProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkExtensionProperties;$/;"	t	typeref:struct:VkExtensionProperties
VkExtensionProperties	thirdparty/glfw/src/internal.h	/^typedef struct VkExtensionProperties$/;"	s
VkExtensionProperties	thirdparty/glfw/src/internal.h	/^} VkExtensionProperties;$/;"	t	typeref:struct:VkExtensionProperties
VkExtent2D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkExtent2D {$/;"	s
VkExtent2D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkExtent2D;$/;"	t	typeref:struct:VkExtent2D
VkExtent3D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkExtent3D {$/;"	s
VkExtent3D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkExtent3D;$/;"	t	typeref:struct:VkExtent3D
VkExternalImageFormatPropertiesNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkExternalImageFormatPropertiesNV {$/;"	s
VkExternalImageFormatPropertiesNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkExternalImageFormatPropertiesNV;$/;"	t	typeref:struct:VkExternalImageFormatPropertiesNV
VkExternalMemoryFeatureFlagBitsNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkExternalMemoryFeatureFlagBitsNV {$/;"	g
VkExternalMemoryFeatureFlagBitsNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkExternalMemoryFeatureFlagBitsNV;$/;"	t	typeref:enum:VkExternalMemoryFeatureFlagBitsNV
VkExternalMemoryFeatureFlagsNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkExternalMemoryFeatureFlagsNV;$/;"	t
VkExternalMemoryHandleTypeFlagBitsNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkExternalMemoryHandleTypeFlagBitsNV {$/;"	g
VkExternalMemoryHandleTypeFlagBitsNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkExternalMemoryHandleTypeFlagBitsNV;$/;"	t	typeref:enum:VkExternalMemoryHandleTypeFlagBitsNV
VkExternalMemoryHandleTypeFlagsNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkExternalMemoryHandleTypeFlagsNV;$/;"	t
VkExternalMemoryImageCreateInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkExternalMemoryImageCreateInfoNV {$/;"	s
VkExternalMemoryImageCreateInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkExternalMemoryImageCreateInfoNV;$/;"	t	typeref:struct:VkExternalMemoryImageCreateInfoNV
VkFenceCreateFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkFenceCreateFlagBits {$/;"	g
VkFenceCreateFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkFenceCreateFlagBits;$/;"	t	typeref:enum:VkFenceCreateFlagBits
VkFenceCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkFenceCreateFlags;$/;"	t
VkFenceCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkFenceCreateInfo {$/;"	s
VkFenceCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkFenceCreateInfo;$/;"	t	typeref:struct:VkFenceCreateInfo
VkFilter	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkFilter {$/;"	g
VkFilter	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkFilter;$/;"	t	typeref:enum:VkFilter
VkFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef uint32_t VkFlags;$/;"	t
VkFlags	thirdparty/glfw/src/internal.h	/^typedef uint32_t VkFlags;$/;"	t
VkFormat	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkFormat {$/;"	g
VkFormat	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkFormat;$/;"	t	typeref:enum:VkFormat
VkFormatFeatureFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkFormatFeatureFlagBits {$/;"	g
VkFormatFeatureFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkFormatFeatureFlagBits;$/;"	t	typeref:enum:VkFormatFeatureFlagBits
VkFormatFeatureFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkFormatFeatureFlags;$/;"	t
VkFormatProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkFormatProperties {$/;"	s
VkFormatProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkFormatProperties;$/;"	t	typeref:struct:VkFormatProperties
VkFormatProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkFormatProperties2KHR {$/;"	s
VkFormatProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkFormatProperties2KHR;$/;"	t	typeref:struct:VkFormatProperties2KHR
VkFramebufferCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkFramebufferCreateFlags;$/;"	t
VkFramebufferCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkFramebufferCreateInfo {$/;"	s
VkFramebufferCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkFramebufferCreateInfo;$/;"	t	typeref:struct:VkFramebufferCreateInfo
VkFrontFace	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkFrontFace {$/;"	g
VkFrontFace	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkFrontFace;$/;"	t	typeref:enum:VkFrontFace
VkGraphicsPipelineCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkGraphicsPipelineCreateInfo {$/;"	s
VkGraphicsPipelineCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkGraphicsPipelineCreateInfo;$/;"	t	typeref:struct:VkGraphicsPipelineCreateInfo
VkImageAspectFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkImageAspectFlagBits {$/;"	g
VkImageAspectFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageAspectFlagBits;$/;"	t	typeref:enum:VkImageAspectFlagBits
VkImageAspectFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkImageAspectFlags;$/;"	t
VkImageBlit	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkImageBlit {$/;"	s
VkImageBlit	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageBlit;$/;"	t	typeref:struct:VkImageBlit
VkImageCopy	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkImageCopy {$/;"	s
VkImageCopy	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageCopy;$/;"	t	typeref:struct:VkImageCopy
VkImageCreateFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkImageCreateFlagBits {$/;"	g
VkImageCreateFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageCreateFlagBits;$/;"	t	typeref:enum:VkImageCreateFlagBits
VkImageCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkImageCreateFlags;$/;"	t
VkImageCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkImageCreateInfo {$/;"	s
VkImageCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageCreateInfo;$/;"	t	typeref:struct:VkImageCreateInfo
VkImageFormatProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkImageFormatProperties {$/;"	s
VkImageFormatProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageFormatProperties;$/;"	t	typeref:struct:VkImageFormatProperties
VkImageFormatProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkImageFormatProperties2KHR {$/;"	s
VkImageFormatProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageFormatProperties2KHR;$/;"	t	typeref:struct:VkImageFormatProperties2KHR
VkImageLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkImageLayout {$/;"	g
VkImageLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageLayout;$/;"	t	typeref:enum:VkImageLayout
VkImageMemoryBarrier	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkImageMemoryBarrier {$/;"	s
VkImageMemoryBarrier	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageMemoryBarrier;$/;"	t	typeref:struct:VkImageMemoryBarrier
VkImageResolve	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkImageResolve {$/;"	s
VkImageResolve	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageResolve;$/;"	t	typeref:struct:VkImageResolve
VkImageSubresource	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkImageSubresource {$/;"	s
VkImageSubresource	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageSubresource;$/;"	t	typeref:struct:VkImageSubresource
VkImageSubresourceLayers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkImageSubresourceLayers {$/;"	s
VkImageSubresourceLayers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageSubresourceLayers;$/;"	t	typeref:struct:VkImageSubresourceLayers
VkImageSubresourceRange	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkImageSubresourceRange {$/;"	s
VkImageSubresourceRange	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageSubresourceRange;$/;"	t	typeref:struct:VkImageSubresourceRange
VkImageTiling	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkImageTiling {$/;"	g
VkImageTiling	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageTiling;$/;"	t	typeref:enum:VkImageTiling
VkImageType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkImageType {$/;"	g
VkImageType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageType;$/;"	t	typeref:enum:VkImageType
VkImageUsageFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkImageUsageFlagBits {$/;"	g
VkImageUsageFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageUsageFlagBits;$/;"	t	typeref:enum:VkImageUsageFlagBits
VkImageUsageFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkImageUsageFlags;$/;"	t
VkImageViewCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkImageViewCreateFlags;$/;"	t
VkImageViewCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkImageViewCreateInfo {$/;"	s
VkImageViewCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageViewCreateInfo;$/;"	t	typeref:struct:VkImageViewCreateInfo
VkImageViewType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkImageViewType {$/;"	g
VkImageViewType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImageViewType;$/;"	t	typeref:enum:VkImageViewType
VkImportMemoryWin32HandleInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkImportMemoryWin32HandleInfoNV {$/;"	s
VkImportMemoryWin32HandleInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkImportMemoryWin32HandleInfoNV;$/;"	t	typeref:struct:VkImportMemoryWin32HandleInfoNV
VkIndexType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkIndexType {$/;"	g
VkIndexType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkIndexType;$/;"	t	typeref:enum:VkIndexType
VkIndirectCommandsLayoutCreateInfoNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkIndirectCommandsLayoutCreateInfoNVX {$/;"	s
VkIndirectCommandsLayoutCreateInfoNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkIndirectCommandsLayoutCreateInfoNVX;$/;"	t	typeref:struct:VkIndirectCommandsLayoutCreateInfoNVX
VkIndirectCommandsLayoutTokenNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkIndirectCommandsLayoutTokenNVX {$/;"	s
VkIndirectCommandsLayoutTokenNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkIndirectCommandsLayoutTokenNVX;$/;"	t	typeref:struct:VkIndirectCommandsLayoutTokenNVX
VkIndirectCommandsLayoutUsageFlagBitsNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkIndirectCommandsLayoutUsageFlagBitsNVX {$/;"	g
VkIndirectCommandsLayoutUsageFlagBitsNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkIndirectCommandsLayoutUsageFlagBitsNVX;$/;"	t	typeref:enum:VkIndirectCommandsLayoutUsageFlagBitsNVX
VkIndirectCommandsLayoutUsageFlagsNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkIndirectCommandsLayoutUsageFlagsNVX;$/;"	t
VkIndirectCommandsTokenNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkIndirectCommandsTokenNVX {$/;"	s
VkIndirectCommandsTokenNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkIndirectCommandsTokenNVX;$/;"	t	typeref:struct:VkIndirectCommandsTokenNVX
VkIndirectCommandsTokenTypeNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkIndirectCommandsTokenTypeNVX {$/;"	g
VkIndirectCommandsTokenTypeNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkIndirectCommandsTokenTypeNVX;$/;"	t	typeref:enum:VkIndirectCommandsTokenTypeNVX
VkInstance	thirdparty/glfw/src/internal.h	/^typedef void* VkInstance;$/;"	t
VkInstanceCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkInstanceCreateFlags;$/;"	t
VkInstanceCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkInstanceCreateInfo {$/;"	s
VkInstanceCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkInstanceCreateInfo;$/;"	t	typeref:struct:VkInstanceCreateInfo
VkInternalAllocationType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkInternalAllocationType {$/;"	g
VkInternalAllocationType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkInternalAllocationType;$/;"	t	typeref:enum:VkInternalAllocationType
VkLayerProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkLayerProperties {$/;"	s
VkLayerProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkLayerProperties;$/;"	t	typeref:struct:VkLayerProperties
VkLogicOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkLogicOp {$/;"	g
VkLogicOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkLogicOp;$/;"	t	typeref:enum:VkLogicOp
VkMacOSSurfaceCreateFlagsMVK	thirdparty/glfw/src/cocoa_platform.h	/^typedef VkFlags VkMacOSSurfaceCreateFlagsMVK;$/;"	t
VkMacOSSurfaceCreateInfoMVK	thirdparty/glfw/src/cocoa_platform.h	/^typedef struct VkMacOSSurfaceCreateInfoMVK$/;"	s
VkMacOSSurfaceCreateInfoMVK	thirdparty/glfw/src/cocoa_platform.h	/^} VkMacOSSurfaceCreateInfoMVK;$/;"	t	typeref:struct:VkMacOSSurfaceCreateInfoMVK
VkMappedMemoryRange	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkMappedMemoryRange {$/;"	s
VkMappedMemoryRange	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkMappedMemoryRange;$/;"	t	typeref:struct:VkMappedMemoryRange
VkMemoryAllocateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkMemoryAllocateInfo {$/;"	s
VkMemoryAllocateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkMemoryAllocateInfo;$/;"	t	typeref:struct:VkMemoryAllocateInfo
VkMemoryBarrier	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkMemoryBarrier {$/;"	s
VkMemoryBarrier	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkMemoryBarrier;$/;"	t	typeref:struct:VkMemoryBarrier
VkMemoryHeap	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkMemoryHeap {$/;"	s
VkMemoryHeap	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkMemoryHeap;$/;"	t	typeref:struct:VkMemoryHeap
VkMemoryHeapFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkMemoryHeapFlagBits {$/;"	g
VkMemoryHeapFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkMemoryHeapFlagBits;$/;"	t	typeref:enum:VkMemoryHeapFlagBits
VkMemoryHeapFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkMemoryHeapFlags;$/;"	t
VkMemoryMapFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkMemoryMapFlags;$/;"	t
VkMemoryPropertyFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkMemoryPropertyFlagBits {$/;"	g
VkMemoryPropertyFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkMemoryPropertyFlagBits;$/;"	t	typeref:enum:VkMemoryPropertyFlagBits
VkMemoryPropertyFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkMemoryPropertyFlags;$/;"	t
VkMemoryRequirements	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkMemoryRequirements {$/;"	s
VkMemoryRequirements	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkMemoryRequirements;$/;"	t	typeref:struct:VkMemoryRequirements
VkMemoryType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkMemoryType {$/;"	s
VkMemoryType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkMemoryType;$/;"	t	typeref:struct:VkMemoryType
VkMirSurfaceCreateFlagsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkMirSurfaceCreateFlagsKHR;$/;"	t
VkMirSurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkMirSurfaceCreateInfoKHR {$/;"	s
VkMirSurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkMirSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkMirSurfaceCreateInfoKHR
VkMirWindowCreateFlagsKHR	thirdparty/glfw/src/mir_platform.h	/^typedef VkFlags VkMirWindowCreateFlagsKHR;$/;"	t
VkMirWindowCreateInfoKHR	thirdparty/glfw/src/mir_platform.h	/^typedef struct VkMirWindowCreateInfoKHR$/;"	s
VkMirWindowCreateInfoKHR	thirdparty/glfw/src/mir_platform.h	/^} VkMirWindowCreateInfoKHR;$/;"	t	typeref:struct:VkMirWindowCreateInfoKHR
VkObjectEntryTypeNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkObjectEntryTypeNVX {$/;"	g
VkObjectEntryTypeNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkObjectEntryTypeNVX;$/;"	t	typeref:enum:VkObjectEntryTypeNVX
VkObjectEntryUsageFlagBitsNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkObjectEntryUsageFlagBitsNVX {$/;"	g
VkObjectEntryUsageFlagBitsNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkObjectEntryUsageFlagBitsNVX;$/;"	t	typeref:enum:VkObjectEntryUsageFlagBitsNVX
VkObjectEntryUsageFlagsNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkObjectEntryUsageFlagsNVX;$/;"	t
VkObjectTableCreateInfoNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkObjectTableCreateInfoNVX {$/;"	s
VkObjectTableCreateInfoNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkObjectTableCreateInfoNVX;$/;"	t	typeref:struct:VkObjectTableCreateInfoNVX
VkObjectTableDescriptorSetEntryNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkObjectTableDescriptorSetEntryNVX {$/;"	s
VkObjectTableDescriptorSetEntryNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkObjectTableDescriptorSetEntryNVX;$/;"	t	typeref:struct:VkObjectTableDescriptorSetEntryNVX
VkObjectTableEntryNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkObjectTableEntryNVX {$/;"	s
VkObjectTableEntryNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkObjectTableEntryNVX;$/;"	t	typeref:struct:VkObjectTableEntryNVX
VkObjectTableIndexBufferEntryNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkObjectTableIndexBufferEntryNVX {$/;"	s
VkObjectTableIndexBufferEntryNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkObjectTableIndexBufferEntryNVX;$/;"	t	typeref:struct:VkObjectTableIndexBufferEntryNVX
VkObjectTablePipelineEntryNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkObjectTablePipelineEntryNVX {$/;"	s
VkObjectTablePipelineEntryNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkObjectTablePipelineEntryNVX;$/;"	t	typeref:struct:VkObjectTablePipelineEntryNVX
VkObjectTablePushConstantEntryNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkObjectTablePushConstantEntryNVX {$/;"	s
VkObjectTablePushConstantEntryNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkObjectTablePushConstantEntryNVX;$/;"	t	typeref:struct:VkObjectTablePushConstantEntryNVX
VkObjectTableVertexBufferEntryNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkObjectTableVertexBufferEntryNVX {$/;"	s
VkObjectTableVertexBufferEntryNVX	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkObjectTableVertexBufferEntryNVX;$/;"	t	typeref:struct:VkObjectTableVertexBufferEntryNVX
VkOffset2D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkOffset2D {$/;"	s
VkOffset2D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkOffset2D;$/;"	t	typeref:struct:VkOffset2D
VkOffset3D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkOffset3D {$/;"	s
VkOffset3D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkOffset3D;$/;"	t	typeref:struct:VkOffset3D
VkPhysicalDevice	thirdparty/glfw/src/internal.h	/^typedef void* VkPhysicalDevice;$/;"	t
VkPhysicalDeviceFeatures	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceFeatures {$/;"	s
VkPhysicalDeviceFeatures	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPhysicalDeviceFeatures;$/;"	t	typeref:struct:VkPhysicalDeviceFeatures
VkPhysicalDeviceFeatures2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceFeatures2KHR {$/;"	s
VkPhysicalDeviceFeatures2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPhysicalDeviceFeatures2KHR;$/;"	t	typeref:struct:VkPhysicalDeviceFeatures2KHR
VkPhysicalDeviceImageFormatInfo2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceImageFormatInfo2KHR {$/;"	s
VkPhysicalDeviceImageFormatInfo2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPhysicalDeviceImageFormatInfo2KHR;$/;"	t	typeref:struct:VkPhysicalDeviceImageFormatInfo2KHR
VkPhysicalDeviceLimits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceLimits {$/;"	s
VkPhysicalDeviceLimits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPhysicalDeviceLimits;$/;"	t	typeref:struct:VkPhysicalDeviceLimits
VkPhysicalDeviceMemoryProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceMemoryProperties {$/;"	s
VkPhysicalDeviceMemoryProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPhysicalDeviceMemoryProperties;$/;"	t	typeref:struct:VkPhysicalDeviceMemoryProperties
VkPhysicalDeviceMemoryProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceMemoryProperties2KHR {$/;"	s
VkPhysicalDeviceMemoryProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPhysicalDeviceMemoryProperties2KHR;$/;"	t	typeref:struct:VkPhysicalDeviceMemoryProperties2KHR
VkPhysicalDeviceProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceProperties {$/;"	s
VkPhysicalDeviceProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPhysicalDeviceProperties;$/;"	t	typeref:struct:VkPhysicalDeviceProperties
VkPhysicalDeviceProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceProperties2KHR {$/;"	s
VkPhysicalDeviceProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPhysicalDeviceProperties2KHR;$/;"	t	typeref:struct:VkPhysicalDeviceProperties2KHR
VkPhysicalDeviceSparseImageFormatInfo2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceSparseImageFormatInfo2KHR {$/;"	s
VkPhysicalDeviceSparseImageFormatInfo2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPhysicalDeviceSparseImageFormatInfo2KHR;$/;"	t	typeref:struct:VkPhysicalDeviceSparseImageFormatInfo2KHR
VkPhysicalDeviceSparseProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceSparseProperties {$/;"	s
VkPhysicalDeviceSparseProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPhysicalDeviceSparseProperties;$/;"	t	typeref:struct:VkPhysicalDeviceSparseProperties
VkPhysicalDeviceType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkPhysicalDeviceType {$/;"	g
VkPhysicalDeviceType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPhysicalDeviceType;$/;"	t	typeref:enum:VkPhysicalDeviceType
VkPipelineBindPoint	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkPipelineBindPoint {$/;"	g
VkPipelineBindPoint	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineBindPoint;$/;"	t	typeref:enum:VkPipelineBindPoint
VkPipelineCacheCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineCacheCreateFlags;$/;"	t
VkPipelineCacheCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineCacheCreateInfo {$/;"	s
VkPipelineCacheCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineCacheCreateInfo;$/;"	t	typeref:struct:VkPipelineCacheCreateInfo
VkPipelineCacheHeaderVersion	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkPipelineCacheHeaderVersion {$/;"	g
VkPipelineCacheHeaderVersion	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineCacheHeaderVersion;$/;"	t	typeref:enum:VkPipelineCacheHeaderVersion
VkPipelineColorBlendAttachmentState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineColorBlendAttachmentState {$/;"	s
VkPipelineColorBlendAttachmentState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineColorBlendAttachmentState;$/;"	t	typeref:struct:VkPipelineColorBlendAttachmentState
VkPipelineColorBlendStateCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineColorBlendStateCreateFlags;$/;"	t
VkPipelineColorBlendStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineColorBlendStateCreateInfo {$/;"	s
VkPipelineColorBlendStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineColorBlendStateCreateInfo;$/;"	t	typeref:struct:VkPipelineColorBlendStateCreateInfo
VkPipelineCreateFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkPipelineCreateFlagBits {$/;"	g
VkPipelineCreateFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineCreateFlagBits;$/;"	t	typeref:enum:VkPipelineCreateFlagBits
VkPipelineCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineCreateFlags;$/;"	t
VkPipelineDepthStencilStateCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineDepthStencilStateCreateFlags;$/;"	t
VkPipelineDepthStencilStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineDepthStencilStateCreateInfo {$/;"	s
VkPipelineDepthStencilStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineDepthStencilStateCreateInfo;$/;"	t	typeref:struct:VkPipelineDepthStencilStateCreateInfo
VkPipelineDynamicStateCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineDynamicStateCreateFlags;$/;"	t
VkPipelineDynamicStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineDynamicStateCreateInfo {$/;"	s
VkPipelineDynamicStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineDynamicStateCreateInfo;$/;"	t	typeref:struct:VkPipelineDynamicStateCreateInfo
VkPipelineInputAssemblyStateCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineInputAssemblyStateCreateFlags;$/;"	t
VkPipelineInputAssemblyStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineInputAssemblyStateCreateInfo {$/;"	s
VkPipelineInputAssemblyStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineInputAssemblyStateCreateInfo;$/;"	t	typeref:struct:VkPipelineInputAssemblyStateCreateInfo
VkPipelineLayoutCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineLayoutCreateFlags;$/;"	t
VkPipelineLayoutCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineLayoutCreateInfo {$/;"	s
VkPipelineLayoutCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineLayoutCreateInfo;$/;"	t	typeref:struct:VkPipelineLayoutCreateInfo
VkPipelineMultisampleStateCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineMultisampleStateCreateFlags;$/;"	t
VkPipelineMultisampleStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineMultisampleStateCreateInfo {$/;"	s
VkPipelineMultisampleStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineMultisampleStateCreateInfo;$/;"	t	typeref:struct:VkPipelineMultisampleStateCreateInfo
VkPipelineRasterizationStateCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineRasterizationStateCreateFlags;$/;"	t
VkPipelineRasterizationStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineRasterizationStateCreateInfo {$/;"	s
VkPipelineRasterizationStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineRasterizationStateCreateInfo;$/;"	t	typeref:struct:VkPipelineRasterizationStateCreateInfo
VkPipelineRasterizationStateRasterizationOrderAMD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineRasterizationStateRasterizationOrderAMD {$/;"	s
VkPipelineRasterizationStateRasterizationOrderAMD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineRasterizationStateRasterizationOrderAMD;$/;"	t	typeref:struct:VkPipelineRasterizationStateRasterizationOrderAMD
VkPipelineShaderStageCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineShaderStageCreateFlags;$/;"	t
VkPipelineShaderStageCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineShaderStageCreateInfo {$/;"	s
VkPipelineShaderStageCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineShaderStageCreateInfo;$/;"	t	typeref:struct:VkPipelineShaderStageCreateInfo
VkPipelineStageFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkPipelineStageFlagBits {$/;"	g
VkPipelineStageFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineStageFlagBits;$/;"	t	typeref:enum:VkPipelineStageFlagBits
VkPipelineStageFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineStageFlags;$/;"	t
VkPipelineTessellationStateCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineTessellationStateCreateFlags;$/;"	t
VkPipelineTessellationStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineTessellationStateCreateInfo {$/;"	s
VkPipelineTessellationStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineTessellationStateCreateInfo;$/;"	t	typeref:struct:VkPipelineTessellationStateCreateInfo
VkPipelineVertexInputStateCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineVertexInputStateCreateFlags;$/;"	t
VkPipelineVertexInputStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineVertexInputStateCreateInfo {$/;"	s
VkPipelineVertexInputStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineVertexInputStateCreateInfo;$/;"	t	typeref:struct:VkPipelineVertexInputStateCreateInfo
VkPipelineViewportStateCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkPipelineViewportStateCreateFlags;$/;"	t
VkPipelineViewportStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPipelineViewportStateCreateInfo {$/;"	s
VkPipelineViewportStateCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPipelineViewportStateCreateInfo;$/;"	t	typeref:struct:VkPipelineViewportStateCreateInfo
VkPolygonMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkPolygonMode {$/;"	g
VkPolygonMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPolygonMode;$/;"	t	typeref:enum:VkPolygonMode
VkPresentInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPresentInfoKHR {$/;"	s
VkPresentInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPresentInfoKHR;$/;"	t	typeref:struct:VkPresentInfoKHR
VkPresentModeKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkPresentModeKHR {$/;"	g
VkPresentModeKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPresentModeKHR;$/;"	t	typeref:enum:VkPresentModeKHR
VkPrimitiveTopology	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkPrimitiveTopology {$/;"	g
VkPrimitiveTopology	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPrimitiveTopology;$/;"	t	typeref:enum:VkPrimitiveTopology
VkPushConstantRange	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkPushConstantRange {$/;"	s
VkPushConstantRange	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkPushConstantRange;$/;"	t	typeref:struct:VkPushConstantRange
VkQueryControlFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkQueryControlFlagBits {$/;"	g
VkQueryControlFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkQueryControlFlagBits;$/;"	t	typeref:enum:VkQueryControlFlagBits
VkQueryControlFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkQueryControlFlags;$/;"	t
VkQueryPipelineStatisticFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkQueryPipelineStatisticFlagBits {$/;"	g
VkQueryPipelineStatisticFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkQueryPipelineStatisticFlagBits;$/;"	t	typeref:enum:VkQueryPipelineStatisticFlagBits
VkQueryPipelineStatisticFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkQueryPipelineStatisticFlags;$/;"	t
VkQueryPoolCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkQueryPoolCreateFlags;$/;"	t
VkQueryPoolCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkQueryPoolCreateInfo {$/;"	s
VkQueryPoolCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkQueryPoolCreateInfo;$/;"	t	typeref:struct:VkQueryPoolCreateInfo
VkQueryResultFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkQueryResultFlagBits {$/;"	g
VkQueryResultFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkQueryResultFlagBits;$/;"	t	typeref:enum:VkQueryResultFlagBits
VkQueryResultFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkQueryResultFlags;$/;"	t
VkQueryType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkQueryType {$/;"	g
VkQueryType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkQueryType;$/;"	t	typeref:enum:VkQueryType
VkQueueFamilyProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkQueueFamilyProperties {$/;"	s
VkQueueFamilyProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkQueueFamilyProperties;$/;"	t	typeref:struct:VkQueueFamilyProperties
VkQueueFamilyProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkQueueFamilyProperties2KHR {$/;"	s
VkQueueFamilyProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkQueueFamilyProperties2KHR;$/;"	t	typeref:struct:VkQueueFamilyProperties2KHR
VkQueueFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkQueueFlagBits {$/;"	g
VkQueueFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkQueueFlagBits;$/;"	t	typeref:enum:VkQueueFlagBits
VkQueueFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkQueueFlags;$/;"	t
VkRasterizationOrderAMD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkRasterizationOrderAMD {$/;"	g
VkRasterizationOrderAMD	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkRasterizationOrderAMD;$/;"	t	typeref:enum:VkRasterizationOrderAMD
VkRect2D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkRect2D {$/;"	s
VkRect2D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkRect2D;$/;"	t	typeref:struct:VkRect2D
VkRenderPassBeginInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkRenderPassBeginInfo {$/;"	s
VkRenderPassBeginInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkRenderPassBeginInfo;$/;"	t	typeref:struct:VkRenderPassBeginInfo
VkRenderPassCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkRenderPassCreateFlags;$/;"	t
VkRenderPassCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkRenderPassCreateInfo {$/;"	s
VkRenderPassCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkRenderPassCreateInfo;$/;"	t	typeref:struct:VkRenderPassCreateInfo
VkResult	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkResult {$/;"	g
VkResult	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkResult;$/;"	t	typeref:enum:VkResult
VkResult	thirdparty/glfw/src/internal.h	/^typedef enum VkResult$/;"	g
VkResult	thirdparty/glfw/src/internal.h	/^} VkResult;$/;"	t	typeref:enum:VkResult
VkSampleCountFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkSampleCountFlagBits {$/;"	g
VkSampleCountFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSampleCountFlagBits;$/;"	t	typeref:enum:VkSampleCountFlagBits
VkSampleCountFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkSampleCountFlags;$/;"	t
VkSampleMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef uint32_t VkSampleMask;$/;"	t
VkSamplerAddressMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkSamplerAddressMode {$/;"	g
VkSamplerAddressMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSamplerAddressMode;$/;"	t	typeref:enum:VkSamplerAddressMode
VkSamplerCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkSamplerCreateFlags;$/;"	t
VkSamplerCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSamplerCreateInfo {$/;"	s
VkSamplerCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSamplerCreateInfo;$/;"	t	typeref:struct:VkSamplerCreateInfo
VkSamplerMipmapMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkSamplerMipmapMode {$/;"	g
VkSamplerMipmapMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSamplerMipmapMode;$/;"	t	typeref:enum:VkSamplerMipmapMode
VkSemaphoreCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkSemaphoreCreateFlags;$/;"	t
VkSemaphoreCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSemaphoreCreateInfo {$/;"	s
VkSemaphoreCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSemaphoreCreateInfo;$/;"	t	typeref:struct:VkSemaphoreCreateInfo
VkShaderModuleCreateFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkShaderModuleCreateFlags;$/;"	t
VkShaderModuleCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkShaderModuleCreateInfo {$/;"	s
VkShaderModuleCreateInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkShaderModuleCreateInfo;$/;"	t	typeref:struct:VkShaderModuleCreateInfo
VkShaderStageFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkShaderStageFlagBits {$/;"	g
VkShaderStageFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkShaderStageFlagBits;$/;"	t	typeref:enum:VkShaderStageFlagBits
VkShaderStageFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkShaderStageFlags;$/;"	t
VkSharingMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkSharingMode {$/;"	g
VkSharingMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSharingMode;$/;"	t	typeref:enum:VkSharingMode
VkSparseBufferMemoryBindInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSparseBufferMemoryBindInfo {$/;"	s
VkSparseBufferMemoryBindInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSparseBufferMemoryBindInfo;$/;"	t	typeref:struct:VkSparseBufferMemoryBindInfo
VkSparseImageFormatFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkSparseImageFormatFlagBits {$/;"	g
VkSparseImageFormatFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSparseImageFormatFlagBits;$/;"	t	typeref:enum:VkSparseImageFormatFlagBits
VkSparseImageFormatFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkSparseImageFormatFlags;$/;"	t
VkSparseImageFormatProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSparseImageFormatProperties {$/;"	s
VkSparseImageFormatProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSparseImageFormatProperties;$/;"	t	typeref:struct:VkSparseImageFormatProperties
VkSparseImageFormatProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSparseImageFormatProperties2KHR {$/;"	s
VkSparseImageFormatProperties2KHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSparseImageFormatProperties2KHR;$/;"	t	typeref:struct:VkSparseImageFormatProperties2KHR
VkSparseImageMemoryBind	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSparseImageMemoryBind {$/;"	s
VkSparseImageMemoryBind	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSparseImageMemoryBind;$/;"	t	typeref:struct:VkSparseImageMemoryBind
VkSparseImageMemoryBindInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSparseImageMemoryBindInfo {$/;"	s
VkSparseImageMemoryBindInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSparseImageMemoryBindInfo;$/;"	t	typeref:struct:VkSparseImageMemoryBindInfo
VkSparseImageMemoryRequirements	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSparseImageMemoryRequirements {$/;"	s
VkSparseImageMemoryRequirements	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSparseImageMemoryRequirements;$/;"	t	typeref:struct:VkSparseImageMemoryRequirements
VkSparseImageOpaqueMemoryBindInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSparseImageOpaqueMemoryBindInfo {$/;"	s
VkSparseImageOpaqueMemoryBindInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSparseImageOpaqueMemoryBindInfo;$/;"	t	typeref:struct:VkSparseImageOpaqueMemoryBindInfo
VkSparseMemoryBind	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSparseMemoryBind {$/;"	s
VkSparseMemoryBind	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSparseMemoryBind;$/;"	t	typeref:struct:VkSparseMemoryBind
VkSparseMemoryBindFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkSparseMemoryBindFlagBits {$/;"	g
VkSparseMemoryBindFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSparseMemoryBindFlagBits;$/;"	t	typeref:enum:VkSparseMemoryBindFlagBits
VkSparseMemoryBindFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkSparseMemoryBindFlags;$/;"	t
VkSpecializationInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSpecializationInfo {$/;"	s
VkSpecializationInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSpecializationInfo;$/;"	t	typeref:struct:VkSpecializationInfo
VkSpecializationMapEntry	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSpecializationMapEntry {$/;"	s
VkSpecializationMapEntry	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSpecializationMapEntry;$/;"	t	typeref:struct:VkSpecializationMapEntry
VkStencilFaceFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkStencilFaceFlagBits {$/;"	g
VkStencilFaceFlagBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkStencilFaceFlagBits;$/;"	t	typeref:enum:VkStencilFaceFlagBits
VkStencilFaceFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkStencilFaceFlags;$/;"	t
VkStencilOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkStencilOp {$/;"	g
VkStencilOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkStencilOp;$/;"	t	typeref:enum:VkStencilOp
VkStencilOpState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkStencilOpState {$/;"	s
VkStencilOpState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkStencilOpState;$/;"	t	typeref:struct:VkStencilOpState
VkStructureType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkStructureType {$/;"	g
VkStructureType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkStructureType;$/;"	t	typeref:enum:VkStructureType
VkStructureType	thirdparty/glfw/src/internal.h	/^typedef enum VkStructureType$/;"	g
VkStructureType	thirdparty/glfw/src/internal.h	/^} VkStructureType;$/;"	t	typeref:enum:VkStructureType
VkSubmitInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSubmitInfo {$/;"	s
VkSubmitInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSubmitInfo;$/;"	t	typeref:struct:VkSubmitInfo
VkSubpassContents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkSubpassContents {$/;"	g
VkSubpassContents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSubpassContents;$/;"	t	typeref:enum:VkSubpassContents
VkSubpassDependency	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSubpassDependency {$/;"	s
VkSubpassDependency	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSubpassDependency;$/;"	t	typeref:struct:VkSubpassDependency
VkSubpassDescription	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSubpassDescription {$/;"	s
VkSubpassDescription	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSubpassDescription;$/;"	t	typeref:struct:VkSubpassDescription
VkSubpassDescriptionFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkSubpassDescriptionFlags;$/;"	t
VkSubresourceLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSubresourceLayout {$/;"	s
VkSubresourceLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSubresourceLayout;$/;"	t	typeref:struct:VkSubresourceLayout
VkSurfaceCapabilities2EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSurfaceCapabilities2EXT {$/;"	s
VkSurfaceCapabilities2EXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSurfaceCapabilities2EXT;$/;"	t	typeref:struct:VkSurfaceCapabilities2EXT
VkSurfaceCapabilitiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSurfaceCapabilitiesKHR {$/;"	s
VkSurfaceCapabilitiesKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSurfaceCapabilitiesKHR;$/;"	t	typeref:struct:VkSurfaceCapabilitiesKHR
VkSurfaceCounterFlagBitsEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkSurfaceCounterFlagBitsEXT {$/;"	g
VkSurfaceCounterFlagBitsEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSurfaceCounterFlagBitsEXT;$/;"	t	typeref:enum:VkSurfaceCounterFlagBitsEXT
VkSurfaceCounterFlagsEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkSurfaceCounterFlagsEXT;$/;"	t
VkSurfaceFormatKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSurfaceFormatKHR {$/;"	s
VkSurfaceFormatKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSurfaceFormatKHR;$/;"	t	typeref:struct:VkSurfaceFormatKHR
VkSurfaceKHR	thirdparty/glfw/src/internal.h	/^typedef uint64_t VkSurfaceKHR;$/;"	t
VkSurfaceTransformFlagBitsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkSurfaceTransformFlagBitsKHR {$/;"	g
VkSurfaceTransformFlagBitsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSurfaceTransformFlagBitsKHR;$/;"	t	typeref:enum:VkSurfaceTransformFlagBitsKHR
VkSurfaceTransformFlagsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkSurfaceTransformFlagsKHR;$/;"	t
VkSwapchainCounterCreateInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSwapchainCounterCreateInfoEXT {$/;"	s
VkSwapchainCounterCreateInfoEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSwapchainCounterCreateInfoEXT;$/;"	t	typeref:struct:VkSwapchainCounterCreateInfoEXT
VkSwapchainCreateFlagsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkSwapchainCreateFlagsKHR;$/;"	t
VkSwapchainCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkSwapchainCreateInfoKHR {$/;"	s
VkSwapchainCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSwapchainCreateInfoKHR;$/;"	t	typeref:struct:VkSwapchainCreateInfoKHR
VkSystemAllocationScope	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkSystemAllocationScope {$/;"	g
VkSystemAllocationScope	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkSystemAllocationScope;$/;"	t	typeref:enum:VkSystemAllocationScope
VkValidationCheckEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkValidationCheckEXT {$/;"	g
VkValidationCheckEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkValidationCheckEXT;$/;"	t	typeref:enum:VkValidationCheckEXT
VkValidationFlagsEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkValidationFlagsEXT {$/;"	s
VkValidationFlagsEXT	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkValidationFlagsEXT;$/;"	t	typeref:struct:VkValidationFlagsEXT
VkVertexInputAttributeDescription	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkVertexInputAttributeDescription {$/;"	s
VkVertexInputAttributeDescription	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkVertexInputAttributeDescription;$/;"	t	typeref:struct:VkVertexInputAttributeDescription
VkVertexInputBindingDescription	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkVertexInputBindingDescription {$/;"	s
VkVertexInputBindingDescription	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkVertexInputBindingDescription;$/;"	t	typeref:struct:VkVertexInputBindingDescription
VkVertexInputRate	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef enum VkVertexInputRate {$/;"	g
VkVertexInputRate	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkVertexInputRate;$/;"	t	typeref:enum:VkVertexInputRate
VkViSurfaceCreateFlagsNN	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkViSurfaceCreateFlagsNN;$/;"	t
VkViSurfaceCreateInfoNN	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkViSurfaceCreateInfoNN {$/;"	s
VkViSurfaceCreateInfoNN	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkViSurfaceCreateInfoNN;$/;"	t	typeref:struct:VkViSurfaceCreateInfoNN
VkViewport	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkViewport {$/;"	s
VkViewport	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkViewport;$/;"	t	typeref:struct:VkViewport
VkWaylandSurfaceCreateFlagsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkWaylandSurfaceCreateFlagsKHR;$/;"	t
VkWaylandSurfaceCreateFlagsKHR	thirdparty/glfw/src/wl_platform.h	/^typedef VkFlags VkWaylandSurfaceCreateFlagsKHR;$/;"	t
VkWaylandSurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkWaylandSurfaceCreateInfoKHR {$/;"	s
VkWaylandSurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkWaylandSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkWaylandSurfaceCreateInfoKHR
VkWaylandSurfaceCreateInfoKHR	thirdparty/glfw/src/wl_platform.h	/^typedef struct VkWaylandSurfaceCreateInfoKHR$/;"	s
VkWaylandSurfaceCreateInfoKHR	thirdparty/glfw/src/wl_platform.h	/^} VkWaylandSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkWaylandSurfaceCreateInfoKHR
VkWin32KeyedMutexAcquireReleaseInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkWin32KeyedMutexAcquireReleaseInfoNV {$/;"	s
VkWin32KeyedMutexAcquireReleaseInfoNV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkWin32KeyedMutexAcquireReleaseInfoNV;$/;"	t	typeref:struct:VkWin32KeyedMutexAcquireReleaseInfoNV
VkWin32SurfaceCreateFlagsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkWin32SurfaceCreateFlagsKHR;$/;"	t
VkWin32SurfaceCreateFlagsKHR	thirdparty/glfw/src/win32_platform.h	/^typedef VkFlags VkWin32SurfaceCreateFlagsKHR;$/;"	t
VkWin32SurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkWin32SurfaceCreateInfoKHR {$/;"	s
VkWin32SurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkWin32SurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkWin32SurfaceCreateInfoKHR
VkWin32SurfaceCreateInfoKHR	thirdparty/glfw/src/win32_platform.h	/^typedef struct VkWin32SurfaceCreateInfoKHR$/;"	s
VkWin32SurfaceCreateInfoKHR	thirdparty/glfw/src/win32_platform.h	/^} VkWin32SurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkWin32SurfaceCreateInfoKHR
VkWriteDescriptorSet	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkWriteDescriptorSet {$/;"	s
VkWriteDescriptorSet	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkWriteDescriptorSet;$/;"	t	typeref:struct:VkWriteDescriptorSet
VkXcbSurfaceCreateFlagsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkXcbSurfaceCreateFlagsKHR;$/;"	t
VkXcbSurfaceCreateFlagsKHR	thirdparty/glfw/src/x11_platform.h	/^typedef VkFlags VkXcbSurfaceCreateFlagsKHR;$/;"	t
VkXcbSurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkXcbSurfaceCreateInfoKHR {$/;"	s
VkXcbSurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkXcbSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkXcbSurfaceCreateInfoKHR
VkXcbSurfaceCreateInfoKHR	thirdparty/glfw/src/x11_platform.h	/^typedef struct VkXcbSurfaceCreateInfoKHR$/;"	s
VkXcbSurfaceCreateInfoKHR	thirdparty/glfw/src/x11_platform.h	/^} VkXcbSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkXcbSurfaceCreateInfoKHR
VkXlibSurfaceCreateFlagsKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef VkFlags VkXlibSurfaceCreateFlagsKHR;$/;"	t
VkXlibSurfaceCreateFlagsKHR	thirdparty/glfw/src/x11_platform.h	/^typedef VkFlags VkXlibSurfaceCreateFlagsKHR;$/;"	t
VkXlibSurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^typedef struct VkXlibSurfaceCreateInfoKHR {$/;"	s
VkXlibSurfaceCreateInfoKHR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^} VkXlibSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkXlibSurfaceCreateInfoKHR
VkXlibSurfaceCreateInfoKHR	thirdparty/glfw/src/x11_platform.h	/^typedef struct VkXlibSurfaceCreateInfoKHR$/;"	s
VkXlibSurfaceCreateInfoKHR	thirdparty/glfw/src/x11_platform.h	/^} VkXlibSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkXlibSurfaceCreateInfoKHR
Vlp	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	int Vlp; \/\/ lowpass$/;"	m	class:SIDsound
Vlp	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	int Vlp; \/\/ lowpass$/;"	m	class:SIDsound
VoiceCallback	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        VoiceCallback(HANDLE aBufferEndEvent) $/;"	f	class:SoLoud::VoiceCallback
VoiceCallback	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^    class VoiceCallback : public IXAudio2VoiceCallback$/;"	c	namespace:SoLoud	file:
Volume	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             Volume;$/;"	m	class:TED
Volume	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static int             Volume;$/;"	v	file:
VtxBuffer	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<ImDrawVert>    VtxBuffer;          \/\/ Vertex buffer.$/;"	m	struct:ImDrawList
W	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	V					: 86,$/;"	p	class:namespace.Codes
WAITING	lib/roa/include/roa/resource_status.hpp	/^  WAITING,$/;"	m	class:ROA::Resource_status
WASAPI	thirdparty/soloud/include/soloud/soloud.h	/^			WASAPI,$/;"	e	enum:SoLoud::Soloud::BACKENDS
WASAPIData	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^    struct WASAPIData$/;"	s	namespace:SoLoud	file:
WAVE_NOISE	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		WAVE_TRIPULSE, WAVE_SAWPULSE, WAVE_TRISAWPULSE,	WAVE_NOISE$/;"	e	enum:SIDsound::__anon198
WAVE_NOISE	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		WAVE_TRIPULSE, WAVE_SAWPULSE, WAVE_TRISAWPULSE,	WAVE_NOISE$/;"	e	enum:SIDsound::__anon192
WAVE_NONE	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		WAVE_NONE, WAVE_TRI, WAVE_SAW, WAVE_TRISAW, WAVE_PULSE, $/;"	e	enum:SIDsound::__anon198
WAVE_NONE	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		WAVE_NONE, WAVE_TRI, WAVE_SAW, WAVE_TRISAW, WAVE_PULSE, $/;"	e	enum:SIDsound::__anon192
WAVE_PULSE	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		WAVE_NONE, WAVE_TRI, WAVE_SAW, WAVE_TRISAW, WAVE_PULSE, $/;"	e	enum:SIDsound::__anon198
WAVE_PULSE	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		WAVE_NONE, WAVE_TRI, WAVE_SAW, WAVE_TRISAW, WAVE_PULSE, $/;"	e	enum:SIDsound::__anon192
WAVE_SAW	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		WAVE_NONE, WAVE_TRI, WAVE_SAW, WAVE_TRISAW, WAVE_PULSE, $/;"	e	enum:SIDsound::__anon198
WAVE_SAW	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		WAVE_NONE, WAVE_TRI, WAVE_SAW, WAVE_TRISAW, WAVE_PULSE, $/;"	e	enum:SIDsound::__anon192
WAVE_SAWPULSE	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		WAVE_TRIPULSE, WAVE_SAWPULSE, WAVE_TRISAWPULSE,	WAVE_NOISE$/;"	e	enum:SIDsound::__anon198
WAVE_SAWPULSE	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		WAVE_TRIPULSE, WAVE_SAWPULSE, WAVE_TRISAWPULSE,	WAVE_NOISE$/;"	e	enum:SIDsound::__anon192
WAVE_TRI	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		WAVE_NONE, WAVE_TRI, WAVE_SAW, WAVE_TRISAW, WAVE_PULSE, $/;"	e	enum:SIDsound::__anon198
WAVE_TRI	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		WAVE_NONE, WAVE_TRI, WAVE_SAW, WAVE_TRISAW, WAVE_PULSE, $/;"	e	enum:SIDsound::__anon192
WAVE_TRIPULSE	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		WAVE_TRIPULSE, WAVE_SAWPULSE, WAVE_TRISAWPULSE,	WAVE_NOISE$/;"	e	enum:SIDsound::__anon198
WAVE_TRIPULSE	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		WAVE_TRIPULSE, WAVE_SAWPULSE, WAVE_TRISAWPULSE,	WAVE_NOISE$/;"	e	enum:SIDsound::__anon192
WAVE_TRISAW	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		WAVE_NONE, WAVE_TRI, WAVE_SAW, WAVE_TRISAW, WAVE_PULSE, $/;"	e	enum:SIDsound::__anon198
WAVE_TRISAW	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		WAVE_NONE, WAVE_TRI, WAVE_SAW, WAVE_TRISAW, WAVE_PULSE, $/;"	e	enum:SIDsound::__anon192
WAVE_TRISAWPULSE	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		WAVE_TRIPULSE, WAVE_SAWPULSE, WAVE_TRISAWPULSE,	WAVE_NOISE$/;"	e	enum:SIDsound::__anon198
WAVE_TRISAWPULSE	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		WAVE_TRIPULSE, WAVE_SAWPULSE, WAVE_TRISAWPULSE,	WAVE_NOISE$/;"	e	enum:SIDsound::__anon192
WCHAR_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	215;"	d
WCHAR_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	212;"	d
WEBSOCKET_BINARY	thirdparty/remotery/src/Remotery.c	/^    WEBSOCKET_BINARY = 2,$/;"	e	enum:WebSocketMode	file:
WEBSOCKET_NONE	thirdparty/remotery/src/Remotery.c	/^    WEBSOCKET_NONE = 0,$/;"	e	enum:WebSocketMode	file:
WEBSOCKET_TEXT	thirdparty/remotery/src/Remotery.c	/^    WEBSOCKET_TEXT = 1,$/;"	e	enum:WebSocketMode	file:
WET	thirdparty/soloud/include/soloud/soloud_bassboostfilter.h	/^			WET = 0,$/;"	e	enum:SoLoud::BassboostFilter::FILTERATTRIBUTE
WET	thirdparty/soloud/include/soloud/soloud_bassboostfilter.h	/^			WET = 0,$/;"	e	enum:SoLoud::BassboostFilterInstance::FILTERATTRIBUTE
WET	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^			WET = 0,$/;"	e	enum:SoLoud::BiquadResonantFilter::FILTERATTRIBUTE
WET	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^			WET = 0,$/;"	e	enum:SoLoud::BiquadResonantFilterInstance::FILTERATTRIBUTE
WET	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^			WET,$/;"	e	enum:SoLoud::FlangerFilter::FILTERPARAMS
WET	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^			WET,$/;"	e	enum:SoLoud::LofiFilter::FILTERPARAMS
WET	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^			WET,$/;"	e	enum:SoLoud::LofiFilterInstance::FILTERPARAMS
WGL_ACCELERATION_ARB	thirdparty/glfw/src/wgl_context.h	33;"	d
WGL_ACCUM_ALPHA_BITS_ARB	thirdparty/glfw/src/wgl_context.h	47;"	d
WGL_ACCUM_BITS_ARB	thirdparty/glfw/src/wgl_context.h	43;"	d
WGL_ACCUM_BLUE_BITS_ARB	thirdparty/glfw/src/wgl_context.h	46;"	d
WGL_ACCUM_GREEN_BITS_ARB	thirdparty/glfw/src/wgl_context.h	45;"	d
WGL_ACCUM_RED_BITS_ARB	thirdparty/glfw/src/wgl_context.h	44;"	d
WGL_ALPHA_BITS_ARB	thirdparty/glfw/src/wgl_context.h	41;"	d
WGL_ALPHA_SHIFT_ARB	thirdparty/glfw/src/wgl_context.h	42;"	d
WGL_AUX_BUFFERS_ARB	thirdparty/glfw/src/wgl_context.h	50;"	d
WGL_BLUE_BITS_ARB	thirdparty/glfw/src/wgl_context.h	39;"	d
WGL_BLUE_SHIFT_ARB	thirdparty/glfw/src/wgl_context.h	40;"	d
WGL_COLORSPACE_EXT	thirdparty/glfw/src/wgl_context.h	72;"	d
WGL_COLORSPACE_SRGB_EXT	thirdparty/glfw/src/wgl_context.h	73;"	d
WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	thirdparty/glfw/src/wgl_context.h	59;"	d
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	thirdparty/glfw/src/wgl_context.h	58;"	d
WGL_CONTEXT_DEBUG_BIT_ARB	thirdparty/glfw/src/wgl_context.h	55;"	d
WGL_CONTEXT_ES2_PROFILE_BIT_EXT	thirdparty/glfw/src/wgl_context.h	63;"	d
WGL_CONTEXT_FLAGS_ARB	thirdparty/glfw/src/wgl_context.h	62;"	d
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	thirdparty/glfw/src/wgl_context.h	56;"	d
WGL_CONTEXT_MAJOR_VERSION_ARB	thirdparty/glfw/src/wgl_context.h	60;"	d
WGL_CONTEXT_MINOR_VERSION_ARB	thirdparty/glfw/src/wgl_context.h	61;"	d
WGL_CONTEXT_OPENGL_NO_ERROR_ARB	thirdparty/glfw/src/wgl_context.h	71;"	d
WGL_CONTEXT_PROFILE_MASK_ARB	thirdparty/glfw/src/wgl_context.h	57;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_ARB	thirdparty/glfw/src/wgl_context.h	68;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB	thirdparty/glfw/src/wgl_context.h	70;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB	thirdparty/glfw/src/wgl_context.h	69;"	d
WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB	thirdparty/glfw/src/wgl_context.h	66;"	d
WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB	thirdparty/glfw/src/wgl_context.h	64;"	d
WGL_DEPTH_BITS_ARB	thirdparty/glfw/src/wgl_context.h	48;"	d
WGL_DOUBLE_BUFFER_ARB	thirdparty/glfw/src/wgl_context.h	52;"	d
WGL_DRAW_TO_WINDOW_ARB	thirdparty/glfw/src/wgl_context.h	30;"	d
WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB	thirdparty/glfw/src/wgl_context.h	54;"	d
WGL_GREEN_BITS_ARB	thirdparty/glfw/src/wgl_context.h	37;"	d
WGL_GREEN_SHIFT_ARB	thirdparty/glfw/src/wgl_context.h	38;"	d
WGL_LOSE_CONTEXT_ON_RESET_ARB	thirdparty/glfw/src/wgl_context.h	65;"	d
WGL_NO_ACCELERATION_ARB	thirdparty/glfw/src/wgl_context.h	34;"	d
WGL_NO_RESET_NOTIFICATION_ARB	thirdparty/glfw/src/wgl_context.h	67;"	d
WGL_NUMBER_PIXEL_FORMATS_ARB	thirdparty/glfw/src/wgl_context.h	28;"	d
WGL_PIXEL_TYPE_ARB	thirdparty/glfw/src/wgl_context.h	31;"	d
WGL_RED_BITS_ARB	thirdparty/glfw/src/wgl_context.h	35;"	d
WGL_RED_SHIFT_ARB	thirdparty/glfw/src/wgl_context.h	36;"	d
WGL_SAMPLES_ARB	thirdparty/glfw/src/wgl_context.h	53;"	d
WGL_STENCIL_BITS_ARB	thirdparty/glfw/src/wgl_context.h	49;"	d
WGL_STEREO_ARB	thirdparty/glfw/src/wgl_context.h	51;"	d
WGL_SUPPORT_OPENGL_ARB	thirdparty/glfw/src/wgl_context.h	29;"	d
WGL_TYPE_RGBA_ARB	thirdparty/glfw/src/wgl_context.h	32;"	d
WHEN	thirdparty/catch/include/catch/catch.hpp	10437;"	d
WIN32_LEAN_AND_MEAN	lib/lib/include/lib/directory.hpp	53;"	d
WIN32_LEAN_AND_MEAN	lib/lib/include/lib/file.hpp	86;"	d
WIN32_LEAN_AND_MEAN	thirdparty/glfw/src/deps/glad/glad.h	34;"	d
WIN32_LEAN_AND_MEAN	thirdparty/glfw/src/deps/tinycthread.h	85;"	d
WIN32_LEAN_AND_MEAN	thirdparty/glfw/src/deps/tinycthread.h	90;"	d
WIN32_LEAN_AND_MEAN	thirdparty/glfw/src/win32_platform.h	38;"	d
WIN32_LEAN_AND_MEAN	thirdparty/imgui/src/imgui.cpp	9620;"	d	file:
WIN32_LEAN_AND_MEAN	thirdparty/imgui/src/imgui.cpp	9621;"	d	file:
WIN32_LEAN_AND_MEAN	thirdparty/opengl/include/GL/glcorearb.h	41;"	d
WIN32_LEAN_AND_MEAN	thirdparty/opengl/src/gl3w.cpp	35;"	d	file:
WIN32_LEAN_AND_MEAN	thirdparty/tinydir/include/tinydir/tinydir.h	45;"	d
WINDOWS_VERSION	thirdparty/soloud/include/soloud/soloud.h	36;"	d
WINDOWS_VERSION	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	26;"	d	file:
WINDOWS_VERSION	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	37;"	d	file:
WINDOWS_VERSION	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	28;"	d	file:
WINDOWS_VERSION	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	26;"	d	file:
WINDOW_INCLUDED_9EC4B4E2_D0F9_4990_B4F8_3EB523EBD2DE	lib/nil/include/nil/data/window.hpp	2;"	d
WINELIB_NAME_AW	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	100;"	d
WINELIB_NAME_AW	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	103;"	d
WINELIB_NAME_AW	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	105;"	d
WINGDIAPI	thirdparty/glfw/include/GLFW/glfw3.h	119;"	d
WINGDIAPI	thirdparty/glfw/include/GLFW/glfw3.h	4905;"	d
WINMM	thirdparty/soloud/include/soloud/soloud.h	/^			WINMM,$/;"	e	enum:SoLoud::Soloud::BACKENDS
WINT_MAX	thirdparty/glfw/src/deps/vs2008/stdint.h	219;"	d
WINT_MIN	thirdparty/glfw/src/deps/vs2008/stdint.h	218;"	d
WINVER	thirdparty/glfw/src/win32_platform.h	53;"	d
WINVER	thirdparty/glfw/src/win32_platform.h	54;"	d
WIN_IME	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	MAC_WK_CMD_RIGHT	: 93,	\/\/ WebKit Right Command key fired, different from META$/;"	p	class:namespace.Codes
WIN_KEY	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	CLOSE_SQUARE_BRACKET: 221,	\/\/ needs localization$/;"	p	class:namespace.Codes
WIN_KEY_FF_LINUX	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^Keyboard.Codes = {$/;"	p	class:namespace.Codes
WIN_KEY_RIGHT	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	META				: 91,	\/\/ WIN_KEY_LEFT$/;"	p	class:namespace.Codes
WM_COPYGLOBALDATA	thirdparty/glfw/src/win32_platform.h	84;"	d
WM_DELETE_WINDOW	thirdparty/glfw/src/x11_platform.h	/^    Atom            WM_DELETE_WINDOW;$/;"	m	struct:_GLFWlibraryX11
WM_DPICHANGED	thirdparty/glfw/src/win32_platform.h	93;"	d
WM_DWMCOMPOSITIONCHANGED	thirdparty/glfw/src/win32_platform.h	81;"	d
WM_MOUSEHWHEEL	thirdparty/glfw/src/win32_platform.h	78;"	d
WM_PROTOCOLS	thirdparty/glfw/src/x11_platform.h	/^    Atom            WM_PROTOCOLS;$/;"	m	struct:_GLFWlibraryX11
WM_STATE	thirdparty/glfw/src/x11_platform.h	/^    Atom            WM_STATE;$/;"	m	struct:_GLFWlibraryX11
WM_UNICHAR	thirdparty/glfw/src/win32_platform.h	87;"	d
WORLD	thirdparty/imguizmo/include/imguizmo/ImGuizmo.h	/^		WORLD$/;"	e	enum:ImGuizmo::MODE
W_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule W_rules[] =$/;"	v	file:
WantCaptureKeyboard	thirdparty/imgui/include/imgui/imgui.h	/^    bool        WantCaptureKeyboard;        \/\/ Widget is active (= ImGui will use your keyboard input). Use to hide keyboard from the rest of your application$/;"	m	struct:ImGuiIO
WantCaptureMouse	thirdparty/imgui/include/imgui/imgui.h	/^    bool        WantCaptureMouse;           \/\/ Mouse is hovering a window or widget is active (= ImGui will use your mouse input). Use to hide mouse from the rest of your application$/;"	m	struct:ImGuiIO
WantTextInput	thirdparty/imgui/include/imgui/imgui.h	/^    bool        WantTextInput;              \/\/ Some text input widget is active, which will read input characters from the InputCharacters array. Use to activate on screen keyboard if your system needs one$/;"	m	struct:ImGuiIO
Warning	thirdparty/catch/include/catch/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
WasActive	thirdparty/imgui/include/imgui/imgui_internal.h	/^    bool                    WasActive;$/;"	m	struct:ImGuiWindow
Wav	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * Wav;$/;"	t
Wav	thirdparty/soloud/include/soloud/soloud_wav.h	/^	class Wav : public AudioSource$/;"	c	namespace:SoLoud
Wav	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^	Wav::Wav()$/;"	f	class:SoLoud::Wav
WavInstance	thirdparty/soloud/include/soloud/soloud_wav.h	/^	class WavInstance : public AudioSourceInstance$/;"	c	namespace:SoLoud
WavInstance	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^	WavInstance::WavInstance(Wav *aParent)$/;"	f	class:SoLoud::WavInstance
WavStream	thirdparty/soloud/include/soloud/soloud_c.h	/^typedef void * WavStream;$/;"	t
WavStream	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^	class WavStream : public AudioSource$/;"	c	namespace:SoLoud
WavStream	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	WavStream::WavStream()$/;"	f	class:SoLoud::WavStream
WavStreamInstance	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^	class WavStreamInstance : public AudioSourceInstance$/;"	c	namespace:SoLoud
WavStreamInstance	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	WavStreamInstance::WavStreamInstance(WavStream *aParent)$/;"	f	class:SoLoud::WavStreamInstance
WavStream_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * WavStream_create()$/;"	f
WavStream_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_destroy(void * aClassPtr)$/;"	f
WavStream_getLength	thirdparty/soloud/src/c_api/soloud_c.cpp	/^double WavStream_getLength(void * aClassPtr)$/;"	f
WavStream_load	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int WavStream_load(void * aClassPtr, const char * aFilename)$/;"	f
WavStream_loadFile	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int WavStream_loadFile(void * aClassPtr, File * aFile)$/;"	f
WavStream_loadFileToMem	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int WavStream_loadFileToMem(void * aClassPtr, File * aFile)$/;"	f
WavStream_loadMem	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int WavStream_loadMem(void * aClassPtr, unsigned char * aData, unsigned int aDataLen)$/;"	f
WavStream_loadMemEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int WavStream_loadMemEx(void * aClassPtr, unsigned char * aData, unsigned int aDataLen, int aCopy, int aTakeOwnership)$/;"	f
WavStream_loadToMem	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int WavStream_loadToMem(void * aClassPtr, const char * aFilename)$/;"	f
WavStream_set3dAttenuation	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_set3dAttenuation(void * aClassPtr, unsigned int aAttenuationModel, float aAttenuationRolloffFactor)$/;"	f
WavStream_set3dAttenuator	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_set3dAttenuator(void * aClassPtr, AudioAttenuator * aAttenuator)$/;"	f
WavStream_set3dCollider	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_set3dCollider(void * aClassPtr, AudioCollider * aCollider)$/;"	f
WavStream_set3dColliderEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_set3dColliderEx(void * aClassPtr, AudioCollider * aCollider, int aUserData)$/;"	f
WavStream_set3dDistanceDelay	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_set3dDistanceDelay(void * aClassPtr, int aDistanceDelay)$/;"	f
WavStream_set3dDopplerFactor	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_set3dDopplerFactor(void * aClassPtr, float aDopplerFactor)$/;"	f
WavStream_set3dListenerRelative	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_set3dListenerRelative(void * aClassPtr, int aListenerRelative)$/;"	f
WavStream_set3dMinMaxDistance	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_set3dMinMaxDistance(void * aClassPtr, float aMinDistance, float aMaxDistance)$/;"	f
WavStream_set3dProcessing	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_set3dProcessing(void * aClassPtr, int aDo3dProcessing)$/;"	f
WavStream_setFilter	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_setFilter(void * aClassPtr, unsigned int aFilterId, Filter * aFilter)$/;"	f
WavStream_setInaudibleBehavior	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_setInaudibleBehavior(void * aClassPtr, int aMustTick, int aKill)$/;"	f
WavStream_setLooping	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_setLooping(void * aClassPtr, int aLoop)$/;"	f
WavStream_setVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_setVolume(void * aClassPtr, float aVolume)$/;"	f
WavStream_stop	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void WavStream_stop(void * aClassPtr)$/;"	f
Wav_create	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void * Wav_create()$/;"	f
Wav_destroy	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_destroy(void * aClassPtr)$/;"	f
Wav_getLength	thirdparty/soloud/src/c_api/soloud_c.cpp	/^double Wav_getLength(void * aClassPtr)$/;"	f
Wav_load	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Wav_load(void * aClassPtr, const char * aFilename)$/;"	f
Wav_loadFile	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Wav_loadFile(void * aClassPtr, File * aFile)$/;"	f
Wav_loadMem	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Wav_loadMem(void * aClassPtr, unsigned char * aMem, unsigned int aLength)$/;"	f
Wav_loadMemEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^int Wav_loadMemEx(void * aClassPtr, unsigned char * aMem, unsigned int aLength, int aCopy, int aTakeOwnership)$/;"	f
Wav_set3dAttenuation	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_set3dAttenuation(void * aClassPtr, unsigned int aAttenuationModel, float aAttenuationRolloffFactor)$/;"	f
Wav_set3dAttenuator	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_set3dAttenuator(void * aClassPtr, AudioAttenuator * aAttenuator)$/;"	f
Wav_set3dCollider	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_set3dCollider(void * aClassPtr, AudioCollider * aCollider)$/;"	f
Wav_set3dColliderEx	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_set3dColliderEx(void * aClassPtr, AudioCollider * aCollider, int aUserData)$/;"	f
Wav_set3dDistanceDelay	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_set3dDistanceDelay(void * aClassPtr, int aDistanceDelay)$/;"	f
Wav_set3dDopplerFactor	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_set3dDopplerFactor(void * aClassPtr, float aDopplerFactor)$/;"	f
Wav_set3dListenerRelative	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_set3dListenerRelative(void * aClassPtr, int aListenerRelative)$/;"	f
Wav_set3dMinMaxDistance	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_set3dMinMaxDistance(void * aClassPtr, float aMinDistance, float aMaxDistance)$/;"	f
Wav_set3dProcessing	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_set3dProcessing(void * aClassPtr, int aDo3dProcessing)$/;"	f
Wav_setFilter	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_setFilter(void * aClassPtr, unsigned int aFilterId, Filter * aFilter)$/;"	f
Wav_setInaudibleBehavior	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_setInaudibleBehavior(void * aClassPtr, int aMustTick, int aKill)$/;"	f
Wav_setLooping	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_setLooping(void * aClassPtr, int aLoop)$/;"	f
Wav_setVolume	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_setVolume(void * aClassPtr, float aVolume)$/;"	f
Wav_stop	thirdparty/soloud/src/c_api/soloud_c.cpp	/^void Wav_stop(void * aClassPtr)$/;"	f
WebSocket	thirdparty/remotery/src/Remotery.c	/^} WebSocket;$/;"	t	typeref:struct:__anon63	file:
WebSocketHandshake	thirdparty/remotery/src/Remotery.c	/^static rmtError WebSocketHandshake(TCPSocket* tcp_socket, rmtPStr limit_host)$/;"	f	file:
WebSocketMode	thirdparty/remotery/src/Remotery.c	/^enum WebSocketMode$/;"	g	file:
WebSocket_AcceptConnection	thirdparty/remotery/src/Remotery.c	/^static rmtError WebSocket_AcceptConnection(WebSocket* web_socket, WebSocket** client_socket)$/;"	f	file:
WebSocket_Close	thirdparty/remotery/src/Remotery.c	/^static void WebSocket_Close(WebSocket* web_socket)$/;"	f	file:
WebSocket_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError WebSocket_Constructor(WebSocket* web_socket, TCPSocket* tcp_socket)$/;"	f	file:
WebSocket_Destructor	thirdparty/remotery/src/Remotery.c	/^static void WebSocket_Destructor(WebSocket* web_socket)$/;"	f	file:
WebSocket_PollStatus	thirdparty/remotery/src/Remotery.c	/^static SocketStatus WebSocket_PollStatus(WebSocket* web_socket)$/;"	f	file:
WebSocket_Receive	thirdparty/remotery/src/Remotery.c	/^static rmtError WebSocket_Receive(WebSocket* web_socket, void* data, rmtU32* msg_len, rmtU32 length, rmtU32 timeout_ms)$/;"	f	file:
WebSocket_RunServer	thirdparty/remotery/src/Remotery.c	/^static rmtError WebSocket_RunServer(WebSocket* web_socket, rmtU16 port, rmtBool limit_connections_to_localhost, enum WebSocketMode mode)$/;"	f	file:
WebSocket_Send	thirdparty/remotery/src/Remotery.c	/^static rmtError WebSocket_Send(WebSocket* web_socket, const void* data, rmtU32 length, rmtU32 timeout_ms)$/;"	f	file:
Width	thirdparty/imgui/include/imgui/imgui_internal.h	/^    float       Width, NextWidth;$/;"	m	struct:ImGuiSimpleColumns
Window	lib/nil/include/nil/data/window.hpp	/^struct Window$/;"	s	namespace:Nil::Data
Window	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImGuiWindow*    Window;         \/\/ Resolved on BeginPopup() - may stay unresolved if user never calls OpenPopup()$/;"	m	struct:ImGuiPopupRef
WindowMinSize	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      WindowMinSize;              \/\/ Minimum window size$/;"	m	struct:ImGuiStyle
WindowPadding	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      WindowPadding;              \/\/ Padding within a window$/;"	m	struct:ImGuiStyle
WindowPadding	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVec2                  WindowPadding;                      \/\/ Window padding at the time of begin. We need to lock it, in particular manipulation of the ShowBorder would have an effect$/;"	m	struct:ImGuiWindow
WindowRectClipped	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImRect                  WindowRectClipped;                  \/\/ = WindowRect just after setup in Begin(). == window->Rect() for root window.$/;"	m	struct:ImGuiWindow
WindowRounding	thirdparty/imgui/include/imgui/imgui.h	/^    float       WindowRounding;             \/\/ Radius of window corners rounding. Set to 0.0f to have rectangular windows$/;"	m	struct:ImGuiStyle
WindowTitleAlign	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2      WindowTitleAlign;           \/\/ Alignment for title bar text. Defaults to (0.0f,0.5f) for left-aligned,vertically centered.$/;"	m	struct:ImGuiStyle
Windows	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImGuiWindow*>  Windows;$/;"	m	struct:ImGuiContext
WindowsSortBuffer	thirdparty/imgui/include/imgui/imgui_internal.h	/^    ImVector<ImGuiWindow*>  WindowsSortBuffer;$/;"	m	struct:ImGuiContext
Write	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::Write(unsigned int addr, unsigned char value)$/;"	f	class:TED
WriteFence	thirdparty/remotery/src/Remotery.c	/^static void WriteFence()$/;"	f	file:
WriteSize	thirdparty/remotery/src/Remotery.c	/^static void WriteSize(rmtU32 size, rmtU8* dest, rmtU32 dest_size, rmtU32 dest_offset)$/;"	f	file:
X	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	W					: 87,$/;"	p	class:namespace.Codes
X	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned char  X;$/;"	m	class:CPU
X0	thirdparty/imgui/include/imgui/imgui.h	/^        float                   X0, Y0, X1, Y1;$/;"	m	struct:ImFont::Glyph
X1	thirdparty/imgui/include/imgui/imgui.h	/^        float                   X0, Y0, X1, Y1;$/;"	m	struct:ImFont::Glyph
XAUDIO2	thirdparty/soloud/include/soloud/soloud.h	/^			XAUDIO2,$/;"	e	enum:SoLoud::Soloud::BACKENDS
XAdvance	thirdparty/imgui/include/imgui/imgui.h	/^        float                   XAdvance;$/;"	m	struct:ImFont::Glyph
XAudio2Data	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^    struct XAudio2Data$/;"	s	namespace:SoLoud	file:
XF86VidModeGetGammaRamp	thirdparty/glfw/src/x11_platform.h	60;"	d
XF86VidModeGetGammaRampSize	thirdparty/glfw/src/x11_platform.h	62;"	d
XF86VidModeQueryExtension	thirdparty/glfw/src/x11_platform.h	59;"	d
XF86VidModeSetGammaRamp	thirdparty/glfw/src/x11_platform.h	61;"	d
XGetXCBConnection	thirdparty/glfw/src/x11_platform.h	/^        PFN_XGetXCBConnection XGetXCBConnection;$/;"	m	struct:_GLFWlibraryX11::__anon150
XINPUT_BATTERY_INFORMATION	thirdparty/glfw/src/deps/mingw/xinput.h	/^} XINPUT_BATTERY_INFORMATION, *PXINPUT_BATTERY_INFORMATION;$/;"	t	typeref:struct:_XINPUT_BATTERY_INFORMATION
XINPUT_CAPABILITIES	thirdparty/glfw/src/deps/mingw/xinput.h	/^} XINPUT_CAPABILITIES, *PXINPUT_CAPABILITIES;$/;"	t	typeref:struct:_XINPUT_CAPABILITIES
XINPUT_CAPS_VOICE_SUPPORTED	thirdparty/glfw/src/deps/mingw/xinput.h	128;"	d
XINPUT_CAPS_WIRELESS	thirdparty/glfw/src/win32_platform.h	128;"	d
XINPUT_DEVSUBTYPE_ARCADE_PAD	thirdparty/glfw/src/win32_platform.h	149;"	d
XINPUT_DEVSUBTYPE_ARCADE_STICK	thirdparty/glfw/src/deps/mingw/xinput.h	116;"	d
XINPUT_DEVSUBTYPE_ARCADE_STICK	thirdparty/glfw/src/win32_platform.h	134;"	d
XINPUT_DEVSUBTYPE_DANCE_PAD	thirdparty/glfw/src/deps/mingw/xinput.h	118;"	d
XINPUT_DEVSUBTYPE_DANCE_PAD	thirdparty/glfw/src/win32_platform.h	140;"	d
XINPUT_DEVSUBTYPE_DRUM_KIT	thirdparty/glfw/src/deps/mingw/xinput.h	120;"	d
XINPUT_DEVSUBTYPE_DRUM_KIT	thirdparty/glfw/src/win32_platform.h	146;"	d
XINPUT_DEVSUBTYPE_FLIGHT_SICK	thirdparty/glfw/src/deps/mingw/xinput.h	117;"	d
XINPUT_DEVSUBTYPE_FLIGHT_STICK	thirdparty/glfw/src/win32_platform.h	137;"	d
XINPUT_DEVSUBTYPE_GAMEPAD	thirdparty/glfw/src/deps/mingw/xinput.h	114;"	d
XINPUT_DEVSUBTYPE_GUITAR	thirdparty/glfw/src/deps/mingw/xinput.h	119;"	d
XINPUT_DEVSUBTYPE_GUITAR	thirdparty/glfw/src/win32_platform.h	143;"	d
XINPUT_DEVSUBTYPE_WHEEL	thirdparty/glfw/src/deps/mingw/xinput.h	115;"	d
XINPUT_DEVSUBTYPE_WHEEL	thirdparty/glfw/src/win32_platform.h	131;"	d
XINPUT_DEVTYPE_GAMEPAD	thirdparty/glfw/src/deps/mingw/xinput.h	113;"	d
XINPUT_FLAG_GAMEPAD	thirdparty/glfw/src/deps/mingw/xinput.h	129;"	d
XINPUT_GAMEPAD	thirdparty/glfw/src/deps/mingw/xinput.h	/^} XINPUT_GAMEPAD, *PXINPUT_GAMEPAD;$/;"	t	typeref:struct:_XINPUT_GAMEPAD
XINPUT_GAMEPAD_A	thirdparty/glfw/src/deps/mingw/xinput.h	42;"	d
XINPUT_GAMEPAD_B	thirdparty/glfw/src/deps/mingw/xinput.h	43;"	d
XINPUT_GAMEPAD_BACK	thirdparty/glfw/src/deps/mingw/xinput.h	37;"	d
XINPUT_GAMEPAD_DPAD_DOWN	thirdparty/glfw/src/deps/mingw/xinput.h	33;"	d
XINPUT_GAMEPAD_DPAD_LEFT	thirdparty/glfw/src/deps/mingw/xinput.h	34;"	d
XINPUT_GAMEPAD_DPAD_RIGHT	thirdparty/glfw/src/deps/mingw/xinput.h	35;"	d
XINPUT_GAMEPAD_DPAD_UP	thirdparty/glfw/src/deps/mingw/xinput.h	32;"	d
XINPUT_GAMEPAD_LEFT_SHOULDER	thirdparty/glfw/src/deps/mingw/xinput.h	40;"	d
XINPUT_GAMEPAD_LEFT_THUMB	thirdparty/glfw/src/deps/mingw/xinput.h	38;"	d
XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE	thirdparty/glfw/src/deps/mingw/xinput.h	101;"	d
XINPUT_GAMEPAD_RIGHT_SHOULDER	thirdparty/glfw/src/deps/mingw/xinput.h	41;"	d
XINPUT_GAMEPAD_RIGHT_THUMB	thirdparty/glfw/src/deps/mingw/xinput.h	39;"	d
XINPUT_GAMEPAD_RIGHT_THUMB_DEADZONE	thirdparty/glfw/src/deps/mingw/xinput.h	102;"	d
XINPUT_GAMEPAD_START	thirdparty/glfw/src/deps/mingw/xinput.h	36;"	d
XINPUT_GAMEPAD_TRIGGER_THRESHOLD	thirdparty/glfw/src/deps/mingw/xinput.h	103;"	d
XINPUT_GAMEPAD_X	thirdparty/glfw/src/deps/mingw/xinput.h	44;"	d
XINPUT_GAMEPAD_Y	thirdparty/glfw/src/deps/mingw/xinput.h	45;"	d
XINPUT_KEYSTROKE	thirdparty/glfw/src/deps/mingw/xinput.h	/^} XINPUT_KEYSTROKE, *PXINPUT_KEYSTROKE;$/;"	t	typeref:struct:_XINPUT_KEYSTROKE
XINPUT_KEYSTROKE_KEYDOWN	thirdparty/glfw/src/deps/mingw/xinput.h	52;"	d
XINPUT_KEYSTROKE_KEYUP	thirdparty/glfw/src/deps/mingw/xinput.h	53;"	d
XINPUT_KEYSTROKE_REPEAT	thirdparty/glfw/src/deps/mingw/xinput.h	54;"	d
XINPUT_STATE	thirdparty/glfw/src/deps/mingw/xinput.h	/^} XINPUT_STATE, *PXINPUT_STATE;$/;"	t	typeref:struct:_XINPUT_STATE
XINPUT_VIBRATION	thirdparty/glfw/src/deps/mingw/xinput.h	/^} XINPUT_VIBRATION, *PXINPUT_VIBRATION;$/;"	t	typeref:struct:_XINPUT_VIBRATION
XIQueryVersion	thirdparty/glfw/src/x11_platform.h	66;"	d
XISelectEvents	thirdparty/glfw/src/x11_platform.h	67;"	d
XInputGetCapabilities	thirdparty/glfw/src/win32_platform.h	167;"	d
XInputGetState	thirdparty/glfw/src/win32_platform.h	168;"	d
XUSER_INDEX_ANY	thirdparty/glfw/src/deps/mingw/xinput.h	157;"	d
XUSER_MAX_COUNT	thirdparty/glfw/src/deps/mingw/xinput.h	156;"	d
XUSER_MAX_COUNT	thirdparty/glfw/src/win32_platform.h	152;"	d
X_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule X_rules[] =$/;"	v	file:
XdndActionCopy	thirdparty/glfw/src/x11_platform.h	/^    Atom            XdndActionCopy;$/;"	m	struct:_GLFWlibraryX11
XdndAware	thirdparty/glfw/src/x11_platform.h	/^    Atom            XdndAware;$/;"	m	struct:_GLFWlibraryX11
XdndDrop	thirdparty/glfw/src/x11_platform.h	/^    Atom            XdndDrop;$/;"	m	struct:_GLFWlibraryX11
XdndEnter	thirdparty/glfw/src/x11_platform.h	/^    Atom            XdndEnter;$/;"	m	struct:_GLFWlibraryX11
XdndFinished	thirdparty/glfw/src/x11_platform.h	/^    Atom            XdndFinished;$/;"	m	struct:_GLFWlibraryX11
XdndPosition	thirdparty/glfw/src/x11_platform.h	/^    Atom            XdndPosition;$/;"	m	struct:_GLFWlibraryX11
XdndSelection	thirdparty/glfw/src/x11_platform.h	/^    Atom            XdndSelection;$/;"	m	struct:_GLFWlibraryX11
XdndStatus	thirdparty/glfw/src/x11_platform.h	/^    Atom            XdndStatus;$/;"	m	struct:_GLFWlibraryX11
XdndTypeList	thirdparty/glfw/src/x11_platform.h	/^    Atom            XdndTypeList;$/;"	m	struct:_GLFWlibraryX11
Xlist	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint16 Xlist[31*8+2]; \/\/ varies$/;"	m	struct:__anon205	file:
Xlist	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint16 Xlist[31*8+2]; \/\/ varies$/;"	m	struct:__anon118	file:
Y	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	X					: 88,$/;"	p	class:namespace.Codes
Y	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned char  Y;$/;"	m	class:CPU
Y0	thirdparty/imgui/include/imgui/imgui.h	/^        float                   X0, Y0, X1, Y1;$/;"	m	struct:ImFont::Glyph
Y1	thirdparty/imgui/include/imgui/imgui.h	/^        float                   X0, Y0, X1, Y1;$/;"	m	struct:ImFont::Glyph
YCbCr_to_RGB_kernel	thirdparty/stb/include/stb/stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step);$/;"	m	struct:__anon81
YTYPE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^typedef int YTYPE;$/;"	t	file:
YTYPE	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^typedef int16 YTYPE;$/;"	t	file:
YTYPE	thirdparty/stb/include/stb/stb_vorbis.c	/^typedef int YTYPE;$/;"	t	file:
YTYPE	thirdparty/stb/include/stb/stb_vorbis.c	/^typedef int16 YTYPE;$/;"	t	file:
Y_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule Y_rules[] =$/;"	v	file:
Yes	thirdparty/catch/include/catch/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Z	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	Y					: 89,$/;"	p	class:namespace.Codes
ZERO	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Keyboard.js	/^	DELETE				: 46,	\/\/ also NUM_DELETE$/;"	p	class:namespace.Codes
ZPI	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const float ZPI = 3.14159265358979323846f;$/;"	m	namespace:ImGuizmo	file:
Z_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule Z_rules[] =$/;"	v	file:
_ANONYMOUS_STRUCT	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	30;"	d
_ANONYMOUS_STRUCT	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	33;"	d
_ANONYMOUS_UNION	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	29;"	d
_ANONYMOUS_UNION	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	32;"	d
_CONDITION_EVENT_ALL	thirdparty/glfw/src/deps/tinycthread.c	137;"	d	file:
_CONDITION_EVENT_ONE	thirdparty/glfw/src/deps/tinycthread.c	136;"	d	file:
_CPOINT	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _CPOINT {$/;"	s
_CPU_H	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	2;"	d
_CRT_NONSTDC_NO_DEPRECATE	thirdparty/glfw/src/deps/stb_image_write.h	156;"	d
_CRT_NONSTDC_NO_DEPRECATE	thirdparty/stb/include/stb/stb_image_write.h	167;"	d
_CRT_SECURE_NO_WARNINGS	thirdparty/glfw/src/deps/stb_image_write.h	153;"	d
_CRT_SECURE_NO_WARNINGS	thirdparty/imgui/src/imgui.cpp	616;"	d	file:
_CRT_SECURE_NO_WARNINGS	thirdparty/imgui/src/imgui_draw.cpp	14;"	d	file:
_CRT_SECURE_NO_WARNINGS	thirdparty/soloud/src/core/soloud_file.cpp	25;"	d	file:
_CRT_SECURE_NO_WARNINGS	thirdparty/soloud/src/core/soloud_file.cpp	26;"	d	file:
_CRT_SECURE_NO_WARNINGS	thirdparty/stb/include/stb/stb_image_write.h	164;"	d
_Channels	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<ImDrawChannel> _Channels;          \/\/ [Internal] draw channels for columns API (not resized down so _ChannelsCount may be smaller than _Channels.Size)$/;"	m	struct:ImDrawList
_ChannelsCount	thirdparty/imgui/include/imgui/imgui.h	/^    int                     _ChannelsCount;     \/\/ [Internal] number of active channels (1+)$/;"	m	struct:ImDrawList
_ChannelsCurrent	thirdparty/imgui/include/imgui/imgui.h	/^    int                     _ChannelsCurrent;   \/\/ [Internal] current channel number (0)$/;"	m	struct:ImDrawList
_ClipRectStack	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<ImVec4>        _ClipRectStack;     \/\/ [Internal]$/;"	m	struct:ImDrawList
_DIACTIONA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _DIACTIONA {$/;"	s
_DIACTIONFORMATA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _DIACTIONFORMATA {$/;"	s
_DIACTIONFORMATW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _DIACTIONFORMATW {$/;"	s
_DIACTIONW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _DIACTIONW {$/;"	s
_DICOLORSET	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _DICOLORSET {$/;"	s
_DICONFIGUREDEVICESPARAMSA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _DICONFIGUREDEVICESPARAMSA {$/;"	s
_DICONFIGUREDEVICESPARAMSW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _DICONFIGUREDEVICESPARAMSW {$/;"	s
_DIDATAFORMAT	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _DIDATAFORMAT {$/;"	s
_DIDEVICEIMAGEINFOA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _DIDEVICEIMAGEINFOA {$/;"	s
_DIDEVICEIMAGEINFOHEADERA	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _DIDEVICEIMAGEINFOHEADERA {$/;"	s
_DIDEVICEIMAGEINFOHEADERW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _DIDEVICEIMAGEINFOHEADERW {$/;"	s
_DIDEVICEIMAGEINFOW	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _DIDEVICEIMAGEINFOW {$/;"	s
_DIOBJECTDATAFORMAT	thirdparty/glfw/src/deps/mingw/dinput.h	/^typedef struct _DIOBJECTDATAFORMAT {$/;"	s
_ERRNO_T_DEFINED	thirdparty/remotery/src/Remotery.c	1101;"	d	file:
_FEATURES_H	thirdparty/glfw/src/deps/tinycthread.h	62;"	d
_GLAD_IS_SOME_NEW_VERSION	thirdparty/glfw/src/deps/glad.c	31;"	d	file:
_GLFW_CONCAT_VERSION	thirdparty/glfw/src/internal.h	225;"	d
_GLFW_EGL_CONTEXT_STATE	thirdparty/glfw/src/egl_context.h	156;"	d
_GLFW_EGL_CONTEXT_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_EGL_CONTEXT_STATE;$/;"	m	struct:_GLFWcontext
_GLFW_EGL_CONTEXT_STATE	thirdparty/glfw/src/null_platform.h	37;"	d
_GLFW_EGL_LIBRARY_CONTEXT_STATE	thirdparty/glfw/src/egl_context.h	157;"	d
_GLFW_EGL_LIBRARY_CONTEXT_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_EGL_LIBRARY_CONTEXT_STATE;$/;"	m	struct:_GLFWlibrary
_GLFW_EGL_LIBRARY_CONTEXT_STATE	thirdparty/glfw/src/null_platform.h	38;"	d
_GLFW_EGL_NATIVE_DISPLAY	thirdparty/glfw/src/cocoa_platform.h	62;"	d
_GLFW_EGL_NATIVE_DISPLAY	thirdparty/glfw/src/mir_platform.h	59;"	d
_GLFW_EGL_NATIVE_DISPLAY	thirdparty/glfw/src/win32_platform.h	216;"	d
_GLFW_EGL_NATIVE_DISPLAY	thirdparty/glfw/src/wl_platform.h	61;"	d
_GLFW_EGL_NATIVE_DISPLAY	thirdparty/glfw/src/x11_platform.h	112;"	d
_GLFW_EGL_NATIVE_WINDOW	thirdparty/glfw/src/cocoa_platform.h	61;"	d
_GLFW_EGL_NATIVE_WINDOW	thirdparty/glfw/src/mir_platform.h	58;"	d
_GLFW_EGL_NATIVE_WINDOW	thirdparty/glfw/src/win32_platform.h	215;"	d
_GLFW_EGL_NATIVE_WINDOW	thirdparty/glfw/src/wl_platform.h	60;"	d
_GLFW_EGL_NATIVE_WINDOW	thirdparty/glfw/src/x11_platform.h	111;"	d
_GLFW_FIND_LOADER	thirdparty/glfw/src/vulkan.c	34;"	d	file:
_GLFW_INSERT_FIRST	thirdparty/glfw/src/internal.h	49;"	d
_GLFW_INSERT_LAST	thirdparty/glfw/src/internal.h	50;"	d
_GLFW_JOYSTICK_ID	thirdparty/glfw/src/internal.h	255;"	d
_GLFW_KEY_INVALID	thirdparty/glfw/src/win32_window.c	37;"	d	file:
_GLFW_MAKE_VERSION	thirdparty/glfw/src/internal.h	226;"	d
_GLFW_OSMESA_CONTEXT_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_OSMESA_CONTEXT_STATE;$/;"	m	struct:_GLFWcontext
_GLFW_OSMESA_CONTEXT_STATE	thirdparty/glfw/src/osmesa_context.h	57;"	d
_GLFW_OSMESA_LIBRARY_CONTEXT_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_OSMESA_LIBRARY_CONTEXT_STATE;$/;"	m	struct:_GLFWlibrary
_GLFW_OSMESA_LIBRARY_CONTEXT_STATE	thirdparty/glfw/src/osmesa_context.h	58;"	d
_GLFW_PLATFORM_CONTEXT_STATE	thirdparty/glfw/src/glx_context.h	110;"	d
_GLFW_PLATFORM_CONTEXT_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_PLATFORM_CONTEXT_STATE;$/;"	m	struct:_GLFWcontext
_GLFW_PLATFORM_CONTEXT_STATE	thirdparty/glfw/src/mir_platform.h	66;"	d
_GLFW_PLATFORM_CONTEXT_STATE	thirdparty/glfw/src/nsgl_context.h	27;"	d
_GLFW_PLATFORM_CONTEXT_STATE	thirdparty/glfw/src/null_platform.h	32;"	d
_GLFW_PLATFORM_CONTEXT_STATE	thirdparty/glfw/src/wgl_context.h	104;"	d
_GLFW_PLATFORM_CONTEXT_STATE	thirdparty/glfw/src/wl_platform.h	68;"	d
_GLFW_PLATFORM_CURSOR_STATE	thirdparty/glfw/src/cocoa_platform.h	68;"	d
_GLFW_PLATFORM_CURSOR_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_PLATFORM_CURSOR_STATE;$/;"	m	struct:_GLFWcursor
_GLFW_PLATFORM_CURSOR_STATE	thirdparty/glfw/src/mir_platform.h	64;"	d
_GLFW_PLATFORM_CURSOR_STATE	thirdparty/glfw/src/null_platform.h	34;"	d
_GLFW_PLATFORM_CURSOR_STATE	thirdparty/glfw/src/win32_platform.h	222;"	d
_GLFW_PLATFORM_CURSOR_STATE	thirdparty/glfw/src/wl_platform.h	66;"	d
_GLFW_PLATFORM_CURSOR_STATE	thirdparty/glfw/src/x11_platform.h	117;"	d
_GLFW_PLATFORM_JOYSTICK_STATE	thirdparty/glfw/src/cocoa_joystick.h	32;"	d
_GLFW_PLATFORM_JOYSTICK_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_PLATFORM_JOYSTICK_STATE;$/;"	m	struct:_GLFWjoystick
_GLFW_PLATFORM_JOYSTICK_STATE	thirdparty/glfw/src/linux_joystick.h	31;"	d
_GLFW_PLATFORM_JOYSTICK_STATE	thirdparty/glfw/src/null_joystick.h	27;"	d
_GLFW_PLATFORM_JOYSTICK_STATE	thirdparty/glfw/src/win32_joystick.h	27;"	d
_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE	thirdparty/glfw/src/glx_context.h	111;"	d
_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_PLATFORM_LIBRARY_CONTEXT_STATE;$/;"	m	struct:_GLFWlibrary
_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE	thirdparty/glfw/src/mir_platform.h	67;"	d
_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE	thirdparty/glfw/src/nsgl_context.h	28;"	d
_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE	thirdparty/glfw/src/null_platform.h	36;"	d
_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE	thirdparty/glfw/src/wgl_context.h	105;"	d
_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE	thirdparty/glfw/src/wl_platform.h	69;"	d
_GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE	thirdparty/glfw/src/cocoa_joystick.h	33;"	d
_GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE;$/;"	m	struct:_GLFWlibrary
_GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE	thirdparty/glfw/src/linux_joystick.h	32;"	d
_GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE	thirdparty/glfw/src/null_joystick.h	28;"	d
_GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE	thirdparty/glfw/src/win32_joystick.h	28;"	d
_GLFW_PLATFORM_LIBRARY_TIMER_STATE	thirdparty/glfw/src/cocoa_platform.h	66;"	d
_GLFW_PLATFORM_LIBRARY_TIMER_STATE	thirdparty/glfw/src/internal.h	/^        _GLFW_PLATFORM_LIBRARY_TIMER_STATE;$/;"	m	struct:_GLFWlibrary::__anon164
_GLFW_PLATFORM_LIBRARY_TIMER_STATE	thirdparty/glfw/src/posix_time.h	28;"	d
_GLFW_PLATFORM_LIBRARY_TIMER_STATE	thirdparty/glfw/src/win32_platform.h	220;"	d
_GLFW_PLATFORM_LIBRARY_WINDOW_STATE	thirdparty/glfw/src/cocoa_platform.h	65;"	d
_GLFW_PLATFORM_LIBRARY_WINDOW_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_PLATFORM_LIBRARY_WINDOW_STATE;$/;"	m	struct:_GLFWlibrary
_GLFW_PLATFORM_LIBRARY_WINDOW_STATE	thirdparty/glfw/src/mir_platform.h	63;"	d
_GLFW_PLATFORM_LIBRARY_WINDOW_STATE	thirdparty/glfw/src/null_platform.h	35;"	d
_GLFW_PLATFORM_LIBRARY_WINDOW_STATE	thirdparty/glfw/src/win32_platform.h	219;"	d
_GLFW_PLATFORM_LIBRARY_WINDOW_STATE	thirdparty/glfw/src/wl_platform.h	64;"	d
_GLFW_PLATFORM_LIBRARY_WINDOW_STATE	thirdparty/glfw/src/x11_platform.h	115;"	d
_GLFW_PLATFORM_MONITOR_STATE	thirdparty/glfw/src/cocoa_platform.h	67;"	d
_GLFW_PLATFORM_MONITOR_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_PLATFORM_MONITOR_STATE;$/;"	m	struct:_GLFWmonitor
_GLFW_PLATFORM_MONITOR_STATE	thirdparty/glfw/src/mir_platform.h	62;"	d
_GLFW_PLATFORM_MONITOR_STATE	thirdparty/glfw/src/null_platform.h	33;"	d
_GLFW_PLATFORM_MONITOR_STATE	thirdparty/glfw/src/win32_platform.h	221;"	d
_GLFW_PLATFORM_MONITOR_STATE	thirdparty/glfw/src/wl_platform.h	65;"	d
_GLFW_PLATFORM_MONITOR_STATE	thirdparty/glfw/src/x11_platform.h	116;"	d
_GLFW_PLATFORM_MUTEX_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_PLATFORM_MUTEX_STATE;$/;"	m	struct:_GLFWmutex
_GLFW_PLATFORM_MUTEX_STATE	thirdparty/glfw/src/posix_thread.h	31;"	d
_GLFW_PLATFORM_MUTEX_STATE	thirdparty/glfw/src/win32_platform.h	224;"	d
_GLFW_PLATFORM_TLS_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_PLATFORM_TLS_STATE;$/;"	m	struct:_GLFWtls
_GLFW_PLATFORM_TLS_STATE	thirdparty/glfw/src/posix_thread.h	30;"	d
_GLFW_PLATFORM_TLS_STATE	thirdparty/glfw/src/win32_platform.h	223;"	d
_GLFW_PLATFORM_WINDOW_STATE	thirdparty/glfw/src/cocoa_platform.h	64;"	d
_GLFW_PLATFORM_WINDOW_STATE	thirdparty/glfw/src/internal.h	/^    _GLFW_PLATFORM_WINDOW_STATE;$/;"	m	struct:_GLFWwindow
_GLFW_PLATFORM_WINDOW_STATE	thirdparty/glfw/src/mir_platform.h	61;"	d
_GLFW_PLATFORM_WINDOW_STATE	thirdparty/glfw/src/null_platform.h	30;"	d
_GLFW_PLATFORM_WINDOW_STATE	thirdparty/glfw/src/win32_platform.h	218;"	d
_GLFW_PLATFORM_WINDOW_STATE	thirdparty/glfw/src/wl_platform.h	63;"	d
_GLFW_PLATFORM_WINDOW_STATE	thirdparty/glfw/src/x11_platform.h	114;"	d
_GLFW_POLL_AXES	thirdparty/glfw/src/internal.h	53;"	d
_GLFW_POLL_BUTTONS	thirdparty/glfw/src/internal.h	54;"	d
_GLFW_POLL_PRESENCE	thirdparty/glfw/src/internal.h	52;"	d
_GLFW_RECREATION_IMPOSSIBLE	thirdparty/glfw/src/wgl_context.h	102;"	d
_GLFW_RECREATION_NOT_NEEDED	thirdparty/glfw/src/wgl_context.h	100;"	d
_GLFW_RECREATION_REQUIRED	thirdparty/glfw/src/wgl_context.h	101;"	d
_GLFW_REQUIRE_INIT	thirdparty/glfw/src/internal.h	232;"	d
_GLFW_REQUIRE_INIT_OR_RETURN	thirdparty/glfw/src/internal.h	238;"	d
_GLFW_REQUIRE_LOADER	thirdparty/glfw/src/vulkan.c	35;"	d	file:
_GLFW_STICK	thirdparty/glfw/src/input.c	36;"	d	file:
_GLFW_SWAP_POINTERS	thirdparty/glfw/src/internal.h	246;"	d
_GLFW_TYPE_AXIS	thirdparty/glfw/src/win32_joystick.c	32;"	d	file:
_GLFW_TYPE_BUTTON	thirdparty/glfw/src/win32_joystick.c	34;"	d	file:
_GLFW_TYPE_POV	thirdparty/glfw/src/win32_joystick.c	35;"	d	file:
_GLFW_TYPE_SLIDER	thirdparty/glfw/src/win32_joystick.c	33;"	d	file:
_GLFW_VERSION_NUMBER	thirdparty/glfw/src/internal.h	227;"	d
_GLFW_WNDCLASSNAME	thirdparty/glfw/src/win32_platform.h	209;"	d
_GLFW_XDND_VERSION	thirdparty/glfw/src/x11_window.c	51;"	d	file:
_GLFWcontext	thirdparty/glfw/src/internal.h	/^struct _GLFWcontext$/;"	s
_GLFWcontext	thirdparty/glfw/src/internal.h	/^typedef struct _GLFWcontext     _GLFWcontext;$/;"	t	typeref:struct:_GLFWcontext
_GLFWcontextEGL	thirdparty/glfw/src/egl_context.h	/^typedef struct _GLFWcontextEGL$/;"	s
_GLFWcontextEGL	thirdparty/glfw/src/egl_context.h	/^} _GLFWcontextEGL;$/;"	t	typeref:struct:_GLFWcontextEGL
_GLFWcontextGLX	thirdparty/glfw/src/glx_context.h	/^typedef struct _GLFWcontextGLX$/;"	s
_GLFWcontextGLX	thirdparty/glfw/src/glx_context.h	/^} _GLFWcontextGLX;$/;"	t	typeref:struct:_GLFWcontextGLX
_GLFWcontextNSGL	thirdparty/glfw/src/nsgl_context.h	/^typedef struct _GLFWcontextNSGL$/;"	s
_GLFWcontextNSGL	thirdparty/glfw/src/nsgl_context.h	/^} _GLFWcontextNSGL;$/;"	t	typeref:struct:_GLFWcontextNSGL
_GLFWcontextOSMesa	thirdparty/glfw/src/osmesa_context.h	/^typedef struct _GLFWcontextOSMesa$/;"	s
_GLFWcontextOSMesa	thirdparty/glfw/src/osmesa_context.h	/^} _GLFWcontextOSMesa;$/;"	t	typeref:struct:_GLFWcontextOSMesa
_GLFWcontextWGL	thirdparty/glfw/src/wgl_context.h	/^typedef struct _GLFWcontextWGL$/;"	s
_GLFWcontextWGL	thirdparty/glfw/src/wgl_context.h	/^} _GLFWcontextWGL;$/;"	t	typeref:struct:_GLFWcontextWGL
_GLFWctxconfig	thirdparty/glfw/src/internal.h	/^struct _GLFWctxconfig$/;"	s
_GLFWctxconfig	thirdparty/glfw/src/internal.h	/^typedef struct _GLFWctxconfig   _GLFWctxconfig;$/;"	t	typeref:struct:_GLFWctxconfig
_GLFWcursor	thirdparty/glfw/src/internal.h	/^struct _GLFWcursor$/;"	s
_GLFWcursor	thirdparty/glfw/src/internal.h	/^typedef struct _GLFWcursor      _GLFWcursor;$/;"	t	typeref:struct:_GLFWcursor
_GLFWcursorMir	thirdparty/glfw/src/mir_platform.h	/^typedef struct _GLFWcursorMir$/;"	s
_GLFWcursorMir	thirdparty/glfw/src/mir_platform.h	/^} _GLFWcursorMir;$/;"	t	typeref:struct:_GLFWcursorMir
_GLFWcursorNS	thirdparty/glfw/src/cocoa_platform.h	/^typedef struct _GLFWcursorNS$/;"	s
_GLFWcursorNS	thirdparty/glfw/src/cocoa_platform.h	/^} _GLFWcursorNS;$/;"	t	typeref:struct:_GLFWcursorNS
_GLFWcursorWayland	thirdparty/glfw/src/wl_platform.h	/^typedef struct _GLFWcursorWayland$/;"	s
_GLFWcursorWayland	thirdparty/glfw/src/wl_platform.h	/^} _GLFWcursorWayland;$/;"	t	typeref:struct:_GLFWcursorWayland
_GLFWcursorWin32	thirdparty/glfw/src/win32_platform.h	/^typedef struct _GLFWcursorWin32$/;"	s
_GLFWcursorWin32	thirdparty/glfw/src/win32_platform.h	/^} _GLFWcursorWin32;$/;"	t	typeref:struct:_GLFWcursorWin32
_GLFWcursorX11	thirdparty/glfw/src/x11_platform.h	/^typedef struct _GLFWcursorX11$/;"	s
_GLFWcursorX11	thirdparty/glfw/src/x11_platform.h	/^} _GLFWcursorX11;$/;"	t	typeref:struct:_GLFWcursorX11
_GLFWdestroycontextfun	thirdparty/glfw/src/internal.h	/^typedef void (* _GLFWdestroycontextfun)(_GLFWwindow*);$/;"	t
_GLFWerror	thirdparty/glfw/src/internal.h	/^struct _GLFWerror$/;"	s
_GLFWerror	thirdparty/glfw/src/internal.h	/^typedef struct _GLFWerror       _GLFWerror;$/;"	t	typeref:struct:_GLFWerror
_GLFWextensionsupportedfun	thirdparty/glfw/src/internal.h	/^typedef int (* _GLFWextensionsupportedfun)(const char*);$/;"	t
_GLFWfbconfig	thirdparty/glfw/src/internal.h	/^struct _GLFWfbconfig$/;"	s
_GLFWfbconfig	thirdparty/glfw/src/internal.h	/^typedef struct _GLFWfbconfig    _GLFWfbconfig;$/;"	t	typeref:struct:_GLFWfbconfig
_GLFWgetprocaddressfun	thirdparty/glfw/src/internal.h	/^typedef GLFWglproc (* _GLFWgetprocaddressfun)(const char*);$/;"	t
_GLFWinitconfig	thirdparty/glfw/src/internal.h	/^struct _GLFWinitconfig$/;"	s
_GLFWinitconfig	thirdparty/glfw/src/internal.h	/^typedef struct _GLFWinitconfig  _GLFWinitconfig;$/;"	t	typeref:struct:_GLFWinitconfig
_GLFWjoyobjectWin32	thirdparty/glfw/src/win32_joystick.h	/^typedef struct _GLFWjoyobjectWin32$/;"	s
_GLFWjoyobjectWin32	thirdparty/glfw/src/win32_joystick.h	/^} _GLFWjoyobjectWin32;$/;"	t	typeref:struct:_GLFWjoyobjectWin32
_GLFWjoystick	thirdparty/glfw/src/internal.h	/^struct _GLFWjoystick$/;"	s
_GLFWjoystick	thirdparty/glfw/src/internal.h	/^typedef struct _GLFWjoystick    _GLFWjoystick;$/;"	t	typeref:struct:_GLFWjoystick
_GLFWjoystickLinux	thirdparty/glfw/src/linux_joystick.h	/^typedef struct _GLFWjoystickLinux$/;"	s
_GLFWjoystickLinux	thirdparty/glfw/src/linux_joystick.h	/^} _GLFWjoystickLinux;$/;"	t	typeref:struct:_GLFWjoystickLinux
_GLFWjoystickNS	thirdparty/glfw/src/cocoa_joystick.h	/^typedef struct _GLFWjoystickNS$/;"	s
_GLFWjoystickNS	thirdparty/glfw/src/cocoa_joystick.h	/^} _GLFWjoystickNS;$/;"	t	typeref:struct:_GLFWjoystickNS
_GLFWjoystickWin32	thirdparty/glfw/src/win32_joystick.h	/^typedef struct _GLFWjoystickWin32$/;"	s
_GLFWjoystickWin32	thirdparty/glfw/src/win32_joystick.h	/^} _GLFWjoystickWin32;$/;"	t	typeref:struct:_GLFWjoystickWin32
_GLFWlibrary	thirdparty/glfw/src/internal.h	/^struct _GLFWlibrary$/;"	s
_GLFWlibrary	thirdparty/glfw/src/internal.h	/^typedef struct _GLFWlibrary     _GLFWlibrary;$/;"	t	typeref:struct:_GLFWlibrary
_GLFWlibraryEGL	thirdparty/glfw/src/egl_context.h	/^typedef struct _GLFWlibraryEGL$/;"	s
_GLFWlibraryEGL	thirdparty/glfw/src/egl_context.h	/^} _GLFWlibraryEGL;$/;"	t	typeref:struct:_GLFWlibraryEGL
_GLFWlibraryGLX	thirdparty/glfw/src/glx_context.h	/^typedef struct _GLFWlibraryGLX$/;"	s
_GLFWlibraryGLX	thirdparty/glfw/src/glx_context.h	/^} _GLFWlibraryGLX;$/;"	t	typeref:struct:_GLFWlibraryGLX
_GLFWlibraryLinux	thirdparty/glfw/src/linux_joystick.h	/^typedef struct _GLFWlibraryLinux$/;"	s
_GLFWlibraryLinux	thirdparty/glfw/src/linux_joystick.h	/^} _GLFWlibraryLinux;$/;"	t	typeref:struct:_GLFWlibraryLinux
_GLFWlibraryMir	thirdparty/glfw/src/mir_platform.h	/^typedef struct _GLFWlibraryMir$/;"	s
_GLFWlibraryMir	thirdparty/glfw/src/mir_platform.h	/^} _GLFWlibraryMir;$/;"	t	typeref:struct:_GLFWlibraryMir
_GLFWlibraryNS	thirdparty/glfw/src/cocoa_platform.h	/^typedef struct _GLFWlibraryNS$/;"	s
_GLFWlibraryNS	thirdparty/glfw/src/cocoa_platform.h	/^} _GLFWlibraryNS;$/;"	t	typeref:struct:_GLFWlibraryNS
_GLFWlibraryNSGL	thirdparty/glfw/src/nsgl_context.h	/^typedef struct _GLFWlibraryNSGL$/;"	s
_GLFWlibraryNSGL	thirdparty/glfw/src/nsgl_context.h	/^} _GLFWlibraryNSGL;$/;"	t	typeref:struct:_GLFWlibraryNSGL
_GLFWlibraryOSMesa	thirdparty/glfw/src/osmesa_context.h	/^typedef struct _GLFWlibraryOSMesa$/;"	s
_GLFWlibraryOSMesa	thirdparty/glfw/src/osmesa_context.h	/^} _GLFWlibraryOSMesa;$/;"	t	typeref:struct:_GLFWlibraryOSMesa
_GLFWlibraryWGL	thirdparty/glfw/src/wgl_context.h	/^typedef struct _GLFWlibraryWGL$/;"	s
_GLFWlibraryWGL	thirdparty/glfw/src/wgl_context.h	/^} _GLFWlibraryWGL;$/;"	t	typeref:struct:_GLFWlibraryWGL
_GLFWlibraryWayland	thirdparty/glfw/src/wl_platform.h	/^typedef struct _GLFWlibraryWayland$/;"	s
_GLFWlibraryWayland	thirdparty/glfw/src/wl_platform.h	/^} _GLFWlibraryWayland;$/;"	t	typeref:struct:_GLFWlibraryWayland
_GLFWlibraryWin32	thirdparty/glfw/src/win32_platform.h	/^typedef struct _GLFWlibraryWin32$/;"	s
_GLFWlibraryWin32	thirdparty/glfw/src/win32_platform.h	/^} _GLFWlibraryWin32;$/;"	t	typeref:struct:_GLFWlibraryWin32
_GLFWlibraryX11	thirdparty/glfw/src/x11_platform.h	/^typedef struct _GLFWlibraryX11$/;"	s
_GLFWlibraryX11	thirdparty/glfw/src/x11_platform.h	/^} _GLFWlibraryX11;$/;"	t	typeref:struct:_GLFWlibraryX11
_GLFWmakecontextcurrentfun	thirdparty/glfw/src/internal.h	/^typedef void (* _GLFWmakecontextcurrentfun)(_GLFWwindow*);$/;"	t
_GLFWmonitor	thirdparty/glfw/src/internal.h	/^struct _GLFWmonitor$/;"	s
_GLFWmonitor	thirdparty/glfw/src/internal.h	/^typedef struct _GLFWmonitor     _GLFWmonitor;$/;"	t	typeref:struct:_GLFWmonitor
_GLFWmonitorMir	thirdparty/glfw/src/mir_platform.h	/^typedef struct _GLFWmonitorMir$/;"	s
_GLFWmonitorMir	thirdparty/glfw/src/mir_platform.h	/^} _GLFWmonitorMir;$/;"	t	typeref:struct:_GLFWmonitorMir
_GLFWmonitorNS	thirdparty/glfw/src/cocoa_platform.h	/^typedef struct _GLFWmonitorNS$/;"	s
_GLFWmonitorNS	thirdparty/glfw/src/cocoa_platform.h	/^} _GLFWmonitorNS;$/;"	t	typeref:struct:_GLFWmonitorNS
_GLFWmonitorWayland	thirdparty/glfw/src/wl_platform.h	/^typedef struct _GLFWmonitorWayland$/;"	s
_GLFWmonitorWayland	thirdparty/glfw/src/wl_platform.h	/^} _GLFWmonitorWayland;$/;"	t	typeref:struct:_GLFWmonitorWayland
_GLFWmonitorWin32	thirdparty/glfw/src/win32_platform.h	/^typedef struct _GLFWmonitorWin32$/;"	s
_GLFWmonitorWin32	thirdparty/glfw/src/win32_platform.h	/^} _GLFWmonitorWin32;$/;"	t	typeref:struct:_GLFWmonitorWin32
_GLFWmonitorX11	thirdparty/glfw/src/x11_platform.h	/^typedef struct _GLFWmonitorX11$/;"	s
_GLFWmonitorX11	thirdparty/glfw/src/x11_platform.h	/^} _GLFWmonitorX11;$/;"	t	typeref:struct:_GLFWmonitorX11
_GLFWmutex	thirdparty/glfw/src/internal.h	/^struct _GLFWmutex$/;"	s
_GLFWmutex	thirdparty/glfw/src/internal.h	/^typedef struct _GLFWmutex       _GLFWmutex;$/;"	t	typeref:struct:_GLFWmutex
_GLFWmutexPOSIX	thirdparty/glfw/src/posix_thread.h	/^typedef struct _GLFWmutexPOSIX$/;"	s
_GLFWmutexPOSIX	thirdparty/glfw/src/posix_thread.h	/^} _GLFWmutexPOSIX;$/;"	t	typeref:struct:_GLFWmutexPOSIX
_GLFWmutexWin32	thirdparty/glfw/src/win32_platform.h	/^typedef struct _GLFWmutexWin32$/;"	s
_GLFWmutexWin32	thirdparty/glfw/src/win32_platform.h	/^} _GLFWmutexWin32;$/;"	t	typeref:struct:_GLFWmutexWin32
_GLFWobjenumWin32	thirdparty/glfw/src/win32_joystick.c	/^typedef struct _GLFWobjenumWin32$/;"	s	file:
_GLFWobjenumWin32	thirdparty/glfw/src/win32_joystick.c	/^} _GLFWobjenumWin32;$/;"	t	typeref:struct:_GLFWobjenumWin32	file:
_GLFWswapbuffersfun	thirdparty/glfw/src/internal.h	/^typedef void (* _GLFWswapbuffersfun)(_GLFWwindow*);$/;"	t
_GLFWswapintervalfun	thirdparty/glfw/src/internal.h	/^typedef void (* _GLFWswapintervalfun)(int);$/;"	t
_GLFWtimerNS	thirdparty/glfw/src/cocoa_platform.h	/^typedef struct _GLFWtimerNS$/;"	s
_GLFWtimerNS	thirdparty/glfw/src/cocoa_platform.h	/^} _GLFWtimerNS;$/;"	t	typeref:struct:_GLFWtimerNS
_GLFWtimerPOSIX	thirdparty/glfw/src/posix_time.h	/^typedef struct _GLFWtimerPOSIX$/;"	s
_GLFWtimerPOSIX	thirdparty/glfw/src/posix_time.h	/^} _GLFWtimerPOSIX;$/;"	t	typeref:struct:_GLFWtimerPOSIX
_GLFWtimerWin32	thirdparty/glfw/src/win32_platform.h	/^typedef struct _GLFWtimerWin32$/;"	s
_GLFWtimerWin32	thirdparty/glfw/src/win32_platform.h	/^} _GLFWtimerWin32;$/;"	t	typeref:struct:_GLFWtimerWin32
_GLFWtls	thirdparty/glfw/src/internal.h	/^struct _GLFWtls$/;"	s
_GLFWtls	thirdparty/glfw/src/internal.h	/^typedef struct _GLFWtls         _GLFWtls;$/;"	t	typeref:struct:_GLFWtls
_GLFWtlsPOSIX	thirdparty/glfw/src/posix_thread.h	/^typedef struct _GLFWtlsPOSIX$/;"	s
_GLFWtlsPOSIX	thirdparty/glfw/src/posix_thread.h	/^} _GLFWtlsPOSIX;$/;"	t	typeref:struct:_GLFWtlsPOSIX
_GLFWtlsWin32	thirdparty/glfw/src/win32_platform.h	/^typedef struct _GLFWtlsWin32$/;"	s
_GLFWtlsWin32	thirdparty/glfw/src/win32_platform.h	/^} _GLFWtlsWin32;$/;"	t	typeref:struct:_GLFWtlsWin32
_GLFWwindow	thirdparty/glfw/src/internal.h	/^struct _GLFWwindow$/;"	s
_GLFWwindow	thirdparty/glfw/src/internal.h	/^typedef struct _GLFWwindow      _GLFWwindow;$/;"	t	typeref:struct:_GLFWwindow
_GLFWwindowMir	thirdparty/glfw/src/mir_platform.h	/^typedef struct _GLFWwindowMir$/;"	s
_GLFWwindowMir	thirdparty/glfw/src/mir_platform.h	/^} _GLFWwindowMir;$/;"	t	typeref:struct:_GLFWwindowMir
_GLFWwindowNS	thirdparty/glfw/src/cocoa_platform.h	/^typedef struct _GLFWwindowNS$/;"	s
_GLFWwindowNS	thirdparty/glfw/src/cocoa_platform.h	/^} _GLFWwindowNS;$/;"	t	typeref:struct:_GLFWwindowNS
_GLFWwindowNull	thirdparty/glfw/src/null_platform.h	/^typedef struct _GLFWwindowNull$/;"	s
_GLFWwindowNull	thirdparty/glfw/src/null_platform.h	/^} _GLFWwindowNull;$/;"	t	typeref:struct:_GLFWwindowNull
_GLFWwindowWayland	thirdparty/glfw/src/wl_platform.h	/^typedef struct _GLFWwindowWayland$/;"	s
_GLFWwindowWayland	thirdparty/glfw/src/wl_platform.h	/^} _GLFWwindowWayland;$/;"	t	typeref:struct:_GLFWwindowWayland
_GLFWwindowWin32	thirdparty/glfw/src/win32_platform.h	/^typedef struct _GLFWwindowWin32$/;"	s
_GLFWwindowWin32	thirdparty/glfw/src/win32_platform.h	/^} _GLFWwindowWin32;$/;"	t	typeref:struct:_GLFWwindowWin32
_GLFWwindowX11	thirdparty/glfw/src/x11_platform.h	/^typedef struct _GLFWwindowX11$/;"	s
_GLFWwindowX11	thirdparty/glfw/src/x11_platform.h	/^} _GLFWwindowX11;$/;"	t	typeref:struct:_GLFWwindowX11
_GLFWwndconfig	thirdparty/glfw/src/internal.h	/^struct _GLFWwndconfig$/;"	s
_GLFWwndconfig	thirdparty/glfw/src/internal.h	/^typedef struct _GLFWwndconfig   _GLFWwndconfig;$/;"	t	typeref:struct:_GLFWwndconfig
_GNU_SOURCE	thirdparty/glfw/src/deps/tinycthread.h	64;"	d
_GNU_SOURCE	thirdparty/glfw/src/wl_window.c	27;"	d	file:
_IdxWritePtr	thirdparty/imgui/include/imgui/imgui.h	/^    ImDrawIdx*              _IdxWritePtr;       \/\/ [Internal] point within IdxBuffer.Data after each add command (to avoid using the ImVector<> operators too much)$/;"	m	struct:ImDrawList
_MATH_NS_CLOSE	lib/math/include/math/detail/detail.hpp	12;"	d
_MATH_NS_OPEN	lib/math/include/math/detail/detail.hpp	11;"	d
_MEM_H	thirdparty/soloud/src/tools/tedsid2dump/mem.h	2;"	d
_MEM_PATCH	thirdparty/soloud/src/tools/tedsid2dump/types.h	/^typedef struct _MEM_PATCH {$/;"	s
_MSC_STDINT_H_	thirdparty/glfw/src/deps/vs2008/stdint.h	37;"	d
_NET_WM_STATE_ADD	thirdparty/glfw/src/x11_window.c	44;"	d	file:
_NET_WM_STATE_REMOVE	thirdparty/glfw/src/x11_window.c	43;"	d	file:
_NET_WM_STATE_TOGGLE	thirdparty/glfw/src/x11_window.c	45;"	d	file:
_OwnerName	thirdparty/imgui/include/imgui/imgui.h	/^    const char*             _OwnerName;         \/\/ Pointer to owner window's name for debugging$/;"	m	struct:ImDrawList
_POSIX_C_SOURCE	thirdparty/glfw/src/deps/tinycthread.h	67;"	d
_POSIX_C_SOURCE	thirdparty/glfw/src/deps/tinycthread.h	68;"	d
_Path	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<ImVec2>        _Path;              \/\/ [Internal] current path building$/;"	m	struct:ImDrawList
_SID_H	thirdparty/soloud/src/audiosource/tedsid/sid.h	2;"	d
_SID_H	thirdparty/soloud/src/tools/tedsid2dump/sid.h	2;"	d
_STRUCT_NAME	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	37;"	d
_STRUCT_NAME	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	40;"	d
_TEDMEM_H	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	13;"	d
_TINYCTHREAD_H_	thirdparty/glfw/src/deps/tinycthread.h	25;"	d
_TINYDIR_DIR	thirdparty/tinydir/include/tinydir/tinydir.h	150;"	d
_TINYDIR_DIR	thirdparty/tinydir/include/tinydir/tinydir.h	156;"	d
_TINYDIR_DRIVE_MAX	thirdparty/tinydir/include/tinydir/tinydir.h	104;"	d
_TINYDIR_FILENAME_MAX	thirdparty/tinydir/include/tinydir/tinydir.h	101;"	d
_TINYDIR_FREE	thirdparty/tinydir/include/tinydir/tinydir.h	173;"	d
_TINYDIR_FUNC	thirdparty/tinydir/include/tinydir/tinydir.h	108;"	d
_TINYDIR_FUNC	thirdparty/tinydir/include/tinydir/tinydir.h	110;"	d
_TINYDIR_FUNC	thirdparty/tinydir/include/tinydir/tinydir.h	112;"	d
_TINYDIR_HAS_DIRFD	thirdparty/tinydir/include/tinydir/tinydir.h	130;"	d
_TINYDIR_HAS_FPATHCONF	thirdparty/tinydir/include/tinydir/tinydir.h	125;"	d
_TINYDIR_HAS_READDIR_R	thirdparty/tinydir/include/tinydir/tinydir.h	122;"	d
_TINYDIR_MALLOC	thirdparty/tinydir/include/tinydir/tinydir.h	172;"	d
_TINYDIR_PATH_EXTRA	thirdparty/tinydir/include/tinydir/tinydir.h	96;"	d
_TINYDIR_PATH_EXTRA	thirdparty/tinydir/include/tinydir/tinydir.h	98;"	d
_TINYDIR_PATH_MAX	thirdparty/tinydir/include/tinydir/tinydir.h	86;"	d
_TINYDIR_PATH_MAX	thirdparty/tinydir/include/tinydir/tinydir.h	89;"	d
_TINYDIR_PATH_MAX	thirdparty/tinydir/include/tinydir/tinydir.h	91;"	d
_TINYDIR_USE_FPATHCONF	thirdparty/tinydir/include/tinydir/tinydir.h	135;"	d
_TINYDIR_USE_READDIR	thirdparty/tinydir/include/tinydir/tinydir.h	139;"	d
_TINYDIR_USE_READDIR	thirdparty/tinydir/include/tinydir/tinydir.h	144;"	d
_TTHREAD_EMULATE_CLOCK_GETTIME_	thirdparty/glfw/src/deps/tinycthread.h	109;"	d
_TTHREAD_PLATFORM_DEFINED_	thirdparty/glfw/src/deps/tinycthread.h	57;"	d
_TTHREAD_POSIX_	thirdparty/glfw/src/deps/tinycthread.h	55;"	d
_TTHREAD_WIN32_	thirdparty/glfw/src/deps/tinycthread.h	53;"	d
_TYPES_H	thirdparty/soloud/src/tools/tedsid2dump/types.h	2;"	d
_TextureIdStack	thirdparty/imgui/include/imgui/imgui.h	/^    ImVector<ImTextureID>   _TextureIdStack;    \/\/ [Internal]$/;"	m	struct:ImDrawList
_Thread_local	thirdparty/glfw/src/deps/tinycthread.h	161;"	d
_Thread_local	thirdparty/glfw/src/deps/tinycthread.h	163;"	d
_UNICODE	thirdparty/tinydir/include/tinydir/tinydir.h	38;"	d
_UNION_NAME	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	36;"	d
_UNION_NAME	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	39;"	d
_VtxCurrentIdx	thirdparty/imgui/include/imgui/imgui.h	/^    unsigned int            _VtxCurrentIdx;     \/\/ [Internal] == VtxBuffer.Size$/;"	m	struct:ImDrawList
_VtxWritePtr	thirdparty/imgui/include/imgui/imgui.h	/^    ImDrawVert*             _VtxWritePtr;       \/\/ [Internal] point within VtxBuffer.Data after each add command (to avoid using the ImVector<> operators too much)$/;"	m	struct:ImDrawList
_W64	thirdparty/glfw/src/deps/vs2008/stdint.h	60;"	d
_W64	thirdparty/glfw/src/deps/vs2008/stdint.h	62;"	d
_WIN32	thirdparty/glfw/include/GLFW/glfw3.h	96;"	d
_WIN32_WINNT	thirdparty/glfw/src/win32_platform.h	57;"	d
_WIN32_WINNT	thirdparty/glfw/src/win32_platform.h	58;"	d
_XINPUT_BATTERY_INFORMATION	thirdparty/glfw/src/deps/mingw/xinput.h	/^typedef struct _XINPUT_BATTERY_INFORMATION$/;"	s
_XINPUT_CAPABILITIES	thirdparty/glfw/src/deps/mingw/xinput.h	/^typedef struct _XINPUT_CAPABILITIES {$/;"	s
_XINPUT_GAMEPAD	thirdparty/glfw/src/deps/mingw/xinput.h	/^typedef struct _XINPUT_GAMEPAD {$/;"	s
_XINPUT_KEYSTROKE	thirdparty/glfw/src/deps/mingw/xinput.h	/^typedef struct _XINPUT_KEYSTROKE {$/;"	s
_XINPUT_STATE	thirdparty/glfw/src/deps/mingw/xinput.h	/^typedef struct _XINPUT_STATE {$/;"	s
_XINPUT_VIBRATION	thirdparty/glfw/src/deps/mingw/xinput.h	/^typedef struct _XINPUT_VIBRATION {$/;"	s
_XOPEN_SOURCE	thirdparty/glfw/src/deps/tinycthread.h	71;"	d
_XOPEN_SOURCE	thirdparty/glfw/src/deps/tinycthread.h	72;"	d
__ANONYMOUS_DEFINED	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	27;"	d
__DINPUT_INCLUDED__	thirdparty/glfw/src/deps/mingw/dinput.h	20;"	d
__GLXextproc	thirdparty/glfw/src/glx_context.h	/^typedef void (*__GLXextproc)(void);$/;"	t
__GNU_EXTENSION	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	20;"	d
__GNU_EXTENSION	thirdparty/glfw/src/deps/mingw/_mingw_dxhelper.h	22;"	d
__STB_INCLUDE_STB_TRUETYPE_H__	thirdparty/stb/include/stb/stb_truetype.h	467;"	d
__UNDEF_LEAN_AND_MEAN	thirdparty/glfw/src/deps/tinycthread.h	86;"	d
__UNDEF_LEAN_AND_MEAN	thirdparty/glfw/src/deps/tinycthread.h	91;"	d
__WINE_XINPUT_H	thirdparty/glfw/src/deps/mingw/xinput.h	21;"	d
__forceinline	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	580;"	d	file:
__forceinline	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	582;"	d	file:
__forceinline	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	585;"	d	file:
__forceinline	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	587;"	d	file:
__forceinline	thirdparty/stb/include/stb/stb_vorbis.c	577;"	d	file:
__forceinline	thirdparty/stb/include/stb/stb_vorbis.c	579;"	d	file:
__forceinline	thirdparty/stb/include/stb/stb_vorbis.c	583;"	d	file:
__forceinline	thirdparty/stb/include/stb/stb_vorbis.c	585;"	d	file:
__gl3w_h_	thirdparty/opengl/include/GL/gl3w.h	34;"	d
__glBeginQuery	thirdparty/remotery/src/Remotery.c	/^    PFNGLBEGINQUERYPROC __glBeginQuery;$/;"	m	struct:OpenGL_t	file:
__glDeleteQueries	thirdparty/remotery/src/Remotery.c	/^    PFNGLDELETEQUERIESPROC __glDeleteQueries;$/;"	m	struct:OpenGL_t	file:
__glEndQuery	thirdparty/remotery/src/Remotery.c	/^    PFNGLENDQUERYPROC __glEndQuery;$/;"	m	struct:OpenGL_t	file:
__glGenQueries	thirdparty/remotery/src/Remotery.c	/^    PFNGLGENQUERIESPROC __glGenQueries;$/;"	m	struct:OpenGL_t	file:
__glGetError	thirdparty/remotery/src/Remotery.c	/^    PFNGLGETERRORPROC __glGetError;$/;"	m	struct:OpenGL_t	file:
__glGetQueryObjecti64v	thirdparty/remotery/src/Remotery.c	/^    PFNGLGETQUERYOBJECTI64VPROC __glGetQueryObjecti64v;$/;"	m	struct:OpenGL_t	file:
__glGetQueryObjectiv	thirdparty/remotery/src/Remotery.c	/^    PFNGLGETQUERYOBJECTIVPROC __glGetQueryObjectiv;$/;"	m	struct:OpenGL_t	file:
__glGetQueryObjectui64v	thirdparty/remotery/src/Remotery.c	/^    PFNGLGETQUERYOBJECTUI64VPROC __glGetQueryObjectui64v;$/;"	m	struct:OpenGL_t	file:
__glGetQueryObjectuiv	thirdparty/remotery/src/Remotery.c	/^    PFNGLGETQUERYOBJECTUIVPROC __glGetQueryObjectuiv;$/;"	m	struct:OpenGL_t	file:
__glQueryCounter	thirdparty/remotery/src/Remotery.c	/^    PFNGLQUERYCOUNTERPROC __glQueryCounter;$/;"	m	struct:OpenGL_t	file:
__gl_h_	thirdparty/glfw/src/deps/glad/glad.h	30;"	d
__gl_h_	thirdparty/opengl/include/GL/gl3w.h	39;"	d
__glad_h_	thirdparty/glfw/src/deps/glad/glad.h	25;"	d
__glcorearb_h_	thirdparty/opengl/include/GL/glcorearb.h	4;"	d
__khrplatform_h_	thirdparty/glfw/src/deps/KHR/khrplatform.h	2;"	d
_cnd_timedwait_win32	thirdparty/glfw/src/deps/tinycthread.c	/^static int _cnd_timedwait_win32(cnd_t *cond, mtx_t *mtx, DWORD timeout)$/;"	f	file:
_copy	lib/lib/include/lib/array.hpp	/^  void _copy(const array &other)$/;"	f	class:LIB_NS_NAME::array
_d	thirdparty/tinydir/include/tinydir/tinydir.h	/^	_TINYDIR_DIR *_d;$/;"	m	struct:tinydir_dir
_e	thirdparty/tinydir/include/tinydir/tinydir.h	/^	struct _tinydir_dirent *_e;$/;"	m	struct:tinydir_dir	typeref:struct:tinydir_dir::_tinydir_dirent
_ep	thirdparty/tinydir/include/tinydir/tinydir.h	/^	struct _tinydir_dirent *_ep;$/;"	m	struct:tinydir_dir	typeref:struct:tinydir_dir::_tinydir_dirent
_f	thirdparty/tinydir/include/tinydir/tinydir.h	/^	WIN32_FIND_DATA _f;$/;"	m	struct:tinydir_dir
_fast_emplace	lib/lib/include/lib/array.hpp	/^  void _fast_emplace(Args &&...args)$/;"	f	class:LIB_NS_NAME::array
_fast_push	lib/lib/include/lib/array.hpp	/^  void _fast_push(T &&item)$/;"	f	class:LIB_NS_NAME::array
_fast_push	lib/lib/include/lib/array.hpp	/^  void _fast_push(const T &item)$/;"	f	class:LIB_NS_NAME::array
_files	thirdparty/tinydir/include/tinydir/tinydir.h	/^	tinydir_file *_files;$/;"	m	struct:tinydir_dir
_glfw	thirdparty/glfw/src/init.c	/^_GLFWlibrary _glfw = { GLFW_FALSE };$/;"	v
_glfw3_h_	thirdparty/glfw/include/GLFW/glfw3.h	30;"	d
_glfw3_native_h_	thirdparty/glfw/include/GLFW/glfw3native.h	30;"	d
_glfwAddOutputWayland	thirdparty/glfw/src/wl_monitor.c	/^void _glfwAddOutputWayland(uint32_t name, uint32_t version)$/;"	f
_glfwAllocGammaArrays	thirdparty/glfw/src/monitor.c	/^void _glfwAllocGammaArrays(GLFWgammaramp* ramp, unsigned int size)$/;"	f
_glfwAllocJoystick	thirdparty/glfw/src/input.c	/^_GLFWjoystick* _glfwAllocJoystick(const char* name,$/;"	f
_glfwAllocMonitor	thirdparty/glfw/src/monitor.c	/^_GLFWmonitor* _glfwAllocMonitor(const char* name, int widthMM, int heightMM)$/;"	f
_glfwChooseFBConfig	thirdparty/glfw/src/context.c	/^const _GLFWfbconfig* _glfwChooseFBConfig(const _GLFWfbconfig* desired,$/;"	f
_glfwChooseVideoMode	thirdparty/glfw/src/monitor.c	/^const GLFWvidmode* _glfwChooseVideoMode(_GLFWmonitor* monitor,$/;"	f
_glfwChooseVisualEGL	thirdparty/glfw/src/egl_context.c	/^GLFWbool _glfwChooseVisualEGL(const _GLFWctxconfig* ctxconfig,$/;"	f
_glfwChooseVisualGLX	thirdparty/glfw/src/glx_context.c	/^GLFWbool _glfwChooseVisualGLX(const _GLFWctxconfig* ctxconfig,$/;"	f
_glfwCompareVideoModes	thirdparty/glfw/src/monitor.c	/^int _glfwCompareVideoModes(const GLFWvidmode* fm, const GLFWvidmode* sm)$/;"	f
_glfwCreateContextEGL	thirdparty/glfw/src/egl_context.c	/^GLFWbool _glfwCreateContextEGL(_GLFWwindow* window,$/;"	f
_glfwCreateContextGLX	thirdparty/glfw/src/glx_context.c	/^GLFWbool _glfwCreateContextGLX(_GLFWwindow* window,$/;"	f
_glfwCreateContextOSMesa	thirdparty/glfw/src/osmesa_context.c	/^GLFWbool _glfwCreateContextOSMesa(_GLFWwindow* window,$/;"	f
_glfwCreateContextWGL	thirdparty/glfw/src/wgl_context.c	/^GLFWbool _glfwCreateContextWGL(_GLFWwindow* window,$/;"	f
_glfwCreateCursorX11	thirdparty/glfw/src/x11_init.c	/^Cursor _glfwCreateCursorX11(const GLFWimage* image, int xhot, int yhot)$/;"	f
_glfwCreateUTF8FromWideStringWin32	thirdparty/glfw/src/win32_init.c	/^char* _glfwCreateUTF8FromWideStringWin32(const WCHAR* source)$/;"	f
_glfwCreateWideStringFromUTF8Win32	thirdparty/glfw/src/win32_init.c	/^WCHAR* _glfwCreateWideStringFromUTF8Win32(const char* source)$/;"	f
_glfwDataFormat	thirdparty/glfw/src/win32_joystick.c	/^static const DIDATAFORMAT _glfwDataFormat =$/;"	v	file:
_glfwDeleteEventQueueMir	thirdparty/glfw/src/mir_window.c	/^void _glfwDeleteEventQueueMir(EventQueue* queue)$/;"	f
_glfwDetectJoystickConnectionLinux	thirdparty/glfw/src/linux_joystick.c	/^void _glfwDetectJoystickConnectionLinux(void)$/;"	f
_glfwDetectJoystickConnectionWin32	thirdparty/glfw/src/win32_joystick.c	/^void _glfwDetectJoystickConnectionWin32(void)$/;"	f
_glfwDetectJoystickDisconnectionWin32	thirdparty/glfw/src/win32_joystick.c	/^void _glfwDetectJoystickDisconnectionWin32(void)$/;"	f
_glfwErrorCallback	thirdparty/glfw/src/init.c	/^static GLFWerrorfun _glfwErrorCallback;$/;"	v	file:
_glfwFreeGammaArrays	thirdparty/glfw/src/monitor.c	/^void _glfwFreeGammaArrays(GLFWgammaramp* ramp)$/;"	f
_glfwFreeJoystick	thirdparty/glfw/src/input.c	/^void _glfwFreeJoystick(_GLFWjoystick* js)$/;"	f
_glfwFreeMonitor	thirdparty/glfw/src/monitor.c	/^void _glfwFreeMonitor(_GLFWmonitor* monitor)$/;"	f
_glfwGetVulkanResultString	thirdparty/glfw/src/vulkan.c	/^const char* _glfwGetVulkanResultString(VkResult result)$/;"	f
_glfwGetWindowPropertyX11	thirdparty/glfw/src/x11_window.c	/^unsigned long _glfwGetWindowPropertyX11(Window window,$/;"	f
_glfwGrabErrorHandlerX11	thirdparty/glfw/src/x11_init.c	/^void _glfwGrabErrorHandlerX11(void)$/;"	f
_glfwInitEGL	thirdparty/glfw/src/egl_context.c	/^GLFWbool _glfwInitEGL(void)$/;"	f
_glfwInitEventQueueMir	thirdparty/glfw/src/mir_window.c	/^void _glfwInitEventQueueMir(EventQueue* queue)$/;"	f
_glfwInitGLX	thirdparty/glfw/src/glx_context.c	/^GLFWbool _glfwInitGLX(void)$/;"	f
_glfwInitHints	thirdparty/glfw/src/init.c	/^static _GLFWinitconfig _glfwInitHints =$/;"	v	file:
_glfwInitJoysticksLinux	thirdparty/glfw/src/linux_joystick.c	/^GLFWbool _glfwInitJoysticksLinux(void)$/;"	f
_glfwInitJoysticksWin32	thirdparty/glfw/src/win32_joystick.c	/^void _glfwInitJoysticksWin32(void)$/;"	f
_glfwInitOSMesa	thirdparty/glfw/src/osmesa_context.c	/^GLFWbool _glfwInitOSMesa(void)$/;"	f
_glfwInitTimerNS	thirdparty/glfw/src/cocoa_time.c	/^void _glfwInitTimerNS(void)$/;"	f
_glfwInitTimerPOSIX	thirdparty/glfw/src/posix_time.c	/^void _glfwInitTimerPOSIX(void)$/;"	f
_glfwInitTimerWin32	thirdparty/glfw/src/win32_time.c	/^void _glfwInitTimerWin32(void)$/;"	f
_glfwInitVulkan	thirdparty/glfw/src/vulkan.c	/^GLFWbool _glfwInitVulkan(int mode)$/;"	f
_glfwInitWGL	thirdparty/glfw/src/wgl_context.c	/^GLFWbool _glfwInitWGL(void)$/;"	f
_glfwInputChar	thirdparty/glfw/src/input.c	/^void _glfwInputChar(_GLFWwindow* window, unsigned int codepoint, int mods, GLFWbool plain)$/;"	f
_glfwInputCursorEnter	thirdparty/glfw/src/input.c	/^void _glfwInputCursorEnter(_GLFWwindow* window, GLFWbool entered)$/;"	f
_glfwInputCursorPos	thirdparty/glfw/src/input.c	/^void _glfwInputCursorPos(_GLFWwindow* window, double xpos, double ypos)$/;"	f
_glfwInputDrop	thirdparty/glfw/src/input.c	/^void _glfwInputDrop(_GLFWwindow* window, int count, const char** paths)$/;"	f
_glfwInputError	thirdparty/glfw/src/init.c	/^void _glfwInputError(int code, const char* format, ...)$/;"	f
_glfwInputErrorWin32	thirdparty/glfw/src/win32_init.c	/^void _glfwInputErrorWin32(int error, const char* description)$/;"	f
_glfwInputErrorX11	thirdparty/glfw/src/x11_init.c	/^void _glfwInputErrorX11(int error, const char* message)$/;"	f
_glfwInputFramebufferSize	thirdparty/glfw/src/window.c	/^void _glfwInputFramebufferSize(_GLFWwindow* window, int width, int height)$/;"	f
_glfwInputJoystick	thirdparty/glfw/src/input.c	/^void _glfwInputJoystick(int jid, int event)$/;"	f
_glfwInputJoystickAxis	thirdparty/glfw/src/input.c	/^void _glfwInputJoystickAxis(int jid, int axis, float value)$/;"	f
_glfwInputJoystickButton	thirdparty/glfw/src/input.c	/^void _glfwInputJoystickButton(int jid, int button, char value)$/;"	f
_glfwInputJoystickHat	thirdparty/glfw/src/input.c	/^void _glfwInputJoystickHat(int jid, int hat, char value)$/;"	f
_glfwInputKey	thirdparty/glfw/src/input.c	/^void _glfwInputKey(_GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f
_glfwInputMonitor	thirdparty/glfw/src/monitor.c	/^void _glfwInputMonitor(_GLFWmonitor* monitor, int action, int placement)$/;"	f
_glfwInputMonitorWindow	thirdparty/glfw/src/monitor.c	/^void _glfwInputMonitorWindow(_GLFWmonitor* monitor, _GLFWwindow* window)$/;"	f
_glfwInputMouseClick	thirdparty/glfw/src/input.c	/^void _glfwInputMouseClick(_GLFWwindow* window, int button, int action, int mods)$/;"	f
_glfwInputScroll	thirdparty/glfw/src/input.c	/^void _glfwInputScroll(_GLFWwindow* window, double xoffset, double yoffset)$/;"	f
_glfwInputWindowCloseRequest	thirdparty/glfw/src/window.c	/^void _glfwInputWindowCloseRequest(_GLFWwindow* window)$/;"	f
_glfwInputWindowDamage	thirdparty/glfw/src/window.c	/^void _glfwInputWindowDamage(_GLFWwindow* window)$/;"	f
_glfwInputWindowFocus	thirdparty/glfw/src/window.c	/^void _glfwInputWindowFocus(_GLFWwindow* window, GLFWbool focused)$/;"	f
_glfwInputWindowIconify	thirdparty/glfw/src/window.c	/^void _glfwInputWindowIconify(_GLFWwindow* window, GLFWbool iconified)$/;"	f
_glfwInputWindowMaximize	thirdparty/glfw/src/window.c	/^void _glfwInputWindowMaximize(_GLFWwindow* window, GLFWbool maximized)$/;"	f
_glfwInputWindowMonitorChange	thirdparty/glfw/src/window.c	/^void _glfwInputWindowMonitorChange(_GLFWwindow* window, _GLFWmonitor* monitor)$/;"	f
_glfwInputWindowPos	thirdparty/glfw/src/window.c	/^void _glfwInputWindowPos(_GLFWwindow* window, int x, int y)$/;"	f
_glfwInputWindowSize	thirdparty/glfw/src/window.c	/^void _glfwInputWindowSize(_GLFWwindow* window, int width, int height)$/;"	f
_glfwIsPrintable	thirdparty/glfw/src/input.c	/^GLFWbool _glfwIsPrintable(int key)$/;"	f
_glfwIsValidContextConfig	thirdparty/glfw/src/context.c	/^GLFWbool _glfwIsValidContextConfig(const _GLFWctxconfig* ctxconfig)$/;"	f
_glfwKeySym2Unicode	thirdparty/glfw/src/xkb_unicode.c	/^long _glfwKeySym2Unicode(unsigned int keysym)$/;"	f
_glfwMainThreadError	thirdparty/glfw/src/init.c	/^static _GLFWerror _glfwMainThreadError;$/;"	v	file:
_glfwObjectDataFormats	thirdparty/glfw/src/win32_joystick.c	/^static DIOBJECTDATAFORMAT _glfwObjectDataFormats[] =$/;"	v	file:
_glfwPlatformCreateCursor	thirdparty/glfw/src/mir_window.c	/^int _glfwPlatformCreateCursor(_GLFWcursor* cursor,$/;"	f
_glfwPlatformCreateCursor	thirdparty/glfw/src/null_window.c	/^int _glfwPlatformCreateCursor(_GLFWcursor* cursor,$/;"	f
_glfwPlatformCreateCursor	thirdparty/glfw/src/win32_window.c	/^int _glfwPlatformCreateCursor(_GLFWcursor* cursor,$/;"	f
_glfwPlatformCreateCursor	thirdparty/glfw/src/wl_window.c	/^int _glfwPlatformCreateCursor(_GLFWcursor* cursor,$/;"	f
_glfwPlatformCreateCursor	thirdparty/glfw/src/x11_window.c	/^int _glfwPlatformCreateCursor(_GLFWcursor* cursor,$/;"	f
_glfwPlatformCreateMutex	thirdparty/glfw/src/posix_thread.c	/^GLFWbool _glfwPlatformCreateMutex(_GLFWmutex* mutex)$/;"	f
_glfwPlatformCreateMutex	thirdparty/glfw/src/win32_thread.c	/^GLFWbool _glfwPlatformCreateMutex(_GLFWmutex* mutex)$/;"	f
_glfwPlatformCreateStandardCursor	thirdparty/glfw/src/mir_window.c	/^int _glfwPlatformCreateStandardCursor(_GLFWcursor* cursor, int shape)$/;"	f
_glfwPlatformCreateStandardCursor	thirdparty/glfw/src/null_window.c	/^int _glfwPlatformCreateStandardCursor(_GLFWcursor* cursor, int shape)$/;"	f
_glfwPlatformCreateStandardCursor	thirdparty/glfw/src/win32_window.c	/^int _glfwPlatformCreateStandardCursor(_GLFWcursor* cursor, int shape)$/;"	f
_glfwPlatformCreateStandardCursor	thirdparty/glfw/src/wl_window.c	/^int _glfwPlatformCreateStandardCursor(_GLFWcursor* cursor, int shape)$/;"	f
_glfwPlatformCreateStandardCursor	thirdparty/glfw/src/x11_window.c	/^int _glfwPlatformCreateStandardCursor(_GLFWcursor* cursor, int shape)$/;"	f
_glfwPlatformCreateTls	thirdparty/glfw/src/posix_thread.c	/^GLFWbool _glfwPlatformCreateTls(_GLFWtls* tls)$/;"	f
_glfwPlatformCreateTls	thirdparty/glfw/src/win32_thread.c	/^GLFWbool _glfwPlatformCreateTls(_GLFWtls* tls)$/;"	f
_glfwPlatformCreateWindow	thirdparty/glfw/src/mir_window.c	/^int _glfwPlatformCreateWindow(_GLFWwindow* window,$/;"	f
_glfwPlatformCreateWindow	thirdparty/glfw/src/null_window.c	/^int _glfwPlatformCreateWindow(_GLFWwindow* window,$/;"	f
_glfwPlatformCreateWindow	thirdparty/glfw/src/win32_window.c	/^int _glfwPlatformCreateWindow(_GLFWwindow* window,$/;"	f
_glfwPlatformCreateWindow	thirdparty/glfw/src/wl_window.c	/^int _glfwPlatformCreateWindow(_GLFWwindow* window,$/;"	f
_glfwPlatformCreateWindow	thirdparty/glfw/src/x11_window.c	/^int _glfwPlatformCreateWindow(_GLFWwindow* window,$/;"	f
_glfwPlatformCreateWindowSurface	thirdparty/glfw/src/mir_window.c	/^VkResult _glfwPlatformCreateWindowSurface(VkInstance instance,$/;"	f
_glfwPlatformCreateWindowSurface	thirdparty/glfw/src/null_window.c	/^VkResult _glfwPlatformCreateWindowSurface(VkInstance instance,$/;"	f
_glfwPlatformCreateWindowSurface	thirdparty/glfw/src/win32_window.c	/^VkResult _glfwPlatformCreateWindowSurface(VkInstance instance,$/;"	f
_glfwPlatformCreateWindowSurface	thirdparty/glfw/src/wl_window.c	/^VkResult _glfwPlatformCreateWindowSurface(VkInstance instance,$/;"	f
_glfwPlatformCreateWindowSurface	thirdparty/glfw/src/x11_window.c	/^VkResult _glfwPlatformCreateWindowSurface(VkInstance instance,$/;"	f
_glfwPlatformDestroyCursor	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformDestroyCursor(_GLFWcursor* cursor)$/;"	f
_glfwPlatformDestroyCursor	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformDestroyCursor(_GLFWcursor* cursor)$/;"	f
_glfwPlatformDestroyCursor	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformDestroyCursor(_GLFWcursor* cursor)$/;"	f
_glfwPlatformDestroyCursor	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformDestroyCursor(_GLFWcursor* cursor)$/;"	f
_glfwPlatformDestroyCursor	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformDestroyCursor(_GLFWcursor* cursor)$/;"	f
_glfwPlatformDestroyMutex	thirdparty/glfw/src/posix_thread.c	/^void _glfwPlatformDestroyMutex(_GLFWmutex* mutex)$/;"	f
_glfwPlatformDestroyMutex	thirdparty/glfw/src/win32_thread.c	/^void _glfwPlatformDestroyMutex(_GLFWmutex* mutex)$/;"	f
_glfwPlatformDestroyTls	thirdparty/glfw/src/posix_thread.c	/^void _glfwPlatformDestroyTls(_GLFWtls* tls)$/;"	f
_glfwPlatformDestroyTls	thirdparty/glfw/src/win32_thread.c	/^void _glfwPlatformDestroyTls(_GLFWtls* tls)$/;"	f
_glfwPlatformDestroyWindow	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformDestroyWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformDestroyWindow	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformDestroyWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformDestroyWindow	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformDestroyWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformDestroyWindow	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformDestroyWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformDestroyWindow	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformDestroyWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformFocusWindow	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformFocusWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformFocusWindow	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformFocusWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformFocusWindow	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformFocusWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformFocusWindow	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformFocusWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformFocusWindow	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformFocusWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformGetClipboardString	thirdparty/glfw/src/mir_window.c	/^const char* _glfwPlatformGetClipboardString(_GLFWwindow* window)$/;"	f
_glfwPlatformGetClipboardString	thirdparty/glfw/src/null_window.c	/^const char* _glfwPlatformGetClipboardString(_GLFWwindow* window)$/;"	f
_glfwPlatformGetClipboardString	thirdparty/glfw/src/win32_window.c	/^const char* _glfwPlatformGetClipboardString(_GLFWwindow* window)$/;"	f
_glfwPlatformGetClipboardString	thirdparty/glfw/src/wl_window.c	/^const char* _glfwPlatformGetClipboardString(_GLFWwindow* window)$/;"	f
_glfwPlatformGetClipboardString	thirdparty/glfw/src/x11_window.c	/^const char* _glfwPlatformGetClipboardString(_GLFWwindow* window)$/;"	f
_glfwPlatformGetCursorPos	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformGetCursorPos(_GLFWwindow* window, double* xpos, double* ypos)$/;"	f
_glfwPlatformGetCursorPos	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformGetCursorPos(_GLFWwindow* window, double* xpos, double* ypos)$/;"	f
_glfwPlatformGetCursorPos	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformGetCursorPos(_GLFWwindow* window, double* xpos, double* ypos)$/;"	f
_glfwPlatformGetCursorPos	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformGetCursorPos(_GLFWwindow* window, double* xpos, double* ypos)$/;"	f
_glfwPlatformGetCursorPos	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformGetCursorPos(_GLFWwindow* window, double* xpos, double* ypos)$/;"	f
_glfwPlatformGetFramebufferSize	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformGetFramebufferSize(_GLFWwindow* window, int* width, int* height)$/;"	f
_glfwPlatformGetFramebufferSize	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformGetFramebufferSize(_GLFWwindow* window, int* width, int* height)$/;"	f
_glfwPlatformGetFramebufferSize	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformGetFramebufferSize(_GLFWwindow* window, int* width, int* height)$/;"	f
_glfwPlatformGetFramebufferSize	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformGetFramebufferSize(_GLFWwindow* window, int* width, int* height)$/;"	f
_glfwPlatformGetFramebufferSize	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformGetFramebufferSize(_GLFWwindow* window, int* width, int* height)$/;"	f
_glfwPlatformGetGammaRamp	thirdparty/glfw/src/mir_monitor.c	/^void _glfwPlatformGetGammaRamp(_GLFWmonitor* monitor, GLFWgammaramp* ramp)$/;"	f
_glfwPlatformGetGammaRamp	thirdparty/glfw/src/null_monitor.c	/^void _glfwPlatformGetGammaRamp(_GLFWmonitor* monitor, GLFWgammaramp* ramp)$/;"	f
_glfwPlatformGetGammaRamp	thirdparty/glfw/src/win32_monitor.c	/^void _glfwPlatformGetGammaRamp(_GLFWmonitor* monitor, GLFWgammaramp* ramp)$/;"	f
_glfwPlatformGetGammaRamp	thirdparty/glfw/src/wl_monitor.c	/^void _glfwPlatformGetGammaRamp(_GLFWmonitor* monitor, GLFWgammaramp* ramp)$/;"	f
_glfwPlatformGetGammaRamp	thirdparty/glfw/src/x11_monitor.c	/^void _glfwPlatformGetGammaRamp(_GLFWmonitor* monitor, GLFWgammaramp* ramp)$/;"	f
_glfwPlatformGetKeyName	thirdparty/glfw/src/mir_window.c	/^const char* _glfwPlatformGetKeyName(int key, int scancode)$/;"	f
_glfwPlatformGetKeyName	thirdparty/glfw/src/null_window.c	/^const char* _glfwPlatformGetKeyName(int key, int scancode)$/;"	f
_glfwPlatformGetKeyName	thirdparty/glfw/src/win32_window.c	/^const char* _glfwPlatformGetKeyName(int key, int scancode)$/;"	f
_glfwPlatformGetKeyName	thirdparty/glfw/src/wl_window.c	/^const char* _glfwPlatformGetKeyName(int key, int scancode)$/;"	f
_glfwPlatformGetKeyName	thirdparty/glfw/src/x11_window.c	/^const char* _glfwPlatformGetKeyName(int key, int scancode)$/;"	f
_glfwPlatformGetKeyScancode	thirdparty/glfw/src/mir_window.c	/^int _glfwPlatformGetKeyScancode(int key)$/;"	f
_glfwPlatformGetKeyScancode	thirdparty/glfw/src/null_window.c	/^int _glfwPlatformGetKeyScancode(int key)$/;"	f
_glfwPlatformGetKeyScancode	thirdparty/glfw/src/win32_window.c	/^int _glfwPlatformGetKeyScancode(int key)$/;"	f
_glfwPlatformGetKeyScancode	thirdparty/glfw/src/wl_window.c	/^int _glfwPlatformGetKeyScancode(int key)$/;"	f
_glfwPlatformGetKeyScancode	thirdparty/glfw/src/x11_window.c	/^int _glfwPlatformGetKeyScancode(int key)$/;"	f
_glfwPlatformGetMonitorPos	thirdparty/glfw/src/mir_monitor.c	/^void _glfwPlatformGetMonitorPos(_GLFWmonitor* monitor, int* xpos, int* ypos)$/;"	f
_glfwPlatformGetMonitorPos	thirdparty/glfw/src/null_monitor.c	/^void _glfwPlatformGetMonitorPos(_GLFWmonitor* monitor, int* xpos, int* ypos)$/;"	f
_glfwPlatformGetMonitorPos	thirdparty/glfw/src/win32_monitor.c	/^void _glfwPlatformGetMonitorPos(_GLFWmonitor* monitor, int* xpos, int* ypos)$/;"	f
_glfwPlatformGetMonitorPos	thirdparty/glfw/src/wl_monitor.c	/^void _glfwPlatformGetMonitorPos(_GLFWmonitor* monitor, int* xpos, int* ypos)$/;"	f
_glfwPlatformGetMonitorPos	thirdparty/glfw/src/x11_monitor.c	/^void _glfwPlatformGetMonitorPos(_GLFWmonitor* monitor, int* xpos, int* ypos)$/;"	f
_glfwPlatformGetPhysicalDevicePresentationSupport	thirdparty/glfw/src/mir_window.c	/^int _glfwPlatformGetPhysicalDevicePresentationSupport(VkInstance instance,$/;"	f
_glfwPlatformGetPhysicalDevicePresentationSupport	thirdparty/glfw/src/null_window.c	/^int _glfwPlatformGetPhysicalDevicePresentationSupport(VkInstance instance,$/;"	f
_glfwPlatformGetPhysicalDevicePresentationSupport	thirdparty/glfw/src/win32_window.c	/^int _glfwPlatformGetPhysicalDevicePresentationSupport(VkInstance instance,$/;"	f
_glfwPlatformGetPhysicalDevicePresentationSupport	thirdparty/glfw/src/wl_window.c	/^int _glfwPlatformGetPhysicalDevicePresentationSupport(VkInstance instance,$/;"	f
_glfwPlatformGetPhysicalDevicePresentationSupport	thirdparty/glfw/src/x11_window.c	/^int _glfwPlatformGetPhysicalDevicePresentationSupport(VkInstance instance,$/;"	f
_glfwPlatformGetRequiredInstanceExtensions	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformGetRequiredInstanceExtensions(char** extensions)$/;"	f
_glfwPlatformGetRequiredInstanceExtensions	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformGetRequiredInstanceExtensions(char** extensions)$/;"	f
_glfwPlatformGetRequiredInstanceExtensions	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformGetRequiredInstanceExtensions(char** extensions)$/;"	f
_glfwPlatformGetRequiredInstanceExtensions	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformGetRequiredInstanceExtensions(char** extensions)$/;"	f
_glfwPlatformGetRequiredInstanceExtensions	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformGetRequiredInstanceExtensions(char** extensions)$/;"	f
_glfwPlatformGetTimerFrequency	thirdparty/glfw/src/cocoa_time.c	/^uint64_t _glfwPlatformGetTimerFrequency(void)$/;"	f
_glfwPlatformGetTimerFrequency	thirdparty/glfw/src/posix_time.c	/^uint64_t _glfwPlatformGetTimerFrequency(void)$/;"	f
_glfwPlatformGetTimerFrequency	thirdparty/glfw/src/win32_time.c	/^uint64_t _glfwPlatformGetTimerFrequency(void)$/;"	f
_glfwPlatformGetTimerValue	thirdparty/glfw/src/cocoa_time.c	/^uint64_t _glfwPlatformGetTimerValue(void)$/;"	f
_glfwPlatformGetTimerValue	thirdparty/glfw/src/posix_time.c	/^uint64_t _glfwPlatformGetTimerValue(void)$/;"	f
_glfwPlatformGetTimerValue	thirdparty/glfw/src/win32_time.c	/^uint64_t _glfwPlatformGetTimerValue(void)$/;"	f
_glfwPlatformGetTls	thirdparty/glfw/src/posix_thread.c	/^void* _glfwPlatformGetTls(_GLFWtls* tls)$/;"	f
_glfwPlatformGetTls	thirdparty/glfw/src/win32_thread.c	/^void* _glfwPlatformGetTls(_GLFWtls* tls)$/;"	f
_glfwPlatformGetVersionString	thirdparty/glfw/src/mir_init.c	/^const char* _glfwPlatformGetVersionString(void)$/;"	f
_glfwPlatformGetVersionString	thirdparty/glfw/src/null_init.c	/^const char* _glfwPlatformGetVersionString(void)$/;"	f
_glfwPlatformGetVersionString	thirdparty/glfw/src/win32_init.c	/^const char* _glfwPlatformGetVersionString(void)$/;"	f
_glfwPlatformGetVersionString	thirdparty/glfw/src/wl_init.c	/^const char* _glfwPlatformGetVersionString(void)$/;"	f
_glfwPlatformGetVersionString	thirdparty/glfw/src/x11_init.c	/^const char* _glfwPlatformGetVersionString(void)$/;"	f
_glfwPlatformGetVideoMode	thirdparty/glfw/src/mir_monitor.c	/^void _glfwPlatformGetVideoMode(_GLFWmonitor* monitor, GLFWvidmode* mode)$/;"	f
_glfwPlatformGetVideoMode	thirdparty/glfw/src/null_monitor.c	/^void _glfwPlatformGetVideoMode(_GLFWmonitor* monitor, GLFWvidmode* mode)$/;"	f
_glfwPlatformGetVideoMode	thirdparty/glfw/src/win32_monitor.c	/^void _glfwPlatformGetVideoMode(_GLFWmonitor* monitor, GLFWvidmode* mode)$/;"	f
_glfwPlatformGetVideoMode	thirdparty/glfw/src/wl_monitor.c	/^void _glfwPlatformGetVideoMode(_GLFWmonitor* monitor, GLFWvidmode* mode)$/;"	f
_glfwPlatformGetVideoMode	thirdparty/glfw/src/x11_monitor.c	/^void _glfwPlatformGetVideoMode(_GLFWmonitor* monitor, GLFWvidmode* mode)$/;"	f
_glfwPlatformGetVideoModes	thirdparty/glfw/src/mir_monitor.c	/^GLFWvidmode* _glfwPlatformGetVideoModes(_GLFWmonitor* monitor, int* found)$/;"	f
_glfwPlatformGetVideoModes	thirdparty/glfw/src/null_monitor.c	/^GLFWvidmode* _glfwPlatformGetVideoModes(_GLFWmonitor* monitor, int* found)$/;"	f
_glfwPlatformGetVideoModes	thirdparty/glfw/src/win32_monitor.c	/^GLFWvidmode* _glfwPlatformGetVideoModes(_GLFWmonitor* monitor, int* count)$/;"	f
_glfwPlatformGetVideoModes	thirdparty/glfw/src/wl_monitor.c	/^GLFWvidmode* _glfwPlatformGetVideoModes(_GLFWmonitor* monitor, int* found)$/;"	f
_glfwPlatformGetVideoModes	thirdparty/glfw/src/x11_monitor.c	/^GLFWvidmode* _glfwPlatformGetVideoModes(_GLFWmonitor* monitor, int* count)$/;"	f
_glfwPlatformGetWindowFrameSize	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformGetWindowFrameSize(_GLFWwindow* window,$/;"	f
_glfwPlatformGetWindowFrameSize	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformGetWindowFrameSize(_GLFWwindow* window,$/;"	f
_glfwPlatformGetWindowFrameSize	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformGetWindowFrameSize(_GLFWwindow* window,$/;"	f
_glfwPlatformGetWindowFrameSize	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformGetWindowFrameSize(_GLFWwindow* window,$/;"	f
_glfwPlatformGetWindowFrameSize	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformGetWindowFrameSize(_GLFWwindow* window,$/;"	f
_glfwPlatformGetWindowPos	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformGetWindowPos(_GLFWwindow* window, int* xpos, int* ypos)$/;"	f
_glfwPlatformGetWindowPos	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformGetWindowPos(_GLFWwindow* window, int* xpos, int* ypos)$/;"	f
_glfwPlatformGetWindowPos	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformGetWindowPos(_GLFWwindow* window, int* xpos, int* ypos)$/;"	f
_glfwPlatformGetWindowPos	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformGetWindowPos(_GLFWwindow* window, int* xpos, int* ypos)$/;"	f
_glfwPlatformGetWindowPos	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformGetWindowPos(_GLFWwindow* window, int* xpos, int* ypos)$/;"	f
_glfwPlatformGetWindowSize	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformGetWindowSize(_GLFWwindow* window, int* width, int* height)$/;"	f
_glfwPlatformGetWindowSize	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformGetWindowSize(_GLFWwindow* window, int* width, int* height)$/;"	f
_glfwPlatformGetWindowSize	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformGetWindowSize(_GLFWwindow* window, int* width, int* height)$/;"	f
_glfwPlatformGetWindowSize	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformGetWindowSize(_GLFWwindow* window, int* width, int* height)$/;"	f
_glfwPlatformGetWindowSize	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformGetWindowSize(_GLFWwindow* window, int* width, int* height)$/;"	f
_glfwPlatformHideWindow	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformHideWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformHideWindow	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformHideWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformHideWindow	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformHideWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformHideWindow	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformHideWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformHideWindow	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformHideWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformIconifyWindow	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformIconifyWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformIconifyWindow	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformIconifyWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformIconifyWindow	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformIconifyWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformIconifyWindow	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformIconifyWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformIconifyWindow	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformIconifyWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformInit	thirdparty/glfw/src/mir_init.c	/^int _glfwPlatformInit(void)$/;"	f
_glfwPlatformInit	thirdparty/glfw/src/null_init.c	/^int _glfwPlatformInit(void)$/;"	f
_glfwPlatformInit	thirdparty/glfw/src/win32_init.c	/^int _glfwPlatformInit(void)$/;"	f
_glfwPlatformInit	thirdparty/glfw/src/wl_init.c	/^int _glfwPlatformInit(void)$/;"	f
_glfwPlatformInit	thirdparty/glfw/src/x11_init.c	/^int _glfwPlatformInit(void)$/;"	f
_glfwPlatformLockMutex	thirdparty/glfw/src/posix_thread.c	/^void _glfwPlatformLockMutex(_GLFWmutex* mutex)$/;"	f
_glfwPlatformLockMutex	thirdparty/glfw/src/win32_thread.c	/^void _glfwPlatformLockMutex(_GLFWmutex* mutex)$/;"	f
_glfwPlatformMaximizeWindow	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformMaximizeWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformMaximizeWindow	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformMaximizeWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformMaximizeWindow	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformMaximizeWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformMaximizeWindow	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformMaximizeWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformMaximizeWindow	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformMaximizeWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformPollEvents	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformPollEvents(void)$/;"	f
_glfwPlatformPollEvents	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformPollEvents(void)$/;"	f
_glfwPlatformPollEvents	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformPollEvents(void)$/;"	f
_glfwPlatformPollEvents	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformPollEvents(void)$/;"	f
_glfwPlatformPollEvents	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformPollEvents(void)$/;"	f
_glfwPlatformPollJoystick	thirdparty/glfw/src/linux_joystick.c	/^int _glfwPlatformPollJoystick(int jid, int mode)$/;"	f
_glfwPlatformPollJoystick	thirdparty/glfw/src/null_joystick.c	/^int _glfwPlatformPollJoystick(int jid, int mode)$/;"	f
_glfwPlatformPollJoystick	thirdparty/glfw/src/win32_joystick.c	/^int _glfwPlatformPollJoystick(int jid, int mode)$/;"	f
_glfwPlatformPostEmptyEvent	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformPostEmptyEvent(void)$/;"	f
_glfwPlatformPostEmptyEvent	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformPostEmptyEvent(void)$/;"	f
_glfwPlatformPostEmptyEvent	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformPostEmptyEvent(void)$/;"	f
_glfwPlatformPostEmptyEvent	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformPostEmptyEvent(void)$/;"	f
_glfwPlatformPostEmptyEvent	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformPostEmptyEvent(void)$/;"	f
_glfwPlatformRequestWindowAttention	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformRequestWindowAttention(_GLFWwindow* window)$/;"	f
_glfwPlatformRequestWindowAttention	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformRequestWindowAttention(_GLFWwindow* window)$/;"	f
_glfwPlatformRequestWindowAttention	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformRequestWindowAttention(_GLFWwindow* window)$/;"	f
_glfwPlatformRequestWindowAttention	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformRequestWindowAttention(_GLFWwindow* window)$/;"	f
_glfwPlatformRequestWindowAttention	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformRequestWindowAttention(_GLFWwindow* window)$/;"	f
_glfwPlatformRestoreWindow	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformRestoreWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformRestoreWindow	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformRestoreWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformRestoreWindow	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformRestoreWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformRestoreWindow	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformRestoreWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformRestoreWindow	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformRestoreWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformSetClipboardString	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetClipboardString(_GLFWwindow* window, const char* string)$/;"	f
_glfwPlatformSetClipboardString	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetClipboardString(_GLFWwindow* window, const char* string)$/;"	f
_glfwPlatformSetClipboardString	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetClipboardString(_GLFWwindow* window, const char* string)$/;"	f
_glfwPlatformSetClipboardString	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetClipboardString(_GLFWwindow* window, const char* string)$/;"	f
_glfwPlatformSetClipboardString	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetClipboardString(_GLFWwindow* window, const char* string)$/;"	f
_glfwPlatformSetCursor	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetCursor(_GLFWwindow* window, _GLFWcursor* cursor)$/;"	f
_glfwPlatformSetCursor	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetCursor(_GLFWwindow* window, _GLFWcursor* cursor)$/;"	f
_glfwPlatformSetCursor	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetCursor(_GLFWwindow* window, _GLFWcursor* cursor)$/;"	f
_glfwPlatformSetCursor	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetCursor(_GLFWwindow* window, _GLFWcursor* cursor)$/;"	f
_glfwPlatformSetCursor	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetCursor(_GLFWwindow* window, _GLFWcursor* cursor)$/;"	f
_glfwPlatformSetCursorMode	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetCursorMode(_GLFWwindow* window, int mode)$/;"	f
_glfwPlatformSetCursorMode	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetCursorMode(_GLFWwindow* window, int mode)$/;"	f
_glfwPlatformSetCursorMode	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetCursorMode(_GLFWwindow* window, int mode)$/;"	f
_glfwPlatformSetCursorMode	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetCursorMode(_GLFWwindow* window, int mode)$/;"	f
_glfwPlatformSetCursorMode	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetCursorMode(_GLFWwindow* window, int mode)$/;"	f
_glfwPlatformSetCursorPos	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetCursorPos(_GLFWwindow* window, double xpos, double ypos)$/;"	f
_glfwPlatformSetCursorPos	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetCursorPos(_GLFWwindow* window, double x, double y)$/;"	f
_glfwPlatformSetCursorPos	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetCursorPos(_GLFWwindow* window, double xpos, double ypos)$/;"	f
_glfwPlatformSetCursorPos	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetCursorPos(_GLFWwindow* window, double x, double y)$/;"	f
_glfwPlatformSetCursorPos	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetCursorPos(_GLFWwindow* window, double x, double y)$/;"	f
_glfwPlatformSetGammaRamp	thirdparty/glfw/src/mir_monitor.c	/^void _glfwPlatformSetGammaRamp(_GLFWmonitor* monitor, const GLFWgammaramp* ramp)$/;"	f
_glfwPlatformSetGammaRamp	thirdparty/glfw/src/null_monitor.c	/^void _glfwPlatformSetGammaRamp(_GLFWmonitor* monitor, const GLFWgammaramp* ramp)$/;"	f
_glfwPlatformSetGammaRamp	thirdparty/glfw/src/win32_monitor.c	/^void _glfwPlatformSetGammaRamp(_GLFWmonitor* monitor, const GLFWgammaramp* ramp)$/;"	f
_glfwPlatformSetGammaRamp	thirdparty/glfw/src/wl_monitor.c	/^void _glfwPlatformSetGammaRamp(_GLFWmonitor* monitor, const GLFWgammaramp* ramp)$/;"	f
_glfwPlatformSetGammaRamp	thirdparty/glfw/src/x11_monitor.c	/^void _glfwPlatformSetGammaRamp(_GLFWmonitor* monitor, const GLFWgammaramp* ramp)$/;"	f
_glfwPlatformSetTls	thirdparty/glfw/src/posix_thread.c	/^void _glfwPlatformSetTls(_GLFWtls* tls, void* value)$/;"	f
_glfwPlatformSetTls	thirdparty/glfw/src/win32_thread.c	/^void _glfwPlatformSetTls(_GLFWtls* tls, void* value)$/;"	f
_glfwPlatformSetWindowAspectRatio	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetWindowAspectRatio(_GLFWwindow* window, int numer, int denom)$/;"	f
_glfwPlatformSetWindowAspectRatio	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetWindowAspectRatio(_GLFWwindow* window, int n, int d)$/;"	f
_glfwPlatformSetWindowAspectRatio	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetWindowAspectRatio(_GLFWwindow* window, int numer, int denom)$/;"	f
_glfwPlatformSetWindowAspectRatio	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetWindowAspectRatio(_GLFWwindow* window, int numer, int denom)$/;"	f
_glfwPlatformSetWindowAspectRatio	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetWindowAspectRatio(_GLFWwindow* window, int numer, int denom)$/;"	f
_glfwPlatformSetWindowDecorated	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetWindowDecorated(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowDecorated	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetWindowDecorated(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowDecorated	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetWindowDecorated(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowDecorated	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetWindowDecorated(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowDecorated	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetWindowDecorated(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowFloating	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetWindowFloating(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowFloating	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetWindowFloating(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowFloating	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetWindowFloating(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowFloating	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetWindowFloating(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowFloating	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetWindowFloating(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowIcon	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetWindowIcon(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowIcon	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetWindowIcon(_GLFWwindow* window, int count,$/;"	f
_glfwPlatformSetWindowIcon	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetWindowIcon(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowIcon	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetWindowIcon(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowIcon	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetWindowIcon(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowMonitor	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetWindowMonitor(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowMonitor	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetWindowMonitor(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowMonitor	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetWindowMonitor(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowMonitor	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetWindowMonitor(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowMonitor	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetWindowMonitor(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowPos	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetWindowPos(_GLFWwindow* window, int xpos, int ypos)$/;"	f
_glfwPlatformSetWindowPos	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetWindowPos(_GLFWwindow* window, int xpos, int ypos)$/;"	f
_glfwPlatformSetWindowPos	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetWindowPos(_GLFWwindow* window, int xpos, int ypos)$/;"	f
_glfwPlatformSetWindowPos	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetWindowPos(_GLFWwindow* window, int xpos, int ypos)$/;"	f
_glfwPlatformSetWindowPos	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetWindowPos(_GLFWwindow* window, int xpos, int ypos)$/;"	f
_glfwPlatformSetWindowResizable	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetWindowResizable(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowResizable	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetWindowResizable(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowResizable	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetWindowResizable(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowResizable	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetWindowResizable(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowResizable	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetWindowResizable(_GLFWwindow* window, GLFWbool enabled)$/;"	f
_glfwPlatformSetWindowSize	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetWindowSize(_GLFWwindow* window, int width, int height)$/;"	f
_glfwPlatformSetWindowSize	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetWindowSize(_GLFWwindow* window, int width, int height)$/;"	f
_glfwPlatformSetWindowSize	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetWindowSize(_GLFWwindow* window, int width, int height)$/;"	f
_glfwPlatformSetWindowSize	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetWindowSize(_GLFWwindow* window, int width, int height)$/;"	f
_glfwPlatformSetWindowSize	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetWindowSize(_GLFWwindow* window, int width, int height)$/;"	f
_glfwPlatformSetWindowSizeLimits	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetWindowSizeLimits(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowSizeLimits	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetWindowSizeLimits(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowSizeLimits	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetWindowSizeLimits(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowSizeLimits	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetWindowSizeLimits(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowSizeLimits	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetWindowSizeLimits(_GLFWwindow* window,$/;"	f
_glfwPlatformSetWindowTitle	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformSetWindowTitle(_GLFWwindow* window, const char* title)$/;"	f
_glfwPlatformSetWindowTitle	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformSetWindowTitle(_GLFWwindow* window, const char* title)$/;"	f
_glfwPlatformSetWindowTitle	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformSetWindowTitle(_GLFWwindow* window, const char* title)$/;"	f
_glfwPlatformSetWindowTitle	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformSetWindowTitle(_GLFWwindow* window, const char* title)$/;"	f
_glfwPlatformSetWindowTitle	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformSetWindowTitle(_GLFWwindow* window, const char* title)$/;"	f
_glfwPlatformShowWindow	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformShowWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformShowWindow	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformShowWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformShowWindow	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformShowWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformShowWindow	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformShowWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformShowWindow	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformShowWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformTerminate	thirdparty/glfw/src/mir_init.c	/^void _glfwPlatformTerminate(void)$/;"	f
_glfwPlatformTerminate	thirdparty/glfw/src/null_init.c	/^void _glfwPlatformTerminate(void)$/;"	f
_glfwPlatformTerminate	thirdparty/glfw/src/win32_init.c	/^void _glfwPlatformTerminate(void)$/;"	f
_glfwPlatformTerminate	thirdparty/glfw/src/wl_init.c	/^void _glfwPlatformTerminate(void)$/;"	f
_glfwPlatformTerminate	thirdparty/glfw/src/x11_init.c	/^void _glfwPlatformTerminate(void)$/;"	f
_glfwPlatformUnhideWindow	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformUnhideWindow(_GLFWwindow* window)$/;"	f
_glfwPlatformUnlockMutex	thirdparty/glfw/src/posix_thread.c	/^void _glfwPlatformUnlockMutex(_GLFWmutex* mutex)$/;"	f
_glfwPlatformUnlockMutex	thirdparty/glfw/src/win32_thread.c	/^void _glfwPlatformUnlockMutex(_GLFWmutex* mutex)$/;"	f
_glfwPlatformWaitEvents	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformWaitEvents(void)$/;"	f
_glfwPlatformWaitEvents	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformWaitEvents(void)$/;"	f
_glfwPlatformWaitEvents	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformWaitEvents(void)$/;"	f
_glfwPlatformWaitEvents	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformWaitEvents(void)$/;"	f
_glfwPlatformWaitEvents	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformWaitEvents(void)$/;"	f
_glfwPlatformWaitEventsTimeout	thirdparty/glfw/src/mir_window.c	/^void _glfwPlatformWaitEventsTimeout(double timeout)$/;"	f
_glfwPlatformWaitEventsTimeout	thirdparty/glfw/src/null_window.c	/^void _glfwPlatformWaitEventsTimeout(double timeout)$/;"	f
_glfwPlatformWaitEventsTimeout	thirdparty/glfw/src/win32_window.c	/^void _glfwPlatformWaitEventsTimeout(double timeout)$/;"	f
_glfwPlatformWaitEventsTimeout	thirdparty/glfw/src/wl_window.c	/^void _glfwPlatformWaitEventsTimeout(double timeout)$/;"	f
_glfwPlatformWaitEventsTimeout	thirdparty/glfw/src/x11_window.c	/^void _glfwPlatformWaitEventsTimeout(double timeout)$/;"	f
_glfwPlatformWindowFocused	thirdparty/glfw/src/mir_window.c	/^int _glfwPlatformWindowFocused(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowFocused	thirdparty/glfw/src/null_window.c	/^int _glfwPlatformWindowFocused(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowFocused	thirdparty/glfw/src/win32_window.c	/^int _glfwPlatformWindowFocused(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowFocused	thirdparty/glfw/src/wl_window.c	/^int _glfwPlatformWindowFocused(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowFocused	thirdparty/glfw/src/x11_window.c	/^int _glfwPlatformWindowFocused(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowIconified	thirdparty/glfw/src/mir_window.c	/^int _glfwPlatformWindowIconified(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowIconified	thirdparty/glfw/src/null_window.c	/^int _glfwPlatformWindowIconified(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowIconified	thirdparty/glfw/src/win32_window.c	/^int _glfwPlatformWindowIconified(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowIconified	thirdparty/glfw/src/wl_window.c	/^int _glfwPlatformWindowIconified(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowIconified	thirdparty/glfw/src/x11_window.c	/^int _glfwPlatformWindowIconified(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowMaximized	thirdparty/glfw/src/mir_window.c	/^int _glfwPlatformWindowMaximized(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowMaximized	thirdparty/glfw/src/null_window.c	/^int _glfwPlatformWindowMaximized(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowMaximized	thirdparty/glfw/src/win32_window.c	/^int _glfwPlatformWindowMaximized(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowMaximized	thirdparty/glfw/src/wl_window.c	/^int _glfwPlatformWindowMaximized(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowMaximized	thirdparty/glfw/src/x11_window.c	/^int _glfwPlatformWindowMaximized(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowVisible	thirdparty/glfw/src/mir_window.c	/^int _glfwPlatformWindowVisible(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowVisible	thirdparty/glfw/src/null_window.c	/^int _glfwPlatformWindowVisible(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowVisible	thirdparty/glfw/src/win32_window.c	/^int _glfwPlatformWindowVisible(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowVisible	thirdparty/glfw/src/wl_window.c	/^int _glfwPlatformWindowVisible(_GLFWwindow* window)$/;"	f
_glfwPlatformWindowVisible	thirdparty/glfw/src/x11_window.c	/^int _glfwPlatformWindowVisible(_GLFWwindow* window)$/;"	f
_glfwPollMonitorsMir	thirdparty/glfw/src/mir_monitor.c	/^void _glfwPollMonitorsMir(void)$/;"	f
_glfwPollMonitorsWin32	thirdparty/glfw/src/win32_monitor.c	/^void _glfwPollMonitorsWin32(void)$/;"	f
_glfwPollMonitorsX11	thirdparty/glfw/src/x11_monitor.c	/^void _glfwPollMonitorsX11(void)$/;"	f
_glfwPushSelectionToManagerX11	thirdparty/glfw/src/x11_window.c	/^void _glfwPushSelectionToManagerX11(void)$/;"	f
_glfwRefreshContextAttribs	thirdparty/glfw/src/context.c	/^GLFWbool _glfwRefreshContextAttribs(const _GLFWctxconfig* ctxconfig)$/;"	f
_glfwRegisterWindowClassWin32	thirdparty/glfw/src/win32_window.c	/^GLFWbool _glfwRegisterWindowClassWin32(void)$/;"	f
_glfwReleaseErrorHandlerX11	thirdparty/glfw/src/x11_init.c	/^void _glfwReleaseErrorHandlerX11(void)$/;"	f
_glfwRestoreVideoModeWin32	thirdparty/glfw/src/win32_monitor.c	/^void _glfwRestoreVideoModeWin32(_GLFWmonitor* monitor)$/;"	f
_glfwRestoreVideoModeX11	thirdparty/glfw/src/x11_monitor.c	/^void _glfwRestoreVideoModeX11(_GLFWmonitor* monitor)$/;"	f
_glfwSetVideoModeWin32	thirdparty/glfw/src/win32_monitor.c	/^GLFWbool _glfwSetVideoModeWin32(_GLFWmonitor* monitor, const GLFWvidmode* desired)$/;"	f
_glfwSetVideoModeX11	thirdparty/glfw/src/x11_monitor.c	/^GLFWbool _glfwSetVideoModeX11(_GLFWmonitor* monitor, const GLFWvidmode* desired)$/;"	f
_glfwSplitBPP	thirdparty/glfw/src/monitor.c	/^void _glfwSplitBPP(int bpp, int* red, int* green, int* blue)$/;"	f
_glfwStringInExtensionString	thirdparty/glfw/src/context.c	/^GLFWbool _glfwStringInExtensionString(const char* string, const char* extensions)$/;"	f
_glfwTerminateEGL	thirdparty/glfw/src/egl_context.c	/^void _glfwTerminateEGL(void)$/;"	f
_glfwTerminateGLX	thirdparty/glfw/src/glx_context.c	/^void _glfwTerminateGLX(void)$/;"	f
_glfwTerminateJoysticksLinux	thirdparty/glfw/src/linux_joystick.c	/^void _glfwTerminateJoysticksLinux(void)$/;"	f
_glfwTerminateJoysticksWin32	thirdparty/glfw/src/win32_joystick.c	/^void _glfwTerminateJoysticksWin32(void)$/;"	f
_glfwTerminateOSMesa	thirdparty/glfw/src/osmesa_context.c	/^void _glfwTerminateOSMesa(void)$/;"	f
_glfwTerminateVulkan	thirdparty/glfw/src/vulkan.c	/^void _glfwTerminateVulkan(void)$/;"	f
_glfwTerminateWGL	thirdparty/glfw/src/wgl_context.c	/^void _glfwTerminateWGL(void)$/;"	f
_glfwUnregisterWindowClassWin32	thirdparty/glfw/src/win32_window.c	/^void _glfwUnregisterWindowClassWin32(void)$/;"	f
_glfw_ChangeWindowMessageFilterEx	thirdparty/glfw/src/win32_platform.h	178;"	d
_glfw_DwmFlush	thirdparty/glfw/src/win32_platform.h	184;"	d
_glfw_DwmIsCompositionEnabled	thirdparty/glfw/src/win32_platform.h	183;"	d
_glfw_GUID_Button	thirdparty/glfw/src/win32_joystick.c	/^static const GUID _glfw_GUID_Button = {0xa36d02f0,0xc9f3,0x11cf,{0xbf,0xc7,0x44,0x45,0x53,0x54,0x00,0x00}};$/;"	v	file:
_glfw_GUID_DEVINTERFACE_HID	thirdparty/glfw/src/win32_init.c	/^static const GUID _glfw_GUID_DEVINTERFACE_HID = {0x4d1e55b2,0xf16f,0x11cf,{0x88,0xcb,0x00,0x11,0x11,0x00,0x00,0x30}};$/;"	v	file:
_glfw_GUID_POV	thirdparty/glfw/src/win32_joystick.c	/^static const GUID _glfw_GUID_POV = {0xa36d02f2,0xc9f3,0x11cf,{0xbf,0xc7,0x44,0x45,0x53,0x54,0x00,0x00}};$/;"	v	file:
_glfw_GUID_RxAxis	thirdparty/glfw/src/win32_joystick.c	/^static const GUID _glfw_GUID_RxAxis = {0xa36d02f4,0xc9f3,0x11cf,{0xbf,0xc7,0x44,0x45,0x53,0x54,0x00,0x00}};$/;"	v	file:
_glfw_GUID_RyAxis	thirdparty/glfw/src/win32_joystick.c	/^static const GUID _glfw_GUID_RyAxis = {0xa36d02f5,0xc9f3,0x11cf,{0xbf,0xc7,0x44,0x45,0x53,0x54,0x00,0x00}};$/;"	v	file:
_glfw_GUID_RzAxis	thirdparty/glfw/src/win32_joystick.c	/^static const GUID _glfw_GUID_RzAxis = {0xa36d02e3,0xc9f3,0x11cf,{0xbf,0xc7,0x44,0x45,0x53,0x54,0x00,0x00}};$/;"	v	file:
_glfw_GUID_Slider	thirdparty/glfw/src/win32_joystick.c	/^static const GUID _glfw_GUID_Slider = {0xa36d02e4,0xc9f3,0x11cf,{0xbf,0xc7,0x44,0x45,0x53,0x54,0x00,0x00}};$/;"	v	file:
_glfw_GUID_XAxis	thirdparty/glfw/src/win32_joystick.c	/^static const GUID _glfw_GUID_XAxis = {0xa36d02e0,0xc9f3,0x11cf,{0xbf,0xc7,0x44,0x45,0x53,0x54,0x00,0x00}};$/;"	v	file:
_glfw_GUID_YAxis	thirdparty/glfw/src/win32_joystick.c	/^static const GUID _glfw_GUID_YAxis = {0xa36d02e1,0xc9f3,0x11cf,{0xbf,0xc7,0x44,0x45,0x53,0x54,0x00,0x00}};$/;"	v	file:
_glfw_GUID_ZAxis	thirdparty/glfw/src/win32_joystick.c	/^static const GUID _glfw_GUID_ZAxis = {0xa36d02e2,0xc9f3,0x11cf,{0xbf,0xc7,0x44,0x45,0x53,0x54,0x00,0x00}};$/;"	v	file:
_glfw_IID_IDirectInput8W	thirdparty/glfw/src/win32_joystick.c	/^static const GUID _glfw_IID_IDirectInput8W = {0xbf798031,0x483a,0x4da2,{0xaa,0x99,0x5d,0x64,0xed,0x36,0x97,0x00}};$/;"	v	file:
_glfw_SetProcessDPIAware	thirdparty/glfw/src/win32_platform.h	177;"	d
_glfw_SetProcessDpiAwareness	thirdparty/glfw/src/win32_platform.h	188;"	d
_glfw_dlclose	thirdparty/glfw/src/cocoa_platform.h	58;"	d
_glfw_dlclose	thirdparty/glfw/src/mir_platform.h	55;"	d
_glfw_dlclose	thirdparty/glfw/src/null_platform.h	47;"	d
_glfw_dlclose	thirdparty/glfw/src/null_platform.h	51;"	d
_glfw_dlclose	thirdparty/glfw/src/win32_platform.h	212;"	d
_glfw_dlclose	thirdparty/glfw/src/wl_platform.h	57;"	d
_glfw_dlclose	thirdparty/glfw/src/x11_platform.h	108;"	d
_glfw_dlopen	thirdparty/glfw/src/cocoa_platform.h	57;"	d
_glfw_dlopen	thirdparty/glfw/src/mir_platform.h	54;"	d
_glfw_dlopen	thirdparty/glfw/src/null_platform.h	46;"	d
_glfw_dlopen	thirdparty/glfw/src/null_platform.h	50;"	d
_glfw_dlopen	thirdparty/glfw/src/win32_platform.h	211;"	d
_glfw_dlopen	thirdparty/glfw/src/wl_platform.h	56;"	d
_glfw_dlopen	thirdparty/glfw/src/x11_platform.h	107;"	d
_glfw_dlsym	thirdparty/glfw/src/cocoa_platform.h	59;"	d
_glfw_dlsym	thirdparty/glfw/src/mir_platform.h	56;"	d
_glfw_dlsym	thirdparty/glfw/src/null_platform.h	48;"	d
_glfw_dlsym	thirdparty/glfw/src/null_platform.h	52;"	d
_glfw_dlsym	thirdparty/glfw/src/win32_platform.h	213;"	d
_glfw_dlsym	thirdparty/glfw/src/wl_platform.h	58;"	d
_glfw_dlsym	thirdparty/glfw/src/x11_platform.h	109;"	d
_grow_capacity	thirdparty/imgui/include/imgui/imgui.h	/^    inline int                  _grow_capacity(int new_size)    { int new_capacity = Capacity ? (Capacity + Capacity\/2) : 8; return new_capacity > new_size ? new_capacity : new_size; }$/;"	f	class:ImVector
_h	thirdparty/tinydir/include/tinydir/tinydir.h	/^	HANDLE _h;$/;"	m	struct:tinydir_dir
_insert_space	lib/lib/include/lib/array.hpp	/^  void _insert_space(const size_t i, const size_t count)$/;"	f	class:LIB_NS_NAME::array
_rmt_BeginCPUSample	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_BeginCPUSample(rmtPStr name, rmtU32 flags, rmtU32* hash_cache)$/;"	f
_rmt_BeginCUDASample	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_BeginCUDASample(rmtPStr name, rmtU32* hash_cache, void* stream)$/;"	f
_rmt_BeginD3D11Sample	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_BeginD3D11Sample(rmtPStr name, rmtU32* hash_cache)$/;"	f
_rmt_BeginMetalSample	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_BeginMetalSample(rmtPStr name, rmtU32* hash_cache)$/;"	f
_rmt_BeginOpenGLSample	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_BeginOpenGLSample(rmtPStr name, rmtU32* hash_cache)$/;"	f
_rmt_BindCUDA	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_BindCUDA(const rmtCUDABind* bind)$/;"	f
_rmt_BindD3D11	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_BindD3D11(void* device, void* context)$/;"	f
_rmt_BindOpenGL	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_BindOpenGL()$/;"	f
_rmt_CreateGlobalInstance	thirdparty/remotery/src/Remotery.c	/^RMT_API rmtError _rmt_CreateGlobalInstance(Remotery** remotery)$/;"	f
_rmt_DestroyGlobalInstance	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_DestroyGlobalInstance(Remotery* remotery)$/;"	f
_rmt_EndCPUSample	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_EndCPUSample(void)$/;"	f
_rmt_EndCUDASample	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_EndCUDASample(void* stream)$/;"	f
_rmt_EndD3D11Sample	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_EndD3D11Sample(void)$/;"	f
_rmt_EndMetalSample	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_EndMetalSample(void)$/;"	f
_rmt_EndOpenGLSample	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_EndOpenGLSample(void)$/;"	f
_rmt_GetGlobalInstance	thirdparty/remotery/src/Remotery.c	/^RMT_API Remotery* _rmt_GetGlobalInstance(void)$/;"	f
_rmt_LogText	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_LogText(rmtPStr text)$/;"	f
_rmt_SetCurrentThreadName	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_SetCurrentThreadName(rmtPStr thread_name)$/;"	f
_rmt_SetGlobalInstance	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_SetGlobalInstance(Remotery* remotery)$/;"	f
_rmt_Settings	thirdparty/remotery/src/Remotery.c	/^RMT_API rmtSettings* _rmt_Settings(void)$/;"	f
_rmt_UnbindD3D11	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_UnbindD3D11(void)$/;"	f
_rmt_UnbindOpenGL	thirdparty/remotery/src/Remotery.c	/^RMT_API void _rmt_UnbindOpenGL(void)$/;"	f
_s	thirdparty/tinydir/include/tinydir/tinydir.h	/^	struct _stat _s;$/;"	m	struct:tinydir_file	typeref:struct:tinydir_file::_stat
_s	thirdparty/tinydir/include/tinydir/tinydir.h	/^	struct stat _s;$/;"	m	struct:tinydir_file	typeref:struct:tinydir_file::stat
_slow_emplace	lib/lib/include/lib/array.hpp	/^  void _slow_emplace(Args &&...args)$/;"	f	class:LIB_NS_NAME::array
_slow_push	lib/lib/include/lib/array.hpp	/^  void _slow_push(T &&item)$/;"	f	class:LIB_NS_NAME::array
_slow_push	lib/lib/include/lib/array.hpp	/^  void _slow_push(const T &item)$/;"	f	class:LIB_NS_NAME::array
_thrd_wrapper_function	thirdparty/glfw/src/deps/tinycthread.c	/^static unsigned WINAPI _thrd_wrapper_function(void * aArg)$/;"	f	file:
_thread_start_info	thirdparty/glfw/src/deps/tinycthread.c	/^} _thread_start_info;$/;"	t	typeref:struct:__anon186	file:
_tinydir_char_t	thirdparty/tinydir/include/tinydir/tinydir.h	65;"	d
_tinydir_char_t	thirdparty/tinydir/include/tinydir/tinydir.h	74;"	d
_tinydir_closedir	thirdparty/tinydir/include/tinydir/tinydir.h	154;"	d
_tinydir_closedir	thirdparty/tinydir/include/tinydir/tinydir.h	160;"	d
_tinydir_dirent	thirdparty/tinydir/include/tinydir/tinydir.h	151;"	d
_tinydir_dirent	thirdparty/tinydir/include/tinydir/tinydir.h	157;"	d
_tinydir_dirent_buf_size	thirdparty/tinydir/include/tinydir/tinydir.h	/^size_t _tinydir_dirent_buf_size(_TINYDIR_DIR *dirp)$/;"	f
_tinydir_file_cmp	thirdparty/tinydir/include/tinydir/tinydir.h	/^int _tinydir_file_cmp(const void *a, const void *b)$/;"	f
_tinydir_get_ext	thirdparty/tinydir/include/tinydir/tinydir.h	/^void _tinydir_get_ext(tinydir_file *file)$/;"	f
_tinydir_opendir	thirdparty/tinydir/include/tinydir/tinydir.h	152;"	d
_tinydir_opendir	thirdparty/tinydir/include/tinydir/tinydir.h	158;"	d
_tinydir_readdir	thirdparty/tinydir/include/tinydir/tinydir.h	153;"	d
_tinydir_readdir	thirdparty/tinydir/include/tinydir/tinydir.h	159;"	d
_tinydir_strcat	thirdparty/tinydir/include/tinydir/tinydir.h	69;"	d
_tinydir_strcat	thirdparty/tinydir/include/tinydir/tinydir.h	78;"	d
_tinydir_strcmp	thirdparty/tinydir/include/tinydir/tinydir.h	70;"	d
_tinydir_strcmp	thirdparty/tinydir/include/tinydir/tinydir.h	79;"	d
_tinydir_strcpy	thirdparty/tinydir/include/tinydir/tinydir.h	68;"	d
_tinydir_strcpy	thirdparty/tinydir/include/tinydir/tinydir.h	77;"	d
_tinydir_strlen	thirdparty/tinydir/include/tinydir/tinydir.h	67;"	d
_tinydir_strlen	thirdparty/tinydir/include/tinydir/tinydir.h	76;"	d
_tinydir_strncmp	thirdparty/tinydir/include/tinydir/tinydir.h	72;"	d
_tinydir_strncmp	thirdparty/tinydir/include/tinydir/tinydir.h	81;"	d
_tinydir_strrchr	thirdparty/tinydir/include/tinydir/tinydir.h	71;"	d
_tinydir_strrchr	thirdparty/tinydir/include/tinydir/tinydir.h	80;"	d
_ttherad_timespec	thirdparty/glfw/src/deps/tinycthread.h	/^struct _ttherad_timespec {$/;"	s
_tthread_clock_gettime	thirdparty/glfw/src/deps/tinycthread.c	/^int _tthread_clock_gettime(clockid_t clk_id, struct timespec *ts)$/;"	f
_tthread_clockid_t	thirdparty/glfw/src/deps/tinycthread.h	/^typedef int _tthread_clockid_t;$/;"	t
a	thirdparty/glfw/src/deps/nuklear.h	/^    float a[2];$/;"	m	struct:nk_command_arc
a	thirdparty/glfw/src/deps/nuklear.h	/^    float a[2];$/;"	m	struct:nk_command_arc_filled
a	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i a;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_vec2i
a	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i a;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_vec2i
a	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color
a	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf
a	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkComponentSwizzle    a;$/;"	m	struct:VkComponentMapping
a_cos	lib/math/include/math/general/general.hpp	/^a_cos(const float radians)$/;"	f
a_sin	lib/math/include/math/general/general.hpp	/^a_sin(const float radians)$/;"	f
a_tan2	lib/math/include/math/general/general.hpp	/^a_tan2(const float x, const float y)$/;"	f
aabb	lib/math/include/math/geometry/geometry_types.hpp	/^struct aabb$/;"	s
aabb_combine	lib/math/include/math/geometry/aabb.hpp	/^aabb_combine(const aabb &a, const aabb &b)$/;"	f
aabb_get_extents	lib/math/include/math/geometry/aabb.hpp	/^aabb_get_extents(const aabb &a)$/;"	f
aabb_get_half_extents	lib/math/include/math/geometry/aabb.hpp	/^aabb_get_half_extents(const aabb &a)$/;"	f
aabb_get_max	lib/math/include/math/geometry/aabb.hpp	/^aabb_get_max(const aabb &a)$/;"	f
aabb_get_min	lib/math/include/math/geometry/aabb.hpp	/^aabb_get_min(const aabb &a)$/;"	f
aabb_get_origin	lib/math/include/math/geometry/aabb.hpp	/^aabb_get_origin(const aabb &a)$/;"	f
aabb_init	lib/math/include/math/geometry/aabb.hpp	/^aabb_init($/;"	f
aabb_init	lib/math/include/math/geometry/aabb.hpp	/^aabb_init()$/;"	f
aabb_init	lib/math/include/math/geometry/aabb.hpp	/^aabb_init(const float min[3], const float max[3])$/;"	f
aabb_init	lib/math/include/math/geometry/aabb.hpp	/^aabb_init(const vec3 center, const float scale)$/;"	f
aabb_init	lib/math/include/math/geometry/aabb.hpp	/^aabb_init(const vec3 min, const vec3 max)$/;"	f
aabb_intersection_test	lib/math/include/math/geometry/aabb.hpp	/^aabb_intersection_test(const aabb &a,$/;"	f
aabb_scale	lib/math/include/math/geometry/aabb.hpp	/^aabb_scale(aabb &aabb_to_scale, const float scale)$/;"	f
aabb_scale	lib/math/include/math/geometry/aabb.hpp	/^aabb_scale(aabb &aabb_to_scale, const vec3 scale)$/;"	f
aabb_set_origin	lib/math/include/math/geometry/aabb.hpp	/^aabb_set_origin(aabb &aabb_to_move, const vec3 new_position)$/;"	f
abs	lib/math/include/math/general/general.hpp	/^abs(const float x)$/;"	f
abs	lib/math/include/math/general/general.hpp	/^abs(const int32_t x)$/;"	f
absInfo	thirdparty/glfw/src/linux_joystick.h	/^    struct input_absinfo    absInfo[ABS_CNT];$/;"	m	struct:_GLFWjoystickLinux	typeref:struct:_GLFWjoystickLinux::input_absinfo
absMap	thirdparty/glfw/src/linux_joystick.h	/^    int                     absMap[ABS_CNT];$/;"	m	struct:_GLFWjoystickLinux
acc	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 acc;$/;"	m	struct:stb_vorbis	file:
acc	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 acc;$/;"	m	struct:stb_vorbis	file:
accPrev	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int accPrev;	\/\/ previous accu value (for ring modulation)$/;"	m	class:SIDsound::SIDVoice
accPrev	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int accPrev;	\/\/ previous accu value (for ring modulation)$/;"	m	class:SIDsound::SIDVoice
accu	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int accu;		\/\/ accumulator of the waveform generator, 8.16 fixed$/;"	m	class:SIDsound::SIDVoice
accu	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int accu;		\/\/ accumulator of the waveform generator, 8.16 fixed$/;"	m	class:SIDsound::SIDVoice
accumAlphaBits	thirdparty/glfw/src/internal.h	/^    int         accumAlphaBits;$/;"	m	struct:_GLFWfbconfig
accumBlueBits	thirdparty/glfw/src/internal.h	/^    int         accumBlueBits;$/;"	m	struct:_GLFWfbconfig
accumGreenBits	thirdparty/glfw/src/internal.h	/^    int         accumGreenBits;$/;"	m	struct:_GLFWfbconfig
accumRedBits	thirdparty/glfw/src/internal.h	/^    int         accumRedBits;$/;"	m	struct:_GLFWfbconfig
acquireCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                 acquireCount;$/;"	m	struct:VkWin32KeyedMutexAcquireReleaseInfoNV
acquireMonitor	thirdparty/glfw/src/win32_window.c	/^static GLFWbool acquireMonitor(_GLFWwindow* window)$/;"	f	file:
acquireMonitor	thirdparty/glfw/src/x11_window.c	/^static GLFWbool acquireMonitor(_GLFWwindow* window)$/;"	f	file:
acquiredMonitorCount	thirdparty/glfw/src/win32_platform.h	/^    int                 acquiredMonitorCount;$/;"	m	struct:_GLFWlibraryWin32
actions	lib/nil/src/interface/data/bounding_box.cpp	/^  lib::array<uint32_t> actions;$/;"	m	struct:__anon33::Bounding_box_data	file:
actions	lib/nil/src/interface/data/common.hpp	/^  lib::array<uint32_t>  actions;$/;"	m	struct:Nil::Data::Generic_data
active	thirdparty/glfw/src/deps/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_edit_state
active	thirdparty/glfw/src/deps/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_property_state
active	thirdparty/glfw/src/deps/nuklear.h	/^    int active;$/;"	m	struct:nk_buffer_marker
active	thirdparty/glfw/src/deps/nuklear.h	/^    int active;$/;"	m	struct:nk_popup_buffer
active	thirdparty/glfw/src/deps/nuklear.h	/^    int active;$/;"	m	struct:nk_popup_state
active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_style_item
active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_style_item
active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_style_item
active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_item
active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_item
active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_window *active;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_window
active	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char active;$/;"	m	struct:nk_text_edit
active_con	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned active_con;$/;"	m	struct:nk_popup_state
active_head	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rp_node *active_head;$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_context::nk_rp_node
active_head	thirdparty/stb/include/stb/stb_rect_pack.h	/^   stbrp_node *active_head;$/;"	m	struct:stbrp_context
active_window_color	lib/nau/src/nau.cpp	/^  uint32_t active_window_color;$/;"	m	struct:__anon42::Nau_ctx	file:
actram	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *actram;$/;"	m	class:TED
actromhi	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *actromlo, *actromhi;$/;"	m	class:TED
actromlo	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *actromlo, *actromhi;$/;"	m	class:TED
adapterName	thirdparty/glfw/src/win32_platform.h	/^    WCHAR               adapterName[32];$/;"	m	struct:_GLFWmonitorWin32
add	lib/lib/include/lib/string_pool.hpp	/^add(const char *name)$/;"	f	namespace:LIB_NS_NAME::string_pool
add	lib/math/include/math/general/general.hpp	/^add(float *out, const float *a, const float *b, const size_t count)$/;"	f
add	lib/roa/src/interface/vector3.cpp	/^Vector3::add(const Vector3 &other) const$/;"	f	class:ROA::Vector3
add	thirdparty/catch/include/catch/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	thirdparty/catch/include/catch/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int add;		\/\/ added to the accumulator for each sample$/;"	m	class:SIDsound::SIDVoice
add	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int add;		\/\/ added to the accumulator for each sample$/;"	m	class:SIDsound::SIDVoice
addNewEvent	thirdparty/glfw/src/mir_window.c	/^static void addNewEvent(MirWindow* window, const MirEvent* event, void* context)$/;"	f	file:
addRef	thirdparty/catch/include/catch/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addVoiceToGroup	thirdparty/soloud/src/core/soloud_core_voicegroup.cpp	/^	result Soloud::addVoiceToGroup(handle aVoiceGroupHandle, handle aVoiceHandle)$/;"	f	class:SoLoud::Soloud
addWork	thirdparty/soloud/src/core/soloud_thread.cpp	/^		void Pool::addWork(PoolTask *aTask)$/;"	f	class:SoLoud::Thread::Pool
add_child	lib/lib/include/lib/nyaml.hpp	/^node::add_child()$/;"	f	class:LIB_NS_NAME::nyaml::node
add_component	lib/roa/include/roa/object.hpp	/^  add_component()$/;"	f	class:ROA::Object
add_component	lib/roa/src/component/component_engine.cpp	/^add_component(const uint32_t object_id, ROA::Component *comp)$/;"	f	namespace:ROA_detail
add_data	lib/nil_aspects/src/imgui/imgui_aspect.cpp	/^add_data(Nil::Node &node)$/;"	f	namespace:Nil_ext::ImGui_Aspect::__anon47
add_data	lib/roa/include/roa/object.hpp	/^  add_data()$/;"	f	class:ROA::Object
add_entry	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void add_entry(Codebook *c, uint32 huff_code, int symbol, int count, int len, uint32 *values)$/;"	f	file:
add_entry	thirdparty/stb/include/stb/stb_vorbis.c	/^static void add_entry(Codebook *c, uint32 huff_code, int symbol, int count, int len, uint32 *values)$/;"	f	file:
add_tag	lib/nil/src/interface/node.cpp	/^Node::add_tag(const char *tag)$/;"	f	class:Nil::Node
added_bb_data	lib/nil/src/interface/data/bounding_box.cpp	/^  lib::array<Nil::Data::Bounding_box> added_bb_data;$/;"	m	struct:__anon33::Bounding_box_data	file:
added_bb_nodes	lib/nil/src/interface/data/bounding_box.cpp	/^  std::vector<Nil::Node>              added_bb_nodes;$/;"	m	struct:__anon33::Bounding_box_data	file:
added_data	lib/nil/src/interface/data/common.hpp	/^  lib::array<T>           added_data;$/;"	m	struct:Nil::Data::Generic_data
added_nodes	lib/nil/src/interface/data/common.hpp	/^  std::vector<Nil::Node>  added_nodes;$/;"	m	struct:Nil::Data::Generic_data
addr	thirdparty/soloud/src/tools/tedsid2dump/types.h	/^	unsigned int addr;$/;"	m	struct:_MEM_PATCH
address	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^  			unsigned int address;$/;"	m	struct:CPU::__anon195
addressModeU	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSamplerAddressMode    addressModeU;$/;"	m	struct:VkSamplerCreateInfo
addressModeV	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSamplerAddressMode    addressModeV;$/;"	m	struct:VkSamplerCreateInfo
addressModeW	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSamplerAddressMode    addressModeW;$/;"	m	struct:VkSamplerCreateInfo
adjustString	thirdparty/catch/include/catch/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
advance	thirdparty/stb/include/stb/stb_easy_font.h	/^    unsigned char advance;$/;"	m	struct:__anon136
al_BufferData	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef void (*al_BufferData)(ALuint buffer, ALenum format, const ALvoid *data, ALsizei size, ALsizei freq);$/;"	t	file:
al_DeleteBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef void (*al_DeleteBuffers)(ALsizei n, ALuint *buffers);$/;"	t	file:
al_DeleteSources	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef void (*al_DeleteSources)(ALsizei n, ALuint *sources);$/;"	t	file:
al_GenBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef void (*al_GenBuffers)(ALsizei n, ALuint *buffers);$/;"	t	file:
al_GenSources	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef void (*al_GenSources)(ALsizei n, ALuint *sources);$/;"	t	file:
al_GetSourcei	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef void (*al_GetSourcei)(ALuint source, ALenum param, ALint *value);$/;"	t	file:
al_SourcePlay	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef void (*al_SourcePlay)(ALuint source);$/;"	t	file:
al_SourceQueueBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef void (*al_SourceQueueBuffers)(ALuint source, ALsizei nb, const ALuint *buffers);$/;"	t	file:
al_SourceStop	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef void (*al_SourceStop)(ALuint source);$/;"	t	file:
al_SourceUnqueueBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef void (*al_SourceUnqueueBuffers)(ALuint source, ALsizei nb, ALuint *buffers);$/;"	t	file:
alc_CloseDevice	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef void (*alc_CloseDevice)(ALCdevice *device);$/;"	t	file:
alc_CreateContext	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef ALCcontext* (*alc_CreateContext)(ALCdevice *device, const ALCint* attrlist);$/;"	t	file:
alc_DestroyContext	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef void (*alc_DestroyContext)(ALCcontext *context);$/;"	t	file:
alc_MakeContextCurrent	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef ALCboolean (*alc_MakeContextCurrent)(ALCcontext *context);$/;"	t	file:
alc_OpenDevice	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^typedef ALCdevice* (*alc_OpenDevice)(const ALCchar *devicename);$/;"	t	file:
align	lib/lib/include/lib/alignment.hpp	/^namespace align {$/;"	n	namespace:LIB_NS_NAME
align	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_style_header_align align;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_window_header::nk_style_header_align
align	thirdparty/glfw/src/deps/nuklear.h	/^    int align;$/;"	m	struct:nk_rp_context
align	thirdparty/stb/include/stb/stb_rect_pack.h	/^   int align;$/;"	m	struct:stbrp_context
aligned_write	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static bool aligned_write;$/;"	v	file:
alignment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize    alignment;$/;"	m	struct:VkMemoryRequirements
all_a	thirdparty/stb/include/stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon89
alloc	lib/lib/include/lib/memory.hpp	/^alloc()$/;"	f	namespace:LIB_NS_NAME::mem
alloc	thirdparty/glfw/src/deps/nuklear.h	/^    nk_plugin_alloc alloc;$/;"	m	struct:nk_allocator
alloc	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_allocator
alloc	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_pool	typeref:struct:nk_pool::nk_allocator
alloc	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_tt__hheap	typeref:struct:nk_tt__hheap::nk_allocator
alloc	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   stb_vorbis_alloc alloc;$/;"	m	struct:stb_vorbis	file:
alloc	thirdparty/stb/include/stb/stb_vorbis.c	/^   stb_vorbis_alloc alloc;$/;"	m	struct:stb_vorbis	file:
alloc_buffer	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   char *alloc_buffer;$/;"	m	struct:__anon201	file:
alloc_buffer	thirdparty/stb/include/stb/stb_vorbis.c	/^   char *alloc_buffer;$/;"	m	struct:__anon114	file:
alloc_buffer_length_in_bytes	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int   alloc_buffer_length_in_bytes;$/;"	m	struct:__anon201	file:
alloc_buffer_length_in_bytes	thirdparty/stb/include/stb/stb_vorbis.c	/^   int   alloc_buffer_length_in_bytes;$/;"	m	struct:__anon114	file:
alloc_granularity	thirdparty/remotery/src/Remotery.c	/^    rmtU32 alloc_granularity;$/;"	m	struct:__anon56	file:
alloca	thirdparty/stb/include/stb/stb_vorbis.c	580;"	d	file:
allocated	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size allocated;$/;"	m	struct:nk_buffer
allocated	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size allocated;$/;"	m	struct:nk_memory_status
allocated	thirdparty/glfw/src/posix_thread.h	/^    GLFWbool        allocated;$/;"	m	struct:_GLFWmutexPOSIX
allocated	thirdparty/glfw/src/posix_thread.h	/^    GLFWbool        allocated;$/;"	m	struct:_GLFWtlsPOSIX
allocated	thirdparty/glfw/src/win32_platform.h	/^    GLFWbool            allocated;$/;"	m	struct:_GLFWmutexWin32
allocated	thirdparty/glfw/src/win32_platform.h	/^    GLFWbool            allocated;$/;"	m	struct:_GLFWtlsWin32
allocationSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize       allocationSize;$/;"	m	struct:VkMemoryAllocateInfo
allocator	thirdparty/remotery/src/Remotery.c	/^    ObjectAllocator* allocator;$/;"	m	struct:Msg_SampleTree	file:
allocator	thirdparty/remotery/src/Remotery.c	/^    ObjectAllocator* allocator;$/;"	m	struct:SampleTree	file:
alphaBits	thirdparty/glfw/src/internal.h	/^    int         alphaBits;$/;"	m	struct:_GLFWfbconfig
alphaBlendOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBlendOp                alphaBlendOp;$/;"	m	struct:VkPipelineColorBlendAttachmentState
alphaMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDisplayPlaneAlphaFlagBitsKHR    alphaMode;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
alphaToCoverageEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                                 alphaToCoverageEnable;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
alphaToOne	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    alphaToOne;$/;"	m	struct:VkPhysicalDeviceFeatures
alphaToOneEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                                 alphaToOneEnable;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
alpha_channel	thirdparty/stb/include/stb/stb_image_resize.h	/^    int alpha_channel;$/;"	m	struct:__anon72
alsaCleanup	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^    static void alsaCleanup(Soloud *aSoloud)$/;"	f	namespace:SoLoud
alsaDeviceHandle	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^        snd_pcm_t *alsaDeviceHandle;$/;"	m	struct:SoLoud::ALSAData	file:
alsaThread	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^    static void alsaThread(void *aParam)$/;"	f	namespace:SoLoud
alsa_init	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^    result alsa_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
alsa_init	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^    result alsa_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer, unsigned int aChannels)$/;"	f	namespace:SoLoud
altMask	thirdparty/glfw/src/wl_platform.h	/^        xkb_mod_mask_t          altMask;$/;"	m	struct:_GLFWlibraryWayland::__anon144
alwaysFalse	thirdparty/catch/include/catch/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysTrue	thirdparty/catch/include/catch/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
amplitude_bits	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 amplitude_bits;$/;"	m	struct:__anon204	file:
amplitude_bits	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 amplitude_bits;$/;"	m	struct:__anon117	file:
amplitude_offset	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 amplitude_offset;$/;"	m	struct:__anon204	file:
amplitude_offset	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 amplitude_offset;$/;"	m	struct:__anon117	file:
angle	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 angle;$/;"	m	struct:__anon208	file:
angle	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 angle;$/;"	m	struct:__anon121	file:
angleLimit	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const float angleLimit = 0.96f;$/;"	m	namespace:ImGuizmo	file:
anisotropyEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                anisotropyEnable;$/;"	m	struct:VkSamplerCreateInfo
antiresonate	thirdparty/soloud/src/audiosource/speech/resonator.cpp	/^float resonator::antiresonate(float input)$/;"	f	class:resonator
api	thirdparty/glfw/src/win32_platform.h	/^        IDirectInput8W*                 api;$/;"	m	struct:_GLFWlibraryWin32::__anon154
apiVersion	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                            apiVersion;$/;"	m	struct:VkPhysicalDeviceProperties
apiVersion	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           apiVersion;$/;"	m	struct:VkApplicationInfo
app14_color_transform	thirdparty/stb/include/stb/stb_image.h	/^   int            app14_color_transform; \/\/ Adobe APP14 tag$/;"	m	struct:__anon81
append	lib/lib/include/lib/string.hpp	/^append(char *dest, const char *src, const size_t sizeof_dest)$/;"	f	namespace:LIB_NS_NAME::str
append	thirdparty/imgui/src/imgui.cpp	/^void ImGuiTextBuffer::append(const char* fmt, ...)$/;"	f	class:ImGuiTextBuffer
appendv	thirdparty/imgui/src/imgui.cpp	/^void ImGuiTextBuffer::appendv(const char* fmt, va_list args)$/;"	f	class:ImGuiTextBuffer
applicationVersion	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           applicationVersion;$/;"	m	struct:VkApplicationInfo
applyAspectRatio	thirdparty/glfw/src/win32_window.c	/^static void applyAspectRatio(_GLFWwindow* window, int edge, RECT* area)$/;"	f	file:
applyEvaluator	thirdparty/catch/include/catch/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
arcSafeRelease	thirdparty/catch/include/catch/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	thirdparty/catch/include/catch/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arc_segment_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int arc_segment_count; \/* number of segments used for arcs: default to 22 *\/$/;"	m	struct:nk_convert_config
arp_limit	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		int arp_limit;$/;"	m	class:SoLoud::SfxrInstance
arp_mod	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		double arp_mod;$/;"	m	class:SoLoud::SfxrInstance
arp_time	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		int arp_time;$/;"	m	class:SoLoud::SfxrInstance
array	lib/lib/include/lib/array.hpp	/^  : array()$/;"	f	class:LIB_NS_NAME::array
array	lib/lib/include/lib/array.hpp	/^  explicit array()$/;"	f	class:LIB_NS_NAME::array
array	lib/lib/include/lib/array.hpp	/^  explicit array(T *begin, T *end)$/;"	f	class:LIB_NS_NAME::array
array	lib/lib/include/lib/array.hpp	/^  explicit array(const array &other)$/;"	f	class:LIB_NS_NAME::array
array	lib/lib/include/lib/array.hpp	/^class array$/;"	c	namespace:LIB_NS_NAME
arrayLayer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              arrayLayer;$/;"	m	struct:VkImageSubresource
arrayLayers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                 arrayLayers;$/;"	m	struct:VkImageCreateInfo
arrayPitch	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize    arrayPitch;$/;"	m	struct:VkSubresourceLayout
array_of_unicode_codepoints	thirdparty/glfw/src/deps/nuklear.h	/^    int *array_of_unicode_codepoints;$/;"	m	struct:nk_tt_pack_range
array_of_unicode_codepoints	thirdparty/stb/include/stb/stb_truetype.h	/^   int *array_of_unicode_codepoints;       \/\/ if non-zero, then this is an array of unicode codepoints$/;"	m	struct:__anon100
array_size_required	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	882;"	d	file:
array_size_required	thirdparty/stb/include/stb/stb_vorbis.c	880;"	d	file:
ascent	thirdparty/glfw/src/deps/nuklear.h	/^    float ascent, descent;$/;"	m	struct:nk_baked_font
ashmem_create_region	thirdparty/remotery/src/Remotery.c	/^int ashmem_create_region(const char *name, size_t size)$/;"	f
aspectMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageAspectFlags          aspectMask;$/;"	m	struct:VkSparseImageFormatProperties
aspectMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageAspectFlags    aspectMask;$/;"	m	struct:VkClearAttachment
aspectMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageAspectFlags    aspectMask;$/;"	m	struct:VkImageSubresource
aspectMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageAspectFlags    aspectMask;$/;"	m	struct:VkImageSubresourceLayers
aspectMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageAspectFlags    aspectMask;$/;"	m	struct:VkImageSubresourceRange
aspect_shutdown_callback_count	lib/nil/src/internal_data/internal_data.hpp	/^  size_t                aspect_shutdown_callback_count;$/;"	m	struct:Nil_ctx
aspect_shutdown_callbacks	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_aspect_callback   aspect_shutdown_callbacks[NIL_MAX_ASPECT_COUNT];$/;"	m	struct:Nil_ctx
aspect_startup_callback_count	lib/nil/src/internal_data/internal_data.hpp	/^  size_t                aspect_startup_callback_count;$/;"	m	struct:Nil_ctx
aspect_startup_callbacks	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_aspect_callback   aspect_startup_callbacks[NIL_MAX_ASPECT_COUNT];$/;"	m	struct:Nil_ctx
aspect_tick_callback_count	lib/nil/src/internal_data/internal_data.hpp	/^  size_t                aspect_tick_callback_count;$/;"	m	struct:Nil_ctx
aspect_tick_callbacks	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_aspect_callback   aspect_tick_callbacks[NIL_MAX_ASPECT_COUNT];$/;"	m	struct:Nil_ctx
aspect_ui_menu_callback_count	lib/nil/src/internal_data/internal_data.hpp	/^  size_t                aspect_ui_menu_callback_count;$/;"	m	struct:Nil_ctx
aspect_ui_menu_callbacks	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_aspect_callback   aspect_ui_menu_callbacks[NIL_MAX_ASPECT_COUNT];$/;"	m	struct:Nil_ctx
aspect_ui_window_callback_count	lib/nil/src/internal_data/internal_data.hpp	/^  size_t                aspect_ui_window_callback_count;$/;"	m	struct:Nil_ctx
aspect_ui_window_callbacks	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_aspect_callback   aspect_ui_window_callbacks[NIL_MAX_ASPECT_COUNT];$/;"	m	struct:Nil_ctx
asset_load	lib/roa/src/interface/model_scene.cpp	/^bool asset_load(Nil::Node node, const char *filename)$/;"	f	namespace:__anon5
asset_path	lib/nil/src/interface/resource/directory.cpp	/^asset_path()$/;"	f	namespace:Nil::Resource
at	lib/lib/include/lib/array.hpp	/^  T& at(const size_t i)$/;"	f	class:LIB_NS_NAME::array
at	lib/lib/include/lib/array.hpp	/^  const T& at(const size_t i) const$/;"	f	class:LIB_NS_NAME::array
at_x	thirdparty/glfw/src/deps/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel
at_y	thirdparty/glfw/src/deps/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel
atlas	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_font_atlas
attachment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t         attachment;$/;"	m	struct:VkAttachmentReference
attachmentCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                                      attachmentCount;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
attachmentCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                          attachmentCount;$/;"	m	struct:VkRenderPassCreateInfo
attachmentCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                    attachmentCount;$/;"	m	struct:VkFramebufferCreateInfo
atten_const	lib/nil/include/nil/data/light.hpp	/^  float atten_const;$/;"	m	struct:Nil::Data::Light
atten_exponential	lib/nil/include/nil/data/light.hpp	/^  float atten_exponential;$/;"	m	struct:Nil::Data::Light
atten_linear	lib/nil/include/nil/data/light.hpp	/^  float atten_linear;$/;"	m	struct:Nil::Data::Light
attenuateExponentialDistance	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	float attenuateExponentialDistance(float aDistance, float aMinDistance, float aMaxDistance, float aRolloffFactor)$/;"	f	namespace:SoLoud
attenuateInvDistance	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	float attenuateInvDistance(float aDistance, float aMinDistance, float aMaxDistance, float aRolloffFactor)$/;"	f	namespace:SoLoud
attenuateLinearDistance	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	float attenuateLinearDistance(float aDistance, float aMinDistance, float aMaxDistance, float aRolloffFactor)$/;"	f	namespace:SoLoud
attenuation	lib/rov/include/rov/rov.hpp	/^  rovVec4 attenuation;  \/\/ const, linear, expo, extra$/;"	m	struct:rovLight
attribute	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_draw_vertex_layout_attribute attribute;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:enum:nk_draw_vertex_layout_element::nk_draw_vertex_layout_attribute
audio	lib/nil_aspects/include/aspect/so_loud.hpp	/^  SoLoud::handle audio;$/;"	m	struct:Nil_ext::SoLoud_Aspect::Data
audioClient	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^        IAudioClient *audioClient;$/;"	m	struct:SoLoud::WASAPIData	file:
audioProcessingDone	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^        bool audioProcessingDone;$/;"	m	struct:SoLoud::ALSAData	file:
audioProcessingDone	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^        bool audioProcessingDone;$/;"	m	struct:SoLoud::OSSData	file:
audioProcessingDoneEvent	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^        HANDLE audioProcessingDoneEvent;$/;"	m	struct:SoLoud::WASAPIData	file:
audioProcessingDoneEvent	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^        HANDLE audioProcessingDoneEvent;$/;"	m	struct:SoLoud::SoLoudWinMMData	file:
audioProcessingDoneEvent	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        HANDLE audioProcessingDoneEvent;$/;"	m	struct:SoLoud::XAudio2Data	file:
audio_count	lib/nil/src/interface/data/audio.cpp	/^audio_count()$/;"	f	namespace:Nil::Data
audio_id	lib/nil/include/nil/data/audio.hpp	/^  uint32_t audio_id;$/;"	m	struct:Nil::Data::Audio
audio_type	lib/nil/include/nil/resource/audio.hpp	/^  Nil_audio_src_type  audio_type;$/;"	m	struct:Nil_audio_src
audio_type_name	lib/nil/src/interface/resource/audio.cpp	/^constexpr char audio_type_name[] = "Audio";$/;"	m	namespace:__anon39	file:
author	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	char author[512];$/;"	m	struct:PsidHeader
autoIconify	thirdparty/glfw/src/internal.h	/^    GLFWbool            autoIconify;$/;"	m	struct:_GLFWwindow
autoIconify	thirdparty/glfw/src/internal.h	/^    GLFWbool      autoIconify;$/;"	m	struct:_GLFWwndconfig
autoreleasePool	thirdparty/glfw/src/cocoa_platform.h	/^    id                  autoreleasePool;$/;"	m	struct:_GLFWlibraryNS
auxBuffers	thirdparty/glfw/src/internal.h	/^    int         auxBuffers;$/;"	m	struct:_GLFWfbconfig
aux_01	lib/nil/include/nil/data/developer.hpp	/^  uintptr_t aux_01;$/;"	m	struct:Nil::Data::Developer
aux_02	lib/nil/include/nil/data/developer.hpp	/^  uintptr_t aux_02;$/;"	m	struct:Nil::Data::Developer
aux_03	lib/nil/include/nil/data/developer.hpp	/^  uintptr_t aux_03;$/;"	m	struct:Nil::Data::Developer
aux_04	lib/nil/include/nil/data/developer.hpp	/^  uintptr_t aux_04;$/;"	m	struct:Nil::Data::Developer
available	thirdparty/glfw/src/internal.h	/^        GLFWbool        available;$/;"	m	struct:_GLFWlibrary::__anon165
available	thirdparty/glfw/src/x11_platform.h	/^        GLFWbool    available;$/;"	m	struct:_GLFWlibraryX11::__anon145
available	thirdparty/glfw/src/x11_platform.h	/^        GLFWbool    available;$/;"	m	struct:_GLFWlibraryX11::__anon146
available	thirdparty/glfw/src/x11_platform.h	/^        GLFWbool    available;$/;"	m	struct:_GLFWlibraryX11::__anon149
available	thirdparty/glfw/src/x11_platform.h	/^        GLFWbool    available;$/;"	m	struct:_GLFWlibraryX11::__anon151
available	thirdparty/glfw/src/x11_platform.h	/^        GLFWbool    available;$/;"	m	struct:_GLFWlibraryX11::__anon152
aw_addr_ptr	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static unsigned char *aw_addr_ptr;$/;"	v	file:
aw_value	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static unsigned char aw_value;$/;"	v	file:
axes	thirdparty/glfw/src/cocoa_joystick.h	/^    CFMutableArrayRef   axes;$/;"	m	struct:_GLFWjoystickNS
axes	thirdparty/glfw/src/internal.h	/^    float*          axes;$/;"	m	struct:_GLFWjoystick
axisCount	thirdparty/glfw/src/internal.h	/^    int             axisCount;$/;"	m	struct:_GLFWjoystick
axisCount	thirdparty/glfw/src/win32_joystick.c	/^    int                     axisCount;$/;"	m	struct:_GLFWobjenumWin32	file:
b	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i b;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_vec2i
b	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i b;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_vec2i
b	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color
b	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf
b	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkComponentSwizzle    b;$/;"	m	struct:VkComponentMapping
b	thirdparty/imgui/include/imgui/imgui.h	/^        const char* b;$/;"	m	struct:ImGuiTextFilter::TextRange
b64ToUint6	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Convert.js	/^	function b64ToUint6 (nChr)$/;"	f	function:Convert.b64string_to_Uint8Array
b64_encoding_table	thirdparty/remotery/src/Remotery.c	/^static const char* b64_encoding_table =$/;"	v	file:
bLeftTrigger	thirdparty/glfw/src/deps/mingw/xinput.h	/^    BYTE bLeftTrigger;$/;"	m	struct:_XINPUT_GAMEPAD
bRightTrigger	thirdparty/glfw/src/deps/mingw/xinput.h	/^    BYTE bRightTrigger;$/;"	m	struct:_XINPUT_GAMEPAD
back	lib/lib/include/lib/array.hpp	/^  T& back()             { return *(m_end - 1); };$/;"	f	class:LIB_NS_NAME::array
back	lib/lib/include/lib/array.hpp	/^  const T& back() const { return *(m_end - 1); };$/;"	f	class:LIB_NS_NAME::array
back	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStencilOpState                          back;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
back	thirdparty/imgui/include/imgui/imgui.h	/^    inline const value_type&    back() const                    { IM_ASSERT(Size > 0); return Data[Size-1]; }$/;"	f	class:ImVector
back	thirdparty/imgui/include/imgui/imgui.h	/^    inline value_type&          back()                          { IM_ASSERT(Size > 0); return Data[Size-1]; }$/;"	f	class:ImVector
background	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_command_text	typeref:struct:nk_command_text::nk_color
background	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
background	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_text	typeref:struct:nk_text::nk_color
background	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item background;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_style_item
background	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item background;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_item
bar_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color bar_active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
bar_filled	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color bar_filled;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
bar_height	thirdparty/glfw/src/deps/nuklear.h	/^    float bar_height;$/;"	m	struct:nk_style_slider
bar_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color bar_hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
bar_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color bar_normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
bark_map_size	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint16 bark_map_size;$/;"	m	struct:__anon204	file:
bark_map_size	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint16 bark_map_size;$/;"	m	struct:__anon117	file:
base	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_buffer *base;$/;"	m	struct:nk_command_buffer	typeref:struct:nk_command_buffer::nk_buffer
base64_cleanup	lib/nil/src/asset_loading/load_gltf.cpp	/^void base64_cleanup() {$/;"	f	namespace:__anon41
base64_decode	lib/nil/src/asset_loading/load_gltf.cpp	/^unsigned char *base64_decode(const char *data,$/;"	f	namespace:__anon41
base64_encode	lib/nil/src/asset_loading/load_gltf.cpp	/^char *base64_encode(const unsigned char *data,$/;"	f	namespace:__anon41
baseArrayLayer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              baseArrayLayer;$/;"	m	struct:VkImageSubresourceLayers
baseArrayLayer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              baseArrayLayer;$/;"	m	struct:VkImageSubresourceRange
baseArrayLayer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    baseArrayLayer;$/;"	m	struct:VkClearRect
baseMipLevel	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              baseMipLevel;$/;"	m	struct:VkImageSubresourceRange
basePipelineHandle	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipeline                                       basePipelineHandle;$/;"	m	struct:VkGraphicsPipelineCreateInfo
basePipelineHandle	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipeline                         basePipelineHandle;$/;"	m	struct:VkComputePipelineCreateInfo
basePipelineIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    int32_t                                          basePipelineIndex;$/;"	m	struct:VkGraphicsPipelineCreateInfo
basePipelineIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    int32_t                            basePipelineIndex;$/;"	m	struct:VkComputePipelineCreateInfo
baseline_y_delta	thirdparty/glfw/src/deps/nuklear.h	/^   float baseline_y_delta;$/;"	m	struct:nk_text_edit_row
baseline_y_delta	thirdparty/stb/include/stb/stb_textedit.h	/^   float baseline_y_delta;  \/\/ position of baseline relative to previous row's baseline$/;"	m	struct:__anon133
basic	thirdparty/soloud/src/tools/tedsid2dump/roms.h	/^unsigned char basic[]={$/;"	v
beamx	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int beamx, beamy;$/;"	m	class:TED
beamy	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int beamx, beamy;$/;"	m	class:TED
begin	lib/lib/include/lib/array.hpp	/^  T const* begin() const { return m_begin; }$/;"	f	class:LIB_NS_NAME::array
begin	lib/lib/include/lib/array.hpp	/^  T* begin()             { return m_begin; }$/;"	f	class:LIB_NS_NAME::array
begin	lib/roa/src/interface/collection.cpp	/^Collection::begin() const$/;"	f	class:ROA::Collection
begin	lib/roa/src/interface/collection.cpp	/^Collection::begin()$/;"	f	class:ROA::Collection
begin	thirdparty/glfw/src/deps/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view
begin	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer
begin	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size begin;$/;"	m	struct:nk_popup_buffer
begin	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i begin;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_vec2i
begin	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i begin;$/;"	m	struct:nk_command_line	typeref:struct:nk_command_line::nk_vec2i
begin	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_window *begin;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_window
begin	thirdparty/imgui/include/imgui/imgui.h	/^        const char* begin() const { return b; }$/;"	f	struct:ImGuiTextFilter::TextRange
begin	thirdparty/imgui/include/imgui/imgui.h	/^    const char*         begin() const { return &Buf.front(); }$/;"	f	struct:ImGuiTextBuffer
begin	thirdparty/imgui/include/imgui/imgui.h	/^    inline const_iterator       begin() const                   { return Data; }$/;"	f	class:ImVector
begin	thirdparty/imgui/include/imgui/imgui.h	/^    inline iterator             begin()                         { return Data; }$/;"	f	class:ImVector
begin	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 begin, end;$/;"	m	struct:__anon207	file:
begin	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 begin, end;$/;"	m	struct:__anon120	file:
bgindex	thirdparty/stb/include/stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon92
bigIcon	thirdparty/glfw/src/win32_platform.h	/^    HICON               bigIcon;$/;"	m	struct:_GLFWwindowWin32
bigram	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	bool bigram, bramsm;$/;"	m	class:TED
bin_Sample	thirdparty/remotery/src/Remotery.c	/^static rmtError bin_Sample(Buffer* buffer, Sample* sample)$/;"	f	file:
bin_SampleArray	thirdparty/remotery/src/Remotery.c	/^static rmtError bin_SampleArray(Buffer* buffer, Sample* parent_sample)$/;"	f	file:
bin_SampleTree	thirdparty/remotery/src/Remotery.c	/^static rmtError bin_SampleTree(Buffer* buffer, Msg_SampleTree* msg)$/;"	f	file:
bin_buf	thirdparty/remotery/src/Remotery.c	/^    Buffer* bin_buf;$/;"	m	struct:Remotery	file:
bindCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                          bindCount;$/;"	m	struct:VkSparseImageMemoryBindInfo
bindCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                     bindCount;$/;"	m	struct:VkSparseBufferMemoryBindInfo
bindCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                     bindCount;$/;"	m	struct:VkSparseImageOpaqueMemoryBindInfo
binding	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              binding;$/;"	m	struct:VkDescriptorSetLayoutBinding
binding	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t             binding;$/;"	m	struct:VkVertexInputBindingDescription
binding	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    binding;$/;"	m	struct:VkVertexInputAttributeDescription
bindingCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                               bindingCount;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo
bindingUnit	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                          bindingUnit;$/;"	m	struct:VkIndirectCommandsLayoutTokenNVX
bit	lib/lib/include/lib/bits.hpp	/^bit(const uint32_t n)$/;"	f	namespace:LIB_NS_NAME::bits
bit	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^inline static long bit(long val, unsigned int bitnr) $/;"	f	file:
bit	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^inline static long bit(long val, unsigned int bitnr) $/;"	f	file:
bit_reverse	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint16 *bit_reverse[2];$/;"	m	struct:stb_vorbis	file:
bit_reverse	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static unsigned int bit_reverse(unsigned int n)$/;"	f	file:
bit_reverse	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint16 *bit_reverse[2];$/;"	m	struct:stb_vorbis	file:
bit_reverse	thirdparty/stb/include/stb/stb_vorbis.c	/^static unsigned int bit_reverse(unsigned int n)$/;"	f	file:
bitrev	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^  int   *bitrev;$/;"	m	struct:__anon215	file:
bitrev	thirdparty/stb/include/stb/stb_vorbis.c	/^  int   *bitrev;$/;"	m	struct:__anon128	file:
bits	lib/lib/include/lib/bits.hpp	/^namespace bits {$/;"	n	namespace:LIB_NS_NAME
bits_per_channel	thirdparty/stb/include/stb/stb_image.h	/^   int bits_per_channel;$/;"	m	struct:__anon78
blanking	thirdparty/glfw/src/x11_platform.h	/^        int         blanking;$/;"	m	struct:_GLFWlibraryX11::__anon147
blendConstants	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                                         blendConstants[4];$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
blendEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                 blendEnable;$/;"	m	struct:VkPipelineColorBlendAttachmentState
blockflag	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 blockflag;$/;"	m	struct:__anon210	file:
blockflag	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 blockflag;$/;"	m	struct:__anon123	file:
blocksize	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int blocksize[2];$/;"	m	struct:stb_vorbis	file:
blocksize	thirdparty/stb/include/stb/stb_vorbis.c	/^   int blocksize[2];$/;"	m	struct:stb_vorbis	file:
blocksize_0	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int blocksize_0, blocksize_1;$/;"	m	struct:stb_vorbis	file:
blocksize_0	thirdparty/stb/include/stb/stb_vorbis.c	/^   int blocksize_0, blocksize_1;$/;"	m	struct:stb_vorbis	file:
blocksize_1	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int blocksize_0, blocksize_1;$/;"	m	struct:stb_vorbis	file:
blocksize_1	thirdparty/stb/include/stb/stb_vorbis.c	/^   int blocksize_0, blocksize_1;$/;"	m	struct:stb_vorbis	file:
blue	thirdparty/glfw/include/GLFW/glfw3.h	/^    unsigned short* blue;$/;"	m	struct:GLFWgammaramp
blueBits	thirdparty/glfw/include/GLFW/glfw3.h	/^    int blueBits;$/;"	m	struct:GLFWvidmode
blueBits	thirdparty/glfw/src/internal.h	/^    int         blueBits;$/;"	m	struct:_GLFWfbconfig
bmmcol	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char hcol[2], mcol[4], ecol[4], bmmcol[4], *cset;$/;"	m	class:TED
book_list	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 book_list[16]; \/\/ varies$/;"	m	struct:__anon204	file:
book_list	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 book_list[16]; \/\/ varies$/;"	m	struct:__anon117	file:
border	thirdparty/glfw/src/deps/nuklear.h	/^    float border;$/;"	m	struct:nk_panel
border	thirdparty/glfw/src/deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_button
border	thirdparty/glfw/src/deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_chart
border	thirdparty/glfw/src/deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_combo
border	thirdparty/glfw/src/deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_edit
border	thirdparty/glfw/src/deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_progress
border	thirdparty/glfw/src/deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_property
border	thirdparty/glfw/src/deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_scrollbar
border	thirdparty/glfw/src/deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_slider
border	thirdparty/glfw/src/deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_tab
border	thirdparty/glfw/src/deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_toggle
border	thirdparty/glfw/src/deps/nuklear.h	/^    float border;$/;"	m	struct:nk_style_window
borderColor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBorderColor           borderColor;$/;"	m	struct:VkSamplerCreateInfo
border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_color
border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_color
border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_color
border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_color
border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_color
border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
border_cursor	thirdparty/glfw/src/deps/nuklear.h	/^    float border_cursor;$/;"	m	struct:nk_style_scrollbar
bottom	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color bottom;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_color
bottom_y	thirdparty/stb/include/stb/stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon112
bounding_box	lib/nil/include/nil/resource/mesh.hpp	/^  Nil::Data::Bounding_box bounding_box;$/;"	m	struct:Nil_mesh
bounding_box_count	lib/nil/src/interface/data/bounding_box.cpp	/^bounding_box_count()$/;"	f	namespace:Nil::Data
bounding_boxes	lib/roa/src/interface/query.cpp	/^bounding_boxes(const Ray &ray, Ray_search search)$/;"	f	namespace:ROA::Query
bounds	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rect bounds;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_rect
bounds	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rect bounds;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_rect
bounds	thirdparty/stb/include/stb/stb_truetype.h	/^   int bounds;$/;"	m	struct:__anon110
box	lib/nau/include/nau/nau.h	/^  int32_t     box[4];$/;"	m	struct:Nau_renderable
bp	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		} bp[11];$/;"	m	class:CPU	typeref:struct:CPU::__anon195
bp_active	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^bool CPU::bp_active = false;$/;"	m	class:CPU	file:
bp_active	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		static bool bp_active;$/;"	m	class:CPU
bp_reached	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^bool CPU::bp_reached = false;$/;"	m	class:CPU	file:
bp_reached	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		static bool bp_reached;$/;"	m	class:CPU
bpp	thirdparty/stb/include/stb/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon89
bramsm	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	bool bigram, bramsm;$/;"	m	class:TED
bucket_capacity	lib/lib/include/lib/memory.hpp	/^bucket_capacity()$/;"	f	namespace:LIB_NS_NAME::mem
bucket_stride	lib/lib/include/lib/memory.hpp	/^bucket_stride()$/;"	f	namespace:LIB_NS_NAME::mem
buckets_in_use	lib/lib/include/lib/memory.hpp	/^buckets_in_use()$/;"	f	namespace:LIB_NS_NAME::mem
buffer	thirdparty/glfw/src/deps/nuklear.h	/^    char buffer[NK_MAX_NUMBER_BUFFER];$/;"	m	struct:nk_property_state
buffer	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_buffer *buffer;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_buffer
buffer	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_buffer buffer;$/;"	m	struct:nk_str	typeref:struct:nk_str::nk_buffer
buffer	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command_buffer *buffer;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_command_buffer
buffer	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command_buffer buffer;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_command_buffer
buffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBuffer                          buffer;$/;"	m	struct:VkIndirectCommandsTokenNVX
buffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBuffer                      buffer;$/;"	m	struct:VkObjectTableIndexBufferEntryNVX
buffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBuffer                      buffer;$/;"	m	struct:VkObjectTableVertexBufferEntryNVX
buffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBuffer                     buffer;$/;"	m	struct:VkSparseBufferMemoryBindInfo
buffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBuffer                   buffer;$/;"	m	struct:VkBufferViewCreateInfo
buffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBuffer           buffer;$/;"	m	struct:VkBufferMemoryBarrier
buffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBuffer           buffer;$/;"	m	struct:VkDedicatedAllocationMemoryAllocateInfoNV
buffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBuffer        buffer;$/;"	m	struct:VkDescriptorBufferInfo
buffer	thirdparty/glfw/src/osmesa_context.h	/^    void*               buffer;$/;"	m	struct:_GLFWcontextOSMesa
buffer	thirdparty/glfw/src/wl_platform.h	/^    struct wl_buffer*           buffer;$/;"	m	struct:_GLFWcursorWayland	typeref:struct:_GLFWcursorWayland::wl_buffer
buffer	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^        float *buffer;$/;"	m	struct:SoLoud::ALSAData	file:
buffer	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^        float *buffer;$/;"	m	struct:SoLoud::OSSData	file:
buffer	thirdparty/soloud/src/backend/vita_homebrew/soloud_vita_homebrew.cpp	/^		int16_t *buffer[2];$/;"	m	struct:SoLoud::VitaData	file:
buffer	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^        AlignedFloatBuffer buffer;$/;"	m	struct:SoLoud::SoLoudWinMMData	file:
buffer	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        float *buffer[BUFFER_COUNT];$/;"	m	struct:SoLoud::XAudio2Data	file:
buffer	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	unsigned char *buffer;$/;"	m	class:CbmTune
bufferBindCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                                    bufferBindCount;$/;"	m	struct:VkBindSparseInfo
bufferEndEvent	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^        HANDLE bufferEndEvent;$/;"	m	struct:SoLoud::WASAPIData	file:
bufferEndEvent	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^        HANDLE bufferEndEvent;$/;"	m	struct:SoLoud::SoLoudWinMMData	file:
bufferEndEvent	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        HANDLE bufferEndEvent;$/;"	m	struct:SoLoud::XAudio2Data	file:
bufferFeatures	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFormatFeatureFlags    bufferFeatures;$/;"	m	struct:VkFormatProperties
bufferFrames	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^        UINT32 bufferFrames;$/;"	m	struct:SoLoud::WASAPIData	file:
bufferImageGranularity	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize          bufferImageGranularity;$/;"	m	struct:VkPhysicalDeviceLimits
bufferImageHeight	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                    bufferImageHeight;$/;"	m	struct:VkBufferImageCopy
bufferLengthBytes	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        UINT32 bufferLengthBytes;$/;"	m	struct:SoLoud::XAudio2Data	file:
bufferOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize                bufferOffset;$/;"	m	struct:VkBufferImageCopy
bufferPtr	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	unsigned char *bufferPtr;$/;"	m	class:CbmTune
bufferRowLength	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                    bufferRowLength;$/;"	m	struct:VkBufferImageCopy
buffer_start	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anon76
buflen	thirdparty/stb/include/stb/stb_image.h	/^   int buflen;$/;"	m	struct:__anon76
build	thirdparty/glfw/src/deps/nuklear.h	/^    int build;$/;"	m	struct:nk_context
build	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_font_bake_data *build;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_font_bake_data
build_decoding_table	lib/nil/src/asset_loading/load_gltf.cpp	/^void build_decoding_table() {$/;"	f	namespace:__anon41
bundle	thirdparty/glfw/src/cocoa_platform.h	/^        CFBundleRef     bundle;$/;"	m	struct:_GLFWlibraryNS::__anon142
bundle	thirdparty/opengl/src/gl3w.cpp	/^CFBundleRef bundle;$/;"	v
bundleURL	thirdparty/opengl/src/gl3w.cpp	/^CFURLRef bundleURL;$/;"	v
button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button button;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_button
button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button button;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_style_button
buttonCount	thirdparty/glfw/src/internal.h	/^    int             buttonCount;$/;"	m	struct:_GLFWjoystick
buttonCount	thirdparty/glfw/src/win32_joystick.c	/^    int                     buttonCount;$/;"	m	struct:_GLFWobjenumWin32	file:
button_behavior	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_button_behavior button_behavior;$/;"	m	struct:nk_context	typeref:enum:nk_context::nk_button_behavior
button_behaviors	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_config_stack_button_behavior button_behaviors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_button_behavior
button_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 button_padding;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_vec2
buttons	lib/nil/include/nil/data/gamepad.hpp	/^  float buttons[16];$/;"	m	struct:Nil::Data::Gamepad
buttons	lib/nil/include/nil/data/mouse.hpp	/^  float buttons[5];$/;"	m	struct:Nil::Data::Mouse
buttons	thirdparty/glfw/src/cocoa_joystick.h	/^    CFMutableArrayRef   buttons;$/;"	m	struct:_GLFWjoystickNS
buttons	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_mouse_button buttons[NK_BUTTON_MAX];$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_mouse_button
buttons	thirdparty/glfw/src/internal.h	/^    unsigned char*  buttons;$/;"	m	struct:_GLFWjoystick
byte	thirdparty/soloud/src/tools/tedsid2dump/types.h	/^	unsigned char byte;$/;"	m	struct:_MEM_PATCH
bytes	lib/lib/include/lib/file.hpp	/^bytes(const char *filename)$/;"	f	namespace:LIB_NS_NAME::file
bytes_allocated	thirdparty/remotery/src/Remotery.c	/^    rmtU32 bytes_allocated;$/;"	m	struct:__anon56	file:
bytes_done	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int     bytes_done;  \/\/ bytes processed in _current_ chunk$/;"	m	struct:__anon211	file:
bytes_done	thirdparty/stb/include/stb/stb_vorbis.c	/^   int     bytes_done;  \/\/ bytes processed in _current_ chunk$/;"	m	struct:__anon124	file:
bytes_in_seg	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 bytes_in_seg;$/;"	m	struct:stb_vorbis	file:
bytes_in_seg	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 bytes_in_seg;$/;"	m	struct:stb_vorbis	file:
bytes_left	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int     bytes_left;  \/\/ bytes left in packet$/;"	m	struct:__anon211	file:
bytes_left	thirdparty/stb/include/stb/stb_vorbis.c	/^   int     bytes_left;  \/\/ bytes left in packet$/;"	m	struct:__anon124	file:
bytes_used	thirdparty/remotery/src/Remotery.c	/^    rmtU32 bytes_used;$/;"	m	struct:__anon56	file:
c	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i c;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_vec2i
c	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i c;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_vec2i
c	thirdparty/glfw/src/deps/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	m	struct:nk_alignof::Big
c	thirdparty/stb/include/stb/stb_easy_font.h	/^   unsigned char c[4];$/;"	m	struct:__anon137
cAreaFill	thirdparty/glfw/src/deps/mingw/dinput.h	/^	D3DCOLOR	cAreaFill;$/;"	m	struct:_DICOLORSET
cAxes	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			cAxes;$/;"	m	struct:DIEFFECT
cAxes	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			cAxes;$/;"	m	struct:DIEFFECT_DX5
cBorder	thirdparty/glfw/src/deps/mingw/dinput.h	/^	D3DCOLOR	cBorder;$/;"	m	struct:_DICOLORSET
cCalloutHighlight	thirdparty/glfw/src/deps/mingw/dinput.h	/^	D3DCOLOR	cCalloutHighlight;$/;"	m	struct:_DICOLORSET
cCalloutLine	thirdparty/glfw/src/deps/mingw/dinput.h	/^	D3DCOLOR	cCalloutLine;$/;"	m	struct:_DICOLORSET
cChannels	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			cChannels;$/;"	m	struct:DICUSTOMFORCE
cControlFill	thirdparty/glfw/src/deps/mingw/dinput.h	/^	D3DCOLOR	cControlFill;$/;"	m	struct:_DICOLORSET
cHighlightFill	thirdparty/glfw/src/deps/mingw/dinput.h	/^	D3DCOLOR	cHighlightFill;$/;"	m	struct:_DICOLORSET
cSamples	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			cSamples;$/;"	m	struct:DICUSTOMFORCE
cTextFore	thirdparty/glfw/src/deps/mingw/dinput.h	/^	D3DCOLOR	cTextFore;$/;"	m	struct:_DICOLORSET
cTextHighlight	thirdparty/glfw/src/deps/mingw/dinput.h	/^	D3DCOLOR	cTextHighlight;$/;"	m	struct:_DICOLORSET
c_str	thirdparty/imgui/include/imgui/imgui.h	/^    const char*         c_str() const { return Buf.Data; }$/;"	f	struct:ImGuiTextBuffer
calc	thirdparty/remotery/src/Remotery.c	/^static void calc(const void* src, const int bytelength, unsigned char* hash)$/;"	f	file:
calcActiveVoices	thirdparty/soloud/src/core/soloud.cpp	/^	void Soloud::calcActiveVoices()$/;"	f	class:SoLoud::Soloud
calcBQRParams	thirdparty/soloud/src/filter/soloud_biquadresonantfilter.cpp	/^	void BiquadResonantFilterInstance::calcBQRParams()$/;"	f	class:SoLoud::BiquadResonantFilterInstance
calcEnvelopeTable	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^void SIDsound::calcEnvelopeTable()$/;"	f	class:SIDsound
calcEnvelopeTable	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^void SIDsound::calcEnvelopeTable()$/;"	f	class:SIDsound
calcFFT	thirdparty/soloud/src/core/soloud.cpp	/^	float * Soloud::calcFFT()$/;"	f	class:SoLoud::Soloud
calcFFT	thirdparty/soloud/src/core/soloud_bus.cpp	/^	float * Bus::calcFFT()$/;"	f	class:SoLoud::Bus
calcSamples	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^void SIDsound::calcSamples(short *buf, long accu)$/;"	f	class:SIDsound
calcSamples	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^void SIDsound::calcSamples(long accu)$/;"	f	class:SIDsound
calculateRefreshRate	thirdparty/glfw/src/x11_monitor.c	/^static int calculateRefreshRate(const XRRModeInfo* mi)$/;"	f	file:
callback	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_aspect_callback_fn callback;$/;"	m	struct:Nil_aspect_callback
callback	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_cpu_task_fn callback;$/;"	m	struct:Nil_cpu_task
callback	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_gpu_task_fn callback;$/;"	m	struct:Nil_gpu_task
callback	thirdparty/glfw/src/wl_platform.h	/^    struct wl_callback*         callback;$/;"	m	struct:_GLFWwindowWayland	typeref:struct:_GLFWwindowWayland::wl_callback
callback	thirdparty/remotery/src/Remotery.c	/^    ThreadProc callback;$/;"	m	struct:Thread_t	file:
callback_graph_tick	lib/nil/src/graph/graph.cpp	/^callback_graph_tick(Data *data, const graph_tick_fn &cb, uintptr_t user_data)$/;"	f	namespace:Nil::Graph
callback_node_delete	lib/nil/src/graph/graph.cpp	/^callback_node_delete(Data *data, const node_delete_fn &cb, uintptr_t user_data)$/;"	f	namespace:Nil::Graph
callbacks	thirdparty/glfw/src/internal.h	/^    } callbacks;$/;"	m	struct:_GLFWlibrary	typeref:struct:_GLFWlibrary::__anon166
callbacks	thirdparty/glfw/src/internal.h	/^    } callbacks;$/;"	m	struct:_GLFWwindow	typeref:struct:_GLFWwindow::__anon162
calls	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size calls;$/;"	m	struct:nk_buffer
calls	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size calls;$/;"	m	struct:nk_memory_status
camera_count	lib/nil/src/interface/data/camera.cpp	/^camera_count()$/;"	f	namespace:Nil::Data
can_read	thirdparty/remotery/src/Remotery.c	/^    rmtBool can_read;$/;"	m	struct:__anon61	file:
can_write	thirdparty/remotery/src/Remotery.c	/^    rmtBool can_write;$/;"	m	struct:__anon61	file:
cap	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size cap;$/;"	m	struct:nk_pool
capacity	lib/lib/include/lib/array.hpp	/^  size_t capacity() const   { return (m_capacity - m_begin); }$/;"	f	class:LIB_NS_NAME::array
capacity	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned capacity;$/;"	m	struct:nk_pool
capacity	thirdparty/imgui/include/imgui/imgui.h	/^    inline int                  capacity() const                { return Capacity; }$/;"	f	class:ImVector
capture	lib/nil/include/nil/data/mouse.hpp	/^  bool capture;$/;"	m	struct:Nil::Data::Mouse
capture_pattern	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int capture_pattern(vorb *f)$/;"	f	file:
capture_pattern	thirdparty/stb/include/stb/stb_vorbis.c	/^static int capture_pattern(vorb *f)$/;"	f	file:
capturedExpression	thirdparty/catch/include/catch/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
cascadePoint	thirdparty/glfw/src/cocoa_platform.h	/^    CGPoint             cascadePoint;$/;"	m	struct:_GLFWlibraryNS
catmullrom	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^float catmullrom(float t, float p0, float p1, float p2, float p3)$/;"	f
cbInBuffer	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	cbInBuffer;$/;"	m	struct:DIEFFESCAPE
cbOutBuffer	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	cbOutBuffer;$/;"	m	struct:DIEFFESCAPE
cbSize	thirdparty/glfw/src/win32_platform.h	/^    DWORD cbSize;$/;"	m	struct:tagCHANGEFILTERSTRUCT
cbTypeSpecificParams	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			cbTypeSpecificParams;$/;"	m	struct:DIEFFECT
cbTypeSpecificParams	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			cbTypeSpecificParams;$/;"	m	struct:DIEFFECT_DX5
cdata	thirdparty/stb/include/stb/stb_truetype.h	/^stbtt_bakedchar cdata[96]; \/\/ ASCII 32..126 is 95 glyphs$/;"	v
ceil	lib/math/include/math/general/general.hpp	/^ceil(const float x)$/;"	f
centerCursor	thirdparty/glfw/src/internal.h	/^    GLFWbool      centerCursor;$/;"	m	struct:_GLFWwndconfig
centerCursor	thirdparty/glfw/src/win32_window.c	/^static void centerCursor(_GLFWwindow* window)$/;"	f	file:
centerCursor	thirdparty/glfw/src/x11_window.c	/^static void centerCursor(_GLFWwindow* window)$/;"	f	file:
cff	thirdparty/stb/include/stb/stb_truetype.h	/^   stbtt__buf cff;                    \/\/ cff font data$/;"	m	struct:stbtt_fontinfo
chan	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   MappingChannel *chan;$/;"	m	struct:__anon209	file:
chan	thirdparty/stb/include/stb/stb_vorbis.c	/^   MappingChannel *chan;$/;"	m	struct:__anon122	file:
channel	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon90
channelMask	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    unsigned int channelMask[3];$/;"	m	class:TED
channelMask	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int channelMask[3];$/;"	m	class:TED
channel_buffer_end	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int channel_buffer_end;$/;"	m	struct:stb_vorbis	file:
channel_buffer_end	thirdparty/stb/include/stb/stb_vorbis.c	/^   int channel_buffer_end;$/;"	m	struct:stb_vorbis	file:
channel_buffer_start	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int channel_buffer_start;$/;"	m	struct:stb_vorbis	file:
channel_buffer_start	thirdparty/stb/include/stb/stb_vorbis.c	/^   int channel_buffer_start;$/;"	m	struct:stb_vorbis	file:
channel_buffers	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   float *channel_buffers[STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	file:
channel_buffers	thirdparty/stb/include/stb/stb_vorbis.c	/^   float *channel_buffers[STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	file:
channel_id	lib/nil/include/nil/data/audio.hpp	/^  uint32_t channel_id;$/;"	m	struct:Nil::Data::Audio
channel_order	thirdparty/stb/include/stb/stb_image.h	/^   int channel_order;$/;"	m	struct:__anon78
channel_position	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int8 channel_position[7][6] =$/;"	v	file:
channel_position	thirdparty/stb/include/stb/stb_vorbis.c	/^static int8 channel_position[7][6] =$/;"	v	file:
channels	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int channels;$/;"	m	struct:__anon202	file:
channels	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int channels;$/;"	m	struct:stb_vorbis	file:
channels	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^        int channels;$/;"	m	struct:SoLoud::ALSAData	file:
channels	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^        int channels;$/;"	m	struct:SoLoud::OSSData	file:
channels	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^        int channels;$/;"	m	struct:SoLoud::WASAPIData	file:
channels	thirdparty/stb/include/stb/stb_image_resize.h	/^    int channels;$/;"	m	struct:__anon72
channels	thirdparty/stb/include/stb/stb_vorbis.c	/^   int channels;$/;"	m	struct:__anon115	file:
channels	thirdparty/stb/include/stb/stb_vorbis.c	/^   int channels;$/;"	m	struct:stb_vorbis	file:
char_storage	thirdparty/glfw/src/deps/nuklear.h	/^   short char_storage;$/;"	m	struct:nk_text_undo_record
char_storage	thirdparty/stb/include/stb/stb_textedit.h	/^   short           char_storage;$/;"	m	struct:__anon130
character	thirdparty/glfw/src/internal.h	/^        GLFWcharfun             character;$/;"	m	struct:_GLFWwindow::__anon162
charbank	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	int		scrattr, charbank;$/;"	m	class:TED
chardata_for_range	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_tt_packedchar *chardata_for_range; \/* output *\/$/;"	m	struct:nk_tt_pack_range	typeref:struct:nk_tt_pack_range::nk_tt_packedchar
chardata_for_range	thirdparty/stb/include/stb/stb_truetype.h	/^   stbtt_packedchar *chardata_for_range; \/\/ output$/;"	m	struct:__anon100
charmods	thirdparty/glfw/src/internal.h	/^        GLFWcharmodsfun         charmods;$/;"	m	struct:_GLFWwindow::__anon162
charrambank	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *colorbank, *charrombank, *charrambank;$/;"	m	class:TED
charrom	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	bool	charrom;$/;"	m	class:TED
charrombank	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *colorbank, *charrombank, *charrambank;$/;"	m	class:TED
charstrings	thirdparty/stb/include/stb/stb_truetype.h	/^   stbtt__buf charstrings;            \/\/ the charstring index$/;"	m	struct:stbtt_fontinfo
chart	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_chart chart;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_chart
chart	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_chart chart;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_chart
chdir	thirdparty/glfw/src/internal.h	/^        GLFWbool  chdir;$/;"	m	struct:_GLFWinitconfig::__anon159
checkScaleChange	thirdparty/glfw/src/wl_window.c	/^static void checkScaleChange(_GLFWwindow* window)$/;"	f	file:
check_endianness	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	5023;"	d	file:
check_endianness	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	5026;"	d	file:
check_endianness	thirdparty/stb/include/stb/stb_vorbis.c	5029;"	d	file:
check_endianness	thirdparty/stb/include/stb/stb_vorbis.c	5032;"	d	file:
checkbox	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_toggle checkbox;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_toggle
children	lib/lib/include/lib/nyaml.hpp	/^  mutable std::vector<node> children;$/;"	m	class:LIB_NS_NAME::nyaml::node
chooseEGLConfig	thirdparty/glfw/src/egl_context.c	/^static GLFWbool chooseEGLConfig(const _GLFWctxconfig* ctxconfig,$/;"	f	file:
chooseGLXFBConfig	thirdparty/glfw/src/glx_context.c	/^static GLFWbool chooseGLXFBConfig(const _GLFWfbconfig* desired, GLXFBConfig* result)$/;"	f	file:
chooseImage	thirdparty/glfw/src/win32_window.c	/^static const GLFWimage* chooseImage(int count, const GLFWimage* images,$/;"	f	file:
choosePixelFormat	thirdparty/glfw/src/wgl_context.c	/^static int choosePixelFormat(_GLFWwindow* window,$/;"	f	file:
chrbuf	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *chrbuf, *clrbuf, *tmpClrbuf;$/;"	m	class:TED
chrtoscreen	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::chrtoscreen(int x,int y, char scrchr)$/;"	f	class:TED
circle_segment_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int circle_segment_count; \/* number of segments used for circles: default to 22 *\/$/;"	m	struct:nk_convert_config
circle_vtx	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 circle_vtx[12];$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_vec2
clamp	lib/math/include/math/general/general.hpp	/^clamp(const float x, const float between_a, const float between_b)$/;"	f
class_dimensions	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 class_dimensions[16]; \/\/ varies$/;"	m	struct:__anon205	file:
class_dimensions	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 class_dimensions[16]; \/\/ varies$/;"	m	struct:__anon118	file:
class_masterbooks	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 class_masterbooks[16]; \/\/ varies$/;"	m	struct:__anon205	file:
class_masterbooks	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 class_masterbooks[16]; \/\/ varies$/;"	m	struct:__anon118	file:
class_subclasses	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 class_subclasses[16]; \/\/ varies$/;"	m	struct:__anon205	file:
class_subclasses	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 class_subclasses[16]; \/\/ varies$/;"	m	struct:__anon118	file:
classbook	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 classbook;$/;"	m	struct:__anon207	file:
classbook	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 classbook;$/;"	m	struct:__anon120	file:
classdata	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 **classdata;$/;"	m	struct:__anon207	file:
classdata	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 **classdata;$/;"	m	struct:__anon120	file:
classifications	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 classifications;$/;"	m	struct:__anon207	file:
classifications	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 classifications;$/;"	m	struct:__anon120	file:
clear	lib/lib/include/lib/array.hpp	/^  clear()$/;"	f	class:LIB_NS_NAME::array
clear	thirdparty/imgui/include/imgui/imgui.h	/^    inline void                 clear()                         { if (Data) { Size = Capacity = 0; ImGui::MemFree(Data); Data = NULL; } }$/;"	f	class:ImVector
clear	thirdparty/imgui/include/imgui/imgui.h	/^    void                clear() { Buf.clear(); Buf.push_back(0); }$/;"	f	struct:ImGuiTextBuffer
clear	thirdparty/soloud/src/audiosource/monotone/soloud_monotone.cpp	/^	void Monotone::clear()$/;"	f	class:SoLoud::Monotone
clear	thirdparty/soloud/src/audiosource/speech/darray.cpp	/^void darray::clear()$/;"	f	class:darray
clearValue	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkClearValue          clearValue;$/;"	m	struct:VkClearAttachment
clearValueCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t               clearValueCount;$/;"	m	struct:VkRenderPassBeginInfo
clearWBuffert	thirdparty/remotery/src/Remotery.c	/^static void clearWBuffert(unsigned int* buffert)$/;"	f	file:
clear_color	lib/nil/include/nil/data/camera.hpp	/^  uint32_t clear_color;$/;"	m	struct:Nil::Data::Camera
clear_color	lib/rov/src/rov_data.hpp	/^  uint32_t clear_color;$/;"	m	struct:ROV_Internal::rovRenderPass
clear_color_buffer	lib/nil/include/nil/data/camera.hpp	/^  bool clear_color_buffer;$/;"	m	struct:Nil::Data::Camera
clear_depth_buffer	lib/nil/include/nil/data/camera.hpp	/^  bool clear_depth_buffer;$/;"	m	struct:Nil::Data::Camera
clear_flags	lib/rov/src/rov_data.hpp	/^  uint32_t clear_flags;$/;"	m	struct:ROV_Internal::rovRenderPass
clear_tags	lib/nil/src/interface/node.cpp	/^Node::clear_tags()$/;"	f	class:Nil::Node
clicked	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int clicked;$/;"	m	struct:nk_key
clicked	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int clicked;$/;"	m	struct:nk_mouse_button
clicked_pos	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 clicked_pos;$/;"	m	struct:nk_mouse_button	typeref:struct:nk_mouse_button::nk_vec2
client	thirdparty/glfw/src/egl_context.h	/^   void*            client;$/;"	m	struct:_GLFWcontextEGL
client	thirdparty/glfw/src/internal.h	/^    int                 client;$/;"	m	struct:_GLFWcontext
client	thirdparty/glfw/src/internal.h	/^    int           client;$/;"	m	struct:_GLFWctxconfig
client_socket	thirdparty/remotery/src/Remotery.c	/^    WebSocket* client_socket;$/;"	m	struct:__anon65	file:
clip	lib/nau/include/nau/nau.h	/^  int32_t     clip[4];$/;"	m	struct:Nau_renderable
clip	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_clipboard clip;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_clipboard
clip	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_clipboard clip;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_edit::nk_clipboard
clip	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rect clip;$/;"	m	struct:nk_command_buffer	typeref:struct:nk_command_buffer::nk_rect
clip	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rect clip;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_rect
clip	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^static short clip(float input)$/;"	f	file:
clip	thirdparty/soloud/src/core/soloud.cpp	/^	void Soloud::clip(AlignedFloatBuffer &aBuffer, AlignedFloatBuffer &aDestBuffer, unsigned int aSamples, float aVolume0, float aVolume1)$/;"	f	class:SoLoud::Soloud
clip_rect	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rect clip_rect;$/;"	m	struct:nk_draw_command	typeref:struct:nk_draw_command::nk_rect
clip_rect	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rect clip_rect;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_rect
clipboardString	thirdparty/glfw/src/cocoa_platform.h	/^    char*               clipboardString;$/;"	m	struct:_GLFWlibraryNS
clipboardString	thirdparty/glfw/src/win32_platform.h	/^    char*               clipboardString;$/;"	m	struct:_GLFWlibraryWin32
clipboardString	thirdparty/glfw/src/x11_platform.h	/^    char*           clipboardString;$/;"	m	struct:_GLFWlibraryX11
clipped	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                         clipped;$/;"	m	struct:VkSwapchainCreateInfoKHR
clock	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^inline unsigned int SIDsound::clock()$/;"	f	class:SIDsound
clock	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^inline unsigned int SIDsound::clock()$/;"	f	class:SIDsound
clockDeltaRemainder	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	unsigned int clockDeltaRemainder;$/;"	m	class:SIDsound
clockDeltaRemainder	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	unsigned int clockDeltaRemainder;$/;"	m	class:SIDsound
clock_gettime	thirdparty/glfw/src/deps/tinycthread.h	125;"	d
clockid_t	thirdparty/glfw/src/deps/tinycthread.h	121;"	d
clone	thirdparty/catch/include/catch/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
close	thirdparty/glfw/src/internal.h	/^        GLFWwindowclosefun      close;$/;"	m	struct:_GLFWwindow::__anon162
closeJoystick	thirdparty/glfw/src/linux_joystick.c	/^static void closeJoystick(_GLFWjoystick* js)$/;"	f	file:
closeJoystick	thirdparty/glfw/src/win32_joystick.c	/^static void closeJoystick(_GLFWjoystick* js)$/;"	f	file:
close_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button close_button;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_button
close_libgl	thirdparty/opengl/src/gl3w.cpp	/^static void close_libgl(void)$/;"	f	file:
close_on_free	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int close_on_free;$/;"	m	struct:stb_vorbis	file:
close_on_free	thirdparty/stb/include/stb/stb_vorbis.c	/^   int close_on_free;$/;"	m	struct:stb_vorbis	file:
close_symbol	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type close_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_window_header::nk_symbol_type
closesocket	thirdparty/remotery/src/Remotery.c	2061;"	d	file:
clrbuf	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *chrbuf, *clrbuf, *tmpClrbuf;$/;"	m	class:TED
cmd_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int cmd_count;$/;"	m	struct:nk_draw_list
cmd_offset	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size cmd_offset;$/;"	m	struct:nk_draw_list
cmds	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_glfw_device::nk_buffer
cnd_broadcast	thirdparty/glfw/src/deps/tinycthread.c	/^int cnd_broadcast(cnd_t *cond)$/;"	f
cnd_destroy	thirdparty/glfw/src/deps/tinycthread.c	/^void cnd_destroy(cnd_t *cond)$/;"	f
cnd_init	thirdparty/glfw/src/deps/tinycthread.c	/^int cnd_init(cnd_t *cond)$/;"	f
cnd_signal	thirdparty/glfw/src/deps/tinycthread.c	/^int cnd_signal(cnd_t *cond)$/;"	f
cnd_t	thirdparty/glfw/src/deps/tinycthread.h	/^typedef pthread_cond_t cnd_t;$/;"	t
cnd_t	thirdparty/glfw/src/deps/tinycthread.h	/^} cnd_t;$/;"	t	typeref:struct:__anon183
cnd_timedwait	thirdparty/glfw/src/deps/tinycthread.c	/^int cnd_timedwait(cnd_t *cond, mtx_t *mtx, const struct timespec *ts)$/;"	f
cnd_wait	thirdparty/glfw/src/deps/tinycthread.c	/^int cnd_wait(cnd_t *cond, mtx_t *mtx)$/;"	f
code	thirdparty/glfw/src/internal.h	/^    int             code;$/;"	m	struct:_GLFWerror
code	thirdparty/stb/include/stb/stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anon80
codeSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    size_t                       codeSize;$/;"	m	struct:VkShaderModuleCreateInfo
code_bits	thirdparty/stb/include/stb/stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon81
code_buffer	thirdparty/stb/include/stb/stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon81
code_buffer	thirdparty/stb/include/stb/stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anon85
codebook_count	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int codebook_count;$/;"	m	struct:stb_vorbis	file:
codebook_count	thirdparty/stb/include/stb/stb_vorbis.c	/^   int codebook_count;$/;"	m	struct:stb_vorbis	file:
codebook_decode	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int codebook_decode(vorb *f, Codebook *c, float *output, int len)$/;"	f	file:
codebook_decode	thirdparty/stb/include/stb/stb_vorbis.c	/^static int codebook_decode(vorb *f, Codebook *c, float *output, int len)$/;"	f	file:
codebook_decode_deinterleave_repeat	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int codebook_decode_deinterleave_repeat(vorb *f, Codebook *c, float **outputs, int ch, int *c_inter_p, int *p_inter_p, int len, int total_decode)$/;"	f	file:
codebook_decode_deinterleave_repeat	thirdparty/stb/include/stb/stb_vorbis.c	/^static int codebook_decode_deinterleave_repeat(vorb *f, Codebook *c, float **outputs, int ch, int *c_inter_p, int *p_inter_p, int len, int total_decode)$/;"	f	file:
codebook_decode_scalar	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int codebook_decode_scalar(vorb *f, Codebook *c)$/;"	f	file:
codebook_decode_scalar	thirdparty/stb/include/stb/stb_vorbis.c	/^static int codebook_decode_scalar(vorb *f, Codebook *c)$/;"	f	file:
codebook_decode_scalar_raw	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int codebook_decode_scalar_raw(vorb *f, Codebook *c)$/;"	f	file:
codebook_decode_scalar_raw	thirdparty/stb/include/stb/stb_vorbis.c	/^static int codebook_decode_scalar_raw(vorb *f, Codebook *c)$/;"	f	file:
codebook_decode_start	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int codebook_decode_start(vorb *f, Codebook *c)$/;"	f	file:
codebook_decode_start	thirdparty/stb/include/stb/stb_vorbis.c	/^static int codebook_decode_start(vorb *f, Codebook *c)$/;"	f	file:
codebook_decode_step	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int codebook_decode_step(vorb *f, Codebook *c, float *output, int len, int step)$/;"	f	file:
codebook_decode_step	thirdparty/stb/include/stb/stb_vorbis.c	/^static int codebook_decode_step(vorb *f, Codebook *c, float *output, int len, int step)$/;"	f	file:
codebooks	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   Codebook *codebooks;$/;"	m	struct:stb_vorbis	file:
codebooks	thirdparty/stb/include/stb/stb_vorbis.c	/^   Codebook *codebooks;$/;"	m	struct:stb_vorbis	file:
codepair	thirdparty/glfw/src/xkb_unicode.c	/^static const struct codepair {$/;"	s	file:
codepoint	thirdparty/glfw/src/deps/nuklear.h	/^    nk_rune codepoint;$/;"	m	struct:nk_font_glyph
codes	thirdparty/stb/include/stb/stb_image.h	/^   stbi__gif_lzw codes[4096];$/;"	m	struct:__anon92
codetype	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^typedef float codetype;$/;"	t	file:
codetype	thirdparty/stb/include/stb/stb_vorbis.c	/^typedef float codetype;$/;"	t	file:
codeword_lengths	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 *codeword_lengths;$/;"	m	struct:__anon203	file:
codeword_lengths	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 *codeword_lengths;$/;"	m	struct:__anon116	file:
codewords	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 *codewords;$/;"	m	struct:__anon203	file:
codewords	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 *codewords;$/;"	m	struct:__anon116	file:
coeff	thirdparty/stb/include/stb/stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anon81::__anon82
coeff_h	thirdparty/stb/include/stb/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon81::__anon82
coeff_w	thirdparty/stb/include/stb/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon81::__anon82
col	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color col;$/;"	m	struct:nk_command_image	typeref:struct:nk_command_image::nk_color
col	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex
col	thirdparty/imgui/include/imgui/imgui.h	/^    ImU32   col;$/;"	m	struct:ImDrawVert
color	lib/lib/include/lib/color.hpp	/^namespace color {$/;"	n	namespace:LIB_NS_NAME
color	lib/nau/include/nau/nau.h	/^  uint32_t    color;$/;"	m	struct:Nau_renderable
color	lib/nil/include/nil/data/light.hpp	/^  uint8_t color[3];$/;"	m	struct:Nil::Data::Light
color	lib/nil/include/nil/resource/material.hpp	/^  uint32_t        color;$/;"	m	struct:Nil_material
color	lib/rov/include/rov/rov.hpp	/^  rovVec4 color;        \/\/ r, g, b, extra$/;"	m	struct:rovLight
color	lib/rov/src/rov_data.hpp	/^  rovVec3 color;$/;"	m	struct:ROV_Internal::rovLineDrawCall
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_chart_slot::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_arc	typeref:struct:nk_command_arc::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_arc_filled	typeref:struct:nk_command_arc_filled::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_circle	typeref:struct:nk_command_circle::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_circle_filled	typeref:struct:nk_command_circle_filled::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_line	typeref:struct:nk_command_line::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polygon	typeref:struct:nk_command_polygon::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_command_polygon_filled::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polyline	typeref:struct:nk_command_polyline::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_rect	typeref:struct:nk_command_rect::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_rect_filled	typeref:struct:nk_command_rect_filled::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_style_text	typeref:struct:nk_style_text::nk_color
color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color color;$/;"	m	union:nk_style_item_data	typeref:struct:nk_style_item_data::nk_color
color	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkClearColorValue           color;$/;"	m	union:VkClearValue
color	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float              color[4];$/;"	m	struct:VkDebugMarkerMarkerInfoEXT
colorAttachment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              colorAttachment;$/;"	m	struct:VkClearAttachment
colorAttachmentCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                        colorAttachmentCount;$/;"	m	struct:VkSubpassDescription
colorBlendOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBlendOp                colorBlendOp;$/;"	m	struct:VkPipelineColorBlendAttachmentState
colorSpace	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkColorSpaceKHR    colorSpace;$/;"	m	struct:VkSurfaceFormatKHR
colorWriteMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkColorComponentFlags    colorWriteMask;$/;"	m	struct:VkPipelineColorBlendAttachmentState
color_table	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anon92
color_vec4	lib/nil/include/nil/resource/mesh.hpp	/^  float       *color_vec4;          \/\/ Internally copied$/;"	m	struct:Nil_mesh
colorbank	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *colorbank, *charrombank, *charrambank;$/;"	m	class:TED
colormap	thirdparty/glfw/src/x11_platform.h	/^    Colormap        colormap;$/;"	m	struct:_GLFWwindowX11
colors	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_config_stack_color colors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_color
colorspace	thirdparty/stb/include/stb/stb_image_resize.h	/^    stbir_colorspace colorspace;$/;"	m	struct:__anon72
columns	thirdparty/glfw/src/deps/nuklear.h	/^    int columns;$/;"	m	struct:nk_row_layout
combo	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_combo combo;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_combo
combo_border	thirdparty/glfw/src/deps/nuklear.h	/^    float combo_border;$/;"	m	struct:nk_style_window
combo_border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color combo_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
combo_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned combo_count;$/;"	m	struct:nk_popup_state
combo_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 combo_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
commandBufferCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                       commandBufferCount;$/;"	m	struct:VkSubmitInfo
commandBufferCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                commandBufferCount;$/;"	m	struct:VkCommandBufferAllocateInfo
commandPool	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkCommandPool           commandPool;$/;"	m	struct:VkCommandBufferAllocateInfo
compare	lib/lib/include/lib/string.hpp	/^compare(const char *a, const char *b)$/;"	f	namespace:LIB_NS_NAME::str
compare	thirdparty/catch/include/catch/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compareEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                compareEnable;$/;"	m	struct:VkSamplerCreateInfo
compareJoystickObjects	thirdparty/glfw/src/win32_joystick.c	/^static int compareJoystickObjects(const void* first, const void* second)$/;"	f	file:
compareJoysticks	thirdparty/glfw/src/linux_joystick.c	/^static int compareJoysticks(const void* fp, const void* sp)$/;"	f	file:
compareMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t       compareMask;$/;"	m	struct:VkStencilOpState
compareOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkCompareOp             compareOp;$/;"	m	struct:VkSamplerCreateInfo
compareOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkCompareOp    compareOp;$/;"	m	struct:VkStencilOpState
compareVideoModes	thirdparty/glfw/src/monitor.c	/^static int compareVideoModes(const void* fp, const void* sp)$/;"	f	file:
compatibleHandleTypes	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExternalMemoryHandleTypeFlagsNV    compatibleHandleTypes;$/;"	m	struct:VkExternalImageFormatPropertiesNV
component	thirdparty/imguizmo/src/ImGuizmo.cpp	/^		 vec_t component[4];$/;"	m	union:ImGuizmo::matrix_t::__anon140	file:
components	lib/nil/include/nil/resource/texture.hpp	/^  uint32_t components;  \/\/ If data_type == DATA then this is input.$/;"	m	struct:Nil_texture
components	lib/roa/src/component/component_engine.cpp	/^lib::array<ROA::Component*> components;$/;"	m	namespace:__anon8	file:
components	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkComponentMapping         components;$/;"	m	struct:VkImageViewCreateInfo
components_early_think_hooks	lib/roa/src/component/component_engine.cpp	/^components_early_think_hooks()$/;"	f	namespace:ROA_detail
components_late_think_hooks	lib/roa/src/component/component_engine.cpp	/^components_late_think_hooks()$/;"	f	namespace:ROA_detail
components_start_hooks	lib/roa/src/component/component_engine.cpp	/^components_start_hooks()$/;"	f	namespace:ROA_detail
components_think_hooks	lib/roa/src/component/component_engine.cpp	/^components_think_hooks()$/;"	f	namespace:ROA_detail
composeState	thirdparty/glfw/src/wl_platform.h	/^        struct xkb_compose_state* composeState;$/;"	m	struct:_GLFWlibraryWayland::__anon144	typeref:struct:_GLFWlibraryWayland::__anon144::xkb_compose_state
composeSymbol	thirdparty/glfw/src/wl_init.c	/^static xkb_keysym_t composeSymbol(xkb_keysym_t sym)$/;"	f	file:
compositeAlpha	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkCompositeAlphaFlagBitsKHR      compositeAlpha;$/;"	m	struct:VkSwapchainCreateInfoKHR
compositor	thirdparty/glfw/src/wl_platform.h	/^    struct wl_compositor*       compositor;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::wl_compositor
compositorVersion	thirdparty/glfw/src/wl_platform.h	/^    int                         compositorVersion;$/;"	m	struct:_GLFWlibraryWayland
computeBindingPointSupport	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32           computeBindingPointSupport;$/;"	m	struct:VkDeviceGeneratedCommandsFeaturesNVX
compute_accelerated_huffman	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void compute_accelerated_huffman(Codebook *c)$/;"	f	file:
compute_accelerated_huffman	thirdparty/stb/include/stb/stb_vorbis.c	/^static void compute_accelerated_huffman(Codebook *c)$/;"	f	file:
compute_bitreverse	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void compute_bitreverse(int n, uint16 *rev)$/;"	f	file:
compute_bitreverse	thirdparty/stb/include/stb/stb_vorbis.c	/^static void compute_bitreverse(int n, uint16 *rev)$/;"	f	file:
compute_codewords	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int compute_codewords(Codebook *c, uint8 *len, int n, uint32 *values)$/;"	f	file:
compute_codewords	thirdparty/stb/include/stb/stb_vorbis.c	/^static int compute_codewords(Codebook *c, uint8 *len, int n, uint32 *values)$/;"	f	file:
compute_samples	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void compute_samples(int mask, short *output, int num_c, float **data, int d_offset, int len)$/;"	f	file:
compute_samples	thirdparty/stb/include/stb/stb_vorbis.c	/^static void compute_samples(int mask, short *output, int num_c, float **data, int d_offset, int len)$/;"	f	file:
compute_sorted_huffman	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void compute_sorted_huffman(Codebook *c, uint8 *lengths, uint32 *values)$/;"	f	file:
compute_sorted_huffman	thirdparty/stb/include/stb/stb_vorbis.c	/^static void compute_sorted_huffman(Codebook *c, uint8 *lengths, uint32 *values)$/;"	f	file:
compute_stereo_samples	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void compute_stereo_samples(short *output, int num_c, float **data, int d_offset, int len)$/;"	f	file:
compute_stereo_samples	thirdparty/stb/include/stb/stb_vorbis.c	/^static void compute_stereo_samples(short *output, int num_c, float **data, int d_offset, int len)$/;"	f	file:
compute_twiddle_factors	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void compute_twiddle_factors(int n, float *A, float *B, float *C)$/;"	f	file:
compute_twiddle_factors	thirdparty/stb/include/stb/stb_vorbis.c	/^static void compute_twiddle_factors(int n, float *A, float *B, float *C)$/;"	f	file:
compute_window	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void compute_window(int n, float *window)$/;"	f	file:
compute_window	thirdparty/stb/include/stb/stb_vorbis.c	/^static void compute_window(int n, float *window)$/;"	f	file:
con_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned con_count, con_old;$/;"	m	struct:nk_popup_state
con_old	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned con_count, con_old;$/;"	m	struct:nk_popup_state
conf	thirdparty/glfw/src/mir_platform.h	/^    MirCursorConfiguration* conf;$/;"	m	struct:_GLFWcursorMir
config	app/blank/data/Makefile	/^  config=development$/;"	m
config	app/fps_walk/data/Makefile	/^  config=development$/;"	m
config	app/perils/data/Makefile	/^  config=development$/;"	m
config	app/they_never_pay/data/Makefile	/^  config=development$/;"	m
config	app/tiles/data/Makefile	/^  config=development$/;"	m
config	lib/math/data/Makefile	/^  config=development$/;"	m
config	lib/nau/data/Makefile	/^  config=development$/;"	m
config	lib/nil_aspects/data/Makefile	/^  config=development$/;"	m
config	lib/roa/data/Makefile	/^  config=development$/;"	m
config	lib/rov/data/Makefile	/^  config=development$/;"	m
config	scripts/solution/Makefile	/^  config=development$/;"	m
config	thirdparty/catch/data/Makefile	/^  config=development$/;"	m
config	thirdparty/glfw/data/Makefile	/^  config=development$/;"	m
config	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_convert_config config;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_convert_config
config	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_font_config *config;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_font_config
config	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_font_config *config;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_font_config
config	thirdparty/glfw/src/egl_context.h	/^   EGLConfig        config;$/;"	m	struct:_GLFWcontextEGL
config	thirdparty/imgui/data/Makefile	/^  config=development$/;"	m
config	thirdparty/imguizmo/data/Makefile	/^  config=development$/;"	m
config	thirdparty/json/data/Makefile	/^  config=development$/;"	m
config	thirdparty/opengl/data/Makefile	/^  config=development$/;"	m
config	thirdparty/remotery/data/Makefile	/^  config=development$/;"	m
config	thirdparty/soloud/data/Makefile	/^  config=development$/;"	m
config	thirdparty/stb/data/Makefile	/^  config=development$/;"	m
config	thirdparty/tinydir/data/Makefile	/^  config=development$/;"	m
connection	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    MirConnection*                connection;$/;"	m	struct:VkMirSurfaceCreateInfoKHR
connection	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    xcb_connection_t*             connection;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
connection	thirdparty/glfw/src/mir_platform.h	/^    MirConnection*              connection;$/;"	m	struct:VkMirWindowCreateInfoKHR
connection	thirdparty/glfw/src/mir_platform.h	/^    MirConnection*          connection;$/;"	m	struct:_GLFWlibraryMir
connection	thirdparty/glfw/src/x11_platform.h	/^    xcb_connection_t*           connection;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
console	lib/lib/include/lib/logging.hpp	/^  console = 1 << 0,$/;"	e	enum:LIB_NS_NAME::logging::out::ENUM
const_iterator	thirdparty/imgui/include/imgui/imgui.h	/^    typedef const value_type*   const_iterator;$/;"	t	class:ImVector
constantID	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    constantID;$/;"	m	struct:VkSpecializationMapEntry
constructor	thirdparty/remotery/src/Remotery.c	/^    ObjConstructor constructor;$/;"	m	struct:__anon55	file:
content_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 content_padding;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_vec2
context	thirdparty/glfw/src/deps/stb_image_write.h	/^   void *context;$/;"	m	struct:__anon184
context	thirdparty/glfw/src/internal.h	/^        _GLFWctxconfig  context;$/;"	m	struct:_GLFWlibrary::__anon163
context	thirdparty/glfw/src/internal.h	/^    _GLFWcontext        context;$/;"	m	struct:_GLFWwindow
context	thirdparty/glfw/src/wl_platform.h	/^        struct xkb_context*     context;$/;"	m	struct:_GLFWlibraryWayland::__anon144	typeref:struct:_GLFWlibraryWayland::__anon144::xkb_context
context	thirdparty/glfw/src/x11_platform.h	/^    XContext        context;$/;"	m	struct:_GLFWlibraryX11
context	thirdparty/remotery/include/remotery/Remotery.h	/^    void* context;$/;"	m	struct:rmtCUDABind
context	thirdparty/remotery/src/Remotery.c	/^    ID3D11DeviceContext* context;$/;"	m	struct:D3D11	file:
context	thirdparty/stb/include/stb/stb_image_write.h	/^   void *context;$/;"	m	struct:__anon135
contextSlot	thirdparty/glfw/src/internal.h	/^    _GLFWtls            contextSlot;$/;"	m	struct:_GLFWlibrary
contextual_border	thirdparty/glfw/src/deps/nuklear.h	/^    float contextual_border;$/;"	m	struct:nk_style_window
contextual_border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color contextual_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
contextual_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button contextual_button;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_button
contextual_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 contextual_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
controlMask	thirdparty/glfw/src/wl_platform.h	/^        xkb_mod_mask_t          controlMask;$/;"	m	struct:_GLFWlibraryWayland::__anon144
convert	lib/lib/include/lib/convert.hpp	/^namespace convert {$/;"	n	namespace:LIB_NS_NAME
convert	thirdparty/catch/include/catch/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	thirdparty/catch/include/catch/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	thirdparty/catch/include/catch/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	thirdparty/catch/include/catch/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	thirdparty/catch/include/catch/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	thirdparty/catch/include/catch/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert_channels_short_interleaved	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void convert_channels_short_interleaved(int buf_c, short *buffer, int data_c, float **data, int d_offset, int len)$/;"	f	file:
convert_channels_short_interleaved	thirdparty/stb/include/stb/stb_vorbis.c	/^static void convert_channels_short_interleaved(int buf_c, short *buffer, int data_c, float **data, int d_offset, int len)$/;"	f	file:
convert_from_nil	lib/roa/src/common/resource_identifiers.hpp	/^convert_from_nil(const Nil_resource_status status)$/;"	f	namespace:ROA_detail
convert_from_nil	lib/roa/src/common/resource_identifiers.hpp	/^convert_from_nil(const Nil_shader_type type)$/;"	f	namespace:ROA_detail
convert_from_roa	lib/roa/src/common/resource_identifiers.hpp	/^convert_from_roa(const ROA::Resource_status status)$/;"	f	namespace:ROA_detail
convert_from_roa	lib/roa/src/common/resource_identifiers.hpp	/^convert_from_roa(const ROA::Shader_type type)$/;"	f	namespace:ROA_detail
convert_from_type_id	lib/roa/src/common/resource_identifiers.hpp	/^convert_from_type_id(const uint32_t type_id)$/;"	f	namespace:ROA_detail
convert_samples_short	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void convert_samples_short(int buf_c, short **buffer, int b_offset, int data_c, float **data, int d_offset, int samples)$/;"	f	file:
convert_samples_short	thirdparty/stb/include/stb/stb_vorbis.c	/^static void convert_samples_short(int buf_c, short **buffer, int b_offset, int data_c, float **data, int d_offset, int samples)$/;"	f	file:
coord_type	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_font_coord_type coord_type;$/;"	m	struct:nk_font_config	typeref:enum:nk_font_config::nk_font_coord_type
copy	lib/lib/include/lib/string.hpp	/^copy(char *dest, const char *src, const size_t sizeof_dest)$/;"	f	namespace:LIB_NS_NAME::str
copy	thirdparty/glfw/src/deps/nuklear.h	/^    nk_plugin_copy copy;$/;"	m	struct:nk_clipboard
copyToKbBuffer	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::copyToKbBuffer(char *bufferString, unsigned int bufferLength)$/;"	f	class:TED
copy_data	lib/nil/src/common/common.cpp	/^copy_data($/;"	f	namespace:Nil_detail
copy_data_name	lib/nil/src/common/common.cpp	/^copy_data_name($/;"	f	namespace:Nil_detail
copy_samples	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void copy_samples(short *dest, float *src, int len)$/;"	f	file:
copy_samples	thirdparty/stb/include/stb/stb_vorbis.c	/^static void copy_samples(short *dest, float *src, int len)$/;"	f	file:
copyright	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	char copyright[512];$/;"	m	struct:PsidHeader
coreaudio_init	thirdparty/soloud/src/backend/coreaudio/soloud_coreaudio.cpp	/^	result coreaudio_init(SoLoud::Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
cos	lib/math/include/math/general/general.hpp	/^cos(const float radians)$/;"	f
count	lib/rov/src/ogl/rov_gl.hpp	/^  size_t count;$/;"	m	struct:ROV_Internal::rovGLIndex
count	lib/rov/src/ogl/rov_gl.hpp	/^  size_t count;$/;"	m	struct:ROV_Internal::rovGLLightPack
count	thirdparty/glfw/src/deps/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view
count	thirdparty/glfw/src/deps/nuklear.h	/^    int count;$/;"	m	struct:nk_chart_slot
count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int count;$/;"	m	struct:nk_context
count	thirdparty/glfw/src/x11_platform.h	/^        int         count;$/;"	m	struct:_GLFWlibraryX11::__anon147
counter_scale	thirdparty/remotery/src/Remotery.c	/^    double counter_scale;$/;"	m	struct:__anon54	file:
counter_start	thirdparty/remotery/src/Remotery.c	/^    LARGE_INTEGER counter_start;$/;"	m	struct:__anon54	file:
coupling_steps	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint16 coupling_steps;$/;"	m	struct:__anon209	file:
coupling_steps	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint16 coupling_steps;$/;"	m	struct:__anon122	file:
cp	thirdparty/glfw/src/deps/mingw/dinput.h	/^    CPOINT	cp[MAXCPOINTSNUM];$/;"	m	struct:DIPROPCPOINTS
cposy	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	int cposy;$/;"	m	class:TED
cpu	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^static CPU *cpu;$/;"	v	file:
cpu_jammed	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		bool cpu_jammed;$/;"	m	class:CPU
cpuptr	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	CPU	*cpuptr;$/;"	m	class:TED
crc32_init	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void crc32_init(void)$/;"	f	file:
crc32_init	thirdparty/stb/include/stb/stb_vorbis.c	/^static void crc32_init(void)$/;"	f	file:
crc32_update	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static __forceinline uint32 crc32_update(uint32 crc, uint8 byte)$/;"	f	file:
crc32_update	thirdparty/stb/include/stb/stb_vorbis.c	/^static __forceinline uint32 crc32_update(uint32 crc, uint8 byte)$/;"	f	file:
crc_so_far	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32  crc_so_far;  \/\/ running crc$/;"	m	struct:__anon211	file:
crc_so_far	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32  crc_so_far;  \/\/ running crc$/;"	m	struct:__anon124	file:
crc_table	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static uint32 crc_table[256];$/;"	v	file:
crc_table	thirdparty/stb/include/stb/stb_vorbis.c	/^static uint32 crc_table[256];$/;"	v	file:
create	lib/lib/include/lib/entity.hpp	/^create(const uint32_t type, const uint32_t instance)$/;"	f	namespace:LIB_NS_NAME::entity
create	lib/roa/include/roa/resource.hpp	/^  create(const char *name)$/;"	f	class:ROA::Resource
createAnonymousFile	thirdparty/glfw/src/wl_window.c	/^createAnonymousFile(off_t size)$/;"	f
createHelperWindow	thirdparty/glfw/src/win32_init.c	/^static HWND createHelperWindow(void)$/;"	f	file:
createHelperWindow	thirdparty/glfw/src/x11_init.c	/^static Window createHelperWindow(void)$/;"	f	file:
createHiddenCursor	thirdparty/glfw/src/x11_init.c	/^static Cursor createHiddenCursor(void)$/;"	f	file:
createIcon	thirdparty/glfw/src/win32_window.c	/^static HICON createIcon(const GLFWimage* image,$/;"	f	file:
createInstance	thirdparty/soloud/src/audiosource/monotone/soloud_monotone.cpp	/^	AudioSourceInstance * Monotone::createInstance() $/;"	f	class:SoLoud::Monotone
createInstance	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt.cpp	/^	AudioSourceInstance * Openmpt::createInstance()$/;"	f	class:SoLoud::Openmpt
createInstance	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	AudioSourceInstance * Sfxr::createInstance() $/;"	f	class:SoLoud::Sfxr
createInstance	thirdparty/soloud/src/audiosource/speech/soloud_speech.cpp	/^	AudioSourceInstance *Speech::createInstance()$/;"	f	class:SoLoud::Speech
createInstance	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	AudioSourceInstance * TedSid::createInstance() $/;"	f	class:SoLoud::TedSid
createInstance	thirdparty/soloud/src/audiosource/vic/soloud_vic.cpp	/^	AudioSourceInstance * Vic::createInstance() $/;"	f	class:SoLoud::Vic
createInstance	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^	AudioSourceInstance *Wav::createInstance()$/;"	f	class:SoLoud::Wav
createInstance	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	AudioSourceInstance *WavStream::createInstance()$/;"	f	class:SoLoud::WavStream
createInstance	thirdparty/soloud/src/core/soloud_bus.cpp	/^	BusInstance * Bus::createInstance()$/;"	f	class:SoLoud::Bus
createInstance	thirdparty/soloud/src/filter/soloud_bassboostfilter.cpp	/^	FilterInstance *BassboostFilter::createInstance()$/;"	f	class:SoLoud::BassboostFilter
createInstance	thirdparty/soloud/src/filter/soloud_biquadresonantfilter.cpp	/^	BiquadResonantFilterInstance *BiquadResonantFilter::createInstance()$/;"	f	class:SoLoud::BiquadResonantFilter
createInstance	thirdparty/soloud/src/filter/soloud_dcremovalfilter.cpp	/^	FilterInstance *DCRemovalFilter::createInstance()$/;"	f	class:SoLoud::DCRemovalFilter
createInstance	thirdparty/soloud/src/filter/soloud_echofilter.cpp	/^	FilterInstance *EchoFilter::createInstance()$/;"	f	class:SoLoud::EchoFilter
createInstance	thirdparty/soloud/src/filter/soloud_fftfilter.cpp	/^	FilterInstance *FFTFilter::createInstance()$/;"	f	class:SoLoud::FFTFilter
createInstance	thirdparty/soloud/src/filter/soloud_flangerfilter.cpp	/^	FilterInstance *FlangerFilter::createInstance()$/;"	f	class:SoLoud::FlangerFilter
createInstance	thirdparty/soloud/src/filter/soloud_lofifilter.cpp	/^	LofiFilterInstance *LofiFilter::createInstance()$/;"	f	class:SoLoud::LofiFilter
createKeyTables	thirdparty/glfw/src/mir_init.c	/^static void createKeyTables(void)$/;"	f	file:
createKeyTables	thirdparty/glfw/src/win32_init.c	/^static void createKeyTables(void)$/;"	f	file:
createKeyTables	thirdparty/glfw/src/wl_init.c	/^static void createKeyTables(void)$/;"	f	file:
createKeyTables	thirdparty/glfw/src/x11_init.c	/^static void createKeyTables(void)$/;"	f	file:
createLegacyContextGLX	thirdparty/glfw/src/glx_context.c	/^static GLXContext createLegacyContextGLX(_GLFWwindow* window,$/;"	f	file:
createMonitor	thirdparty/glfw/src/win32_monitor.c	/^static _GLFWmonitor* createMonitor(DISPLAY_DEVICEW* adapter,$/;"	f	file:
createMutex	thirdparty/soloud/src/core/soloud_thread.cpp	/^		void * createMutex()$/;"	f	namespace:SoLoud::Thread
createNativeWindow	thirdparty/glfw/src/null_window.c	/^static int createNativeWindow(_GLFWwindow* window,$/;"	f	file:
createNativeWindow	thirdparty/glfw/src/win32_window.c	/^static int createNativeWindow(_GLFWwindow* window,$/;"	f	file:
createNativeWindow	thirdparty/glfw/src/x11_window.c	/^static GLFWbool createNativeWindow(_GLFWwindow* window,$/;"	f	file:
createShellSurface	thirdparty/glfw/src/wl_window.c	/^static GLFWbool createShellSurface(_GLFWwindow* window)$/;"	f	file:
createSurface	thirdparty/glfw/src/wl_window.c	/^static GLFWbool createSurface(_GLFWwindow* window,$/;"	f	file:
createThread	thirdparty/soloud/src/core/soloud_thread.cpp	/^        ThreadHandle createThread(threadFunction aThreadFunction, void *aParameter)$/;"	f	namespace:SoLoud::Thread
createTmpfileCloexec	thirdparty/glfw/src/wl_window.c	/^createTmpfileCloexec(char* tmpname)$/;"	f	file:
createVoiceGroup	thirdparty/soloud/src/core/soloud_core_voicegroup.cpp	/^	handle Soloud::createVoiceGroup()$/;"	f	class:SoLoud::Soloud
createWindow	thirdparty/glfw/src/mir_window.c	/^static GLFWbool createWindow(_GLFWwindow* window)$/;"	f	file:
create_resource	lib/roa/src/interface/detail/resource_interface.cpp	/^create_resource(ROA::Audio_source &rsrc, const char *name)$/;"	f	namespace:ROA_detail
create_resource	lib/roa/src/interface/detail/resource_interface.cpp	/^create_resource(ROA::Material &mat, const char *name)$/;"	f	namespace:ROA_detail
create_resource	lib/roa/src/interface/detail/resource_interface.cpp	/^create_resource(ROA::Mesh &rsrc, const char *name)$/;"	f	namespace:ROA_detail
create_resource	lib/roa/src/interface/detail/resource_interface.cpp	/^create_resource(ROA::Shader &mat, const char *name)$/;"	f	namespace:ROA_detail
cross	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		vec3 cross(vec3 a)$/;"	f	struct:SoLoud::vec3
crsrblinkon	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	bool crsrblinkon;$/;"	m	class:TED
crsrphase	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	int crsrphase;$/;"	m	class:TED
crsrpos	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int crsrpos;$/;"	m	class:TED
crtc	thirdparty/glfw/src/x11_platform.h	/^    RRCrtc          crtc;$/;"	m	struct:_GLFWmonitorX11
cset	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char hcol[2], mcol[4], ecol[4], bmmcol[4], *cset;$/;"	m	class:TED
ctrl	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i ctrl[2];$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_vec2i
ctx	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_context *ctx;$/;"	m	struct:nk_list_view	typeref:struct:nk_list_view::nk_context
ctx	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    struct nk_context ctx;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_context
cuda	thirdparty/remotery/src/Remotery.c	/^    rmtCUDABind cuda;$/;"	m	struct:Remotery	file:
cullMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkCullModeFlags                            cullMode;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
curMode	thirdparty/glfw/src/mir_platform.h	/^    int curMode;$/;"	m	struct:_GLFWmonitorMir
cur_x	thirdparty/stb/include/stb/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon92
cur_y	thirdparty/stb/include/stb/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon92
curr_obj	app/perils/src/game/dynamic_object.cpp	/^size_t curr_obj = 0;$/;"	m	namespace:Dynamic_object::__anon218	file:
curr_rov_clear_color	lib/rov/src/rov_data.hpp	/^  rovVec4         curr_rov_clear_color;$/;"	m	struct:ROV_Internal::rovData
curr_rov_color	lib/rov/src/rov_data.hpp	/^  rovVec4         curr_rov_color;$/;"	m	struct:ROV_Internal::rovData
curr_rov_framebuffer	lib/rov/src/rov_data.hpp	/^  uint32_t        curr_rov_framebuffer;$/;"	m	struct:ROV_Internal::rovData
curr_rov_index	lib/rov/src/rov_data.hpp	/^  uint32_t        curr_rov_index;$/;"	m	struct:ROV_Internal::rovData
curr_rov_mesh	lib/rov/src/rov_data.hpp	/^  uint32_t        curr_rov_mesh;$/;"	m	struct:ROV_Internal::rovData
curr_rov_mesh_shader	lib/rov/src/rov_data.hpp	/^  uint8_t         curr_rov_mesh_shader = rovShader_Fullbright;$/;"	m	struct:ROV_Internal::rovData
curr_rov_rasterizer	lib/rov/src/rov_data.hpp	/^  rovRasterizer   curr_rov_rasterizer;$/;"	m	struct:ROV_Internal::rovData
current	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_window *current;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_window
current	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	unsigned int current;$/;"	m	struct:PsidHeader
currentCursor	thirdparty/glfw/src/mir_platform.h	/^    _GLFWcursor*            currentCursor;$/;"	m	struct:_GLFWwindowMir
currentCursor	thirdparty/glfw/src/wl_platform.h	/^    _GLFWcursor*                currentCursor;$/;"	m	struct:_GLFWwindowWayland
currentDisplay	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDisplayKHR    currentDisplay;$/;"	m	struct:VkDisplayPlanePropertiesKHR
currentExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                       currentExtent;$/;"	m	struct:VkSurfaceCapabilities2EXT
currentExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                       currentExtent;$/;"	m	struct:VkSurfaceCapabilitiesKHR
currentMode	thirdparty/glfw/src/internal.h	/^    GLFWvidmode     currentMode;$/;"	m	struct:_GLFWmonitor
currentMode	thirdparty/glfw/src/wl_platform.h	/^    int                         currentMode;$/;"	m	struct:_GLFWmonitorWayland
currentRamp	thirdparty/glfw/src/internal.h	/^    GLFWgammaramp   currentRamp;$/;"	m	struct:_GLFWmonitor
currentStackIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t        currentStackIndex;$/;"	m	struct:VkDisplayPlanePropertiesKHR
currentTransform	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSurfaceTransformFlagBitsKHR    currentTransform;$/;"	m	struct:VkSurfaceCapabilities2EXT
currentTransform	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSurfaceTransformFlagBitsKHR    currentTransform;$/;"	m	struct:VkSurfaceCapabilitiesKHR
current_aspect_count	lib/nil/src/internal_data/internal_data.hpp	/^  size_t                current_aspect_count;$/;"	m	struct:Nil_ctx
current_loc	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 current_loc; \/\/ sample location of next frame to decode$/;"	m	struct:stb_vorbis	file:
current_loc	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 current_loc; \/\/ sample location of next frame to decode$/;"	m	struct:stb_vorbis	file:
current_loc_valid	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int    current_loc_valid;$/;"	m	struct:stb_vorbis	file:
current_loc_valid	thirdparty/stb/include/stb/stb_vorbis.c	/^   int    current_loc_valid;$/;"	m	struct:stb_vorbis	file:
current_parent	thirdparty/remotery/src/Remotery.c	/^    Sample* current_parent;$/;"	m	struct:SampleTree	file:
current_state	lib/nil/include/nil/data/audio.hpp	/^  enum { NO_CURR_STATE, PLAYING, STOPPED }   current_state;$/;"	m	struct:Nil::Data::Audio	typeref:enum:Nil::Data::Audio::__anon11
currins	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned char currins;$/;"	m	class:CPU
currtime	thirdparty/soloud/src/tools/tedsid2dump/main.cpp	/^int currtime = 0;$/;"	v
cursor	thirdparty/glfw/src/cocoa_platform.h	/^    id                  cursor;$/;"	m	struct:_GLFWlibraryNS
cursor	thirdparty/glfw/src/deps/nuklear.h	/^    int cursor;$/;"	m	struct:nk_edit_state
cursor	thirdparty/glfw/src/deps/nuklear.h	/^    int cursor;$/;"	m	struct:nk_property_state
cursor	thirdparty/glfw/src/deps/nuklear.h	/^    int cursor;$/;"	m	struct:nk_text_edit
cursor	thirdparty/glfw/src/internal.h	/^    _GLFWcursor*        cursor;$/;"	m	struct:_GLFWwindow
cursor	thirdparty/stb/include/stb/stb_textedit.h	/^   int cursor;$/;"	m	struct:__anon132
cursor	thirdparty/stb/include/stb/stb_truetype.h	/^   int cursor;$/;"	m	struct:__anon96
cursorEnter	thirdparty/glfw/src/internal.h	/^        GLFWcursorenterfun      cursorEnter;$/;"	m	struct:_GLFWwindow::__anon162
cursorInClientArea	thirdparty/glfw/src/win32_window.c	/^static GLFWbool cursorInClientArea(_GLFWwindow* window)$/;"	f	file:
cursorListHead	thirdparty/glfw/src/internal.h	/^    _GLFWcursor*        cursorListHead;$/;"	m	struct:_GLFWlibrary
cursorMode	thirdparty/glfw/src/internal.h	/^    int                 cursorMode;$/;"	m	struct:_GLFWwindow
cursorName	thirdparty/glfw/src/mir_platform.h	/^    char const*             cursorName; \/\/ only needed for system cursors$/;"	m	struct:_GLFWcursorMir
cursorPos	thirdparty/glfw/src/internal.h	/^        GLFWcursorposfun        cursorPos;$/;"	m	struct:_GLFWwindow::__anon162
cursorPosX	thirdparty/glfw/src/wl_platform.h	/^    double                      cursorPosX, cursorPosY;$/;"	m	struct:_GLFWwindowWayland
cursorPosY	thirdparty/glfw/src/wl_platform.h	/^    double                      cursorPosX, cursorPosY;$/;"	m	struct:_GLFWwindowWayland
cursorSurface	thirdparty/glfw/src/wl_platform.h	/^    struct wl_surface*          cursorSurface;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::wl_surface
cursorTheme	thirdparty/glfw/src/wl_platform.h	/^    struct wl_cursor_theme*     cursorTheme;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::wl_cursor_theme
cursorTracked	thirdparty/glfw/src/win32_platform.h	/^    GLFWbool            cursorTracked;$/;"	m	struct:_GLFWwindowWin32
cursorWarpDeltaX	thirdparty/glfw/src/cocoa_platform.h	/^    double          cursorWarpDeltaX, cursorWarpDeltaY;$/;"	m	struct:_GLFWwindowNS
cursorWarpDeltaY	thirdparty/glfw/src/cocoa_platform.h	/^    double          cursorWarpDeltaX, cursorWarpDeltaY;$/;"	m	struct:_GLFWwindowNS
cursor_active	thirdparty/glfw/src/deps/nuklear.h	/^    const struct nk_cursor *cursor_active;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_cursor
cursor_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
cursor_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
cursor_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
cursor_at_end_of_line	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char cursor_at_end_of_line;$/;"	m	struct:nk_text_edit
cursor_at_end_of_line	thirdparty/stb/include/stb/stb_textedit.h	/^   unsigned char cursor_at_end_of_line; \/\/ not implemented yet$/;"	m	struct:__anon132
cursor_border	thirdparty/glfw/src/deps/nuklear.h	/^    float cursor_border;$/;"	m	struct:nk_style_progress
cursor_border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color cursor_border_color;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_color
cursor_border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color cursor_border_color;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_color
cursor_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color cursor_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
cursor_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
cursor_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
cursor_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
cursor_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
cursor_last	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_cursor *cursor_last;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_cursor
cursor_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color cursor_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
cursor_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
cursor_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
cursor_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
cursor_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
cursor_rounding	thirdparty/glfw/src/deps/nuklear.h	/^    float cursor_rounding;$/;"	m	struct:nk_style_progress
cursor_size	thirdparty/glfw/src/deps/nuklear.h	/^    float cursor_size;$/;"	m	struct:nk_style_edit
cursor_size	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 cursor_size;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_vec2
cursor_text_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color cursor_text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
cursor_text_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color cursor_text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
cursor_visible	thirdparty/glfw/src/deps/nuklear.h	/^    int cursor_visible;$/;"	m	struct:nk_style
cursors	thirdparty/glfw/src/deps/nuklear.h	/^    const struct nk_cursor *cursors[NK_CURSOR_COUNT];$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_cursor
cursors	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_cursor cursors[NK_CURSOR_COUNT];$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_cursor
curve_segment_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int curve_segment_count; \/* number of segments used for curves: default to 22 *\/$/;"	m	struct:nk_convert_config
custom	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_recti custom;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_recti
customCursor	thirdparty/glfw/src/mir_platform.h	/^    MirBufferStream*        customCursor;$/;"	m	struct:_GLFWcursorMir
custom_tick	app/perils/src/main.cpp	/^custom_tick(uintptr_t user_data)$/;"	f
cutOffFreq	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	double cutOffFreq[2048];	\/\/ filter cutoff frequency register$/;"	m	class:SIDsound
cutOffFreq	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	double cutOffFreq[2048];	\/\/ filter cutoff frequency register$/;"	m	class:SIDsound
cx	thirdparty/glfw/src/deps/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc
cx	thirdparty/glfw/src/deps/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc_filled
cx	thirdparty/glfw/src/deps/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex
cx	thirdparty/stb/include/stb/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon102
cx1	thirdparty/stb/include/stb/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon102
cy	thirdparty/glfw/src/deps/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc
cy	thirdparty/glfw/src/deps/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc_filled
cy	thirdparty/glfw/src/deps/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex
cy	thirdparty/stb/include/stb/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon102
cy1	thirdparty/stb/include/stb/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon102
cycle	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int cycle;$/;"	m	class:CPU
cycles	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^  int  cycles;$/;"	m	struct:INSTR
d	thirdparty/glfw/src/deps/nuklear.h	/^    double d;$/;"	m	union:nk_property
d3d11	thirdparty/remotery/src/Remotery.c	/^    D3D11* d3d11;$/;"	m	struct:Remotery	file:
dAlBufferData	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static al_BufferData dAlBufferData;$/;"	v	file:
dAlDeleteBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static al_DeleteBuffers dAlDeleteBuffers;$/;"	v	file:
dAlDeleteSources	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static al_DeleteSources dAlDeleteSources;$/;"	v	file:
dAlGenBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static al_GenBuffers dAlGenBuffers;$/;"	v	file:
dAlGenSources	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static al_GenSources dAlGenSources;$/;"	v	file:
dAlGetSourcei	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static al_GetSourcei dAlGetSourcei;$/;"	v	file:
dAlSourcePlay	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static al_SourcePlay dAlSourcePlay;$/;"	v	file:
dAlSourceQueueBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static al_SourceQueueBuffers dAlSourceQueueBuffers;$/;"	v	file:
dAlSourceStop	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static al_SourceStop dAlSourceStop;$/;"	v	file:
dAlSourceUnqueueBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static al_SourceUnqueueBuffers dAlSourceUnqueueBuffers;$/;"	v	file:
dAlcCloseDevice	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static alc_CloseDevice dAlcCloseDevice;$/;"	v	file:
dAlcCreateContext	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static alc_CreateContext dAlcCreateContext;$/;"	v	file:
dAlcDestroyContext	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static alc_DestroyContext dAlcDestroyContext;$/;"	v	file:
dAlcMakeContextCurrent	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static alc_MakeContextCurrent dAlcMakeContextCurrent;$/;"	v	file:
dAlcOpenDevice	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static alc_OpenDevice dAlcOpenDevice;$/;"	v	file:
dPa_CloseStream	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^static Pa_CloseStreamProc dPa_CloseStream = NULL;$/;"	v	file:
dPa_Initialize	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^static Pa_InitializeProc dPa_Initialize = NULL;$/;"	v	file:
dPa_OpenDefaultStream	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^static Pa_OpenDefaultStreamProc dPa_OpenDefaultStream = NULL;$/;"	v	file:
dPa_StartStream	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^static Pa_StartStreamProc dPa_StartStream = NULL;$/;"	v	file:
dPa_Terminate	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^static Pa_TerminateProc dPa_Terminate = NULL;$/;"	v	file:
dSDL_CloseAudio	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^static SDLCloseAudio dSDL_CloseAudio = NULL;$/;"	v	file:
dSDL_OpenAudio	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^static SDLOpenAudio dSDL_OpenAudio = NULL;$/;"	v	file:
dSDL_PauseAudio	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^static SDLPauseAudio dSDL_PauseAudio = NULL;$/;"	v	file:
d_openmpt_module_create_from_memory	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^static dll_openmpt_module_create_from_memory d_openmpt_module_create_from_memory = NULL;$/;"	v	file:
d_openmpt_module_destroy	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^static dll_openmpt_module_destroy d_openmpt_module_destroy = NULL;$/;"	v	file:
d_openmpt_module_read_float_stereo	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^static dll_openmpt_module_read_float_stereo d_openmpt_module_read_float_stereo = NULL;$/;"	v	file:
darray	thirdparty/soloud/src/audiosource/speech/darray.cpp	/^darray::darray()$/;"	f	class:darray
darray	thirdparty/soloud/src/audiosource/speech/darray.h	/^class darray$/;"	c
data	lib/lib/include/lib/array.hpp	/^  T const* data() const { return m_begin; }$/;"	f	class:LIB_NS_NAME::array
data	lib/lib/include/lib/array.hpp	/^  T* data()             { return m_begin; }$/;"	f	class:LIB_NS_NAME::array
data	lib/lib/include/lib/memory.hpp	/^  void *data;$/;"	m	struct:LIB_NS_NAME::mem::header
data	lib/math/include/math/mat/mat_types.hpp	/^	float data[16];$/;"	m	struct:mat4
data	lib/math/include/math/mat/mat_types.hpp	/^	float data[9];$/;"	m	struct:mat3
data	lib/math/include/math/quat/quat_types.hpp	/^	float data[4]; \/\/ x, y, z, w;$/;"	m	struct:quat
data	lib/math/include/math/vec/vec_types.hpp	/^    float data[2];$/;"	m	union:vec2::__anon52
data	lib/math/include/math/vec/vec_types.hpp	/^    float data[3];$/;"	m	union:vec3::__anon51
data	lib/math/include/math/vec/vec_types.hpp	/^    float data[4];$/;"	m	union:vec4::__anon50
data	lib/nil/include/nil/aspect.hpp	/^  void                        *data;$/;"	m	struct:Nil_aspect
data	lib/nil/include/nil/resource/audio.hpp	/^  uintptr_t           data;$/;"	m	struct:Nil_audio_src
data	lib/nil/include/nil/resource/font.hpp	/^  uintptr_t         data;$/;"	m	struct:Nil_font
data	lib/nil/include/nil/resource/texture.hpp	/^  uintptr_t         data;       \/\/ Internally copied$/;"	m	struct:Nil_texture
data	lib/nil/src/graph/graph_data.hpp	/^  char data[NIL_MAX_NODE_NAME_LENGTH];$/;"	m	struct:Nil::Graph::short_string
data	lib/nil/src/graph/graph_data.hpp	/^  lib::array<node_data>       data;$/;"	m	struct:Nil::Graph::Data
data	lib/nil/src/interface/data/common.hpp	/^  lib::array<T>         data;$/;"	m	struct:Nil::Data::Generic_data
data	lib/roa/include/roa/data.hpp	/^  std::vector<T> data;$/;"	m	class:ROA::Data
data	lib/roa/include/roa/quaternion.hpp	/^  float           data[4];$/;"	m	class:ROA::final
data	lib/roa/include/roa/vector3.hpp	/^  float             data[3];$/;"	m	class:ROA::final
data	lib/roa/src/interface/collection.cpp	/^Collection::data() const$/;"	f	class:ROA::Collection
data	lib/roa/src/interface/collection.cpp	/^Collection::data()$/;"	f	class:ROA::Collection
data	thirdparty/glfw/src/deps/nuklear.h	/^    const unsigned char* data; \/* pointer to .ttf file *\/$/;"	m	struct:nk_tt_fontinfo
data	thirdparty/glfw/src/deps/nuklear.h	/^    union nk_page_data data;$/;"	m	struct:nk_page_element	typeref:union:nk_page_element::nk_page_data
data	thirdparty/glfw/src/deps/nuklear.h	/^    union nk_style_item_data data;$/;"	m	struct:nk_style_item	typeref:union:nk_style_item::nk_style_item_data
data	thirdparty/json/src/json.c	/^  char *data;$/;"	m	struct:json_parse_state_s	file:
data	thirdparty/remotery/src/Remotery.c	/^    VirtualMirrorBuffer* data;$/;"	m	struct:rmtMessageQueue	file:
data	thirdparty/remotery/src/Remotery.c	/^    rmtU8 data[20];$/;"	m	struct:__anon62	file:
data	thirdparty/remotery/src/Remotery.c	/^    rmtU8* data;$/;"	m	struct:__anon56	file:
data	thirdparty/remotery/src/Remotery.c	/^    } data;$/;"	m	struct:__anon63	typeref:union:__anon63::__anon64	file:
data	thirdparty/stb/include/stb/stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anon81::__anon82
data	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned char  * data;              \/\/ pointer to .ttf file$/;"	m	struct:stbtt_fontinfo
data	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned char *data;$/;"	m	struct:__anon96
dataIndex	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	unsigned int dataIndex;$/;"	m	class:CbmTune
dataSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    size_t                             dataSize;$/;"	m	struct:VkSpecializationInfo
data_register_type	lib/nil/src/graph/graph.cpp	/^data_register_type($/;"	f	namespace:Nil::Graph
data_size	lib/nil/include/nil/resource/audio.hpp	/^  size_t              data_size;$/;"	m	struct:Nil_audio_src
data_size	lib/nil/include/nil/resource/font.hpp	/^  size_t            data_size;$/;"	m	struct:Nil_font
data_size	lib/nil/include/nil/resource/texture.hpp	/^  size_t            data_size;$/;"	m	struct:Nil_texture
data_size	thirdparty/json/src/json.c	/^  size_t data_size;$/;"	m	struct:json_parse_state_s	file:
data_type	lib/nil/include/nil/resource/audio.hpp	/^  Nil_data_type       data_type;$/;"	m	struct:Nil_audio_src
data_type	lib/nil/include/nil/resource/font.hpp	/^  enum { FILENAME } data_type;$/;"	m	struct:Nil_font	typeref:enum:Nil_font::__anon14
data_type	lib/nil/include/nil/resource/texture.hpp	/^  Nil_data_type     data_type;$/;"	m	struct:Nil_texture
data_unregister_type	lib/nil/src/graph/graph.cpp	/^data_unregister_type($/;"	f	namespace:Nil::Graph
data_updated	lib/nil/src/graph/graph.cpp	/^data_updated(const Data *graph, const uint32_t node_id, const uint64_t type_id)$/;"	f	namespace:Nil::Graph
dc	thirdparty/glfw/src/wgl_context.h	/^    HDC       dc;$/;"	m	struct:_GLFWcontextWGL
dcDigiBlaster	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	int dcDigiBlaster;$/;"	m	class:SIDsound
dcDigiBlaster	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	int dcDigiBlaster;$/;"	m	class:SIDsound
dcMixer	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	int dcMixer; \/\/ different for 6581 and 8580 (constant level output for digi)$/;"	m	class:SIDsound
dcMixer	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	int dcMixer; \/\/ different for 6581 and 8580 (constant level output for digi)$/;"	m	class:SIDsound
dcOutput	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             dcOutput[2];$/;"	m	class:TED
dcOutput	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static int             dcOutput[2];$/;"	v	file:
dcVoice	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	int dcVoice;$/;"	m	class:SIDsound
dcVoice	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	int dcVoice;$/;"	m	class:SIDsound
dcWave	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	int dcWave;$/;"	m	class:SIDsound
dcWave	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	int dcWave;$/;"	m	class:SIDsound
dc_pred	thirdparty/stb/include/stb/stb_image.h	/^      int dc_pred;$/;"	m	struct:__anon81::__anon82
dct_bfly32o	thirdparty/stb/include/stb/stb_image.h	2253;"	d
dct_bfly32o	thirdparty/stb/include/stb/stb_image.h	2387;"	d
dct_bfly32o	thirdparty/stb/include/stb/stb_image.h	2439;"	d
dct_bfly32o	thirdparty/stb/include/stb/stb_image.h	2597;"	d
dct_const	thirdparty/stb/include/stb/stb_image.h	2225;"	d
dct_const	thirdparty/stb/include/stb/stb_image.h	2382;"	d
dct_interleave16	thirdparty/stb/include/stb/stb_image.h	2270;"	d
dct_interleave16	thirdparty/stb/include/stb/stb_image.h	2389;"	d
dct_interleave8	thirdparty/stb/include/stb/stb_image.h	2264;"	d
dct_interleave8	thirdparty/stb/include/stb/stb_image.h	2388;"	d
dct_iv_slow	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^void dct_iv_slow(float *buffer, int n)$/;"	f
dct_iv_slow	thirdparty/stb/include/stb/stb_vorbis.c	/^void dct_iv_slow(float *buffer, int n)$/;"	f
dct_long_mac	thirdparty/stb/include/stb/stb_image.h	2420;"	d
dct_long_mac	thirdparty/stb/include/stb/stb_image.h	2593;"	d
dct_long_mul	thirdparty/stb/include/stb/stb_image.h	2416;"	d
dct_long_mul	thirdparty/stb/include/stb/stb_image.h	2592;"	d
dct_pass	thirdparty/stb/include/stb/stb_image.h	2275;"	d
dct_pass	thirdparty/stb/include/stb/stb_image.h	2390;"	d
dct_pass	thirdparty/stb/include/stb/stb_image.h	2447;"	d
dct_pass	thirdparty/stb/include/stb/stb_image.h	2598;"	d
dct_rot	thirdparty/stb/include/stb/stb_image.h	2229;"	d
dct_rot	thirdparty/stb/include/stb/stb_image.h	2383;"	d
dct_trn16	thirdparty/stb/include/stb/stb_image.h	2507;"	d
dct_trn16	thirdparty/stb/include/stb/stb_image.h	2529;"	d
dct_trn32	thirdparty/stb/include/stb/stb_image.h	2508;"	d
dct_trn32	thirdparty/stb/include/stb/stb_image.h	2530;"	d
dct_trn64	thirdparty/stb/include/stb/stb_image.h	2509;"	d
dct_trn64	thirdparty/stb/include/stb/stb_image.h	2531;"	d
dct_trn8_16	thirdparty/stb/include/stb/stb_image.h	2553;"	d
dct_trn8_16	thirdparty/stb/include/stb/stb_image.h	2588;"	d
dct_trn8_32	thirdparty/stb/include/stb/stb_image.h	2554;"	d
dct_trn8_32	thirdparty/stb/include/stb/stb_image.h	2589;"	d
dct_trn8_8	thirdparty/stb/include/stb/stb_image.h	2552;"	d
dct_trn8_8	thirdparty/stb/include/stb/stb_image.h	2587;"	d
dct_wadd	thirdparty/stb/include/stb/stb_image.h	2243;"	d
dct_wadd	thirdparty/stb/include/stb/stb_image.h	2385;"	d
dct_wadd	thirdparty/stb/include/stb/stb_image.h	2429;"	d
dct_wadd	thirdparty/stb/include/stb/stb_image.h	2595;"	d
dct_widen	thirdparty/stb/include/stb/stb_image.h	2238;"	d
dct_widen	thirdparty/stb/include/stb/stb_image.h	2384;"	d
dct_widen	thirdparty/stb/include/stb/stb_image.h	2424;"	d
dct_widen	thirdparty/stb/include/stb/stb_image.h	2594;"	d
dct_wsub	thirdparty/stb/include/stb/stb_image.h	2248;"	d
dct_wsub	thirdparty/stb/include/stb/stb_image.h	2386;"	d
dct_wsub	thirdparty/stb/include/stb/stb_image.h	2434;"	d
dct_wsub	thirdparty/stb/include/stb/stb_image.h	2596;"	d
debug	thirdparty/glfw/src/internal.h	/^    GLFWbool            forward, debug, noerror;$/;"	m	struct:_GLFWcontext
debug	thirdparty/glfw/src/internal.h	/^    GLFWbool      debug;$/;"	m	struct:_GLFWctxconfig
debug_line	app/perils/src/data/data.cpp	/^debug_line(const math::vec3 start, const math::vec3 end, const math::vec3 col)$/;"	f	namespace:Game_data
dec_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_button
dec_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_button
dec_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_button
dec_symbol	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type dec_symbol;$/;"	m	struct:nk_style_scrollbar	typeref:enum:nk_style_scrollbar::nk_symbol_type
dec_symbol	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type dec_symbol;$/;"	m	struct:nk_style_slider	typeref:enum:nk_style_slider::nk_symbol_type
decltype	lib/nil/src/interface/node.cpp	/^Node::Node(const decltype(nullptr))$/;"	f	class:Nil::Node
decodeUTF8	thirdparty/glfw/src/x11_window.c	/^static unsigned int decodeUTF8(const char** s)$/;"	f	file:
decode_buffer	thirdparty/stb/include/stb/stb_image_resize.h	/^    float* decode_buffer;$/;"	m	struct:__anon72
decode_buffer_pixels	thirdparty/stb/include/stb/stb_image_resize.h	/^    int decode_buffer_pixels;$/;"	m	struct:__anon72
decode_buffer_size	thirdparty/stb/include/stb/stb_image_resize.h	/^    int decode_buffer_size;$/;"	m	struct:__anon72
decode_residue	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void decode_residue(vorb *f, float *residue_buffers[], int ch, int n, int rn, uint8 *do_not_decode)$/;"	f	file:
decode_residue	thirdparty/stb/include/stb/stb_vorbis.c	/^static void decode_residue(vorb *f, float *residue_buffers[], int ch, int n, int rn, uint8 *do_not_decode)$/;"	f	file:
decoding_table	lib/nil/src/asset_loading/load_gltf.cpp	/^static char *decoding_table = NULL;$/;"	m	namespace:__anon41	file:
decorated	thirdparty/glfw/src/internal.h	/^    GLFWbool            decorated;$/;"	m	struct:_GLFWwindow
decorated	thirdparty/glfw/src/internal.h	/^    GLFWbool      decorated;$/;"	m	struct:_GLFWwndconfig
dedicatedAllocation	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32           dedicatedAllocation;$/;"	m	struct:VkDedicatedAllocationBufferCreateInfoNV
dedicatedAllocation	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32           dedicatedAllocation;$/;"	m	struct:VkDedicatedAllocationImageCreateInfoNV
defaultTune	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	unsigned int defaultTune;$/;"	m	struct:PsidHeader
default_font	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_font *default_font;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_font
deinit	thirdparty/soloud/src/core/soloud.cpp	/^	void Soloud::deinit()$/;"	f	class:SoLoud::Soloud
deinterlace_samples_float	thirdparty/soloud/src/core/soloud.cpp	/^	void deinterlace_samples_float(const float *aSourceBuffer, float *aDestBuffer, unsigned int aSamples, unsigned int aChannels)$/;"	f	namespace:SoLoud
delay	thirdparty/stb/include/stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon92
delegate	thirdparty/glfw/src/cocoa_platform.h	/^    id                  delegate;$/;"	m	struct:_GLFWlibraryNS
delegate	thirdparty/glfw/src/cocoa_platform.h	/^    id              delegate;$/;"	m	struct:_GLFWwindowNS
deleteAll	thirdparty/catch/include/catch/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	thirdparty/catch/include/catch/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteNode	thirdparty/glfw/src/mir_window.c	/^static void deleteNode(EventQueue* queue, EventNode* node)$/;"	f	file:
delete_cb	lib/nil/src/graph/graph_data.hpp	/^    node_delete_fn          delete_cb;$/;"	m	struct:Nil::Graph::Data::graph_type
delete_length	thirdparty/glfw/src/deps/nuklear.h	/^   short delete_length;$/;"	m	struct:nk_text_undo_record
delete_length	thirdparty/stb/include/stb/stb_textedit.h	/^   short           delete_length;$/;"	m	struct:__anon130
delta	lib/nil/include/nil/data/mouse.hpp	/^  float delta[2];$/;"	m	struct:Nil::Data::Mouse
delta	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 delta;$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_vec2
delta	thirdparty/stb/include/stb/stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon80
delta_time	lib/nil/src/internal_data/internal_data.hpp	/^  float                 delta_time;$/;"	m	struct:Nil_ctx
delta_time_seconds	thirdparty/glfw/src/deps/nuklear.h	/^    float delta_time_seconds;$/;"	m	struct:nk_context
delta_value	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   float  delta_value;$/;"	m	struct:__anon203	file:
delta_value	thirdparty/stb/include/stb/stb_vorbis.c	/^   float  delta_value;$/;"	m	struct:__anon116	file:
denom	thirdparty/glfw/src/internal.h	/^    int                 numer, denom;$/;"	m	struct:_GLFWwindow
dependency	lib/nil/src/graph/graph_data.hpp	/^    uint64_t                dependency;$/;"	m	struct:Nil::Graph::Data::graph_type
dependencyCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                          dependencyCount;$/;"	m	struct:VkRenderPassCreateInfo
dependencyFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDependencyFlags       dependencyFlags;$/;"	m	struct:VkSubpassDependency
dependency_cb	lib/nil/src/graph/graph_data.hpp	/^    data_dependecy_alert_fn dependency_cb;$/;"	m	struct:Nil::Graph::Data::graph_type
depth	lib/nil/include/nil/resource/texture.hpp	/^  uint32_t depth;       \/\/ If data_type == DATA then this is input.$/;"	m	struct:Nil_texture
depth	lib/rov/src/ogl/rov_gl.hpp	/^  GLuint depth;$/;"	m	struct:ROV_Internal::rovGLFramebuffer
depth	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float       depth;$/;"	m	struct:VkClearDepthStencilValue
depth	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    depth;$/;"	m	struct:VkExtent3D
depth	thirdparty/stb/include/stb/stb_image.h	/^   int depth;$/;"	m	struct:__anon87
depthBiasClamp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    depthBiasClamp;$/;"	m	struct:VkPhysicalDeviceFeatures
depthBiasClamp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                                      depthBiasClamp;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
depthBiasConstantFactor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                                      depthBiasConstantFactor;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
depthBiasEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                                   depthBiasEnable;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
depthBiasSlopeFactor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                                      depthBiasSlopeFactor;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
depthBits	thirdparty/glfw/src/internal.h	/^    int         depthBits;$/;"	m	struct:_GLFWfbconfig
depthBounds	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    depthBounds;$/;"	m	struct:VkPhysicalDeviceFeatures
depthBoundsTestEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                                  depthBoundsTestEnable;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
depthClamp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    depthClamp;$/;"	m	struct:VkPhysicalDeviceFeatures
depthClampEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                                   depthClampEnable;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
depthCompareOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkCompareOp                               depthCompareOp;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
depthFailOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStencilOp    depthFailOp;$/;"	m	struct:VkStencilOpState
depthPitch	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize    depthPitch;$/;"	m	struct:VkSubresourceLayout
depthStencil	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkClearDepthStencilValue    depthStencil;$/;"	m	union:VkClearValue
depthTestEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                                  depthTestEnable;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
depthWriteEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                                  depthWriteEnable;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
dequant	thirdparty/stb/include/stb/stb_image.h	/^   stbi__uint16 dequant[4][64];$/;"	m	struct:__anon81
dequeueEvent	thirdparty/glfw/src/mir_window.c	/^static EventNode* dequeueEvent(EventQueue* queue)$/;"	f	file:
descent	thirdparty/glfw/src/deps/nuklear.h	/^    float ascent, descent;$/;"	m	struct:nk_baked_font
description	thirdparty/catch/include/catch/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    char        description[VK_MAX_DESCRIPTION_SIZE];$/;"	m	struct:VkLayerProperties
description	thirdparty/glfw/src/internal.h	/^    char            description[1024];$/;"	m	struct:_GLFWerror
descriptorCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         descriptorCount;$/;"	m	struct:VkWriteDescriptorSet
descriptorCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              descriptorCount;$/;"	m	struct:VkDescriptorSetLayoutBinding
descriptorCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t            descriptorCount;$/;"	m	struct:VkDescriptorPoolSize
descriptorCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           descriptorCount;$/;"	m	struct:VkCopyDescriptorSet
descriptorPool	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDescriptorPool                descriptorPool;$/;"	m	struct:VkDescriptorSetAllocateInfo
descriptorSet	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDescriptorSet               descriptorSet;$/;"	m	struct:VkObjectTableDescriptorSetEntryNVX
descriptorSetCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                        descriptorSetCount;$/;"	m	struct:VkDescriptorSetAllocateInfo
descriptorType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDescriptorType                 descriptorType;$/;"	m	struct:VkWriteDescriptorSet
descriptorType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDescriptorType      descriptorType;$/;"	m	struct:VkDescriptorSetLayoutBinding
destroy	lib/nil/src/graph/graph.cpp	/^destroy(Data *graph)$/;"	f	namespace:Nil::Graph
destroy	lib/nil/src/interface/node.cpp	/^Node::destroy()$/;"	f	class:Nil::Node
destroy	lib/roa/src/interface/object.cpp	/^Object::destroy()$/;"	f	class:ROA::Object
destroy	thirdparty/glfw/src/internal.h	/^    _GLFWdestroycontextfun      destroy;$/;"	m	struct:_GLFWcontext
destroyContextEGL	thirdparty/glfw/src/egl_context.c	/^static void destroyContextEGL(_GLFWwindow* window)$/;"	f	file:
destroyContextGLX	thirdparty/glfw/src/glx_context.c	/^static void destroyContextGLX(_GLFWwindow* window)$/;"	f	file:
destroyContextOSMesa	thirdparty/glfw/src/osmesa_context.c	/^static void destroyContextOSMesa(_GLFWwindow* window)$/;"	f	file:
destroyContextWGL	thirdparty/glfw/src/wgl_context.c	/^static void destroyContextWGL(_GLFWwindow* window)$/;"	f	file:
destroyMutex	thirdparty/soloud/src/core/soloud_thread.cpp	/^		void destroyMutex(void *aHandle)$/;"	f	namespace:SoLoud::Thread
destroyVoiceGroup	thirdparty/soloud/src/core/soloud_core_voicegroup.cpp	/^	result Soloud::destroyVoiceGroup(handle aVoiceGroupHandle)$/;"	f	class:SoLoud::Soloud
destructor	thirdparty/remotery/src/Remotery.c	/^    ObjDestructor destructor;$/;"	m	struct:__anon55	file:
detail	lib/lib/include/lib/color.hpp	/^namespace detail {$/;"	n	namespace:LIB_NS_NAME::color
detail	lib/lib/include/lib/nyaml.hpp	/^namespace detail {$/;"	n	namespace:LIB_NS_NAME::nyaml
detail	lib/math/include/math/geometry/aabb.hpp	/^namespace detail$/;"	n
detail	lib/math/include/math/quat/quat.hpp	/^namespace detail$/;"	n
detectEWMH	thirdparty/glfw/src/x11_init.c	/^static void detectEWMH(void)$/;"	f	file:
detectable	thirdparty/glfw/src/x11_platform.h	/^        GLFWbool    detectable;$/;"	m	struct:_GLFWlibraryX11::__anon146
developer_count	lib/nil/src/interface/data/developer.cpp	/^developer_count()$/;"	f	namespace:Nil::Data
developer_type_id	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^constexpr uint32_t developer_type_id = 1;$/;"	m	namespace:Nil_ext::ImGui_Aspect
device	thirdparty/glfw/src/cocoa_joystick.h	/^    IOHIDDeviceRef      device;$/;"	m	struct:_GLFWjoystickNS
device	thirdparty/glfw/src/win32_joystick.c	/^    IDirectInputDevice8W*   device;$/;"	m	struct:_GLFWobjenumWin32	file:
device	thirdparty/glfw/src/win32_joystick.h	/^    IDirectInputDevice8W*   device;$/;"	m	struct:_GLFWjoystickWin32
device	thirdparty/remotery/src/Remotery.c	/^    ID3D11Device* device;$/;"	m	struct:D3D11	file:
device	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^        IMMDevice *device;$/;"	m	struct:SoLoud::WASAPIData	file:
deviceCallback	thirdparty/glfw/src/win32_joystick.c	/^static BOOL CALLBACK deviceCallback(const DIDEVICEINSTANCE* di, void* user)$/;"	f	file:
deviceEnumerator	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^        IMMDeviceEnumerator *deviceEnumerator;$/;"	m	struct:SoLoud::WASAPIData	file:
deviceEvent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceEventTypeEXT    deviceEvent;$/;"	m	struct:VkDeviceEventInfoEXT
deviceID	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                            deviceID;$/;"	m	struct:VkPhysicalDeviceProperties
deviceName	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    char                                deviceName[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE];$/;"	m	struct:VkPhysicalDeviceProperties
deviceObjectCallback	thirdparty/glfw/src/win32_joystick.c	/^static BOOL CALLBACK deviceObjectCallback(const DIDEVICEOBJECTINSTANCEW* doi,$/;"	f	file:
deviceType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPhysicalDeviceType                deviceType;$/;"	m	struct:VkPhysicalDeviceProperties
dics	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DICOLORSET		dics;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA
dics	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DICOLORSET		dics;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW
diff	thirdparty/glfw/src/deps/nuklear.h	/^    diff = sizeof(Big) - sizeof(T), value = nk_helper<Big, diff>::value};};$/;"	e	enum:nk_alignof::__anon171
dimensions	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int dimensions, entries;$/;"	m	struct:__anon203	file:
dimensions	thirdparty/stb/include/stb/stb_vorbis.c	/^   int dimensions, entries;$/;"	m	struct:__anon116	file:
dinput8	thirdparty/glfw/src/win32_platform.h	/^    } dinput8;$/;"	m	struct:_GLFWlibraryWin32	typeref:struct:_GLFWlibraryWin32::__anon154
diph	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DIPROPHEADER	diph;$/;"	m	struct:DIPROPCALPOV
diph	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DIPROPHEADER	diph;$/;"	m	struct:DIPROPDWORD
diph	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DIPROPHEADER	diph;$/;"	m	struct:DIPROPRANGE
diph	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DIPROPHEADER diph;$/;"	m	struct:DIPROPCAL
diph	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DIPROPHEADER diph;$/;"	m	struct:DIPROPGUIDANDPATH
diph	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DIPROPHEADER diph;$/;"	m	struct:DIPROPPOINTER
diph	thirdparty/glfw/src/deps/mingw/dinput.h	/^        DIPROPHEADER diph;$/;"	m	struct:DIPROPSTRING
diph	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DIPROPHEADER diph;$/;"	m	struct:DIPROPCPOINTS
dir	lib/lib/include/lib/directory.hpp	/^namespace dir {$/;"	n	namespace:LIB_NS_NAME
dir	thirdparty/imguizmo/src/ImGuizmo.cpp	/^            vec_t right, up, dir, position;$/;"	m	struct:ImGuizmo::matrix_t::__anon140::__anon141	file:
direction	lib/nil/include/nil/data/light.hpp	/^  float direction[3];$/;"	m	struct:Nil::Data::Light
direction	thirdparty/glfw/src/deps/nuklear.h	/^    float direction;$/;"	m	struct:nk_tt__active_edge
direction	thirdparty/stb/include/stb/stb_truetype.h	/^   float direction;$/;"	m	struct:stbtt__active_edge
direction	thirdparty/stb/include/stb/stb_truetype.h	/^   int direction;$/;"	m	struct:stbtt__active_edge
directionColor	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const ImU32 directionColor[3] = { 0xFF0000AA, 0xFF00AA00, 0xFFAA0000 };$/;"	m	namespace:ImGuizmo	file:
directionUnary	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const vec_t directionUnary[3] = { makeVect(1.f, 0.f, 0.f), makeVect(0.f, 1.f, 0.f), makeVect(0.f, 0.f, 1.f) };$/;"	m	namespace:ImGuizmo	file:
directory	lib/nil/src/interface/resource/directory.cpp	/^directory(const char *file)$/;"	f	namespace:Nil::Resource
disabled	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		bool		disabled;	\/\/ voice disabled$/;"	m	class:SIDsound::SIDVoice
disabled	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		bool		disabled;	\/\/ voice disabled$/;"	m	class:SIDsound::SIDVoice
disabledCursorWindow	thirdparty/glfw/src/cocoa_platform.h	/^    _GLFWwindow*        disabledCursorWindow;$/;"	m	struct:_GLFWlibraryNS
disabledCursorWindow	thirdparty/glfw/src/mir_platform.h	/^    _GLFWwindow* disabledCursorWindow;$/;"	m	struct:_GLFWlibraryMir
disabledCursorWindow	thirdparty/glfw/src/win32_platform.h	/^    _GLFWwindow*        disabledCursorWindow;$/;"	m	struct:_GLFWlibraryWin32
disabledCursorWindow	thirdparty/glfw/src/x11_platform.h	/^    _GLFWwindow*    disabledCursorWindow;$/;"	m	struct:_GLFWlibraryX11
disabledValidationCheckCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                 disabledValidationCheckCount;$/;"	m	struct:VkValidationFlagsEXT
discard_samples_deferred	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int discard_samples_deferred;$/;"	m	struct:stb_vorbis	file:
discard_samples_deferred	thirdparty/stb/include/stb/stb_vorbis.c	/^   int discard_samples_deferred;$/;"	m	struct:stb_vorbis	file:
discreteQueuePriorities	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              discreteQueuePriorities;$/;"	m	struct:VkPhysicalDeviceLimits
display	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDisplayKHR                  display;$/;"	m	struct:VkDisplayPropertiesKHR
display	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    struct wl_display*                display;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR	typeref:struct:VkWaylandSurfaceCreateInfoKHR::wl_display
display	thirdparty/glfw/src/egl_context.h	/^    EGLDisplay      display;$/;"	m	struct:_GLFWlibraryEGL
display	thirdparty/glfw/src/mir_platform.h	/^    MirEGLNativeDisplayType display;$/;"	m	struct:_GLFWlibraryMir
display	thirdparty/glfw/src/wl_platform.h	/^    struct wl_display*              display;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR	typeref:struct:VkWaylandSurfaceCreateInfoKHR::wl_display
display	thirdparty/glfw/src/wl_platform.h	/^    struct wl_display*          display;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::wl_display
display	thirdparty/glfw/src/x11_platform.h	/^    Display*        display;$/;"	m	struct:_GLFWlibraryX11
displayEvent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDisplayEventTypeEXT    displayEvent;$/;"	m	struct:VkDisplayEventInfoEXT
displayID	thirdparty/glfw/src/cocoa_platform.h	/^    CGDirectDisplayID   displayID;$/;"	m	struct:_GLFWmonitorNS
displayMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDisplayModeKHR                  displayMode;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
displayMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDisplayModeKHR              displayMode;$/;"	m	struct:VkDisplayModePropertiesKHR
displayName	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const char*                   displayName;$/;"	m	struct:VkDisplayPropertiesKHR
displayName	thirdparty/glfw/src/win32_platform.h	/^    WCHAR               displayName[32];$/;"	m	struct:_GLFWmonitorWin32
display_height	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw
display_width	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw
divisor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                          divisor;$/;"	m	struct:VkIndirectCommandsLayoutTokenNVX
dll_Pa_CloseStream	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^PaError dll_Pa_CloseStream( PaStream *stream )$/;"	f
dll_Pa_Initialize	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^PaError dll_Pa_Initialize( void )$/;"	f
dll_Pa_OpenDefaultStream	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^PaError dll_Pa_OpenDefaultStream( PaStream** stream,$/;"	f
dll_Pa_StartStream	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^PaError dll_Pa_StartStream( PaStream *stream )$/;"	f
dll_Pa_Terminate	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^PaError dll_Pa_Terminate( void )$/;"	f
dll_Pa_found	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^int dll_Pa_found()$/;"	f
dll_SDL_CloseAudio	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^void dll_SDL_CloseAudio()$/;"	f
dll_SDL_OpenAudio	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^int dll_SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpec *obtained)$/;"	f
dll_SDL_PauseAudio	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^void dll_SDL_PauseAudio(int pause_on)$/;"	f
dll_SDL_found	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^int dll_SDL_found()$/;"	f
dll_al_BufferData	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_BufferData(ALuint buffer, ALenum format, const ALvoid *data, ALsizei size, ALsizei freq) { alBufferData(buffer, format, data, size, freq); }$/;"	f
dll_al_BufferData	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_BufferData(ALuint buffer, ALenum format, const ALvoid *data, ALsizei size, ALsizei freq)$/;"	f
dll_al_DeleteBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_DeleteBuffers(ALsizei n, ALuint *buffers) { alDeleteBuffers(n, buffers); }$/;"	f
dll_al_DeleteBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_DeleteBuffers(ALsizei n, ALuint *buffers)$/;"	f
dll_al_DeleteSources	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_DeleteSources(ALsizei n, ALuint *sources) { alDeleteSources(n, sources); }$/;"	f
dll_al_DeleteSources	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_DeleteSources(ALsizei n, ALuint *sources)$/;"	f
dll_al_GenBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_GenBuffers(ALsizei n, ALuint *buffers) { alGenBuffers(n, buffers); }$/;"	f
dll_al_GenBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_GenBuffers(ALsizei n, ALuint *buffers)$/;"	f
dll_al_GenSources	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_GenSources(ALsizei n, ALuint *sources) { alGenSources(n, sources); }$/;"	f
dll_al_GenSources	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_GenSources(ALsizei n, ALuint *sources)$/;"	f
dll_al_GetSourcei	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_GetSourcei(ALuint source, ALenum param, ALint *value) { alGetSourcei(source, param, value); }$/;"	f
dll_al_GetSourcei	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_GetSourcei(ALuint source, ALenum param, ALint *value)$/;"	f
dll_al_SourcePlay	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_SourcePlay(ALuint source) { alSourcePlay(source); }$/;"	f
dll_al_SourcePlay	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_SourcePlay(ALuint source)$/;"	f
dll_al_SourceQueueBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_SourceQueueBuffers(ALuint source, ALsizei nb, const ALuint *buffers) { alSourceQueueBuffers(source, nb, buffers); }$/;"	f
dll_al_SourceQueueBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_SourceQueueBuffers(ALuint source, ALsizei nb, const ALuint *buffers)$/;"	f
dll_al_SourceStop	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_SourceStop(ALuint source) { alSourceStop(source); }$/;"	f
dll_al_SourceStop	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_SourceStop(ALuint source)$/;"	f
dll_al_SourceUnqueueBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_SourceUnqueueBuffers(ALuint source, ALsizei nb, ALuint *buffers) { alSourceUnqueueBuffers(source, nb, buffers); }$/;"	f
dll_al_SourceUnqueueBuffers	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_al_SourceUnqueueBuffers(ALuint source, ALsizei nb, ALuint *buffers)$/;"	f
dll_al_found	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^int dll_al_found() { return 1; }$/;"	f
dll_al_found	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^int dll_al_found()$/;"	f
dll_alc_CloseDevice	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_alc_CloseDevice(ALCdevice *device) { alcCloseDevice(device); }$/;"	f
dll_alc_CloseDevice	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_alc_CloseDevice(ALCdevice *device)$/;"	f
dll_alc_CreateContext	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^ALCcontext* dll_alc_CreateContext(ALCdevice *device, const ALCint* attrlist) { return alcCreateContext(device, attrlist); }$/;"	f
dll_alc_CreateContext	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^ALCcontext* dll_alc_CreateContext(ALCdevice *device, const ALCint* attrlist)$/;"	f
dll_alc_DestroyContext	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_alc_DestroyContext(ALCcontext *context) { return alcDestroyContext(context); }$/;"	f
dll_alc_DestroyContext	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^void dll_alc_DestroyContext(ALCcontext *context)$/;"	f
dll_alc_MakeContextCurrent	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^ALCboolean dll_alc_MakeContextCurrent(ALCcontext *context) { return alcMakeContextCurrent(context); }$/;"	f
dll_alc_MakeContextCurrent	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^ALCboolean dll_alc_MakeContextCurrent(ALCcontext *context)$/;"	f
dll_alc_OpenDevice	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^ALCdevice* dll_alc_OpenDevice(const ALCchar *devicename) { return alcOpenDevice(devicename); }$/;"	f
dll_alc_OpenDevice	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^ALCdevice* dll_alc_OpenDevice(const ALCchar *devicename)$/;"	f
dll_handle	thirdparty/remotery/src/Remotery.c	/^    void* dll_handle;$/;"	m	struct:OpenGL_t	file:
dll_openmpt_module_create_from_memory	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^typedef void * (*dll_openmpt_module_create_from_memory)(const void * filedata, size_t filesize, void *logfunc, void * user, void * ctls);$/;"	t	file:
dll_openmpt_module_destroy	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^typedef void (*dll_openmpt_module_destroy)(void * mod);$/;"	t	file:
dll_openmpt_module_read_float_stereo	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^typedef int (*dll_openmpt_module_read_float_stereo)(void * mod, int samplerate, size_t count, float * left, float * right);$/;"	t	file:
doEnvelopeGenerator	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^inline int SIDsound::doEnvelopeGenerator(unsigned int cycles, SIDVoice &v)$/;"	f	class:SIDsound
doEnvelopeGenerator	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^inline int SIDsound::doEnvelopeGenerator(unsigned int cycles, SIDVoice &v)$/;"	f	class:SIDsound
do_fft_10	thirdparty/soloud/src/core/soloud_fft.cpp	/^static void do_fft_10(float *f, const float *x)$/;"	f	file:
do_fft_8	thirdparty/soloud/src/core/soloud_fft.cpp	/^static void do_fft_8(float *f, const float *x)$/;"	f	file:
do_floor	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int do_floor(vorb *f, Mapping *map, int i, int n, float *target, YTYPE *finalY, uint8 *step2_flag)$/;"	f	file:
do_floor	thirdparty/stb/include/stb/stb_vorbis.c	/^static int do_floor(vorb *f, Mapping *map, int i, int n, float *target, YTYPE *finalY, uint8 *step2_flag)$/;"	f	file:
do_ifft_8	thirdparty/soloud/src/core/soloud_fft.cpp	/^static void do_ifft_8(float *f, float *x)$/;"	f	file:
dom	thirdparty/json/src/json.c	/^  char *dom;$/;"	m	struct:json_parse_state_s	file:
dom_size	thirdparty/json/src/json.c	/^  size_t dom_size;$/;"	m	struct:json_parse_state_s	file:
done	thirdparty/glfw/src/wl_monitor.c	/^static void done(void* data, struct wl_output* output)$/;"	f	file:
done	thirdparty/soloud/src/backend/vita_homebrew/soloud_vita_homebrew.cpp	/^		std::atomic<bool> done;$/;"	m	struct:SoLoud::VitaData	file:
doppler	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	float doppler(vec3 aDeltaPos, vec3 aSrcVel, vec3 aDstVel, float aFactor, float aSoundSpeed)$/;"	f	namespace:SoLoud
dot	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		float dot(vec3 a)$/;"	f	struct:SoLoud::vec3
doublebuffer	thirdparty/glfw/src/internal.h	/^    GLFWbool    doublebuffer;$/;"	m	struct:_GLFWfbconfig
down	thirdparty/glfw/src/deps/nuklear.h	/^    int down;$/;"	m	struct:nk_key
down	thirdparty/glfw/src/deps/nuklear.h	/^    int down;$/;"	m	struct:nk_mouse_button
dpy	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    Display*                       dpy;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
dpy	thirdparty/glfw/src/x11_platform.h	/^    Display*                    dpy;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
drawIndirectFirstInstance	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    drawIndirectFirstInstance;$/;"	m	struct:VkPhysicalDeviceFeatures
draw_begin	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle userdata);$/;"	m	struct:nk_style_button
draw_begin	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_progress
draw_begin	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_property
draw_begin	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_scrollbar
draw_begin	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_selectable
draw_begin	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_slider
draw_begin	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_toggle
draw_calls	lib/rov/src/rov_data.hpp	/^  lib::array<rovDrawCall> draw_calls;$/;"	m	struct:ROV_Internal::rovRenderPass
draw_calls	lib/rov/src/rov_data.hpp	/^  size_t draw_calls;$/;"	m	struct:ROV_Internal::rovMaterial
draw_end	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle userdata);$/;"	m	struct:nk_style_button
draw_end	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_progress
draw_end	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_property
draw_end	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_scrollbar
draw_end	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_selectable
draw_end	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_slider
draw_end	thirdparty/glfw/src/deps/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_toggle
draw_line	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static __forceinline void draw_line(float *output, int x0, int y0, int x1, int y1, int n)$/;"	f	file:
draw_line	thirdparty/stb/include/stb/stb_vorbis.c	/^static __forceinline void draw_line(float *output, int x0, int y0, int x1, int y1, int n)$/;"	f	file:
draw_list	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_draw_list draw_list;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_draw_list
drawchar	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^void drawchar(int aChar, int aX, int aY, int *aBitmap, int aBitmapWidth, int aColor)$/;"	f
drawstring	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^void drawstring(const char *aString, int aX, int aY, int *aBitmap, int aBitmapWidth, int aColor)$/;"	f
driverVersion	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                            driverVersion;$/;"	m	struct:VkPhysicalDeviceProperties
drop	thirdparty/glfw/src/internal.h	/^        GLFWdropfun             drop;$/;"	m	struct:_GLFWwindow::__anon162
dropped	thirdparty/glfw/src/linux_joystick.h	/^    GLFWbool                dropped;$/;"	m	struct:_GLFWlibraryLinux
dstAccessMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAccessFlags              dstAccessMask;$/;"	m	struct:VkImageMemoryBarrier
dstAccessMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAccessFlags           dstAccessMask;$/;"	m	struct:VkSubpassDependency
dstAccessMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAccessFlags      dstAccessMask;$/;"	m	struct:VkBufferMemoryBarrier
dstAccessMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAccessFlags      dstAccessMask;$/;"	m	struct:VkMemoryBarrier
dstAlphaBlendFactor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBlendFactor            dstAlphaBlendFactor;$/;"	m	struct:VkPipelineColorBlendAttachmentState
dstArrayElement	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         dstArrayElement;$/;"	m	struct:VkWriteDescriptorSet
dstArrayElement	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           dstArrayElement;$/;"	m	struct:VkCopyDescriptorSet
dstBinding	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         dstBinding;$/;"	m	struct:VkWriteDescriptorSet
dstBinding	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           dstBinding;$/;"	m	struct:VkCopyDescriptorSet
dstColorBlendFactor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBlendFactor            dstColorBlendFactor;$/;"	m	struct:VkPipelineColorBlendAttachmentState
dstOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize    dstOffset;$/;"	m	struct:VkBufferCopy
dstOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkOffset3D                  dstOffset;$/;"	m	struct:VkImageCopy
dstOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkOffset3D                  dstOffset;$/;"	m	struct:VkImageResolve
dstOffsets	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkOffset3D                  dstOffsets[2];$/;"	m	struct:VkImageBlit
dstQueueFamilyIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                   dstQueueFamilyIndex;$/;"	m	struct:VkImageMemoryBarrier
dstQueueFamilyIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           dstQueueFamilyIndex;$/;"	m	struct:VkBufferMemoryBarrier
dstRect	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkRect2D           dstRect;$/;"	m	struct:VkDisplayPresentInfoKHR
dstSet	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDescriptorSet                  dstSet;$/;"	m	struct:VkWriteDescriptorSet
dstSet	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDescriptorSet    dstSet;$/;"	m	struct:VkCopyDescriptorSet
dstStageMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineStageFlags    dstStageMask;$/;"	m	struct:VkSubpassDependency
dstSubpass	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                dstSubpass;$/;"	m	struct:VkSubpassDependency
dstSubresource	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageSubresourceLayers    dstSubresource;$/;"	m	struct:VkImageBlit
dstSubresource	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageSubresourceLayers    dstSubresource;$/;"	m	struct:VkImageCopy
dstSubresource	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageSubresourceLayers    dstSubresource;$/;"	m	struct:VkImageResolve
dualSrcBlend	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    dualSrcBlend;$/;"	m	struct:VkPhysicalDeviceFeatures
dummy_texture	lib/rov/src/ogl/rov_gl.hpp	/^  GLuint dummy_texture;$/;"	m	struct:ROV_Internal::rovGLData
dump	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::dump(void *img)$/;"	f	class:TED
dumpLength	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	unsigned int dumpLength;$/;"	m	class:CbmTune
dumpMem	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void dumpMem(std::string name)$/;"	f
dwAccess	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    DWORD                         dwAccess;$/;"	m	struct:VkExportMemoryWin32HandleInfoNV
dwActionSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwActionSize;$/;"	m	struct:_DIACTIONFORMATA
dwActionSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwActionSize;$/;"	m	struct:_DIACTIONFORMATW
dwAttackLevel	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwAttackLevel;$/;"	m	struct:DIENVELOPE
dwAttackTime	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwAttackTime;$/;"	m	struct:DIENVELOPE
dwAxes	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwAxes;$/;"	m	struct:DIDEVCAPS
dwAxes	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwAxes;$/;"	m	struct:DIDEVCAPS_DX3
dwBufferSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwBufferSize;$/;"	m	struct:_DIACTIONFORMATA
dwBufferSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwBufferSize;$/;"	m	struct:_DIACTIONFORMATW
dwBufferSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwBufferSize;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA
dwBufferSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwBufferSize;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW
dwBufferUsed	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwBufferUsed;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA
dwBufferUsed	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwBufferUsed;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW
dwButtons	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwButtons;$/;"	m	struct:DIDEVCAPS
dwButtons	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwButtons;$/;"	m	struct:DIDEVCAPS_DX3
dwCPointsNum	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwCPointsNum;$/;"	m	struct:DIPROPCPOINTS
dwCRC	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwCRC;$/;"	m	struct:_DIACTIONFORMATA
dwCRC	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwCRC;$/;"	m	struct:_DIACTIONFORMATW
dwCommand	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwCommand;$/;"	m	struct:DIEFFESCAPE
dwData	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwData;$/;"	m	struct:DIPROPDWORD
dwData	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwData;$/;"	m	struct:DIDEVICEOBJECTDATA
dwData	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwData;$/;"	m	struct:DIDEVICEOBJECTDATA_DX3
dwDataSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwDataSize;$/;"	m	struct:_DIACTIONFORMATA
dwDataSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwDataSize;$/;"	m	struct:_DIACTIONFORMATW
dwDataSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD			dwDataSize;$/;"	m	struct:_DIDATAFORMAT
dwDevType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwDevType;$/;"	m	struct:DIDEVCAPS
dwDevType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwDevType;$/;"	m	struct:DIDEVCAPS_DX3
dwDevType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwDevType;$/;"	m	struct:DIDEVICEINSTANCEA
dwDevType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwDevType;$/;"	m	struct:DIDEVICEINSTANCEW
dwDevType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD   dwDevType;$/;"	m	struct:DIDEVICEINSTANCE_DX3A
dwDevType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD   dwDevType;$/;"	m	struct:DIDEVICEINSTANCE_DX3W
dwDimension	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwDimension;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
dwDimension	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwDimension;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
dwDuration	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwDuration;$/;"	m	struct:DIEFFECT
dwDuration	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwDuration;$/;"	m	struct:DIEFFECT_DX5
dwDynamicParams	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwDynamicParams;$/;"	m	struct:DIEFFECTINFOA
dwDynamicParams	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwDynamicParams;$/;"	m	struct:DIEFFECTINFOW
dwEffType	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwEffType;$/;"	m	struct:DIEFFECTINFOA
dwEffType	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwEffType;$/;"	m	struct:DIEFFECTINFOW
dwFFDriverVersion	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwFFDriverVersion;$/;"	m	struct:DIDEVCAPS
dwFFForceResolution	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwFFForceResolution;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
dwFFForceResolution	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwFFForceResolution;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
dwFFMaxForce	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwFFMaxForce;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
dwFFMaxForce	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwFFMaxForce;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
dwFFMinTimeResolution	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwFFMinTimeResolution;$/;"	m	struct:DIDEVCAPS
dwFFSamplePeriod	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwFFSamplePeriod;$/;"	m	struct:DIDEVCAPS
dwFadeLevel	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwFadeLevel;$/;"	m	struct:DIENVELOPE
dwFadeTime	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwFadeTime;$/;"	m	struct:DIENVELOPE
dwFirmwareRevision	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwFirmwareRevision;$/;"	m	struct:DIDEVCAPS
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwFlags;$/;"	m	struct:DIEFFECT
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwFlags;$/;"	m	struct:DIEFFECT_DX5
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwFlags;$/;"	m	struct:_DIACTIONA
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwFlags;$/;"	m	struct:_DIACTIONW
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwFlags;$/;"	m	struct:_DIDEVICEIMAGEINFOA
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwFlags;$/;"	m	struct:_DIDEVICEIMAGEINFOW
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD			dwFlags;$/;"	m	struct:_DIDATAFORMAT
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwFlags;$/;"	m	struct:DIDEVCAPS
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwFlags;$/;"	m	struct:DIDEVCAPS_DX3
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwFlags;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwFlags;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwFlags;$/;"	m	struct:_DIOBJECTDATAFORMAT
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD   dwFlags;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3A
dwFlags	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD   dwFlags;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3W
dwFlags	thirdparty/remotery/src/Remotery.c	/^       DWORD dwFlags; \/\/ Reserved for future use, must be zero.$/;"	m	struct:tagTHREADNAME_INFO	file:
dwGain	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwGain;$/;"	m	struct:DIEFFECT
dwGain	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwGain;$/;"	m	struct:DIEFFECT_DX5
dwGenre	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwGenre;$/;"	m	struct:_DIACTIONFORMATA
dwGenre	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwGenre;$/;"	m	struct:_DIACTIONFORMATW
dwHardwareRevision	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwHardwareRevision;$/;"	m	struct:DIDEVCAPS
dwHeaderSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwHeaderSize;$/;"	m	struct:DIPROPHEADER
dwHow	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwHow;$/;"	m	struct:_DIACTIONA
dwHow	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwHow;$/;"	m	struct:_DIACTIONW
dwHow	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwHow;$/;"	m	struct:DIPROPHEADER
dwLog	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwLog;$/;"	m	struct:_CPOINT
dwMagnitude	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwMagnitude;$/;"	m	struct:DIPERIODIC
dwNegativeSaturation	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwNegativeSaturation;$/;"	m	struct:DICONDITION
dwNumActions	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwNumActions;$/;"	m	struct:_DIACTIONFORMATA
dwNumActions	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwNumActions;$/;"	m	struct:_DIACTIONFORMATW
dwNumObjs	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD			dwNumObjs;$/;"	m	struct:_DIDATAFORMAT
dwObj	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwObj;$/;"	m	struct:DIPROPHEADER
dwObjID	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwObjID;$/;"	m	struct:_DIACTIONA
dwObjID	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwObjID;$/;"	m	struct:_DIACTIONW
dwObjID	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwObjID;$/;"	m	struct:_DIDEVICEIMAGEINFOA
dwObjID	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwObjID;$/;"	m	struct:_DIDEVICEIMAGEINFOW
dwObjSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD			dwObjSize;$/;"	m	struct:_DIDATAFORMAT
dwOfs	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwOfs;$/;"	m	struct:DIDEVICEOBJECTDATA
dwOfs	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwOfs;$/;"	m	struct:DIDEVICEOBJECTDATA_DX3
dwOfs	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwOfs;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
dwOfs	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwOfs;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
dwOfs	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwOfs;$/;"	m	struct:_DIOBJECTDATAFORMAT
dwOfs	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD   dwOfs;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3A
dwOfs	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD   dwOfs;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3W
dwPOVs	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwPOVs;$/;"	m	struct:DIDEVCAPS
dwPOVs	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwPOVs;$/;"	m	struct:DIDEVCAPS_DX3
dwPacketNumber	thirdparty/glfw/src/deps/mingw/xinput.h	/^    DWORD dwPacketNumber;$/;"	m	struct:_XINPUT_STATE
dwPeriod	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwPeriod;$/;"	m	struct:DIPERIODIC
dwPhase	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwPhase;$/;"	m	struct:DIPERIODIC
dwPositiveSaturation	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwPositiveSaturation;$/;"	m	struct:DICONDITION
dwSamplePeriod	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwSamplePeriod;$/;"	m	struct:DICUSTOMFORCE
dwSamplePeriod	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwSamplePeriod;$/;"	m	struct:DIEFFECT
dwSamplePeriod	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwSamplePeriod;$/;"	m	struct:DIEFFECT_DX5
dwSemantic	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwSemantic;$/;"	m	struct:_DIACTIONA
dwSemantic	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwSemantic;$/;"	m	struct:_DIACTIONW
dwSequence	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwSequence;$/;"	m	struct:DIDEVICEOBJECTDATA
dwSequence	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwSequence;$/;"	m	struct:DIDEVICEOBJECTDATA_DX3
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:DIEFFECT
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:DIEFFECTINFOA
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:DIEFFECTINFOW
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:DIEFFECT_DX5
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:DIENVELOPE
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwSize;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwSize;$/;"	m	struct:_DIACTIONFORMATA
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwSize;$/;"	m	struct:_DIACTIONFORMATW
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD		dwSize;$/;"	m	struct:_DICOLORSET
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwSize;$/;"	m	struct:DIEFFESCAPE
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwSize;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwSize;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD			dwSize;$/;"	m	struct:_DIDATAFORMAT
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIDEVCAPS
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIDEVCAPS_DX3
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIDEVICEINSTANCEA
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIDEVICEINSTANCEW
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwSize;$/;"	m	struct:DIPROPHEADER
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD   dwSize;$/;"	m	struct:DIDEVICEINSTANCE_DX3A
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD   dwSize;$/;"	m	struct:DIDEVICEINSTANCE_DX3W
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD   dwSize;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3A
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD   dwSize;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3W
dwSize	thirdparty/glfw/src/deps/mingw/dinput.h	/^  DWORD       dwSize;$/;"	m	struct:DIFILEEFFECT
dwSizeImageInfo	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwSizeImageInfo;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA
dwSizeImageInfo	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwSizeImageInfo;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW
dwStartDelay	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwStartDelay;$/;"	m	struct:DIEFFECT
dwStaticParams	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwStaticParams;$/;"	m	struct:DIEFFECTINFOA
dwStaticParams	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwStaticParams;$/;"	m	struct:DIEFFECTINFOW
dwTextAlign	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwTextAlign;$/;"	m	struct:_DIDEVICEIMAGEINFOA
dwTextAlign	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwTextAlign;$/;"	m	struct:_DIDEVICEIMAGEINFOW
dwThreadID	thirdparty/remotery/src/Remotery.c	/^       DWORD dwThreadID; \/\/ Thread ID (-1=caller thread).$/;"	m	struct:tagTHREADNAME_INFO	file:
dwTimeStamp	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwTimeStamp;$/;"	m	struct:DIDEVICEOBJECTDATA
dwTimeStamp	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwTimeStamp;$/;"	m	struct:DIDEVICEOBJECTDATA_DX3
dwTriggerButton	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwTriggerButton;$/;"	m	struct:DIEFFECT
dwTriggerButton	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwTriggerButton;$/;"	m	struct:DIEFFECT_DX5
dwTriggerRepeatInterval	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwTriggerRepeatInterval;$/;"	m	struct:DIEFFECT
dwTriggerRepeatInterval	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwTriggerRepeatInterval;$/;"	m	struct:DIEFFECT_DX5
dwType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwType;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
dwType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwType;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
dwType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD	dwType;$/;"	m	struct:_DIOBJECTDATAFORMAT
dwType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD   dwType;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3A
dwType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    DWORD   dwType;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3W
dwType	thirdparty/remotery/src/Remotery.c	/^       DWORD dwType; \/\/ Must be 0x1000.$/;"	m	struct:tagTHREADNAME_INFO	file:
dwViewID	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwViewID;$/;"	m	struct:_DIDEVICEIMAGEINFOA
dwViewID	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwViewID;$/;"	m	struct:_DIDEVICEIMAGEINFOW
dwcAxes	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwcAxes;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA
dwcAxes	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwcAxes;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW
dwcButtons	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwcButtons;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA
dwcButtons	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwcButtons;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW
dwcFormats	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwcFormats;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA
dwcFormats	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwcFormats;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW
dwcPOVs	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwcPOVs;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA
dwcPOVs	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwcPOVs;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW
dwcUsers	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwcUsers;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA
dwcUsers	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD			dwcUsers;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW
dwcValidPts	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwcValidPts;$/;"	m	struct:_DIDEVICEIMAGEINFOA
dwcValidPts	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwcValidPts;$/;"	m	struct:_DIDEVICEIMAGEINFOW
dwcViews	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwcViews;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA
dwcViews	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	dwcViews;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW
dwmapi	thirdparty/glfw/src/win32_platform.h	/^    } dwmapi;$/;"	m	struct:_GLFWlibraryWin32	typeref:struct:_GLFWlibraryWin32::__anon157
dx	thirdparty/stb/include/stb/stb_truetype.h	/^   int x,dx;$/;"	m	struct:stbtt__active_edge
dynamicCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                          dynamicCount;$/;"	m	struct:VkIndirectCommandsLayoutTokenNVX
dynamicStateCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                             dynamicStateCount;$/;"	m	struct:VkPipelineDynamicStateCreateInfo
e	thirdparty/imgui/include/imgui/imgui.h	/^        const char* e;$/;"	m	struct:ImGuiTextFilter::TextRange
early_think	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^early_think(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
early_think_task_count	lib/nil/src/internal_data/internal_data.hpp	/^  size_t                early_think_task_count;$/;"	m	struct:Nil_ctx
early_think_tasks	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_cpu_task          early_think_tasks[NIL_MAX_CPU_TASK_QUEUE];$/;"	m	struct:Nil_ctx
ec_text	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^inline void TED::ec_text()$/;"	f	class:TED
ecmode	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	int		rvsmode, grmode, ecmode;$/;"	m	class:TED
ecol	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char hcol[2], mcol[4], ecol[4], bmmcol[4], *cset;$/;"	m	class:TED
edge_horizontal	thirdparty/stb/include/stb/stb_image_resize.h	/^    stbir_edge edge_horizontal;$/;"	m	struct:__anon72
edge_vertical	thirdparty/stb/include/stb/stb_image_resize.h	/^    stbir_edge edge_vertical;$/;"	m	struct:__anon72
edit	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_edit_state edit;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_edit_state
edit	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_edit edit;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_edit
edit	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_edit edit;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_edit
eflags	thirdparty/stb/include/stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon92
egState	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		int egState;			\/\/ state of the EG$/;"	m	class:SIDsound::SIDVoice
egState	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		int egState;			\/\/ state of the EG$/;"	m	class:SIDsound::SIDVoice
eglBindAPI	thirdparty/glfw/src/egl_context.h	145;"	d
eglCreateContext	thirdparty/glfw/src/egl_context.h	146;"	d
eglCreateWindowSurface	thirdparty/glfw/src/egl_context.h	149;"	d
eglDestroyContext	thirdparty/glfw/src/egl_context.h	148;"	d
eglDestroySurface	thirdparty/glfw/src/egl_context.h	147;"	d
eglGetConfigAttrib	thirdparty/glfw/src/egl_context.h	139;"	d
eglGetConfigs	thirdparty/glfw/src/egl_context.h	140;"	d
eglGetDisplay	thirdparty/glfw/src/egl_context.h	141;"	d
eglGetError	thirdparty/glfw/src/egl_context.h	142;"	d
eglGetProcAddress	thirdparty/glfw/src/egl_context.h	154;"	d
eglInitialize	thirdparty/glfw/src/egl_context.h	143;"	d
eglMakeCurrent	thirdparty/glfw/src/egl_context.h	150;"	d
eglQueryString	thirdparty/glfw/src/egl_context.h	153;"	d
eglSwapBuffers	thirdparty/glfw/src/egl_context.h	151;"	d
eglSwapInterval	thirdparty/glfw/src/egl_context.h	152;"	d
eglTerminate	thirdparty/glfw/src/egl_context.h	144;"	d
elem_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int elem_count;$/;"	m	struct:nk_draw_command
element_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int element_count;$/;"	m	struct:nk_draw_list
elements	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_buffer *elements;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_buffer
emit_cppend	thirdparty/soloud/src/tools/codegen/main.cpp	/^void emit_cppend(FILE * f)$/;"	f
emit_cppstart	thirdparty/soloud/src/tools/codegen/main.cpp	/^void emit_cppstart(FILE * f)$/;"	f
emit_ctor	thirdparty/soloud/src/tools/codegen/main.cpp	/^void emit_ctor(FILE * f, const char * cl)$/;"	f
emit_dtor	thirdparty/soloud/src/tools/codegen/main.cpp	/^void emit_dtor(FILE * f, const char * cl)$/;"	f
emit_func	thirdparty/soloud/src/tools/codegen/main.cpp	/^void emit_func(FILE * f, int aClass, int aMethod)$/;"	f
emplace_back	lib/lib/include/lib/array.hpp	/^  emplace_back(Args&& ...args)$/;"	f	class:LIB_NS_NAME::array
emplace_back	lib/roa/include/roa/data.hpp	/^  emplace_back(const ROA::Object &obj, const T &data)$/;"	f	class:ROA::Data
empty	lib/lib/include/lib/array.hpp	/^  bool empty() const        { return (m_end == m_begin); }$/;"	f	class:LIB_NS_NAME::array
empty	lib/roa/src/interface/collection.cpp	/^Collection::empty() const$/;"	f	class:ROA::Collection
empty	thirdparty/imgui/include/imgui/imgui.h	/^        bool empty() const { return b == e; }$/;"	f	struct:ImGuiTextFilter::TextRange
empty	thirdparty/imgui/include/imgui/imgui.h	/^    bool                empty() { return Buf.Size <= 1; }$/;"	f	struct:ImGuiTextBuffer
empty	thirdparty/imgui/include/imgui/imgui.h	/^    inline bool                 empty() const                   { return Size == 0; }$/;"	f	class:ImVector
emptyEventQueue	thirdparty/glfw/src/mir_window.c	/^static GLFWbool emptyEventQueue(EventQueue* queue)$/;"	f	file:
enableChannel	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	/^void TED::enableChannel(unsigned int channel, bool enable)$/;"	f	class:TED
enableChannel	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::enableChannel(unsigned int channel, bool enable) $/;"	f	class:TED
enableDigiBlaster	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	bool enableDigiBlaster;$/;"	m	class:SIDsound
enableDigiBlaster	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	bool enableDigiBlaster;$/;"	m	class:SIDsound
enableDisableChannel	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	void enableDisableChannel(unsigned int ch, bool enabled) {$/;"	f	class:SIDsound
enableDisableChannel	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	void enableDisableChannel(unsigned int ch, bool enabled) {$/;"	f	class:SIDsound
enableSidCard	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::enableSidCard(bool enable, unsigned int disableMask)$/;"	f	class:TED
enabled	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^  			bool enabled;$/;"	m	struct:CPU::__anon195
enabledExtensionCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                           enabledExtensionCount;$/;"	m	struct:VkDeviceCreateInfo
enabledExtensionCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                    enabledExtensionCount;$/;"	m	struct:VkInstanceCreateInfo
enabledLayerCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                           enabledLayerCount;$/;"	m	struct:VkDeviceCreateInfo
enabledLayerCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                    enabledLayerCount;$/;"	m	struct:VkInstanceCreateInfo
encodeUTF8	thirdparty/glfw/src/x11_window.c	/^static size_t encodeUTF8(char* s, unsigned int ch)$/;"	f	file:
encode_buffer	thirdparty/stb/include/stb/stb_image_resize.h	/^    float* encode_buffer; \/\/ A temporary buffer to store floats so we don't lose precision while we do multiply-adds.$/;"	m	struct:__anon72
encode_buffer_size	thirdparty/stb/include/stb/stb_image_resize.h	/^    int encode_buffer_size;$/;"	m	struct:__anon72
encoding_table	lib/nil/src/asset_loading/load_gltf.cpp	/^static char encoding_table[] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',$/;"	m	namespace:__anon41	file:
end	app/perils/src/game/dynamic_object.hpp	/^  lib::milliseconds end = 0.f;$/;"	m	struct:Dynamic_object::Data
end	lib/lib/include/lib/array.hpp	/^  T const* end() const { return m_end; }$/;"	f	class:LIB_NS_NAME::array
end	lib/lib/include/lib/array.hpp	/^  T* end()             { return m_end; }$/;"	f	class:LIB_NS_NAME::array
end	lib/math/include/math/geometry/geometry_types.hpp	/^  MATH_NS_NAME::vec3 end;$/;"	m	struct:ray
end	lib/roa/src/interface/collection.cpp	/^Collection::end() const$/;"	f	class:ROA::Collection
end	lib/roa/src/interface/collection.cpp	/^Collection::end()$/;"	f	class:ROA::Collection
end	lib/rov/src/rov_data.hpp	/^  rovVec3 end;$/;"	m	struct:ROV_Internal::rovLineDrawCall
end	thirdparty/glfw/src/deps/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view
end	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer
end	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size end;$/;"	m	struct:nk_popup_buffer
end	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i end;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_vec2i
end	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i end;$/;"	m	struct:nk_command_line	typeref:struct:nk_command_line::nk_vec2i
end	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_window *end;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_window
end	thirdparty/imgui/include/imgui/imgui.h	/^        const char* end() const { return e; }$/;"	f	struct:ImGuiTextFilter::TextRange
end	thirdparty/imgui/include/imgui/imgui.h	/^    const char*         end() const { return &Buf.back(); }      \/\/ Buf is zero-terminated, so end() will point on the zero-terminator$/;"	f	struct:ImGuiTextBuffer
end	thirdparty/imgui/include/imgui/imgui.h	/^    inline const_iterator       end() const                     { return Data + Size; }$/;"	f	class:ImVector
end	thirdparty/imgui/include/imgui/imgui.h	/^    inline iterator             end()                           { return Data + Size; }$/;"	f	class:ImVector
end	thirdparty/remotery/src/Remotery.c	/^    rmtU64 end;$/;"	m	struct:MetalTimestamp	file:
end	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 begin, end;$/;"	m	struct:__anon207	file:
end	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 begin, end;$/;"	m	struct:__anon120	file:
end_seg_with_known_loc	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int end_seg_with_known_loc;$/;"	m	struct:stb_vorbis	file:
end_seg_with_known_loc	thirdparty/stb/include/stb/stb_vorbis.c	/^   int end_seg_with_known_loc;$/;"	m	struct:stb_vorbis	file:
endptr	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *scrptr, *endptr, *ramptr;$/;"	m	class:TED
engineVersion	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           engineVersion;$/;"	m	struct:VkApplicationInfo
enqueueEvent	thirdparty/glfw/src/mir_window.c	/^static void enqueueEvent(const MirEvent* event, _GLFWwindow* context)$/;"	f	file:
entity	app/perils/src/game/dynamic_object.hpp	/^  ROA::Object entity = ROA::Object(nullptr);$/;"	m	struct:Dynamic_object::Data
entity	lib/lib/include/lib/entity.hpp	/^namespace entity {$/;"	n	namespace:LIB_NS_NAME
entries	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int dimensions, entries;$/;"	m	struct:__anon203	file:
entries	thirdparty/stb/include/stb/stb_vorbis.c	/^   int dimensions, entries;$/;"	m	struct:__anon116	file:
envAttackAdd	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int envAttackAdd;$/;"	m	class:SIDsound::SIDVoice
envAttackAdd	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int envAttackAdd;$/;"	m	class:SIDsound::SIDVoice
envCounter	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int envCounter;$/;"	m	class:SIDsound::SIDVoice
envCounter	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int envCounter;$/;"	m	class:SIDsound::SIDVoice
envCounterCompare	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int envCounterCompare;$/;"	m	class:SIDsound::SIDVoice
envCounterCompare	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int envCounterCompare;$/;"	m	class:SIDsound::SIDVoice
envCurrLevel	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int envCurrLevel;$/;"	m	class:SIDsound::SIDVoice
envCurrLevel	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int envCurrLevel;$/;"	m	class:SIDsound::SIDVoice
envDecaySub	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int envDecaySub;$/;"	m	class:SIDsound::SIDVoice
envDecaySub	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int envDecaySub;$/;"	m	class:SIDsound::SIDVoice
envExpCounter	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int envExpCounter;$/;"	m	class:SIDsound::SIDVoice
envExpCounter	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int envExpCounter;$/;"	m	class:SIDsound::SIDVoice
envGenDRdivisors	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^const unsigned char SIDsound::envGenDRdivisors[256] = {$/;"	m	class:SIDsound	file:
envGenDRdivisors	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	static const unsigned char envGenDRdivisors[256]; \/\/ For exponential approximation of D\/R$/;"	m	class:SIDsound
envGenDRdivisors	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^const unsigned char SIDsound::envGenDRdivisors[256] = {$/;"	m	class:SIDsound	file:
envGenDRdivisors	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	static const unsigned char envGenDRdivisors[256]; \/\/ For exponential approximation of D\/R$/;"	m	class:SIDsound
envReleaseSub	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int envReleaseSub;$/;"	m	class:SIDsound::SIDVoice
envReleaseSub	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int envReleaseSub;$/;"	m	class:SIDsound::SIDVoice
envSustainLevel	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int envSustainLevel;$/;"	m	class:SIDsound::SIDVoice
envSustainLevel	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int envSustainLevel;$/;"	m	class:SIDsound::SIDVoice
env_length	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		int env_length[3];$/;"	m	class:SoLoud::SfxrInstance
env_stage	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		int env_stage;$/;"	m	class:SoLoud::SfxrInstance
env_time	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		int env_time;$/;"	m	class:SoLoud::SfxrInstance
env_vol	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float env_vol;$/;"	m	class:SoLoud::SfxrInstance
eob_run	thirdparty/stb/include/stb/stb_image.h	/^   int            eob_run;$/;"	m	struct:__anon81
eof	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int eof;$/;"	m	struct:stb_vorbis	file:
eof	thirdparty/soloud/src/core/soloud_file.cpp	/^	int DiskFile::eof()$/;"	f	class:SoLoud::DiskFile
eof	thirdparty/soloud/src/core/soloud_file.cpp	/^	int MemoryFile::eof()$/;"	f	class:SoLoud::MemoryFile
eof	thirdparty/stb/include/stb/stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end of file\/data$/;"	m	struct:__anon75
eof	thirdparty/stb/include/stb/stb_vorbis.c	/^   int eof;$/;"	m	struct:stb_vorbis	file:
epsilon	lib/math/include/math/general/constants.hpp	/^MATH_CONST_CONSTEXPR float           epsilon()     { return 0.000000001f;    }$/;"	f
equal	thirdparty/stb/include/stb/stb_truetype.h	/^static int equal(float *a, float *b)$/;"	f
erase	lib/lib/include/lib/array.hpp	/^  erase(const size_t i)$/;"	f	class:LIB_NS_NAME::array
erase	lib/lib/include/lib/array.hpp	/^  erase(const size_t start, const size_t count)$/;"	f	class:LIB_NS_NAME::array
erase	thirdparty/imgui/include/imgui/imgui.h	/^    inline iterator             erase(const_iterator it)        { IM_ASSERT(it >= Data && it < Data+Size); const ptrdiff_t off = it - Data; memmove(Data + off, Data + off + 1, ((size_t)Size - (size_t)off - 1) * sizeof(value_type)); Size--; return Data + off; }$/;"	f	class:ImVector
errno_t	thirdparty/remotery/src/Remotery.c	/^typedef int errno_t;$/;"	t	file:
error	thirdparty/json/include/json/json.h	/^  size_t error;$/;"	m	struct:json_parse_result_s
error	thirdparty/json/src/json.c	/^  size_t error;$/;"	m	struct:json_parse_state_s	file:
error	thirdparty/remotery/src/Remotery.c	/^    rmtError error;$/;"	m	struct:Thread_t	file:
error	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   enum STBVorbisError error;$/;"	m	struct:stb_vorbis	typeref:enum:stb_vorbis::STBVorbisError	file:
error	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int error(vorb *f, enum STBVorbisError e)$/;"	f	file:
error	thirdparty/stb/include/stb/stb_vorbis.c	/^   enum STBVorbisError error;$/;"	m	struct:stb_vorbis	typeref:enum:stb_vorbis::STBVorbisError	file:
error	thirdparty/stb/include/stb/stb_vorbis.c	/^static int error(vorb *f, enum STBVorbisError e)$/;"	f	file:
errorBase	thirdparty/glfw/src/glx_context.h	/^    int             errorBase;$/;"	m	struct:_GLFWlibraryGLX
errorBase	thirdparty/glfw/src/x11_platform.h	/^        int         errorBase;$/;"	m	struct:_GLFWlibraryX11::__anon145
errorBase	thirdparty/glfw/src/x11_platform.h	/^        int         errorBase;$/;"	m	struct:_GLFWlibraryX11::__anon146
errorBase	thirdparty/glfw/src/x11_platform.h	/^        int         errorBase;$/;"	m	struct:_GLFWlibraryX11::__anon151
errorBase	thirdparty/glfw/src/x11_platform.h	/^        int         errorBase;$/;"	m	struct:_GLFWlibraryX11::__anon152
errorCode	thirdparty/glfw/src/x11_platform.h	/^    int             errorCode;$/;"	m	struct:_GLFWlibraryX11
errorHandler	thirdparty/glfw/src/x11_init.c	/^static int errorHandler(Display *display, XErrorEvent* event)$/;"	f	file:
errorListHead	thirdparty/glfw/src/internal.h	/^    _GLFWerror*         errorListHead;$/;"	m	struct:_GLFWlibrary
errorLock	thirdparty/glfw/src/internal.h	/^    _GLFWmutex          errorLock;$/;"	m	struct:_GLFWlibrary
errorSlot	thirdparty/glfw/src/internal.h	/^    _GLFWtls            errorSlot;$/;"	m	struct:_GLFWlibrary
error_line_no	thirdparty/json/include/json/json.h	/^  size_t error_line_no;$/;"	m	struct:json_parse_result_s
error_offset	thirdparty/json/include/json/json.h	/^  size_t error_offset;$/;"	m	struct:json_parse_result_s
error_row_no	thirdparty/json/include/json/json.h	/^  size_t error_row_no;$/;"	m	struct:json_parse_result_s
error_state	thirdparty/remotery/src/Remotery.c	/^    rmtError error_state;$/;"	m	struct:__anon61	file:
evaluate	thirdparty/catch/include/catch/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	thirdparty/catch/include/catch/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
event	thirdparty/glfw/src/mir_window.c	/^    const MirEvent*        event;$/;"	m	struct:EventNode	file:
eventBase	thirdparty/glfw/src/glx_context.h	/^    int             eventBase;$/;"	m	struct:_GLFWlibraryGLX
eventBase	thirdparty/glfw/src/x11_platform.h	/^        int         eventBase;$/;"	m	struct:_GLFWlibraryX11::__anon145
eventBase	thirdparty/glfw/src/x11_platform.h	/^        int         eventBase;$/;"	m	struct:_GLFWlibraryX11::__anon146
eventBase	thirdparty/glfw/src/x11_platform.h	/^        int         eventBase;$/;"	m	struct:_GLFWlibraryX11::__anon151
eventBase	thirdparty/glfw/src/x11_platform.h	/^        int         eventBase;$/;"	m	struct:_GLFWlibraryX11::__anon152
eventCond	thirdparty/glfw/src/mir_platform.h	/^    pthread_cond_t  eventCond;$/;"	m	struct:_GLFWlibraryMir
eventMutex	thirdparty/glfw/src/mir_platform.h	/^    pthread_mutex_t eventMutex;$/;"	m	struct:_GLFWlibraryMir
eventQueue	thirdparty/glfw/src/mir_platform.h	/^    EventQueue* eventQueue;$/;"	m	struct:_GLFWlibraryMir
eventSource	thirdparty/glfw/src/cocoa_platform.h	/^    CGEventSourceRef    eventSource;$/;"	m	struct:_GLFWlibraryNS
event_end	thirdparty/remotery/src/Remotery.c	/^    CUevent event_end;$/;"	m	struct:CUDASample	file:
event_start	thirdparty/remotery/src/Remotery.c	/^    CUevent event_start;$/;"	m	struct:CUDASample	file:
events	lib/nil/src/interface/data/audio.cpp	/^events(const uint32_t event, size_t *count, Audio **out_data, Node **out_node)$/;"	f	namespace:Nil::Data
events	lib/nil/src/interface/data/bounding_box.cpp	/^events(const uint32_t data, size_t *count, Bounding_box_data **out_data, Node **out_node)$/;"	f	namespace:Nil::Data
events	lib/nil/src/interface/data/camera.cpp	/^events(const uint32_t event, size_t *count, Camera **out_data, Node **out_node)$/;"	f	namespace:Nil::Data
events	lib/nil/src/interface/data/common.hpp	/^  events(const uint32_t event, size_t *count, T **out_data, Nil::Node **out_node)$/;"	f	struct:Nil::Data::Generic_data
events	lib/nil/src/interface/data/developer.cpp	/^events(const uint32_t event, size_t *count, Developer **out_data, Node **out_node)$/;"	f	namespace:Nil::Data
events	lib/nil/src/interface/data/gamepad.cpp	/^events(const uint32_t event, size_t *count, Gamepad **out_data, Node **out_node)$/;"	f	namespace:Nil::Data
events	lib/nil/src/interface/data/keyboard.cpp	/^events(const uint32_t event, size_t *count, Keyboard **out_data, Node **out_node)$/;"	f	namespace:Nil::Data
events	lib/nil/src/interface/data/light.cpp	/^events(const uint32_t event, size_t *count, Light **out_data, Node **out_node)$/;"	f	namespace:Nil::Data
events	lib/nil/src/interface/data/logic.cpp	/^events(const uint32_t event, size_t *count, Logic **out_data, Node **out_node)$/;"	f	namespace:Nil::Data
events	lib/nil/src/interface/data/mouse.cpp	/^events(const uint32_t event, size_t *count, Mouse **out_data, Node **out_node)$/;"	f	namespace:Nil::Data
events	lib/nil/src/interface/data/renderable.cpp	/^events(const uint32_t event, size_t *count, Renderable **out_data, Node **out_node)$/;"	f	namespace:Nil::Data
events	lib/nil/src/interface/data/renderable_text.cpp	/^events(const uint32_t event, size_t *count, Renderable_text **out_data, Node **out_node)$/;"	f	namespace:Nil::Data
events	lib/nil/src/interface/data/transform.cpp	/^events(const uint32_t data, size_t *count, Transform **out_data, Node **out_node)$/;"	f	namespace:Nil::Data
events	lib/nil/src/interface/data/window.cpp	/^events(const uint32_t event, size_t *count, Window **out_data, Node **out_node)$/;"	f	namespace:Nil::Data
events	lib/nil_aspects/src/imgui/imgui_aspect.cpp	/^events(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ImGui_Aspect
events	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^events(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
events	lib/nil_aspects/src/roa_aspect.cpp	/^events(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROA_Aspect
exe_path	lib/lib/include/lib/directory.hpp	/^exe_path()$/;"	f	namespace:LIB_NS_NAME::dir
exists	lib/lib/include/lib/file.hpp	/^exists(const char *filename)$/;"	f	namespace:LIB_NS_NAME::file
expanded	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon87
expected	lib/math/test/unit/general.cpp	/^  float expected;$/;"	m	struct:__anon49::Math_general_test_data	file:
exportFromImportedHandleTypes	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExternalMemoryHandleTypeFlagsNV    exportFromImportedHandleTypes;$/;"	m	struct:VkExternalImageFormatPropertiesNV
export_to_string	lib/lib/include/lib/nyaml.hpp	/^export_to_string(const node &expor_node)$/;"	f	namespace:LIB_NS_NAME::nyaml
exposure	thirdparty/glfw/src/x11_platform.h	/^        int         exposure;$/;"	m	struct:_GLFWlibraryX11::__anon147
ext	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^  unsigned char ext;$/;"	m	struct:INSTR
extIn	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	int extIn;$/;"	m	class:SIDsound
extension	thirdparty/tinydir/include/tinydir/tinydir.h	/^	_tinydir_char_t *extension;$/;"	m	struct:tinydir_file
extensionName	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    char        extensionName[VK_MAX_EXTENSION_NAME_SIZE];$/;"	m	struct:VkExtensionProperties
extensionName	thirdparty/glfw/src/internal.h	/^    char            extensionName[256];$/;"	m	struct:VkExtensionProperties
extensionSupported	thirdparty/glfw/src/internal.h	/^    _GLFWextensionsupportedfun  extensionSupported;$/;"	m	struct:_GLFWcontext
extensionSupportedEGL	thirdparty/glfw/src/egl_context.c	/^static int extensionSupportedEGL(const char* extension)$/;"	f	file:
extensionSupportedGLX	thirdparty/glfw/src/glx_context.c	/^static int extensionSupportedGLX(const char* extension)$/;"	f	file:
extensionSupportedOSMesa	thirdparty/glfw/src/osmesa_context.c	/^static int extensionSupportedOSMesa(const char* extension)$/;"	f	file:
extensionSupportedWGL	thirdparty/glfw/src/wgl_context.c	/^static int extensionSupportedWGL(const char* extension)$/;"	f	file:
extensions	thirdparty/glfw/src/internal.h	/^        char*           extensions[2];$/;"	m	struct:_GLFWlibrary::__anon165
extensionsLoaded	thirdparty/glfw/src/wgl_context.h	/^    GLFWbool                            extensionsLoaded;$/;"	m	struct:_GLFWlibraryWGL
extent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D    extent;$/;"	m	struct:VkRect2D
extent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent3D                  extent;$/;"	m	struct:VkImageCopy
extent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent3D                  extent;$/;"	m	struct:VkImageResolve
extent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent3D                 extent;$/;"	m	struct:VkSparseImageMemoryBind
extent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent3D               extent;$/;"	m	struct:VkImageCreateInfo
externalMemoryFeatures	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExternalMemoryFeatureFlagsNV       externalMemoryFeatures;$/;"	m	struct:VkExternalImageFormatPropertiesNV
extra	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rp_node extra[2];$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_context::nk_rp_node
extra	thirdparty/stb/include/stb/stb_rect_pack.h	/^   stbrp_node extra[2]; \/\/ we allocate two extra nodes so optimal user-node-count is 'width' not 'width+2'$/;"	m	struct:stbrp_context
exts	thirdparty/glfw/src/deps/glad.c	/^static const char *exts = NULL;$/;"	v	file:
exts_i	thirdparty/glfw/src/deps/glad.c	/^static const char **exts_i = NULL;$/;"	v	file:
ey	thirdparty/glfw/src/deps/nuklear.h	/^    float ey;$/;"	m	struct:nk_tt__active_edge
ey	thirdparty/stb/include/stb/stb_truetype.h	/^   float ey;$/;"	m	struct:stbtt__active_edge
eye_platform_ids	lib/nil_aspects/include/aspect/renderer_aspect.hpp	/^  uintptr_t eye_platform_ids[2]; \/\/ 0 left - 1 right, these are the graphic api resources.$/;"	m	struct:Nil_ext::ROV_Aspect::Data
eye_position	lib/rov/src/rov_data.hpp	/^  rovVec3 eye_position;$/;"	m	struct:ROV_Internal::rovRenderPass
eye_render_targets	lib/nil_aspects/include/aspect/renderer_aspect.hpp	/^  uint32_t eye_render_targets[2]; \/\/ 0 left - 1 right, these are rov resources.$/;"	m	struct:Nil_ext::ROV_Aspect::Data
f	thirdparty/glfw/src/deps/nuklear.h	/^    float f;$/;"	m	union:nk_property
f	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^      float f;$/;"	m	union:__anon216	file:
f	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   FILE *f;$/;"	m	struct:stb_vorbis	file:
f	thirdparty/stb/include/stb/stb_image_resize.h	/^    float f;$/;"	m	union:__anon73
f	thirdparty/stb/include/stb/stb_vorbis.c	/^      float f;$/;"	m	union:__anon129	file:
f	thirdparty/stb/include/stb/stb_vorbis.c	/^   FILE *f;$/;"	m	struct:stb_vorbis	file:
f_start	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 f_start;$/;"	m	struct:stb_vorbis	file:
f_start	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 f_start;$/;"	m	struct:stb_vorbis	file:
fadeFilterParameter	thirdparty/soloud/src/core/soloud_core_filterops.cpp	/^	void Soloud::fadeFilterParameter(handle aVoiceHandle, unsigned int aFilterId, unsigned int aAttributeId, float aTo, double aTime)$/;"	f	class:SoLoud::Soloud
fadeFilterParameter	thirdparty/soloud/src/core/soloud_filter.cpp	/^	void FilterInstance::fadeFilterParameter(unsigned int aAttributeId, float aTo, double aTime, double aStartTime)$/;"	f	class:SoLoud::FilterInstance
fadeGlobalVolume	thirdparty/soloud/src/core/soloud_core_faderops.cpp	/^	void Soloud::fadeGlobalVolume(float aTo, time aTime)$/;"	f	class:SoLoud::Soloud
fadePan	thirdparty/soloud/src/core/soloud_core_faderops.cpp	/^	void Soloud::fadePan(handle aVoiceHandle, float aTo, time aTime)$/;"	f	class:SoLoud::Soloud
fadeRelativePlaySpeed	thirdparty/soloud/src/core/soloud_core_faderops.cpp	/^	void Soloud::fadeRelativePlaySpeed(handle aVoiceHandle, float aTo, time aTime)$/;"	f	class:SoLoud::Soloud
fadeVolume	thirdparty/soloud/src/core/soloud_core_faderops.cpp	/^	void Soloud::fadeVolume(handle aVoiceHandle, float aTo, time aTime)$/;"	f	class:SoLoud::Soloud
failOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStencilOp    failOp;$/;"	m	struct:VkStencilOpState
fallback	thirdparty/glfw/src/deps/nuklear.h	/^    const struct nk_font_glyph *fallback;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_font_glyph
fallback_codepoint	thirdparty/glfw/src/deps/nuklear.h	/^    nk_rune fallback_codepoint;$/;"	m	struct:nk_font
fallback_glyph	thirdparty/glfw/src/deps/nuklear.h	/^    nk_rune fallback_glyph;$/;"	m	struct:nk_font_config
far_plane	lib/nil/include/nil/data/camera.hpp	/^  float far_plane;$/;"	m	struct:Nil::Data::Camera
farins	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned char farins;$/;"	m	class:CPU
fast	thirdparty/stb/include/stb/stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anon84
fast	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anon80
fast_ac	thirdparty/stb/include/stb/stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anon81
fast_huffman	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^    int16  fast_huffman[FAST_HUFFMAN_TABLE_SIZE];$/;"	m	struct:__anon203	file:
fast_huffman	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^    int32  fast_huffman[FAST_HUFFMAN_TABLE_SIZE];$/;"	m	struct:__anon203	file:
fast_huffman	thirdparty/stb/include/stb/stb_vorbis.c	/^    int16  fast_huffman[FAST_HUFFMAN_TABLE_SIZE];$/;"	m	struct:__anon116	file:
fast_huffman	thirdparty/stb/include/stb/stb_vorbis.c	/^    int32  fast_huffman[FAST_HUFFMAN_TABLE_SIZE];$/;"	m	struct:__anon116	file:
fastmode	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int fastmode, irqline;$/;"	m	class:TED
fb_scale	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    struct nk_vec2 fb_scale;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_vec2
fbo	lib/rov/src/ogl/rov_gl.hpp	/^  GLuint fbo;$/;"	m	struct:ROV_Internal::rovGLFramebuffer
fbsize	thirdparty/glfw/src/internal.h	/^        GLFWframebuffersizefun  fbsize;$/;"	m	struct:_GLFWwindow::__anon162
fclose	thirdparty/soloud/include/soloud/soloud_file_hack_off.h	34;"	d
fclose	thirdparty/soloud/include/soloud/soloud_file_hack_on.h	57;"	d
fd	thirdparty/glfw/src/linux_joystick.h	/^    int                     fd;$/;"	m	struct:_GLFWjoystickLinux
fdphase	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float fdphase;$/;"	m	class:SoLoud::SfxrInstance
fdselect	thirdparty/stb/include/stb/stb_truetype.h	/^   stbtt__buf fdselect;               \/\/ map from glyph to fontdict$/;"	m	struct:stbtt_fontinfo
fdslide	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		double fdslide;$/;"	m	class:SoLoud::SfxrInstance
fdx	thirdparty/glfw/src/deps/nuklear.h	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge
fdx	thirdparty/stb/include/stb/stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge
fdy	thirdparty/glfw/src/deps/nuklear.h	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge
fdy	thirdparty/stb/include/stb/stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge
features	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPhysicalDeviceFeatures    features;$/;"	m	struct:VkPhysicalDeviceFeatures2KHR
ff1d_latch	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static unsigned int ff1d_latch;$/;"	v	file:
fft1024	thirdparty/soloud/src/core/soloud_fft.cpp	/^        void fft1024(float *aBuffer)$/;"	f	namespace:SoLoud::FFT
fft256	thirdparty/soloud/src/core/soloud_fft.cpp	/^        void fft256(float *aBuffer)$/;"	f	namespace:SoLoud::FFT
fftFilterChannel	thirdparty/soloud/src/filter/soloud_bassboostfilter.cpp	/^	void BassboostFilterInstance::fftFilterChannel(float *aFFTBuffer, unsigned int aSamples, float aSamplerate, time aTime, unsigned int aChannel, unsigned int aChannels)$/;"	f	class:SoLoud::BassboostFilterInstance
fftFilterChannel	thirdparty/soloud/src/filter/soloud_fftfilter.cpp	/^	void FFTFilterInstance::fftFilterChannel(float *aFFTBuffer, unsigned int aSamples, float aSamplerate, time aTime, unsigned int aChannel, unsigned int aChannels)$/;"	f	class:SoLoud::FFTFilterInstance
fgetc	thirdparty/soloud/include/soloud/soloud_file_hack_off.h	30;"	d
fgetc	thirdparty/soloud/include/soloud/soloud_file_hack_on.h	53;"	d
file	lib/lib/include/lib/file.hpp	/^namespace file {$/;"	n	namespace:LIB_NS_NAME
file	lib/lib/include/lib/logging.hpp	/^  file    = 1 << 1,$/;"	e	enum:LIB_NS_NAME::logging::out::ENUM
file	thirdparty/catch/include/catch/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	FILE *file;$/;"	m	class:CbmTune
fileName	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	std::string fileName;$/;"	m	struct:PsidHeader
file_map_handle	thirdparty/remotery/src/Remotery.c	/^    HANDLE file_map_handle;$/;"	m	struct:VirtualMirrorBuffer	file:
fileheader	thirdparty/soloud/src/tools/codegen/main.cpp	/^void fileheader(FILE * f)$/;"	f
fileheader	thirdparty/soloud/src/tools/lutgen/main.cpp	/^void fileheader(FILE * f)$/;"	f
filename_from_path	lib/lib/include/lib/string.hpp	/^filename_from_path(const char *path,$/;"	f	namespace:LIB_NS_NAME::string
filepath	lib/lib/include/lib/logging.hpp	/^  char filepath[LIB_MAX_FILE_PATH_SIZE];$/;"	m	namespace:__anon1
fillModeNonSolid	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    fillModeNonSolid;$/;"	m	struct:VkPhysicalDeviceFeatures
filled	thirdparty/glfw/src/deps/nuklear.h	/^    float filled;$/;"	m	struct:nk_row_layout
filter	thirdparty/glfw/src/deps/nuklear.h	/^    nk_plugin_filter filter;$/;"	m	struct:nk_text_edit
filter	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int filter;	\/\/ voice filtered flag$/;"	m	class:SIDsound::SIDVoice
filter	thirdparty/soloud/src/core/soloud_filter.cpp	/^	void FilterInstance::filter(float *aBuffer, unsigned int aSamples, unsigned int aChannels, float aSamplerate, double aTime)$/;"	f	class:SoLoud::FilterInstance
filter	thirdparty/soloud/src/filter/soloud_dcremovalfilter.cpp	/^	void DCRemovalFilterInstance::filter(float *aBuffer, unsigned int aSamples, unsigned int aChannels, float aSamplerate, double aTime)$/;"	f	class:SoLoud::DCRemovalFilterInstance
filter	thirdparty/soloud/src/filter/soloud_echofilter.cpp	/^	void EchoFilterInstance::filter(float *aBuffer, unsigned int aSamples, unsigned int aChannels, float aSamplerate, double aTime)$/;"	f	class:SoLoud::EchoFilterInstance
filter	thirdparty/soloud/src/filter/soloud_flangerfilter.cpp	/^	void FlangerFilterInstance::filter(float *aBuffer, unsigned int aSamples, unsigned int aChannels, float aSamplerate, double aTime)$/;"	f	class:SoLoud::FlangerFilterInstance
filter	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int filter;	\/\/ voice filtered flag$/;"	m	class:SIDsound::SIDVoice
filter	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^    Filter *filter;$/;"	m	class:TED
filterChannel	thirdparty/soloud/src/core/soloud_filter.cpp	/^	void FilterInstance::filterChannel(float *aBuffer, unsigned int aSamples, float aSamplerate, double aTime, unsigned int aChannel, unsigned int aChannels)$/;"	f	class:SoLoud::FilterInstance
filterChannel	thirdparty/soloud/src/filter/soloud_biquadresonantfilter.cpp	/^	void BiquadResonantFilterInstance::filterChannel(float *aBuffer, unsigned int aSamples, float aSamplerate, double aTime, unsigned int aChannel, unsigned int aChannels)$/;"	f	class:SoLoud::BiquadResonantFilterInstance
filterChannel	thirdparty/soloud/src/filter/soloud_fftfilter.cpp	/^	void FFTFilterInstance::filterChannel(float *aBuffer, unsigned int aSamples, float aSamplerate, double aTime, unsigned int aChannel, unsigned int aChannels)$/;"	f	class:SoLoud::FFTFilterInstance
filterChannel	thirdparty/soloud/src/filter/soloud_lofifilter.cpp	/^	void LofiFilterInstance::filterChannel(float *aBuffer, unsigned int aSamples, float aSamplerate, double aTime, unsigned int aChannel, unsigned int aChannels)$/;"	f	class:SoLoud::LofiFilterInstance
filterCutoff	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	unsigned int	filterCutoff;	\/\/ SID filter frequency$/;"	m	class:SIDsound
filterCutoff	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	unsigned int	filterCutoff;	\/\/ SID filter frequency$/;"	m	class:SIDsound
filterOrder	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int filterOrder;$/;"	m	class:TED
filterOutput	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^inline int SIDsound::filterOutput(unsigned int cycles, int Vi)$/;"	f	class:SIDsound
filterOutput	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^inline int SIDsound::filterOutput(unsigned int cycles, int Vi)$/;"	f	class:SIDsound
filterResonance	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	unsigned char	filterResonance;	\/\/ filter resonance (0..15)$/;"	m	class:SIDsound
filterResonance	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	unsigned char	filterResonance;	\/\/ filter resonance (0..15)$/;"	m	class:SIDsound
filterType	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	unsigned char	filterType; \/\/ filter type$/;"	m	class:SIDsound
filterType	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	unsigned char	filterType; \/\/ filter type$/;"	m	class:SIDsound
filter_on	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		bool filter_on;$/;"	m	struct:SoLoud::SfxrParams
final	lib/nil/include/nil/node.hpp	/^class Node final$/;"	c	namespace:Nil
final	lib/roa/include/roa/application.hpp	/^class Application final$/;"	c	namespace:ROA
final	lib/roa/include/roa/audio_player.hpp	/^class Audio_player final : public Object$/;"	c	namespace:ROA
final	lib/roa/include/roa/audio_source.hpp	/^class Audio_source final : public Resource$/;"	c	namespace:ROA
final	lib/roa/include/roa/collection.hpp	/^class Collection final$/;"	c	namespace:ROA
final	lib/roa/include/roa/color.hpp	/^class Color final$/;"	c	namespace:ROA
final	lib/roa/include/roa/light.hpp	/^class Light final : public Object$/;"	c	namespace:ROA
final	lib/roa/include/roa/logic.hpp	/^class Logic final : public Object$/;"	c	namespace:ROA
final	lib/roa/include/roa/material.hpp	/^class Material final : public Resource$/;"	c	namespace:ROA
final	lib/roa/include/roa/mesh.hpp	/^class Mesh final : public Resource$/;"	c	namespace:ROA
final	lib/roa/include/roa/quaternion.hpp	/^class Quaternion final$/;"	c	namespace:ROA
final	lib/roa/include/roa/shader.hpp	/^class Shader final : public Resource$/;"	c	namespace:ROA
final	lib/roa/include/roa/transform.hpp	/^class Transform final : public Object$/;"	c	namespace:ROA
final	lib/roa/include/roa/vector3.hpp	/^class Vector3 final$/;"	c	namespace:ROA
finalLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageLayout                   finalLayout;$/;"	m	struct:VkAttachmentDescription
finalY	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int16 *finalY[STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	file:
finalY	thirdparty/stb/include/stb/stb_vorbis.c	/^   int16 *finalY[STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	file:
find	lib/lib/include/lib/string_pool.hpp	/^find(const char *name)$/;"	f	namespace:LIB_NS_NAME::string_pool
find	lib/roa/include/roa/resource.hpp	/^  find(const char *name)$/;"	f	class:ROA::Resource
findBusHandle	thirdparty/soloud/src/core/soloud_bus.cpp	/^	void Bus::findBusHandle()$/;"	f	class:SoLoud::Bus
findFreeVoice	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	int Soloud::findFreeVoice()$/;"	f	class:SoLoud::Soloud
findValidPixelFormat	thirdparty/glfw/src/mir_window.c	/^static MirPixelFormat findValidPixelFormat(void)$/;"	f	file:
findWindowByHandle	thirdparty/glfw/src/x11_window.c	/^static _GLFWwindow* findWindowByHandle(Window handle)$/;"	f	file:
find_coreGL	thirdparty/glfw/src/deps/glad.c	/^static void find_coreGL(void) {$/;"	f	file:
find_extensionsGL	thirdparty/glfw/src/deps/glad.c	/^static int find_extensionsGL(void) {$/;"	f	file:
find_lookat_bounding_box	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^find_lookat_bounding_box(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
find_node	lib/nil/src/interface/data/common.hpp	/^find_node($/;"	f	namespace:Nil::Data
find_resource	lib/roa/src/interface/detail/resource_interface.cpp	/^find_resource(ROA::Audio_source &rsrc, const char *name)$/;"	f	namespace:ROA_detail
find_resource	lib/roa/src/interface/detail/resource_interface.cpp	/^find_resource(ROA::Material &mat, const char *name)$/;"	f	namespace:ROA_detail
find_resource	lib/roa/src/interface/detail/resource_interface.cpp	/^find_resource(ROA::Mesh &rsrc, const char *name)$/;"	f	namespace:ROA_detail
find_resource	lib/roa/src/interface/detail/resource_interface.cpp	/^find_resource(ROA::Shader &mat, const char *name)$/;"	f	namespace:ROA_detail
find_rule	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static int find_rule(darray *arg, char *word, int index, Rule *rules)$/;"	f	file:
first	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anon91
first8	lib/lib/include/lib/bits.hpp	/^first8(const uint32_t i)$/;"	f	namespace:LIB_NS_NAME::bits
firstIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    firstIndex;$/;"	m	struct:VkDrawIndexedIndirectCommand
firstInstance	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    firstInstance;$/;"	m	struct:VkDrawIndexedIndirectCommand
firstInstance	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    firstInstance;$/;"	m	struct:VkDrawIndirectCommand
firstVertex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    firstVertex;$/;"	m	struct:VkDrawIndirectCommand
first_audio_page_offset	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 first_audio_page_offset;$/;"	m	struct:stb_vorbis	file:
first_audio_page_offset	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 first_audio_page_offset;$/;"	m	struct:stb_vorbis	file:
first_char	thirdparty/glfw/src/deps/nuklear.h	/^   int first_char, length; \/* first char of row, and length *\/$/;"	m	struct:nk_text_find
first_char	thirdparty/stb/include/stb/stb_textedit.h	/^   int first_char, length; \/\/ first char of row, and length$/;"	m	struct:__anon134
first_child	thirdparty/remotery/src/Remotery.c	/^    struct Sample* first_child;$/;"	m	struct:Sample	typeref:struct:Sample::Sample	file:
first_decode	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 first_decode;$/;"	m	struct:stb_vorbis	file:
first_decode	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 first_decode;$/;"	m	struct:stb_vorbis	file:
first_free	thirdparty/glfw/src/deps/nuklear.h	/^    void   *first_free;$/;"	m	struct:nk_tt__hheap
first_free	thirdparty/remotery/src/Remotery.c	/^    ObjectLink* first_free;$/;"	m	struct:__anon55	file:
first_free	thirdparty/stb/include/stb/stb_truetype.h	/^   void   *first_free;$/;"	m	struct:stbtt__hheap
first_row_filter	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc first_row_filter[5] =$/;"	v
first_thread_sampler	thirdparty/remotery/src/Remotery.c	/^    ThreadSampler* volatile first_thread_sampler;$/;"	m	struct:Remotery	file:
first_timestamp	thirdparty/remotery/src/Remotery.c	/^    rmtU64 first_timestamp;$/;"	m	struct:D3D11	file:
first_timestamp	thirdparty/remotery/src/Remotery.c	/^    rmtU64 first_timestamp;$/;"	m	struct:OpenGL_t	file:
first_unicode_codepoint_in_range	thirdparty/glfw/src/deps/nuklear.h	/^    int first_unicode_codepoint_in_range;$/;"	m	struct:nk_tt_pack_range
first_unicode_codepoint_in_range	thirdparty/stb/include/stb/stb_truetype.h	/^   int first_unicode_codepoint_in_range;  \/\/ if non-zero, then the chars are continuous, and this is the first codepoint$/;"	m	struct:__anon100
first_x	thirdparty/stb/include/stb/stb_truetype.h	/^   float first_x, first_y;$/;"	m	struct:__anon110
first_y	thirdparty/stb/include/stb/stb_truetype.h	/^   float first_x, first_y;$/;"	m	struct:__anon110
firstcode	thirdparty/stb/include/stb/stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anon84
firstsymbol	thirdparty/stb/include/stb/stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anon84
firstwrite	thirdparty/soloud/src/tools/tedsid2dump/main.cpp	/^int firstwrite = 1;$/;"	v
fixed_background	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item fixed_background;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_style_item
flag	thirdparty/glfw/src/deps/getopt.h	/^  int* flag;$/;"	m	struct:option
flags	thirdparty/glfw/src/cocoa_platform.h	/^    VkMacOSSurfaceCreateFlagsMVK    flags;$/;"	m	struct:VkMacOSSurfaceCreateInfoMVK
flags	thirdparty/glfw/src/deps/nuklear.h	/^    nk_flags flags;$/;"	m	struct:nk_panel
flags	thirdparty/glfw/src/deps/nuklear.h	/^    nk_flags flags;$/;"	m	struct:nk_window
flags	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_config_stack_flags flags;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_flags
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAndroidSurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkAndroidSurfaceCreateInfoKHR
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAttachmentDescriptionFlags    flags;$/;"	m	struct:VkAttachmentDescription
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBufferCreateFlags    flags;$/;"	m	struct:VkBufferCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBufferViewCreateFlags    flags;$/;"	m	struct:VkBufferViewCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkCommandBufferUsageFlags                flags;$/;"	m	struct:VkCommandBufferBeginInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkCommandPoolCreateFlags    flags;$/;"	m	struct:VkCommandPoolCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDebugReportFlagsEXT           flags;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDescriptorPoolCreateFlags    flags;$/;"	m	struct:VkDescriptorPoolCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDescriptorSetLayoutCreateFlags       flags;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceCreateFlags                flags;$/;"	m	struct:VkDeviceCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceQueueCreateFlags    flags;$/;"	m	struct:VkDeviceQueueCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDisplayModeCreateFlagsKHR    flags;$/;"	m	struct:VkDisplayModeCreateInfoKHR
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDisplaySurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkEventCreateFlags    flags;$/;"	m	struct:VkEventCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFenceCreateFlags    flags;$/;"	m	struct:VkFenceCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFramebufferCreateFlags    flags;$/;"	m	struct:VkFramebufferCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageCreateFlags       flags;$/;"	m	struct:VkImageCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageCreateFlags    flags;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2KHR
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageViewCreateFlags     flags;$/;"	m	struct:VkImageViewCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkIndirectCommandsLayoutUsageFlagsNVX      flags;$/;"	m	struct:VkIndirectCommandsLayoutCreateInfoNVX
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkInstanceCreateFlags       flags;$/;"	m	struct:VkInstanceCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkMemoryHeapFlags    flags;$/;"	m	struct:VkMemoryHeap
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkMirSurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkMirSurfaceCreateInfoKHR
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectEntryUsageFlagsNVX    flags;$/;"	m	struct:VkObjectTableDescriptorSetEntryNVX
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectEntryUsageFlagsNVX    flags;$/;"	m	struct:VkObjectTableEntryNVX
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectEntryUsageFlagsNVX    flags;$/;"	m	struct:VkObjectTableIndexBufferEntryNVX
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectEntryUsageFlagsNVX    flags;$/;"	m	struct:VkObjectTablePipelineEntryNVX
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectEntryUsageFlagsNVX    flags;$/;"	m	struct:VkObjectTablePushConstantEntryNVX
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectEntryUsageFlagsNVX    flags;$/;"	m	struct:VkObjectTableVertexBufferEntryNVX
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineCacheCreateFlags    flags;$/;"	m	struct:VkPipelineCacheCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineColorBlendStateCreateFlags          flags;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineCreateFlags                            flags;$/;"	m	struct:VkGraphicsPipelineCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineCreateFlags              flags;$/;"	m	struct:VkComputePipelineCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineDepthStencilStateCreateFlags    flags;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineDynamicStateCreateFlags    flags;$/;"	m	struct:VkPipelineDynamicStateCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineInputAssemblyStateCreateFlags    flags;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineLayoutCreateFlags     flags;$/;"	m	struct:VkPipelineLayoutCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineMultisampleStateCreateFlags    flags;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineRasterizationStateCreateFlags    flags;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineShaderStageCreateFlags    flags;$/;"	m	struct:VkPipelineShaderStageCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineTessellationStateCreateFlags    flags;$/;"	m	struct:VkPipelineTessellationStateCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineVertexInputStateCreateFlags       flags;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineViewportStateCreateFlags    flags;$/;"	m	struct:VkPipelineViewportStateCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkQueryPoolCreateFlags           flags;$/;"	m	struct:VkQueryPoolCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkRenderPassCreateFlags           flags;$/;"	m	struct:VkRenderPassCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSamplerCreateFlags    flags;$/;"	m	struct:VkSamplerCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSemaphoreCreateFlags    flags;$/;"	m	struct:VkSemaphoreCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkShaderModuleCreateFlags    flags;$/;"	m	struct:VkShaderModuleCreateInfo
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSparseImageFormatFlags    flags;$/;"	m	struct:VkSparseImageFormatProperties
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSparseMemoryBindFlags    flags;$/;"	m	struct:VkSparseImageMemoryBind
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSparseMemoryBindFlags    flags;$/;"	m	struct:VkSparseMemoryBind
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSubpassDescriptionFlags       flags;$/;"	m	struct:VkSubpassDescription
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSwapchainCreateFlagsKHR        flags;$/;"	m	struct:VkSwapchainCreateInfoKHR
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkViSurfaceCreateFlagsNN    flags;$/;"	m	struct:VkViSurfaceCreateInfoNN
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkWaylandSurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkWin32SurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkXcbSurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
flags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkXlibSurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
flags	thirdparty/glfw/src/mir_platform.h	/^    VkMirWindowCreateFlagsKHR   flags;$/;"	m	struct:VkMirWindowCreateInfoKHR
flags	thirdparty/glfw/src/win32_platform.h	/^    VkWin32SurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
flags	thirdparty/glfw/src/wl_platform.h	/^    VkWaylandSurfaceCreateFlagsKHR  flags;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR
flags	thirdparty/glfw/src/x11_platform.h	/^    VkXcbSurfaceCreateFlagsKHR  flags;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
flags	thirdparty/glfw/src/x11_platform.h	/^    VkXlibSurfaceCreateFlagsKHR flags;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
flags	thirdparty/stb/include/stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon92
flags	thirdparty/stb/include/stb/stb_image_resize.h	/^    stbir_uint32 flags;$/;"	m	struct:__anon72
flags_bitset	thirdparty/json/src/json.c	/^  size_t flags_bitset;$/;"	m	struct:json_parse_state_s	file:
flen	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	size_t flen;$/;"	m	class:CbmTune
float32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float       float32[4];$/;"	m	union:VkClearColorValue
float32_unpack	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static float float32_unpack(uint32 x)$/;"	f	file:
float32_unpack	thirdparty/stb/include/stb/stb_vorbis.c	/^static float float32_unpack(uint32 x)$/;"	f	file:
float_conv	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   } float_conv;$/;"	t	typeref:union:__anon216	file:
float_conv	thirdparty/stb/include/stb/stb_vorbis.c	/^   } float_conv;$/;"	t	typeref:union:__anon129	file:
float_max	lib/math/include/math/general/constants.hpp	/^MATH_CONST_CONSTEXPR float           float_max()   { return FLT_MAX;         }$/;"	f
float_min	lib/math/include/math/general/constants.hpp	/^MATH_CONST_CONSTEXPR float           float_min()   { return -FLT_MAX;        }$/;"	f
floating	thirdparty/glfw/src/internal.h	/^    GLFWbool            floating;$/;"	m	struct:_GLFWwindow
floating	thirdparty/glfw/src/internal.h	/^    GLFWbool      floating;$/;"	m	struct:_GLFWwndconfig
floats	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_config_stack_float floats;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_float
floor	lib/math/include/math/general/general.hpp	/^floor(const float x)$/;"	f
floor0	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   Floor0 floor0;$/;"	m	union:__anon206	file:
floor0	thirdparty/stb/include/stb/stb_vorbis.c	/^   Floor0 floor0;$/;"	m	union:__anon119	file:
floor1	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   Floor1 floor1;$/;"	m	union:__anon206	file:
floor1	thirdparty/stb/include/stb/stb_vorbis.c	/^   Floor1 floor1;$/;"	m	union:__anon119	file:
floor1_multiplier	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 floor1_multiplier;$/;"	m	struct:__anon205	file:
floor1_multiplier	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 floor1_multiplier;$/;"	m	struct:__anon118	file:
floor_buffers	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   float *floor_buffers[STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	file:
floor_buffers	thirdparty/stb/include/stb/stb_vorbis.c	/^   float *floor_buffers[STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	file:
floor_config	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   Floor *floor_config;$/;"	m	struct:stb_vorbis	file:
floor_config	thirdparty/stb/include/stb/stb_vorbis.c	/^   Floor *floor_config;$/;"	m	struct:stb_vorbis	file:
floor_count	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int floor_count;$/;"	m	struct:stb_vorbis	file:
floor_count	thirdparty/stb/include/stb/stb_vorbis.c	/^   int floor_count;$/;"	m	struct:stb_vorbis	file:
floor_types	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint16 floor_types[64]; \/\/ varies$/;"	m	struct:stb_vorbis	file:
floor_types	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint16 floor_types[64]; \/\/ varies$/;"	m	struct:stb_vorbis	file:
fltdmp	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float fltdmp;$/;"	m	class:SoLoud::SfxrInstance
fltdp	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float fltdp;$/;"	m	class:SoLoud::SfxrInstance
flthp	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float flthp;$/;"	m	class:SoLoud::SfxrInstance
flthp_d	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float flthp_d;$/;"	m	class:SoLoud::SfxrInstance
fltp	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float fltp;$/;"	m	class:SoLoud::SfxrInstance
fltphp	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float fltphp;$/;"	m	class:SoLoud::SfxrInstance
fltscr	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int nrwscr, fltscr;$/;"	m	class:TED
fltw	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float fltw;$/;"	m	class:SoLoud::SfxrInstance
fltw_d	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float fltw_d;$/;"	m	class:SoLoud::SfxrInstance
flush_packet	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void flush_packet(vorb *f)$/;"	f	file:
flush_packet	thirdparty/stb/include/stb/stb_vorbis.c	/^static void flush_packet(vorb *f)$/;"	f	file:
flutter	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^void klatt::flutter(klatt_frame *pars)$/;"	f	class:klatt
fmaxperiod	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		double fmaxperiod;$/;"	m	class:SoLoud::SfxrInstance
fmix32	thirdparty/remotery/src/Remotery.c	/^static rmtU32 fmix32(rmtU32 h)$/;"	f	file:
fn	lib/nil/src/graph/graph_data.hpp	/^    graph_tick_fn fn;$/;"	m	struct:Nil::Graph::Data::graph_tick_cb
fn	lib/nil/src/graph/graph_data.hpp	/^    node_delete_fn fn;$/;"	m	struct:Nil::Graph::Data::node_delete_cb
focus	thirdparty/glfw/src/internal.h	/^        GLFWwindowfocusfun      focus;$/;"	m	struct:_GLFWwindow::__anon162
focused	thirdparty/glfw/src/internal.h	/^    GLFWbool      focused;$/;"	m	struct:_GLFWwndconfig
font	thirdparty/glfw/src/deps/nuklear.h	/^    const struct nk_user_font *font;$/;"	m	struct:nk_command_text	typeref:struct:nk_command_text::nk_user_font
font	thirdparty/glfw/src/deps/nuklear.h	/^    const struct nk_user_font *font;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_user_font
font	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_baked_font *font;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config::nk_baked_font
font_id	lib/nil/include/nil/data/renderable_text.hpp	/^  uint32_t      font_id;$/;"	m	struct:Nil::Data::Renderable_text
font_num	thirdparty/glfw/src/deps/nuklear.h	/^    int font_num;$/;"	m	struct:nk_font_atlas
font_size	thirdparty/glfw/src/deps/nuklear.h	/^    float font_size;$/;"	m	struct:nk_tt_pack_range
font_size	thirdparty/stb/include/stb/stb_truetype.h	/^   float font_size;$/;"	m	struct:__anon100
font_tex	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    GLuint font_tex;$/;"	m	struct:nk_glfw_device
fontdicts	thirdparty/stb/include/stb/stb_truetype.h	/^   stbtt__buf fontdicts;              \/\/ array of font dicts$/;"	m	struct:stbtt_fontinfo
fonts	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_config_stack_user_font fonts;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_user_font
fonts	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_font *fonts;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_font
fontstart	thirdparty/glfw/src/deps/nuklear.h	/^    int fontstart;\/* offset of start of font *\/$/;"	m	struct:nk_tt_fontinfo
fontstart	thirdparty/stb/include/stb/stb_truetype.h	/^   int              fontstart;         \/\/ offset of start of font$/;"	m	struct:stbtt_fontinfo
footer_height	thirdparty/glfw/src/deps/nuklear.h	/^    float footer_height;$/;"	m	struct:nk_panel
fopen	thirdparty/soloud/include/soloud/soloud_file_hack_off.h	35;"	d
fopen	thirdparty/soloud/include/soloud/soloud_file_hack_on.h	58;"	d
forcedReset	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::forcedReset()$/;"	f	class:TED
foreground	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color foreground;$/;"	m	struct:nk_command_text	typeref:struct:nk_command_text::nk_color
foregroundLockTimeout	thirdparty/glfw/src/win32_platform.h	/^    DWORD               foregroundLockTimeout;$/;"	m	struct:_GLFWlibraryWin32
format	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_draw_vertex_layout_format format;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:enum:nk_draw_vertex_layout_element::nk_draw_vertex_layout_format
format	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFormat                        format;$/;"	m	struct:VkAttachmentDescription
format	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFormat                   format;$/;"	m	struct:VkBufferViewCreateInfo
format	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFormat                   format;$/;"	m	struct:VkImageViewCreateInfo
format	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFormat                 format;$/;"	m	struct:VkImageCreateInfo
format	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFormat                 format;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2KHR
format	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFormat              format;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2KHR
format	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFormat           format;$/;"	m	struct:VkSurfaceFormatKHR
format	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFormat    format;$/;"	m	struct:VkVertexInputAttributeDescription
format	thirdparty/glfw/src/x11_platform.h	/^        Atom        format;$/;"	m	struct:_GLFWlibraryX11::__anon148
formatProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFormatProperties    formatProperties;$/;"	m	struct:VkFormatProperties2KHR
formatProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSparseImageFormatProperties    formatProperties;$/;"	m	struct:VkSparseImageMemoryRequirements
format_to_gl_format	lib/rov/src/ogl/rov_gl.hpp	/^format_to_gl_format(uint32_t format)$/;"	f	namespace:ROV_Internal
format_to_gl_internal	lib/rov/src/ogl/rov_gl.hpp	/^format_to_gl_internal(uint32_t format)$/;"	f	namespace:ROV_Internal
format_to_gl_type	lib/rov/src/ogl/rov_gl.hpp	/^format_to_gl_type(uint32_t format)$/;"	f	namespace:ROV_Internal
forth8	lib/lib/include/lib/bits.hpp	/^forth8(const uint32_t i)$/;"	f	namespace:LIB_NS_NAME::bits
forward	thirdparty/glfw/src/internal.h	/^    GLFWbool            forward, debug, noerror;$/;"	m	struct:_GLFWcontext
forward	thirdparty/glfw/src/internal.h	/^    GLFWbool      forward;$/;"	m	struct:_GLFWctxconfig
fov	lib/nil/include/nil/data/camera.hpp	/^  float fov;$/;"	m	struct:Nil::Data::Camera
fp32_to_srgb8_tab4	thirdparty/stb/include/stb/stb_image_resize.h	/^static const stbir_uint32 fp32_to_srgb8_tab4[104] = {$/;"	v
fperiod	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		double fperiod;$/;"	m	class:SoLoud::SfxrInstance
fphase	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float fphase;$/;"	m	class:SoLoud::SfxrInstance
fragmentSource	lib/nau/src/renderer/opengl3.cpp	/^const GLchar* fragmentSource = R"glsl($/;"	m	namespace:__anon43	file:
fragmentStoresAndAtomics	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    fragmentStoresAndAtomics;$/;"	m	struct:VkPhysicalDeviceFeatures
frame	thirdparty/glfw/src/internal.h	/^        GLFWbool  frame;$/;"	m	struct:_GLFWwndconfig::__anon160
frame_bytes_remaining	thirdparty/remotery/src/Remotery.c	/^    rmtU32 frame_bytes_remaining;$/;"	m	struct:__anon63	file:
frame_init	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^void klatt::frame_init(klatt_frame *frame)$/;"	f	class:klatt
frame_tick_callbacks	lib/nil/src/graph/graph_data.hpp	/^  lib::array<graph_tick_cb>               frame_tick_callbacks;$/;"	m	struct:Nil::Graph::Data
framebuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFramebuffer                    framebuffer;$/;"	m	struct:VkCommandBufferInheritanceInfo
framebuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFramebuffer          framebuffer;$/;"	m	struct:VkRenderPassBeginInfo
framebuffer	thirdparty/glfw/src/internal.h	/^        _GLFWfbconfig   framebuffer;$/;"	m	struct:_GLFWlibrary::__anon163
framebufferColorSampleCounts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlags    framebufferColorSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
framebufferDepthSampleCounts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlags    framebufferDepthSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
framebufferNoAttachmentsSampleCounts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlags    framebufferNoAttachmentsSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
framebufferStencilSampleCounts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlags    framebufferStencilSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
framecol	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int framecol;$/;"	m	class:TED
framework	thirdparty/glfw/src/nsgl_context.h	/^    CFBundleRef     framework;$/;"	m	struct:_GLFWlibraryNSGL
fread	thirdparty/soloud/include/soloud/soloud_file_hack_off.h	31;"	d
fread	thirdparty/soloud/include/soloud/soloud_file_hack_on.h	54;"	d
free	lib/lib/include/lib/memory.hpp	/^free(T *free)$/;"	f	namespace:LIB_NS_NAME::mem
free	thirdparty/glfw/src/deps/nuklear.h	/^    nk_plugin_free free;$/;"	m	struct:nk_allocator
free	thirdparty/remotery/include/remotery/Remotery.h	/^    rmtFreePtr free;$/;"	m	struct:rmtSettings
free	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	567;"	d	file:
free	thirdparty/stb/include/stb/stb_vorbis.c	564;"	d	file:
freeLibraries	thirdparty/glfw/src/win32_init.c	/^static void freeLibraries(void)$/;"	f	file:
free_exts	thirdparty/glfw/src/deps/glad.c	/^static void free_exts(void) {$/;"	f	file:
free_head	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rp_node *free_head;$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_context::nk_rp_node
free_head	thirdparty/stb/include/stb/stb_rect_pack.h	/^   stbrp_node *free_head;$/;"	m	struct:stbrp_context
freelist	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_page_element *freelist;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_page_element
freelist	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_page_element *freelist;$/;"	m	struct:nk_pool	typeref:struct:nk_pool::nk_page_element
freq	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned short freq;	\/\/ voice frequency$/;"	m	class:SIDsound::SIDVoice
freq	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned short freq;	\/\/ voice frequency$/;"	m	class:SIDsound::SIDVoice
frequency	thirdparty/glfw/src/cocoa_platform.h	/^    uint64_t        frequency;$/;"	m	struct:_GLFWtimerNS
frequency	thirdparty/glfw/src/posix_time.h	/^    uint64_t    frequency;$/;"	m	struct:_GLFWtimerPOSIX
frequency	thirdparty/glfw/src/win32_platform.h	/^    uint64_t            frequency;$/;"	m	struct:_GLFWtimerWin32
frnd	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	325;"	d	file:
frnd	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	326;"	d	file:
frnd	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	73;"	d	file:
from_ptr	lib/lib/include/lib/entity.hpp	/^from_ptr(const uintptr_t ptr)$/;"	f	namespace:LIB_NS_NAME::entity
from_ptr	lib/lib/include/lib/entity.hpp	/^from_ptr(const void *ptr)$/;"	f	namespace:LIB_NS_NAME::entity
front	lib/lib/include/lib/array.hpp	/^  T& front()             { return *m_begin; };$/;"	f	class:LIB_NS_NAME::array
front	lib/lib/include/lib/array.hpp	/^  const T& front() const { return *m_begin; };$/;"	f	class:LIB_NS_NAME::array
front	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStencilOpState                          front;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
front	thirdparty/imgui/include/imgui/imgui.h	/^        char front() const { return *b; }$/;"	f	struct:ImGuiTextFilter::TextRange
front	thirdparty/imgui/include/imgui/imgui.h	/^    inline const value_type&    front() const                   { IM_ASSERT(Size > 0); return Data[0]; }$/;"	f	class:ImVector
front	thirdparty/imgui/include/imgui/imgui.h	/^    inline value_type&          front()                         { IM_ASSERT(Size > 0); return Data[0]; }$/;"	f	class:ImVector
frontFace	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFrontFace                                frontFace;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
fs_code	lib/nil/include/nil/resource/shader.hpp	/^  const char          *fs_code;$/;"	m	struct:Nil_shader
fs_shader	lib/nau/src/renderer/opengl3.cpp	/^  GLuint fs_shader;$/;"	m	struct:__anon43::nau_gl3_renderer	file:
fs_src	lib/nau/src/renderer/opengl3.cpp	/^const GLchar* fs_src = R"GLSL($/;"	m	namespace:__anon43	file:
fseek	thirdparty/soloud/include/soloud/soloud_file_hack_off.h	32;"	d
fseek	thirdparty/soloud/include/soloud/soloud_file_hack_on.h	55;"	d
fslide	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		double fslide;$/;"	m	class:SoLoud::SfxrInstance
ftTimeStamp	thirdparty/glfw/src/deps/mingw/dinput.h	/^	FILETIME	ftTimeStamp;$/;"	m	struct:_DIACTIONFORMATA
ftTimeStamp	thirdparty/glfw/src/deps/mingw/dinput.h	/^	FILETIME	ftTimeStamp;$/;"	m	struct:_DIACTIONFORMATW
ftell	thirdparty/soloud/include/soloud/soloud_file_hack_off.h	33;"	d
ftell	thirdparty/soloud/include/soloud/soloud_file_hack_on.h	56;"	d
ftex	thirdparty/stb/include/stb/stb_truetype.h	/^GLuint ftex;$/;"	v
fullDrawIndexUint32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    fullDrawIndexUint32;$/;"	m	struct:VkPhysicalDeviceFeatures
fullscreen	lib/nil/include/nil/data/window.hpp	/^  bool      fullscreen;$/;"	m	struct:Nil::Data::Window
func	thirdparty/glfw/src/deps/stb_image_write.h	/^   stbi_write_func *func;$/;"	m	struct:__anon184
func	thirdparty/stb/include/stb/stb_image_write.h	/^   stbi_write_func *func;$/;"	m	struct:__anon135
fx	thirdparty/glfw/src/deps/nuklear.h	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge
fx	thirdparty/stb/include/stb/stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge
g	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color
g	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf
g	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkComponentSwizzle    g;$/;"	m	struct:VkComponentMapping
gClass	thirdparty/soloud/src/tools/codegen/main.cpp	/^vector<Class *>gClass;$/;"	v
gContext	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static Context gContext;$/;"	m	namespace:ImGuizmo	file:
gElement	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^static Element gElement[] =$/;"	v	file:
gIncludeFile	thirdparty/soloud/src/tools/codegen/main.cpp	/^char *gIncludeFile[] =$/;"	v
gIncludeFileCount	thirdparty/soloud/src/tools/codegen/main.cpp	/^int gIncludeFileCount = sizeof(gIncludeFile) \/ sizeof(char*);$/;"	v
gStream	thirdparty/soloud/src/backend/portaudio/soloud_portaudio.cpp	/^	static PaStream *gStream;$/;"	m	namespace:SoLoud	file:
g_AttribLocationColor	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationPosition = 0, g_AttribLocationUV = 0, g_AttribLocationColor = 0;$/;"	v	file:
g_AttribLocationPosition	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationPosition = 0, g_AttribLocationUV = 0, g_AttribLocationColor = 0;$/;"	v	file:
g_AttribLocationProjMtx	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationTex = 0, g_AttribLocationProjMtx = 0;$/;"	v	file:
g_AttribLocationTex	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationTex = 0, g_AttribLocationProjMtx = 0;$/;"	v	file:
g_AttribLocationUV	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationPosition = 0, g_AttribLocationUV = 0, g_AttribLocationColor = 0;$/;"	v	file:
g_DecimalToHex	thirdparty/remotery/src/Remotery.c	/^static const rmtU8 g_DecimalToHex[17] = "0123456789abcdef";$/;"	v	file:
g_ElementsHandle	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static unsigned int g_VboHandle = 0, g_VaoHandle = 0, g_ElementsHandle = 0;$/;"	v	file:
g_FontTexture	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static GLuint       g_FontTexture = 0;$/;"	v	file:
g_FragHandle	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static int          g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	file:
g_MousePressed	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static bool         g_MousePressed[3] = { false, false, false };$/;"	v	file:
g_MouseWheel	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static float        g_MouseWheel = 0.0f;$/;"	v	file:
g_Remotery	thirdparty/remotery/src/Remotery.c	/^static Remotery* g_Remotery = NULL;$/;"	v	file:
g_RemoteryCreated	thirdparty/remotery/src/Remotery.c	/^static rmtBool g_RemoteryCreated = RMT_FALSE;$/;"	v	file:
g_Settings	thirdparty/remotery/src/Remotery.c	/^static rmtSettings g_Settings;$/;"	v	file:
g_SettingsInitialized	thirdparty/remotery/src/Remotery.c	/^static rmtBool g_SettingsInitialized = RMT_FALSE;$/;"	v	file:
g_ShaderHandle	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static int          g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	file:
g_Time	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static double       g_Time = 0.0f;$/;"	v	file:
g_VaoHandle	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static unsigned int g_VboHandle = 0, g_VaoHandle = 0, g_ElementsHandle = 0;$/;"	v	file:
g_VboHandle	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static unsigned int g_VboHandle = 0, g_VaoHandle = 0, g_ElementsHandle = 0;$/;"	v	file:
g_VertHandle	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static int          g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	file:
g_Window	thirdparty/imgui/src/imgui_impl_glfw_gl3.cpp	/^static GLFWwindow*  g_Window = NULL;$/;"	v	file:
g_ratio	lib/math/include/math/general/constants.hpp	/^MATH_CONST_CONSTEXPR float           g_ratio()     { return 1.61803398875f;  }$/;"	f
gamepad_count	lib/nil/src/interface/data/gamepad.cpp	/^gamepad_count()$/;"	f	namespace:Nil::Data
gammaBroken	thirdparty/glfw/src/x11_platform.h	/^        GLFWbool    gammaBroken;$/;"	m	struct:_GLFWlibraryX11::__anon145
gate	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int gate;		\/\/ EG gate flag$/;"	m	class:SIDsound::SIDVoice
gate	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int gate;		\/\/ EG gate flag$/;"	m	class:SIDsound::SIDVoice
gen_bitrev	thirdparty/soloud/src/tools/lutgen/main.cpp	/^void gen_bitrev(FILE *f, int bits)$/;"	f
gen_triglut	thirdparty/soloud/src/tools/lutgen/main.cpp	/^void gen_triglut(FILE * f, int bits)$/;"	f
generate	thirdparty/soloud/src/tools/codegen/main.cpp	/^void generate()$/;"	f
generate_cpp	thirdparty/soloud/src/tools/codegen/main.cpp	/^void generate_cpp()$/;"	f
generate_text_meshes	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^generate_text_meshes(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
geometry	thirdparty/glfw/src/wl_monitor.c	/^static void geometry(void* data,$/;"	f	file:
geometryShader	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    geometryShader;$/;"	m	struct:VkPhysicalDeviceFeatures
get	lib/lib/include/lib/string_pool.hpp	/^get(const uint32_t id)$/;"	f	namespace:LIB_NS_NAME::string_pool
get	lib/nil/src/interface/data/audio.cpp	/^get(const Node &node, Audio &out)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/audio.cpp	/^get(size_t *count, Audio **data)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/bounding_box.cpp	/^get(const Node &node, Bounding_box &out, const bool world)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/bounding_box.cpp	/^get(size_t *count, Bounding_box **box, const bool world)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/bounding_box.cpp	/^get(size_t *count, uint32_t **node_ids)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/camera.cpp	/^get(const Node &node, Camera &out)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/camera.cpp	/^get(size_t *count, Camera **cameras)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/developer.cpp	/^get(const Node &node, Developer &out)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/developer.cpp	/^get(size_t *count, Developer **data)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/gamepad.cpp	/^get(const Node &node, Gamepad &out)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/gamepad.cpp	/^get(size_t *count, Gamepad **data)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/keyboard.cpp	/^get(const Node &node, Keyboard &out)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/keyboard.cpp	/^get(size_t *count, Keyboard **data)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/light.cpp	/^get(const Node &node, Light &out)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/light.cpp	/^get(size_t *count, Light **out)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/logic.cpp	/^get(const Node &node, Logic &out)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/logic.cpp	/^get(size_t *count, Logic **data)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/mouse.cpp	/^get(const Node &node, Mouse &out)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/mouse.cpp	/^get(size_t *count, Mouse **data)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/renderable.cpp	/^get(const Node &node, Renderable &out)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/renderable.cpp	/^get(size_t *count, Renderable **renderables)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/renderable_text.cpp	/^get(const Node &node, Renderable_text &out)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/renderable_text.cpp	/^get(size_t *count, Renderable_text **renderables)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/transform.cpp	/^get(const Node &node, Transform &out)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/window.cpp	/^get(const Node &node, Window &out)$/;"	f	namespace:Nil::Data
get	lib/nil/src/interface/data/window.cpp	/^get(size_t *out_count, Window **out_resource)$/;"	f	namespace:Nil::Data
get	thirdparty/catch/include/catch/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	thirdparty/soloud/src/core/soloud_fader.cpp	/^	float Fader::get(double aCurrentTime)$/;"	f	class:SoLoud::Fader
get32	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static uint32 get32(vorb *f)$/;"	f	file:
get32	thirdparty/stb/include/stb/stb_vorbis.c	/^static uint32 get32(vorb *f)$/;"	f	file:
get3dSoundSpeed	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	float Soloud::get3dSoundSpeed()$/;"	f	class:SoLoud::Soloud
get8	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static uint8 get8(vorb *z)$/;"	f	file:
get8	thirdparty/stb/include/stb/stb_vorbis.c	/^static uint8 get8(vorb *z)$/;"	f	file:
get8_packet	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int get8_packet(vorb *f)$/;"	f	file:
get8_packet	thirdparty/stb/include/stb/stb_vorbis.c	/^static int get8_packet(vorb *f)$/;"	f	file:
get8_packet_raw	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int get8_packet_raw(vorb *f)$/;"	f	file:
get8_packet_raw	thirdparty/stb/include/stb/stb_vorbis.c	/^static int get8_packet_raw(vorb *f)$/;"	f	file:
getAC	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int getAC() { return AC; };$/;"	f	class:CPU
getActiveVoiceCount	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	unsigned int Soloud::getActiveVoiceCount()$/;"	f	class:SoLoud::Soloud
getAsyncKeyMods	thirdparty/glfw/src/win32_window.c	/^static int getAsyncKeyMods(void)$/;"	f	file:
getAudio	thirdparty/soloud/src/audiosource/monotone/soloud_monotone.cpp	/^	void MonotoneInstance::getAudio(float *aBuffer, unsigned int aSamples)$/;"	f	class:SoLoud::MonotoneInstance
getAudio	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt.cpp	/^	void OpenmptInstance::getAudio(float *aBuffer, unsigned int aSamples)$/;"	f	class:SoLoud::OpenmptInstance
getAudio	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	void SfxrInstance::getAudio(float *aBuffer, unsigned int aSamples)$/;"	f	class:SoLoud::SfxrInstance
getAudio	thirdparty/soloud/src/audiosource/speech/soloud_speech.cpp	/^	void SpeechInstance::getAudio(float *aBuffer, unsigned int aSamples)$/;"	f	class:SoLoud::SpeechInstance
getAudio	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	void TedSidInstance::getAudio(float *aBuffer, unsigned int aSamples)$/;"	f	class:SoLoud::TedSidInstance
getAudio	thirdparty/soloud/src/audiosource/vic/soloud_vic.cpp	/^	void VicInstance::getAudio(float *aBuffer, unsigned int aSamples)$/;"	f	class:SoLoud::VicInstance
getAudio	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^	void WavInstance::getAudio(float *aBuffer, unsigned int aSamples)$/;"	f	class:SoLoud::WavInstance
getAudio	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	void WavStreamInstance::getAudio(float *aBuffer, unsigned int aSamples)$/;"	f	class:SoLoud::WavStreamInstance
getAudio	thirdparty/soloud/src/core/soloud_bus.cpp	/^	void BusInstance::getAudio(float *aBuffer, unsigned int aSamples)$/;"	f	class:SoLoud::BusInstance
getAuthor	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	virtual char *getAuthor() {$/;"	f	class:CbmTune
getBackendBufferSize	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	unsigned int Soloud::getBackendBufferSize()$/;"	f	class:SoLoud::Soloud
getBackendChannels	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	unsigned int Soloud::getBackendChannels()$/;"	f	class:SoLoud::Soloud
getBackendId	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	unsigned int Soloud::getBackendId()$/;"	f	class:SoLoud::Soloud
getBackendSamplerate	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	unsigned int Soloud::getBackendSamplerate()$/;"	f	class:SoLoud::Soloud
getBackendString	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	const char * Soloud::getBackendString()$/;"	f	class:SoLoud::Soloud
getBinaryData	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	virtual unsigned char *getBinaryData(unsigned int nr) {$/;"	f	class:CbmTune
getData	thirdparty/soloud/src/audiosource/speech/darray.h	/^	char *getData() { return mData; } $/;"	f	class:darray
getDataInPos	thirdparty/soloud/src/audiosource/speech/darray.cpp	/^char * darray::getDataInPos(int aPosition)$/;"	f	class:darray
getDefaultSubtune	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	virtual unsigned int getDefaultSubtune() {$/;"	f	class:CbmTune
getDeviceDescription	thirdparty/glfw/src/win32_joystick.c	/^static const char* getDeviceDescription(const XINPUT_CAPABILITIES* xic)$/;"	f	file:
getDllProc	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^static void* getDllProc(HMODULE aDllHandle, const char *aProcName)$/;"	f	file:
getDllProc	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^static void* getDllProc(void * aLibrary, const char *aProcName)$/;"	f	file:
getDllProc	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static void* getDllProc(HMODULE aDllHandle, const char *aProcName)$/;"	f	file:
getDllProc	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static void* getDllProc(HMODULE aLibrary, const char *aProcName)$/;"	f	file:
getDllProc	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^static void* getDllProc(HMODULE aDllHandle, const char *aProcName)$/;"	f	file:
getDllProc	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^static void* getDllProc(void * aLibrary, const char *aProcName)$/;"	f	file:
getDumpLength	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	virtual unsigned short getDumpLength(unsigned int nr) {$/;"	f	class:CbmTune
getEGLConfigAttrib	thirdparty/glfw/src/egl_context.c	/^static int getEGLConfigAttrib(EGLConfig config, int attrib)$/;"	f	file:
getEGLErrorString	thirdparty/glfw/src/egl_context.c	/^static const char* getEGLErrorString(EGLint error)$/;"	f	file:
getErrorString	thirdparty/glfw/src/init.c	/^static const char* getErrorString(int code)$/;"	f	file:
getErrorString	thirdparty/soloud/src/core/soloud.cpp	/^	const char * Soloud::getErrorString(result aErrorCode) const$/;"	f	class:SoLoud::Soloud
getFilePtr	thirdparty/soloud/include/soloud/soloud_file.h	/^		virtual FILE * getFilePtr() { return 0; }$/;"	f	class:SoLoud::File
getFilePtr	thirdparty/soloud/src/core/soloud_file.cpp	/^	FILE *DiskFile::getFilePtr()$/;"	f	class:SoLoud::DiskFile
getFilterParameter	thirdparty/soloud/src/core/soloud_core_filterops.cpp	/^	float Soloud::getFilterParameter(handle aVoiceHandle, unsigned int aFilterId, unsigned int aAttributeId)$/;"	f	class:SoLoud::Soloud
getFilterParameter	thirdparty/soloud/src/core/soloud_filter.cpp	/^	float FilterInstance::getFilterParameter(unsigned int aAttributeId)$/;"	f	class:SoLoud::FilterInstance
getFullWindowSize	thirdparty/glfw/src/win32_window.c	/^static void getFullWindowSize(DWORD style, DWORD exStyle,$/;"	f	file:
getGLXFBConfigAttrib	thirdparty/glfw/src/glx_context.c	/^static int getGLXFBConfigAttrib(GLXFBConfig fbconfig, int attrib)$/;"	f	file:
getGlobalVolume	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	float Soloud::getGlobalVolume() const$/;"	f	class:SoLoud::Soloud
getHandleFromVoice	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	handle Soloud::getHandleFromVoice(unsigned int aVoice) const$/;"	f	class:SoLoud::Soloud
getInfo	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	float TedSidInstance::getInfo(unsigned int aInfoKey)$/;"	f	class:SoLoud::TedSidInstance
getInfo	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	float AudioSourceInstance::getInfo(unsigned int aInfoKey)$/;"	f	class:SoLoud::AudioSourceInstance
getInfo	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	float Soloud::getInfo(handle aVoiceHandle, unsigned int mInfoKey)$/;"	f	class:SoLoud::Soloud
getInitAddress	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	virtual unsigned short getInitAddress(unsigned int nr) {$/;"	f	class:CbmTune
getKeyMods	thirdparty/glfw/src/win32_window.c	/^static int getKeyMods(void)$/;"	f	file:
getLength	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^	double Wav::getLength()$/;"	f	class:SoLoud::Wav
getLength	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	double WavStream::getLength()$/;"	f	class:SoLoud::WavStream
getLoadAddress	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	virtual unsigned short getLoadAddress(unsigned int nr) {$/;"	f	class:CbmTune
getLoopCount	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	unsigned int Soloud::getLoopCount(handle aVoiceHandle)$/;"	f	class:SoLoud::Soloud
getLooping	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	bool Soloud::getLooping(handle aVoiceHandle)$/;"	f	class:SoLoud::Soloud
getMaxActiveVoiceCount	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	unsigned int Soloud::getMaxActiveVoiceCount() const$/;"	f	class:SoLoud::Soloud
getMemPtr	thirdparty/soloud/include/soloud/soloud_file.h	/^		virtual unsigned char * getMemPtr() { return 0; }$/;"	f	class:SoLoud::File
getMemPtr	thirdparty/soloud/src/core/soloud_file.cpp	/^	unsigned char * MemoryFile::getMemPtr()$/;"	f	class:SoLoud::MemoryFile
getModeInfo	thirdparty/glfw/src/x11_monitor.c	/^static const XRRModeInfo* getModeInfo(const XRRScreenResources* sr, RRMode id)$/;"	f	file:
getModel	thirdparty/soloud/src/audiosource/vic/soloud_vic.cpp	/^	int Vic::getModel() const$/;"	f	class:SoLoud::Vic
getName	thirdparty/catch/include/catch/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	thirdparty/catch/include/catch/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	thirdparty/catch/include/catch/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	thirdparty/catch/include/catch/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	thirdparty/catch/include/catch/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	thirdparty/catch/include/catch/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	thirdparty/catch/include/catch/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	virtual char *getName() {$/;"	f	class:CbmTune
getNrOfSubtunes	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	virtual unsigned int getNrOfSubtunes() {$/;"	f	class:CbmTune
getOggData	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	static int getOggData(float **aOggOutputs, float *aBuffer, int aSamples, int aPitch, int aFrameSize, int aFrameOffset, int aChannels)$/;"	f	namespace:SoLoud
getOverallVolume	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	float Soloud::getOverallVolume(handle aVoiceHandle)$/;"	f	class:SoLoud::Soloud
getPC	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int getPC() { return PC; };$/;"	f	class:CPU
getPan	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	float Soloud::getPan(handle aVoiceHandle)$/;"	f	class:SoLoud::Soloud
getPause	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	bool Soloud::getPause(handle aVoiceHandle)$/;"	f	class:SoLoud::Soloud
getPixelFormatAttrib	thirdparty/glfw/src/wgl_context.c	/^static int getPixelFormatAttrib(_GLFWwindow* window, int pixelFormat, int attrib)$/;"	f	file:
getPlayAddress	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	virtual unsigned short getPlayAddress(unsigned int nr) {$/;"	f	class:CbmTune
getPostClipScaler	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	float Soloud::getPostClipScaler() const$/;"	f	class:SoLoud::Soloud
getProcAddress	thirdparty/glfw/src/internal.h	/^    _GLFWgetprocaddressfun      getProcAddress;$/;"	m	struct:_GLFWcontext
getProcAddressEGL	thirdparty/glfw/src/egl_context.c	/^static GLFWglproc getProcAddressEGL(const char* procname)$/;"	f	file:
getProcAddressGLX	thirdparty/glfw/src/glx_context.c	/^static GLFWglproc getProcAddressGLX(const char* procname)$/;"	f	file:
getProcAddressOSMesa	thirdparty/glfw/src/osmesa_context.c	/^static GLFWglproc getProcAddressOSMesa(const char* procname)$/;"	f	file:
getProcAddressWGL	thirdparty/glfw/src/wgl_context.c	/^static GLFWglproc getProcAddressWGL(const char* procname)$/;"	f	file:
getProtectVoice	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	bool Soloud::getProtectVoice(handle aVoiceHandle)$/;"	f	class:SoLoud::Soloud
getPsidHeader	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.cpp	/^void CbmTune::getPsidHeader(PsidHeader &ph)$/;"	f	class:CbmTune
getPsidHeader	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^PsidHeader &getPsidHeader()$/;"	f
getPsidPlayAddress	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int getPsidPlayAddress() { return psidReplayAddr; };$/;"	f	class:TED
getPsidProperties	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void getPsidProperties(PsidHeader &psidHdr_, char *os)$/;"	f
getRamMask	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int getRamMask(void) { return RAMMask;}$/;"	f	class:TED
getRegister	thirdparty/soloud/include/soloud/soloud_vic.h	/^		unsigned char getRegister(int reg) const			{ return m_regs[reg]; }$/;"	f	class:SoLoud::Vic
getRelativePlaySpeed	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	float Soloud::getRelativePlaySpeed(handle aVoiceHandle)$/;"	f	class:SoLoud::Soloud
getReleaseDate	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	virtual char *getReleaseDate() {$/;"	f	class:CbmTune
getSP	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int getSP() { return SP; };$/;"	f	class:CPU
getST	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int getST() { return ST; };$/;"	f	class:CPU
getSampleRate	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int getSampleRate() { return sampleRate; };$/;"	f	class:TED
getSamplerate	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	float Soloud::getSamplerate(handle aVoiceHandle)$/;"	f	class:SoLoud::Soloud
getSidCard	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	SIDsound *getSidCard() { return sidCard; };$/;"	f	class:TED
getSize	thirdparty/soloud/src/audiosource/speech/darray.h	/^	int getSize() const { return mUsed; }$/;"	f	class:darray
getStreamTime	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	time Soloud::getStreamTime(handle aVoiceHandle)$/;"	f	class:SoLoud::Soloud
getSupportedAtom	thirdparty/glfw/src/x11_init.c	/^static Atom getSupportedAtom(Atom* supportedAtoms,$/;"	f	file:
getSystemCursorName	thirdparty/glfw/src/mir_window.c	/^static const char* getSystemCursorName(int shape)$/;"	f	file:
getTimeSinceLastReset	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^unsigned int TED::getTimeSinceLastReset()$/;"	f	class:TED
getVersion	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	unsigned int Soloud::getVersion() const$/;"	f	class:SoLoud::Soloud
getVoiceCount	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	unsigned int Soloud::getVoiceCount()$/;"	f	class:SoLoud::Soloud
getVoiceFromHandle	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	int Soloud::getVoiceFromHandle(handle aVoiceHandle) const$/;"	f	class:SoLoud::Soloud
getVolume	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	float Soloud::getVolume(handle aVoiceHandle)$/;"	f	class:SoLoud::Soloud
getWavData	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	static void getWavData(File * aFile, float * aBuffer, int aSamples, int aPitch, int aChannels, int aSrcChannels, int aBits)$/;"	f	namespace:SoLoud
getWave	thirdparty/soloud/src/core/soloud.cpp	/^	float * Soloud::getWave()$/;"	f	class:SoLoud::Soloud
getWave	thirdparty/soloud/src/core/soloud_bus.cpp	/^	float * Bus::getWave()$/;"	f	class:SoLoud::Bus
getWaveForm	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int getWaveForm(unsigned int channel) { return waveForm[channel]; }$/;"	f	class:TED
getWaveSample	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^inline int SIDsound::getWaveSample(SIDVoice &v)$/;"	f	class:SIDsound
getWaveSample	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	/^inline unsigned int TED::getWaveSample(unsigned int channel, unsigned int wave)$/;"	f	class:TED
getWaveSample	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^inline int SIDsound::getWaveSample(SIDVoice &v)$/;"	f	class:SIDsound
getWaveSample	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^inline unsigned int TED::getWaveSample(unsigned int channel, unsigned int wave)$/;"	f	class:TED
getWindowExStyle	thirdparty/glfw/src/win32_window.c	/^static DWORD getWindowExStyle(const _GLFWwindow* window)$/;"	f	file:
getWindowState	thirdparty/glfw/src/x11_window.c	/^static int getWindowState(_GLFWwindow* window)$/;"	f	file:
getWindowStyle	thirdparty/glfw/src/win32_window.c	/^static DWORD getWindowStyle(const _GLFWwindow* window)$/;"	f	file:
getWork	thirdparty/soloud/src/core/soloud_thread.cpp	/^		PoolTask * Pool::getWork()$/;"	f	class:SoLoud::Thread::Pool
getX	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int getX() { return X; };$/;"	f	class:CPU
getY	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int getY() { return Y; };$/;"	f	class:CPU
get_access	lib/nil/src/interface/data/common.hpp	/^  get_access(size_t *count, T **access)$/;"	f	struct:Nil::Data::Generic_data
get_app	app/perils/src/data/data.cpp	/^get_app()$/;"	f	namespace:Game_data
get_application_node	lib/roa/src/common/common.cpp	/^get_application_node()$/;"	f	namespace:ROA_detail
get_assets	app/perils/src/data/data.cpp	/^get_assets()$/;"	f	namespace:Game_data
get_audio_data	lib/nil/src/interface/data/audio.cpp	/^get_audio_data()$/;"	f	namespace:__anon29
get_bb_data	lib/nil/src/interface/data/bounding_box.cpp	/^get_bb_data()$/;"	f	namespace:__anon33
get_bits	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static uint32 get_bits(vorb *f, int n)$/;"	f	file:
get_bits	thirdparty/stb/include/stb/stb_vorbis.c	/^static uint32 get_bits(vorb *f, int n)$/;"	f	file:
get_bounding_box	lib/roa/src/interface/mesh.cpp	/^Mesh::get_bounding_box() const$/;"	f	class:ROA::Mesh
get_boundry_16	lib/lib/include/lib/alignment.hpp	/^get_boundry_16(const uintptr_t addr)$/;"	f	namespace:LIB_NS_NAME::align
get_camera_data	lib/nil/src/interface/data/camera.cpp	/^get_camera_data()$/;"	f	namespace:__anon31
get_channel_1f	lib/lib/include/lib/color.hpp	/^get_channel_1f(const rgba get_channel)$/;"	f	namespace:LIB_NS_NAME::color
get_channel_1i	lib/lib/include/lib/color.hpp	/^get_channel_1i(const rgba get_channel)$/;"	f	namespace:LIB_NS_NAME::color
get_channel_2f	lib/lib/include/lib/color.hpp	/^get_channel_2f(const rgba get_channel)$/;"	f	namespace:LIB_NS_NAME::color
get_channel_2i	lib/lib/include/lib/color.hpp	/^get_channel_2i(const rgba get_channel)$/;"	f	namespace:LIB_NS_NAME::color
get_channel_3f	lib/lib/include/lib/color.hpp	/^get_channel_3f(const rgba get_channel)$/;"	f	namespace:LIB_NS_NAME::color
get_channel_3i	lib/lib/include/lib/color.hpp	/^get_channel_3i(const rgba get_channel)$/;"	f	namespace:LIB_NS_NAME::color
get_channel_4f	lib/lib/include/lib/color.hpp	/^get_channel_4f(const rgba get_channel)$/;"	f	namespace:LIB_NS_NAME::color
get_channel_4i	lib/lib/include/lib/color.hpp	/^get_channel_4i(const rgba get_channel)$/;"	f	namespace:LIB_NS_NAME::color
get_child	lib/lib/include/lib/nyaml.hpp	/^node::get_child(const int i) const$/;"	f	class:LIB_NS_NAME::nyaml::node
get_child	lib/nil/src/interface/node.cpp	/^Node::get_child(const size_t i) const$/;"	f	class:Nil::Node
get_child	lib/roa/src/interface/object.cpp	/^Object::get_child(const size_t child) const$/;"	f	class:ROA::Object
get_child_count	lib/nil/src/interface/node.cpp	/^Node::get_child_count() const$/;"	f	class:Nil::Node
get_child_count	lib/roa/src/interface/object.cpp	/^Object::get_child_count() const$/;"	f	class:ROA::Object
get_clear_color	lib/roa/src/interface/camera.cpp	/^Camera::get_clear_color() const$/;"	f	class:ROA::Camera
get_color	lib/roa/src/interface/material.cpp	/^Material::get_color() const$/;"	f	class:ROA::Material
get_component	lib/roa/include/roa/object.hpp	/^  get_component()$/;"	f	class:ROA::Object
get_component	lib/roa/src/component/component_engine.cpp	/^get_component(const uint32_t object_id, const uint32_t rtti_id)$/;"	f	namespace:ROA_detail
get_constant_atten	lib/roa/src/interface/light.cpp	/^Light::get_constant_atten() const$/;"	f	class:ROA::Light
get_contents	lib/lib/include/lib/file.hpp	/^get_contents(const char *filename,$/;"	f	namespace:LIB_NS_NAME::file
get_ctx	lib/nau/src/nau.cpp	/^get_ctx()$/;"	f	namespace:__anon42
get_ctx	lib/roa/src/common/context.cpp	/^get_ctx()$/;"	f	namespace:ROA_detail
get_current_time	lib/lib/include/lib/timer.hpp	/^get_current_time()$/;"	f	namespace:LIB_NS_NAME::timer
get_data	lib/nil/src/interface/data/common.hpp	/^  get_data(const Nil::Node &node, T &out)$/;"	f	struct:Nil::Data::Generic_data
get_data	lib/roa/include/roa/object.hpp	/^  get_data() const$/;"	f	class:ROA::Object
get_data	lib/roa/include/roa/object.hpp	/^  get_data()$/;"	f	class:ROA::Object
get_data	lib/roa/include/roa/quaternion.hpp	/^  inline const float*   get_data() const { return data; }$/;"	f	class:ROA::final
get_data	lib/roa/include/roa/quaternion.hpp	/^  inline float*         get_data()       { return data; }$/;"	f	class:ROA::final
get_data	lib/roa/include/roa/vector3.hpp	/^  inline const float* get_data() const  { return data; }$/;"	f	class:ROA::final
get_data	lib/roa/include/roa/vector3.hpp	/^  inline float*       get_data()        { return data; }$/;"	f	class:ROA::final
get_data_helper	lib/nil/src/interface/data/common.hpp	/^get_data_helper($/;"	f	namespace:Nil::Data
get_data_type_id	lib/nil/src/interface/node.cpp	/^Node::get_data_type_id() const$/;"	f	class:Nil::Node
get_debug_lines	app/perils/src/data/data.cpp	/^get_debug_lines()$/;"	f	namespace:Game_data
get_delta	lib/lib/include/lib/timer.hpp	/^get_delta(const ::LIB_NS_NAME::milliseconds &start, const ::LIB_NS_NAME::milliseconds &end)$/;"	f	namespace:LIB_NS_NAME::timer
get_delta	lib/roa/src/interface/mouse.cpp	/^get_delta()$/;"	f	namespace:ROA::Mouse
get_delta_time	lib/roa/src/interface/time.cpp	/^get_delta_time()$/;"	f	namespace:ROA::Time
get_depth	lib/nil/src/graph/graph.cpp	/^get_depth(const uint64_t data)$/;"	f	namespace:Nil::Graph::__anon21
get_descendant_count	lib/nil/src/interface/node.cpp	/^Node::get_descendant_count() const$/;"	f	class:Nil::Node
get_developer_data	lib/nil/src/interface/data/developer.cpp	/^get_developer_data()$/;"	f	namespace:__anon27
get_dir_from_filepath	lib/lib/include/lib/string.hpp	/^get_dir_from_filepath(const std::string &filepath)$/;"	f	namespace:LIB_NS_NAME::string
get_dyn_obj	app/perils/src/game/dynamic_object.cpp	/^get_dyn_obj()$/;"	f	namespace:Dynamic_object
get_end	lib/roa/include/roa/ray.hpp	/^  inline Vector3      get_end() const   { return m_end; }$/;"	f	class:ROA::Ray
get_exponential_atten	lib/roa/src/interface/light.cpp	/^Light::get_exponential_atten() const$/;"	f	class:ROA::Light
get_exts	thirdparty/glfw/src/deps/glad.c	/^static int get_exts(void) {$/;"	f	file:
get_far_plane	lib/roa/src/interface/camera.cpp	/^Camera::get_far_plane() const$/;"	f	class:ROA::Camera
get_field_of_view	lib/roa/src/interface/camera.cpp	/^Camera::get_field_of_view() const$/;"	f	class:ROA::Camera
get_forward	lib/roa/src/interface/transform.cpp	/^Transform::get_forward() const$/;"	f	class:ROA::Transform
get_fragment_shader_code	lib/roa/src/interface/shader.cpp	/^Shader::get_fragment_shader_code() const$/;"	f	class:ROA::Shader
get_gamepad_data	lib/nil/src/interface/data/gamepad.cpp	/^get_gamepad_data()$/;"	f	namespace:__anon30
get_geometry_shader_code	lib/roa/src/interface/shader.cpp	/^Shader::get_geometry_shader_code() const$/;"	f	class:ROA::Shader
get_graph_data	lib/nil/src/internal_data/internal_data.cpp	/^get_graph_data()$/;"	f	namespace:Nil::Data
get_headers	lib/lib/include/lib/memory.hpp	/^get_headers()$/;"	f	namespace:LIB_NS_NAME::mem
get_height	lib/roa/src/interface/camera.cpp	/^Camera::get_height() const$/;"	f	class:ROA::Camera
get_id	lib/nil/src/interface/node.cpp	/^Node::get_id() const$/;"	f	class:Nil::Node
get_id	lib/roa/src/interface/resource.cpp	/^Resource::get_id() const$/;"	f	class:ROA::Resource
get_index	lib/roa/src/interface/mesh.cpp	/^Mesh::get_index() const$/;"	f	class:ROA::Mesh
get_index_count	lib/roa/src/interface/mesh.cpp	/^Mesh::get_index_count() const$/;"	f	class:ROA::Mesh
get_instance_id	lib/roa/src/interface/object.cpp	/^Object::get_instance_id() const$/;"	f	class:ROA::Object
get_instance_name	lib/roa/src/interface/resource.cpp	/^Resource::get_instance_name() const$/;"	f	class:ROA::Resource
get_kb_data	lib/nil/src/interface/data/keyboard.cpp	/^get_kb_data()$/;"	f	namespace:__anon28
get_keyboard	app/perils/src/data/data.cpp	/^get_keyboard()$/;"	f	namespace:Game_data
get_left	lib/roa/src/interface/transform.cpp	/^Transform::get_left() const$/;"	f	class:ROA::Transform
get_light_data	lib/nil/src/interface/data/light.cpp	/^get_light_data()$/;"	f	namespace:__anon25
get_linear_atten	lib/roa/src/interface/light.cpp	/^Light::get_linear_atten() const$/;"	f	class:ROA::Light
get_logic_data	lib/nil/src/interface/data/logic.cpp	/^get_logic_data()$/;"	f	namespace:__anon24
get_mat_data	lib/nil/src/interface/data/renderable.cpp	/^get_mat_data()$/;"	f	namespace:__anon26
get_mat_data	lib/nil/src/interface/data/renderable_text.cpp	/^get_mat_data()$/;"	f	namespace:__anon32
get_material	lib/roa/src/interface/renderable.cpp	/^Renderable::get_material() const$/;"	f	class:ROA::Renderable
get_max	lib/roa/src/interface/bounding_box.cpp	/^Bounding_box::get_max() const$/;"	f	class:ROA::Bounding_box
get_mesh	lib/roa/src/interface/renderable.cpp	/^Renderable::get_mesh() const$/;"	f	class:ROA::Renderable
get_milliseconds	lib/roa/src/interface/time.cpp	/^get_milliseconds()$/;"	f	namespace:ROA::Time
get_min	lib/roa/src/interface/bounding_box.cpp	/^Bounding_box::get_min() const$/;"	f	class:ROA::Bounding_box
get_mouse	app/perils/src/data/data.cpp	/^get_mouse()$/;"	f	namespace:Game_data
get_ms_data	lib/nil/src/interface/data/mouse.cpp	/^get_ms_data()$/;"	f	namespace:__anon23
get_name	lib/lib/include/lib/nyaml.hpp	/^node::get_name() const$/;"	f	class:LIB_NS_NAME::nyaml::node
get_name	lib/nil/src/interface/node.cpp	/^Node::get_name() const$/;"	f	class:Nil::Node
get_name	lib/roa/src/interface/object.cpp	/^Object::get_name() const$/;"	f	class:ROA::Object
get_nau_gl3	lib/nau/src/renderer/opengl3.cpp	/^get_nau_gl3()$/;"	f	namespace:__anon43
get_near_plane	lib/roa/src/interface/camera.cpp	/^Camera::get_near_plane() const$/;"	f	class:ROA::Camera
get_nil_data	lib/roa/src/common/common.hpp	/^get_nil_data(ROA::Object obj, T &out_data)$/;"	f	namespace:ROA_detail
get_node	lib/roa/src/common/common.cpp	/^get_node(ROA::Object obj)$/;"	f	namespace:ROA_detail
get_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^get_node_data(ROA::Object &obj, const ROA::Audio_player &data)$/;"	f	namespace:ROA_detail
get_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^get_node_data(ROA::Object &obj, const ROA::Bounding_box &data)$/;"	f	namespace:ROA_detail
get_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^get_node_data(ROA::Object &obj, const ROA::Camera &data)$/;"	f	namespace:ROA_detail
get_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^get_node_data(ROA::Object &obj, const ROA::Light &data)$/;"	f	namespace:ROA_detail
get_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^get_node_data(ROA::Object &obj, const ROA::Logic &data)$/;"	f	namespace:ROA_detail
get_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^get_node_data(ROA::Object &obj, const ROA::Renderable &data)$/;"	f	namespace:ROA_detail
get_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^get_node_data(ROA::Object &obj, const ROA::Transform &data)$/;"	f	namespace:ROA_detail
get_normals_vec3	lib/roa/src/interface/mesh.cpp	/^Mesh::get_normals_vec3() const$/;"	f	class:ROA::Mesh
get_number_of_children	lib/lib/include/lib/nyaml.hpp	/^node::get_number_of_children() const$/;"	f	class:LIB_NS_NAME::nyaml::node
get_object	lib/roa/src/interface/component.cpp	/^Component::get_object() const$/;"	f	class:ROA::Component
get_parent	lib/lib/include/lib/nyaml.hpp	/^node::get_parent() const$/;"	f	class:LIB_NS_NAME::nyaml::node
get_parent	lib/nil/src/interface/node.cpp	/^Node::get_parent() const$/;"	f	class:Nil::Node
get_parent	lib/roa/src/interface/object.cpp	/^Object::get_parent() const$/;"	f	class:ROA::Object
get_parent_id	lib/nil/src/graph/graph.cpp	/^get_parent_id(const uint64_t data)$/;"	f	namespace:Nil::Graph::__anon21
get_position	lib/roa/src/interface/mouse.cpp	/^get_position()$/;"	f	namespace:ROA::Mouse
get_position	lib/roa/src/interface/transform.cpp	/^Transform::get_position() const$/;"	f	class:ROA::Transform
get_positions_vec3	lib/roa/src/interface/mesh.cpp	/^Mesh::get_positions_vec3() const$/;"	f	class:ROA::Mesh
get_priority	lib/roa/src/interface/camera.cpp	/^Camera::get_priority() const$/;"	f	class:ROA::Camera
get_proc	thirdparty/opengl/src/gl3w.cpp	/^static GL3WglProc get_proc(const char *proc)$/;"	f	file:
get_resource_type_id	lib/roa/src/interface/resource.cpp	/^Resource::get_resource_type_id() const$/;"	f	class:ROA::Resource
get_resource_type_name	lib/roa/src/interface/resource.cpp	/^Resource::get_resource_type_name() const$/;"	f	class:ROA::Resource
get_rotation	lib/roa/src/interface/transform.cpp	/^Transform::get_rotation() const$/;"	f	class:ROA::Transform
get_rov_data	lib/rov/src/rov.cpp	/^get_rov_data()$/;"	f	namespace:__anon48
get_scale	lib/roa/src/interface/transform.cpp	/^Transform::get_scale() const$/;"	f	class:ROA::Transform
get_seek_page_info	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int get_seek_page_info(stb_vorbis *f, ProbedPage *z)$/;"	f	file:
get_seek_page_info	thirdparty/stb/include/stb/stb_vorbis.c	/^static int get_seek_page_info(stb_vorbis *f, ProbedPage *z)$/;"	f	file:
get_shader	lib/roa/src/interface/material.cpp	/^Material::get_shader() const$/;"	f	class:ROA::Material
get_shader_type	lib/roa/src/interface/shader.cpp	/^Shader::get_shader_type() const$/;"	f	class:ROA::Shader
get_source	lib/roa/src/interface/audio_player.cpp	/^Audio_player::get_source() const$/;"	f	class:ROA::Audio_player
get_start	lib/roa/include/roa/ray.hpp	/^  inline Vector3      get_start() const { return m_start; }$/;"	f	class:ROA::Ray
get_status	lib/roa/src/interface/resource.cpp	/^Resource::get_status() const$/;"	f	class:ROA::Resource
get_str_pool	lib/lib/include/lib/string_pool.hpp	/^get_str_pool()$/;"	f	namespace:__anon4
get_tag	lib/nil/src/interface/node.cpp	/^Node::get_tag(const size_t tag_index) const$/;"	f	class:Nil::Node
get_tag_count	lib/nil/src/interface/node.cpp	/^Node::get_tag_count() const$/;"	f	class:Nil::Node
get_text_between_tags	lib/lib/include/lib/string.hpp	/^get_text_between_tags(const char *start_tag,$/;"	f	namespace:LIB_NS_NAME::string
get_texture_coords_vec2	lib/roa/src/interface/mesh.cpp	/^Mesh::get_texture_coords_vec2() const$/;"	f	class:ROA::Mesh
get_trans_data	lib/nil/src/interface/data/transform.cpp	/^get_trans_data()$/;"	f	namespace:__anon34
get_triangle_count	lib/roa/src/interface/mesh.cpp	/^Mesh::get_triangle_count() const$/;"	f	class:ROA::Mesh
get_type	lib/roa/src/interface/light.cpp	/^Light::get_type() const$/;"	f	class:ROA::Light
get_type_id	lib/nil/src/interface/data/audio.cpp	/^get_type_id(const Audio &)$/;"	f	namespace:Nil::Data
get_type_id	lib/nil/src/interface/data/bounding_box.cpp	/^get_type_id(const Bounding_box &)$/;"	f	namespace:Nil::Data
get_type_id	lib/nil/src/interface/data/camera.cpp	/^get_type_id(const Camera &)$/;"	f	namespace:Nil::Data
get_type_id	lib/nil/src/interface/data/developer.cpp	/^get_type_id(const Developer &)$/;"	f	namespace:Nil::Data
get_type_id	lib/nil/src/interface/data/gamepad.cpp	/^get_type_id(const Gamepad &)$/;"	f	namespace:Nil::Data
get_type_id	lib/nil/src/interface/data/keyboard.cpp	/^get_type_id(const Keyboard &)$/;"	f	namespace:Nil::Data
get_type_id	lib/nil/src/interface/data/light.cpp	/^get_type_id(const Light &)$/;"	f	namespace:Nil::Data
get_type_id	lib/nil/src/interface/data/logic.cpp	/^get_type_id(const Logic &)$/;"	f	namespace:Nil::Data
get_type_id	lib/nil/src/interface/data/mouse.cpp	/^get_type_id(const Mouse &)$/;"	f	namespace:Nil::Data
get_type_id	lib/nil/src/interface/data/renderable.cpp	/^get_type_id(const Renderable &)$/;"	f	namespace:Nil::Data
get_type_id	lib/nil/src/interface/data/renderable_text.cpp	/^get_type_id(const Renderable_text &)$/;"	f	namespace:Nil::Data
get_type_id	lib/nil/src/interface/data/transform.cpp	/^get_type_id(const Transform &)$/;"	f	namespace:Nil::Data
get_type_id	lib/nil/src/interface/data/window.cpp	/^get_type_id(const Window &)$/;"	f	namespace:Nil::Data
get_type_id	lib/roa/src/interface/object.cpp	/^Object::get_type_id() const$/;"	f	class:ROA::Object
get_type_name	lib/nil/src/interface/data/audio.cpp	/^get_type_name(const Audio &)$/;"	f	namespace:Nil::Data
get_type_name	lib/nil/src/interface/data/bounding_box.cpp	/^get_type_name(const Bounding_box &in)$/;"	f	namespace:Nil::Data
get_type_name	lib/nil/src/interface/data/camera.cpp	/^get_type_name(const Camera &in)$/;"	f	namespace:Nil::Data
get_type_name	lib/nil/src/interface/data/developer.cpp	/^get_type_name(const Developer &in)$/;"	f	namespace:Nil::Data
get_type_name	lib/nil/src/interface/data/gamepad.cpp	/^get_type_name(const Gamepad &in)$/;"	f	namespace:Nil::Data
get_type_name	lib/nil/src/interface/data/keyboard.cpp	/^get_type_name(const Keyboard &in)$/;"	f	namespace:Nil::Data
get_type_name	lib/nil/src/interface/data/light.cpp	/^get_type_name(const Light &in)$/;"	f	namespace:Nil::Data
get_type_name	lib/nil/src/interface/data/logic.cpp	/^get_type_name(const Logic &in)$/;"	f	namespace:Nil::Data
get_type_name	lib/nil/src/interface/data/mouse.cpp	/^get_type_name(const Mouse &in)$/;"	f	namespace:Nil::Data
get_type_name	lib/nil/src/interface/data/renderable.cpp	/^get_type_name(const Renderable &in)$/;"	f	namespace:Nil::Data
get_type_name	lib/nil/src/interface/data/renderable_text.cpp	/^get_type_name(const Renderable_text &in)$/;"	f	namespace:Nil::Data
get_type_name	lib/nil/src/interface/data/transform.cpp	/^get_type_name(const Transform &in)$/;"	f	namespace:Nil::Data
get_type_name	lib/nil/src/interface/data/window.cpp	/^get_type_name(const Window &in)$/;"	f	namespace:Nil::Data
get_type_name	lib/roa/src/interface/object.cpp	/^Object::get_type_name() const$/;"	f	class:ROA::Object
get_uint	lib/roa/src/interface/color.cpp	/^Color::get_uint() const$/;"	f	class:ROA::Color
get_up	lib/roa/src/interface/transform.cpp	/^Transform::get_up() const$/;"	f	class:ROA::Transform
get_user_data	lib/nil/src/interface/node.cpp	/^Node::get_user_data() const$/;"	f	class:Nil::Node
get_user_data	lib/roa/src/interface/object.cpp	/^Object::get_user_data() const$/;"	f	class:ROA::Object
get_value	lib/lib/include/lib/nyaml.hpp	/^node::get_value() const$/;"	f	class:LIB_NS_NAME::nyaml::node
get_vec3_origin	lib/math/include/math/geometry/misc.hpp	/^get_vec3_origin(const float xyz_verts[], const size_t vert_count)$/;"	f
get_vertex_count	lib/roa/src/interface/mesh.cpp	/^Mesh::get_vertex_count() const$/;"	f	class:ROA::Mesh
get_vertex_shader_code	lib/roa/src/interface/shader.cpp	/^Shader::get_vertex_shader_code() const$/;"	f	class:ROA::Shader
get_volume	lib/roa/src/interface/audio_player.cpp	/^Audio_player::get_volume() const$/;"	f	class:ROA::Audio_player
get_w	lib/math/include/math/quat/quat.hpp	/^inline float            get_w(const quat quat) { return quat_get_w(quat); }$/;"	f
get_w	lib/math/include/math/vec/vec4.hpp	/^get_w(const vec4 vec)$/;"	f
get_w	lib/roa/include/roa/quaternion.hpp	/^  inline float          get_w() const { return data[3]; }$/;"	f	class:ROA::final
get_width	lib/roa/src/interface/camera.cpp	/^Camera::get_width() const$/;"	f	class:ROA::Camera
get_win_data	lib/nil/src/interface/data/window.cpp	/^get_win_data()$/;"	f	namespace:__anon35
get_window	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static float *get_window(vorb *f, int len)$/;"	f	file:
get_window	thirdparty/stb/include/stb/stb_vorbis.c	/^static float *get_window(vorb *f, int len)$/;"	f	file:
get_world_forward	lib/roa/src/interface/transform.cpp	/^Transform::get_world_forward() const$/;"	f	class:ROA::Transform
get_world_fwd	app/perils/src/data/data.cpp	/^get_world_fwd()$/;"	f	namespace:Game_data
get_world_left	app/perils/src/data/data.cpp	/^get_world_left()$/;"	f	namespace:Game_data
get_world_left	lib/roa/src/interface/transform.cpp	/^Transform::get_world_left() const$/;"	f	class:ROA::Transform
get_world_position	lib/roa/src/interface/transform.cpp	/^Transform::get_world_position() const$/;"	f	class:ROA::Transform
get_world_rotation	lib/roa/src/interface/transform.cpp	/^Transform::get_world_rotation() const$/;"	f	class:ROA::Transform
get_world_scale	lib/roa/src/interface/transform.cpp	/^Transform::get_world_scale() const$/;"	f	class:ROA::Transform
get_world_up	app/perils/src/data/data.cpp	/^get_world_up()$/;"	f	namespace:Game_data
get_world_up	lib/roa/src/interface/transform.cpp	/^Transform::get_world_up() const$/;"	f	class:ROA::Transform
get_x	lib/math/include/math/quat/quat.hpp	/^inline float            get_x(const quat quat) { return quat_get_x(quat); }$/;"	f
get_x	lib/math/include/math/vec/vec2.hpp	/^get_x(const vec2 vec)$/;"	f
get_x	lib/math/include/math/vec/vec3.hpp	/^get_x(const vec3 vec)$/;"	f
get_x	lib/math/include/math/vec/vec4.hpp	/^get_x(const vec4 vec)$/;"	f
get_x	lib/roa/include/roa/quaternion.hpp	/^  inline float          get_x() const { return data[0]; }$/;"	f	class:ROA::final
get_x	lib/roa/include/roa/vector3.hpp	/^  inline float        get_x() const { return data[0]; };$/;"	f	class:ROA::final
get_y	lib/math/include/math/quat/quat.hpp	/^inline float            get_y(const quat quat) { return quat_get_y(quat); }$/;"	f
get_y	lib/math/include/math/vec/vec2.hpp	/^get_y(const vec2 vec)$/;"	f
get_y	lib/math/include/math/vec/vec3.hpp	/^get_y(const vec3 vec)$/;"	f
get_y	lib/math/include/math/vec/vec4.hpp	/^get_y(const vec4 vec)$/;"	f
get_y	lib/roa/include/roa/quaternion.hpp	/^  inline float          get_y() const { return data[1]; }$/;"	f	class:ROA::final
get_y	lib/roa/include/roa/vector3.hpp	/^  inline float        get_y() const { return data[1]; };$/;"	f	class:ROA::final
get_z	lib/math/include/math/quat/quat.hpp	/^inline float            get_z(const quat quat) { return quat_get_z(quat); }$/;"	f
get_z	lib/math/include/math/vec/vec3.hpp	/^get_z(const vec3 vec)$/;"	f
get_z	lib/math/include/math/vec/vec4.hpp	/^get_z(const vec4 vec)$/;"	f
get_z	lib/roa/include/roa/quaternion.hpp	/^  inline float          get_z() const { return data[2]; }$/;"	f	class:ROA::final
get_z	lib/roa/include/roa/vector3.hpp	/^  inline float        get_z() const { return data[2]; };$/;"	f	class:ROA::final
getblock32	thirdparty/remotery/src/Remotery.c	/^static rmtU32 getblock32(const rmtU32* p, int i)$/;"	f	file:
getcins	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^unsigned int CPU::getcins()$/;"	f	class:CPU
getcycle	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int getcycle() { return cycle; };$/;"	f	class:CPU
getdllproc	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^static void *getdllproc(HMODULE dllhandle, const char *procname)$/;"	f	file:
getdllproc	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^static void *getdllproc(void* dllhandle, const char *procname)$/;"	f	file:
getn	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int getn(vorb *z, uint8 *data, int n)$/;"	f	file:
getn	thirdparty/stb/include/stb/stb_vorbis.c	/^static int getn(vorb *z, uint8 *data, int n)$/;"	f	file:
getnextins	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int getnextins() { return nextins; };$/;"	f	class:CPU
getopt	thirdparty/glfw/src/deps/getopt.c	/^int getopt(int argc, char* const argv[], const char* optstring) {$/;"	f
getopt_long	thirdparty/glfw/src/deps/getopt.c	/^int getopt_long(int argc, char* const argv[], const char* optstring,$/;"	f
getptr	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int getptr() { return ptr; };$/;"	f	class:CPU
gl3wActiveProgramEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLACTIVEPROGRAMEXTPROC                            gl3wActiveProgramEXT;$/;"	v
gl3wActiveShaderProgram	thirdparty/opengl/src/gl3w.cpp	/^PFNGLACTIVESHADERPROGRAMPROC                         gl3wActiveShaderProgram;$/;"	v
gl3wActiveTexture	thirdparty/opengl/src/gl3w.cpp	/^PFNGLACTIVETEXTUREPROC                               gl3wActiveTexture;$/;"	v
gl3wApplyFramebufferAttachmentCMAAINTEL	thirdparty/opengl/src/gl3w.cpp	/^PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC         gl3wApplyFramebufferAttachmentCMAAINTEL;$/;"	v
gl3wAttachShader	thirdparty/opengl/src/gl3w.cpp	/^PFNGLATTACHSHADERPROC                                gl3wAttachShader;$/;"	v
gl3wBeginConditionalRender	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBEGINCONDITIONALRENDERPROC                      gl3wBeginConditionalRender;$/;"	v
gl3wBeginConditionalRenderNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBEGINCONDITIONALRENDERNVPROC                    gl3wBeginConditionalRenderNV;$/;"	v
gl3wBeginPerfMonitorAMD	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBEGINPERFMONITORAMDPROC                         gl3wBeginPerfMonitorAMD;$/;"	v
gl3wBeginPerfQueryINTEL	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBEGINPERFQUERYINTELPROC                         gl3wBeginPerfQueryINTEL;$/;"	v
gl3wBeginQuery	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBEGINQUERYPROC                                  gl3wBeginQuery;$/;"	v
gl3wBeginQueryIndexed	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBEGINQUERYINDEXEDPROC                           gl3wBeginQueryIndexed;$/;"	v
gl3wBeginTransformFeedback	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBEGINTRANSFORMFEEDBACKPROC                      gl3wBeginTransformFeedback;$/;"	v
gl3wBindAttribLocation	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDATTRIBLOCATIONPROC                          gl3wBindAttribLocation;$/;"	v
gl3wBindBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDBUFFERPROC                                  gl3wBindBuffer;$/;"	v
gl3wBindBufferBase	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDBUFFERBASEPROC                              gl3wBindBufferBase;$/;"	v
gl3wBindBufferRange	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDBUFFERRANGEPROC                             gl3wBindBufferRange;$/;"	v
gl3wBindBuffersBase	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDBUFFERSBASEPROC                             gl3wBindBuffersBase;$/;"	v
gl3wBindBuffersRange	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDBUFFERSRANGEPROC                            gl3wBindBuffersRange;$/;"	v
gl3wBindFragDataLocation	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDFRAGDATALOCATIONPROC                        gl3wBindFragDataLocation;$/;"	v
gl3wBindFragDataLocationIndexed	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDFRAGDATALOCATIONINDEXEDPROC                 gl3wBindFragDataLocationIndexed;$/;"	v
gl3wBindFramebuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDFRAMEBUFFERPROC                             gl3wBindFramebuffer;$/;"	v
gl3wBindImageTexture	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDIMAGETEXTUREPROC                            gl3wBindImageTexture;$/;"	v
gl3wBindImageTextures	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDIMAGETEXTURESPROC                           gl3wBindImageTextures;$/;"	v
gl3wBindMultiTextureEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDMULTITEXTUREEXTPROC                         gl3wBindMultiTextureEXT;$/;"	v
gl3wBindProgramPipeline	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDPROGRAMPIPELINEPROC                         gl3wBindProgramPipeline;$/;"	v
gl3wBindRenderbuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDRENDERBUFFERPROC                            gl3wBindRenderbuffer;$/;"	v
gl3wBindSampler	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDSAMPLERPROC                                 gl3wBindSampler;$/;"	v
gl3wBindSamplers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDSAMPLERSPROC                                gl3wBindSamplers;$/;"	v
gl3wBindTexture	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDTEXTUREPROC                                 gl3wBindTexture;$/;"	v
gl3wBindTextureUnit	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDTEXTUREUNITPROC                             gl3wBindTextureUnit;$/;"	v
gl3wBindTextures	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDTEXTURESPROC                                gl3wBindTextures;$/;"	v
gl3wBindTransformFeedback	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDTRANSFORMFEEDBACKPROC                       gl3wBindTransformFeedback;$/;"	v
gl3wBindVertexArray	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDVERTEXARRAYPROC                             gl3wBindVertexArray;$/;"	v
gl3wBindVertexBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDVERTEXBUFFERPROC                            gl3wBindVertexBuffer;$/;"	v
gl3wBindVertexBuffers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBINDVERTEXBUFFERSPROC                           gl3wBindVertexBuffers;$/;"	v
gl3wBlendBarrierKHR	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDBARRIERKHRPROC                             gl3wBlendBarrierKHR;$/;"	v
gl3wBlendBarrierNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDBARRIERNVPROC                              gl3wBlendBarrierNV;$/;"	v
gl3wBlendColor	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDCOLORPROC                                  gl3wBlendColor;$/;"	v
gl3wBlendEquation	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDEQUATIONPROC                               gl3wBlendEquation;$/;"	v
gl3wBlendEquationSeparate	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDEQUATIONSEPARATEPROC                       gl3wBlendEquationSeparate;$/;"	v
gl3wBlendEquationSeparatei	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDEQUATIONSEPARATEIPROC                      gl3wBlendEquationSeparatei;$/;"	v
gl3wBlendEquationSeparateiARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDEQUATIONSEPARATEIARBPROC                   gl3wBlendEquationSeparateiARB;$/;"	v
gl3wBlendEquationi	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDEQUATIONIPROC                              gl3wBlendEquationi;$/;"	v
gl3wBlendEquationiARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDEQUATIONIARBPROC                           gl3wBlendEquationiARB;$/;"	v
gl3wBlendFunc	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDFUNCPROC                                   gl3wBlendFunc;$/;"	v
gl3wBlendFuncSeparate	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDFUNCSEPARATEPROC                           gl3wBlendFuncSeparate;$/;"	v
gl3wBlendFuncSeparatei	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDFUNCSEPARATEIPROC                          gl3wBlendFuncSeparatei;$/;"	v
gl3wBlendFuncSeparateiARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDFUNCSEPARATEIARBPROC                       gl3wBlendFuncSeparateiARB;$/;"	v
gl3wBlendFunci	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDFUNCIPROC                                  gl3wBlendFunci;$/;"	v
gl3wBlendFunciARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDFUNCIARBPROC                               gl3wBlendFunciARB;$/;"	v
gl3wBlendParameteriNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLENDPARAMETERINVPROC                           gl3wBlendParameteriNV;$/;"	v
gl3wBlitFramebuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLITFRAMEBUFFERPROC                             gl3wBlitFramebuffer;$/;"	v
gl3wBlitNamedFramebuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBLITNAMEDFRAMEBUFFERPROC                        gl3wBlitNamedFramebuffer;$/;"	v
gl3wBufferAddressRangeNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBUFFERADDRESSRANGENVPROC                        gl3wBufferAddressRangeNV;$/;"	v
gl3wBufferData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBUFFERDATAPROC                                  gl3wBufferData;$/;"	v
gl3wBufferPageCommitmentARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBUFFERPAGECOMMITMENTARBPROC                     gl3wBufferPageCommitmentARB;$/;"	v
gl3wBufferStorage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBUFFERSTORAGEPROC                               gl3wBufferStorage;$/;"	v
gl3wBufferSubData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLBUFFERSUBDATAPROC                               gl3wBufferSubData;$/;"	v
gl3wCallCommandListNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCALLCOMMANDLISTNVPROC                           gl3wCallCommandListNV;$/;"	v
gl3wCheckFramebufferStatus	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCHECKFRAMEBUFFERSTATUSPROC                      gl3wCheckFramebufferStatus;$/;"	v
gl3wCheckNamedFramebufferStatus	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC                 gl3wCheckNamedFramebufferStatus;$/;"	v
gl3wCheckNamedFramebufferStatusEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC              gl3wCheckNamedFramebufferStatusEXT;$/;"	v
gl3wClampColor	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLAMPCOLORPROC                                  gl3wClampColor;$/;"	v
gl3wClear	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARPROC                                       gl3wClear;$/;"	v
gl3wClearBufferData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARBUFFERDATAPROC                             gl3wClearBufferData;$/;"	v
gl3wClearBufferSubData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARBUFFERSUBDATAPROC                          gl3wClearBufferSubData;$/;"	v
gl3wClearBufferfi	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARBUFFERFIPROC                               gl3wClearBufferfi;$/;"	v
gl3wClearBufferfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARBUFFERFVPROC                               gl3wClearBufferfv;$/;"	v
gl3wClearBufferiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARBUFFERIVPROC                               gl3wClearBufferiv;$/;"	v
gl3wClearBufferuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARBUFFERUIVPROC                              gl3wClearBufferuiv;$/;"	v
gl3wClearColor	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARCOLORPROC                                  gl3wClearColor;$/;"	v
gl3wClearDepth	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARDEPTHPROC                                  gl3wClearDepth;$/;"	v
gl3wClearDepthf	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARDEPTHFPROC                                 gl3wClearDepthf;$/;"	v
gl3wClearNamedBufferData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARNAMEDBUFFERDATAPROC                        gl3wClearNamedBufferData;$/;"	v
gl3wClearNamedBufferDataEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARNAMEDBUFFERDATAEXTPROC                     gl3wClearNamedBufferDataEXT;$/;"	v
gl3wClearNamedBufferSubData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARNAMEDBUFFERSUBDATAPROC                     gl3wClearNamedBufferSubData;$/;"	v
gl3wClearNamedBufferSubDataEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC                  gl3wClearNamedBufferSubDataEXT;$/;"	v
gl3wClearNamedFramebufferfi	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARNAMEDFRAMEBUFFERFIPROC                     gl3wClearNamedFramebufferfi;$/;"	v
gl3wClearNamedFramebufferfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARNAMEDFRAMEBUFFERFVPROC                     gl3wClearNamedFramebufferfv;$/;"	v
gl3wClearNamedFramebufferiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARNAMEDFRAMEBUFFERIVPROC                     gl3wClearNamedFramebufferiv;$/;"	v
gl3wClearNamedFramebufferuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC                    gl3wClearNamedFramebufferuiv;$/;"	v
gl3wClearStencil	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARSTENCILPROC                                gl3wClearStencil;$/;"	v
gl3wClearTexImage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARTEXIMAGEPROC                               gl3wClearTexImage;$/;"	v
gl3wClearTexSubImage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLEARTEXSUBIMAGEPROC                            gl3wClearTexSubImage;$/;"	v
gl3wClientAttribDefaultEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLIENTATTRIBDEFAULTEXTPROC                      gl3wClientAttribDefaultEXT;$/;"	v
gl3wClientWaitSync	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLIENTWAITSYNCPROC                              gl3wClientWaitSync;$/;"	v
gl3wClipControl	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCLIPCONTROLPROC                                 gl3wClipControl;$/;"	v
gl3wColorFormatNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOLORFORMATNVPROC                               gl3wColorFormatNV;$/;"	v
gl3wColorMask	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOLORMASKPROC                                   gl3wColorMask;$/;"	v
gl3wColorMaski	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOLORMASKIPROC                                  gl3wColorMaski;$/;"	v
gl3wCommandListSegmentsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMMANDLISTSEGMENTSNVPROC                       gl3wCommandListSegmentsNV;$/;"	v
gl3wCompileCommandListNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPILECOMMANDLISTNVPROC                        gl3wCompileCommandListNV;$/;"	v
gl3wCompileShader	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPILESHADERPROC                               gl3wCompileShader;$/;"	v
gl3wCompileShaderIncludeARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPILESHADERINCLUDEARBPROC                     gl3wCompileShaderIncludeARB;$/;"	v
gl3wCompressedMultiTexImage1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC                gl3wCompressedMultiTexImage1DEXT;$/;"	v
gl3wCompressedMultiTexImage2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC                gl3wCompressedMultiTexImage2DEXT;$/;"	v
gl3wCompressedMultiTexImage3DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC                gl3wCompressedMultiTexImage3DEXT;$/;"	v
gl3wCompressedMultiTexSubImage1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC             gl3wCompressedMultiTexSubImage1DEXT;$/;"	v
gl3wCompressedMultiTexSubImage2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC             gl3wCompressedMultiTexSubImage2DEXT;$/;"	v
gl3wCompressedMultiTexSubImage3DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC             gl3wCompressedMultiTexSubImage3DEXT;$/;"	v
gl3wCompressedTexImage1D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXIMAGE1DPROC                        gl3wCompressedTexImage1D;$/;"	v
gl3wCompressedTexImage2D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXIMAGE2DPROC                        gl3wCompressedTexImage2D;$/;"	v
gl3wCompressedTexImage3D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXIMAGE3DPROC                        gl3wCompressedTexImage3D;$/;"	v
gl3wCompressedTexSubImage1D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC                     gl3wCompressedTexSubImage1D;$/;"	v
gl3wCompressedTexSubImage2D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC                     gl3wCompressedTexSubImage2D;$/;"	v
gl3wCompressedTexSubImage3D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC                     gl3wCompressedTexSubImage3D;$/;"	v
gl3wCompressedTextureImage1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC                 gl3wCompressedTextureImage1DEXT;$/;"	v
gl3wCompressedTextureImage2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC                 gl3wCompressedTextureImage2DEXT;$/;"	v
gl3wCompressedTextureImage3DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC                 gl3wCompressedTextureImage3DEXT;$/;"	v
gl3wCompressedTextureSubImage1D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC                 gl3wCompressedTextureSubImage1D;$/;"	v
gl3wCompressedTextureSubImage1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC              gl3wCompressedTextureSubImage1DEXT;$/;"	v
gl3wCompressedTextureSubImage2D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC                 gl3wCompressedTextureSubImage2D;$/;"	v
gl3wCompressedTextureSubImage2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC              gl3wCompressedTextureSubImage2DEXT;$/;"	v
gl3wCompressedTextureSubImage3D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC                 gl3wCompressedTextureSubImage3D;$/;"	v
gl3wCompressedTextureSubImage3DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC              gl3wCompressedTextureSubImage3DEXT;$/;"	v
gl3wConservativeRasterParameterfNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCONSERVATIVERASTERPARAMETERFNVPROC              gl3wConservativeRasterParameterfNV;$/;"	v
gl3wConservativeRasterParameteriNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCONSERVATIVERASTERPARAMETERINVPROC              gl3wConservativeRasterParameteriNV;$/;"	v
gl3wCopyBufferSubData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYBUFFERSUBDATAPROC                           gl3wCopyBufferSubData;$/;"	v
gl3wCopyImageSubData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYIMAGESUBDATAPROC                            gl3wCopyImageSubData;$/;"	v
gl3wCopyMultiTexImage1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYMULTITEXIMAGE1DEXTPROC                      gl3wCopyMultiTexImage1DEXT;$/;"	v
gl3wCopyMultiTexImage2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYMULTITEXIMAGE2DEXTPROC                      gl3wCopyMultiTexImage2DEXT;$/;"	v
gl3wCopyMultiTexSubImage1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC                   gl3wCopyMultiTexSubImage1DEXT;$/;"	v
gl3wCopyMultiTexSubImage2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC                   gl3wCopyMultiTexSubImage2DEXT;$/;"	v
gl3wCopyMultiTexSubImage3DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC                   gl3wCopyMultiTexSubImage3DEXT;$/;"	v
gl3wCopyNamedBufferSubData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYNAMEDBUFFERSUBDATAPROC                      gl3wCopyNamedBufferSubData;$/;"	v
gl3wCopyPathNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYPATHNVPROC                                  gl3wCopyPathNV;$/;"	v
gl3wCopyTexImage1D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYTEXIMAGE1DPROC                              gl3wCopyTexImage1D;$/;"	v
gl3wCopyTexImage2D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYTEXIMAGE2DPROC                              gl3wCopyTexImage2D;$/;"	v
gl3wCopyTexSubImage1D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYTEXSUBIMAGE1DPROC                           gl3wCopyTexSubImage1D;$/;"	v
gl3wCopyTexSubImage2D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYTEXSUBIMAGE2DPROC                           gl3wCopyTexSubImage2D;$/;"	v
gl3wCopyTexSubImage3D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYTEXSUBIMAGE3DPROC                           gl3wCopyTexSubImage3D;$/;"	v
gl3wCopyTextureImage1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYTEXTUREIMAGE1DEXTPROC                       gl3wCopyTextureImage1DEXT;$/;"	v
gl3wCopyTextureImage2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYTEXTUREIMAGE2DEXTPROC                       gl3wCopyTextureImage2DEXT;$/;"	v
gl3wCopyTextureSubImage1D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYTEXTURESUBIMAGE1DPROC                       gl3wCopyTextureSubImage1D;$/;"	v
gl3wCopyTextureSubImage1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC                    gl3wCopyTextureSubImage1DEXT;$/;"	v
gl3wCopyTextureSubImage2D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYTEXTURESUBIMAGE2DPROC                       gl3wCopyTextureSubImage2D;$/;"	v
gl3wCopyTextureSubImage2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC                    gl3wCopyTextureSubImage2DEXT;$/;"	v
gl3wCopyTextureSubImage3D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYTEXTURESUBIMAGE3DPROC                       gl3wCopyTextureSubImage3D;$/;"	v
gl3wCopyTextureSubImage3DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC                    gl3wCopyTextureSubImage3DEXT;$/;"	v
gl3wCoverFillPathInstancedNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOVERFILLPATHINSTANCEDNVPROC                    gl3wCoverFillPathInstancedNV;$/;"	v
gl3wCoverFillPathNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOVERFILLPATHNVPROC                             gl3wCoverFillPathNV;$/;"	v
gl3wCoverStrokePathInstancedNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOVERSTROKEPATHINSTANCEDNVPROC                  gl3wCoverStrokePathInstancedNV;$/;"	v
gl3wCoverStrokePathNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOVERSTROKEPATHNVPROC                           gl3wCoverStrokePathNV;$/;"	v
gl3wCoverageModulationNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOVERAGEMODULATIONNVPROC                        gl3wCoverageModulationNV;$/;"	v
gl3wCoverageModulationTableNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCOVERAGEMODULATIONTABLENVPROC                   gl3wCoverageModulationTableNV;$/;"	v
gl3wCreateBuffers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATEBUFFERSPROC                               gl3wCreateBuffers;$/;"	v
gl3wCreateCommandListsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATECOMMANDLISTSNVPROC                        gl3wCreateCommandListsNV;$/;"	v
gl3wCreateFramebuffers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATEFRAMEBUFFERSPROC                          gl3wCreateFramebuffers;$/;"	v
gl3wCreatePerfQueryINTEL	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATEPERFQUERYINTELPROC                        gl3wCreatePerfQueryINTEL;$/;"	v
gl3wCreateProgram	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATEPROGRAMPROC                               gl3wCreateProgram;$/;"	v
gl3wCreateProgramPipelines	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATEPROGRAMPIPELINESPROC                      gl3wCreateProgramPipelines;$/;"	v
gl3wCreateQueries	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATEQUERIESPROC                               gl3wCreateQueries;$/;"	v
gl3wCreateRenderbuffers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATERENDERBUFFERSPROC                         gl3wCreateRenderbuffers;$/;"	v
gl3wCreateSamplers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATESAMPLERSPROC                              gl3wCreateSamplers;$/;"	v
gl3wCreateShader	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATESHADERPROC                                gl3wCreateShader;$/;"	v
gl3wCreateShaderProgramEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATESHADERPROGRAMEXTPROC                      gl3wCreateShaderProgramEXT;$/;"	v
gl3wCreateShaderProgramv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATESHADERPROGRAMVPROC                        gl3wCreateShaderProgramv;$/;"	v
gl3wCreateStatesNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATESTATESNVPROC                              gl3wCreateStatesNV;$/;"	v
gl3wCreateSyncFromCLeventARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATESYNCFROMCLEVENTARBPROC                    gl3wCreateSyncFromCLeventARB;$/;"	v
gl3wCreateTextures	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATETEXTURESPROC                              gl3wCreateTextures;$/;"	v
gl3wCreateTransformFeedbacks	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATETRANSFORMFEEDBACKSPROC                    gl3wCreateTransformFeedbacks;$/;"	v
gl3wCreateVertexArrays	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCREATEVERTEXARRAYSPROC                          gl3wCreateVertexArrays;$/;"	v
gl3wCullFace	thirdparty/opengl/src/gl3w.cpp	/^PFNGLCULLFACEPROC                                    gl3wCullFace;$/;"	v
gl3wDebugMessageCallback	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDEBUGMESSAGECALLBACKPROC                        gl3wDebugMessageCallback;$/;"	v
gl3wDebugMessageCallbackARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDEBUGMESSAGECALLBACKARBPROC                     gl3wDebugMessageCallbackARB;$/;"	v
gl3wDebugMessageControl	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDEBUGMESSAGECONTROLPROC                         gl3wDebugMessageControl;$/;"	v
gl3wDebugMessageControlARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDEBUGMESSAGECONTROLARBPROC                      gl3wDebugMessageControlARB;$/;"	v
gl3wDebugMessageInsert	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDEBUGMESSAGEINSERTPROC                          gl3wDebugMessageInsert;$/;"	v
gl3wDebugMessageInsertARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDEBUGMESSAGEINSERTARBPROC                       gl3wDebugMessageInsertARB;$/;"	v
gl3wDeleteBuffers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETEBUFFERSPROC                               gl3wDeleteBuffers;$/;"	v
gl3wDeleteCommandListsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETECOMMANDLISTSNVPROC                        gl3wDeleteCommandListsNV;$/;"	v
gl3wDeleteFramebuffers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETEFRAMEBUFFERSPROC                          gl3wDeleteFramebuffers;$/;"	v
gl3wDeleteNamedStringARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETENAMEDSTRINGARBPROC                        gl3wDeleteNamedStringARB;$/;"	v
gl3wDeletePathsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETEPATHSNVPROC                               gl3wDeletePathsNV;$/;"	v
gl3wDeletePerfMonitorsAMD	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETEPERFMONITORSAMDPROC                       gl3wDeletePerfMonitorsAMD;$/;"	v
gl3wDeletePerfQueryINTEL	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETEPERFQUERYINTELPROC                        gl3wDeletePerfQueryINTEL;$/;"	v
gl3wDeleteProgram	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETEPROGRAMPROC                               gl3wDeleteProgram;$/;"	v
gl3wDeleteProgramPipelines	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETEPROGRAMPIPELINESPROC                      gl3wDeleteProgramPipelines;$/;"	v
gl3wDeleteQueries	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETEQUERIESPROC                               gl3wDeleteQueries;$/;"	v
gl3wDeleteRenderbuffers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETERENDERBUFFERSPROC                         gl3wDeleteRenderbuffers;$/;"	v
gl3wDeleteSamplers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETESAMPLERSPROC                              gl3wDeleteSamplers;$/;"	v
gl3wDeleteShader	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETESHADERPROC                                gl3wDeleteShader;$/;"	v
gl3wDeleteStatesNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETESTATESNVPROC                              gl3wDeleteStatesNV;$/;"	v
gl3wDeleteSync	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETESYNCPROC                                  gl3wDeleteSync;$/;"	v
gl3wDeleteTextures	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETETEXTURESPROC                              gl3wDeleteTextures;$/;"	v
gl3wDeleteTransformFeedbacks	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETETRANSFORMFEEDBACKSPROC                    gl3wDeleteTransformFeedbacks;$/;"	v
gl3wDeleteVertexArrays	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDELETEVERTEXARRAYSPROC                          gl3wDeleteVertexArrays;$/;"	v
gl3wDepthFunc	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDEPTHFUNCPROC                                   gl3wDepthFunc;$/;"	v
gl3wDepthMask	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDEPTHMASKPROC                                   gl3wDepthMask;$/;"	v
gl3wDepthRange	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDEPTHRANGEPROC                                  gl3wDepthRange;$/;"	v
gl3wDepthRangeArrayv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDEPTHRANGEARRAYVPROC                            gl3wDepthRangeArrayv;$/;"	v
gl3wDepthRangeIndexed	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDEPTHRANGEINDEXEDPROC                           gl3wDepthRangeIndexed;$/;"	v
gl3wDepthRangef	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDEPTHRANGEFPROC                                 gl3wDepthRangef;$/;"	v
gl3wDetachShader	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDETACHSHADERPROC                                gl3wDetachShader;$/;"	v
gl3wDisable	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDISABLEPROC                                     gl3wDisable;$/;"	v
gl3wDisableClientStateIndexedEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC                gl3wDisableClientStateIndexedEXT;$/;"	v
gl3wDisableClientStateiEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDISABLECLIENTSTATEIEXTPROC                      gl3wDisableClientStateiEXT;$/;"	v
gl3wDisableIndexedEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDISABLEINDEXEDEXTPROC                           gl3wDisableIndexedEXT;$/;"	v
gl3wDisableVertexArrayAttrib	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDISABLEVERTEXARRAYATTRIBPROC                    gl3wDisableVertexArrayAttrib;$/;"	v
gl3wDisableVertexArrayAttribEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC                 gl3wDisableVertexArrayAttribEXT;$/;"	v
gl3wDisableVertexArrayEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDISABLEVERTEXARRAYEXTPROC                       gl3wDisableVertexArrayEXT;$/;"	v
gl3wDisableVertexAttribArray	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDISABLEVERTEXATTRIBARRAYPROC                    gl3wDisableVertexAttribArray;$/;"	v
gl3wDisablei	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDISABLEIPROC                                    gl3wDisablei;$/;"	v
gl3wDispatchCompute	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDISPATCHCOMPUTEPROC                             gl3wDispatchCompute;$/;"	v
gl3wDispatchComputeGroupSizeARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC                 gl3wDispatchComputeGroupSizeARB;$/;"	v
gl3wDispatchComputeIndirect	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDISPATCHCOMPUTEINDIRECTPROC                     gl3wDispatchComputeIndirect;$/;"	v
gl3wDrawArrays	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWARRAYSPROC                                  gl3wDrawArrays;$/;"	v
gl3wDrawArraysIndirect	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWARRAYSINDIRECTPROC                          gl3wDrawArraysIndirect;$/;"	v
gl3wDrawArraysInstanced	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWARRAYSINSTANCEDPROC                         gl3wDrawArraysInstanced;$/;"	v
gl3wDrawArraysInstancedARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWARRAYSINSTANCEDARBPROC                      gl3wDrawArraysInstancedARB;$/;"	v
gl3wDrawArraysInstancedBaseInstance	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC             gl3wDrawArraysInstancedBaseInstance;$/;"	v
gl3wDrawArraysInstancedEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWARRAYSINSTANCEDEXTPROC                      gl3wDrawArraysInstancedEXT;$/;"	v
gl3wDrawBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWBUFFERPROC                                  gl3wDrawBuffer;$/;"	v
gl3wDrawBuffers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWBUFFERSPROC                                 gl3wDrawBuffers;$/;"	v
gl3wDrawCommandsAddressNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWCOMMANDSADDRESSNVPROC                       gl3wDrawCommandsAddressNV;$/;"	v
gl3wDrawCommandsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWCOMMANDSNVPROC                              gl3wDrawCommandsNV;$/;"	v
gl3wDrawCommandsStatesAddressNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC                 gl3wDrawCommandsStatesAddressNV;$/;"	v
gl3wDrawCommandsStatesNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWCOMMANDSSTATESNVPROC                        gl3wDrawCommandsStatesNV;$/;"	v
gl3wDrawElements	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWELEMENTSPROC                                gl3wDrawElements;$/;"	v
gl3wDrawElementsBaseVertex	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWELEMENTSBASEVERTEXPROC                      gl3wDrawElementsBaseVertex;$/;"	v
gl3wDrawElementsIndirect	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWELEMENTSINDIRECTPROC                        gl3wDrawElementsIndirect;$/;"	v
gl3wDrawElementsInstanced	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWELEMENTSINSTANCEDPROC                       gl3wDrawElementsInstanced;$/;"	v
gl3wDrawElementsInstancedARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWELEMENTSINSTANCEDARBPROC                    gl3wDrawElementsInstancedARB;$/;"	v
gl3wDrawElementsInstancedBaseInstance	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC           gl3wDrawElementsInstancedBaseInstance;$/;"	v
gl3wDrawElementsInstancedBaseVertex	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC             gl3wDrawElementsInstancedBaseVertex;$/;"	v
gl3wDrawElementsInstancedBaseVertexBaseInstance	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC gl3wDrawElementsInstancedBaseVertexBaseInstance;$/;"	v
gl3wDrawElementsInstancedEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWELEMENTSINSTANCEDEXTPROC                    gl3wDrawElementsInstancedEXT;$/;"	v
gl3wDrawRangeElements	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWRANGEELEMENTSPROC                           gl3wDrawRangeElements;$/;"	v
gl3wDrawRangeElementsBaseVertex	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC                 gl3wDrawRangeElementsBaseVertex;$/;"	v
gl3wDrawTransformFeedback	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWTRANSFORMFEEDBACKPROC                       gl3wDrawTransformFeedback;$/;"	v
gl3wDrawTransformFeedbackInstanced	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC              gl3wDrawTransformFeedbackInstanced;$/;"	v
gl3wDrawTransformFeedbackStream	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC                 gl3wDrawTransformFeedbackStream;$/;"	v
gl3wDrawTransformFeedbackStreamInstanced	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC        gl3wDrawTransformFeedbackStreamInstanced;$/;"	v
gl3wDrawVkImageNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLDRAWVKIMAGENVPROC                               gl3wDrawVkImageNV;$/;"	v
gl3wEdgeFlagFormatNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLEDGEFLAGFORMATNVPROC                            gl3wEdgeFlagFormatNV;$/;"	v
gl3wEnable	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENABLEPROC                                      gl3wEnable;$/;"	v
gl3wEnableClientStateIndexedEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENABLECLIENTSTATEINDEXEDEXTPROC                 gl3wEnableClientStateIndexedEXT;$/;"	v
gl3wEnableClientStateiEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENABLECLIENTSTATEIEXTPROC                       gl3wEnableClientStateiEXT;$/;"	v
gl3wEnableIndexedEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENABLEINDEXEDEXTPROC                            gl3wEnableIndexedEXT;$/;"	v
gl3wEnableVertexArrayAttrib	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENABLEVERTEXARRAYATTRIBPROC                     gl3wEnableVertexArrayAttrib;$/;"	v
gl3wEnableVertexArrayAttribEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENABLEVERTEXARRAYATTRIBEXTPROC                  gl3wEnableVertexArrayAttribEXT;$/;"	v
gl3wEnableVertexArrayEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENABLEVERTEXARRAYEXTPROC                        gl3wEnableVertexArrayEXT;$/;"	v
gl3wEnableVertexAttribArray	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENABLEVERTEXATTRIBARRAYPROC                     gl3wEnableVertexAttribArray;$/;"	v
gl3wEnablei	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENABLEIPROC                                     gl3wEnablei;$/;"	v
gl3wEndConditionalRender	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENDCONDITIONALRENDERPROC                        gl3wEndConditionalRender;$/;"	v
gl3wEndConditionalRenderNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENDCONDITIONALRENDERNVPROC                      gl3wEndConditionalRenderNV;$/;"	v
gl3wEndPerfMonitorAMD	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENDPERFMONITORAMDPROC                           gl3wEndPerfMonitorAMD;$/;"	v
gl3wEndPerfQueryINTEL	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENDPERFQUERYINTELPROC                           gl3wEndPerfQueryINTEL;$/;"	v
gl3wEndQuery	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENDQUERYPROC                                    gl3wEndQuery;$/;"	v
gl3wEndQueryIndexed	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENDQUERYINDEXEDPROC                             gl3wEndQueryIndexed;$/;"	v
gl3wEndTransformFeedback	thirdparty/opengl/src/gl3w.cpp	/^PFNGLENDTRANSFORMFEEDBACKPROC                        gl3wEndTransformFeedback;$/;"	v
gl3wEvaluateDepthValuesARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLEVALUATEDEPTHVALUESARBPROC                      gl3wEvaluateDepthValuesARB;$/;"	v
gl3wFenceSync	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFENCESYNCPROC                                   gl3wFenceSync;$/;"	v
gl3wFinish	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFINISHPROC                                      gl3wFinish;$/;"	v
gl3wFlush	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFLUSHPROC                                       gl3wFlush;$/;"	v
gl3wFlushMappedBufferRange	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFLUSHMAPPEDBUFFERRANGEPROC                      gl3wFlushMappedBufferRange;$/;"	v
gl3wFlushMappedNamedBufferRange	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC                 gl3wFlushMappedNamedBufferRange;$/;"	v
gl3wFlushMappedNamedBufferRangeEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC              gl3wFlushMappedNamedBufferRangeEXT;$/;"	v
gl3wFogCoordFormatNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFOGCOORDFORMATNVPROC                            gl3wFogCoordFormatNV;$/;"	v
gl3wFragmentCoverageColorNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAGMENTCOVERAGECOLORNVPROC                     gl3wFragmentCoverageColorNV;$/;"	v
gl3wFramebufferDrawBufferEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC                    gl3wFramebufferDrawBufferEXT;$/;"	v
gl3wFramebufferDrawBuffersEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC                   gl3wFramebufferDrawBuffersEXT;$/;"	v
gl3wFramebufferParameteri	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERPARAMETERIPROC                       gl3wFramebufferParameteri;$/;"	v
gl3wFramebufferReadBufferEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERREADBUFFEREXTPROC                    gl3wFramebufferReadBufferEXT;$/;"	v
gl3wFramebufferRenderbuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERRENDERBUFFERPROC                     gl3wFramebufferRenderbuffer;$/;"	v
gl3wFramebufferSampleLocationsfvARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC             gl3wFramebufferSampleLocationsfvARB;$/;"	v
gl3wFramebufferSampleLocationsfvNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC              gl3wFramebufferSampleLocationsfvNV;$/;"	v
gl3wFramebufferTexture	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERTEXTUREPROC                          gl3wFramebufferTexture;$/;"	v
gl3wFramebufferTexture1D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERTEXTURE1DPROC                        gl3wFramebufferTexture1D;$/;"	v
gl3wFramebufferTexture2D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERTEXTURE2DPROC                        gl3wFramebufferTexture2D;$/;"	v
gl3wFramebufferTexture3D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERTEXTURE3DPROC                        gl3wFramebufferTexture3D;$/;"	v
gl3wFramebufferTextureARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERTEXTUREARBPROC                       gl3wFramebufferTextureARB;$/;"	v
gl3wFramebufferTextureFaceARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERTEXTUREFACEARBPROC                   gl3wFramebufferTextureFaceARB;$/;"	v
gl3wFramebufferTextureLayer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERTEXTURELAYERPROC                     gl3wFramebufferTextureLayer;$/;"	v
gl3wFramebufferTextureLayerARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERTEXTURELAYERARBPROC                  gl3wFramebufferTextureLayerARB;$/;"	v
gl3wFramebufferTextureMultiviewOVR	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC              gl3wFramebufferTextureMultiviewOVR;$/;"	v
gl3wFrontFace	thirdparty/opengl/src/gl3w.cpp	/^PFNGLFRONTFACEPROC                                   gl3wFrontFace;$/;"	v
gl3wGenBuffers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENBUFFERSPROC                                  gl3wGenBuffers;$/;"	v
gl3wGenFramebuffers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENFRAMEBUFFERSPROC                             gl3wGenFramebuffers;$/;"	v
gl3wGenPathsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENPATHSNVPROC                                  gl3wGenPathsNV;$/;"	v
gl3wGenPerfMonitorsAMD	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENPERFMONITORSAMDPROC                          gl3wGenPerfMonitorsAMD;$/;"	v
gl3wGenProgramPipelines	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENPROGRAMPIPELINESPROC                         gl3wGenProgramPipelines;$/;"	v
gl3wGenQueries	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENQUERIESPROC                                  gl3wGenQueries;$/;"	v
gl3wGenRenderbuffers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENRENDERBUFFERSPROC                            gl3wGenRenderbuffers;$/;"	v
gl3wGenSamplers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENSAMPLERSPROC                                 gl3wGenSamplers;$/;"	v
gl3wGenTextures	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENTEXTURESPROC                                 gl3wGenTextures;$/;"	v
gl3wGenTransformFeedbacks	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENTRANSFORMFEEDBACKSPROC                       gl3wGenTransformFeedbacks;$/;"	v
gl3wGenVertexArrays	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENVERTEXARRAYSPROC                             gl3wGenVertexArrays;$/;"	v
gl3wGenerateMipmap	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENERATEMIPMAPPROC                              gl3wGenerateMipmap;$/;"	v
gl3wGenerateMultiTexMipmapEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENERATEMULTITEXMIPMAPEXTPROC                   gl3wGenerateMultiTexMipmapEXT;$/;"	v
gl3wGenerateTextureMipmap	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENERATETEXTUREMIPMAPPROC                       gl3wGenerateTextureMipmap;$/;"	v
gl3wGenerateTextureMipmapEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGENERATETEXTUREMIPMAPEXTPROC                    gl3wGenerateTextureMipmapEXT;$/;"	v
gl3wGetActiveAtomicCounterBufferiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC              gl3wGetActiveAtomicCounterBufferiv;$/;"	v
gl3wGetActiveAttrib	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETACTIVEATTRIBPROC                             gl3wGetActiveAttrib;$/;"	v
gl3wGetActiveSubroutineName	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETACTIVESUBROUTINENAMEPROC                     gl3wGetActiveSubroutineName;$/;"	v
gl3wGetActiveSubroutineUniformName	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC              gl3wGetActiveSubroutineUniformName;$/;"	v
gl3wGetActiveSubroutineUniformiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC                gl3wGetActiveSubroutineUniformiv;$/;"	v
gl3wGetActiveUniform	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETACTIVEUNIFORMPROC                            gl3wGetActiveUniform;$/;"	v
gl3wGetActiveUniformBlockName	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC                   gl3wGetActiveUniformBlockName;$/;"	v
gl3wGetActiveUniformBlockiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETACTIVEUNIFORMBLOCKIVPROC                     gl3wGetActiveUniformBlockiv;$/;"	v
gl3wGetActiveUniformName	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETACTIVEUNIFORMNAMEPROC                        gl3wGetActiveUniformName;$/;"	v
gl3wGetActiveUniformsiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETACTIVEUNIFORMSIVPROC                         gl3wGetActiveUniformsiv;$/;"	v
gl3wGetAttachedShaders	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETATTACHEDSHADERSPROC                          gl3wGetAttachedShaders;$/;"	v
gl3wGetAttribLocation	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETATTRIBLOCATIONPROC                           gl3wGetAttribLocation;$/;"	v
gl3wGetBooleanIndexedvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETBOOLEANINDEXEDVEXTPROC                       gl3wGetBooleanIndexedvEXT;$/;"	v
gl3wGetBooleani_v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETBOOLEANI_VPROC                               gl3wGetBooleani_v;$/;"	v
gl3wGetBooleanv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETBOOLEANVPROC                                 gl3wGetBooleanv;$/;"	v
gl3wGetBufferParameteri64v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETBUFFERPARAMETERI64VPROC                      gl3wGetBufferParameteri64v;$/;"	v
gl3wGetBufferParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETBUFFERPARAMETERIVPROC                        gl3wGetBufferParameteriv;$/;"	v
gl3wGetBufferParameterui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETBUFFERPARAMETERUI64VNVPROC                   gl3wGetBufferParameterui64vNV;$/;"	v
gl3wGetBufferPointerv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETBUFFERPOINTERVPROC                           gl3wGetBufferPointerv;$/;"	v
gl3wGetBufferSubData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETBUFFERSUBDATAPROC                            gl3wGetBufferSubData;$/;"	v
gl3wGetCommandHeaderNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETCOMMANDHEADERNVPROC                          gl3wGetCommandHeaderNV;$/;"	v
gl3wGetCompressedMultiTexImageEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC               gl3wGetCompressedMultiTexImageEXT;$/;"	v
gl3wGetCompressedTexImage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETCOMPRESSEDTEXIMAGEPROC                       gl3wGetCompressedTexImage;$/;"	v
gl3wGetCompressedTextureImage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC                   gl3wGetCompressedTextureImage;$/;"	v
gl3wGetCompressedTextureImageEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC                gl3wGetCompressedTextureImageEXT;$/;"	v
gl3wGetCompressedTextureSubImage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC                gl3wGetCompressedTextureSubImage;$/;"	v
gl3wGetCoverageModulationTableNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETCOVERAGEMODULATIONTABLENVPROC                gl3wGetCoverageModulationTableNV;$/;"	v
gl3wGetDebugMessageLog	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETDEBUGMESSAGELOGPROC                          gl3wGetDebugMessageLog;$/;"	v
gl3wGetDebugMessageLogARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETDEBUGMESSAGELOGARBPROC                       gl3wGetDebugMessageLogARB;$/;"	v
gl3wGetDoubleIndexedvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETDOUBLEINDEXEDVEXTPROC                        gl3wGetDoubleIndexedvEXT;$/;"	v
gl3wGetDoublei_v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETDOUBLEI_VPROC                                gl3wGetDoublei_v;$/;"	v
gl3wGetDoublei_vEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETDOUBLEI_VEXTPROC                             gl3wGetDoublei_vEXT;$/;"	v
gl3wGetDoublev	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETDOUBLEVPROC                                  gl3wGetDoublev;$/;"	v
gl3wGetError	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETERRORPROC                                    gl3wGetError;$/;"	v
gl3wGetFirstPerfQueryIdINTEL	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETFIRSTPERFQUERYIDINTELPROC                    gl3wGetFirstPerfQueryIdINTEL;$/;"	v
gl3wGetFloatIndexedvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETFLOATINDEXEDVEXTPROC                         gl3wGetFloatIndexedvEXT;$/;"	v
gl3wGetFloati_v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETFLOATI_VPROC                                 gl3wGetFloati_v;$/;"	v
gl3wGetFloati_vEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETFLOATI_VEXTPROC                              gl3wGetFloati_vEXT;$/;"	v
gl3wGetFloatv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETFLOATVPROC                                   gl3wGetFloatv;$/;"	v
gl3wGetFragDataIndex	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETFRAGDATAINDEXPROC                            gl3wGetFragDataIndex;$/;"	v
gl3wGetFragDataLocation	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETFRAGDATALOCATIONPROC                         gl3wGetFragDataLocation;$/;"	v
gl3wGetFramebufferAttachmentParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC         gl3wGetFramebufferAttachmentParameteriv;$/;"	v
gl3wGetFramebufferParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETFRAMEBUFFERPARAMETERIVPROC                   gl3wGetFramebufferParameteriv;$/;"	v
gl3wGetFramebufferParameterivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC                gl3wGetFramebufferParameterivEXT;$/;"	v
gl3wGetGraphicsResetStatus	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETGRAPHICSRESETSTATUSPROC                      gl3wGetGraphicsResetStatus;$/;"	v
gl3wGetGraphicsResetStatusARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETGRAPHICSRESETSTATUSARBPROC                   gl3wGetGraphicsResetStatusARB;$/;"	v
gl3wGetImageHandleARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETIMAGEHANDLEARBPROC                           gl3wGetImageHandleARB;$/;"	v
gl3wGetImageHandleNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETIMAGEHANDLENVPROC                            gl3wGetImageHandleNV;$/;"	v
gl3wGetInteger64i_v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETINTEGER64I_VPROC                             gl3wGetInteger64i_v;$/;"	v
gl3wGetInteger64v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETINTEGER64VPROC                               gl3wGetInteger64v;$/;"	v
gl3wGetIntegerIndexedvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETINTEGERINDEXEDVEXTPROC                       gl3wGetIntegerIndexedvEXT;$/;"	v
gl3wGetIntegeri_v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETINTEGERI_VPROC                               gl3wGetIntegeri_v;$/;"	v
gl3wGetIntegerui64i_vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETINTEGERUI64I_VNVPROC                         gl3wGetIntegerui64i_vNV;$/;"	v
gl3wGetIntegerui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETINTEGERUI64VNVPROC                           gl3wGetIntegerui64vNV;$/;"	v
gl3wGetIntegerv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETINTEGERVPROC                                 gl3wGetIntegerv;$/;"	v
gl3wGetInternalformatSampleivNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETINTERNALFORMATSAMPLEIVNVPROC                 gl3wGetInternalformatSampleivNV;$/;"	v
gl3wGetInternalformati64v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETINTERNALFORMATI64VPROC                       gl3wGetInternalformati64v;$/;"	v
gl3wGetInternalformativ	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETINTERNALFORMATIVPROC                         gl3wGetInternalformativ;$/;"	v
gl3wGetMultiTexEnvfvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETMULTITEXENVFVEXTPROC                         gl3wGetMultiTexEnvfvEXT;$/;"	v
gl3wGetMultiTexEnvivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETMULTITEXENVIVEXTPROC                         gl3wGetMultiTexEnvivEXT;$/;"	v
gl3wGetMultiTexGendvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETMULTITEXGENDVEXTPROC                         gl3wGetMultiTexGendvEXT;$/;"	v
gl3wGetMultiTexGenfvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETMULTITEXGENFVEXTPROC                         gl3wGetMultiTexGenfvEXT;$/;"	v
gl3wGetMultiTexGenivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETMULTITEXGENIVEXTPROC                         gl3wGetMultiTexGenivEXT;$/;"	v
gl3wGetMultiTexImageEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETMULTITEXIMAGEEXTPROC                         gl3wGetMultiTexImageEXT;$/;"	v
gl3wGetMultiTexLevelParameterfvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC              gl3wGetMultiTexLevelParameterfvEXT;$/;"	v
gl3wGetMultiTexLevelParameterivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC              gl3wGetMultiTexLevelParameterivEXT;$/;"	v
gl3wGetMultiTexParameterIivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETMULTITEXPARAMETERIIVEXTPROC                  gl3wGetMultiTexParameterIivEXT;$/;"	v
gl3wGetMultiTexParameterIuivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETMULTITEXPARAMETERIUIVEXTPROC                 gl3wGetMultiTexParameterIuivEXT;$/;"	v
gl3wGetMultiTexParameterfvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETMULTITEXPARAMETERFVEXTPROC                   gl3wGetMultiTexParameterfvEXT;$/;"	v
gl3wGetMultiTexParameterivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETMULTITEXPARAMETERIVEXTPROC                   gl3wGetMultiTexParameterivEXT;$/;"	v
gl3wGetMultisamplefv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETMULTISAMPLEFVPROC                            gl3wGetMultisamplefv;$/;"	v
gl3wGetNamedBufferParameteri64v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDBUFFERPARAMETERI64VPROC                 gl3wGetNamedBufferParameteri64v;$/;"	v
gl3wGetNamedBufferParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDBUFFERPARAMETERIVPROC                   gl3wGetNamedBufferParameteriv;$/;"	v
gl3wGetNamedBufferParameterivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC                gl3wGetNamedBufferParameterivEXT;$/;"	v
gl3wGetNamedBufferParameterui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC              gl3wGetNamedBufferParameterui64vNV;$/;"	v
gl3wGetNamedBufferPointerv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDBUFFERPOINTERVPROC                      gl3wGetNamedBufferPointerv;$/;"	v
gl3wGetNamedBufferPointervEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDBUFFERPOINTERVEXTPROC                   gl3wGetNamedBufferPointervEXT;$/;"	v
gl3wGetNamedBufferSubData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDBUFFERSUBDATAPROC                       gl3wGetNamedBufferSubData;$/;"	v
gl3wGetNamedBufferSubDataEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDBUFFERSUBDATAEXTPROC                    gl3wGetNamedBufferSubDataEXT;$/;"	v
gl3wGetNamedFramebufferAttachmentParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC    gl3wGetNamedFramebufferAttachmentParameteriv;$/;"	v
gl3wGetNamedFramebufferAttachmentParameterivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC gl3wGetNamedFramebufferAttachmentParameterivEXT;$/;"	v
gl3wGetNamedFramebufferParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC              gl3wGetNamedFramebufferParameteriv;$/;"	v
gl3wGetNamedFramebufferParameterivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC           gl3wGetNamedFramebufferParameterivEXT;$/;"	v
gl3wGetNamedProgramLocalParameterIivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC         gl3wGetNamedProgramLocalParameterIivEXT;$/;"	v
gl3wGetNamedProgramLocalParameterIuivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC        gl3wGetNamedProgramLocalParameterIuivEXT;$/;"	v
gl3wGetNamedProgramLocalParameterdvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC          gl3wGetNamedProgramLocalParameterdvEXT;$/;"	v
gl3wGetNamedProgramLocalParameterfvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC          gl3wGetNamedProgramLocalParameterfvEXT;$/;"	v
gl3wGetNamedProgramStringEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDPROGRAMSTRINGEXTPROC                    gl3wGetNamedProgramStringEXT;$/;"	v
gl3wGetNamedProgramivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDPROGRAMIVEXTPROC                        gl3wGetNamedProgramivEXT;$/;"	v
gl3wGetNamedRenderbufferParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC             gl3wGetNamedRenderbufferParameteriv;$/;"	v
gl3wGetNamedRenderbufferParameterivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC          gl3wGetNamedRenderbufferParameterivEXT;$/;"	v
gl3wGetNamedStringARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDSTRINGARBPROC                           gl3wGetNamedStringARB;$/;"	v
gl3wGetNamedStringivARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNAMEDSTRINGIVARBPROC                         gl3wGetNamedStringivARB;$/;"	v
gl3wGetNextPerfQueryIdINTEL	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNEXTPERFQUERYIDINTELPROC                     gl3wGetNextPerfQueryIdINTEL;$/;"	v
gl3wGetObjectLabel	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETOBJECTLABELPROC                              gl3wGetObjectLabel;$/;"	v
gl3wGetObjectLabelEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETOBJECTLABELEXTPROC                           gl3wGetObjectLabelEXT;$/;"	v
gl3wGetObjectPtrLabel	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETOBJECTPTRLABELPROC                           gl3wGetObjectPtrLabel;$/;"	v
gl3wGetPathCommandsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPATHCOMMANDSNVPROC                           gl3wGetPathCommandsNV;$/;"	v
gl3wGetPathCoordsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPATHCOORDSNVPROC                             gl3wGetPathCoordsNV;$/;"	v
gl3wGetPathDashArrayNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPATHDASHARRAYNVPROC                          gl3wGetPathDashArrayNV;$/;"	v
gl3wGetPathLengthNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPATHLENGTHNVPROC                             gl3wGetPathLengthNV;$/;"	v
gl3wGetPathMetricRangeNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPATHMETRICRANGENVPROC                        gl3wGetPathMetricRangeNV;$/;"	v
gl3wGetPathMetricsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPATHMETRICSNVPROC                            gl3wGetPathMetricsNV;$/;"	v
gl3wGetPathParameterfvNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPATHPARAMETERFVNVPROC                        gl3wGetPathParameterfvNV;$/;"	v
gl3wGetPathParameterivNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPATHPARAMETERIVNVPROC                        gl3wGetPathParameterivNV;$/;"	v
gl3wGetPathSpacingNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPATHSPACINGNVPROC                            gl3wGetPathSpacingNV;$/;"	v
gl3wGetPerfCounterInfoINTEL	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPERFCOUNTERINFOINTELPROC                     gl3wGetPerfCounterInfoINTEL;$/;"	v
gl3wGetPerfMonitorCounterDataAMD	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPERFMONITORCOUNTERDATAAMDPROC                gl3wGetPerfMonitorCounterDataAMD;$/;"	v
gl3wGetPerfMonitorCounterInfoAMD	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPERFMONITORCOUNTERINFOAMDPROC                gl3wGetPerfMonitorCounterInfoAMD;$/;"	v
gl3wGetPerfMonitorCounterStringAMD	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC              gl3wGetPerfMonitorCounterStringAMD;$/;"	v
gl3wGetPerfMonitorCountersAMD	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPERFMONITORCOUNTERSAMDPROC                   gl3wGetPerfMonitorCountersAMD;$/;"	v
gl3wGetPerfMonitorGroupStringAMD	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPERFMONITORGROUPSTRINGAMDPROC                gl3wGetPerfMonitorGroupStringAMD;$/;"	v
gl3wGetPerfMonitorGroupsAMD	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPERFMONITORGROUPSAMDPROC                     gl3wGetPerfMonitorGroupsAMD;$/;"	v
gl3wGetPerfQueryDataINTEL	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPERFQUERYDATAINTELPROC                       gl3wGetPerfQueryDataINTEL;$/;"	v
gl3wGetPerfQueryIdByNameINTEL	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPERFQUERYIDBYNAMEINTELPROC                   gl3wGetPerfQueryIdByNameINTEL;$/;"	v
gl3wGetPerfQueryInfoINTEL	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPERFQUERYINFOINTELPROC                       gl3wGetPerfQueryInfoINTEL;$/;"	v
gl3wGetPointerIndexedvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPOINTERINDEXEDVEXTPROC                       gl3wGetPointerIndexedvEXT;$/;"	v
gl3wGetPointeri_vEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPOINTERI_VEXTPROC                            gl3wGetPointeri_vEXT;$/;"	v
gl3wGetPointerv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPOINTERVPROC                                 gl3wGetPointerv;$/;"	v
gl3wGetProcAddress	thirdparty/opengl/src/gl3w.cpp	/^GL3WglProc gl3wGetProcAddress(const char *proc)$/;"	f
gl3wGetProgramBinary	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPROGRAMBINARYPROC                            gl3wGetProgramBinary;$/;"	v
gl3wGetProgramInfoLog	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPROGRAMINFOLOGPROC                           gl3wGetProgramInfoLog;$/;"	v
gl3wGetProgramInterfaceiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPROGRAMINTERFACEIVPROC                       gl3wGetProgramInterfaceiv;$/;"	v
gl3wGetProgramPipelineInfoLog	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPROGRAMPIPELINEINFOLOGPROC                   gl3wGetProgramPipelineInfoLog;$/;"	v
gl3wGetProgramPipelineiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPROGRAMPIPELINEIVPROC                        gl3wGetProgramPipelineiv;$/;"	v
gl3wGetProgramResourceIndex	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPROGRAMRESOURCEINDEXPROC                     gl3wGetProgramResourceIndex;$/;"	v
gl3wGetProgramResourceLocation	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPROGRAMRESOURCELOCATIONPROC                  gl3wGetProgramResourceLocation;$/;"	v
gl3wGetProgramResourceLocationIndex	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC             gl3wGetProgramResourceLocationIndex;$/;"	v
gl3wGetProgramResourceName	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPROGRAMRESOURCENAMEPROC                      gl3wGetProgramResourceName;$/;"	v
gl3wGetProgramResourcefvNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPROGRAMRESOURCEFVNVPROC                      gl3wGetProgramResourcefvNV;$/;"	v
gl3wGetProgramResourceiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPROGRAMRESOURCEIVPROC                        gl3wGetProgramResourceiv;$/;"	v
gl3wGetProgramStageiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPROGRAMSTAGEIVPROC                           gl3wGetProgramStageiv;$/;"	v
gl3wGetProgramiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETPROGRAMIVPROC                                gl3wGetProgramiv;$/;"	v
gl3wGetQueryBufferObjecti64v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETQUERYBUFFEROBJECTI64VPROC                    gl3wGetQueryBufferObjecti64v;$/;"	v
gl3wGetQueryBufferObjectiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETQUERYBUFFEROBJECTIVPROC                      gl3wGetQueryBufferObjectiv;$/;"	v
gl3wGetQueryBufferObjectui64v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETQUERYBUFFEROBJECTUI64VPROC                   gl3wGetQueryBufferObjectui64v;$/;"	v
gl3wGetQueryBufferObjectuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETQUERYBUFFEROBJECTUIVPROC                     gl3wGetQueryBufferObjectuiv;$/;"	v
gl3wGetQueryIndexediv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETQUERYINDEXEDIVPROC                           gl3wGetQueryIndexediv;$/;"	v
gl3wGetQueryObjecti64v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETQUERYOBJECTI64VPROC                          gl3wGetQueryObjecti64v;$/;"	v
gl3wGetQueryObjectiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETQUERYOBJECTIVPROC                            gl3wGetQueryObjectiv;$/;"	v
gl3wGetQueryObjectui64v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETQUERYOBJECTUI64VPROC                         gl3wGetQueryObjectui64v;$/;"	v
gl3wGetQueryObjectuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETQUERYOBJECTUIVPROC                           gl3wGetQueryObjectuiv;$/;"	v
gl3wGetQueryiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETQUERYIVPROC                                  gl3wGetQueryiv;$/;"	v
gl3wGetRenderbufferParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETRENDERBUFFERPARAMETERIVPROC                  gl3wGetRenderbufferParameteriv;$/;"	v
gl3wGetSamplerParameterIiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSAMPLERPARAMETERIIVPROC                      gl3wGetSamplerParameterIiv;$/;"	v
gl3wGetSamplerParameterIuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSAMPLERPARAMETERIUIVPROC                     gl3wGetSamplerParameterIuiv;$/;"	v
gl3wGetSamplerParameterfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSAMPLERPARAMETERFVPROC                       gl3wGetSamplerParameterfv;$/;"	v
gl3wGetSamplerParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSAMPLERPARAMETERIVPROC                       gl3wGetSamplerParameteriv;$/;"	v
gl3wGetShaderInfoLog	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSHADERINFOLOGPROC                            gl3wGetShaderInfoLog;$/;"	v
gl3wGetShaderPrecisionFormat	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSHADERPRECISIONFORMATPROC                    gl3wGetShaderPrecisionFormat;$/;"	v
gl3wGetShaderSource	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSHADERSOURCEPROC                             gl3wGetShaderSource;$/;"	v
gl3wGetShaderiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSHADERIVPROC                                 gl3wGetShaderiv;$/;"	v
gl3wGetStageIndexNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSTAGEINDEXNVPROC                             gl3wGetStageIndexNV;$/;"	v
gl3wGetString	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSTRINGPROC                                   gl3wGetString;$/;"	v
gl3wGetStringi	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSTRINGIPROC                                  gl3wGetStringi;$/;"	v
gl3wGetSubroutineIndex	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSUBROUTINEINDEXPROC                          gl3wGetSubroutineIndex;$/;"	v
gl3wGetSubroutineUniformLocation	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC                gl3wGetSubroutineUniformLocation;$/;"	v
gl3wGetSynciv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETSYNCIVPROC                                   gl3wGetSynciv;$/;"	v
gl3wGetTexImage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXIMAGEPROC                                 gl3wGetTexImage;$/;"	v
gl3wGetTexLevelParameterfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXLEVELPARAMETERFVPROC                      gl3wGetTexLevelParameterfv;$/;"	v
gl3wGetTexLevelParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXLEVELPARAMETERIVPROC                      gl3wGetTexLevelParameteriv;$/;"	v
gl3wGetTexParameterIiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXPARAMETERIIVPROC                          gl3wGetTexParameterIiv;$/;"	v
gl3wGetTexParameterIuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXPARAMETERIUIVPROC                         gl3wGetTexParameterIuiv;$/;"	v
gl3wGetTexParameterfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXPARAMETERFVPROC                           gl3wGetTexParameterfv;$/;"	v
gl3wGetTexParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXPARAMETERIVPROC                           gl3wGetTexParameteriv;$/;"	v
gl3wGetTextureHandleARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTUREHANDLEARBPROC                         gl3wGetTextureHandleARB;$/;"	v
gl3wGetTextureHandleNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTUREHANDLENVPROC                          gl3wGetTextureHandleNV;$/;"	v
gl3wGetTextureImage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTUREIMAGEPROC                             gl3wGetTextureImage;$/;"	v
gl3wGetTextureImageEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTUREIMAGEEXTPROC                          gl3wGetTextureImageEXT;$/;"	v
gl3wGetTextureLevelParameterfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTURELEVELPARAMETERFVPROC                  gl3wGetTextureLevelParameterfv;$/;"	v
gl3wGetTextureLevelParameterfvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC               gl3wGetTextureLevelParameterfvEXT;$/;"	v
gl3wGetTextureLevelParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTURELEVELPARAMETERIVPROC                  gl3wGetTextureLevelParameteriv;$/;"	v
gl3wGetTextureLevelParameterivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC               gl3wGetTextureLevelParameterivEXT;$/;"	v
gl3wGetTextureParameterIiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTUREPARAMETERIIVPROC                      gl3wGetTextureParameterIiv;$/;"	v
gl3wGetTextureParameterIivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTUREPARAMETERIIVEXTPROC                   gl3wGetTextureParameterIivEXT;$/;"	v
gl3wGetTextureParameterIuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTUREPARAMETERIUIVPROC                     gl3wGetTextureParameterIuiv;$/;"	v
gl3wGetTextureParameterIuivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTUREPARAMETERIUIVEXTPROC                  gl3wGetTextureParameterIuivEXT;$/;"	v
gl3wGetTextureParameterfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTUREPARAMETERFVPROC                       gl3wGetTextureParameterfv;$/;"	v
gl3wGetTextureParameterfvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTUREPARAMETERFVEXTPROC                    gl3wGetTextureParameterfvEXT;$/;"	v
gl3wGetTextureParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTUREPARAMETERIVPROC                       gl3wGetTextureParameteriv;$/;"	v
gl3wGetTextureParameterivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTUREPARAMETERIVEXTPROC                    gl3wGetTextureParameterivEXT;$/;"	v
gl3wGetTextureSamplerHandleARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTURESAMPLERHANDLEARBPROC                  gl3wGetTextureSamplerHandleARB;$/;"	v
gl3wGetTextureSamplerHandleNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTURESAMPLERHANDLENVPROC                   gl3wGetTextureSamplerHandleNV;$/;"	v
gl3wGetTextureSubImage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTEXTURESUBIMAGEPROC                          gl3wGetTextureSubImage;$/;"	v
gl3wGetTransformFeedbackVarying	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTRANSFORMFEEDBACKVARYINGPROC                 gl3wGetTransformFeedbackVarying;$/;"	v
gl3wGetTransformFeedbacki64_v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTRANSFORMFEEDBACKI64_VPROC                   gl3wGetTransformFeedbacki64_v;$/;"	v
gl3wGetTransformFeedbacki_v	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTRANSFORMFEEDBACKI_VPROC                     gl3wGetTransformFeedbacki_v;$/;"	v
gl3wGetTransformFeedbackiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETTRANSFORMFEEDBACKIVPROC                      gl3wGetTransformFeedbackiv;$/;"	v
gl3wGetUniformBlockIndex	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETUNIFORMBLOCKINDEXPROC                        gl3wGetUniformBlockIndex;$/;"	v
gl3wGetUniformIndices	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETUNIFORMINDICESPROC                           gl3wGetUniformIndices;$/;"	v
gl3wGetUniformLocation	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETUNIFORMLOCATIONPROC                          gl3wGetUniformLocation;$/;"	v
gl3wGetUniformSubroutineuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETUNIFORMSUBROUTINEUIVPROC                     gl3wGetUniformSubroutineuiv;$/;"	v
gl3wGetUniformdv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETUNIFORMDVPROC                                gl3wGetUniformdv;$/;"	v
gl3wGetUniformfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETUNIFORMFVPROC                                gl3wGetUniformfv;$/;"	v
gl3wGetUniformi64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETUNIFORMI64VARBPROC                           gl3wGetUniformi64vARB;$/;"	v
gl3wGetUniformi64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETUNIFORMI64VNVPROC                            gl3wGetUniformi64vNV;$/;"	v
gl3wGetUniformiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETUNIFORMIVPROC                                gl3wGetUniformiv;$/;"	v
gl3wGetUniformui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETUNIFORMUI64VARBPROC                          gl3wGetUniformui64vARB;$/;"	v
gl3wGetUniformui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETUNIFORMUI64VNVPROC                           gl3wGetUniformui64vNV;$/;"	v
gl3wGetUniformuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETUNIFORMUIVPROC                               gl3wGetUniformuiv;$/;"	v
gl3wGetVertexArrayIndexed64iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXARRAYINDEXED64IVPROC                   gl3wGetVertexArrayIndexed64iv;$/;"	v
gl3wGetVertexArrayIndexediv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXARRAYINDEXEDIVPROC                     gl3wGetVertexArrayIndexediv;$/;"	v
gl3wGetVertexArrayIntegeri_vEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC                 gl3wGetVertexArrayIntegeri_vEXT;$/;"	v
gl3wGetVertexArrayIntegervEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXARRAYINTEGERVEXTPROC                   gl3wGetVertexArrayIntegervEXT;$/;"	v
gl3wGetVertexArrayPointeri_vEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC                 gl3wGetVertexArrayPointeri_vEXT;$/;"	v
gl3wGetVertexArrayPointervEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXARRAYPOINTERVEXTPROC                   gl3wGetVertexArrayPointervEXT;$/;"	v
gl3wGetVertexArrayiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXARRAYIVPROC                            gl3wGetVertexArrayiv;$/;"	v
gl3wGetVertexAttribIiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXATTRIBIIVPROC                          gl3wGetVertexAttribIiv;$/;"	v
gl3wGetVertexAttribIuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXATTRIBIUIVPROC                         gl3wGetVertexAttribIuiv;$/;"	v
gl3wGetVertexAttribLdv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXATTRIBLDVPROC                          gl3wGetVertexAttribLdv;$/;"	v
gl3wGetVertexAttribLi64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXATTRIBLI64VNVPROC                      gl3wGetVertexAttribLi64vNV;$/;"	v
gl3wGetVertexAttribLui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXATTRIBLUI64VARBPROC                    gl3wGetVertexAttribLui64vARB;$/;"	v
gl3wGetVertexAttribLui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXATTRIBLUI64VNVPROC                     gl3wGetVertexAttribLui64vNV;$/;"	v
gl3wGetVertexAttribPointerv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXATTRIBPOINTERVPROC                     gl3wGetVertexAttribPointerv;$/;"	v
gl3wGetVertexAttribdv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXATTRIBDVPROC                           gl3wGetVertexAttribdv;$/;"	v
gl3wGetVertexAttribfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXATTRIBFVPROC                           gl3wGetVertexAttribfv;$/;"	v
gl3wGetVertexAttribiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVERTEXATTRIBIVPROC                           gl3wGetVertexAttribiv;$/;"	v
gl3wGetVkProcAddrNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETVKPROCADDRNVPROC                             gl3wGetVkProcAddrNV;$/;"	v
gl3wGetnCompressedTexImage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNCOMPRESSEDTEXIMAGEPROC                      gl3wGetnCompressedTexImage;$/;"	v
gl3wGetnCompressedTexImageARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC                   gl3wGetnCompressedTexImageARB;$/;"	v
gl3wGetnTexImage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNTEXIMAGEPROC                                gl3wGetnTexImage;$/;"	v
gl3wGetnTexImageARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNTEXIMAGEARBPROC                             gl3wGetnTexImageARB;$/;"	v
gl3wGetnUniformdv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNUNIFORMDVPROC                               gl3wGetnUniformdv;$/;"	v
gl3wGetnUniformdvARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNUNIFORMDVARBPROC                            gl3wGetnUniformdvARB;$/;"	v
gl3wGetnUniformfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNUNIFORMFVPROC                               gl3wGetnUniformfv;$/;"	v
gl3wGetnUniformfvARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNUNIFORMFVARBPROC                            gl3wGetnUniformfvARB;$/;"	v
gl3wGetnUniformi64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNUNIFORMI64VARBPROC                          gl3wGetnUniformi64vARB;$/;"	v
gl3wGetnUniformiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNUNIFORMIVPROC                               gl3wGetnUniformiv;$/;"	v
gl3wGetnUniformivARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNUNIFORMIVARBPROC                            gl3wGetnUniformivARB;$/;"	v
gl3wGetnUniformui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNUNIFORMUI64VARBPROC                         gl3wGetnUniformui64vARB;$/;"	v
gl3wGetnUniformuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNUNIFORMUIVPROC                              gl3wGetnUniformuiv;$/;"	v
gl3wGetnUniformuivARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLGETNUNIFORMUIVARBPROC                           gl3wGetnUniformuivARB;$/;"	v
gl3wHint	thirdparty/opengl/src/gl3w.cpp	/^PFNGLHINTPROC                                        gl3wHint;$/;"	v
gl3wIndexFormatNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLINDEXFORMATNVPROC                               gl3wIndexFormatNV;$/;"	v
gl3wInit	thirdparty/opengl/src/gl3w.cpp	/^int gl3wInit(void)$/;"	f
gl3wInit2	thirdparty/opengl/src/gl3w.cpp	/^int gl3wInit2(GL3WGetProcAddressProc proc)$/;"	f
gl3wInsertEventMarkerEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLINSERTEVENTMARKEREXTPROC                        gl3wInsertEventMarkerEXT;$/;"	v
gl3wInterpolatePathsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLINTERPOLATEPATHSNVPROC                          gl3wInterpolatePathsNV;$/;"	v
gl3wInvalidateBufferData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLINVALIDATEBUFFERDATAPROC                        gl3wInvalidateBufferData;$/;"	v
gl3wInvalidateBufferSubData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLINVALIDATEBUFFERSUBDATAPROC                     gl3wInvalidateBufferSubData;$/;"	v
gl3wInvalidateFramebuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLINVALIDATEFRAMEBUFFERPROC                       gl3wInvalidateFramebuffer;$/;"	v
gl3wInvalidateNamedFramebufferData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC              gl3wInvalidateNamedFramebufferData;$/;"	v
gl3wInvalidateNamedFramebufferSubData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC           gl3wInvalidateNamedFramebufferSubData;$/;"	v
gl3wInvalidateSubFramebuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLINVALIDATESUBFRAMEBUFFERPROC                    gl3wInvalidateSubFramebuffer;$/;"	v
gl3wInvalidateTexImage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLINVALIDATETEXIMAGEPROC                          gl3wInvalidateTexImage;$/;"	v
gl3wInvalidateTexSubImage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLINVALIDATETEXSUBIMAGEPROC                       gl3wInvalidateTexSubImage;$/;"	v
gl3wIsBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISBUFFERPROC                                    gl3wIsBuffer;$/;"	v
gl3wIsBufferResidentNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISBUFFERRESIDENTNVPROC                          gl3wIsBufferResidentNV;$/;"	v
gl3wIsCommandListNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISCOMMANDLISTNVPROC                             gl3wIsCommandListNV;$/;"	v
gl3wIsEnabled	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISENABLEDPROC                                   gl3wIsEnabled;$/;"	v
gl3wIsEnabledIndexedEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISENABLEDINDEXEDEXTPROC                         gl3wIsEnabledIndexedEXT;$/;"	v
gl3wIsEnabledi	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISENABLEDIPROC                                  gl3wIsEnabledi;$/;"	v
gl3wIsFramebuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISFRAMEBUFFERPROC                               gl3wIsFramebuffer;$/;"	v
gl3wIsImageHandleResidentARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISIMAGEHANDLERESIDENTARBPROC                    gl3wIsImageHandleResidentARB;$/;"	v
gl3wIsImageHandleResidentNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISIMAGEHANDLERESIDENTNVPROC                     gl3wIsImageHandleResidentNV;$/;"	v
gl3wIsNamedBufferResidentNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISNAMEDBUFFERRESIDENTNVPROC                     gl3wIsNamedBufferResidentNV;$/;"	v
gl3wIsNamedStringARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISNAMEDSTRINGARBPROC                            gl3wIsNamedStringARB;$/;"	v
gl3wIsPathNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISPATHNVPROC                                    gl3wIsPathNV;$/;"	v
gl3wIsPointInFillPathNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISPOINTINFILLPATHNVPROC                         gl3wIsPointInFillPathNV;$/;"	v
gl3wIsPointInStrokePathNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISPOINTINSTROKEPATHNVPROC                       gl3wIsPointInStrokePathNV;$/;"	v
gl3wIsProgram	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISPROGRAMPROC                                   gl3wIsProgram;$/;"	v
gl3wIsProgramPipeline	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISPROGRAMPIPELINEPROC                           gl3wIsProgramPipeline;$/;"	v
gl3wIsQuery	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISQUERYPROC                                     gl3wIsQuery;$/;"	v
gl3wIsRenderbuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISRENDERBUFFERPROC                              gl3wIsRenderbuffer;$/;"	v
gl3wIsSampler	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISSAMPLERPROC                                   gl3wIsSampler;$/;"	v
gl3wIsShader	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISSHADERPROC                                    gl3wIsShader;$/;"	v
gl3wIsStateNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISSTATENVPROC                                   gl3wIsStateNV;$/;"	v
gl3wIsSupported	thirdparty/opengl/src/gl3w.cpp	/^int gl3wIsSupported(int major, int minor)$/;"	f
gl3wIsSync	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISSYNCPROC                                      gl3wIsSync;$/;"	v
gl3wIsTexture	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISTEXTUREPROC                                   gl3wIsTexture;$/;"	v
gl3wIsTextureHandleResidentARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISTEXTUREHANDLERESIDENTARBPROC                  gl3wIsTextureHandleResidentARB;$/;"	v
gl3wIsTextureHandleResidentNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISTEXTUREHANDLERESIDENTNVPROC                   gl3wIsTextureHandleResidentNV;$/;"	v
gl3wIsTransformFeedback	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISTRANSFORMFEEDBACKPROC                         gl3wIsTransformFeedback;$/;"	v
gl3wIsVertexArray	thirdparty/opengl/src/gl3w.cpp	/^PFNGLISVERTEXARRAYPROC                               gl3wIsVertexArray;$/;"	v
gl3wLabelObjectEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLLABELOBJECTEXTPROC                              gl3wLabelObjectEXT;$/;"	v
gl3wLineWidth	thirdparty/opengl/src/gl3w.cpp	/^PFNGLLINEWIDTHPROC                                   gl3wLineWidth;$/;"	v
gl3wLinkProgram	thirdparty/opengl/src/gl3w.cpp	/^PFNGLLINKPROGRAMPROC                                 gl3wLinkProgram;$/;"	v
gl3wListDrawCommandsStatesClientNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC              gl3wListDrawCommandsStatesClientNV;$/;"	v
gl3wLogicOp	thirdparty/opengl/src/gl3w.cpp	/^PFNGLLOGICOPPROC                                     gl3wLogicOp;$/;"	v
gl3wMakeBufferNonResidentNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAKEBUFFERNONRESIDENTNVPROC                     gl3wMakeBufferNonResidentNV;$/;"	v
gl3wMakeBufferResidentNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAKEBUFFERRESIDENTNVPROC                        gl3wMakeBufferResidentNV;$/;"	v
gl3wMakeImageHandleNonResidentARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC               gl3wMakeImageHandleNonResidentARB;$/;"	v
gl3wMakeImageHandleNonResidentNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC                gl3wMakeImageHandleNonResidentNV;$/;"	v
gl3wMakeImageHandleResidentARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAKEIMAGEHANDLERESIDENTARBPROC                  gl3wMakeImageHandleResidentARB;$/;"	v
gl3wMakeImageHandleResidentNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAKEIMAGEHANDLERESIDENTNVPROC                   gl3wMakeImageHandleResidentNV;$/;"	v
gl3wMakeNamedBufferNonResidentNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC                gl3wMakeNamedBufferNonResidentNV;$/;"	v
gl3wMakeNamedBufferResidentNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAKENAMEDBUFFERRESIDENTNVPROC                   gl3wMakeNamedBufferResidentNV;$/;"	v
gl3wMakeTextureHandleNonResidentARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC             gl3wMakeTextureHandleNonResidentARB;$/;"	v
gl3wMakeTextureHandleNonResidentNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC              gl3wMakeTextureHandleNonResidentNV;$/;"	v
gl3wMakeTextureHandleResidentARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAKETEXTUREHANDLERESIDENTARBPROC                gl3wMakeTextureHandleResidentARB;$/;"	v
gl3wMakeTextureHandleResidentNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAKETEXTUREHANDLERESIDENTNVPROC                 gl3wMakeTextureHandleResidentNV;$/;"	v
gl3wMapBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAPBUFFERPROC                                   gl3wMapBuffer;$/;"	v
gl3wMapBufferRange	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAPBUFFERRANGEPROC                              gl3wMapBufferRange;$/;"	v
gl3wMapNamedBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAPNAMEDBUFFERPROC                              gl3wMapNamedBuffer;$/;"	v
gl3wMapNamedBufferEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAPNAMEDBUFFEREXTPROC                           gl3wMapNamedBufferEXT;$/;"	v
gl3wMapNamedBufferRange	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAPNAMEDBUFFERRANGEPROC                         gl3wMapNamedBufferRange;$/;"	v
gl3wMapNamedBufferRangeEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAPNAMEDBUFFERRANGEEXTPROC                      gl3wMapNamedBufferRangeEXT;$/;"	v
gl3wMatrixFrustumEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXFRUSTUMEXTPROC                            gl3wMatrixFrustumEXT;$/;"	v
gl3wMatrixLoad3x2fNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXLOAD3X2FNVPROC                            gl3wMatrixLoad3x2fNV;$/;"	v
gl3wMatrixLoad3x3fNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXLOAD3X3FNVPROC                            gl3wMatrixLoad3x3fNV;$/;"	v
gl3wMatrixLoadIdentityEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXLOADIDENTITYEXTPROC                       gl3wMatrixLoadIdentityEXT;$/;"	v
gl3wMatrixLoadTranspose3x3fNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC                   gl3wMatrixLoadTranspose3x3fNV;$/;"	v
gl3wMatrixLoadTransposedEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXLOADTRANSPOSEDEXTPROC                     gl3wMatrixLoadTransposedEXT;$/;"	v
gl3wMatrixLoadTransposefEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXLOADTRANSPOSEFEXTPROC                     gl3wMatrixLoadTransposefEXT;$/;"	v
gl3wMatrixLoaddEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXLOADDEXTPROC                              gl3wMatrixLoaddEXT;$/;"	v
gl3wMatrixLoadfEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXLOADFEXTPROC                              gl3wMatrixLoadfEXT;$/;"	v
gl3wMatrixMult3x2fNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXMULT3X2FNVPROC                            gl3wMatrixMult3x2fNV;$/;"	v
gl3wMatrixMult3x3fNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXMULT3X3FNVPROC                            gl3wMatrixMult3x3fNV;$/;"	v
gl3wMatrixMultTranspose3x3fNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC                   gl3wMatrixMultTranspose3x3fNV;$/;"	v
gl3wMatrixMultTransposedEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXMULTTRANSPOSEDEXTPROC                     gl3wMatrixMultTransposedEXT;$/;"	v
gl3wMatrixMultTransposefEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXMULTTRANSPOSEFEXTPROC                     gl3wMatrixMultTransposefEXT;$/;"	v
gl3wMatrixMultdEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXMULTDEXTPROC                              gl3wMatrixMultdEXT;$/;"	v
gl3wMatrixMultfEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXMULTFEXTPROC                              gl3wMatrixMultfEXT;$/;"	v
gl3wMatrixOrthoEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXORTHOEXTPROC                              gl3wMatrixOrthoEXT;$/;"	v
gl3wMatrixPopEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXPOPEXTPROC                                gl3wMatrixPopEXT;$/;"	v
gl3wMatrixPushEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXPUSHEXTPROC                               gl3wMatrixPushEXT;$/;"	v
gl3wMatrixRotatedEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXROTATEDEXTPROC                            gl3wMatrixRotatedEXT;$/;"	v
gl3wMatrixRotatefEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXROTATEFEXTPROC                            gl3wMatrixRotatefEXT;$/;"	v
gl3wMatrixScaledEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXSCALEDEXTPROC                             gl3wMatrixScaledEXT;$/;"	v
gl3wMatrixScalefEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXSCALEFEXTPROC                             gl3wMatrixScalefEXT;$/;"	v
gl3wMatrixTranslatedEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXTRANSLATEDEXTPROC                         gl3wMatrixTranslatedEXT;$/;"	v
gl3wMatrixTranslatefEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMATRIXTRANSLATEFEXTPROC                         gl3wMatrixTranslatefEXT;$/;"	v
gl3wMaxShaderCompilerThreadsARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMAXSHADERCOMPILERTHREADSARBPROC                 gl3wMaxShaderCompilerThreadsARB;$/;"	v
gl3wMemoryBarrier	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMEMORYBARRIERPROC                               gl3wMemoryBarrier;$/;"	v
gl3wMemoryBarrierByRegion	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMEMORYBARRIERBYREGIONPROC                       gl3wMemoryBarrierByRegion;$/;"	v
gl3wMinSampleShading	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMINSAMPLESHADINGPROC                            gl3wMinSampleShading;$/;"	v
gl3wMinSampleShadingARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMINSAMPLESHADINGARBPROC                         gl3wMinSampleShadingARB;$/;"	v
gl3wMultiDrawArrays	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTIDRAWARRAYSPROC                             gl3wMultiDrawArrays;$/;"	v
gl3wMultiDrawArraysIndirect	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTIDRAWARRAYSINDIRECTPROC                     gl3wMultiDrawArraysIndirect;$/;"	v
gl3wMultiDrawArraysIndirectBindlessCountNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC      gl3wMultiDrawArraysIndirectBindlessCountNV;$/;"	v
gl3wMultiDrawArraysIndirectBindlessNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC           gl3wMultiDrawArraysIndirectBindlessNV;$/;"	v
gl3wMultiDrawArraysIndirectCountARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC             gl3wMultiDrawArraysIndirectCountARB;$/;"	v
gl3wMultiDrawElements	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTIDRAWELEMENTSPROC                           gl3wMultiDrawElements;$/;"	v
gl3wMultiDrawElementsBaseVertex	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC                 gl3wMultiDrawElementsBaseVertex;$/;"	v
gl3wMultiDrawElementsIndirect	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTIDRAWELEMENTSINDIRECTPROC                   gl3wMultiDrawElementsIndirect;$/;"	v
gl3wMultiDrawElementsIndirectBindlessCountNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC    gl3wMultiDrawElementsIndirectBindlessCountNV;$/;"	v
gl3wMultiDrawElementsIndirectBindlessNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC         gl3wMultiDrawElementsIndirectBindlessNV;$/;"	v
gl3wMultiDrawElementsIndirectCountARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC           gl3wMultiDrawElementsIndirectCountARB;$/;"	v
gl3wMultiTexBufferEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXBUFFEREXTPROC                           gl3wMultiTexBufferEXT;$/;"	v
gl3wMultiTexCoordPointerEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXCOORDPOINTEREXTPROC                     gl3wMultiTexCoordPointerEXT;$/;"	v
gl3wMultiTexEnvfEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXENVFEXTPROC                             gl3wMultiTexEnvfEXT;$/;"	v
gl3wMultiTexEnvfvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXENVFVEXTPROC                            gl3wMultiTexEnvfvEXT;$/;"	v
gl3wMultiTexEnviEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXENVIEXTPROC                             gl3wMultiTexEnviEXT;$/;"	v
gl3wMultiTexEnvivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXENVIVEXTPROC                            gl3wMultiTexEnvivEXT;$/;"	v
gl3wMultiTexGendEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXGENDEXTPROC                             gl3wMultiTexGendEXT;$/;"	v
gl3wMultiTexGendvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXGENDVEXTPROC                            gl3wMultiTexGendvEXT;$/;"	v
gl3wMultiTexGenfEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXGENFEXTPROC                             gl3wMultiTexGenfEXT;$/;"	v
gl3wMultiTexGenfvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXGENFVEXTPROC                            gl3wMultiTexGenfvEXT;$/;"	v
gl3wMultiTexGeniEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXGENIEXTPROC                             gl3wMultiTexGeniEXT;$/;"	v
gl3wMultiTexGenivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXGENIVEXTPROC                            gl3wMultiTexGenivEXT;$/;"	v
gl3wMultiTexImage1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXIMAGE1DEXTPROC                          gl3wMultiTexImage1DEXT;$/;"	v
gl3wMultiTexImage2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXIMAGE2DEXTPROC                          gl3wMultiTexImage2DEXT;$/;"	v
gl3wMultiTexImage3DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXIMAGE3DEXTPROC                          gl3wMultiTexImage3DEXT;$/;"	v
gl3wMultiTexParameterIivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXPARAMETERIIVEXTPROC                     gl3wMultiTexParameterIivEXT;$/;"	v
gl3wMultiTexParameterIuivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXPARAMETERIUIVEXTPROC                    gl3wMultiTexParameterIuivEXT;$/;"	v
gl3wMultiTexParameterfEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXPARAMETERFEXTPROC                       gl3wMultiTexParameterfEXT;$/;"	v
gl3wMultiTexParameterfvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXPARAMETERFVEXTPROC                      gl3wMultiTexParameterfvEXT;$/;"	v
gl3wMultiTexParameteriEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXPARAMETERIEXTPROC                       gl3wMultiTexParameteriEXT;$/;"	v
gl3wMultiTexParameterivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXPARAMETERIVEXTPROC                      gl3wMultiTexParameterivEXT;$/;"	v
gl3wMultiTexRenderbufferEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXRENDERBUFFEREXTPROC                     gl3wMultiTexRenderbufferEXT;$/;"	v
gl3wMultiTexSubImage1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXSUBIMAGE1DEXTPROC                       gl3wMultiTexSubImage1DEXT;$/;"	v
gl3wMultiTexSubImage2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXSUBIMAGE2DEXTPROC                       gl3wMultiTexSubImage2DEXT;$/;"	v
gl3wMultiTexSubImage3DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLMULTITEXSUBIMAGE3DEXTPROC                       gl3wMultiTexSubImage3DEXT;$/;"	v
gl3wNamedBufferData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDBUFFERDATAPROC                             gl3wNamedBufferData;$/;"	v
gl3wNamedBufferDataEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDBUFFERDATAEXTPROC                          gl3wNamedBufferDataEXT;$/;"	v
gl3wNamedBufferPageCommitmentARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC                gl3wNamedBufferPageCommitmentARB;$/;"	v
gl3wNamedBufferPageCommitmentEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC                gl3wNamedBufferPageCommitmentEXT;$/;"	v
gl3wNamedBufferStorage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDBUFFERSTORAGEPROC                          gl3wNamedBufferStorage;$/;"	v
gl3wNamedBufferStorageEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDBUFFERSTORAGEEXTPROC                       gl3wNamedBufferStorageEXT;$/;"	v
gl3wNamedBufferSubData	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDBUFFERSUBDATAPROC                          gl3wNamedBufferSubData;$/;"	v
gl3wNamedBufferSubDataEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDBUFFERSUBDATAEXTPROC                       gl3wNamedBufferSubDataEXT;$/;"	v
gl3wNamedCopyBufferSubDataEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC                   gl3wNamedCopyBufferSubDataEXT;$/;"	v
gl3wNamedFramebufferDrawBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC                  gl3wNamedFramebufferDrawBuffer;$/;"	v
gl3wNamedFramebufferDrawBuffers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC                 gl3wNamedFramebufferDrawBuffers;$/;"	v
gl3wNamedFramebufferParameteri	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC                  gl3wNamedFramebufferParameteri;$/;"	v
gl3wNamedFramebufferParameteriEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC               gl3wNamedFramebufferParameteriEXT;$/;"	v
gl3wNamedFramebufferReadBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC                  gl3wNamedFramebufferReadBuffer;$/;"	v
gl3wNamedFramebufferRenderbuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC                gl3wNamedFramebufferRenderbuffer;$/;"	v
gl3wNamedFramebufferRenderbufferEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC             gl3wNamedFramebufferRenderbufferEXT;$/;"	v
gl3wNamedFramebufferSampleLocationsfvARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC        gl3wNamedFramebufferSampleLocationsfvARB;$/;"	v
gl3wNamedFramebufferSampleLocationsfvNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC         gl3wNamedFramebufferSampleLocationsfvNV;$/;"	v
gl3wNamedFramebufferTexture	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERTEXTUREPROC                     gl3wNamedFramebufferTexture;$/;"	v
gl3wNamedFramebufferTexture1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC                gl3wNamedFramebufferTexture1DEXT;$/;"	v
gl3wNamedFramebufferTexture2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC                gl3wNamedFramebufferTexture2DEXT;$/;"	v
gl3wNamedFramebufferTexture3DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC                gl3wNamedFramebufferTexture3DEXT;$/;"	v
gl3wNamedFramebufferTextureEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC                  gl3wNamedFramebufferTextureEXT;$/;"	v
gl3wNamedFramebufferTextureFaceEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC              gl3wNamedFramebufferTextureFaceEXT;$/;"	v
gl3wNamedFramebufferTextureLayer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC                gl3wNamedFramebufferTextureLayer;$/;"	v
gl3wNamedFramebufferTextureLayerEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC             gl3wNamedFramebufferTextureLayerEXT;$/;"	v
gl3wNamedProgramLocalParameter4dEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC             gl3wNamedProgramLocalParameter4dEXT;$/;"	v
gl3wNamedProgramLocalParameter4dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC            gl3wNamedProgramLocalParameter4dvEXT;$/;"	v
gl3wNamedProgramLocalParameter4fEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC             gl3wNamedProgramLocalParameter4fEXT;$/;"	v
gl3wNamedProgramLocalParameter4fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC            gl3wNamedProgramLocalParameter4fvEXT;$/;"	v
gl3wNamedProgramLocalParameterI4iEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC            gl3wNamedProgramLocalParameterI4iEXT;$/;"	v
gl3wNamedProgramLocalParameterI4ivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC           gl3wNamedProgramLocalParameterI4ivEXT;$/;"	v
gl3wNamedProgramLocalParameterI4uiEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC           gl3wNamedProgramLocalParameterI4uiEXT;$/;"	v
gl3wNamedProgramLocalParameterI4uivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC          gl3wNamedProgramLocalParameterI4uivEXT;$/;"	v
gl3wNamedProgramLocalParameters4fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC           gl3wNamedProgramLocalParameters4fvEXT;$/;"	v
gl3wNamedProgramLocalParametersI4ivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC          gl3wNamedProgramLocalParametersI4ivEXT;$/;"	v
gl3wNamedProgramLocalParametersI4uivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC         gl3wNamedProgramLocalParametersI4uivEXT;$/;"	v
gl3wNamedProgramStringEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDPROGRAMSTRINGEXTPROC                       gl3wNamedProgramStringEXT;$/;"	v
gl3wNamedRenderbufferStorage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDRENDERBUFFERSTORAGEPROC                    gl3wNamedRenderbufferStorage;$/;"	v
gl3wNamedRenderbufferStorageEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC                 gl3wNamedRenderbufferStorageEXT;$/;"	v
gl3wNamedRenderbufferStorageMultisample	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC         gl3wNamedRenderbufferStorageMultisample;$/;"	v
gl3wNamedRenderbufferStorageMultisampleCoverageEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC gl3wNamedRenderbufferStorageMultisampleCoverageEXT;$/;"	v
gl3wNamedRenderbufferStorageMultisampleEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC      gl3wNamedRenderbufferStorageMultisampleEXT;$/;"	v
gl3wNamedStringARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNAMEDSTRINGARBPROC                              gl3wNamedStringARB;$/;"	v
gl3wNormalFormatNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLNORMALFORMATNVPROC                              gl3wNormalFormatNV;$/;"	v
gl3wObjectLabel	thirdparty/opengl/src/gl3w.cpp	/^PFNGLOBJECTLABELPROC                                 gl3wObjectLabel;$/;"	v
gl3wObjectPtrLabel	thirdparty/opengl/src/gl3w.cpp	/^PFNGLOBJECTPTRLABELPROC                              gl3wObjectPtrLabel;$/;"	v
gl3wPatchParameterfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATCHPARAMETERFVPROC                            gl3wPatchParameterfv;$/;"	v
gl3wPatchParameteri	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATCHPARAMETERIPROC                             gl3wPatchParameteri;$/;"	v
gl3wPathCommandsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHCOMMANDSNVPROC                              gl3wPathCommandsNV;$/;"	v
gl3wPathCoordsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHCOORDSNVPROC                                gl3wPathCoordsNV;$/;"	v
gl3wPathCoverDepthFuncNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHCOVERDEPTHFUNCNVPROC                        gl3wPathCoverDepthFuncNV;$/;"	v
gl3wPathDashArrayNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHDASHARRAYNVPROC                             gl3wPathDashArrayNV;$/;"	v
gl3wPathGlyphIndexArrayNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHGLYPHINDEXARRAYNVPROC                       gl3wPathGlyphIndexArrayNV;$/;"	v
gl3wPathGlyphIndexRangeNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHGLYPHINDEXRANGENVPROC                       gl3wPathGlyphIndexRangeNV;$/;"	v
gl3wPathGlyphRangeNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHGLYPHRANGENVPROC                            gl3wPathGlyphRangeNV;$/;"	v
gl3wPathGlyphsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHGLYPHSNVPROC                                gl3wPathGlyphsNV;$/;"	v
gl3wPathMemoryGlyphIndexArrayNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC                 gl3wPathMemoryGlyphIndexArrayNV;$/;"	v
gl3wPathParameterfNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHPARAMETERFNVPROC                            gl3wPathParameterfNV;$/;"	v
gl3wPathParameterfvNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHPARAMETERFVNVPROC                           gl3wPathParameterfvNV;$/;"	v
gl3wPathParameteriNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHPARAMETERINVPROC                            gl3wPathParameteriNV;$/;"	v
gl3wPathParameterivNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHPARAMETERIVNVPROC                           gl3wPathParameterivNV;$/;"	v
gl3wPathStencilDepthOffsetNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHSTENCILDEPTHOFFSETNVPROC                    gl3wPathStencilDepthOffsetNV;$/;"	v
gl3wPathStencilFuncNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHSTENCILFUNCNVPROC                           gl3wPathStencilFuncNV;$/;"	v
gl3wPathStringNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHSTRINGNVPROC                                gl3wPathStringNV;$/;"	v
gl3wPathSubCommandsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHSUBCOMMANDSNVPROC                           gl3wPathSubCommandsNV;$/;"	v
gl3wPathSubCoordsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPATHSUBCOORDSNVPROC                             gl3wPathSubCoordsNV;$/;"	v
gl3wPauseTransformFeedback	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPAUSETRANSFORMFEEDBACKPROC                      gl3wPauseTransformFeedback;$/;"	v
gl3wPixelStoref	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPIXELSTOREFPROC                                 gl3wPixelStoref;$/;"	v
gl3wPixelStorei	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPIXELSTOREIPROC                                 gl3wPixelStorei;$/;"	v
gl3wPointAlongPathNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPOINTALONGPATHNVPROC                            gl3wPointAlongPathNV;$/;"	v
gl3wPointParameterf	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPOINTPARAMETERFPROC                             gl3wPointParameterf;$/;"	v
gl3wPointParameterfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPOINTPARAMETERFVPROC                            gl3wPointParameterfv;$/;"	v
gl3wPointParameteri	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPOINTPARAMETERIPROC                             gl3wPointParameteri;$/;"	v
gl3wPointParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPOINTPARAMETERIVPROC                            gl3wPointParameteriv;$/;"	v
gl3wPointSize	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPOINTSIZEPROC                                   gl3wPointSize;$/;"	v
gl3wPolygonMode	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPOLYGONMODEPROC                                 gl3wPolygonMode;$/;"	v
gl3wPolygonOffset	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPOLYGONOFFSETPROC                               gl3wPolygonOffset;$/;"	v
gl3wPolygonOffsetClampEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPOLYGONOFFSETCLAMPEXTPROC                       gl3wPolygonOffsetClampEXT;$/;"	v
gl3wPopDebugGroup	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPOPDEBUGGROUPPROC                               gl3wPopDebugGroup;$/;"	v
gl3wPopGroupMarkerEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPOPGROUPMARKEREXTPROC                           gl3wPopGroupMarkerEXT;$/;"	v
gl3wPrimitiveBoundingBoxARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPRIMITIVEBOUNDINGBOXARBPROC                     gl3wPrimitiveBoundingBoxARB;$/;"	v
gl3wPrimitiveRestartIndex	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPRIMITIVERESTARTINDEXPROC                       gl3wPrimitiveRestartIndex;$/;"	v
gl3wProgramBinary	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMBINARYPROC                               gl3wProgramBinary;$/;"	v
gl3wProgramParameteri	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMPARAMETERIPROC                           gl3wProgramParameteri;$/;"	v
gl3wProgramParameteriARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMPARAMETERIARBPROC                        gl3wProgramParameteriARB;$/;"	v
gl3wProgramPathFragmentInputGenNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC               gl3wProgramPathFragmentInputGenNV;$/;"	v
gl3wProgramUniform1d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1DPROC                            gl3wProgramUniform1d;$/;"	v
gl3wProgramUniform1dEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1DEXTPROC                         gl3wProgramUniform1dEXT;$/;"	v
gl3wProgramUniform1dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1DVPROC                           gl3wProgramUniform1dv;$/;"	v
gl3wProgramUniform1dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1DVEXTPROC                        gl3wProgramUniform1dvEXT;$/;"	v
gl3wProgramUniform1f	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1FPROC                            gl3wProgramUniform1f;$/;"	v
gl3wProgramUniform1fEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1FEXTPROC                         gl3wProgramUniform1fEXT;$/;"	v
gl3wProgramUniform1fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1FVPROC                           gl3wProgramUniform1fv;$/;"	v
gl3wProgramUniform1fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1FVEXTPROC                        gl3wProgramUniform1fvEXT;$/;"	v
gl3wProgramUniform1i	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1IPROC                            gl3wProgramUniform1i;$/;"	v
gl3wProgramUniform1i64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1I64ARBPROC                       gl3wProgramUniform1i64ARB;$/;"	v
gl3wProgramUniform1i64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1I64NVPROC                        gl3wProgramUniform1i64NV;$/;"	v
gl3wProgramUniform1i64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1I64VARBPROC                      gl3wProgramUniform1i64vARB;$/;"	v
gl3wProgramUniform1i64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1I64VNVPROC                       gl3wProgramUniform1i64vNV;$/;"	v
gl3wProgramUniform1iEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1IEXTPROC                         gl3wProgramUniform1iEXT;$/;"	v
gl3wProgramUniform1iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1IVPROC                           gl3wProgramUniform1iv;$/;"	v
gl3wProgramUniform1ivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1IVEXTPROC                        gl3wProgramUniform1ivEXT;$/;"	v
gl3wProgramUniform1ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1UIPROC                           gl3wProgramUniform1ui;$/;"	v
gl3wProgramUniform1ui64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1UI64ARBPROC                      gl3wProgramUniform1ui64ARB;$/;"	v
gl3wProgramUniform1ui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1UI64NVPROC                       gl3wProgramUniform1ui64NV;$/;"	v
gl3wProgramUniform1ui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1UI64VARBPROC                     gl3wProgramUniform1ui64vARB;$/;"	v
gl3wProgramUniform1ui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1UI64VNVPROC                      gl3wProgramUniform1ui64vNV;$/;"	v
gl3wProgramUniform1uiEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1UIEXTPROC                        gl3wProgramUniform1uiEXT;$/;"	v
gl3wProgramUniform1uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1UIVPROC                          gl3wProgramUniform1uiv;$/;"	v
gl3wProgramUniform1uivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM1UIVEXTPROC                       gl3wProgramUniform1uivEXT;$/;"	v
gl3wProgramUniform2d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2DPROC                            gl3wProgramUniform2d;$/;"	v
gl3wProgramUniform2dEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2DEXTPROC                         gl3wProgramUniform2dEXT;$/;"	v
gl3wProgramUniform2dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2DVPROC                           gl3wProgramUniform2dv;$/;"	v
gl3wProgramUniform2dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2DVEXTPROC                        gl3wProgramUniform2dvEXT;$/;"	v
gl3wProgramUniform2f	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2FPROC                            gl3wProgramUniform2f;$/;"	v
gl3wProgramUniform2fEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2FEXTPROC                         gl3wProgramUniform2fEXT;$/;"	v
gl3wProgramUniform2fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2FVPROC                           gl3wProgramUniform2fv;$/;"	v
gl3wProgramUniform2fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2FVEXTPROC                        gl3wProgramUniform2fvEXT;$/;"	v
gl3wProgramUniform2i	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2IPROC                            gl3wProgramUniform2i;$/;"	v
gl3wProgramUniform2i64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2I64ARBPROC                       gl3wProgramUniform2i64ARB;$/;"	v
gl3wProgramUniform2i64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2I64NVPROC                        gl3wProgramUniform2i64NV;$/;"	v
gl3wProgramUniform2i64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2I64VARBPROC                      gl3wProgramUniform2i64vARB;$/;"	v
gl3wProgramUniform2i64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2I64VNVPROC                       gl3wProgramUniform2i64vNV;$/;"	v
gl3wProgramUniform2iEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2IEXTPROC                         gl3wProgramUniform2iEXT;$/;"	v
gl3wProgramUniform2iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2IVPROC                           gl3wProgramUniform2iv;$/;"	v
gl3wProgramUniform2ivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2IVEXTPROC                        gl3wProgramUniform2ivEXT;$/;"	v
gl3wProgramUniform2ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2UIPROC                           gl3wProgramUniform2ui;$/;"	v
gl3wProgramUniform2ui64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2UI64ARBPROC                      gl3wProgramUniform2ui64ARB;$/;"	v
gl3wProgramUniform2ui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2UI64NVPROC                       gl3wProgramUniform2ui64NV;$/;"	v
gl3wProgramUniform2ui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2UI64VARBPROC                     gl3wProgramUniform2ui64vARB;$/;"	v
gl3wProgramUniform2ui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2UI64VNVPROC                      gl3wProgramUniform2ui64vNV;$/;"	v
gl3wProgramUniform2uiEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2UIEXTPROC                        gl3wProgramUniform2uiEXT;$/;"	v
gl3wProgramUniform2uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2UIVPROC                          gl3wProgramUniform2uiv;$/;"	v
gl3wProgramUniform2uivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM2UIVEXTPROC                       gl3wProgramUniform2uivEXT;$/;"	v
gl3wProgramUniform3d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3DPROC                            gl3wProgramUniform3d;$/;"	v
gl3wProgramUniform3dEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3DEXTPROC                         gl3wProgramUniform3dEXT;$/;"	v
gl3wProgramUniform3dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3DVPROC                           gl3wProgramUniform3dv;$/;"	v
gl3wProgramUniform3dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3DVEXTPROC                        gl3wProgramUniform3dvEXT;$/;"	v
gl3wProgramUniform3f	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3FPROC                            gl3wProgramUniform3f;$/;"	v
gl3wProgramUniform3fEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3FEXTPROC                         gl3wProgramUniform3fEXT;$/;"	v
gl3wProgramUniform3fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3FVPROC                           gl3wProgramUniform3fv;$/;"	v
gl3wProgramUniform3fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3FVEXTPROC                        gl3wProgramUniform3fvEXT;$/;"	v
gl3wProgramUniform3i	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3IPROC                            gl3wProgramUniform3i;$/;"	v
gl3wProgramUniform3i64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3I64ARBPROC                       gl3wProgramUniform3i64ARB;$/;"	v
gl3wProgramUniform3i64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3I64NVPROC                        gl3wProgramUniform3i64NV;$/;"	v
gl3wProgramUniform3i64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3I64VARBPROC                      gl3wProgramUniform3i64vARB;$/;"	v
gl3wProgramUniform3i64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3I64VNVPROC                       gl3wProgramUniform3i64vNV;$/;"	v
gl3wProgramUniform3iEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3IEXTPROC                         gl3wProgramUniform3iEXT;$/;"	v
gl3wProgramUniform3iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3IVPROC                           gl3wProgramUniform3iv;$/;"	v
gl3wProgramUniform3ivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3IVEXTPROC                        gl3wProgramUniform3ivEXT;$/;"	v
gl3wProgramUniform3ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3UIPROC                           gl3wProgramUniform3ui;$/;"	v
gl3wProgramUniform3ui64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3UI64ARBPROC                      gl3wProgramUniform3ui64ARB;$/;"	v
gl3wProgramUniform3ui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3UI64NVPROC                       gl3wProgramUniform3ui64NV;$/;"	v
gl3wProgramUniform3ui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3UI64VARBPROC                     gl3wProgramUniform3ui64vARB;$/;"	v
gl3wProgramUniform3ui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3UI64VNVPROC                      gl3wProgramUniform3ui64vNV;$/;"	v
gl3wProgramUniform3uiEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3UIEXTPROC                        gl3wProgramUniform3uiEXT;$/;"	v
gl3wProgramUniform3uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3UIVPROC                          gl3wProgramUniform3uiv;$/;"	v
gl3wProgramUniform3uivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM3UIVEXTPROC                       gl3wProgramUniform3uivEXT;$/;"	v
gl3wProgramUniform4d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4DPROC                            gl3wProgramUniform4d;$/;"	v
gl3wProgramUniform4dEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4DEXTPROC                         gl3wProgramUniform4dEXT;$/;"	v
gl3wProgramUniform4dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4DVPROC                           gl3wProgramUniform4dv;$/;"	v
gl3wProgramUniform4dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4DVEXTPROC                        gl3wProgramUniform4dvEXT;$/;"	v
gl3wProgramUniform4f	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4FPROC                            gl3wProgramUniform4f;$/;"	v
gl3wProgramUniform4fEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4FEXTPROC                         gl3wProgramUniform4fEXT;$/;"	v
gl3wProgramUniform4fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4FVPROC                           gl3wProgramUniform4fv;$/;"	v
gl3wProgramUniform4fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4FVEXTPROC                        gl3wProgramUniform4fvEXT;$/;"	v
gl3wProgramUniform4i	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4IPROC                            gl3wProgramUniform4i;$/;"	v
gl3wProgramUniform4i64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4I64ARBPROC                       gl3wProgramUniform4i64ARB;$/;"	v
gl3wProgramUniform4i64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4I64NVPROC                        gl3wProgramUniform4i64NV;$/;"	v
gl3wProgramUniform4i64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4I64VARBPROC                      gl3wProgramUniform4i64vARB;$/;"	v
gl3wProgramUniform4i64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4I64VNVPROC                       gl3wProgramUniform4i64vNV;$/;"	v
gl3wProgramUniform4iEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4IEXTPROC                         gl3wProgramUniform4iEXT;$/;"	v
gl3wProgramUniform4iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4IVPROC                           gl3wProgramUniform4iv;$/;"	v
gl3wProgramUniform4ivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4IVEXTPROC                        gl3wProgramUniform4ivEXT;$/;"	v
gl3wProgramUniform4ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4UIPROC                           gl3wProgramUniform4ui;$/;"	v
gl3wProgramUniform4ui64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4UI64ARBPROC                      gl3wProgramUniform4ui64ARB;$/;"	v
gl3wProgramUniform4ui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4UI64NVPROC                       gl3wProgramUniform4ui64NV;$/;"	v
gl3wProgramUniform4ui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4UI64VARBPROC                     gl3wProgramUniform4ui64vARB;$/;"	v
gl3wProgramUniform4ui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4UI64VNVPROC                      gl3wProgramUniform4ui64vNV;$/;"	v
gl3wProgramUniform4uiEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4UIEXTPROC                        gl3wProgramUniform4uiEXT;$/;"	v
gl3wProgramUniform4uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4UIVPROC                          gl3wProgramUniform4uiv;$/;"	v
gl3wProgramUniform4uivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORM4UIVEXTPROC                       gl3wProgramUniform4uivEXT;$/;"	v
gl3wProgramUniformHandleui64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC                 gl3wProgramUniformHandleui64ARB;$/;"	v
gl3wProgramUniformHandleui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC                  gl3wProgramUniformHandleui64NV;$/;"	v
gl3wProgramUniformHandleui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC                gl3wProgramUniformHandleui64vARB;$/;"	v
gl3wProgramUniformHandleui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC                 gl3wProgramUniformHandleui64vNV;$/;"	v
gl3wProgramUniformMatrix2dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX2DVPROC                     gl3wProgramUniformMatrix2dv;$/;"	v
gl3wProgramUniformMatrix2dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC                  gl3wProgramUniformMatrix2dvEXT;$/;"	v
gl3wProgramUniformMatrix2fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX2FVPROC                     gl3wProgramUniformMatrix2fv;$/;"	v
gl3wProgramUniformMatrix2fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC                  gl3wProgramUniformMatrix2fvEXT;$/;"	v
gl3wProgramUniformMatrix2x3dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC                   gl3wProgramUniformMatrix2x3dv;$/;"	v
gl3wProgramUniformMatrix2x3dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC                gl3wProgramUniformMatrix2x3dvEXT;$/;"	v
gl3wProgramUniformMatrix2x3fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC                   gl3wProgramUniformMatrix2x3fv;$/;"	v
gl3wProgramUniformMatrix2x3fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC                gl3wProgramUniformMatrix2x3fvEXT;$/;"	v
gl3wProgramUniformMatrix2x4dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC                   gl3wProgramUniformMatrix2x4dv;$/;"	v
gl3wProgramUniformMatrix2x4dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC                gl3wProgramUniformMatrix2x4dvEXT;$/;"	v
gl3wProgramUniformMatrix2x4fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC                   gl3wProgramUniformMatrix2x4fv;$/;"	v
gl3wProgramUniformMatrix2x4fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC                gl3wProgramUniformMatrix2x4fvEXT;$/;"	v
gl3wProgramUniformMatrix3dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX3DVPROC                     gl3wProgramUniformMatrix3dv;$/;"	v
gl3wProgramUniformMatrix3dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC                  gl3wProgramUniformMatrix3dvEXT;$/;"	v
gl3wProgramUniformMatrix3fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX3FVPROC                     gl3wProgramUniformMatrix3fv;$/;"	v
gl3wProgramUniformMatrix3fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC                  gl3wProgramUniformMatrix3fvEXT;$/;"	v
gl3wProgramUniformMatrix3x2dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC                   gl3wProgramUniformMatrix3x2dv;$/;"	v
gl3wProgramUniformMatrix3x2dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC                gl3wProgramUniformMatrix3x2dvEXT;$/;"	v
gl3wProgramUniformMatrix3x2fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC                   gl3wProgramUniformMatrix3x2fv;$/;"	v
gl3wProgramUniformMatrix3x2fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC                gl3wProgramUniformMatrix3x2fvEXT;$/;"	v
gl3wProgramUniformMatrix3x4dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC                   gl3wProgramUniformMatrix3x4dv;$/;"	v
gl3wProgramUniformMatrix3x4dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC                gl3wProgramUniformMatrix3x4dvEXT;$/;"	v
gl3wProgramUniformMatrix3x4fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC                   gl3wProgramUniformMatrix3x4fv;$/;"	v
gl3wProgramUniformMatrix3x4fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC                gl3wProgramUniformMatrix3x4fvEXT;$/;"	v
gl3wProgramUniformMatrix4dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX4DVPROC                     gl3wProgramUniformMatrix4dv;$/;"	v
gl3wProgramUniformMatrix4dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC                  gl3wProgramUniformMatrix4dvEXT;$/;"	v
gl3wProgramUniformMatrix4fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX4FVPROC                     gl3wProgramUniformMatrix4fv;$/;"	v
gl3wProgramUniformMatrix4fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC                  gl3wProgramUniformMatrix4fvEXT;$/;"	v
gl3wProgramUniformMatrix4x2dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC                   gl3wProgramUniformMatrix4x2dv;$/;"	v
gl3wProgramUniformMatrix4x2dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC                gl3wProgramUniformMatrix4x2dvEXT;$/;"	v
gl3wProgramUniformMatrix4x2fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC                   gl3wProgramUniformMatrix4x2fv;$/;"	v
gl3wProgramUniformMatrix4x2fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC                gl3wProgramUniformMatrix4x2fvEXT;$/;"	v
gl3wProgramUniformMatrix4x3dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC                   gl3wProgramUniformMatrix4x3dv;$/;"	v
gl3wProgramUniformMatrix4x3dvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC                gl3wProgramUniformMatrix4x3dvEXT;$/;"	v
gl3wProgramUniformMatrix4x3fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC                   gl3wProgramUniformMatrix4x3fv;$/;"	v
gl3wProgramUniformMatrix4x3fvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC                gl3wProgramUniformMatrix4x3fvEXT;$/;"	v
gl3wProgramUniformui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMUI64NVPROC                        gl3wProgramUniformui64NV;$/;"	v
gl3wProgramUniformui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROGRAMUNIFORMUI64VNVPROC                       gl3wProgramUniformui64vNV;$/;"	v
gl3wProvokingVertex	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPROVOKINGVERTEXPROC                             gl3wProvokingVertex;$/;"	v
gl3wPushClientAttribDefaultEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC                  gl3wPushClientAttribDefaultEXT;$/;"	v
gl3wPushDebugGroup	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPUSHDEBUGGROUPPROC                              gl3wPushDebugGroup;$/;"	v
gl3wPushGroupMarkerEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLPUSHGROUPMARKEREXTPROC                          gl3wPushGroupMarkerEXT;$/;"	v
gl3wQueryCounter	thirdparty/opengl/src/gl3w.cpp	/^PFNGLQUERYCOUNTERPROC                                gl3wQueryCounter;$/;"	v
gl3wRasterSamplesEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLRASTERSAMPLESEXTPROC                            gl3wRasterSamplesEXT;$/;"	v
gl3wReadBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLREADBUFFERPROC                                  gl3wReadBuffer;$/;"	v
gl3wReadPixels	thirdparty/opengl/src/gl3w.cpp	/^PFNGLREADPIXELSPROC                                  gl3wReadPixels;$/;"	v
gl3wReadnPixels	thirdparty/opengl/src/gl3w.cpp	/^PFNGLREADNPIXELSPROC                                 gl3wReadnPixels;$/;"	v
gl3wReadnPixelsARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLREADNPIXELSARBPROC                              gl3wReadnPixelsARB;$/;"	v
gl3wReleaseShaderCompiler	thirdparty/opengl/src/gl3w.cpp	/^PFNGLRELEASESHADERCOMPILERPROC                       gl3wReleaseShaderCompiler;$/;"	v
gl3wRenderbufferStorage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLRENDERBUFFERSTORAGEPROC                         gl3wRenderbufferStorage;$/;"	v
gl3wRenderbufferStorageMultisample	thirdparty/opengl/src/gl3w.cpp	/^PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC              gl3wRenderbufferStorageMultisample;$/;"	v
gl3wRenderbufferStorageMultisampleCoverageNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC    gl3wRenderbufferStorageMultisampleCoverageNV;$/;"	v
gl3wResolveDepthValuesNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLRESOLVEDEPTHVALUESNVPROC                        gl3wResolveDepthValuesNV;$/;"	v
gl3wResumeTransformFeedback	thirdparty/opengl/src/gl3w.cpp	/^PFNGLRESUMETRANSFORMFEEDBACKPROC                     gl3wResumeTransformFeedback;$/;"	v
gl3wSampleCoverage	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSAMPLECOVERAGEPROC                              gl3wSampleCoverage;$/;"	v
gl3wSampleMaski	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSAMPLEMASKIPROC                                 gl3wSampleMaski;$/;"	v
gl3wSamplerParameterIiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSAMPLERPARAMETERIIVPROC                         gl3wSamplerParameterIiv;$/;"	v
gl3wSamplerParameterIuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSAMPLERPARAMETERIUIVPROC                        gl3wSamplerParameterIuiv;$/;"	v
gl3wSamplerParameterf	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSAMPLERPARAMETERFPROC                           gl3wSamplerParameterf;$/;"	v
gl3wSamplerParameterfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSAMPLERPARAMETERFVPROC                          gl3wSamplerParameterfv;$/;"	v
gl3wSamplerParameteri	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSAMPLERPARAMETERIPROC                           gl3wSamplerParameteri;$/;"	v
gl3wSamplerParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSAMPLERPARAMETERIVPROC                          gl3wSamplerParameteriv;$/;"	v
gl3wScissor	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSCISSORPROC                                     gl3wScissor;$/;"	v
gl3wScissorArrayv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSCISSORARRAYVPROC                               gl3wScissorArrayv;$/;"	v
gl3wScissorIndexed	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSCISSORINDEXEDPROC                              gl3wScissorIndexed;$/;"	v
gl3wScissorIndexedv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSCISSORINDEXEDVPROC                             gl3wScissorIndexedv;$/;"	v
gl3wSecondaryColorFormatNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSECONDARYCOLORFORMATNVPROC                      gl3wSecondaryColorFormatNV;$/;"	v
gl3wSelectPerfMonitorCountersAMD	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSELECTPERFMONITORCOUNTERSAMDPROC                gl3wSelectPerfMonitorCountersAMD;$/;"	v
gl3wShaderBinary	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSHADERBINARYPROC                                gl3wShaderBinary;$/;"	v
gl3wShaderSource	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSHADERSOURCEPROC                                gl3wShaderSource;$/;"	v
gl3wShaderStorageBlockBinding	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSHADERSTORAGEBLOCKBINDINGPROC                   gl3wShaderStorageBlockBinding;$/;"	v
gl3wSignalVkFenceNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSIGNALVKFENCENVPROC                             gl3wSignalVkFenceNV;$/;"	v
gl3wSignalVkSemaphoreNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSIGNALVKSEMAPHORENVPROC                         gl3wSignalVkSemaphoreNV;$/;"	v
gl3wSpecializeShaderARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSPECIALIZESHADERARBPROC                         gl3wSpecializeShaderARB;$/;"	v
gl3wStateCaptureNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTATECAPTURENVPROC                              gl3wStateCaptureNV;$/;"	v
gl3wStencilFillPathInstancedNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILFILLPATHINSTANCEDNVPROC                  gl3wStencilFillPathInstancedNV;$/;"	v
gl3wStencilFillPathNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILFILLPATHNVPROC                           gl3wStencilFillPathNV;$/;"	v
gl3wStencilFunc	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILFUNCPROC                                 gl3wStencilFunc;$/;"	v
gl3wStencilFuncSeparate	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILFUNCSEPARATEPROC                         gl3wStencilFuncSeparate;$/;"	v
gl3wStencilMask	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILMASKPROC                                 gl3wStencilMask;$/;"	v
gl3wStencilMaskSeparate	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILMASKSEPARATEPROC                         gl3wStencilMaskSeparate;$/;"	v
gl3wStencilOp	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILOPPROC                                   gl3wStencilOp;$/;"	v
gl3wStencilOpSeparate	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILOPSEPARATEPROC                           gl3wStencilOpSeparate;$/;"	v
gl3wStencilStrokePathInstancedNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC                gl3wStencilStrokePathInstancedNV;$/;"	v
gl3wStencilStrokePathNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILSTROKEPATHNVPROC                         gl3wStencilStrokePathNV;$/;"	v
gl3wStencilThenCoverFillPathInstancedNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC         gl3wStencilThenCoverFillPathInstancedNV;$/;"	v
gl3wStencilThenCoverFillPathNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILTHENCOVERFILLPATHNVPROC                  gl3wStencilThenCoverFillPathNV;$/;"	v
gl3wStencilThenCoverStrokePathInstancedNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC       gl3wStencilThenCoverStrokePathInstancedNV;$/;"	v
gl3wStencilThenCoverStrokePathNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC                gl3wStencilThenCoverStrokePathNV;$/;"	v
gl3wSubpixelPrecisionBiasNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLSUBPIXELPRECISIONBIASNVPROC                     gl3wSubpixelPrecisionBiasNV;$/;"	v
gl3wTexBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXBUFFERPROC                                   gl3wTexBuffer;$/;"	v
gl3wTexBufferARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXBUFFERARBPROC                                gl3wTexBufferARB;$/;"	v
gl3wTexBufferRange	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXBUFFERRANGEPROC                              gl3wTexBufferRange;$/;"	v
gl3wTexCoordFormatNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXCOORDFORMATNVPROC                            gl3wTexCoordFormatNV;$/;"	v
gl3wTexImage1D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXIMAGE1DPROC                                  gl3wTexImage1D;$/;"	v
gl3wTexImage2D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXIMAGE2DPROC                                  gl3wTexImage2D;$/;"	v
gl3wTexImage2DMultisample	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXIMAGE2DMULTISAMPLEPROC                       gl3wTexImage2DMultisample;$/;"	v
gl3wTexImage3D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXIMAGE3DPROC                                  gl3wTexImage3D;$/;"	v
gl3wTexImage3DMultisample	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXIMAGE3DMULTISAMPLEPROC                       gl3wTexImage3DMultisample;$/;"	v
gl3wTexPageCommitmentARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXPAGECOMMITMENTARBPROC                        gl3wTexPageCommitmentARB;$/;"	v
gl3wTexParameterIiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXPARAMETERIIVPROC                             gl3wTexParameterIiv;$/;"	v
gl3wTexParameterIuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXPARAMETERIUIVPROC                            gl3wTexParameterIuiv;$/;"	v
gl3wTexParameterf	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXPARAMETERFPROC                               gl3wTexParameterf;$/;"	v
gl3wTexParameterfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXPARAMETERFVPROC                              gl3wTexParameterfv;$/;"	v
gl3wTexParameteri	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXPARAMETERIPROC                               gl3wTexParameteri;$/;"	v
gl3wTexParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXPARAMETERIVPROC                              gl3wTexParameteriv;$/;"	v
gl3wTexStorage1D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXSTORAGE1DPROC                                gl3wTexStorage1D;$/;"	v
gl3wTexStorage2D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXSTORAGE2DPROC                                gl3wTexStorage2D;$/;"	v
gl3wTexStorage2DMultisample	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXSTORAGE2DMULTISAMPLEPROC                     gl3wTexStorage2DMultisample;$/;"	v
gl3wTexStorage3D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXSTORAGE3DPROC                                gl3wTexStorage3D;$/;"	v
gl3wTexStorage3DMultisample	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXSTORAGE3DMULTISAMPLEPROC                     gl3wTexStorage3DMultisample;$/;"	v
gl3wTexSubImage1D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXSUBIMAGE1DPROC                               gl3wTexSubImage1D;$/;"	v
gl3wTexSubImage2D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXSUBIMAGE2DPROC                               gl3wTexSubImage2D;$/;"	v
gl3wTexSubImage3D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXSUBIMAGE3DPROC                               gl3wTexSubImage3D;$/;"	v
gl3wTextureBarrier	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREBARRIERPROC                              gl3wTextureBarrier;$/;"	v
gl3wTextureBarrierNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREBARRIERNVPROC                            gl3wTextureBarrierNV;$/;"	v
gl3wTextureBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREBUFFERPROC                               gl3wTextureBuffer;$/;"	v
gl3wTextureBufferEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREBUFFEREXTPROC                            gl3wTextureBufferEXT;$/;"	v
gl3wTextureBufferRange	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREBUFFERRANGEPROC                          gl3wTextureBufferRange;$/;"	v
gl3wTextureBufferRangeEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREBUFFERRANGEEXTPROC                       gl3wTextureBufferRangeEXT;$/;"	v
gl3wTextureImage1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREIMAGE1DEXTPROC                           gl3wTextureImage1DEXT;$/;"	v
gl3wTextureImage2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREIMAGE2DEXTPROC                           gl3wTextureImage2DEXT;$/;"	v
gl3wTextureImage3DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREIMAGE3DEXTPROC                           gl3wTextureImage3DEXT;$/;"	v
gl3wTexturePageCommitmentEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREPAGECOMMITMENTEXTPROC                    gl3wTexturePageCommitmentEXT;$/;"	v
gl3wTextureParameterIiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREPARAMETERIIVPROC                         gl3wTextureParameterIiv;$/;"	v
gl3wTextureParameterIivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREPARAMETERIIVEXTPROC                      gl3wTextureParameterIivEXT;$/;"	v
gl3wTextureParameterIuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREPARAMETERIUIVPROC                        gl3wTextureParameterIuiv;$/;"	v
gl3wTextureParameterIuivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREPARAMETERIUIVEXTPROC                     gl3wTextureParameterIuivEXT;$/;"	v
gl3wTextureParameterf	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREPARAMETERFPROC                           gl3wTextureParameterf;$/;"	v
gl3wTextureParameterfEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREPARAMETERFEXTPROC                        gl3wTextureParameterfEXT;$/;"	v
gl3wTextureParameterfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREPARAMETERFVPROC                          gl3wTextureParameterfv;$/;"	v
gl3wTextureParameterfvEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREPARAMETERFVEXTPROC                       gl3wTextureParameterfvEXT;$/;"	v
gl3wTextureParameteri	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREPARAMETERIPROC                           gl3wTextureParameteri;$/;"	v
gl3wTextureParameteriEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREPARAMETERIEXTPROC                        gl3wTextureParameteriEXT;$/;"	v
gl3wTextureParameteriv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREPARAMETERIVPROC                          gl3wTextureParameteriv;$/;"	v
gl3wTextureParameterivEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREPARAMETERIVEXTPROC                       gl3wTextureParameterivEXT;$/;"	v
gl3wTextureRenderbufferEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURERENDERBUFFEREXTPROC                      gl3wTextureRenderbufferEXT;$/;"	v
gl3wTextureStorage1D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESTORAGE1DPROC                            gl3wTextureStorage1D;$/;"	v
gl3wTextureStorage1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESTORAGE1DEXTPROC                         gl3wTextureStorage1DEXT;$/;"	v
gl3wTextureStorage2D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESTORAGE2DPROC                            gl3wTextureStorage2D;$/;"	v
gl3wTextureStorage2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESTORAGE2DEXTPROC                         gl3wTextureStorage2DEXT;$/;"	v
gl3wTextureStorage2DMultisample	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC                 gl3wTextureStorage2DMultisample;$/;"	v
gl3wTextureStorage2DMultisampleEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC              gl3wTextureStorage2DMultisampleEXT;$/;"	v
gl3wTextureStorage3D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESTORAGE3DPROC                            gl3wTextureStorage3D;$/;"	v
gl3wTextureStorage3DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESTORAGE3DEXTPROC                         gl3wTextureStorage3DEXT;$/;"	v
gl3wTextureStorage3DMultisample	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC                 gl3wTextureStorage3DMultisample;$/;"	v
gl3wTextureStorage3DMultisampleEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC              gl3wTextureStorage3DMultisampleEXT;$/;"	v
gl3wTextureSubImage1D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESUBIMAGE1DPROC                           gl3wTextureSubImage1D;$/;"	v
gl3wTextureSubImage1DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESUBIMAGE1DEXTPROC                        gl3wTextureSubImage1DEXT;$/;"	v
gl3wTextureSubImage2D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESUBIMAGE2DPROC                           gl3wTextureSubImage2D;$/;"	v
gl3wTextureSubImage2DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESUBIMAGE2DEXTPROC                        gl3wTextureSubImage2DEXT;$/;"	v
gl3wTextureSubImage3D	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESUBIMAGE3DPROC                           gl3wTextureSubImage3D;$/;"	v
gl3wTextureSubImage3DEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTURESUBIMAGE3DEXTPROC                        gl3wTextureSubImage3DEXT;$/;"	v
gl3wTextureView	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTEXTUREVIEWPROC                                 gl3wTextureView;$/;"	v
gl3wTransformFeedbackBufferBase	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC                 gl3wTransformFeedbackBufferBase;$/;"	v
gl3wTransformFeedbackBufferRange	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC                gl3wTransformFeedbackBufferRange;$/;"	v
gl3wTransformFeedbackVaryings	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTRANSFORMFEEDBACKVARYINGSPROC                   gl3wTransformFeedbackVaryings;$/;"	v
gl3wTransformPathNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLTRANSFORMPATHNVPROC                             gl3wTransformPathNV;$/;"	v
gl3wUniform1d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1DPROC                                   gl3wUniform1d;$/;"	v
gl3wUniform1dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1DVPROC                                  gl3wUniform1dv;$/;"	v
gl3wUniform1f	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1FPROC                                   gl3wUniform1f;$/;"	v
gl3wUniform1fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1FVPROC                                  gl3wUniform1fv;$/;"	v
gl3wUniform1i	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1IPROC                                   gl3wUniform1i;$/;"	v
gl3wUniform1i64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1I64ARBPROC                              gl3wUniform1i64ARB;$/;"	v
gl3wUniform1i64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1I64NVPROC                               gl3wUniform1i64NV;$/;"	v
gl3wUniform1i64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1I64VARBPROC                             gl3wUniform1i64vARB;$/;"	v
gl3wUniform1i64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1I64VNVPROC                              gl3wUniform1i64vNV;$/;"	v
gl3wUniform1iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1IVPROC                                  gl3wUniform1iv;$/;"	v
gl3wUniform1ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1UIPROC                                  gl3wUniform1ui;$/;"	v
gl3wUniform1ui64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1UI64ARBPROC                             gl3wUniform1ui64ARB;$/;"	v
gl3wUniform1ui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1UI64NVPROC                              gl3wUniform1ui64NV;$/;"	v
gl3wUniform1ui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1UI64VARBPROC                            gl3wUniform1ui64vARB;$/;"	v
gl3wUniform1ui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1UI64VNVPROC                             gl3wUniform1ui64vNV;$/;"	v
gl3wUniform1uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM1UIVPROC                                 gl3wUniform1uiv;$/;"	v
gl3wUniform2d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2DPROC                                   gl3wUniform2d;$/;"	v
gl3wUniform2dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2DVPROC                                  gl3wUniform2dv;$/;"	v
gl3wUniform2f	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2FPROC                                   gl3wUniform2f;$/;"	v
gl3wUniform2fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2FVPROC                                  gl3wUniform2fv;$/;"	v
gl3wUniform2i	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2IPROC                                   gl3wUniform2i;$/;"	v
gl3wUniform2i64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2I64ARBPROC                              gl3wUniform2i64ARB;$/;"	v
gl3wUniform2i64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2I64NVPROC                               gl3wUniform2i64NV;$/;"	v
gl3wUniform2i64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2I64VARBPROC                             gl3wUniform2i64vARB;$/;"	v
gl3wUniform2i64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2I64VNVPROC                              gl3wUniform2i64vNV;$/;"	v
gl3wUniform2iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2IVPROC                                  gl3wUniform2iv;$/;"	v
gl3wUniform2ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2UIPROC                                  gl3wUniform2ui;$/;"	v
gl3wUniform2ui64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2UI64ARBPROC                             gl3wUniform2ui64ARB;$/;"	v
gl3wUniform2ui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2UI64NVPROC                              gl3wUniform2ui64NV;$/;"	v
gl3wUniform2ui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2UI64VARBPROC                            gl3wUniform2ui64vARB;$/;"	v
gl3wUniform2ui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2UI64VNVPROC                             gl3wUniform2ui64vNV;$/;"	v
gl3wUniform2uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM2UIVPROC                                 gl3wUniform2uiv;$/;"	v
gl3wUniform3d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3DPROC                                   gl3wUniform3d;$/;"	v
gl3wUniform3dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3DVPROC                                  gl3wUniform3dv;$/;"	v
gl3wUniform3f	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3FPROC                                   gl3wUniform3f;$/;"	v
gl3wUniform3fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3FVPROC                                  gl3wUniform3fv;$/;"	v
gl3wUniform3i	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3IPROC                                   gl3wUniform3i;$/;"	v
gl3wUniform3i64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3I64ARBPROC                              gl3wUniform3i64ARB;$/;"	v
gl3wUniform3i64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3I64NVPROC                               gl3wUniform3i64NV;$/;"	v
gl3wUniform3i64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3I64VARBPROC                             gl3wUniform3i64vARB;$/;"	v
gl3wUniform3i64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3I64VNVPROC                              gl3wUniform3i64vNV;$/;"	v
gl3wUniform3iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3IVPROC                                  gl3wUniform3iv;$/;"	v
gl3wUniform3ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3UIPROC                                  gl3wUniform3ui;$/;"	v
gl3wUniform3ui64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3UI64ARBPROC                             gl3wUniform3ui64ARB;$/;"	v
gl3wUniform3ui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3UI64NVPROC                              gl3wUniform3ui64NV;$/;"	v
gl3wUniform3ui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3UI64VARBPROC                            gl3wUniform3ui64vARB;$/;"	v
gl3wUniform3ui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3UI64VNVPROC                             gl3wUniform3ui64vNV;$/;"	v
gl3wUniform3uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM3UIVPROC                                 gl3wUniform3uiv;$/;"	v
gl3wUniform4d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4DPROC                                   gl3wUniform4d;$/;"	v
gl3wUniform4dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4DVPROC                                  gl3wUniform4dv;$/;"	v
gl3wUniform4f	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4FPROC                                   gl3wUniform4f;$/;"	v
gl3wUniform4fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4FVPROC                                  gl3wUniform4fv;$/;"	v
gl3wUniform4i	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4IPROC                                   gl3wUniform4i;$/;"	v
gl3wUniform4i64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4I64ARBPROC                              gl3wUniform4i64ARB;$/;"	v
gl3wUniform4i64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4I64NVPROC                               gl3wUniform4i64NV;$/;"	v
gl3wUniform4i64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4I64VARBPROC                             gl3wUniform4i64vARB;$/;"	v
gl3wUniform4i64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4I64VNVPROC                              gl3wUniform4i64vNV;$/;"	v
gl3wUniform4iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4IVPROC                                  gl3wUniform4iv;$/;"	v
gl3wUniform4ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4UIPROC                                  gl3wUniform4ui;$/;"	v
gl3wUniform4ui64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4UI64ARBPROC                             gl3wUniform4ui64ARB;$/;"	v
gl3wUniform4ui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4UI64NVPROC                              gl3wUniform4ui64NV;$/;"	v
gl3wUniform4ui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4UI64VARBPROC                            gl3wUniform4ui64vARB;$/;"	v
gl3wUniform4ui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4UI64VNVPROC                             gl3wUniform4ui64vNV;$/;"	v
gl3wUniform4uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORM4UIVPROC                                 gl3wUniform4uiv;$/;"	v
gl3wUniformBlockBinding	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMBLOCKBINDINGPROC                         gl3wUniformBlockBinding;$/;"	v
gl3wUniformHandleui64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMHANDLEUI64ARBPROC                        gl3wUniformHandleui64ARB;$/;"	v
gl3wUniformHandleui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMHANDLEUI64NVPROC                         gl3wUniformHandleui64NV;$/;"	v
gl3wUniformHandleui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMHANDLEUI64VARBPROC                       gl3wUniformHandleui64vARB;$/;"	v
gl3wUniformHandleui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMHANDLEUI64VNVPROC                        gl3wUniformHandleui64vNV;$/;"	v
gl3wUniformMatrix2dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX2DVPROC                            gl3wUniformMatrix2dv;$/;"	v
gl3wUniformMatrix2fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX2FVPROC                            gl3wUniformMatrix2fv;$/;"	v
gl3wUniformMatrix2x3dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX2X3DVPROC                          gl3wUniformMatrix2x3dv;$/;"	v
gl3wUniformMatrix2x3fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX2X3FVPROC                          gl3wUniformMatrix2x3fv;$/;"	v
gl3wUniformMatrix2x4dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX2X4DVPROC                          gl3wUniformMatrix2x4dv;$/;"	v
gl3wUniformMatrix2x4fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX2X4FVPROC                          gl3wUniformMatrix2x4fv;$/;"	v
gl3wUniformMatrix3dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX3DVPROC                            gl3wUniformMatrix3dv;$/;"	v
gl3wUniformMatrix3fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX3FVPROC                            gl3wUniformMatrix3fv;$/;"	v
gl3wUniformMatrix3x2dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX3X2DVPROC                          gl3wUniformMatrix3x2dv;$/;"	v
gl3wUniformMatrix3x2fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX3X2FVPROC                          gl3wUniformMatrix3x2fv;$/;"	v
gl3wUniformMatrix3x4dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX3X4DVPROC                          gl3wUniformMatrix3x4dv;$/;"	v
gl3wUniformMatrix3x4fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX3X4FVPROC                          gl3wUniformMatrix3x4fv;$/;"	v
gl3wUniformMatrix4dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX4DVPROC                            gl3wUniformMatrix4dv;$/;"	v
gl3wUniformMatrix4fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX4FVPROC                            gl3wUniformMatrix4fv;$/;"	v
gl3wUniformMatrix4x2dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX4X2DVPROC                          gl3wUniformMatrix4x2dv;$/;"	v
gl3wUniformMatrix4x2fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX4X2FVPROC                          gl3wUniformMatrix4x2fv;$/;"	v
gl3wUniformMatrix4x3dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX4X3DVPROC                          gl3wUniformMatrix4x3dv;$/;"	v
gl3wUniformMatrix4x3fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMMATRIX4X3FVPROC                          gl3wUniformMatrix4x3fv;$/;"	v
gl3wUniformSubroutinesuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMSUBROUTINESUIVPROC                       gl3wUniformSubroutinesuiv;$/;"	v
gl3wUniformui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMUI64NVPROC                               gl3wUniformui64NV;$/;"	v
gl3wUniformui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNIFORMUI64VNVPROC                              gl3wUniformui64vNV;$/;"	v
gl3wUnmapBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNMAPBUFFERPROC                                 gl3wUnmapBuffer;$/;"	v
gl3wUnmapNamedBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNMAPNAMEDBUFFERPROC                            gl3wUnmapNamedBuffer;$/;"	v
gl3wUnmapNamedBufferEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUNMAPNAMEDBUFFEREXTPROC                         gl3wUnmapNamedBufferEXT;$/;"	v
gl3wUseProgram	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUSEPROGRAMPROC                                  gl3wUseProgram;$/;"	v
gl3wUseProgramStages	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUSEPROGRAMSTAGESPROC                            gl3wUseProgramStages;$/;"	v
gl3wUseShaderProgramEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLUSESHADERPROGRAMEXTPROC                         gl3wUseShaderProgramEXT;$/;"	v
gl3wValidateProgram	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVALIDATEPROGRAMPROC                             gl3wValidateProgram;$/;"	v
gl3wValidateProgramPipeline	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVALIDATEPROGRAMPIPELINEPROC                     gl3wValidateProgramPipeline;$/;"	v
gl3wVertexArrayAttribBinding	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYATTRIBBINDINGPROC                    gl3wVertexArrayAttribBinding;$/;"	v
gl3wVertexArrayAttribFormat	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYATTRIBFORMATPROC                     gl3wVertexArrayAttribFormat;$/;"	v
gl3wVertexArrayAttribIFormat	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYATTRIBIFORMATPROC                    gl3wVertexArrayAttribIFormat;$/;"	v
gl3wVertexArrayAttribLFormat	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYATTRIBLFORMATPROC                    gl3wVertexArrayAttribLFormat;$/;"	v
gl3wVertexArrayBindVertexBufferEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC              gl3wVertexArrayBindVertexBufferEXT;$/;"	v
gl3wVertexArrayBindingDivisor	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYBINDINGDIVISORPROC                   gl3wVertexArrayBindingDivisor;$/;"	v
gl3wVertexArrayColorOffsetEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYCOLOROFFSETEXTPROC                   gl3wVertexArrayColorOffsetEXT;$/;"	v
gl3wVertexArrayEdgeFlagOffsetEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC                gl3wVertexArrayEdgeFlagOffsetEXT;$/;"	v
gl3wVertexArrayElementBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYELEMENTBUFFERPROC                    gl3wVertexArrayElementBuffer;$/;"	v
gl3wVertexArrayFogCoordOffsetEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC                gl3wVertexArrayFogCoordOffsetEXT;$/;"	v
gl3wVertexArrayIndexOffsetEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYINDEXOFFSETEXTPROC                   gl3wVertexArrayIndexOffsetEXT;$/;"	v
gl3wVertexArrayMultiTexCoordOffsetEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC           gl3wVertexArrayMultiTexCoordOffsetEXT;$/;"	v
gl3wVertexArrayNormalOffsetEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYNORMALOFFSETEXTPROC                  gl3wVertexArrayNormalOffsetEXT;$/;"	v
gl3wVertexArraySecondaryColorOffsetEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC          gl3wVertexArraySecondaryColorOffsetEXT;$/;"	v
gl3wVertexArrayTexCoordOffsetEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC                gl3wVertexArrayTexCoordOffsetEXT;$/;"	v
gl3wVertexArrayVertexAttribBindingEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC           gl3wVertexArrayVertexAttribBindingEXT;$/;"	v
gl3wVertexArrayVertexAttribDivisorEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC           gl3wVertexArrayVertexAttribDivisorEXT;$/;"	v
gl3wVertexArrayVertexAttribFormatEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC            gl3wVertexArrayVertexAttribFormatEXT;$/;"	v
gl3wVertexArrayVertexAttribIFormatEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC           gl3wVertexArrayVertexAttribIFormatEXT;$/;"	v
gl3wVertexArrayVertexAttribIOffsetEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC           gl3wVertexArrayVertexAttribIOffsetEXT;$/;"	v
gl3wVertexArrayVertexAttribLFormatEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC           gl3wVertexArrayVertexAttribLFormatEXT;$/;"	v
gl3wVertexArrayVertexAttribLOffsetEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC           gl3wVertexArrayVertexAttribLOffsetEXT;$/;"	v
gl3wVertexArrayVertexAttribOffsetEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC            gl3wVertexArrayVertexAttribOffsetEXT;$/;"	v
gl3wVertexArrayVertexBindingDivisorEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC          gl3wVertexArrayVertexBindingDivisorEXT;$/;"	v
gl3wVertexArrayVertexBuffer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYVERTEXBUFFERPROC                     gl3wVertexArrayVertexBuffer;$/;"	v
gl3wVertexArrayVertexBuffers	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYVERTEXBUFFERSPROC                    gl3wVertexArrayVertexBuffers;$/;"	v
gl3wVertexArrayVertexOffsetEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC                  gl3wVertexArrayVertexOffsetEXT;$/;"	v
gl3wVertexAttrib1d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB1DPROC                              gl3wVertexAttrib1d;$/;"	v
gl3wVertexAttrib1dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB1DVPROC                             gl3wVertexAttrib1dv;$/;"	v
gl3wVertexAttrib1f	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB1FPROC                              gl3wVertexAttrib1f;$/;"	v
gl3wVertexAttrib1fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB1FVPROC                             gl3wVertexAttrib1fv;$/;"	v
gl3wVertexAttrib1s	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB1SPROC                              gl3wVertexAttrib1s;$/;"	v
gl3wVertexAttrib1sv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB1SVPROC                             gl3wVertexAttrib1sv;$/;"	v
gl3wVertexAttrib2d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB2DPROC                              gl3wVertexAttrib2d;$/;"	v
gl3wVertexAttrib2dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB2DVPROC                             gl3wVertexAttrib2dv;$/;"	v
gl3wVertexAttrib2f	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB2FPROC                              gl3wVertexAttrib2f;$/;"	v
gl3wVertexAttrib2fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB2FVPROC                             gl3wVertexAttrib2fv;$/;"	v
gl3wVertexAttrib2s	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB2SPROC                              gl3wVertexAttrib2s;$/;"	v
gl3wVertexAttrib2sv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB2SVPROC                             gl3wVertexAttrib2sv;$/;"	v
gl3wVertexAttrib3d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB3DPROC                              gl3wVertexAttrib3d;$/;"	v
gl3wVertexAttrib3dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB3DVPROC                             gl3wVertexAttrib3dv;$/;"	v
gl3wVertexAttrib3f	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB3FPROC                              gl3wVertexAttrib3f;$/;"	v
gl3wVertexAttrib3fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB3FVPROC                             gl3wVertexAttrib3fv;$/;"	v
gl3wVertexAttrib3s	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB3SPROC                              gl3wVertexAttrib3s;$/;"	v
gl3wVertexAttrib3sv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB3SVPROC                             gl3wVertexAttrib3sv;$/;"	v
gl3wVertexAttrib4Nbv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4NBVPROC                            gl3wVertexAttrib4Nbv;$/;"	v
gl3wVertexAttrib4Niv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4NIVPROC                            gl3wVertexAttrib4Niv;$/;"	v
gl3wVertexAttrib4Nsv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4NSVPROC                            gl3wVertexAttrib4Nsv;$/;"	v
gl3wVertexAttrib4Nub	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4NUBPROC                            gl3wVertexAttrib4Nub;$/;"	v
gl3wVertexAttrib4Nubv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4NUBVPROC                           gl3wVertexAttrib4Nubv;$/;"	v
gl3wVertexAttrib4Nuiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4NUIVPROC                           gl3wVertexAttrib4Nuiv;$/;"	v
gl3wVertexAttrib4Nusv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4NUSVPROC                           gl3wVertexAttrib4Nusv;$/;"	v
gl3wVertexAttrib4bv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4BVPROC                             gl3wVertexAttrib4bv;$/;"	v
gl3wVertexAttrib4d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4DPROC                              gl3wVertexAttrib4d;$/;"	v
gl3wVertexAttrib4dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4DVPROC                             gl3wVertexAttrib4dv;$/;"	v
gl3wVertexAttrib4f	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4FPROC                              gl3wVertexAttrib4f;$/;"	v
gl3wVertexAttrib4fv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4FVPROC                             gl3wVertexAttrib4fv;$/;"	v
gl3wVertexAttrib4iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4IVPROC                             gl3wVertexAttrib4iv;$/;"	v
gl3wVertexAttrib4s	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4SPROC                              gl3wVertexAttrib4s;$/;"	v
gl3wVertexAttrib4sv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4SVPROC                             gl3wVertexAttrib4sv;$/;"	v
gl3wVertexAttrib4ubv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4UBVPROC                            gl3wVertexAttrib4ubv;$/;"	v
gl3wVertexAttrib4uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4UIVPROC                            gl3wVertexAttrib4uiv;$/;"	v
gl3wVertexAttrib4usv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIB4USVPROC                            gl3wVertexAttrib4usv;$/;"	v
gl3wVertexAttribBinding	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBBINDINGPROC                         gl3wVertexAttribBinding;$/;"	v
gl3wVertexAttribDivisor	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBDIVISORPROC                         gl3wVertexAttribDivisor;$/;"	v
gl3wVertexAttribDivisorARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBDIVISORARBPROC                      gl3wVertexAttribDivisorARB;$/;"	v
gl3wVertexAttribFormat	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBFORMATPROC                          gl3wVertexAttribFormat;$/;"	v
gl3wVertexAttribFormatNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBFORMATNVPROC                        gl3wVertexAttribFormatNV;$/;"	v
gl3wVertexAttribI1i	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI1IPROC                             gl3wVertexAttribI1i;$/;"	v
gl3wVertexAttribI1iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI1IVPROC                            gl3wVertexAttribI1iv;$/;"	v
gl3wVertexAttribI1ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI1UIPROC                            gl3wVertexAttribI1ui;$/;"	v
gl3wVertexAttribI1uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI1UIVPROC                           gl3wVertexAttribI1uiv;$/;"	v
gl3wVertexAttribI2i	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI2IPROC                             gl3wVertexAttribI2i;$/;"	v
gl3wVertexAttribI2iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI2IVPROC                            gl3wVertexAttribI2iv;$/;"	v
gl3wVertexAttribI2ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI2UIPROC                            gl3wVertexAttribI2ui;$/;"	v
gl3wVertexAttribI2uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI2UIVPROC                           gl3wVertexAttribI2uiv;$/;"	v
gl3wVertexAttribI3i	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI3IPROC                             gl3wVertexAttribI3i;$/;"	v
gl3wVertexAttribI3iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI3IVPROC                            gl3wVertexAttribI3iv;$/;"	v
gl3wVertexAttribI3ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI3UIPROC                            gl3wVertexAttribI3ui;$/;"	v
gl3wVertexAttribI3uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI3UIVPROC                           gl3wVertexAttribI3uiv;$/;"	v
gl3wVertexAttribI4bv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI4BVPROC                            gl3wVertexAttribI4bv;$/;"	v
gl3wVertexAttribI4i	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI4IPROC                             gl3wVertexAttribI4i;$/;"	v
gl3wVertexAttribI4iv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI4IVPROC                            gl3wVertexAttribI4iv;$/;"	v
gl3wVertexAttribI4sv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI4SVPROC                            gl3wVertexAttribI4sv;$/;"	v
gl3wVertexAttribI4ubv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI4UBVPROC                           gl3wVertexAttribI4ubv;$/;"	v
gl3wVertexAttribI4ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI4UIPROC                            gl3wVertexAttribI4ui;$/;"	v
gl3wVertexAttribI4uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI4UIVPROC                           gl3wVertexAttribI4uiv;$/;"	v
gl3wVertexAttribI4usv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBI4USVPROC                           gl3wVertexAttribI4usv;$/;"	v
gl3wVertexAttribIFormat	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBIFORMATPROC                         gl3wVertexAttribIFormat;$/;"	v
gl3wVertexAttribIFormatNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBIFORMATNVPROC                       gl3wVertexAttribIFormatNV;$/;"	v
gl3wVertexAttribIPointer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBIPOINTERPROC                        gl3wVertexAttribIPointer;$/;"	v
gl3wVertexAttribL1d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL1DPROC                             gl3wVertexAttribL1d;$/;"	v
gl3wVertexAttribL1dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL1DVPROC                            gl3wVertexAttribL1dv;$/;"	v
gl3wVertexAttribL1i64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL1I64NVPROC                         gl3wVertexAttribL1i64NV;$/;"	v
gl3wVertexAttribL1i64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL1I64VNVPROC                        gl3wVertexAttribL1i64vNV;$/;"	v
gl3wVertexAttribL1ui64ARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL1UI64ARBPROC                       gl3wVertexAttribL1ui64ARB;$/;"	v
gl3wVertexAttribL1ui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL1UI64NVPROC                        gl3wVertexAttribL1ui64NV;$/;"	v
gl3wVertexAttribL1ui64vARB	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL1UI64VARBPROC                      gl3wVertexAttribL1ui64vARB;$/;"	v
gl3wVertexAttribL1ui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL1UI64VNVPROC                       gl3wVertexAttribL1ui64vNV;$/;"	v
gl3wVertexAttribL2d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL2DPROC                             gl3wVertexAttribL2d;$/;"	v
gl3wVertexAttribL2dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL2DVPROC                            gl3wVertexAttribL2dv;$/;"	v
gl3wVertexAttribL2i64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL2I64NVPROC                         gl3wVertexAttribL2i64NV;$/;"	v
gl3wVertexAttribL2i64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL2I64VNVPROC                        gl3wVertexAttribL2i64vNV;$/;"	v
gl3wVertexAttribL2ui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL2UI64NVPROC                        gl3wVertexAttribL2ui64NV;$/;"	v
gl3wVertexAttribL2ui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL2UI64VNVPROC                       gl3wVertexAttribL2ui64vNV;$/;"	v
gl3wVertexAttribL3d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL3DPROC                             gl3wVertexAttribL3d;$/;"	v
gl3wVertexAttribL3dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL3DVPROC                            gl3wVertexAttribL3dv;$/;"	v
gl3wVertexAttribL3i64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL3I64NVPROC                         gl3wVertexAttribL3i64NV;$/;"	v
gl3wVertexAttribL3i64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL3I64VNVPROC                        gl3wVertexAttribL3i64vNV;$/;"	v
gl3wVertexAttribL3ui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL3UI64NVPROC                        gl3wVertexAttribL3ui64NV;$/;"	v
gl3wVertexAttribL3ui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL3UI64VNVPROC                       gl3wVertexAttribL3ui64vNV;$/;"	v
gl3wVertexAttribL4d	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL4DPROC                             gl3wVertexAttribL4d;$/;"	v
gl3wVertexAttribL4dv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL4DVPROC                            gl3wVertexAttribL4dv;$/;"	v
gl3wVertexAttribL4i64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL4I64NVPROC                         gl3wVertexAttribL4i64NV;$/;"	v
gl3wVertexAttribL4i64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL4I64VNVPROC                        gl3wVertexAttribL4i64vNV;$/;"	v
gl3wVertexAttribL4ui64NV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL4UI64NVPROC                        gl3wVertexAttribL4ui64NV;$/;"	v
gl3wVertexAttribL4ui64vNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBL4UI64VNVPROC                       gl3wVertexAttribL4ui64vNV;$/;"	v
gl3wVertexAttribLFormat	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBLFORMATPROC                         gl3wVertexAttribLFormat;$/;"	v
gl3wVertexAttribLFormatNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBLFORMATNVPROC                       gl3wVertexAttribLFormatNV;$/;"	v
gl3wVertexAttribLPointer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBLPOINTERPROC                        gl3wVertexAttribLPointer;$/;"	v
gl3wVertexAttribP1ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBP1UIPROC                            gl3wVertexAttribP1ui;$/;"	v
gl3wVertexAttribP1uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBP1UIVPROC                           gl3wVertexAttribP1uiv;$/;"	v
gl3wVertexAttribP2ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBP2UIPROC                            gl3wVertexAttribP2ui;$/;"	v
gl3wVertexAttribP2uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBP2UIVPROC                           gl3wVertexAttribP2uiv;$/;"	v
gl3wVertexAttribP3ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBP3UIPROC                            gl3wVertexAttribP3ui;$/;"	v
gl3wVertexAttribP3uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBP3UIVPROC                           gl3wVertexAttribP3uiv;$/;"	v
gl3wVertexAttribP4ui	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBP4UIPROC                            gl3wVertexAttribP4ui;$/;"	v
gl3wVertexAttribP4uiv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBP4UIVPROC                           gl3wVertexAttribP4uiv;$/;"	v
gl3wVertexAttribPointer	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXATTRIBPOINTERPROC                         gl3wVertexAttribPointer;$/;"	v
gl3wVertexBindingDivisor	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXBINDINGDIVISORPROC                        gl3wVertexBindingDivisor;$/;"	v
gl3wVertexFormatNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVERTEXFORMATNVPROC                              gl3wVertexFormatNV;$/;"	v
gl3wViewport	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVIEWPORTPROC                                    gl3wViewport;$/;"	v
gl3wViewportArrayv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVIEWPORTARRAYVPROC                              gl3wViewportArrayv;$/;"	v
gl3wViewportIndexedf	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVIEWPORTINDEXEDFPROC                            gl3wViewportIndexedf;$/;"	v
gl3wViewportIndexedfv	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVIEWPORTINDEXEDFVPROC                           gl3wViewportIndexedfv;$/;"	v
gl3wViewportPositionWScaleNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVIEWPORTPOSITIONWSCALENVPROC                    gl3wViewportPositionWScaleNV;$/;"	v
gl3wViewportSwizzleNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLVIEWPORTSWIZZLENVPROC                           gl3wViewportSwizzleNV;$/;"	v
gl3wWaitSync	thirdparty/opengl/src/gl3w.cpp	/^PFNGLWAITSYNCPROC                                    gl3wWaitSync;$/;"	v
gl3wWaitVkSemaphoreNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLWAITVKSEMAPHORENVPROC                           gl3wWaitVkSemaphoreNV;$/;"	v
gl3wWeightPathsNV	thirdparty/opengl/src/gl3w.cpp	/^PFNGLWEIGHTPATHSNVPROC                               gl3wWeightPathsNV;$/;"	v
gl3wWindowRectanglesEXT	thirdparty/opengl/src/gl3w.cpp	/^PFNGLWINDOWRECTANGLESEXTPROC                         gl3wWindowRectanglesEXT;$/;"	v
glAccum	thirdparty/glfw/src/deps/glad/glad.h	2126;"	d
glActiveProgramEXT	thirdparty/opengl/include/GL/gl3w.h	1292;"	d
glActiveShaderProgram	thirdparty/opengl/include/GL/gl3w.h	1293;"	d
glActiveTexture	thirdparty/glfw/src/deps/glad/glad.h	2438;"	d
glActiveTexture	thirdparty/opengl/include/GL/gl3w.h	1294;"	d
glAlphaFunc	thirdparty/glfw/src/deps/glad/glad.h	2195;"	d
glApplyFramebufferAttachmentCMAAINTEL	thirdparty/opengl/include/GL/gl3w.h	1295;"	d
glAreTexturesResident	thirdparty/glfw/src/deps/glad/glad.h	2400;"	d
glArrayElement	thirdparty/glfw/src/deps/glad/glad.h	2370;"	d
glAttachShader	thirdparty/glfw/src/deps/glad/glad.h	2801;"	d
glAttachShader	thirdparty/opengl/include/GL/gl3w.h	1296;"	d
glBegin	thirdparty/glfw/src/deps/glad/glad.h	1571;"	d
glBeginConditionalRender	thirdparty/glfw/src/deps/glad/glad.h	3130;"	d
glBeginConditionalRender	thirdparty/opengl/include/GL/gl3w.h	1297;"	d
glBeginConditionalRenderNV	thirdparty/opengl/include/GL/gl3w.h	1298;"	d
glBeginPerfMonitorAMD	thirdparty/opengl/include/GL/gl3w.h	1299;"	d
glBeginPerfQueryINTEL	thirdparty/opengl/include/GL/gl3w.h	1300;"	d
glBeginQuery	thirdparty/glfw/src/deps/glad/glad.h	2734;"	d
glBeginQuery	thirdparty/opengl/include/GL/gl3w.h	1301;"	d
glBeginQueryIndexed	thirdparty/opengl/include/GL/gl3w.h	1302;"	d
glBeginTransformFeedback	thirdparty/glfw/src/deps/glad/glad.h	3109;"	d
glBeginTransformFeedback	thirdparty/opengl/include/GL/gl3w.h	1303;"	d
glBindAttribLocation	thirdparty/glfw/src/deps/glad/glad.h	2804;"	d
glBindAttribLocation	thirdparty/opengl/include/GL/gl3w.h	1304;"	d
glBindBuffer	thirdparty/glfw/src/deps/glad/glad.h	2749;"	d
glBindBuffer	thirdparty/opengl/include/GL/gl3w.h	1305;"	d
glBindBufferBase	thirdparty/glfw/src/deps/glad/glad.h	3118;"	d
glBindBufferBase	thirdparty/opengl/include/GL/gl3w.h	1306;"	d
glBindBufferRange	thirdparty/glfw/src/deps/glad/glad.h	3115;"	d
glBindBufferRange	thirdparty/opengl/include/GL/gl3w.h	1307;"	d
glBindBuffersBase	thirdparty/opengl/include/GL/gl3w.h	1308;"	d
glBindBuffersRange	thirdparty/opengl/include/GL/gl3w.h	1309;"	d
glBindFragDataLocation	thirdparty/glfw/src/deps/glad/glad.h	3208;"	d
glBindFragDataLocation	thirdparty/opengl/include/GL/gl3w.h	1310;"	d
glBindFragDataLocationIndexed	thirdparty/opengl/include/GL/gl3w.h	1311;"	d
glBindFramebuffer	thirdparty/glfw/src/deps/glad/glad.h	3286;"	d
glBindFramebuffer	thirdparty/opengl/include/GL/gl3w.h	1312;"	d
glBindImageTexture	thirdparty/opengl/include/GL/gl3w.h	1313;"	d
glBindImageTextures	thirdparty/opengl/include/GL/gl3w.h	1314;"	d
glBindMultiTextureEXT	thirdparty/opengl/include/GL/gl3w.h	1315;"	d
glBindProgramPipeline	thirdparty/opengl/include/GL/gl3w.h	1316;"	d
glBindRenderbuffer	thirdparty/glfw/src/deps/glad/glad.h	3268;"	d
glBindRenderbuffer	thirdparty/opengl/include/GL/gl3w.h	1317;"	d
glBindSampler	thirdparty/opengl/include/GL/gl3w.h	1318;"	d
glBindSamplers	thirdparty/opengl/include/GL/gl3w.h	1319;"	d
glBindTexture	thirdparty/glfw/src/deps/glad/glad.h	2358;"	d
glBindTexture	thirdparty/opengl/include/GL/gl3w.h	1320;"	d
glBindTextureUnit	thirdparty/opengl/include/GL/gl3w.h	1321;"	d
glBindTextures	thirdparty/opengl/include/GL/gl3w.h	1322;"	d
glBindTransformFeedback	thirdparty/opengl/include/GL/gl3w.h	1323;"	d
glBindVertexArray	thirdparty/glfw/src/deps/glad/glad.h	3331;"	d
glBindVertexArray	thirdparty/opengl/include/GL/gl3w.h	1324;"	d
glBindVertexBuffer	thirdparty/opengl/include/GL/gl3w.h	1325;"	d
glBindVertexBuffers	thirdparty/opengl/include/GL/gl3w.h	1326;"	d
glBitmap	thirdparty/glfw/src/deps/glad/glad.h	1574;"	d
glBlendBarrierKHR	thirdparty/opengl/include/GL/gl3w.h	1327;"	d
glBlendBarrierNV	thirdparty/opengl/include/GL/gl3w.h	1328;"	d
glBlendColor	thirdparty/glfw/src/deps/glad/glad.h	2715;"	d
glBlendColor	thirdparty/opengl/include/GL/gl3w.h	1329;"	d
glBlendEquation	thirdparty/glfw/src/deps/glad/glad.h	2718;"	d
glBlendEquation	thirdparty/opengl/include/GL/gl3w.h	1330;"	d
glBlendEquationSeparate	thirdparty/glfw/src/deps/glad/glad.h	2786;"	d
glBlendEquationSeparate	thirdparty/opengl/include/GL/gl3w.h	1331;"	d
glBlendEquationSeparatei	thirdparty/opengl/include/GL/gl3w.h	1332;"	d
glBlendEquationSeparateiARB	thirdparty/opengl/include/GL/gl3w.h	1333;"	d
glBlendEquationi	thirdparty/opengl/include/GL/gl3w.h	1334;"	d
glBlendEquationiARB	thirdparty/opengl/include/GL/gl3w.h	1335;"	d
glBlendFunc	thirdparty/glfw/src/deps/glad/glad.h	1481;"	d
glBlendFunc	thirdparty/opengl/include/GL/gl3w.h	1336;"	d
glBlendFuncSeparate	thirdparty/glfw/src/deps/glad/glad.h	2580;"	d
glBlendFuncSeparate	thirdparty/opengl/include/GL/gl3w.h	1337;"	d
glBlendFuncSeparatei	thirdparty/opengl/include/GL/gl3w.h	1338;"	d
glBlendFuncSeparateiARB	thirdparty/opengl/include/GL/gl3w.h	1339;"	d
glBlendFunci	thirdparty/opengl/include/GL/gl3w.h	1340;"	d
glBlendFunciARB	thirdparty/opengl/include/GL/gl3w.h	1341;"	d
glBlendParameteriNV	thirdparty/opengl/include/GL/gl3w.h	1342;"	d
glBlitFramebuffer	thirdparty/glfw/src/deps/glad/glad.h	3316;"	d
glBlitFramebuffer	thirdparty/opengl/include/GL/gl3w.h	1343;"	d
glBlitNamedFramebuffer	thirdparty/opengl/include/GL/gl3w.h	1344;"	d
glBufferAddressRangeNV	thirdparty/opengl/include/GL/gl3w.h	1345;"	d
glBufferData	thirdparty/glfw/src/deps/glad/glad.h	2761;"	d
glBufferData	thirdparty/opengl/include/GL/gl3w.h	1346;"	d
glBufferPageCommitmentARB	thirdparty/opengl/include/GL/gl3w.h	1347;"	d
glBufferStorage	thirdparty/opengl/include/GL/gl3w.h	1348;"	d
glBufferSubData	thirdparty/glfw/src/deps/glad/glad.h	2764;"	d
glBufferSubData	thirdparty/opengl/include/GL/gl3w.h	1349;"	d
glCallCommandListNV	thirdparty/opengl/include/GL/gl3w.h	1350;"	d
glCallList	thirdparty/glfw/src/deps/glad/glad.h	1556;"	d
glCallLists	thirdparty/glfw/src/deps/glad/glad.h	1559;"	d
glCheckFramebufferStatus	thirdparty/glfw/src/deps/glad/glad.h	3295;"	d
glCheckFramebufferStatus	thirdparty/opengl/include/GL/gl3w.h	1351;"	d
glCheckNamedFramebufferStatus	thirdparty/opengl/include/GL/gl3w.h	1352;"	d
glCheckNamedFramebufferStatusEXT	thirdparty/opengl/include/GL/gl3w.h	1353;"	d
glClampColor	thirdparty/glfw/src/deps/glad/glad.h	3127;"	d
glClampColor	thirdparty/opengl/include/GL/gl3w.h	1354;"	d
glClear	thirdparty/glfw/src/deps/glad/glad.h	1448;"	d
glClear	thirdparty/opengl/include/GL/gl3w.h	1355;"	d
glClearAccum	thirdparty/glfw/src/deps/glad/glad.h	2117;"	d
glClearBufferData	thirdparty/opengl/include/GL/gl3w.h	1356;"	d
glClearBufferSubData	thirdparty/opengl/include/GL/gl3w.h	1357;"	d
glClearBufferfi	thirdparty/glfw/src/deps/glad/glad.h	3259;"	d
glClearBufferfi	thirdparty/opengl/include/GL/gl3w.h	1358;"	d
glClearBufferfv	thirdparty/glfw/src/deps/glad/glad.h	3256;"	d
glClearBufferfv	thirdparty/opengl/include/GL/gl3w.h	1359;"	d
glClearBufferiv	thirdparty/glfw/src/deps/glad/glad.h	3250;"	d
glClearBufferiv	thirdparty/opengl/include/GL/gl3w.h	1360;"	d
glClearBufferuiv	thirdparty/glfw/src/deps/glad/glad.h	3253;"	d
glClearBufferuiv	thirdparty/opengl/include/GL/gl3w.h	1361;"	d
glClearColor	thirdparty/glfw/src/deps/glad/glad.h	1451;"	d
glClearColor	thirdparty/opengl/include/GL/gl3w.h	1362;"	d
glClearDepth	thirdparty/glfw/src/deps/glad/glad.h	1457;"	d
glClearDepth	thirdparty/opengl/include/GL/gl3w.h	1363;"	d
glClearDepthf	thirdparty/opengl/include/GL/gl3w.h	1364;"	d
glClearIndex	thirdparty/glfw/src/deps/glad/glad.h	2120;"	d
glClearNamedBufferData	thirdparty/opengl/include/GL/gl3w.h	1365;"	d
glClearNamedBufferDataEXT	thirdparty/opengl/include/GL/gl3w.h	1366;"	d
glClearNamedBufferSubData	thirdparty/opengl/include/GL/gl3w.h	1367;"	d
glClearNamedBufferSubDataEXT	thirdparty/opengl/include/GL/gl3w.h	1368;"	d
glClearNamedFramebufferfi	thirdparty/opengl/include/GL/gl3w.h	1369;"	d
glClearNamedFramebufferfv	thirdparty/opengl/include/GL/gl3w.h	1370;"	d
glClearNamedFramebufferiv	thirdparty/opengl/include/GL/gl3w.h	1371;"	d
glClearNamedFramebufferuiv	thirdparty/opengl/include/GL/gl3w.h	1372;"	d
glClearStencil	thirdparty/glfw/src/deps/glad/glad.h	1454;"	d
glClearStencil	thirdparty/opengl/include/GL/gl3w.h	1373;"	d
glClearTexImage	thirdparty/opengl/include/GL/gl3w.h	1374;"	d
glClearTexSubImage	thirdparty/opengl/include/GL/gl3w.h	1375;"	d
glClientActiveTexture	thirdparty/glfw/src/deps/glad/glad.h	2465;"	d
glClientAttribDefaultEXT	thirdparty/opengl/include/GL/gl3w.h	1376;"	d
glClientWaitSync	thirdparty/glfw/src/deps/glad/glad.h	3411;"	d
glClientWaitSync	thirdparty/opengl/include/GL/gl3w.h	1377;"	d
glClipControl	thirdparty/opengl/include/GL/gl3w.h	1378;"	d
glClipPlane	thirdparty/glfw/src/deps/glad/glad.h	2000;"	d
glColor3b	thirdparty/glfw/src/deps/glad/glad.h	1577;"	d
glColor3bv	thirdparty/glfw/src/deps/glad/glad.h	1580;"	d
glColor3d	thirdparty/glfw/src/deps/glad/glad.h	1583;"	d
glColor3dv	thirdparty/glfw/src/deps/glad/glad.h	1586;"	d
glColor3f	thirdparty/glfw/src/deps/glad/glad.h	1589;"	d
glColor3fv	thirdparty/glfw/src/deps/glad/glad.h	1592;"	d
glColor3i	thirdparty/glfw/src/deps/glad/glad.h	1595;"	d
glColor3iv	thirdparty/glfw/src/deps/glad/glad.h	1598;"	d
glColor3s	thirdparty/glfw/src/deps/glad/glad.h	1601;"	d
glColor3sv	thirdparty/glfw/src/deps/glad/glad.h	1604;"	d
glColor3ub	thirdparty/glfw/src/deps/glad/glad.h	1607;"	d
glColor3ubv	thirdparty/glfw/src/deps/glad/glad.h	1610;"	d
glColor3ui	thirdparty/glfw/src/deps/glad/glad.h	1613;"	d
glColor3uiv	thirdparty/glfw/src/deps/glad/glad.h	1616;"	d
glColor3us	thirdparty/glfw/src/deps/glad/glad.h	1619;"	d
glColor3usv	thirdparty/glfw/src/deps/glad/glad.h	1622;"	d
glColor4b	thirdparty/glfw/src/deps/glad/glad.h	1625;"	d
glColor4bv	thirdparty/glfw/src/deps/glad/glad.h	1628;"	d
glColor4d	thirdparty/glfw/src/deps/glad/glad.h	1631;"	d
glColor4dv	thirdparty/glfw/src/deps/glad/glad.h	1634;"	d
glColor4f	thirdparty/glfw/src/deps/glad/glad.h	1637;"	d
glColor4fv	thirdparty/glfw/src/deps/glad/glad.h	1640;"	d
glColor4i	thirdparty/glfw/src/deps/glad/glad.h	1643;"	d
glColor4iv	thirdparty/glfw/src/deps/glad/glad.h	1646;"	d
glColor4s	thirdparty/glfw/src/deps/glad/glad.h	1649;"	d
glColor4sv	thirdparty/glfw/src/deps/glad/glad.h	1652;"	d
glColor4ub	thirdparty/glfw/src/deps/glad/glad.h	1655;"	d
glColor4ubv	thirdparty/glfw/src/deps/glad/glad.h	1658;"	d
glColor4ui	thirdparty/glfw/src/deps/glad/glad.h	1661;"	d
glColor4uiv	thirdparty/glfw/src/deps/glad/glad.h	1664;"	d
glColor4us	thirdparty/glfw/src/deps/glad/glad.h	1667;"	d
glColor4usv	thirdparty/glfw/src/deps/glad/glad.h	1670;"	d
glColorFormatNV	thirdparty/opengl/include/GL/gl3w.h	1379;"	d
glColorMask	thirdparty/glfw/src/deps/glad/glad.h	1463;"	d
glColorMask	thirdparty/opengl/include/GL/gl3w.h	1380;"	d
glColorMaski	thirdparty/glfw/src/deps/glad/glad.h	3091;"	d
glColorMaski	thirdparty/opengl/include/GL/gl3w.h	1381;"	d
glColorMaterial	thirdparty/glfw/src/deps/glad/glad.h	2003;"	d
glColorPointer	thirdparty/glfw/src/deps/glad/glad.h	2373;"	d
glCommandListSegmentsNV	thirdparty/opengl/include/GL/gl3w.h	1382;"	d
glCompileCommandListNV	thirdparty/opengl/include/GL/gl3w.h	1383;"	d
glCompileShader	thirdparty/glfw/src/deps/glad/glad.h	2807;"	d
glCompileShader	thirdparty/opengl/include/GL/gl3w.h	1384;"	d
glCompileShaderIncludeARB	thirdparty/opengl/include/GL/gl3w.h	1385;"	d
glCompressedMultiTexImage1DEXT	thirdparty/opengl/include/GL/gl3w.h	1386;"	d
glCompressedMultiTexImage2DEXT	thirdparty/opengl/include/GL/gl3w.h	1387;"	d
glCompressedMultiTexImage3DEXT	thirdparty/opengl/include/GL/gl3w.h	1388;"	d
glCompressedMultiTexSubImage1DEXT	thirdparty/opengl/include/GL/gl3w.h	1389;"	d
glCompressedMultiTexSubImage2DEXT	thirdparty/opengl/include/GL/gl3w.h	1390;"	d
glCompressedMultiTexSubImage3DEXT	thirdparty/opengl/include/GL/gl3w.h	1391;"	d
glCompressedTexImage1D	thirdparty/glfw/src/deps/glad/glad.h	2450;"	d
glCompressedTexImage1D	thirdparty/opengl/include/GL/gl3w.h	1392;"	d
glCompressedTexImage2D	thirdparty/glfw/src/deps/glad/glad.h	2447;"	d
glCompressedTexImage2D	thirdparty/opengl/include/GL/gl3w.h	1393;"	d
glCompressedTexImage3D	thirdparty/glfw/src/deps/glad/glad.h	2444;"	d
glCompressedTexImage3D	thirdparty/opengl/include/GL/gl3w.h	1394;"	d
glCompressedTexSubImage1D	thirdparty/glfw/src/deps/glad/glad.h	2459;"	d
glCompressedTexSubImage1D	thirdparty/opengl/include/GL/gl3w.h	1395;"	d
glCompressedTexSubImage2D	thirdparty/glfw/src/deps/glad/glad.h	2456;"	d
glCompressedTexSubImage2D	thirdparty/opengl/include/GL/gl3w.h	1396;"	d
glCompressedTexSubImage3D	thirdparty/glfw/src/deps/glad/glad.h	2453;"	d
glCompressedTexSubImage3D	thirdparty/opengl/include/GL/gl3w.h	1397;"	d
glCompressedTextureImage1DEXT	thirdparty/opengl/include/GL/gl3w.h	1398;"	d
glCompressedTextureImage2DEXT	thirdparty/opengl/include/GL/gl3w.h	1399;"	d
glCompressedTextureImage3DEXT	thirdparty/opengl/include/GL/gl3w.h	1400;"	d
glCompressedTextureSubImage1D	thirdparty/opengl/include/GL/gl3w.h	1401;"	d
glCompressedTextureSubImage1DEXT	thirdparty/opengl/include/GL/gl3w.h	1402;"	d
glCompressedTextureSubImage2D	thirdparty/opengl/include/GL/gl3w.h	1403;"	d
glCompressedTextureSubImage2DEXT	thirdparty/opengl/include/GL/gl3w.h	1404;"	d
glCompressedTextureSubImage3D	thirdparty/opengl/include/GL/gl3w.h	1405;"	d
glCompressedTextureSubImage3DEXT	thirdparty/opengl/include/GL/gl3w.h	1406;"	d
glConservativeRasterParameterfNV	thirdparty/opengl/include/GL/gl3w.h	1407;"	d
glConservativeRasterParameteriNV	thirdparty/opengl/include/GL/gl3w.h	1408;"	d
glCopyBufferSubData	thirdparty/glfw/src/deps/glad/glad.h	3359;"	d
glCopyBufferSubData	thirdparty/opengl/include/GL/gl3w.h	1409;"	d
glCopyImageSubData	thirdparty/opengl/include/GL/gl3w.h	1410;"	d
glCopyMultiTexImage1DEXT	thirdparty/opengl/include/GL/gl3w.h	1411;"	d
glCopyMultiTexImage2DEXT	thirdparty/opengl/include/GL/gl3w.h	1412;"	d
glCopyMultiTexSubImage1DEXT	thirdparty/opengl/include/GL/gl3w.h	1413;"	d
glCopyMultiTexSubImage2DEXT	thirdparty/opengl/include/GL/gl3w.h	1414;"	d
glCopyMultiTexSubImage3DEXT	thirdparty/opengl/include/GL/gl3w.h	1415;"	d
glCopyNamedBufferSubData	thirdparty/opengl/include/GL/gl3w.h	1416;"	d
glCopyPathNV	thirdparty/opengl/include/GL/gl3w.h	1417;"	d
glCopyPixels	thirdparty/glfw/src/deps/glad/glad.h	2216;"	d
glCopyTexImage1D	thirdparty/glfw/src/deps/glad/glad.h	2340;"	d
glCopyTexImage1D	thirdparty/opengl/include/GL/gl3w.h	1418;"	d
glCopyTexImage2D	thirdparty/glfw/src/deps/glad/glad.h	2343;"	d
glCopyTexImage2D	thirdparty/opengl/include/GL/gl3w.h	1419;"	d
glCopyTexSubImage1D	thirdparty/glfw/src/deps/glad/glad.h	2346;"	d
glCopyTexSubImage1D	thirdparty/opengl/include/GL/gl3w.h	1420;"	d
glCopyTexSubImage2D	thirdparty/glfw/src/deps/glad/glad.h	2349;"	d
glCopyTexSubImage2D	thirdparty/opengl/include/GL/gl3w.h	1421;"	d
glCopyTexSubImage3D	thirdparty/glfw/src/deps/glad/glad.h	2431;"	d
glCopyTexSubImage3D	thirdparty/opengl/include/GL/gl3w.h	1422;"	d
glCopyTextureImage1DEXT	thirdparty/opengl/include/GL/gl3w.h	1423;"	d
glCopyTextureImage2DEXT	thirdparty/opengl/include/GL/gl3w.h	1424;"	d
glCopyTextureSubImage1D	thirdparty/opengl/include/GL/gl3w.h	1425;"	d
glCopyTextureSubImage1DEXT	thirdparty/opengl/include/GL/gl3w.h	1426;"	d
glCopyTextureSubImage2D	thirdparty/opengl/include/GL/gl3w.h	1427;"	d
glCopyTextureSubImage2DEXT	thirdparty/opengl/include/GL/gl3w.h	1428;"	d
glCopyTextureSubImage3D	thirdparty/opengl/include/GL/gl3w.h	1429;"	d
glCopyTextureSubImage3DEXT	thirdparty/opengl/include/GL/gl3w.h	1430;"	d
glCoverFillPathInstancedNV	thirdparty/opengl/include/GL/gl3w.h	1431;"	d
glCoverFillPathNV	thirdparty/opengl/include/GL/gl3w.h	1432;"	d
glCoverStrokePathInstancedNV	thirdparty/opengl/include/GL/gl3w.h	1433;"	d
glCoverStrokePathNV	thirdparty/opengl/include/GL/gl3w.h	1434;"	d
glCoverageModulationNV	thirdparty/opengl/include/GL/gl3w.h	1435;"	d
glCoverageModulationTableNV	thirdparty/opengl/include/GL/gl3w.h	1436;"	d
glCreateBuffers	thirdparty/opengl/include/GL/gl3w.h	1437;"	d
glCreateCommandListsNV	thirdparty/opengl/include/GL/gl3w.h	1438;"	d
glCreateFramebuffers	thirdparty/opengl/include/GL/gl3w.h	1439;"	d
glCreatePerfQueryINTEL	thirdparty/opengl/include/GL/gl3w.h	1440;"	d
glCreateProgram	thirdparty/glfw/src/deps/glad/glad.h	2810;"	d
glCreateProgram	thirdparty/opengl/include/GL/gl3w.h	1441;"	d
glCreateProgramPipelines	thirdparty/opengl/include/GL/gl3w.h	1442;"	d
glCreateQueries	thirdparty/opengl/include/GL/gl3w.h	1443;"	d
glCreateRenderbuffers	thirdparty/opengl/include/GL/gl3w.h	1444;"	d
glCreateSamplers	thirdparty/opengl/include/GL/gl3w.h	1445;"	d
glCreateShader	thirdparty/glfw/src/deps/glad/glad.h	2813;"	d
glCreateShader	thirdparty/opengl/include/GL/gl3w.h	1446;"	d
glCreateShaderProgramEXT	thirdparty/opengl/include/GL/gl3w.h	1447;"	d
glCreateShaderProgramv	thirdparty/opengl/include/GL/gl3w.h	1448;"	d
glCreateStatesNV	thirdparty/opengl/include/GL/gl3w.h	1449;"	d
glCreateSyncFromCLeventARB	thirdparty/opengl/include/GL/gl3w.h	1450;"	d
glCreateTextures	thirdparty/opengl/include/GL/gl3w.h	1451;"	d
glCreateTransformFeedbacks	thirdparty/opengl/include/GL/gl3w.h	1452;"	d
glCreateVertexArrays	thirdparty/opengl/include/GL/gl3w.h	1453;"	d
glCullFace	thirdparty/glfw/src/deps/glad/glad.h	1406;"	d
glCullFace	thirdparty/opengl/include/GL/gl3w.h	1454;"	d
glDebugMessageCallback	thirdparty/glfw/src/deps/glad/glad.h	3619;"	d
glDebugMessageCallback	thirdparty/opengl/include/GL/gl3w.h	1455;"	d
glDebugMessageCallbackARB	thirdparty/opengl/include/GL/gl3w.h	1456;"	d
glDebugMessageCallbackKHR	thirdparty/glfw/src/deps/glad/glad.h	3649;"	d
glDebugMessageControl	thirdparty/glfw/src/deps/glad/glad.h	3613;"	d
glDebugMessageControl	thirdparty/opengl/include/GL/gl3w.h	1457;"	d
glDebugMessageControlARB	thirdparty/opengl/include/GL/gl3w.h	1458;"	d
glDebugMessageControlKHR	thirdparty/glfw/src/deps/glad/glad.h	3643;"	d
glDebugMessageInsert	thirdparty/glfw/src/deps/glad/glad.h	3616;"	d
glDebugMessageInsert	thirdparty/opengl/include/GL/gl3w.h	1459;"	d
glDebugMessageInsertARB	thirdparty/opengl/include/GL/gl3w.h	1460;"	d
glDebugMessageInsertKHR	thirdparty/glfw/src/deps/glad/glad.h	3646;"	d
glDeleteBuffers	thirdparty/glfw/src/deps/glad/glad.h	2752;"	d
glDeleteBuffers	thirdparty/opengl/include/GL/gl3w.h	1461;"	d
glDeleteCommandListsNV	thirdparty/opengl/include/GL/gl3w.h	1462;"	d
glDeleteFramebuffers	thirdparty/glfw/src/deps/glad/glad.h	3289;"	d
glDeleteFramebuffers	thirdparty/opengl/include/GL/gl3w.h	1463;"	d
glDeleteLists	thirdparty/glfw/src/deps/glad/glad.h	1562;"	d
glDeleteNamedStringARB	thirdparty/opengl/include/GL/gl3w.h	1464;"	d
glDeletePathsNV	thirdparty/opengl/include/GL/gl3w.h	1465;"	d
glDeletePerfMonitorsAMD	thirdparty/opengl/include/GL/gl3w.h	1466;"	d
glDeletePerfQueryINTEL	thirdparty/opengl/include/GL/gl3w.h	1467;"	d
glDeleteProgram	thirdparty/glfw/src/deps/glad/glad.h	2816;"	d
glDeleteProgram	thirdparty/opengl/include/GL/gl3w.h	1468;"	d
glDeleteProgramPipelines	thirdparty/opengl/include/GL/gl3w.h	1469;"	d
glDeleteQueries	thirdparty/glfw/src/deps/glad/glad.h	2728;"	d
glDeleteQueries	thirdparty/opengl/include/GL/gl3w.h	1470;"	d
glDeleteRenderbuffers	thirdparty/glfw/src/deps/glad/glad.h	3271;"	d
glDeleteRenderbuffers	thirdparty/opengl/include/GL/gl3w.h	1471;"	d
glDeleteSamplers	thirdparty/opengl/include/GL/gl3w.h	1472;"	d
glDeleteShader	thirdparty/glfw/src/deps/glad/glad.h	2819;"	d
glDeleteShader	thirdparty/opengl/include/GL/gl3w.h	1473;"	d
glDeleteStatesNV	thirdparty/opengl/include/GL/gl3w.h	1474;"	d
glDeleteSync	thirdparty/glfw/src/deps/glad/glad.h	3408;"	d
glDeleteSync	thirdparty/opengl/include/GL/gl3w.h	1475;"	d
glDeleteTextures	thirdparty/glfw/src/deps/glad/glad.h	2361;"	d
glDeleteTextures	thirdparty/opengl/include/GL/gl3w.h	1476;"	d
glDeleteTransformFeedbacks	thirdparty/opengl/include/GL/gl3w.h	1477;"	d
glDeleteVertexArrays	thirdparty/glfw/src/deps/glad/glad.h	3334;"	d
glDeleteVertexArrays	thirdparty/opengl/include/GL/gl3w.h	1478;"	d
glDepthFunc	thirdparty/glfw/src/deps/glad/glad.h	1493;"	d
glDepthFunc	thirdparty/opengl/include/GL/gl3w.h	1479;"	d
glDepthMask	thirdparty/glfw/src/deps/glad/glad.h	1466;"	d
glDepthMask	thirdparty/opengl/include/GL/gl3w.h	1480;"	d
glDepthRange	thirdparty/glfw/src/deps/glad/glad.h	1544;"	d
glDepthRange	thirdparty/opengl/include/GL/gl3w.h	1481;"	d
glDepthRangeArrayv	thirdparty/opengl/include/GL/gl3w.h	1482;"	d
glDepthRangeIndexed	thirdparty/opengl/include/GL/gl3w.h	1483;"	d
glDepthRangef	thirdparty/opengl/include/GL/gl3w.h	1484;"	d
glDetachShader	thirdparty/glfw/src/deps/glad/glad.h	2822;"	d
glDetachShader	thirdparty/opengl/include/GL/gl3w.h	1485;"	d
glDisable	thirdparty/glfw/src/deps/glad/glad.h	1469;"	d
glDisable	thirdparty/opengl/include/GL/gl3w.h	1486;"	d
glDisableClientState	thirdparty/glfw/src/deps/glad/glad.h	2376;"	d
glDisableClientStateIndexedEXT	thirdparty/opengl/include/GL/gl3w.h	1487;"	d
glDisableClientStateiEXT	thirdparty/opengl/include/GL/gl3w.h	1488;"	d
glDisableIndexedEXT	thirdparty/opengl/include/GL/gl3w.h	1489;"	d
glDisableVertexArrayAttrib	thirdparty/opengl/include/GL/gl3w.h	1490;"	d
glDisableVertexArrayAttribEXT	thirdparty/opengl/include/GL/gl3w.h	1491;"	d
glDisableVertexArrayEXT	thirdparty/opengl/include/GL/gl3w.h	1492;"	d
glDisableVertexAttribArray	thirdparty/glfw/src/deps/glad/glad.h	2825;"	d
glDisableVertexAttribArray	thirdparty/opengl/include/GL/gl3w.h	1493;"	d
glDisablei	thirdparty/glfw/src/deps/glad/glad.h	3103;"	d
glDisablei	thirdparty/opengl/include/GL/gl3w.h	1494;"	d
glDispatchCompute	thirdparty/opengl/include/GL/gl3w.h	1495;"	d
glDispatchComputeGroupSizeARB	thirdparty/opengl/include/GL/gl3w.h	1496;"	d
glDispatchComputeIndirect	thirdparty/opengl/include/GL/gl3w.h	1497;"	d
glDrawArrays	thirdparty/glfw/src/deps/glad/glad.h	2328;"	d
glDrawArrays	thirdparty/opengl/include/GL/gl3w.h	1498;"	d
glDrawArraysIndirect	thirdparty/opengl/include/GL/gl3w.h	1499;"	d
glDrawArraysInstanced	thirdparty/glfw/src/deps/glad/glad.h	3347;"	d
glDrawArraysInstanced	thirdparty/opengl/include/GL/gl3w.h	1500;"	d
glDrawArraysInstancedARB	thirdparty/opengl/include/GL/gl3w.h	1501;"	d
glDrawArraysInstancedBaseInstance	thirdparty/opengl/include/GL/gl3w.h	1502;"	d
glDrawArraysInstancedEXT	thirdparty/opengl/include/GL/gl3w.h	1503;"	d
glDrawBuffer	thirdparty/glfw/src/deps/glad/glad.h	1445;"	d
glDrawBuffer	thirdparty/opengl/include/GL/gl3w.h	1504;"	d
glDrawBuffers	thirdparty/glfw/src/deps/glad/glad.h	2789;"	d
glDrawBuffers	thirdparty/opengl/include/GL/gl3w.h	1505;"	d
glDrawCommandsAddressNV	thirdparty/opengl/include/GL/gl3w.h	1506;"	d
glDrawCommandsNV	thirdparty/opengl/include/GL/gl3w.h	1507;"	d
glDrawCommandsStatesAddressNV	thirdparty/opengl/include/GL/gl3w.h	1508;"	d
glDrawCommandsStatesNV	thirdparty/opengl/include/GL/gl3w.h	1509;"	d
glDrawElements	thirdparty/glfw/src/deps/glad/glad.h	2331;"	d
glDrawElements	thirdparty/opengl/include/GL/gl3w.h	1510;"	d
glDrawElementsBaseVertex	thirdparty/glfw/src/deps/glad/glad.h	3387;"	d
glDrawElementsBaseVertex	thirdparty/opengl/include/GL/gl3w.h	1511;"	d
glDrawElementsIndirect	thirdparty/opengl/include/GL/gl3w.h	1512;"	d
glDrawElementsInstanced	thirdparty/glfw/src/deps/glad/glad.h	3350;"	d
glDrawElementsInstanced	thirdparty/opengl/include/GL/gl3w.h	1513;"	d
glDrawElementsInstancedARB	thirdparty/opengl/include/GL/gl3w.h	1514;"	d
glDrawElementsInstancedBaseInstance	thirdparty/opengl/include/GL/gl3w.h	1515;"	d
glDrawElementsInstancedBaseVertex	thirdparty/glfw/src/deps/glad/glad.h	3393;"	d
glDrawElementsInstancedBaseVertex	thirdparty/opengl/include/GL/gl3w.h	1516;"	d
glDrawElementsInstancedBaseVertexBaseInstance	thirdparty/opengl/include/GL/gl3w.h	1517;"	d
glDrawElementsInstancedEXT	thirdparty/opengl/include/GL/gl3w.h	1518;"	d
glDrawPixels	thirdparty/glfw/src/deps/glad/glad.h	2219;"	d
glDrawRangeElements	thirdparty/glfw/src/deps/glad/glad.h	2422;"	d
glDrawRangeElements	thirdparty/opengl/include/GL/gl3w.h	1519;"	d
glDrawRangeElementsBaseVertex	thirdparty/glfw/src/deps/glad/glad.h	3390;"	d
glDrawRangeElementsBaseVertex	thirdparty/opengl/include/GL/gl3w.h	1520;"	d
glDrawTransformFeedback	thirdparty/opengl/include/GL/gl3w.h	1521;"	d
glDrawTransformFeedbackInstanced	thirdparty/opengl/include/GL/gl3w.h	1522;"	d
glDrawTransformFeedbackStream	thirdparty/opengl/include/GL/gl3w.h	1523;"	d
glDrawTransformFeedbackStreamInstanced	thirdparty/opengl/include/GL/gl3w.h	1524;"	d
glDrawVkImageNV	thirdparty/opengl/include/GL/gl3w.h	1525;"	d
glEdgeFlag	thirdparty/glfw/src/deps/glad/glad.h	1673;"	d
glEdgeFlagFormatNV	thirdparty/opengl/include/GL/gl3w.h	1526;"	d
glEdgeFlagPointer	thirdparty/glfw/src/deps/glad/glad.h	2379;"	d
glEdgeFlagv	thirdparty/glfw/src/deps/glad/glad.h	1676;"	d
glEnable	thirdparty/glfw/src/deps/glad/glad.h	1472;"	d
glEnable	thirdparty/opengl/include/GL/gl3w.h	1527;"	d
glEnableClientState	thirdparty/glfw/src/deps/glad/glad.h	2382;"	d
glEnableClientStateIndexedEXT	thirdparty/opengl/include/GL/gl3w.h	1528;"	d
glEnableClientStateiEXT	thirdparty/opengl/include/GL/gl3w.h	1529;"	d
glEnableIndexedEXT	thirdparty/opengl/include/GL/gl3w.h	1530;"	d
glEnableVertexArrayAttrib	thirdparty/opengl/include/GL/gl3w.h	1531;"	d
glEnableVertexArrayAttribEXT	thirdparty/opengl/include/GL/gl3w.h	1532;"	d
glEnableVertexArrayEXT	thirdparty/opengl/include/GL/gl3w.h	1533;"	d
glEnableVertexAttribArray	thirdparty/glfw/src/deps/glad/glad.h	2828;"	d
glEnableVertexAttribArray	thirdparty/opengl/include/GL/gl3w.h	1534;"	d
glEnablei	thirdparty/glfw/src/deps/glad/glad.h	3100;"	d
glEnablei	thirdparty/opengl/include/GL/gl3w.h	1535;"	d
glEnd	thirdparty/glfw/src/deps/glad/glad.h	1679;"	d
glEndConditionalRender	thirdparty/glfw/src/deps/glad/glad.h	3133;"	d
glEndConditionalRender	thirdparty/opengl/include/GL/gl3w.h	1536;"	d
glEndConditionalRenderNV	thirdparty/opengl/include/GL/gl3w.h	1537;"	d
glEndList	thirdparty/glfw/src/deps/glad/glad.h	1553;"	d
glEndPerfMonitorAMD	thirdparty/opengl/include/GL/gl3w.h	1538;"	d
glEndPerfQueryINTEL	thirdparty/opengl/include/GL/gl3w.h	1539;"	d
glEndQuery	thirdparty/glfw/src/deps/glad/glad.h	2737;"	d
glEndQuery	thirdparty/opengl/include/GL/gl3w.h	1540;"	d
glEndQueryIndexed	thirdparty/opengl/include/GL/gl3w.h	1541;"	d
glEndTransformFeedback	thirdparty/glfw/src/deps/glad/glad.h	3112;"	d
glEndTransformFeedback	thirdparty/opengl/include/GL/gl3w.h	1542;"	d
glEvalCoord1d	thirdparty/glfw/src/deps/glad/glad.h	2159;"	d
glEvalCoord1dv	thirdparty/glfw/src/deps/glad/glad.h	2162;"	d
glEvalCoord1f	thirdparty/glfw/src/deps/glad/glad.h	2165;"	d
glEvalCoord1fv	thirdparty/glfw/src/deps/glad/glad.h	2168;"	d
glEvalCoord2d	thirdparty/glfw/src/deps/glad/glad.h	2171;"	d
glEvalCoord2dv	thirdparty/glfw/src/deps/glad/glad.h	2174;"	d
glEvalCoord2f	thirdparty/glfw/src/deps/glad/glad.h	2177;"	d
glEvalCoord2fv	thirdparty/glfw/src/deps/glad/glad.h	2180;"	d
glEvalMesh1	thirdparty/glfw/src/deps/glad/glad.h	2183;"	d
glEvalMesh2	thirdparty/glfw/src/deps/glad/glad.h	2189;"	d
glEvalPoint1	thirdparty/glfw/src/deps/glad/glad.h	2186;"	d
glEvalPoint2	thirdparty/glfw/src/deps/glad/glad.h	2192;"	d
glEvaluateDepthValuesARB	thirdparty/opengl/include/GL/gl3w.h	1543;"	d
glFeedbackBuffer	thirdparty/glfw/src/deps/glad/glad.h	2093;"	d
glFenceSync	thirdparty/glfw/src/deps/glad/glad.h	3402;"	d
glFenceSync	thirdparty/opengl/include/GL/gl3w.h	1544;"	d
glFinish	thirdparty/glfw/src/deps/glad/glad.h	1475;"	d
glFinish	thirdparty/opengl/include/GL/gl3w.h	1545;"	d
glFlush	thirdparty/glfw/src/deps/glad/glad.h	1478;"	d
glFlush	thirdparty/opengl/include/GL/gl3w.h	1546;"	d
glFlushMappedBufferRange	thirdparty/glfw/src/deps/glad/glad.h	3328;"	d
glFlushMappedBufferRange	thirdparty/opengl/include/GL/gl3w.h	1547;"	d
glFlushMappedNamedBufferRange	thirdparty/opengl/include/GL/gl3w.h	1548;"	d
glFlushMappedNamedBufferRangeEXT	thirdparty/opengl/include/GL/gl3w.h	1549;"	d
glFogCoordFormatNV	thirdparty/opengl/include/GL/gl3w.h	1550;"	d
glFogCoordPointer	thirdparty/glfw/src/deps/glad/glad.h	2613;"	d
glFogCoordd	thirdparty/glfw/src/deps/glad/glad.h	2607;"	d
glFogCoorddv	thirdparty/glfw/src/deps/glad/glad.h	2610;"	d
glFogCoordf	thirdparty/glfw/src/deps/glad/glad.h	2601;"	d
glFogCoordfv	thirdparty/glfw/src/deps/glad/glad.h	2604;"	d
glFogf	thirdparty/glfw/src/deps/glad/glad.h	2006;"	d
glFogfv	thirdparty/glfw/src/deps/glad/glad.h	2009;"	d
glFogi	thirdparty/glfw/src/deps/glad/glad.h	2012;"	d
glFogiv	thirdparty/glfw/src/deps/glad/glad.h	2015;"	d
glFragmentCoverageColorNV	thirdparty/opengl/include/GL/gl3w.h	1551;"	d
glFramebufferDrawBufferEXT	thirdparty/opengl/include/GL/gl3w.h	1552;"	d
glFramebufferDrawBuffersEXT	thirdparty/opengl/include/GL/gl3w.h	1553;"	d
glFramebufferParameteri	thirdparty/opengl/include/GL/gl3w.h	1554;"	d
glFramebufferReadBufferEXT	thirdparty/opengl/include/GL/gl3w.h	1555;"	d
glFramebufferRenderbuffer	thirdparty/glfw/src/deps/glad/glad.h	3307;"	d
glFramebufferRenderbuffer	thirdparty/opengl/include/GL/gl3w.h	1556;"	d
glFramebufferSampleLocationsfvARB	thirdparty/opengl/include/GL/gl3w.h	1557;"	d
glFramebufferSampleLocationsfvNV	thirdparty/opengl/include/GL/gl3w.h	1558;"	d
glFramebufferTexture	thirdparty/glfw/src/deps/glad/glad.h	3429;"	d
glFramebufferTexture	thirdparty/opengl/include/GL/gl3w.h	1559;"	d
glFramebufferTexture1D	thirdparty/glfw/src/deps/glad/glad.h	3298;"	d
glFramebufferTexture1D	thirdparty/opengl/include/GL/gl3w.h	1560;"	d
glFramebufferTexture2D	thirdparty/glfw/src/deps/glad/glad.h	3301;"	d
glFramebufferTexture2D	thirdparty/opengl/include/GL/gl3w.h	1561;"	d
glFramebufferTexture3D	thirdparty/glfw/src/deps/glad/glad.h	3304;"	d
glFramebufferTexture3D	thirdparty/opengl/include/GL/gl3w.h	1562;"	d
glFramebufferTextureARB	thirdparty/opengl/include/GL/gl3w.h	1563;"	d
glFramebufferTextureFaceARB	thirdparty/opengl/include/GL/gl3w.h	1564;"	d
glFramebufferTextureLayer	thirdparty/glfw/src/deps/glad/glad.h	3322;"	d
glFramebufferTextureLayer	thirdparty/opengl/include/GL/gl3w.h	1565;"	d
glFramebufferTextureLayerARB	thirdparty/opengl/include/GL/gl3w.h	1566;"	d
glFramebufferTextureMultiviewOVR	thirdparty/opengl/include/GL/gl3w.h	1567;"	d
glFrontFace	thirdparty/glfw/src/deps/glad/glad.h	1409;"	d
glFrontFace	thirdparty/opengl/include/GL/gl3w.h	1568;"	d
glFrustum	thirdparty/glfw/src/deps/glad/glad.h	2276;"	d
glGenBuffers	thirdparty/glfw/src/deps/glad/glad.h	2755;"	d
glGenBuffers	thirdparty/opengl/include/GL/gl3w.h	1569;"	d
glGenFramebuffers	thirdparty/glfw/src/deps/glad/glad.h	3292;"	d
glGenFramebuffers	thirdparty/opengl/include/GL/gl3w.h	1570;"	d
glGenLists	thirdparty/glfw/src/deps/glad/glad.h	1565;"	d
glGenPathsNV	thirdparty/opengl/include/GL/gl3w.h	1571;"	d
glGenPerfMonitorsAMD	thirdparty/opengl/include/GL/gl3w.h	1572;"	d
glGenProgramPipelines	thirdparty/opengl/include/GL/gl3w.h	1573;"	d
glGenQueries	thirdparty/glfw/src/deps/glad/glad.h	2725;"	d
glGenQueries	thirdparty/opengl/include/GL/gl3w.h	1574;"	d
glGenRenderbuffers	thirdparty/glfw/src/deps/glad/glad.h	3274;"	d
glGenRenderbuffers	thirdparty/opengl/include/GL/gl3w.h	1575;"	d
glGenSamplers	thirdparty/opengl/include/GL/gl3w.h	1576;"	d
glGenTextures	thirdparty/glfw/src/deps/glad/glad.h	2364;"	d
glGenTextures	thirdparty/opengl/include/GL/gl3w.h	1577;"	d
glGenTransformFeedbacks	thirdparty/opengl/include/GL/gl3w.h	1578;"	d
glGenVertexArrays	thirdparty/glfw/src/deps/glad/glad.h	3337;"	d
glGenVertexArrays	thirdparty/opengl/include/GL/gl3w.h	1579;"	d
glGenerateMipmap	thirdparty/glfw/src/deps/glad/glad.h	3313;"	d
glGenerateMipmap	thirdparty/opengl/include/GL/gl3w.h	1580;"	d
glGenerateMultiTexMipmapEXT	thirdparty/opengl/include/GL/gl3w.h	1581;"	d
glGenerateTextureMipmap	thirdparty/opengl/include/GL/gl3w.h	1582;"	d
glGenerateTextureMipmapEXT	thirdparty/opengl/include/GL/gl3w.h	1583;"	d
glGetActiveAtomicCounterBufferiv	thirdparty/opengl/include/GL/gl3w.h	1584;"	d
glGetActiveAttrib	thirdparty/glfw/src/deps/glad/glad.h	2831;"	d
glGetActiveAttrib	thirdparty/opengl/include/GL/gl3w.h	1585;"	d
glGetActiveSubroutineName	thirdparty/opengl/include/GL/gl3w.h	1586;"	d
glGetActiveSubroutineUniformName	thirdparty/opengl/include/GL/gl3w.h	1587;"	d
glGetActiveSubroutineUniformiv	thirdparty/opengl/include/GL/gl3w.h	1588;"	d
glGetActiveUniform	thirdparty/glfw/src/deps/glad/glad.h	2834;"	d
glGetActiveUniform	thirdparty/opengl/include/GL/gl3w.h	1589;"	d
glGetActiveUniformBlockName	thirdparty/glfw/src/deps/glad/glad.h	3377;"	d
glGetActiveUniformBlockName	thirdparty/opengl/include/GL/gl3w.h	1590;"	d
glGetActiveUniformBlockiv	thirdparty/glfw/src/deps/glad/glad.h	3374;"	d
glGetActiveUniformBlockiv	thirdparty/opengl/include/GL/gl3w.h	1591;"	d
glGetActiveUniformName	thirdparty/glfw/src/deps/glad/glad.h	3368;"	d
glGetActiveUniformName	thirdparty/opengl/include/GL/gl3w.h	1592;"	d
glGetActiveUniformsiv	thirdparty/glfw/src/deps/glad/glad.h	3365;"	d
glGetActiveUniformsiv	thirdparty/opengl/include/GL/gl3w.h	1593;"	d
glGetAttachedShaders	thirdparty/glfw/src/deps/glad/glad.h	2837;"	d
glGetAttachedShaders	thirdparty/opengl/include/GL/gl3w.h	1594;"	d
glGetAttribLocation	thirdparty/glfw/src/deps/glad/glad.h	2840;"	d
glGetAttribLocation	thirdparty/opengl/include/GL/gl3w.h	1595;"	d
glGetBooleanIndexedvEXT	thirdparty/opengl/include/GL/gl3w.h	1596;"	d
glGetBooleani_v	thirdparty/glfw/src/deps/glad/glad.h	3094;"	d
glGetBooleani_v	thirdparty/opengl/include/GL/gl3w.h	1597;"	d
glGetBooleanv	thirdparty/glfw/src/deps/glad/glad.h	1508;"	d
glGetBooleanv	thirdparty/opengl/include/GL/gl3w.h	1598;"	d
glGetBufferParameteri64v	thirdparty/glfw/src/deps/glad/glad.h	3426;"	d
glGetBufferParameteri64v	thirdparty/opengl/include/GL/gl3w.h	1599;"	d
glGetBufferParameteriv	thirdparty/glfw/src/deps/glad/glad.h	2776;"	d
glGetBufferParameteriv	thirdparty/opengl/include/GL/gl3w.h	1600;"	d
glGetBufferParameterui64vNV	thirdparty/opengl/include/GL/gl3w.h	1601;"	d
glGetBufferPointerv	thirdparty/glfw/src/deps/glad/glad.h	2779;"	d
glGetBufferPointerv	thirdparty/opengl/include/GL/gl3w.h	1602;"	d
glGetBufferSubData	thirdparty/glfw/src/deps/glad/glad.h	2767;"	d
glGetBufferSubData	thirdparty/opengl/include/GL/gl3w.h	1603;"	d
glGetClipPlane	thirdparty/glfw/src/deps/glad/glad.h	2222;"	d
glGetCommandHeaderNV	thirdparty/opengl/include/GL/gl3w.h	1604;"	d
glGetCompressedMultiTexImageEXT	thirdparty/opengl/include/GL/gl3w.h	1605;"	d
glGetCompressedTexImage	thirdparty/glfw/src/deps/glad/glad.h	2462;"	d
glGetCompressedTexImage	thirdparty/opengl/include/GL/gl3w.h	1606;"	d
glGetCompressedTextureImage	thirdparty/opengl/include/GL/gl3w.h	1607;"	d
glGetCompressedTextureImageEXT	thirdparty/opengl/include/GL/gl3w.h	1608;"	d
glGetCompressedTextureSubImage	thirdparty/opengl/include/GL/gl3w.h	1609;"	d
glGetCoverageModulationTableNV	thirdparty/opengl/include/GL/gl3w.h	1610;"	d
glGetDebugMessageLog	thirdparty/glfw/src/deps/glad/glad.h	3622;"	d
glGetDebugMessageLog	thirdparty/opengl/include/GL/gl3w.h	1611;"	d
glGetDebugMessageLogARB	thirdparty/opengl/include/GL/gl3w.h	1612;"	d
glGetDebugMessageLogKHR	thirdparty/glfw/src/deps/glad/glad.h	3652;"	d
glGetDoubleIndexedvEXT	thirdparty/opengl/include/GL/gl3w.h	1613;"	d
glGetDoublei_v	thirdparty/opengl/include/GL/gl3w.h	1614;"	d
glGetDoublei_vEXT	thirdparty/opengl/include/GL/gl3w.h	1615;"	d
glGetDoublev	thirdparty/glfw/src/deps/glad/glad.h	1511;"	d
glGetDoublev	thirdparty/opengl/include/GL/gl3w.h	1616;"	d
glGetError	thirdparty/glfw/src/deps/glad/glad.h	1514;"	d
glGetError	thirdparty/opengl/include/GL/gl3w.h	1617;"	d
glGetFirstPerfQueryIdINTEL	thirdparty/opengl/include/GL/gl3w.h	1618;"	d
glGetFloatIndexedvEXT	thirdparty/opengl/include/GL/gl3w.h	1619;"	d
glGetFloati_v	thirdparty/opengl/include/GL/gl3w.h	1620;"	d
glGetFloati_vEXT	thirdparty/opengl/include/GL/gl3w.h	1621;"	d
glGetFloatv	thirdparty/glfw/src/deps/glad/glad.h	1517;"	d
glGetFloatv	thirdparty/opengl/include/GL/gl3w.h	1622;"	d
glGetFragDataIndex	thirdparty/opengl/include/GL/gl3w.h	1623;"	d
glGetFragDataLocation	thirdparty/glfw/src/deps/glad/glad.h	3211;"	d
glGetFragDataLocation	thirdparty/opengl/include/GL/gl3w.h	1624;"	d
glGetFramebufferAttachmentParameteriv	thirdparty/glfw/src/deps/glad/glad.h	3310;"	d
glGetFramebufferAttachmentParameteriv	thirdparty/opengl/include/GL/gl3w.h	1625;"	d
glGetFramebufferParameteriv	thirdparty/opengl/include/GL/gl3w.h	1626;"	d
glGetFramebufferParameterivEXT	thirdparty/opengl/include/GL/gl3w.h	1627;"	d
glGetGraphicsResetStatus	thirdparty/opengl/include/GL/gl3w.h	1628;"	d
glGetGraphicsResetStatusARB	thirdparty/glfw/src/deps/glad/glad.h	3549;"	d
glGetGraphicsResetStatusARB	thirdparty/opengl/include/GL/gl3w.h	1629;"	d
glGetImageHandleARB	thirdparty/opengl/include/GL/gl3w.h	1630;"	d
glGetImageHandleNV	thirdparty/opengl/include/GL/gl3w.h	1631;"	d
glGetInteger64i_v	thirdparty/glfw/src/deps/glad/glad.h	3423;"	d
glGetInteger64i_v	thirdparty/opengl/include/GL/gl3w.h	1632;"	d
glGetInteger64v	thirdparty/glfw/src/deps/glad/glad.h	3417;"	d
glGetInteger64v	thirdparty/opengl/include/GL/gl3w.h	1633;"	d
glGetIntegerIndexedvEXT	thirdparty/opengl/include/GL/gl3w.h	1634;"	d
glGetIntegeri_v	thirdparty/glfw/src/deps/glad/glad.h	3097;"	d
glGetIntegeri_v	thirdparty/opengl/include/GL/gl3w.h	1635;"	d
glGetIntegerui64i_vNV	thirdparty/opengl/include/GL/gl3w.h	1636;"	d
glGetIntegerui64vNV	thirdparty/opengl/include/GL/gl3w.h	1637;"	d
glGetIntegerv	thirdparty/glfw/src/deps/glad/glad.h	1520;"	d
glGetIntegerv	thirdparty/opengl/include/GL/gl3w.h	1638;"	d
glGetInternalformatSampleivNV	thirdparty/opengl/include/GL/gl3w.h	1639;"	d
glGetInternalformati64v	thirdparty/opengl/include/GL/gl3w.h	1640;"	d
glGetInternalformativ	thirdparty/opengl/include/GL/gl3w.h	1641;"	d
glGetLightfv	thirdparty/glfw/src/deps/glad/glad.h	2225;"	d
glGetLightiv	thirdparty/glfw/src/deps/glad/glad.h	2228;"	d
glGetMapdv	thirdparty/glfw/src/deps/glad/glad.h	2231;"	d
glGetMapfv	thirdparty/glfw/src/deps/glad/glad.h	2234;"	d
glGetMapiv	thirdparty/glfw/src/deps/glad/glad.h	2237;"	d
glGetMaterialfv	thirdparty/glfw/src/deps/glad/glad.h	2240;"	d
glGetMaterialiv	thirdparty/glfw/src/deps/glad/glad.h	2243;"	d
glGetMultiTexEnvfvEXT	thirdparty/opengl/include/GL/gl3w.h	1642;"	d
glGetMultiTexEnvivEXT	thirdparty/opengl/include/GL/gl3w.h	1643;"	d
glGetMultiTexGendvEXT	thirdparty/opengl/include/GL/gl3w.h	1644;"	d
glGetMultiTexGenfvEXT	thirdparty/opengl/include/GL/gl3w.h	1645;"	d
glGetMultiTexGenivEXT	thirdparty/opengl/include/GL/gl3w.h	1646;"	d
glGetMultiTexImageEXT	thirdparty/opengl/include/GL/gl3w.h	1647;"	d
glGetMultiTexLevelParameterfvEXT	thirdparty/opengl/include/GL/gl3w.h	1648;"	d
glGetMultiTexLevelParameterivEXT	thirdparty/opengl/include/GL/gl3w.h	1649;"	d
glGetMultiTexParameterIivEXT	thirdparty/opengl/include/GL/gl3w.h	1650;"	d
glGetMultiTexParameterIuivEXT	thirdparty/opengl/include/GL/gl3w.h	1651;"	d
glGetMultiTexParameterfvEXT	thirdparty/opengl/include/GL/gl3w.h	1652;"	d
glGetMultiTexParameterivEXT	thirdparty/opengl/include/GL/gl3w.h	1653;"	d
glGetMultisamplefv	thirdparty/glfw/src/deps/glad/glad.h	3438;"	d
glGetMultisamplefv	thirdparty/opengl/include/GL/gl3w.h	1654;"	d
glGetNamedBufferParameteri64v	thirdparty/opengl/include/GL/gl3w.h	1655;"	d
glGetNamedBufferParameteriv	thirdparty/opengl/include/GL/gl3w.h	1656;"	d
glGetNamedBufferParameterivEXT	thirdparty/opengl/include/GL/gl3w.h	1657;"	d
glGetNamedBufferParameterui64vNV	thirdparty/opengl/include/GL/gl3w.h	1658;"	d
glGetNamedBufferPointerv	thirdparty/opengl/include/GL/gl3w.h	1659;"	d
glGetNamedBufferPointervEXT	thirdparty/opengl/include/GL/gl3w.h	1660;"	d
glGetNamedBufferSubData	thirdparty/opengl/include/GL/gl3w.h	1661;"	d
glGetNamedBufferSubDataEXT	thirdparty/opengl/include/GL/gl3w.h	1662;"	d
glGetNamedFramebufferAttachmentParameteriv	thirdparty/opengl/include/GL/gl3w.h	1663;"	d
glGetNamedFramebufferAttachmentParameterivEXT	thirdparty/opengl/include/GL/gl3w.h	1664;"	d
glGetNamedFramebufferParameteriv	thirdparty/opengl/include/GL/gl3w.h	1665;"	d
glGetNamedFramebufferParameterivEXT	thirdparty/opengl/include/GL/gl3w.h	1666;"	d
glGetNamedProgramLocalParameterIivEXT	thirdparty/opengl/include/GL/gl3w.h	1667;"	d
glGetNamedProgramLocalParameterIuivEXT	thirdparty/opengl/include/GL/gl3w.h	1668;"	d
glGetNamedProgramLocalParameterdvEXT	thirdparty/opengl/include/GL/gl3w.h	1669;"	d
glGetNamedProgramLocalParameterfvEXT	thirdparty/opengl/include/GL/gl3w.h	1670;"	d
glGetNamedProgramStringEXT	thirdparty/opengl/include/GL/gl3w.h	1671;"	d
glGetNamedProgramivEXT	thirdparty/opengl/include/GL/gl3w.h	1672;"	d
glGetNamedRenderbufferParameteriv	thirdparty/opengl/include/GL/gl3w.h	1673;"	d
glGetNamedRenderbufferParameterivEXT	thirdparty/opengl/include/GL/gl3w.h	1674;"	d
glGetNamedStringARB	thirdparty/opengl/include/GL/gl3w.h	1675;"	d
glGetNamedStringivARB	thirdparty/opengl/include/GL/gl3w.h	1676;"	d
glGetNextPerfQueryIdINTEL	thirdparty/opengl/include/GL/gl3w.h	1677;"	d
glGetObjectLabel	thirdparty/glfw/src/deps/glad/glad.h	3634;"	d
glGetObjectLabel	thirdparty/opengl/include/GL/gl3w.h	1678;"	d
glGetObjectLabelEXT	thirdparty/opengl/include/GL/gl3w.h	1679;"	d
glGetObjectLabelKHR	thirdparty/glfw/src/deps/glad/glad.h	3664;"	d
glGetObjectPtrLabel	thirdparty/glfw/src/deps/glad/glad.h	3640;"	d
glGetObjectPtrLabel	thirdparty/opengl/include/GL/gl3w.h	1680;"	d
glGetObjectPtrLabelKHR	thirdparty/glfw/src/deps/glad/glad.h	3670;"	d
glGetPathCommandsNV	thirdparty/opengl/include/GL/gl3w.h	1681;"	d
glGetPathCoordsNV	thirdparty/opengl/include/GL/gl3w.h	1682;"	d
glGetPathDashArrayNV	thirdparty/opengl/include/GL/gl3w.h	1683;"	d
glGetPathLengthNV	thirdparty/opengl/include/GL/gl3w.h	1684;"	d
glGetPathMetricRangeNV	thirdparty/opengl/include/GL/gl3w.h	1685;"	d
glGetPathMetricsNV	thirdparty/opengl/include/GL/gl3w.h	1686;"	d
glGetPathParameterfvNV	thirdparty/opengl/include/GL/gl3w.h	1687;"	d
glGetPathParameterivNV	thirdparty/opengl/include/GL/gl3w.h	1688;"	d
glGetPathSpacingNV	thirdparty/opengl/include/GL/gl3w.h	1689;"	d
glGetPerfCounterInfoINTEL	thirdparty/opengl/include/GL/gl3w.h	1690;"	d
glGetPerfMonitorCounterDataAMD	thirdparty/opengl/include/GL/gl3w.h	1691;"	d
glGetPerfMonitorCounterInfoAMD	thirdparty/opengl/include/GL/gl3w.h	1692;"	d
glGetPerfMonitorCounterStringAMD	thirdparty/opengl/include/GL/gl3w.h	1693;"	d
glGetPerfMonitorCountersAMD	thirdparty/opengl/include/GL/gl3w.h	1694;"	d
glGetPerfMonitorGroupStringAMD	thirdparty/opengl/include/GL/gl3w.h	1695;"	d
glGetPerfMonitorGroupsAMD	thirdparty/opengl/include/GL/gl3w.h	1696;"	d
glGetPerfQueryDataINTEL	thirdparty/opengl/include/GL/gl3w.h	1697;"	d
glGetPerfQueryIdByNameINTEL	thirdparty/opengl/include/GL/gl3w.h	1698;"	d
glGetPerfQueryInfoINTEL	thirdparty/opengl/include/GL/gl3w.h	1699;"	d
glGetPixelMapfv	thirdparty/glfw/src/deps/glad/glad.h	2246;"	d
glGetPixelMapuiv	thirdparty/glfw/src/deps/glad/glad.h	2249;"	d
glGetPixelMapusv	thirdparty/glfw/src/deps/glad/glad.h	2252;"	d
glGetPointerIndexedvEXT	thirdparty/opengl/include/GL/gl3w.h	1700;"	d
glGetPointeri_vEXT	thirdparty/opengl/include/GL/gl3w.h	1701;"	d
glGetPointerv	thirdparty/glfw/src/deps/glad/glad.h	2334;"	d
glGetPointerv	thirdparty/opengl/include/GL/gl3w.h	1702;"	d
glGetPointervKHR	thirdparty/glfw/src/deps/glad/glad.h	3673;"	d
glGetPolygonStipple	thirdparty/glfw/src/deps/glad/glad.h	2255;"	d
glGetProgramBinary	thirdparty/opengl/include/GL/gl3w.h	1703;"	d
glGetProgramInfoLog	thirdparty/glfw/src/deps/glad/glad.h	2846;"	d
glGetProgramInfoLog	thirdparty/opengl/include/GL/gl3w.h	1704;"	d
glGetProgramInterfaceiv	thirdparty/opengl/include/GL/gl3w.h	1705;"	d
glGetProgramPipelineInfoLog	thirdparty/opengl/include/GL/gl3w.h	1706;"	d
glGetProgramPipelineiv	thirdparty/opengl/include/GL/gl3w.h	1707;"	d
glGetProgramResourceIndex	thirdparty/opengl/include/GL/gl3w.h	1708;"	d
glGetProgramResourceLocation	thirdparty/opengl/include/GL/gl3w.h	1709;"	d
glGetProgramResourceLocationIndex	thirdparty/opengl/include/GL/gl3w.h	1710;"	d
glGetProgramResourceName	thirdparty/opengl/include/GL/gl3w.h	1711;"	d
glGetProgramResourcefvNV	thirdparty/opengl/include/GL/gl3w.h	1712;"	d
glGetProgramResourceiv	thirdparty/opengl/include/GL/gl3w.h	1713;"	d
glGetProgramStageiv	thirdparty/opengl/include/GL/gl3w.h	1714;"	d
glGetProgramiv	thirdparty/glfw/src/deps/glad/glad.h	2843;"	d
glGetProgramiv	thirdparty/opengl/include/GL/gl3w.h	1715;"	d
glGetQueryBufferObjecti64v	thirdparty/opengl/include/GL/gl3w.h	1716;"	d
glGetQueryBufferObjectiv	thirdparty/opengl/include/GL/gl3w.h	1717;"	d
glGetQueryBufferObjectui64v	thirdparty/opengl/include/GL/gl3w.h	1718;"	d
glGetQueryBufferObjectuiv	thirdparty/opengl/include/GL/gl3w.h	1719;"	d
glGetQueryIndexediv	thirdparty/opengl/include/GL/gl3w.h	1720;"	d
glGetQueryObjecti64v	thirdparty/opengl/include/GL/gl3w.h	1721;"	d
glGetQueryObjectiv	thirdparty/glfw/src/deps/glad/glad.h	2743;"	d
glGetQueryObjectiv	thirdparty/opengl/include/GL/gl3w.h	1722;"	d
glGetQueryObjectui64v	thirdparty/opengl/include/GL/gl3w.h	1723;"	d
glGetQueryObjectuiv	thirdparty/glfw/src/deps/glad/glad.h	2746;"	d
glGetQueryObjectuiv	thirdparty/opengl/include/GL/gl3w.h	1724;"	d
glGetQueryiv	thirdparty/glfw/src/deps/glad/glad.h	2740;"	d
glGetQueryiv	thirdparty/opengl/include/GL/gl3w.h	1725;"	d
glGetRenderbufferParameteriv	thirdparty/glfw/src/deps/glad/glad.h	3280;"	d
glGetRenderbufferParameteriv	thirdparty/opengl/include/GL/gl3w.h	1726;"	d
glGetSamplerParameterIiv	thirdparty/opengl/include/GL/gl3w.h	1727;"	d
glGetSamplerParameterIuiv	thirdparty/opengl/include/GL/gl3w.h	1728;"	d
glGetSamplerParameterfv	thirdparty/opengl/include/GL/gl3w.h	1729;"	d
glGetSamplerParameteriv	thirdparty/opengl/include/GL/gl3w.h	1730;"	d
glGetShaderInfoLog	thirdparty/glfw/src/deps/glad/glad.h	2852;"	d
glGetShaderInfoLog	thirdparty/opengl/include/GL/gl3w.h	1731;"	d
glGetShaderPrecisionFormat	thirdparty/opengl/include/GL/gl3w.h	1732;"	d
glGetShaderSource	thirdparty/glfw/src/deps/glad/glad.h	2855;"	d
glGetShaderSource	thirdparty/opengl/include/GL/gl3w.h	1733;"	d
glGetShaderiv	thirdparty/glfw/src/deps/glad/glad.h	2849;"	d
glGetShaderiv	thirdparty/opengl/include/GL/gl3w.h	1734;"	d
glGetStageIndexNV	thirdparty/opengl/include/GL/gl3w.h	1735;"	d
glGetString	thirdparty/glfw/src/deps/glad/glad.h	1523;"	d
glGetString	thirdparty/opengl/include/GL/gl3w.h	1736;"	d
glGetStringi	thirdparty/glfw/src/deps/glad/glad.h	3262;"	d
glGetStringi	thirdparty/opengl/include/GL/gl3w.h	1737;"	d
glGetSubroutineIndex	thirdparty/opengl/include/GL/gl3w.h	1738;"	d
glGetSubroutineUniformLocation	thirdparty/opengl/include/GL/gl3w.h	1739;"	d
glGetSynciv	thirdparty/glfw/src/deps/glad/glad.h	3420;"	d
glGetSynciv	thirdparty/opengl/include/GL/gl3w.h	1740;"	d
glGetTexEnvfv	thirdparty/glfw/src/deps/glad/glad.h	2258;"	d
glGetTexEnviv	thirdparty/glfw/src/deps/glad/glad.h	2261;"	d
glGetTexGendv	thirdparty/glfw/src/deps/glad/glad.h	2264;"	d
glGetTexGenfv	thirdparty/glfw/src/deps/glad/glad.h	2267;"	d
glGetTexGeniv	thirdparty/glfw/src/deps/glad/glad.h	2270;"	d
glGetTexImage	thirdparty/glfw/src/deps/glad/glad.h	1526;"	d
glGetTexImage	thirdparty/opengl/include/GL/gl3w.h	1741;"	d
glGetTexLevelParameterfv	thirdparty/glfw/src/deps/glad/glad.h	1535;"	d
glGetTexLevelParameterfv	thirdparty/opengl/include/GL/gl3w.h	1742;"	d
glGetTexLevelParameteriv	thirdparty/glfw/src/deps/glad/glad.h	1538;"	d
glGetTexLevelParameteriv	thirdparty/opengl/include/GL/gl3w.h	1743;"	d
glGetTexParameterIiv	thirdparty/glfw/src/deps/glad/glad.h	3244;"	d
glGetTexParameterIiv	thirdparty/opengl/include/GL/gl3w.h	1744;"	d
glGetTexParameterIuiv	thirdparty/glfw/src/deps/glad/glad.h	3247;"	d
glGetTexParameterIuiv	thirdparty/opengl/include/GL/gl3w.h	1745;"	d
glGetTexParameterfv	thirdparty/glfw/src/deps/glad/glad.h	1529;"	d
glGetTexParameterfv	thirdparty/opengl/include/GL/gl3w.h	1746;"	d
glGetTexParameteriv	thirdparty/glfw/src/deps/glad/glad.h	1532;"	d
glGetTexParameteriv	thirdparty/opengl/include/GL/gl3w.h	1747;"	d
glGetTextureHandleARB	thirdparty/opengl/include/GL/gl3w.h	1748;"	d
glGetTextureHandleNV	thirdparty/opengl/include/GL/gl3w.h	1749;"	d
glGetTextureImage	thirdparty/opengl/include/GL/gl3w.h	1750;"	d
glGetTextureImageEXT	thirdparty/opengl/include/GL/gl3w.h	1751;"	d
glGetTextureLevelParameterfv	thirdparty/opengl/include/GL/gl3w.h	1752;"	d
glGetTextureLevelParameterfvEXT	thirdparty/opengl/include/GL/gl3w.h	1753;"	d
glGetTextureLevelParameteriv	thirdparty/opengl/include/GL/gl3w.h	1754;"	d
glGetTextureLevelParameterivEXT	thirdparty/opengl/include/GL/gl3w.h	1755;"	d
glGetTextureParameterIiv	thirdparty/opengl/include/GL/gl3w.h	1756;"	d
glGetTextureParameterIivEXT	thirdparty/opengl/include/GL/gl3w.h	1757;"	d
glGetTextureParameterIuiv	thirdparty/opengl/include/GL/gl3w.h	1758;"	d
glGetTextureParameterIuivEXT	thirdparty/opengl/include/GL/gl3w.h	1759;"	d
glGetTextureParameterfv	thirdparty/opengl/include/GL/gl3w.h	1760;"	d
glGetTextureParameterfvEXT	thirdparty/opengl/include/GL/gl3w.h	1761;"	d
glGetTextureParameteriv	thirdparty/opengl/include/GL/gl3w.h	1762;"	d
glGetTextureParameterivEXT	thirdparty/opengl/include/GL/gl3w.h	1763;"	d
glGetTextureSamplerHandleARB	thirdparty/opengl/include/GL/gl3w.h	1764;"	d
glGetTextureSamplerHandleNV	thirdparty/opengl/include/GL/gl3w.h	1765;"	d
glGetTextureSubImage	thirdparty/opengl/include/GL/gl3w.h	1766;"	d
glGetTransformFeedbackVarying	thirdparty/glfw/src/deps/glad/glad.h	3124;"	d
glGetTransformFeedbackVarying	thirdparty/opengl/include/GL/gl3w.h	1767;"	d
glGetTransformFeedbacki64_v	thirdparty/opengl/include/GL/gl3w.h	1768;"	d
glGetTransformFeedbacki_v	thirdparty/opengl/include/GL/gl3w.h	1769;"	d
glGetTransformFeedbackiv	thirdparty/opengl/include/GL/gl3w.h	1770;"	d
glGetUniformBlockIndex	thirdparty/glfw/src/deps/glad/glad.h	3371;"	d
glGetUniformBlockIndex	thirdparty/opengl/include/GL/gl3w.h	1771;"	d
glGetUniformIndices	thirdparty/glfw/src/deps/glad/glad.h	3362;"	d
glGetUniformIndices	thirdparty/opengl/include/GL/gl3w.h	1772;"	d
glGetUniformLocation	thirdparty/glfw/src/deps/glad/glad.h	2858;"	d
glGetUniformLocation	thirdparty/opengl/include/GL/gl3w.h	1773;"	d
glGetUniformSubroutineuiv	thirdparty/opengl/include/GL/gl3w.h	1774;"	d
glGetUniformdv	thirdparty/opengl/include/GL/gl3w.h	1775;"	d
glGetUniformfv	thirdparty/glfw/src/deps/glad/glad.h	2861;"	d
glGetUniformfv	thirdparty/opengl/include/GL/gl3w.h	1776;"	d
glGetUniformi64vARB	thirdparty/opengl/include/GL/gl3w.h	1777;"	d
glGetUniformi64vNV	thirdparty/opengl/include/GL/gl3w.h	1778;"	d
glGetUniformiv	thirdparty/glfw/src/deps/glad/glad.h	2864;"	d
glGetUniformiv	thirdparty/opengl/include/GL/gl3w.h	1779;"	d
glGetUniformui64vARB	thirdparty/opengl/include/GL/gl3w.h	1780;"	d
glGetUniformui64vNV	thirdparty/opengl/include/GL/gl3w.h	1781;"	d
glGetUniformuiv	thirdparty/glfw/src/deps/glad/glad.h	3205;"	d
glGetUniformuiv	thirdparty/opengl/include/GL/gl3w.h	1782;"	d
glGetVertexArrayIndexed64iv	thirdparty/opengl/include/GL/gl3w.h	1783;"	d
glGetVertexArrayIndexediv	thirdparty/opengl/include/GL/gl3w.h	1784;"	d
glGetVertexArrayIntegeri_vEXT	thirdparty/opengl/include/GL/gl3w.h	1785;"	d
glGetVertexArrayIntegervEXT	thirdparty/opengl/include/GL/gl3w.h	1786;"	d
glGetVertexArrayPointeri_vEXT	thirdparty/opengl/include/GL/gl3w.h	1787;"	d
glGetVertexArrayPointervEXT	thirdparty/opengl/include/GL/gl3w.h	1788;"	d
glGetVertexArrayiv	thirdparty/opengl/include/GL/gl3w.h	1789;"	d
glGetVertexAttribIiv	thirdparty/glfw/src/deps/glad/glad.h	3139;"	d
glGetVertexAttribIiv	thirdparty/opengl/include/GL/gl3w.h	1790;"	d
glGetVertexAttribIuiv	thirdparty/glfw/src/deps/glad/glad.h	3142;"	d
glGetVertexAttribIuiv	thirdparty/opengl/include/GL/gl3w.h	1791;"	d
glGetVertexAttribLdv	thirdparty/opengl/include/GL/gl3w.h	1792;"	d
glGetVertexAttribLi64vNV	thirdparty/opengl/include/GL/gl3w.h	1793;"	d
glGetVertexAttribLui64vARB	thirdparty/opengl/include/GL/gl3w.h	1794;"	d
glGetVertexAttribLui64vNV	thirdparty/opengl/include/GL/gl3w.h	1795;"	d
glGetVertexAttribPointerv	thirdparty/glfw/src/deps/glad/glad.h	2876;"	d
glGetVertexAttribPointerv	thirdparty/opengl/include/GL/gl3w.h	1796;"	d
glGetVertexAttribdv	thirdparty/glfw/src/deps/glad/glad.h	2867;"	d
glGetVertexAttribdv	thirdparty/opengl/include/GL/gl3w.h	1797;"	d
glGetVertexAttribfv	thirdparty/glfw/src/deps/glad/glad.h	2870;"	d
glGetVertexAttribfv	thirdparty/opengl/include/GL/gl3w.h	1798;"	d
glGetVertexAttribiv	thirdparty/glfw/src/deps/glad/glad.h	2873;"	d
glGetVertexAttribiv	thirdparty/opengl/include/GL/gl3w.h	1799;"	d
glGetVkProcAddrNV	thirdparty/opengl/include/GL/gl3w.h	1800;"	d
glGetnColorTableARB	thirdparty/glfw/src/deps/glad/glad.h	3594;"	d
glGetnCompressedTexImage	thirdparty/opengl/include/GL/gl3w.h	1801;"	d
glGetnCompressedTexImageARB	thirdparty/glfw/src/deps/glad/glad.h	3558;"	d
glGetnCompressedTexImageARB	thirdparty/opengl/include/GL/gl3w.h	1802;"	d
glGetnConvolutionFilterARB	thirdparty/glfw/src/deps/glad/glad.h	3597;"	d
glGetnHistogramARB	thirdparty/glfw/src/deps/glad/glad.h	3603;"	d
glGetnMapdvARB	thirdparty/glfw/src/deps/glad/glad.h	3573;"	d
glGetnMapfvARB	thirdparty/glfw/src/deps/glad/glad.h	3576;"	d
glGetnMapivARB	thirdparty/glfw/src/deps/glad/glad.h	3579;"	d
glGetnMinmaxARB	thirdparty/glfw/src/deps/glad/glad.h	3606;"	d
glGetnPixelMapfvARB	thirdparty/glfw/src/deps/glad/glad.h	3582;"	d
glGetnPixelMapuivARB	thirdparty/glfw/src/deps/glad/glad.h	3585;"	d
glGetnPixelMapusvARB	thirdparty/glfw/src/deps/glad/glad.h	3588;"	d
glGetnPolygonStippleARB	thirdparty/glfw/src/deps/glad/glad.h	3591;"	d
glGetnSeparableFilterARB	thirdparty/glfw/src/deps/glad/glad.h	3600;"	d
glGetnTexImage	thirdparty/opengl/include/GL/gl3w.h	1803;"	d
glGetnTexImageARB	thirdparty/glfw/src/deps/glad/glad.h	3552;"	d
glGetnTexImageARB	thirdparty/opengl/include/GL/gl3w.h	1804;"	d
glGetnUniformdv	thirdparty/opengl/include/GL/gl3w.h	1805;"	d
glGetnUniformdvARB	thirdparty/glfw/src/deps/glad/glad.h	3570;"	d
glGetnUniformdvARB	thirdparty/opengl/include/GL/gl3w.h	1806;"	d
glGetnUniformfv	thirdparty/opengl/include/GL/gl3w.h	1807;"	d
glGetnUniformfvARB	thirdparty/glfw/src/deps/glad/glad.h	3561;"	d
glGetnUniformfvARB	thirdparty/opengl/include/GL/gl3w.h	1808;"	d
glGetnUniformi64vARB	thirdparty/opengl/include/GL/gl3w.h	1809;"	d
glGetnUniformiv	thirdparty/opengl/include/GL/gl3w.h	1810;"	d
glGetnUniformivARB	thirdparty/glfw/src/deps/glad/glad.h	3564;"	d
glGetnUniformivARB	thirdparty/opengl/include/GL/gl3w.h	1811;"	d
glGetnUniformui64vARB	thirdparty/opengl/include/GL/gl3w.h	1812;"	d
glGetnUniformuiv	thirdparty/opengl/include/GL/gl3w.h	1813;"	d
glGetnUniformuivARB	thirdparty/glfw/src/deps/glad/glad.h	3567;"	d
glGetnUniformuivARB	thirdparty/opengl/include/GL/gl3w.h	1814;"	d
glHint	thirdparty/glfw/src/deps/glad/glad.h	1412;"	d
glHint	thirdparty/opengl/include/GL/gl3w.h	1815;"	d
glIndexFormatNV	thirdparty/opengl/include/GL/gl3w.h	1816;"	d
glIndexMask	thirdparty/glfw/src/deps/glad/glad.h	2123;"	d
glIndexPointer	thirdparty/glfw/src/deps/glad/glad.h	2385;"	d
glIndexd	thirdparty/glfw/src/deps/glad/glad.h	1682;"	d
glIndexdv	thirdparty/glfw/src/deps/glad/glad.h	1685;"	d
glIndexf	thirdparty/glfw/src/deps/glad/glad.h	1688;"	d
glIndexfv	thirdparty/glfw/src/deps/glad/glad.h	1691;"	d
glIndexi	thirdparty/glfw/src/deps/glad/glad.h	1694;"	d
glIndexiv	thirdparty/glfw/src/deps/glad/glad.h	1697;"	d
glIndexs	thirdparty/glfw/src/deps/glad/glad.h	1700;"	d
glIndexsv	thirdparty/glfw/src/deps/glad/glad.h	1703;"	d
glIndexub	thirdparty/glfw/src/deps/glad/glad.h	2406;"	d
glIndexubv	thirdparty/glfw/src/deps/glad/glad.h	2409;"	d
glInitNames	thirdparty/glfw/src/deps/glad/glad.h	2102;"	d
glInsertEventMarkerEXT	thirdparty/opengl/include/GL/gl3w.h	1817;"	d
glInterleavedArrays	thirdparty/glfw/src/deps/glad/glad.h	2388;"	d
glInterpolatePathsNV	thirdparty/opengl/include/GL/gl3w.h	1818;"	d
glInvalidateBufferData	thirdparty/opengl/include/GL/gl3w.h	1819;"	d
glInvalidateBufferSubData	thirdparty/opengl/include/GL/gl3w.h	1820;"	d
glInvalidateFramebuffer	thirdparty/opengl/include/GL/gl3w.h	1821;"	d
glInvalidateNamedFramebufferData	thirdparty/opengl/include/GL/gl3w.h	1822;"	d
glInvalidateNamedFramebufferSubData	thirdparty/opengl/include/GL/gl3w.h	1823;"	d
glInvalidateSubFramebuffer	thirdparty/opengl/include/GL/gl3w.h	1824;"	d
glInvalidateTexImage	thirdparty/opengl/include/GL/gl3w.h	1825;"	d
glInvalidateTexSubImage	thirdparty/opengl/include/GL/gl3w.h	1826;"	d
glIsBuffer	thirdparty/glfw/src/deps/glad/glad.h	2758;"	d
glIsBuffer	thirdparty/opengl/include/GL/gl3w.h	1827;"	d
glIsBufferResidentNV	thirdparty/opengl/include/GL/gl3w.h	1828;"	d
glIsCommandListNV	thirdparty/opengl/include/GL/gl3w.h	1829;"	d
glIsEnabled	thirdparty/glfw/src/deps/glad/glad.h	1541;"	d
glIsEnabled	thirdparty/opengl/include/GL/gl3w.h	1830;"	d
glIsEnabledIndexedEXT	thirdparty/opengl/include/GL/gl3w.h	1831;"	d
glIsEnabledi	thirdparty/glfw/src/deps/glad/glad.h	3106;"	d
glIsEnabledi	thirdparty/opengl/include/GL/gl3w.h	1832;"	d
glIsFramebuffer	thirdparty/glfw/src/deps/glad/glad.h	3283;"	d
glIsFramebuffer	thirdparty/opengl/include/GL/gl3w.h	1833;"	d
glIsImageHandleResidentARB	thirdparty/opengl/include/GL/gl3w.h	1834;"	d
glIsImageHandleResidentNV	thirdparty/opengl/include/GL/gl3w.h	1835;"	d
glIsList	thirdparty/glfw/src/deps/glad/glad.h	2273;"	d
glIsNamedBufferResidentNV	thirdparty/opengl/include/GL/gl3w.h	1836;"	d
glIsNamedStringARB	thirdparty/opengl/include/GL/gl3w.h	1837;"	d
glIsPathNV	thirdparty/opengl/include/GL/gl3w.h	1838;"	d
glIsPointInFillPathNV	thirdparty/opengl/include/GL/gl3w.h	1839;"	d
glIsPointInStrokePathNV	thirdparty/opengl/include/GL/gl3w.h	1840;"	d
glIsProgram	thirdparty/glfw/src/deps/glad/glad.h	2879;"	d
glIsProgram	thirdparty/opengl/include/GL/gl3w.h	1841;"	d
glIsProgramPipeline	thirdparty/opengl/include/GL/gl3w.h	1842;"	d
glIsQuery	thirdparty/glfw/src/deps/glad/glad.h	2731;"	d
glIsQuery	thirdparty/opengl/include/GL/gl3w.h	1843;"	d
glIsRenderbuffer	thirdparty/glfw/src/deps/glad/glad.h	3265;"	d
glIsRenderbuffer	thirdparty/opengl/include/GL/gl3w.h	1844;"	d
glIsSampler	thirdparty/opengl/include/GL/gl3w.h	1845;"	d
glIsShader	thirdparty/glfw/src/deps/glad/glad.h	2882;"	d
glIsShader	thirdparty/opengl/include/GL/gl3w.h	1846;"	d
glIsStateNV	thirdparty/opengl/include/GL/gl3w.h	1847;"	d
glIsSync	thirdparty/glfw/src/deps/glad/glad.h	3405;"	d
glIsSync	thirdparty/opengl/include/GL/gl3w.h	1848;"	d
glIsTexture	thirdparty/glfw/src/deps/glad/glad.h	2367;"	d
glIsTexture	thirdparty/opengl/include/GL/gl3w.h	1849;"	d
glIsTextureHandleResidentARB	thirdparty/opengl/include/GL/gl3w.h	1850;"	d
glIsTextureHandleResidentNV	thirdparty/opengl/include/GL/gl3w.h	1851;"	d
glIsTransformFeedback	thirdparty/opengl/include/GL/gl3w.h	1852;"	d
glIsVertexArray	thirdparty/glfw/src/deps/glad/glad.h	3340;"	d
glIsVertexArray	thirdparty/opengl/include/GL/gl3w.h	1853;"	d
glLabelObjectEXT	thirdparty/opengl/include/GL/gl3w.h	1854;"	d
glLightModelf	thirdparty/glfw/src/deps/glad/glad.h	2030;"	d
glLightModelfv	thirdparty/glfw/src/deps/glad/glad.h	2033;"	d
glLightModeli	thirdparty/glfw/src/deps/glad/glad.h	2036;"	d
glLightModeliv	thirdparty/glfw/src/deps/glad/glad.h	2039;"	d
glLightf	thirdparty/glfw/src/deps/glad/glad.h	2018;"	d
glLightfv	thirdparty/glfw/src/deps/glad/glad.h	2021;"	d
glLighti	thirdparty/glfw/src/deps/glad/glad.h	2024;"	d
glLightiv	thirdparty/glfw/src/deps/glad/glad.h	2027;"	d
glLineStipple	thirdparty/glfw/src/deps/glad/glad.h	2042;"	d
glLineWidth	thirdparty/glfw/src/deps/glad/glad.h	1415;"	d
glLineWidth	thirdparty/opengl/include/GL/gl3w.h	1855;"	d
glLinkProgram	thirdparty/glfw/src/deps/glad/glad.h	2885;"	d
glLinkProgram	thirdparty/opengl/include/GL/gl3w.h	1856;"	d
glListBase	thirdparty/glfw/src/deps/glad/glad.h	1568;"	d
glListDrawCommandsStatesClientNV	thirdparty/opengl/include/GL/gl3w.h	1857;"	d
glLoadIdentity	thirdparty/glfw/src/deps/glad/glad.h	2279;"	d
glLoadMatrixd	thirdparty/glfw/src/deps/glad/glad.h	2285;"	d
glLoadMatrixf	thirdparty/glfw/src/deps/glad/glad.h	2282;"	d
glLoadName	thirdparty/glfw/src/deps/glad/glad.h	2105;"	d
glLoadTransposeMatrixd	thirdparty/glfw/src/deps/glad/glad.h	2567;"	d
glLoadTransposeMatrixf	thirdparty/glfw/src/deps/glad/glad.h	2564;"	d
glLogicOp	thirdparty/glfw/src/deps/glad/glad.h	1484;"	d
glLogicOp	thirdparty/opengl/include/GL/gl3w.h	1858;"	d
glMakeBufferNonResidentNV	thirdparty/opengl/include/GL/gl3w.h	1859;"	d
glMakeBufferResidentNV	thirdparty/opengl/include/GL/gl3w.h	1860;"	d
glMakeImageHandleNonResidentARB	thirdparty/opengl/include/GL/gl3w.h	1861;"	d
glMakeImageHandleNonResidentNV	thirdparty/opengl/include/GL/gl3w.h	1862;"	d
glMakeImageHandleResidentARB	thirdparty/opengl/include/GL/gl3w.h	1863;"	d
glMakeImageHandleResidentNV	thirdparty/opengl/include/GL/gl3w.h	1864;"	d
glMakeNamedBufferNonResidentNV	thirdparty/opengl/include/GL/gl3w.h	1865;"	d
glMakeNamedBufferResidentNV	thirdparty/opengl/include/GL/gl3w.h	1866;"	d
glMakeTextureHandleNonResidentARB	thirdparty/opengl/include/GL/gl3w.h	1867;"	d
glMakeTextureHandleNonResidentNV	thirdparty/opengl/include/GL/gl3w.h	1868;"	d
glMakeTextureHandleResidentARB	thirdparty/opengl/include/GL/gl3w.h	1869;"	d
glMakeTextureHandleResidentNV	thirdparty/opengl/include/GL/gl3w.h	1870;"	d
glMap1d	thirdparty/glfw/src/deps/glad/glad.h	2135;"	d
glMap1f	thirdparty/glfw/src/deps/glad/glad.h	2138;"	d
glMap2d	thirdparty/glfw/src/deps/glad/glad.h	2141;"	d
glMap2f	thirdparty/glfw/src/deps/glad/glad.h	2144;"	d
glMapBuffer	thirdparty/glfw/src/deps/glad/glad.h	2770;"	d
glMapBuffer	thirdparty/opengl/include/GL/gl3w.h	1871;"	d
glMapBufferRange	thirdparty/glfw/src/deps/glad/glad.h	3325;"	d
glMapBufferRange	thirdparty/opengl/include/GL/gl3w.h	1872;"	d
glMapGrid1d	thirdparty/glfw/src/deps/glad/glad.h	2147;"	d
glMapGrid1f	thirdparty/glfw/src/deps/glad/glad.h	2150;"	d
glMapGrid2d	thirdparty/glfw/src/deps/glad/glad.h	2153;"	d
glMapGrid2f	thirdparty/glfw/src/deps/glad/glad.h	2156;"	d
glMapNamedBuffer	thirdparty/opengl/include/GL/gl3w.h	1873;"	d
glMapNamedBufferEXT	thirdparty/opengl/include/GL/gl3w.h	1874;"	d
glMapNamedBufferRange	thirdparty/opengl/include/GL/gl3w.h	1875;"	d
glMapNamedBufferRangeEXT	thirdparty/opengl/include/GL/gl3w.h	1876;"	d
glMaterialf	thirdparty/glfw/src/deps/glad/glad.h	2045;"	d
glMaterialfv	thirdparty/glfw/src/deps/glad/glad.h	2048;"	d
glMateriali	thirdparty/glfw/src/deps/glad/glad.h	2051;"	d
glMaterialiv	thirdparty/glfw/src/deps/glad/glad.h	2054;"	d
glMatrixFrustumEXT	thirdparty/opengl/include/GL/gl3w.h	1877;"	d
glMatrixLoad3x2fNV	thirdparty/opengl/include/GL/gl3w.h	1878;"	d
glMatrixLoad3x3fNV	thirdparty/opengl/include/GL/gl3w.h	1879;"	d
glMatrixLoadIdentityEXT	thirdparty/opengl/include/GL/gl3w.h	1880;"	d
glMatrixLoadTranspose3x3fNV	thirdparty/opengl/include/GL/gl3w.h	1881;"	d
glMatrixLoadTransposedEXT	thirdparty/opengl/include/GL/gl3w.h	1882;"	d
glMatrixLoadTransposefEXT	thirdparty/opengl/include/GL/gl3w.h	1883;"	d
glMatrixLoaddEXT	thirdparty/opengl/include/GL/gl3w.h	1884;"	d
glMatrixLoadfEXT	thirdparty/opengl/include/GL/gl3w.h	1885;"	d
glMatrixMode	thirdparty/glfw/src/deps/glad/glad.h	2288;"	d
glMatrixMult3x2fNV	thirdparty/opengl/include/GL/gl3w.h	1886;"	d
glMatrixMult3x3fNV	thirdparty/opengl/include/GL/gl3w.h	1887;"	d
glMatrixMultTranspose3x3fNV	thirdparty/opengl/include/GL/gl3w.h	1888;"	d
glMatrixMultTransposedEXT	thirdparty/opengl/include/GL/gl3w.h	1889;"	d
glMatrixMultTransposefEXT	thirdparty/opengl/include/GL/gl3w.h	1890;"	d
glMatrixMultdEXT	thirdparty/opengl/include/GL/gl3w.h	1891;"	d
glMatrixMultfEXT	thirdparty/opengl/include/GL/gl3w.h	1892;"	d
glMatrixOrthoEXT	thirdparty/opengl/include/GL/gl3w.h	1893;"	d
glMatrixPopEXT	thirdparty/opengl/include/GL/gl3w.h	1894;"	d
glMatrixPushEXT	thirdparty/opengl/include/GL/gl3w.h	1895;"	d
glMatrixRotatedEXT	thirdparty/opengl/include/GL/gl3w.h	1896;"	d
glMatrixRotatefEXT	thirdparty/opengl/include/GL/gl3w.h	1897;"	d
glMatrixScaledEXT	thirdparty/opengl/include/GL/gl3w.h	1898;"	d
glMatrixScalefEXT	thirdparty/opengl/include/GL/gl3w.h	1899;"	d
glMatrixTranslatedEXT	thirdparty/opengl/include/GL/gl3w.h	1900;"	d
glMatrixTranslatefEXT	thirdparty/opengl/include/GL/gl3w.h	1901;"	d
glMaxShaderCompilerThreadsARB	thirdparty/opengl/include/GL/gl3w.h	1902;"	d
glMemoryBarrier	thirdparty/opengl/include/GL/gl3w.h	1903;"	d
glMemoryBarrierByRegion	thirdparty/opengl/include/GL/gl3w.h	1904;"	d
glMinSampleShading	thirdparty/opengl/include/GL/gl3w.h	1905;"	d
glMinSampleShadingARB	thirdparty/opengl/include/GL/gl3w.h	1906;"	d
glMultMatrixd	thirdparty/glfw/src/deps/glad/glad.h	2294;"	d
glMultMatrixf	thirdparty/glfw/src/deps/glad/glad.h	2291;"	d
glMultTransposeMatrixd	thirdparty/glfw/src/deps/glad/glad.h	2573;"	d
glMultTransposeMatrixf	thirdparty/glfw/src/deps/glad/glad.h	2570;"	d
glMultiDrawArrays	thirdparty/glfw/src/deps/glad/glad.h	2583;"	d
glMultiDrawArrays	thirdparty/opengl/include/GL/gl3w.h	1907;"	d
glMultiDrawArraysIndirect	thirdparty/opengl/include/GL/gl3w.h	1908;"	d
glMultiDrawArraysIndirectBindlessCountNV	thirdparty/opengl/include/GL/gl3w.h	1909;"	d
glMultiDrawArraysIndirectBindlessNV	thirdparty/opengl/include/GL/gl3w.h	1910;"	d
glMultiDrawArraysIndirectCountARB	thirdparty/opengl/include/GL/gl3w.h	1911;"	d
glMultiDrawElements	thirdparty/glfw/src/deps/glad/glad.h	2586;"	d
glMultiDrawElements	thirdparty/opengl/include/GL/gl3w.h	1912;"	d
glMultiDrawElementsBaseVertex	thirdparty/glfw/src/deps/glad/glad.h	3396;"	d
glMultiDrawElementsBaseVertex	thirdparty/opengl/include/GL/gl3w.h	1913;"	d
glMultiDrawElementsIndirect	thirdparty/opengl/include/GL/gl3w.h	1914;"	d
glMultiDrawElementsIndirectBindlessCountNV	thirdparty/opengl/include/GL/gl3w.h	1915;"	d
glMultiDrawElementsIndirectBindlessNV	thirdparty/opengl/include/GL/gl3w.h	1916;"	d
glMultiDrawElementsIndirectCountARB	thirdparty/opengl/include/GL/gl3w.h	1917;"	d
glMultiTexBufferEXT	thirdparty/opengl/include/GL/gl3w.h	1918;"	d
glMultiTexCoord1d	thirdparty/glfw/src/deps/glad/glad.h	2468;"	d
glMultiTexCoord1dv	thirdparty/glfw/src/deps/glad/glad.h	2471;"	d
glMultiTexCoord1f	thirdparty/glfw/src/deps/glad/glad.h	2474;"	d
glMultiTexCoord1fv	thirdparty/glfw/src/deps/glad/glad.h	2477;"	d
glMultiTexCoord1i	thirdparty/glfw/src/deps/glad/glad.h	2480;"	d
glMultiTexCoord1iv	thirdparty/glfw/src/deps/glad/glad.h	2483;"	d
glMultiTexCoord1s	thirdparty/glfw/src/deps/glad/glad.h	2486;"	d
glMultiTexCoord1sv	thirdparty/glfw/src/deps/glad/glad.h	2489;"	d
glMultiTexCoord2d	thirdparty/glfw/src/deps/glad/glad.h	2492;"	d
glMultiTexCoord2dv	thirdparty/glfw/src/deps/glad/glad.h	2495;"	d
glMultiTexCoord2f	thirdparty/glfw/src/deps/glad/glad.h	2498;"	d
glMultiTexCoord2fv	thirdparty/glfw/src/deps/glad/glad.h	2501;"	d
glMultiTexCoord2i	thirdparty/glfw/src/deps/glad/glad.h	2504;"	d
glMultiTexCoord2iv	thirdparty/glfw/src/deps/glad/glad.h	2507;"	d
glMultiTexCoord2s	thirdparty/glfw/src/deps/glad/glad.h	2510;"	d
glMultiTexCoord2sv	thirdparty/glfw/src/deps/glad/glad.h	2513;"	d
glMultiTexCoord3d	thirdparty/glfw/src/deps/glad/glad.h	2516;"	d
glMultiTexCoord3dv	thirdparty/glfw/src/deps/glad/glad.h	2519;"	d
glMultiTexCoord3f	thirdparty/glfw/src/deps/glad/glad.h	2522;"	d
glMultiTexCoord3fv	thirdparty/glfw/src/deps/glad/glad.h	2525;"	d
glMultiTexCoord3i	thirdparty/glfw/src/deps/glad/glad.h	2528;"	d
glMultiTexCoord3iv	thirdparty/glfw/src/deps/glad/glad.h	2531;"	d
glMultiTexCoord3s	thirdparty/glfw/src/deps/glad/glad.h	2534;"	d
glMultiTexCoord3sv	thirdparty/glfw/src/deps/glad/glad.h	2537;"	d
glMultiTexCoord4d	thirdparty/glfw/src/deps/glad/glad.h	2540;"	d
glMultiTexCoord4dv	thirdparty/glfw/src/deps/glad/glad.h	2543;"	d
glMultiTexCoord4f	thirdparty/glfw/src/deps/glad/glad.h	2546;"	d
glMultiTexCoord4fv	thirdparty/glfw/src/deps/glad/glad.h	2549;"	d
glMultiTexCoord4i	thirdparty/glfw/src/deps/glad/glad.h	2552;"	d
glMultiTexCoord4iv	thirdparty/glfw/src/deps/glad/glad.h	2555;"	d
glMultiTexCoord4s	thirdparty/glfw/src/deps/glad/glad.h	2558;"	d
glMultiTexCoord4sv	thirdparty/glfw/src/deps/glad/glad.h	2561;"	d
glMultiTexCoordPointerEXT	thirdparty/opengl/include/GL/gl3w.h	1919;"	d
glMultiTexEnvfEXT	thirdparty/opengl/include/GL/gl3w.h	1920;"	d
glMultiTexEnvfvEXT	thirdparty/opengl/include/GL/gl3w.h	1921;"	d
glMultiTexEnviEXT	thirdparty/opengl/include/GL/gl3w.h	1922;"	d
glMultiTexEnvivEXT	thirdparty/opengl/include/GL/gl3w.h	1923;"	d
glMultiTexGendEXT	thirdparty/opengl/include/GL/gl3w.h	1924;"	d
glMultiTexGendvEXT	thirdparty/opengl/include/GL/gl3w.h	1925;"	d
glMultiTexGenfEXT	thirdparty/opengl/include/GL/gl3w.h	1926;"	d
glMultiTexGenfvEXT	thirdparty/opengl/include/GL/gl3w.h	1927;"	d
glMultiTexGeniEXT	thirdparty/opengl/include/GL/gl3w.h	1928;"	d
glMultiTexGenivEXT	thirdparty/opengl/include/GL/gl3w.h	1929;"	d
glMultiTexImage1DEXT	thirdparty/opengl/include/GL/gl3w.h	1930;"	d
glMultiTexImage2DEXT	thirdparty/opengl/include/GL/gl3w.h	1931;"	d
glMultiTexImage3DEXT	thirdparty/opengl/include/GL/gl3w.h	1932;"	d
glMultiTexParameterIivEXT	thirdparty/opengl/include/GL/gl3w.h	1933;"	d
glMultiTexParameterIuivEXT	thirdparty/opengl/include/GL/gl3w.h	1934;"	d
glMultiTexParameterfEXT	thirdparty/opengl/include/GL/gl3w.h	1935;"	d
glMultiTexParameterfvEXT	thirdparty/opengl/include/GL/gl3w.h	1936;"	d
glMultiTexParameteriEXT	thirdparty/opengl/include/GL/gl3w.h	1937;"	d
glMultiTexParameterivEXT	thirdparty/opengl/include/GL/gl3w.h	1938;"	d
glMultiTexRenderbufferEXT	thirdparty/opengl/include/GL/gl3w.h	1939;"	d
glMultiTexSubImage1DEXT	thirdparty/opengl/include/GL/gl3w.h	1940;"	d
glMultiTexSubImage2DEXT	thirdparty/opengl/include/GL/gl3w.h	1941;"	d
glMultiTexSubImage3DEXT	thirdparty/opengl/include/GL/gl3w.h	1942;"	d
glNamedBufferData	thirdparty/opengl/include/GL/gl3w.h	1943;"	d
glNamedBufferDataEXT	thirdparty/opengl/include/GL/gl3w.h	1944;"	d
glNamedBufferPageCommitmentARB	thirdparty/opengl/include/GL/gl3w.h	1945;"	d
glNamedBufferPageCommitmentEXT	thirdparty/opengl/include/GL/gl3w.h	1946;"	d
glNamedBufferStorage	thirdparty/opengl/include/GL/gl3w.h	1947;"	d
glNamedBufferStorageEXT	thirdparty/opengl/include/GL/gl3w.h	1948;"	d
glNamedBufferSubData	thirdparty/opengl/include/GL/gl3w.h	1949;"	d
glNamedBufferSubDataEXT	thirdparty/opengl/include/GL/gl3w.h	1950;"	d
glNamedCopyBufferSubDataEXT	thirdparty/opengl/include/GL/gl3w.h	1951;"	d
glNamedFramebufferDrawBuffer	thirdparty/opengl/include/GL/gl3w.h	1952;"	d
glNamedFramebufferDrawBuffers	thirdparty/opengl/include/GL/gl3w.h	1953;"	d
glNamedFramebufferParameteri	thirdparty/opengl/include/GL/gl3w.h	1954;"	d
glNamedFramebufferParameteriEXT	thirdparty/opengl/include/GL/gl3w.h	1955;"	d
glNamedFramebufferReadBuffer	thirdparty/opengl/include/GL/gl3w.h	1956;"	d
glNamedFramebufferRenderbuffer	thirdparty/opengl/include/GL/gl3w.h	1957;"	d
glNamedFramebufferRenderbufferEXT	thirdparty/opengl/include/GL/gl3w.h	1958;"	d
glNamedFramebufferSampleLocationsfvARB	thirdparty/opengl/include/GL/gl3w.h	1959;"	d
glNamedFramebufferSampleLocationsfvNV	thirdparty/opengl/include/GL/gl3w.h	1960;"	d
glNamedFramebufferTexture	thirdparty/opengl/include/GL/gl3w.h	1961;"	d
glNamedFramebufferTexture1DEXT	thirdparty/opengl/include/GL/gl3w.h	1962;"	d
glNamedFramebufferTexture2DEXT	thirdparty/opengl/include/GL/gl3w.h	1963;"	d
glNamedFramebufferTexture3DEXT	thirdparty/opengl/include/GL/gl3w.h	1964;"	d
glNamedFramebufferTextureEXT	thirdparty/opengl/include/GL/gl3w.h	1965;"	d
glNamedFramebufferTextureFaceEXT	thirdparty/opengl/include/GL/gl3w.h	1966;"	d
glNamedFramebufferTextureLayer	thirdparty/opengl/include/GL/gl3w.h	1967;"	d
glNamedFramebufferTextureLayerEXT	thirdparty/opengl/include/GL/gl3w.h	1968;"	d
glNamedProgramLocalParameter4dEXT	thirdparty/opengl/include/GL/gl3w.h	1969;"	d
glNamedProgramLocalParameter4dvEXT	thirdparty/opengl/include/GL/gl3w.h	1970;"	d
glNamedProgramLocalParameter4fEXT	thirdparty/opengl/include/GL/gl3w.h	1971;"	d
glNamedProgramLocalParameter4fvEXT	thirdparty/opengl/include/GL/gl3w.h	1972;"	d
glNamedProgramLocalParameterI4iEXT	thirdparty/opengl/include/GL/gl3w.h	1973;"	d
glNamedProgramLocalParameterI4ivEXT	thirdparty/opengl/include/GL/gl3w.h	1974;"	d
glNamedProgramLocalParameterI4uiEXT	thirdparty/opengl/include/GL/gl3w.h	1975;"	d
glNamedProgramLocalParameterI4uivEXT	thirdparty/opengl/include/GL/gl3w.h	1976;"	d
glNamedProgramLocalParameters4fvEXT	thirdparty/opengl/include/GL/gl3w.h	1977;"	d
glNamedProgramLocalParametersI4ivEXT	thirdparty/opengl/include/GL/gl3w.h	1978;"	d
glNamedProgramLocalParametersI4uivEXT	thirdparty/opengl/include/GL/gl3w.h	1979;"	d
glNamedProgramStringEXT	thirdparty/opengl/include/GL/gl3w.h	1980;"	d
glNamedRenderbufferStorage	thirdparty/opengl/include/GL/gl3w.h	1981;"	d
glNamedRenderbufferStorageEXT	thirdparty/opengl/include/GL/gl3w.h	1982;"	d
glNamedRenderbufferStorageMultisample	thirdparty/opengl/include/GL/gl3w.h	1983;"	d
glNamedRenderbufferStorageMultisampleCoverageEXT	thirdparty/opengl/include/GL/gl3w.h	1984;"	d
glNamedRenderbufferStorageMultisampleEXT	thirdparty/opengl/include/GL/gl3w.h	1985;"	d
glNamedStringARB	thirdparty/opengl/include/GL/gl3w.h	1986;"	d
glNewList	thirdparty/glfw/src/deps/glad/glad.h	1550;"	d
glNormal3b	thirdparty/glfw/src/deps/glad/glad.h	1706;"	d
glNormal3bv	thirdparty/glfw/src/deps/glad/glad.h	1709;"	d
glNormal3d	thirdparty/glfw/src/deps/glad/glad.h	1712;"	d
glNormal3dv	thirdparty/glfw/src/deps/glad/glad.h	1715;"	d
glNormal3f	thirdparty/glfw/src/deps/glad/glad.h	1718;"	d
glNormal3fv	thirdparty/glfw/src/deps/glad/glad.h	1721;"	d
glNormal3i	thirdparty/glfw/src/deps/glad/glad.h	1724;"	d
glNormal3iv	thirdparty/glfw/src/deps/glad/glad.h	1727;"	d
glNormal3s	thirdparty/glfw/src/deps/glad/glad.h	1730;"	d
glNormal3sv	thirdparty/glfw/src/deps/glad/glad.h	1733;"	d
glNormalFormatNV	thirdparty/opengl/include/GL/gl3w.h	1987;"	d
glNormalPointer	thirdparty/glfw/src/deps/glad/glad.h	2391;"	d
glObjectLabel	thirdparty/glfw/src/deps/glad/glad.h	3631;"	d
glObjectLabel	thirdparty/opengl/include/GL/gl3w.h	1988;"	d
glObjectLabelKHR	thirdparty/glfw/src/deps/glad/glad.h	3661;"	d
glObjectPtrLabel	thirdparty/glfw/src/deps/glad/glad.h	3637;"	d
glObjectPtrLabel	thirdparty/opengl/include/GL/gl3w.h	1989;"	d
glObjectPtrLabelKHR	thirdparty/glfw/src/deps/glad/glad.h	3667;"	d
glOrtho	thirdparty/glfw/src/deps/glad/glad.h	2297;"	d
glPassThrough	thirdparty/glfw/src/deps/glad/glad.h	2108;"	d
glPatchParameterfv	thirdparty/opengl/include/GL/gl3w.h	1990;"	d
glPatchParameteri	thirdparty/opengl/include/GL/gl3w.h	1991;"	d
glPathCommandsNV	thirdparty/opengl/include/GL/gl3w.h	1992;"	d
glPathCoordsNV	thirdparty/opengl/include/GL/gl3w.h	1993;"	d
glPathCoverDepthFuncNV	thirdparty/opengl/include/GL/gl3w.h	1994;"	d
glPathDashArrayNV	thirdparty/opengl/include/GL/gl3w.h	1995;"	d
glPathGlyphIndexArrayNV	thirdparty/opengl/include/GL/gl3w.h	1996;"	d
glPathGlyphIndexRangeNV	thirdparty/opengl/include/GL/gl3w.h	1997;"	d
glPathGlyphRangeNV	thirdparty/opengl/include/GL/gl3w.h	1998;"	d
glPathGlyphsNV	thirdparty/opengl/include/GL/gl3w.h	1999;"	d
glPathMemoryGlyphIndexArrayNV	thirdparty/opengl/include/GL/gl3w.h	2000;"	d
glPathParameterfNV	thirdparty/opengl/include/GL/gl3w.h	2001;"	d
glPathParameterfvNV	thirdparty/opengl/include/GL/gl3w.h	2002;"	d
glPathParameteriNV	thirdparty/opengl/include/GL/gl3w.h	2003;"	d
glPathParameterivNV	thirdparty/opengl/include/GL/gl3w.h	2004;"	d
glPathStencilDepthOffsetNV	thirdparty/opengl/include/GL/gl3w.h	2005;"	d
glPathStencilFuncNV	thirdparty/opengl/include/GL/gl3w.h	2006;"	d
glPathStringNV	thirdparty/opengl/include/GL/gl3w.h	2007;"	d
glPathSubCommandsNV	thirdparty/opengl/include/GL/gl3w.h	2008;"	d
glPathSubCoordsNV	thirdparty/opengl/include/GL/gl3w.h	2009;"	d
glPauseTransformFeedback	thirdparty/opengl/include/GL/gl3w.h	2010;"	d
glPixelMapfv	thirdparty/glfw/src/deps/glad/glad.h	2207;"	d
glPixelMapuiv	thirdparty/glfw/src/deps/glad/glad.h	2210;"	d
glPixelMapusv	thirdparty/glfw/src/deps/glad/glad.h	2213;"	d
glPixelStoref	thirdparty/glfw/src/deps/glad/glad.h	1496;"	d
glPixelStoref	thirdparty/opengl/include/GL/gl3w.h	2011;"	d
glPixelStorei	thirdparty/glfw/src/deps/glad/glad.h	1499;"	d
glPixelStorei	thirdparty/opengl/include/GL/gl3w.h	2012;"	d
glPixelTransferf	thirdparty/glfw/src/deps/glad/glad.h	2201;"	d
glPixelTransferi	thirdparty/glfw/src/deps/glad/glad.h	2204;"	d
glPixelZoom	thirdparty/glfw/src/deps/glad/glad.h	2198;"	d
glPointAlongPathNV	thirdparty/opengl/include/GL/gl3w.h	2013;"	d
glPointParameterf	thirdparty/glfw/src/deps/glad/glad.h	2589;"	d
glPointParameterf	thirdparty/opengl/include/GL/gl3w.h	2014;"	d
glPointParameterfv	thirdparty/glfw/src/deps/glad/glad.h	2592;"	d
glPointParameterfv	thirdparty/opengl/include/GL/gl3w.h	2015;"	d
glPointParameteri	thirdparty/glfw/src/deps/glad/glad.h	2595;"	d
glPointParameteri	thirdparty/opengl/include/GL/gl3w.h	2016;"	d
glPointParameteriv	thirdparty/glfw/src/deps/glad/glad.h	2598;"	d
glPointParameteriv	thirdparty/opengl/include/GL/gl3w.h	2017;"	d
glPointSize	thirdparty/glfw/src/deps/glad/glad.h	1418;"	d
glPointSize	thirdparty/opengl/include/GL/gl3w.h	2018;"	d
glPolygonMode	thirdparty/glfw/src/deps/glad/glad.h	1421;"	d
glPolygonMode	thirdparty/opengl/include/GL/gl3w.h	2019;"	d
glPolygonOffset	thirdparty/glfw/src/deps/glad/glad.h	2337;"	d
glPolygonOffset	thirdparty/opengl/include/GL/gl3w.h	2020;"	d
glPolygonOffsetClampEXT	thirdparty/opengl/include/GL/gl3w.h	2021;"	d
glPolygonStipple	thirdparty/glfw/src/deps/glad/glad.h	2057;"	d
glPopAttrib	thirdparty/glfw/src/deps/glad/glad.h	2129;"	d
glPopClientAttrib	thirdparty/glfw/src/deps/glad/glad.h	2412;"	d
glPopDebugGroup	thirdparty/glfw/src/deps/glad/glad.h	3628;"	d
glPopDebugGroup	thirdparty/opengl/include/GL/gl3w.h	2022;"	d
glPopDebugGroupKHR	thirdparty/glfw/src/deps/glad/glad.h	3658;"	d
glPopGroupMarkerEXT	thirdparty/opengl/include/GL/gl3w.h	2023;"	d
glPopMatrix	thirdparty/glfw/src/deps/glad/glad.h	2300;"	d
glPopName	thirdparty/glfw/src/deps/glad/glad.h	2111;"	d
glPrimitiveBoundingBoxARB	thirdparty/opengl/include/GL/gl3w.h	2024;"	d
glPrimitiveRestartIndex	thirdparty/glfw/src/deps/glad/glad.h	3356;"	d
glPrimitiveRestartIndex	thirdparty/opengl/include/GL/gl3w.h	2025;"	d
glPrioritizeTextures	thirdparty/glfw/src/deps/glad/glad.h	2403;"	d
glProgramBinary	thirdparty/opengl/include/GL/gl3w.h	2026;"	d
glProgramParameteri	thirdparty/opengl/include/GL/gl3w.h	2027;"	d
glProgramParameteriARB	thirdparty/opengl/include/GL/gl3w.h	2028;"	d
glProgramPathFragmentInputGenNV	thirdparty/opengl/include/GL/gl3w.h	2029;"	d
glProgramUniform1d	thirdparty/opengl/include/GL/gl3w.h	2030;"	d
glProgramUniform1dEXT	thirdparty/opengl/include/GL/gl3w.h	2031;"	d
glProgramUniform1dv	thirdparty/opengl/include/GL/gl3w.h	2032;"	d
glProgramUniform1dvEXT	thirdparty/opengl/include/GL/gl3w.h	2033;"	d
glProgramUniform1f	thirdparty/opengl/include/GL/gl3w.h	2034;"	d
glProgramUniform1fEXT	thirdparty/opengl/include/GL/gl3w.h	2035;"	d
glProgramUniform1fv	thirdparty/opengl/include/GL/gl3w.h	2036;"	d
glProgramUniform1fvEXT	thirdparty/opengl/include/GL/gl3w.h	2037;"	d
glProgramUniform1i	thirdparty/opengl/include/GL/gl3w.h	2038;"	d
glProgramUniform1i64ARB	thirdparty/opengl/include/GL/gl3w.h	2039;"	d
glProgramUniform1i64NV	thirdparty/opengl/include/GL/gl3w.h	2040;"	d
glProgramUniform1i64vARB	thirdparty/opengl/include/GL/gl3w.h	2041;"	d
glProgramUniform1i64vNV	thirdparty/opengl/include/GL/gl3w.h	2042;"	d
glProgramUniform1iEXT	thirdparty/opengl/include/GL/gl3w.h	2043;"	d
glProgramUniform1iv	thirdparty/opengl/include/GL/gl3w.h	2044;"	d
glProgramUniform1ivEXT	thirdparty/opengl/include/GL/gl3w.h	2045;"	d
glProgramUniform1ui	thirdparty/opengl/include/GL/gl3w.h	2046;"	d
glProgramUniform1ui64ARB	thirdparty/opengl/include/GL/gl3w.h	2047;"	d
glProgramUniform1ui64NV	thirdparty/opengl/include/GL/gl3w.h	2048;"	d
glProgramUniform1ui64vARB	thirdparty/opengl/include/GL/gl3w.h	2049;"	d
glProgramUniform1ui64vNV	thirdparty/opengl/include/GL/gl3w.h	2050;"	d
glProgramUniform1uiEXT	thirdparty/opengl/include/GL/gl3w.h	2051;"	d
glProgramUniform1uiv	thirdparty/opengl/include/GL/gl3w.h	2052;"	d
glProgramUniform1uivEXT	thirdparty/opengl/include/GL/gl3w.h	2053;"	d
glProgramUniform2d	thirdparty/opengl/include/GL/gl3w.h	2054;"	d
glProgramUniform2dEXT	thirdparty/opengl/include/GL/gl3w.h	2055;"	d
glProgramUniform2dv	thirdparty/opengl/include/GL/gl3w.h	2056;"	d
glProgramUniform2dvEXT	thirdparty/opengl/include/GL/gl3w.h	2057;"	d
glProgramUniform2f	thirdparty/opengl/include/GL/gl3w.h	2058;"	d
glProgramUniform2fEXT	thirdparty/opengl/include/GL/gl3w.h	2059;"	d
glProgramUniform2fv	thirdparty/opengl/include/GL/gl3w.h	2060;"	d
glProgramUniform2fvEXT	thirdparty/opengl/include/GL/gl3w.h	2061;"	d
glProgramUniform2i	thirdparty/opengl/include/GL/gl3w.h	2062;"	d
glProgramUniform2i64ARB	thirdparty/opengl/include/GL/gl3w.h	2063;"	d
glProgramUniform2i64NV	thirdparty/opengl/include/GL/gl3w.h	2064;"	d
glProgramUniform2i64vARB	thirdparty/opengl/include/GL/gl3w.h	2065;"	d
glProgramUniform2i64vNV	thirdparty/opengl/include/GL/gl3w.h	2066;"	d
glProgramUniform2iEXT	thirdparty/opengl/include/GL/gl3w.h	2067;"	d
glProgramUniform2iv	thirdparty/opengl/include/GL/gl3w.h	2068;"	d
glProgramUniform2ivEXT	thirdparty/opengl/include/GL/gl3w.h	2069;"	d
glProgramUniform2ui	thirdparty/opengl/include/GL/gl3w.h	2070;"	d
glProgramUniform2ui64ARB	thirdparty/opengl/include/GL/gl3w.h	2071;"	d
glProgramUniform2ui64NV	thirdparty/opengl/include/GL/gl3w.h	2072;"	d
glProgramUniform2ui64vARB	thirdparty/opengl/include/GL/gl3w.h	2073;"	d
glProgramUniform2ui64vNV	thirdparty/opengl/include/GL/gl3w.h	2074;"	d
glProgramUniform2uiEXT	thirdparty/opengl/include/GL/gl3w.h	2075;"	d
glProgramUniform2uiv	thirdparty/opengl/include/GL/gl3w.h	2076;"	d
glProgramUniform2uivEXT	thirdparty/opengl/include/GL/gl3w.h	2077;"	d
glProgramUniform3d	thirdparty/opengl/include/GL/gl3w.h	2078;"	d
glProgramUniform3dEXT	thirdparty/opengl/include/GL/gl3w.h	2079;"	d
glProgramUniform3dv	thirdparty/opengl/include/GL/gl3w.h	2080;"	d
glProgramUniform3dvEXT	thirdparty/opengl/include/GL/gl3w.h	2081;"	d
glProgramUniform3f	thirdparty/opengl/include/GL/gl3w.h	2082;"	d
glProgramUniform3fEXT	thirdparty/opengl/include/GL/gl3w.h	2083;"	d
glProgramUniform3fv	thirdparty/opengl/include/GL/gl3w.h	2084;"	d
glProgramUniform3fvEXT	thirdparty/opengl/include/GL/gl3w.h	2085;"	d
glProgramUniform3i	thirdparty/opengl/include/GL/gl3w.h	2086;"	d
glProgramUniform3i64ARB	thirdparty/opengl/include/GL/gl3w.h	2087;"	d
glProgramUniform3i64NV	thirdparty/opengl/include/GL/gl3w.h	2088;"	d
glProgramUniform3i64vARB	thirdparty/opengl/include/GL/gl3w.h	2089;"	d
glProgramUniform3i64vNV	thirdparty/opengl/include/GL/gl3w.h	2090;"	d
glProgramUniform3iEXT	thirdparty/opengl/include/GL/gl3w.h	2091;"	d
glProgramUniform3iv	thirdparty/opengl/include/GL/gl3w.h	2092;"	d
glProgramUniform3ivEXT	thirdparty/opengl/include/GL/gl3w.h	2093;"	d
glProgramUniform3ui	thirdparty/opengl/include/GL/gl3w.h	2094;"	d
glProgramUniform3ui64ARB	thirdparty/opengl/include/GL/gl3w.h	2095;"	d
glProgramUniform3ui64NV	thirdparty/opengl/include/GL/gl3w.h	2096;"	d
glProgramUniform3ui64vARB	thirdparty/opengl/include/GL/gl3w.h	2097;"	d
glProgramUniform3ui64vNV	thirdparty/opengl/include/GL/gl3w.h	2098;"	d
glProgramUniform3uiEXT	thirdparty/opengl/include/GL/gl3w.h	2099;"	d
glProgramUniform3uiv	thirdparty/opengl/include/GL/gl3w.h	2100;"	d
glProgramUniform3uivEXT	thirdparty/opengl/include/GL/gl3w.h	2101;"	d
glProgramUniform4d	thirdparty/opengl/include/GL/gl3w.h	2102;"	d
glProgramUniform4dEXT	thirdparty/opengl/include/GL/gl3w.h	2103;"	d
glProgramUniform4dv	thirdparty/opengl/include/GL/gl3w.h	2104;"	d
glProgramUniform4dvEXT	thirdparty/opengl/include/GL/gl3w.h	2105;"	d
glProgramUniform4f	thirdparty/opengl/include/GL/gl3w.h	2106;"	d
glProgramUniform4fEXT	thirdparty/opengl/include/GL/gl3w.h	2107;"	d
glProgramUniform4fv	thirdparty/opengl/include/GL/gl3w.h	2108;"	d
glProgramUniform4fvEXT	thirdparty/opengl/include/GL/gl3w.h	2109;"	d
glProgramUniform4i	thirdparty/opengl/include/GL/gl3w.h	2110;"	d
glProgramUniform4i64ARB	thirdparty/opengl/include/GL/gl3w.h	2111;"	d
glProgramUniform4i64NV	thirdparty/opengl/include/GL/gl3w.h	2112;"	d
glProgramUniform4i64vARB	thirdparty/opengl/include/GL/gl3w.h	2113;"	d
glProgramUniform4i64vNV	thirdparty/opengl/include/GL/gl3w.h	2114;"	d
glProgramUniform4iEXT	thirdparty/opengl/include/GL/gl3w.h	2115;"	d
glProgramUniform4iv	thirdparty/opengl/include/GL/gl3w.h	2116;"	d
glProgramUniform4ivEXT	thirdparty/opengl/include/GL/gl3w.h	2117;"	d
glProgramUniform4ui	thirdparty/opengl/include/GL/gl3w.h	2118;"	d
glProgramUniform4ui64ARB	thirdparty/opengl/include/GL/gl3w.h	2119;"	d
glProgramUniform4ui64NV	thirdparty/opengl/include/GL/gl3w.h	2120;"	d
glProgramUniform4ui64vARB	thirdparty/opengl/include/GL/gl3w.h	2121;"	d
glProgramUniform4ui64vNV	thirdparty/opengl/include/GL/gl3w.h	2122;"	d
glProgramUniform4uiEXT	thirdparty/opengl/include/GL/gl3w.h	2123;"	d
glProgramUniform4uiv	thirdparty/opengl/include/GL/gl3w.h	2124;"	d
glProgramUniform4uivEXT	thirdparty/opengl/include/GL/gl3w.h	2125;"	d
glProgramUniformHandleui64ARB	thirdparty/opengl/include/GL/gl3w.h	2126;"	d
glProgramUniformHandleui64NV	thirdparty/opengl/include/GL/gl3w.h	2127;"	d
glProgramUniformHandleui64vARB	thirdparty/opengl/include/GL/gl3w.h	2128;"	d
glProgramUniformHandleui64vNV	thirdparty/opengl/include/GL/gl3w.h	2129;"	d
glProgramUniformMatrix2dv	thirdparty/opengl/include/GL/gl3w.h	2130;"	d
glProgramUniformMatrix2dvEXT	thirdparty/opengl/include/GL/gl3w.h	2131;"	d
glProgramUniformMatrix2fv	thirdparty/opengl/include/GL/gl3w.h	2132;"	d
glProgramUniformMatrix2fvEXT	thirdparty/opengl/include/GL/gl3w.h	2133;"	d
glProgramUniformMatrix2x3dv	thirdparty/opengl/include/GL/gl3w.h	2134;"	d
glProgramUniformMatrix2x3dvEXT	thirdparty/opengl/include/GL/gl3w.h	2135;"	d
glProgramUniformMatrix2x3fv	thirdparty/opengl/include/GL/gl3w.h	2136;"	d
glProgramUniformMatrix2x3fvEXT	thirdparty/opengl/include/GL/gl3w.h	2137;"	d
glProgramUniformMatrix2x4dv	thirdparty/opengl/include/GL/gl3w.h	2138;"	d
glProgramUniformMatrix2x4dvEXT	thirdparty/opengl/include/GL/gl3w.h	2139;"	d
glProgramUniformMatrix2x4fv	thirdparty/opengl/include/GL/gl3w.h	2140;"	d
glProgramUniformMatrix2x4fvEXT	thirdparty/opengl/include/GL/gl3w.h	2141;"	d
glProgramUniformMatrix3dv	thirdparty/opengl/include/GL/gl3w.h	2142;"	d
glProgramUniformMatrix3dvEXT	thirdparty/opengl/include/GL/gl3w.h	2143;"	d
glProgramUniformMatrix3fv	thirdparty/opengl/include/GL/gl3w.h	2144;"	d
glProgramUniformMatrix3fvEXT	thirdparty/opengl/include/GL/gl3w.h	2145;"	d
glProgramUniformMatrix3x2dv	thirdparty/opengl/include/GL/gl3w.h	2146;"	d
glProgramUniformMatrix3x2dvEXT	thirdparty/opengl/include/GL/gl3w.h	2147;"	d
glProgramUniformMatrix3x2fv	thirdparty/opengl/include/GL/gl3w.h	2148;"	d
glProgramUniformMatrix3x2fvEXT	thirdparty/opengl/include/GL/gl3w.h	2149;"	d
glProgramUniformMatrix3x4dv	thirdparty/opengl/include/GL/gl3w.h	2150;"	d
glProgramUniformMatrix3x4dvEXT	thirdparty/opengl/include/GL/gl3w.h	2151;"	d
glProgramUniformMatrix3x4fv	thirdparty/opengl/include/GL/gl3w.h	2152;"	d
glProgramUniformMatrix3x4fvEXT	thirdparty/opengl/include/GL/gl3w.h	2153;"	d
glProgramUniformMatrix4dv	thirdparty/opengl/include/GL/gl3w.h	2154;"	d
glProgramUniformMatrix4dvEXT	thirdparty/opengl/include/GL/gl3w.h	2155;"	d
glProgramUniformMatrix4fv	thirdparty/opengl/include/GL/gl3w.h	2156;"	d
glProgramUniformMatrix4fvEXT	thirdparty/opengl/include/GL/gl3w.h	2157;"	d
glProgramUniformMatrix4x2dv	thirdparty/opengl/include/GL/gl3w.h	2158;"	d
glProgramUniformMatrix4x2dvEXT	thirdparty/opengl/include/GL/gl3w.h	2159;"	d
glProgramUniformMatrix4x2fv	thirdparty/opengl/include/GL/gl3w.h	2160;"	d
glProgramUniformMatrix4x2fvEXT	thirdparty/opengl/include/GL/gl3w.h	2161;"	d
glProgramUniformMatrix4x3dv	thirdparty/opengl/include/GL/gl3w.h	2162;"	d
glProgramUniformMatrix4x3dvEXT	thirdparty/opengl/include/GL/gl3w.h	2163;"	d
glProgramUniformMatrix4x3fv	thirdparty/opengl/include/GL/gl3w.h	2164;"	d
glProgramUniformMatrix4x3fvEXT	thirdparty/opengl/include/GL/gl3w.h	2165;"	d
glProgramUniformui64NV	thirdparty/opengl/include/GL/gl3w.h	2166;"	d
glProgramUniformui64vNV	thirdparty/opengl/include/GL/gl3w.h	2167;"	d
glProvokingVertex	thirdparty/glfw/src/deps/glad/glad.h	3399;"	d
glProvokingVertex	thirdparty/opengl/include/GL/gl3w.h	2168;"	d
glPushAttrib	thirdparty/glfw/src/deps/glad/glad.h	2132;"	d
glPushClientAttrib	thirdparty/glfw/src/deps/glad/glad.h	2415;"	d
glPushClientAttribDefaultEXT	thirdparty/opengl/include/GL/gl3w.h	2169;"	d
glPushDebugGroup	thirdparty/glfw/src/deps/glad/glad.h	3625;"	d
glPushDebugGroup	thirdparty/opengl/include/GL/gl3w.h	2170;"	d
glPushDebugGroupKHR	thirdparty/glfw/src/deps/glad/glad.h	3655;"	d
glPushGroupMarkerEXT	thirdparty/opengl/include/GL/gl3w.h	2171;"	d
glPushMatrix	thirdparty/glfw/src/deps/glad/glad.h	2303;"	d
glPushName	thirdparty/glfw/src/deps/glad/glad.h	2114;"	d
glQueryCounter	thirdparty/opengl/include/GL/gl3w.h	2172;"	d
glRasterPos2d	thirdparty/glfw/src/deps/glad/glad.h	1736;"	d
glRasterPos2dv	thirdparty/glfw/src/deps/glad/glad.h	1739;"	d
glRasterPos2f	thirdparty/glfw/src/deps/glad/glad.h	1742;"	d
glRasterPos2fv	thirdparty/glfw/src/deps/glad/glad.h	1745;"	d
glRasterPos2i	thirdparty/glfw/src/deps/glad/glad.h	1748;"	d
glRasterPos2iv	thirdparty/glfw/src/deps/glad/glad.h	1751;"	d
glRasterPos2s	thirdparty/glfw/src/deps/glad/glad.h	1754;"	d
glRasterPos2sv	thirdparty/glfw/src/deps/glad/glad.h	1757;"	d
glRasterPos3d	thirdparty/glfw/src/deps/glad/glad.h	1760;"	d
glRasterPos3dv	thirdparty/glfw/src/deps/glad/glad.h	1763;"	d
glRasterPos3f	thirdparty/glfw/src/deps/glad/glad.h	1766;"	d
glRasterPos3fv	thirdparty/glfw/src/deps/glad/glad.h	1769;"	d
glRasterPos3i	thirdparty/glfw/src/deps/glad/glad.h	1772;"	d
glRasterPos3iv	thirdparty/glfw/src/deps/glad/glad.h	1775;"	d
glRasterPos3s	thirdparty/glfw/src/deps/glad/glad.h	1778;"	d
glRasterPos3sv	thirdparty/glfw/src/deps/glad/glad.h	1781;"	d
glRasterPos4d	thirdparty/glfw/src/deps/glad/glad.h	1784;"	d
glRasterPos4dv	thirdparty/glfw/src/deps/glad/glad.h	1787;"	d
glRasterPos4f	thirdparty/glfw/src/deps/glad/glad.h	1790;"	d
glRasterPos4fv	thirdparty/glfw/src/deps/glad/glad.h	1793;"	d
glRasterPos4i	thirdparty/glfw/src/deps/glad/glad.h	1796;"	d
glRasterPos4iv	thirdparty/glfw/src/deps/glad/glad.h	1799;"	d
glRasterPos4s	thirdparty/glfw/src/deps/glad/glad.h	1802;"	d
glRasterPos4sv	thirdparty/glfw/src/deps/glad/glad.h	1805;"	d
glRasterSamplesEXT	thirdparty/opengl/include/GL/gl3w.h	2173;"	d
glReadBuffer	thirdparty/glfw/src/deps/glad/glad.h	1502;"	d
glReadBuffer	thirdparty/opengl/include/GL/gl3w.h	2174;"	d
glReadPixels	thirdparty/glfw/src/deps/glad/glad.h	1505;"	d
glReadPixels	thirdparty/opengl/include/GL/gl3w.h	2175;"	d
glReadnPixels	thirdparty/opengl/include/GL/gl3w.h	2176;"	d
glReadnPixelsARB	thirdparty/glfw/src/deps/glad/glad.h	3555;"	d
glReadnPixelsARB	thirdparty/opengl/include/GL/gl3w.h	2177;"	d
glRectd	thirdparty/glfw/src/deps/glad/glad.h	1808;"	d
glRectdv	thirdparty/glfw/src/deps/glad/glad.h	1811;"	d
glRectf	thirdparty/glfw/src/deps/glad/glad.h	1814;"	d
glRectfv	thirdparty/glfw/src/deps/glad/glad.h	1817;"	d
glRecti	thirdparty/glfw/src/deps/glad/glad.h	1820;"	d
glRectiv	thirdparty/glfw/src/deps/glad/glad.h	1823;"	d
glRects	thirdparty/glfw/src/deps/glad/glad.h	1826;"	d
glRectsv	thirdparty/glfw/src/deps/glad/glad.h	1829;"	d
glReleaseShaderCompiler	thirdparty/opengl/include/GL/gl3w.h	2178;"	d
glRenderMode	thirdparty/glfw/src/deps/glad/glad.h	2099;"	d
glRenderbufferStorage	thirdparty/glfw/src/deps/glad/glad.h	3277;"	d
glRenderbufferStorage	thirdparty/opengl/include/GL/gl3w.h	2179;"	d
glRenderbufferStorageMultisample	thirdparty/glfw/src/deps/glad/glad.h	3319;"	d
glRenderbufferStorageMultisample	thirdparty/opengl/include/GL/gl3w.h	2180;"	d
glRenderbufferStorageMultisampleCoverageNV	thirdparty/opengl/include/GL/gl3w.h	2181;"	d
glResolveDepthValuesNV	thirdparty/opengl/include/GL/gl3w.h	2182;"	d
glResumeTransformFeedback	thirdparty/opengl/include/GL/gl3w.h	2183;"	d
glRotated	thirdparty/glfw/src/deps/glad/glad.h	2306;"	d
glRotatef	thirdparty/glfw/src/deps/glad/glad.h	2309;"	d
glSampleCoverage	thirdparty/glfw/src/deps/glad/glad.h	2441;"	d
glSampleCoverage	thirdparty/opengl/include/GL/gl3w.h	2184;"	d
glSampleCoverageARB	thirdparty/glfw/src/deps/glad/glad.h	3542;"	d
glSampleMaski	thirdparty/glfw/src/deps/glad/glad.h	3441;"	d
glSampleMaski	thirdparty/opengl/include/GL/gl3w.h	2185;"	d
glSamplerParameterIiv	thirdparty/opengl/include/GL/gl3w.h	2186;"	d
glSamplerParameterIuiv	thirdparty/opengl/include/GL/gl3w.h	2187;"	d
glSamplerParameterf	thirdparty/opengl/include/GL/gl3w.h	2188;"	d
glSamplerParameterfv	thirdparty/opengl/include/GL/gl3w.h	2189;"	d
glSamplerParameteri	thirdparty/opengl/include/GL/gl3w.h	2190;"	d
glSamplerParameteriv	thirdparty/opengl/include/GL/gl3w.h	2191;"	d
glScaled	thirdparty/glfw/src/deps/glad/glad.h	2312;"	d
glScalef	thirdparty/glfw/src/deps/glad/glad.h	2315;"	d
glScissor	thirdparty/glfw/src/deps/glad/glad.h	1424;"	d
glScissor	thirdparty/opengl/include/GL/gl3w.h	2192;"	d
glScissorArrayv	thirdparty/opengl/include/GL/gl3w.h	2193;"	d
glScissorIndexed	thirdparty/opengl/include/GL/gl3w.h	2194;"	d
glScissorIndexedv	thirdparty/opengl/include/GL/gl3w.h	2195;"	d
glSecondaryColor3b	thirdparty/glfw/src/deps/glad/glad.h	2616;"	d
glSecondaryColor3bv	thirdparty/glfw/src/deps/glad/glad.h	2619;"	d
glSecondaryColor3d	thirdparty/glfw/src/deps/glad/glad.h	2622;"	d
glSecondaryColor3dv	thirdparty/glfw/src/deps/glad/glad.h	2625;"	d
glSecondaryColor3f	thirdparty/glfw/src/deps/glad/glad.h	2628;"	d
glSecondaryColor3fv	thirdparty/glfw/src/deps/glad/glad.h	2631;"	d
glSecondaryColor3i	thirdparty/glfw/src/deps/glad/glad.h	2634;"	d
glSecondaryColor3iv	thirdparty/glfw/src/deps/glad/glad.h	2637;"	d
glSecondaryColor3s	thirdparty/glfw/src/deps/glad/glad.h	2640;"	d
glSecondaryColor3sv	thirdparty/glfw/src/deps/glad/glad.h	2643;"	d
glSecondaryColor3ub	thirdparty/glfw/src/deps/glad/glad.h	2646;"	d
glSecondaryColor3ubv	thirdparty/glfw/src/deps/glad/glad.h	2649;"	d
glSecondaryColor3ui	thirdparty/glfw/src/deps/glad/glad.h	2652;"	d
glSecondaryColor3uiv	thirdparty/glfw/src/deps/glad/glad.h	2655;"	d
glSecondaryColor3us	thirdparty/glfw/src/deps/glad/glad.h	2658;"	d
glSecondaryColor3usv	thirdparty/glfw/src/deps/glad/glad.h	2661;"	d
glSecondaryColorFormatNV	thirdparty/opengl/include/GL/gl3w.h	2196;"	d
glSecondaryColorPointer	thirdparty/glfw/src/deps/glad/glad.h	2664;"	d
glSelectBuffer	thirdparty/glfw/src/deps/glad/glad.h	2096;"	d
glSelectPerfMonitorCountersAMD	thirdparty/opengl/include/GL/gl3w.h	2197;"	d
glShadeModel	thirdparty/glfw/src/deps/glad/glad.h	2060;"	d
glShaderBinary	thirdparty/opengl/include/GL/gl3w.h	2198;"	d
glShaderSource	thirdparty/glfw/src/deps/glad/glad.h	2888;"	d
glShaderSource	thirdparty/opengl/include/GL/gl3w.h	2199;"	d
glShaderStorageBlockBinding	thirdparty/opengl/include/GL/gl3w.h	2200;"	d
glSignalVkFenceNV	thirdparty/opengl/include/GL/gl3w.h	2201;"	d
glSignalVkSemaphoreNV	thirdparty/opengl/include/GL/gl3w.h	2202;"	d
glSpecializeShaderARB	thirdparty/opengl/include/GL/gl3w.h	2203;"	d
glStateCaptureNV	thirdparty/opengl/include/GL/gl3w.h	2204;"	d
glStencilFillPathInstancedNV	thirdparty/opengl/include/GL/gl3w.h	2205;"	d
glStencilFillPathNV	thirdparty/opengl/include/GL/gl3w.h	2206;"	d
glStencilFunc	thirdparty/glfw/src/deps/glad/glad.h	1487;"	d
glStencilFunc	thirdparty/opengl/include/GL/gl3w.h	2207;"	d
glStencilFuncSeparate	thirdparty/glfw/src/deps/glad/glad.h	2795;"	d
glStencilFuncSeparate	thirdparty/opengl/include/GL/gl3w.h	2208;"	d
glStencilMask	thirdparty/glfw/src/deps/glad/glad.h	1460;"	d
glStencilMask	thirdparty/opengl/include/GL/gl3w.h	2209;"	d
glStencilMaskSeparate	thirdparty/glfw/src/deps/glad/glad.h	2798;"	d
glStencilMaskSeparate	thirdparty/opengl/include/GL/gl3w.h	2210;"	d
glStencilOp	thirdparty/glfw/src/deps/glad/glad.h	1490;"	d
glStencilOp	thirdparty/opengl/include/GL/gl3w.h	2211;"	d
glStencilOpSeparate	thirdparty/glfw/src/deps/glad/glad.h	2792;"	d
glStencilOpSeparate	thirdparty/opengl/include/GL/gl3w.h	2212;"	d
glStencilStrokePathInstancedNV	thirdparty/opengl/include/GL/gl3w.h	2213;"	d
glStencilStrokePathNV	thirdparty/opengl/include/GL/gl3w.h	2214;"	d
glStencilThenCoverFillPathInstancedNV	thirdparty/opengl/include/GL/gl3w.h	2215;"	d
glStencilThenCoverFillPathNV	thirdparty/opengl/include/GL/gl3w.h	2216;"	d
glStencilThenCoverStrokePathInstancedNV	thirdparty/opengl/include/GL/gl3w.h	2217;"	d
glStencilThenCoverStrokePathNV	thirdparty/opengl/include/GL/gl3w.h	2218;"	d
glSubpixelPrecisionBiasNV	thirdparty/opengl/include/GL/gl3w.h	2219;"	d
glTexBuffer	thirdparty/glfw/src/deps/glad/glad.h	3353;"	d
glTexBuffer	thirdparty/opengl/include/GL/gl3w.h	2220;"	d
glTexBufferARB	thirdparty/opengl/include/GL/gl3w.h	2221;"	d
glTexBufferRange	thirdparty/opengl/include/GL/gl3w.h	2222;"	d
glTexCoord1d	thirdparty/glfw/src/deps/glad/glad.h	1832;"	d
glTexCoord1dv	thirdparty/glfw/src/deps/glad/glad.h	1835;"	d
glTexCoord1f	thirdparty/glfw/src/deps/glad/glad.h	1838;"	d
glTexCoord1fv	thirdparty/glfw/src/deps/glad/glad.h	1841;"	d
glTexCoord1i	thirdparty/glfw/src/deps/glad/glad.h	1844;"	d
glTexCoord1iv	thirdparty/glfw/src/deps/glad/glad.h	1847;"	d
glTexCoord1s	thirdparty/glfw/src/deps/glad/glad.h	1850;"	d
glTexCoord1sv	thirdparty/glfw/src/deps/glad/glad.h	1853;"	d
glTexCoord2d	thirdparty/glfw/src/deps/glad/glad.h	1856;"	d
glTexCoord2dv	thirdparty/glfw/src/deps/glad/glad.h	1859;"	d
glTexCoord2f	thirdparty/glfw/src/deps/glad/glad.h	1862;"	d
glTexCoord2fv	thirdparty/glfw/src/deps/glad/glad.h	1865;"	d
glTexCoord2i	thirdparty/glfw/src/deps/glad/glad.h	1868;"	d
glTexCoord2iv	thirdparty/glfw/src/deps/glad/glad.h	1871;"	d
glTexCoord2s	thirdparty/glfw/src/deps/glad/glad.h	1874;"	d
glTexCoord2sv	thirdparty/glfw/src/deps/glad/glad.h	1877;"	d
glTexCoord3d	thirdparty/glfw/src/deps/glad/glad.h	1880;"	d
glTexCoord3dv	thirdparty/glfw/src/deps/glad/glad.h	1883;"	d
glTexCoord3f	thirdparty/glfw/src/deps/glad/glad.h	1886;"	d
glTexCoord3fv	thirdparty/glfw/src/deps/glad/glad.h	1889;"	d
glTexCoord3i	thirdparty/glfw/src/deps/glad/glad.h	1892;"	d
glTexCoord3iv	thirdparty/glfw/src/deps/glad/glad.h	1895;"	d
glTexCoord3s	thirdparty/glfw/src/deps/glad/glad.h	1898;"	d
glTexCoord3sv	thirdparty/glfw/src/deps/glad/glad.h	1901;"	d
glTexCoord4d	thirdparty/glfw/src/deps/glad/glad.h	1904;"	d
glTexCoord4dv	thirdparty/glfw/src/deps/glad/glad.h	1907;"	d
glTexCoord4f	thirdparty/glfw/src/deps/glad/glad.h	1910;"	d
glTexCoord4fv	thirdparty/glfw/src/deps/glad/glad.h	1913;"	d
glTexCoord4i	thirdparty/glfw/src/deps/glad/glad.h	1916;"	d
glTexCoord4iv	thirdparty/glfw/src/deps/glad/glad.h	1919;"	d
glTexCoord4s	thirdparty/glfw/src/deps/glad/glad.h	1922;"	d
glTexCoord4sv	thirdparty/glfw/src/deps/glad/glad.h	1925;"	d
glTexCoordFormatNV	thirdparty/opengl/include/GL/gl3w.h	2223;"	d
glTexCoordPointer	thirdparty/glfw/src/deps/glad/glad.h	2394;"	d
glTexEnvf	thirdparty/glfw/src/deps/glad/glad.h	2063;"	d
glTexEnvfv	thirdparty/glfw/src/deps/glad/glad.h	2066;"	d
glTexEnvi	thirdparty/glfw/src/deps/glad/glad.h	2069;"	d
glTexEnviv	thirdparty/glfw/src/deps/glad/glad.h	2072;"	d
glTexGend	thirdparty/glfw/src/deps/glad/glad.h	2075;"	d
glTexGendv	thirdparty/glfw/src/deps/glad/glad.h	2078;"	d
glTexGenf	thirdparty/glfw/src/deps/glad/glad.h	2081;"	d
glTexGenfv	thirdparty/glfw/src/deps/glad/glad.h	2084;"	d
glTexGeni	thirdparty/glfw/src/deps/glad/glad.h	2087;"	d
glTexGeniv	thirdparty/glfw/src/deps/glad/glad.h	2090;"	d
glTexImage1D	thirdparty/glfw/src/deps/glad/glad.h	1439;"	d
glTexImage1D	thirdparty/opengl/include/GL/gl3w.h	2224;"	d
glTexImage2D	thirdparty/glfw/src/deps/glad/glad.h	1442;"	d
glTexImage2D	thirdparty/opengl/include/GL/gl3w.h	2225;"	d
glTexImage2DMultisample	thirdparty/glfw/src/deps/glad/glad.h	3432;"	d
glTexImage2DMultisample	thirdparty/opengl/include/GL/gl3w.h	2226;"	d
glTexImage3D	thirdparty/glfw/src/deps/glad/glad.h	2425;"	d
glTexImage3D	thirdparty/opengl/include/GL/gl3w.h	2227;"	d
glTexImage3DMultisample	thirdparty/glfw/src/deps/glad/glad.h	3435;"	d
glTexImage3DMultisample	thirdparty/opengl/include/GL/gl3w.h	2228;"	d
glTexPageCommitmentARB	thirdparty/opengl/include/GL/gl3w.h	2229;"	d
glTexParameterIiv	thirdparty/glfw/src/deps/glad/glad.h	3238;"	d
glTexParameterIiv	thirdparty/opengl/include/GL/gl3w.h	2230;"	d
glTexParameterIuiv	thirdparty/glfw/src/deps/glad/glad.h	3241;"	d
glTexParameterIuiv	thirdparty/opengl/include/GL/gl3w.h	2231;"	d
glTexParameterf	thirdparty/glfw/src/deps/glad/glad.h	1427;"	d
glTexParameterf	thirdparty/opengl/include/GL/gl3w.h	2232;"	d
glTexParameterfv	thirdparty/glfw/src/deps/glad/glad.h	1430;"	d
glTexParameterfv	thirdparty/opengl/include/GL/gl3w.h	2233;"	d
glTexParameteri	thirdparty/glfw/src/deps/glad/glad.h	1433;"	d
glTexParameteri	thirdparty/opengl/include/GL/gl3w.h	2234;"	d
glTexParameteriv	thirdparty/glfw/src/deps/glad/glad.h	1436;"	d
glTexParameteriv	thirdparty/opengl/include/GL/gl3w.h	2235;"	d
glTexStorage1D	thirdparty/opengl/include/GL/gl3w.h	2236;"	d
glTexStorage2D	thirdparty/opengl/include/GL/gl3w.h	2237;"	d
glTexStorage2DMultisample	thirdparty/opengl/include/GL/gl3w.h	2238;"	d
glTexStorage3D	thirdparty/opengl/include/GL/gl3w.h	2239;"	d
glTexStorage3DMultisample	thirdparty/opengl/include/GL/gl3w.h	2240;"	d
glTexSubImage1D	thirdparty/glfw/src/deps/glad/glad.h	2352;"	d
glTexSubImage1D	thirdparty/opengl/include/GL/gl3w.h	2241;"	d
glTexSubImage2D	thirdparty/glfw/src/deps/glad/glad.h	2355;"	d
glTexSubImage2D	thirdparty/opengl/include/GL/gl3w.h	2242;"	d
glTexSubImage3D	thirdparty/glfw/src/deps/glad/glad.h	2428;"	d
glTexSubImage3D	thirdparty/opengl/include/GL/gl3w.h	2243;"	d
glTextureBarrier	thirdparty/opengl/include/GL/gl3w.h	2244;"	d
glTextureBarrierNV	thirdparty/opengl/include/GL/gl3w.h	2245;"	d
glTextureBuffer	thirdparty/opengl/include/GL/gl3w.h	2246;"	d
glTextureBufferEXT	thirdparty/opengl/include/GL/gl3w.h	2247;"	d
glTextureBufferRange	thirdparty/opengl/include/GL/gl3w.h	2248;"	d
glTextureBufferRangeEXT	thirdparty/opengl/include/GL/gl3w.h	2249;"	d
glTextureImage1DEXT	thirdparty/opengl/include/GL/gl3w.h	2250;"	d
glTextureImage2DEXT	thirdparty/opengl/include/GL/gl3w.h	2251;"	d
glTextureImage3DEXT	thirdparty/opengl/include/GL/gl3w.h	2252;"	d
glTexturePageCommitmentEXT	thirdparty/opengl/include/GL/gl3w.h	2253;"	d
glTextureParameterIiv	thirdparty/opengl/include/GL/gl3w.h	2254;"	d
glTextureParameterIivEXT	thirdparty/opengl/include/GL/gl3w.h	2255;"	d
glTextureParameterIuiv	thirdparty/opengl/include/GL/gl3w.h	2256;"	d
glTextureParameterIuivEXT	thirdparty/opengl/include/GL/gl3w.h	2257;"	d
glTextureParameterf	thirdparty/opengl/include/GL/gl3w.h	2258;"	d
glTextureParameterfEXT	thirdparty/opengl/include/GL/gl3w.h	2259;"	d
glTextureParameterfv	thirdparty/opengl/include/GL/gl3w.h	2260;"	d
glTextureParameterfvEXT	thirdparty/opengl/include/GL/gl3w.h	2261;"	d
glTextureParameteri	thirdparty/opengl/include/GL/gl3w.h	2262;"	d
glTextureParameteriEXT	thirdparty/opengl/include/GL/gl3w.h	2263;"	d
glTextureParameteriv	thirdparty/opengl/include/GL/gl3w.h	2264;"	d
glTextureParameterivEXT	thirdparty/opengl/include/GL/gl3w.h	2265;"	d
glTextureRenderbufferEXT	thirdparty/opengl/include/GL/gl3w.h	2266;"	d
glTextureStorage1D	thirdparty/opengl/include/GL/gl3w.h	2267;"	d
glTextureStorage1DEXT	thirdparty/opengl/include/GL/gl3w.h	2268;"	d
glTextureStorage2D	thirdparty/opengl/include/GL/gl3w.h	2269;"	d
glTextureStorage2DEXT	thirdparty/opengl/include/GL/gl3w.h	2270;"	d
glTextureStorage2DMultisample	thirdparty/opengl/include/GL/gl3w.h	2271;"	d
glTextureStorage2DMultisampleEXT	thirdparty/opengl/include/GL/gl3w.h	2272;"	d
glTextureStorage3D	thirdparty/opengl/include/GL/gl3w.h	2273;"	d
glTextureStorage3DEXT	thirdparty/opengl/include/GL/gl3w.h	2274;"	d
glTextureStorage3DMultisample	thirdparty/opengl/include/GL/gl3w.h	2275;"	d
glTextureStorage3DMultisampleEXT	thirdparty/opengl/include/GL/gl3w.h	2276;"	d
glTextureSubImage1D	thirdparty/opengl/include/GL/gl3w.h	2277;"	d
glTextureSubImage1DEXT	thirdparty/opengl/include/GL/gl3w.h	2278;"	d
glTextureSubImage2D	thirdparty/opengl/include/GL/gl3w.h	2279;"	d
glTextureSubImage2DEXT	thirdparty/opengl/include/GL/gl3w.h	2280;"	d
glTextureSubImage3D	thirdparty/opengl/include/GL/gl3w.h	2281;"	d
glTextureSubImage3DEXT	thirdparty/opengl/include/GL/gl3w.h	2282;"	d
glTextureView	thirdparty/opengl/include/GL/gl3w.h	2283;"	d
glTransformFeedbackBufferBase	thirdparty/opengl/include/GL/gl3w.h	2284;"	d
glTransformFeedbackBufferRange	thirdparty/opengl/include/GL/gl3w.h	2285;"	d
glTransformFeedbackVaryings	thirdparty/glfw/src/deps/glad/glad.h	3121;"	d
glTransformFeedbackVaryings	thirdparty/opengl/include/GL/gl3w.h	2286;"	d
glTransformPathNV	thirdparty/opengl/include/GL/gl3w.h	2287;"	d
glTranslated	thirdparty/glfw/src/deps/glad/glad.h	2318;"	d
glTranslatef	thirdparty/glfw/src/deps/glad/glad.h	2321;"	d
glUniform1d	thirdparty/opengl/include/GL/gl3w.h	2288;"	d
glUniform1dv	thirdparty/opengl/include/GL/gl3w.h	2289;"	d
glUniform1f	thirdparty/glfw/src/deps/glad/glad.h	2894;"	d
glUniform1f	thirdparty/opengl/include/GL/gl3w.h	2290;"	d
glUniform1fv	thirdparty/glfw/src/deps/glad/glad.h	2918;"	d
glUniform1fv	thirdparty/opengl/include/GL/gl3w.h	2291;"	d
glUniform1i	thirdparty/glfw/src/deps/glad/glad.h	2906;"	d
glUniform1i	thirdparty/opengl/include/GL/gl3w.h	2292;"	d
glUniform1i64ARB	thirdparty/opengl/include/GL/gl3w.h	2293;"	d
glUniform1i64NV	thirdparty/opengl/include/GL/gl3w.h	2294;"	d
glUniform1i64vARB	thirdparty/opengl/include/GL/gl3w.h	2295;"	d
glUniform1i64vNV	thirdparty/opengl/include/GL/gl3w.h	2296;"	d
glUniform1iv	thirdparty/glfw/src/deps/glad/glad.h	2930;"	d
glUniform1iv	thirdparty/opengl/include/GL/gl3w.h	2297;"	d
glUniform1ui	thirdparty/glfw/src/deps/glad/glad.h	3214;"	d
glUniform1ui	thirdparty/opengl/include/GL/gl3w.h	2298;"	d
glUniform1ui64ARB	thirdparty/opengl/include/GL/gl3w.h	2299;"	d
glUniform1ui64NV	thirdparty/opengl/include/GL/gl3w.h	2300;"	d
glUniform1ui64vARB	thirdparty/opengl/include/GL/gl3w.h	2301;"	d
glUniform1ui64vNV	thirdparty/opengl/include/GL/gl3w.h	2302;"	d
glUniform1uiv	thirdparty/glfw/src/deps/glad/glad.h	3226;"	d
glUniform1uiv	thirdparty/opengl/include/GL/gl3w.h	2303;"	d
glUniform2d	thirdparty/opengl/include/GL/gl3w.h	2304;"	d
glUniform2dv	thirdparty/opengl/include/GL/gl3w.h	2305;"	d
glUniform2f	thirdparty/glfw/src/deps/glad/glad.h	2897;"	d
glUniform2f	thirdparty/opengl/include/GL/gl3w.h	2306;"	d
glUniform2fv	thirdparty/glfw/src/deps/glad/glad.h	2921;"	d
glUniform2fv	thirdparty/opengl/include/GL/gl3w.h	2307;"	d
glUniform2i	thirdparty/glfw/src/deps/glad/glad.h	2909;"	d
glUniform2i	thirdparty/opengl/include/GL/gl3w.h	2308;"	d
glUniform2i64ARB	thirdparty/opengl/include/GL/gl3w.h	2309;"	d
glUniform2i64NV	thirdparty/opengl/include/GL/gl3w.h	2310;"	d
glUniform2i64vARB	thirdparty/opengl/include/GL/gl3w.h	2311;"	d
glUniform2i64vNV	thirdparty/opengl/include/GL/gl3w.h	2312;"	d
glUniform2iv	thirdparty/glfw/src/deps/glad/glad.h	2933;"	d
glUniform2iv	thirdparty/opengl/include/GL/gl3w.h	2313;"	d
glUniform2ui	thirdparty/glfw/src/deps/glad/glad.h	3217;"	d
glUniform2ui	thirdparty/opengl/include/GL/gl3w.h	2314;"	d
glUniform2ui64ARB	thirdparty/opengl/include/GL/gl3w.h	2315;"	d
glUniform2ui64NV	thirdparty/opengl/include/GL/gl3w.h	2316;"	d
glUniform2ui64vARB	thirdparty/opengl/include/GL/gl3w.h	2317;"	d
glUniform2ui64vNV	thirdparty/opengl/include/GL/gl3w.h	2318;"	d
glUniform2uiv	thirdparty/glfw/src/deps/glad/glad.h	3229;"	d
glUniform2uiv	thirdparty/opengl/include/GL/gl3w.h	2319;"	d
glUniform3d	thirdparty/opengl/include/GL/gl3w.h	2320;"	d
glUniform3dv	thirdparty/opengl/include/GL/gl3w.h	2321;"	d
glUniform3f	thirdparty/glfw/src/deps/glad/glad.h	2900;"	d
glUniform3f	thirdparty/opengl/include/GL/gl3w.h	2322;"	d
glUniform3fv	thirdparty/glfw/src/deps/glad/glad.h	2924;"	d
glUniform3fv	thirdparty/opengl/include/GL/gl3w.h	2323;"	d
glUniform3i	thirdparty/glfw/src/deps/glad/glad.h	2912;"	d
glUniform3i	thirdparty/opengl/include/GL/gl3w.h	2324;"	d
glUniform3i64ARB	thirdparty/opengl/include/GL/gl3w.h	2325;"	d
glUniform3i64NV	thirdparty/opengl/include/GL/gl3w.h	2326;"	d
glUniform3i64vARB	thirdparty/opengl/include/GL/gl3w.h	2327;"	d
glUniform3i64vNV	thirdparty/opengl/include/GL/gl3w.h	2328;"	d
glUniform3iv	thirdparty/glfw/src/deps/glad/glad.h	2936;"	d
glUniform3iv	thirdparty/opengl/include/GL/gl3w.h	2329;"	d
glUniform3ui	thirdparty/glfw/src/deps/glad/glad.h	3220;"	d
glUniform3ui	thirdparty/opengl/include/GL/gl3w.h	2330;"	d
glUniform3ui64ARB	thirdparty/opengl/include/GL/gl3w.h	2331;"	d
glUniform3ui64NV	thirdparty/opengl/include/GL/gl3w.h	2332;"	d
glUniform3ui64vARB	thirdparty/opengl/include/GL/gl3w.h	2333;"	d
glUniform3ui64vNV	thirdparty/opengl/include/GL/gl3w.h	2334;"	d
glUniform3uiv	thirdparty/glfw/src/deps/glad/glad.h	3232;"	d
glUniform3uiv	thirdparty/opengl/include/GL/gl3w.h	2335;"	d
glUniform4d	thirdparty/opengl/include/GL/gl3w.h	2336;"	d
glUniform4dv	thirdparty/opengl/include/GL/gl3w.h	2337;"	d
glUniform4f	thirdparty/glfw/src/deps/glad/glad.h	2903;"	d
glUniform4f	thirdparty/opengl/include/GL/gl3w.h	2338;"	d
glUniform4fv	thirdparty/glfw/src/deps/glad/glad.h	2927;"	d
glUniform4fv	thirdparty/opengl/include/GL/gl3w.h	2339;"	d
glUniform4i	thirdparty/glfw/src/deps/glad/glad.h	2915;"	d
glUniform4i	thirdparty/opengl/include/GL/gl3w.h	2340;"	d
glUniform4i64ARB	thirdparty/opengl/include/GL/gl3w.h	2341;"	d
glUniform4i64NV	thirdparty/opengl/include/GL/gl3w.h	2342;"	d
glUniform4i64vARB	thirdparty/opengl/include/GL/gl3w.h	2343;"	d
glUniform4i64vNV	thirdparty/opengl/include/GL/gl3w.h	2344;"	d
glUniform4iv	thirdparty/glfw/src/deps/glad/glad.h	2939;"	d
glUniform4iv	thirdparty/opengl/include/GL/gl3w.h	2345;"	d
glUniform4ui	thirdparty/glfw/src/deps/glad/glad.h	3223;"	d
glUniform4ui	thirdparty/opengl/include/GL/gl3w.h	2346;"	d
glUniform4ui64ARB	thirdparty/opengl/include/GL/gl3w.h	2347;"	d
glUniform4ui64NV	thirdparty/opengl/include/GL/gl3w.h	2348;"	d
glUniform4ui64vARB	thirdparty/opengl/include/GL/gl3w.h	2349;"	d
glUniform4ui64vNV	thirdparty/opengl/include/GL/gl3w.h	2350;"	d
glUniform4uiv	thirdparty/glfw/src/deps/glad/glad.h	3235;"	d
glUniform4uiv	thirdparty/opengl/include/GL/gl3w.h	2351;"	d
glUniformBlockBinding	thirdparty/glfw/src/deps/glad/glad.h	3380;"	d
glUniformBlockBinding	thirdparty/opengl/include/GL/gl3w.h	2352;"	d
glUniformHandleui64ARB	thirdparty/opengl/include/GL/gl3w.h	2353;"	d
glUniformHandleui64NV	thirdparty/opengl/include/GL/gl3w.h	2354;"	d
glUniformHandleui64vARB	thirdparty/opengl/include/GL/gl3w.h	2355;"	d
glUniformHandleui64vNV	thirdparty/opengl/include/GL/gl3w.h	2356;"	d
glUniformMatrix2dv	thirdparty/opengl/include/GL/gl3w.h	2357;"	d
glUniformMatrix2fv	thirdparty/glfw/src/deps/glad/glad.h	2942;"	d
glUniformMatrix2fv	thirdparty/opengl/include/GL/gl3w.h	2358;"	d
glUniformMatrix2x3dv	thirdparty/opengl/include/GL/gl3w.h	2359;"	d
glUniformMatrix2x3fv	thirdparty/glfw/src/deps/glad/glad.h	3069;"	d
glUniformMatrix2x3fv	thirdparty/opengl/include/GL/gl3w.h	2360;"	d
glUniformMatrix2x4dv	thirdparty/opengl/include/GL/gl3w.h	2361;"	d
glUniformMatrix2x4fv	thirdparty/glfw/src/deps/glad/glad.h	3075;"	d
glUniformMatrix2x4fv	thirdparty/opengl/include/GL/gl3w.h	2362;"	d
glUniformMatrix3dv	thirdparty/opengl/include/GL/gl3w.h	2363;"	d
glUniformMatrix3fv	thirdparty/glfw/src/deps/glad/glad.h	2945;"	d
glUniformMatrix3fv	thirdparty/opengl/include/GL/gl3w.h	2364;"	d
glUniformMatrix3x2dv	thirdparty/opengl/include/GL/gl3w.h	2365;"	d
glUniformMatrix3x2fv	thirdparty/glfw/src/deps/glad/glad.h	3072;"	d
glUniformMatrix3x2fv	thirdparty/opengl/include/GL/gl3w.h	2366;"	d
glUniformMatrix3x4dv	thirdparty/opengl/include/GL/gl3w.h	2367;"	d
glUniformMatrix3x4fv	thirdparty/glfw/src/deps/glad/glad.h	3081;"	d
glUniformMatrix3x4fv	thirdparty/opengl/include/GL/gl3w.h	2368;"	d
glUniformMatrix4dv	thirdparty/opengl/include/GL/gl3w.h	2369;"	d
glUniformMatrix4fv	thirdparty/glfw/src/deps/glad/glad.h	2948;"	d
glUniformMatrix4fv	thirdparty/opengl/include/GL/gl3w.h	2370;"	d
glUniformMatrix4x2dv	thirdparty/opengl/include/GL/gl3w.h	2371;"	d
glUniformMatrix4x2fv	thirdparty/glfw/src/deps/glad/glad.h	3078;"	d
glUniformMatrix4x2fv	thirdparty/opengl/include/GL/gl3w.h	2372;"	d
glUniformMatrix4x3dv	thirdparty/opengl/include/GL/gl3w.h	2373;"	d
glUniformMatrix4x3fv	thirdparty/glfw/src/deps/glad/glad.h	3084;"	d
glUniformMatrix4x3fv	thirdparty/opengl/include/GL/gl3w.h	2374;"	d
glUniformSubroutinesuiv	thirdparty/opengl/include/GL/gl3w.h	2375;"	d
glUniformui64NV	thirdparty/opengl/include/GL/gl3w.h	2376;"	d
glUniformui64vNV	thirdparty/opengl/include/GL/gl3w.h	2377;"	d
glUnmapBuffer	thirdparty/glfw/src/deps/glad/glad.h	2773;"	d
glUnmapBuffer	thirdparty/opengl/include/GL/gl3w.h	2378;"	d
glUnmapNamedBuffer	thirdparty/opengl/include/GL/gl3w.h	2379;"	d
glUnmapNamedBufferEXT	thirdparty/opengl/include/GL/gl3w.h	2380;"	d
glUseProgram	thirdparty/glfw/src/deps/glad/glad.h	2891;"	d
glUseProgram	thirdparty/opengl/include/GL/gl3w.h	2381;"	d
glUseProgramStages	thirdparty/opengl/include/GL/gl3w.h	2382;"	d
glUseShaderProgramEXT	thirdparty/opengl/include/GL/gl3w.h	2383;"	d
glValidateProgram	thirdparty/glfw/src/deps/glad/glad.h	2951;"	d
glValidateProgram	thirdparty/opengl/include/GL/gl3w.h	2384;"	d
glValidateProgramPipeline	thirdparty/opengl/include/GL/gl3w.h	2385;"	d
glVertex2d	thirdparty/glfw/src/deps/glad/glad.h	1928;"	d
glVertex2dv	thirdparty/glfw/src/deps/glad/glad.h	1931;"	d
glVertex2f	thirdparty/glfw/src/deps/glad/glad.h	1934;"	d
glVertex2fv	thirdparty/glfw/src/deps/glad/glad.h	1937;"	d
glVertex2i	thirdparty/glfw/src/deps/glad/glad.h	1940;"	d
glVertex2iv	thirdparty/glfw/src/deps/glad/glad.h	1943;"	d
glVertex2s	thirdparty/glfw/src/deps/glad/glad.h	1946;"	d
glVertex2sv	thirdparty/glfw/src/deps/glad/glad.h	1949;"	d
glVertex3d	thirdparty/glfw/src/deps/glad/glad.h	1952;"	d
glVertex3dv	thirdparty/glfw/src/deps/glad/glad.h	1955;"	d
glVertex3f	thirdparty/glfw/src/deps/glad/glad.h	1958;"	d
glVertex3fv	thirdparty/glfw/src/deps/glad/glad.h	1961;"	d
glVertex3i	thirdparty/glfw/src/deps/glad/glad.h	1964;"	d
glVertex3iv	thirdparty/glfw/src/deps/glad/glad.h	1967;"	d
glVertex3s	thirdparty/glfw/src/deps/glad/glad.h	1970;"	d
glVertex3sv	thirdparty/glfw/src/deps/glad/glad.h	1973;"	d
glVertex4d	thirdparty/glfw/src/deps/glad/glad.h	1976;"	d
glVertex4dv	thirdparty/glfw/src/deps/glad/glad.h	1979;"	d
glVertex4f	thirdparty/glfw/src/deps/glad/glad.h	1982;"	d
glVertex4fv	thirdparty/glfw/src/deps/glad/glad.h	1985;"	d
glVertex4i	thirdparty/glfw/src/deps/glad/glad.h	1988;"	d
glVertex4iv	thirdparty/glfw/src/deps/glad/glad.h	1991;"	d
glVertex4s	thirdparty/glfw/src/deps/glad/glad.h	1994;"	d
glVertex4sv	thirdparty/glfw/src/deps/glad/glad.h	1997;"	d
glVertexArrayAttribBinding	thirdparty/opengl/include/GL/gl3w.h	2386;"	d
glVertexArrayAttribFormat	thirdparty/opengl/include/GL/gl3w.h	2387;"	d
glVertexArrayAttribIFormat	thirdparty/opengl/include/GL/gl3w.h	2388;"	d
glVertexArrayAttribLFormat	thirdparty/opengl/include/GL/gl3w.h	2389;"	d
glVertexArrayBindVertexBufferEXT	thirdparty/opengl/include/GL/gl3w.h	2390;"	d
glVertexArrayBindingDivisor	thirdparty/opengl/include/GL/gl3w.h	2391;"	d
glVertexArrayColorOffsetEXT	thirdparty/opengl/include/GL/gl3w.h	2392;"	d
glVertexArrayEdgeFlagOffsetEXT	thirdparty/opengl/include/GL/gl3w.h	2393;"	d
glVertexArrayElementBuffer	thirdparty/opengl/include/GL/gl3w.h	2394;"	d
glVertexArrayFogCoordOffsetEXT	thirdparty/opengl/include/GL/gl3w.h	2395;"	d
glVertexArrayIndexOffsetEXT	thirdparty/opengl/include/GL/gl3w.h	2396;"	d
glVertexArrayMultiTexCoordOffsetEXT	thirdparty/opengl/include/GL/gl3w.h	2397;"	d
glVertexArrayNormalOffsetEXT	thirdparty/opengl/include/GL/gl3w.h	2398;"	d
glVertexArraySecondaryColorOffsetEXT	thirdparty/opengl/include/GL/gl3w.h	2399;"	d
glVertexArrayTexCoordOffsetEXT	thirdparty/opengl/include/GL/gl3w.h	2400;"	d
glVertexArrayVertexAttribBindingEXT	thirdparty/opengl/include/GL/gl3w.h	2401;"	d
glVertexArrayVertexAttribDivisorEXT	thirdparty/opengl/include/GL/gl3w.h	2402;"	d
glVertexArrayVertexAttribFormatEXT	thirdparty/opengl/include/GL/gl3w.h	2403;"	d
glVertexArrayVertexAttribIFormatEXT	thirdparty/opengl/include/GL/gl3w.h	2404;"	d
glVertexArrayVertexAttribIOffsetEXT	thirdparty/opengl/include/GL/gl3w.h	2405;"	d
glVertexArrayVertexAttribLFormatEXT	thirdparty/opengl/include/GL/gl3w.h	2406;"	d
glVertexArrayVertexAttribLOffsetEXT	thirdparty/opengl/include/GL/gl3w.h	2407;"	d
glVertexArrayVertexAttribOffsetEXT	thirdparty/opengl/include/GL/gl3w.h	2408;"	d
glVertexArrayVertexBindingDivisorEXT	thirdparty/opengl/include/GL/gl3w.h	2409;"	d
glVertexArrayVertexBuffer	thirdparty/opengl/include/GL/gl3w.h	2410;"	d
glVertexArrayVertexBuffers	thirdparty/opengl/include/GL/gl3w.h	2411;"	d
glVertexArrayVertexOffsetEXT	thirdparty/opengl/include/GL/gl3w.h	2412;"	d
glVertexAttrib1d	thirdparty/glfw/src/deps/glad/glad.h	2954;"	d
glVertexAttrib1d	thirdparty/opengl/include/GL/gl3w.h	2413;"	d
glVertexAttrib1dv	thirdparty/glfw/src/deps/glad/glad.h	2957;"	d
glVertexAttrib1dv	thirdparty/opengl/include/GL/gl3w.h	2414;"	d
glVertexAttrib1f	thirdparty/glfw/src/deps/glad/glad.h	2960;"	d
glVertexAttrib1f	thirdparty/opengl/include/GL/gl3w.h	2415;"	d
glVertexAttrib1fv	thirdparty/glfw/src/deps/glad/glad.h	2963;"	d
glVertexAttrib1fv	thirdparty/opengl/include/GL/gl3w.h	2416;"	d
glVertexAttrib1s	thirdparty/glfw/src/deps/glad/glad.h	2966;"	d
glVertexAttrib1s	thirdparty/opengl/include/GL/gl3w.h	2417;"	d
glVertexAttrib1sv	thirdparty/glfw/src/deps/glad/glad.h	2969;"	d
glVertexAttrib1sv	thirdparty/opengl/include/GL/gl3w.h	2418;"	d
glVertexAttrib2d	thirdparty/glfw/src/deps/glad/glad.h	2972;"	d
glVertexAttrib2d	thirdparty/opengl/include/GL/gl3w.h	2419;"	d
glVertexAttrib2dv	thirdparty/glfw/src/deps/glad/glad.h	2975;"	d
glVertexAttrib2dv	thirdparty/opengl/include/GL/gl3w.h	2420;"	d
glVertexAttrib2f	thirdparty/glfw/src/deps/glad/glad.h	2978;"	d
glVertexAttrib2f	thirdparty/opengl/include/GL/gl3w.h	2421;"	d
glVertexAttrib2fv	thirdparty/glfw/src/deps/glad/glad.h	2981;"	d
glVertexAttrib2fv	thirdparty/opengl/include/GL/gl3w.h	2422;"	d
glVertexAttrib2s	thirdparty/glfw/src/deps/glad/glad.h	2984;"	d
glVertexAttrib2s	thirdparty/opengl/include/GL/gl3w.h	2423;"	d
glVertexAttrib2sv	thirdparty/glfw/src/deps/glad/glad.h	2987;"	d
glVertexAttrib2sv	thirdparty/opengl/include/GL/gl3w.h	2424;"	d
glVertexAttrib3d	thirdparty/glfw/src/deps/glad/glad.h	2990;"	d
glVertexAttrib3d	thirdparty/opengl/include/GL/gl3w.h	2425;"	d
glVertexAttrib3dv	thirdparty/glfw/src/deps/glad/glad.h	2993;"	d
glVertexAttrib3dv	thirdparty/opengl/include/GL/gl3w.h	2426;"	d
glVertexAttrib3f	thirdparty/glfw/src/deps/glad/glad.h	2996;"	d
glVertexAttrib3f	thirdparty/opengl/include/GL/gl3w.h	2427;"	d
glVertexAttrib3fv	thirdparty/glfw/src/deps/glad/glad.h	2999;"	d
glVertexAttrib3fv	thirdparty/opengl/include/GL/gl3w.h	2428;"	d
glVertexAttrib3s	thirdparty/glfw/src/deps/glad/glad.h	3002;"	d
glVertexAttrib3s	thirdparty/opengl/include/GL/gl3w.h	2429;"	d
glVertexAttrib3sv	thirdparty/glfw/src/deps/glad/glad.h	3005;"	d
glVertexAttrib3sv	thirdparty/opengl/include/GL/gl3w.h	2430;"	d
glVertexAttrib4Nbv	thirdparty/glfw/src/deps/glad/glad.h	3008;"	d
glVertexAttrib4Nbv	thirdparty/opengl/include/GL/gl3w.h	2431;"	d
glVertexAttrib4Niv	thirdparty/glfw/src/deps/glad/glad.h	3011;"	d
glVertexAttrib4Niv	thirdparty/opengl/include/GL/gl3w.h	2432;"	d
glVertexAttrib4Nsv	thirdparty/glfw/src/deps/glad/glad.h	3014;"	d
glVertexAttrib4Nsv	thirdparty/opengl/include/GL/gl3w.h	2433;"	d
glVertexAttrib4Nub	thirdparty/glfw/src/deps/glad/glad.h	3017;"	d
glVertexAttrib4Nub	thirdparty/opengl/include/GL/gl3w.h	2434;"	d
glVertexAttrib4Nubv	thirdparty/glfw/src/deps/glad/glad.h	3020;"	d
glVertexAttrib4Nubv	thirdparty/opengl/include/GL/gl3w.h	2435;"	d
glVertexAttrib4Nuiv	thirdparty/glfw/src/deps/glad/glad.h	3023;"	d
glVertexAttrib4Nuiv	thirdparty/opengl/include/GL/gl3w.h	2436;"	d
glVertexAttrib4Nusv	thirdparty/glfw/src/deps/glad/glad.h	3026;"	d
glVertexAttrib4Nusv	thirdparty/opengl/include/GL/gl3w.h	2437;"	d
glVertexAttrib4bv	thirdparty/glfw/src/deps/glad/glad.h	3029;"	d
glVertexAttrib4bv	thirdparty/opengl/include/GL/gl3w.h	2438;"	d
glVertexAttrib4d	thirdparty/glfw/src/deps/glad/glad.h	3032;"	d
glVertexAttrib4d	thirdparty/opengl/include/GL/gl3w.h	2439;"	d
glVertexAttrib4dv	thirdparty/glfw/src/deps/glad/glad.h	3035;"	d
glVertexAttrib4dv	thirdparty/opengl/include/GL/gl3w.h	2440;"	d
glVertexAttrib4f	thirdparty/glfw/src/deps/glad/glad.h	3038;"	d
glVertexAttrib4f	thirdparty/opengl/include/GL/gl3w.h	2441;"	d
glVertexAttrib4fv	thirdparty/glfw/src/deps/glad/glad.h	3041;"	d
glVertexAttrib4fv	thirdparty/opengl/include/GL/gl3w.h	2442;"	d
glVertexAttrib4iv	thirdparty/glfw/src/deps/glad/glad.h	3044;"	d
glVertexAttrib4iv	thirdparty/opengl/include/GL/gl3w.h	2443;"	d
glVertexAttrib4s	thirdparty/glfw/src/deps/glad/glad.h	3047;"	d
glVertexAttrib4s	thirdparty/opengl/include/GL/gl3w.h	2444;"	d
glVertexAttrib4sv	thirdparty/glfw/src/deps/glad/glad.h	3050;"	d
glVertexAttrib4sv	thirdparty/opengl/include/GL/gl3w.h	2445;"	d
glVertexAttrib4ubv	thirdparty/glfw/src/deps/glad/glad.h	3053;"	d
glVertexAttrib4ubv	thirdparty/opengl/include/GL/gl3w.h	2446;"	d
glVertexAttrib4uiv	thirdparty/glfw/src/deps/glad/glad.h	3056;"	d
glVertexAttrib4uiv	thirdparty/opengl/include/GL/gl3w.h	2447;"	d
glVertexAttrib4usv	thirdparty/glfw/src/deps/glad/glad.h	3059;"	d
glVertexAttrib4usv	thirdparty/opengl/include/GL/gl3w.h	2448;"	d
glVertexAttribBinding	thirdparty/opengl/include/GL/gl3w.h	2449;"	d
glVertexAttribDivisor	thirdparty/opengl/include/GL/gl3w.h	2450;"	d
glVertexAttribDivisorARB	thirdparty/opengl/include/GL/gl3w.h	2451;"	d
glVertexAttribFormat	thirdparty/opengl/include/GL/gl3w.h	2452;"	d
glVertexAttribFormatNV	thirdparty/opengl/include/GL/gl3w.h	2453;"	d
glVertexAttribI1i	thirdparty/glfw/src/deps/glad/glad.h	3145;"	d
glVertexAttribI1i	thirdparty/opengl/include/GL/gl3w.h	2454;"	d
glVertexAttribI1iv	thirdparty/glfw/src/deps/glad/glad.h	3169;"	d
glVertexAttribI1iv	thirdparty/opengl/include/GL/gl3w.h	2455;"	d
glVertexAttribI1ui	thirdparty/glfw/src/deps/glad/glad.h	3157;"	d
glVertexAttribI1ui	thirdparty/opengl/include/GL/gl3w.h	2456;"	d
glVertexAttribI1uiv	thirdparty/glfw/src/deps/glad/glad.h	3181;"	d
glVertexAttribI1uiv	thirdparty/opengl/include/GL/gl3w.h	2457;"	d
glVertexAttribI2i	thirdparty/glfw/src/deps/glad/glad.h	3148;"	d
glVertexAttribI2i	thirdparty/opengl/include/GL/gl3w.h	2458;"	d
glVertexAttribI2iv	thirdparty/glfw/src/deps/glad/glad.h	3172;"	d
glVertexAttribI2iv	thirdparty/opengl/include/GL/gl3w.h	2459;"	d
glVertexAttribI2ui	thirdparty/glfw/src/deps/glad/glad.h	3160;"	d
glVertexAttribI2ui	thirdparty/opengl/include/GL/gl3w.h	2460;"	d
glVertexAttribI2uiv	thirdparty/glfw/src/deps/glad/glad.h	3184;"	d
glVertexAttribI2uiv	thirdparty/opengl/include/GL/gl3w.h	2461;"	d
glVertexAttribI3i	thirdparty/glfw/src/deps/glad/glad.h	3151;"	d
glVertexAttribI3i	thirdparty/opengl/include/GL/gl3w.h	2462;"	d
glVertexAttribI3iv	thirdparty/glfw/src/deps/glad/glad.h	3175;"	d
glVertexAttribI3iv	thirdparty/opengl/include/GL/gl3w.h	2463;"	d
glVertexAttribI3ui	thirdparty/glfw/src/deps/glad/glad.h	3163;"	d
glVertexAttribI3ui	thirdparty/opengl/include/GL/gl3w.h	2464;"	d
glVertexAttribI3uiv	thirdparty/glfw/src/deps/glad/glad.h	3187;"	d
glVertexAttribI3uiv	thirdparty/opengl/include/GL/gl3w.h	2465;"	d
glVertexAttribI4bv	thirdparty/glfw/src/deps/glad/glad.h	3193;"	d
glVertexAttribI4bv	thirdparty/opengl/include/GL/gl3w.h	2466;"	d
glVertexAttribI4i	thirdparty/glfw/src/deps/glad/glad.h	3154;"	d
glVertexAttribI4i	thirdparty/opengl/include/GL/gl3w.h	2467;"	d
glVertexAttribI4iv	thirdparty/glfw/src/deps/glad/glad.h	3178;"	d
glVertexAttribI4iv	thirdparty/opengl/include/GL/gl3w.h	2468;"	d
glVertexAttribI4sv	thirdparty/glfw/src/deps/glad/glad.h	3196;"	d
glVertexAttribI4sv	thirdparty/opengl/include/GL/gl3w.h	2469;"	d
glVertexAttribI4ubv	thirdparty/glfw/src/deps/glad/glad.h	3199;"	d
glVertexAttribI4ubv	thirdparty/opengl/include/GL/gl3w.h	2470;"	d
glVertexAttribI4ui	thirdparty/glfw/src/deps/glad/glad.h	3166;"	d
glVertexAttribI4ui	thirdparty/opengl/include/GL/gl3w.h	2471;"	d
glVertexAttribI4uiv	thirdparty/glfw/src/deps/glad/glad.h	3190;"	d
glVertexAttribI4uiv	thirdparty/opengl/include/GL/gl3w.h	2472;"	d
glVertexAttribI4usv	thirdparty/glfw/src/deps/glad/glad.h	3202;"	d
glVertexAttribI4usv	thirdparty/opengl/include/GL/gl3w.h	2473;"	d
glVertexAttribIFormat	thirdparty/opengl/include/GL/gl3w.h	2474;"	d
glVertexAttribIFormatNV	thirdparty/opengl/include/GL/gl3w.h	2475;"	d
glVertexAttribIPointer	thirdparty/glfw/src/deps/glad/glad.h	3136;"	d
glVertexAttribIPointer	thirdparty/opengl/include/GL/gl3w.h	2476;"	d
glVertexAttribL1d	thirdparty/opengl/include/GL/gl3w.h	2477;"	d
glVertexAttribL1dv	thirdparty/opengl/include/GL/gl3w.h	2478;"	d
glVertexAttribL1i64NV	thirdparty/opengl/include/GL/gl3w.h	2479;"	d
glVertexAttribL1i64vNV	thirdparty/opengl/include/GL/gl3w.h	2480;"	d
glVertexAttribL1ui64ARB	thirdparty/opengl/include/GL/gl3w.h	2481;"	d
glVertexAttribL1ui64NV	thirdparty/opengl/include/GL/gl3w.h	2482;"	d
glVertexAttribL1ui64vARB	thirdparty/opengl/include/GL/gl3w.h	2483;"	d
glVertexAttribL1ui64vNV	thirdparty/opengl/include/GL/gl3w.h	2484;"	d
glVertexAttribL2d	thirdparty/opengl/include/GL/gl3w.h	2485;"	d
glVertexAttribL2dv	thirdparty/opengl/include/GL/gl3w.h	2486;"	d
glVertexAttribL2i64NV	thirdparty/opengl/include/GL/gl3w.h	2487;"	d
glVertexAttribL2i64vNV	thirdparty/opengl/include/GL/gl3w.h	2488;"	d
glVertexAttribL2ui64NV	thirdparty/opengl/include/GL/gl3w.h	2489;"	d
glVertexAttribL2ui64vNV	thirdparty/opengl/include/GL/gl3w.h	2490;"	d
glVertexAttribL3d	thirdparty/opengl/include/GL/gl3w.h	2491;"	d
glVertexAttribL3dv	thirdparty/opengl/include/GL/gl3w.h	2492;"	d
glVertexAttribL3i64NV	thirdparty/opengl/include/GL/gl3w.h	2493;"	d
glVertexAttribL3i64vNV	thirdparty/opengl/include/GL/gl3w.h	2494;"	d
glVertexAttribL3ui64NV	thirdparty/opengl/include/GL/gl3w.h	2495;"	d
glVertexAttribL3ui64vNV	thirdparty/opengl/include/GL/gl3w.h	2496;"	d
glVertexAttribL4d	thirdparty/opengl/include/GL/gl3w.h	2497;"	d
glVertexAttribL4dv	thirdparty/opengl/include/GL/gl3w.h	2498;"	d
glVertexAttribL4i64NV	thirdparty/opengl/include/GL/gl3w.h	2499;"	d
glVertexAttribL4i64vNV	thirdparty/opengl/include/GL/gl3w.h	2500;"	d
glVertexAttribL4ui64NV	thirdparty/opengl/include/GL/gl3w.h	2501;"	d
glVertexAttribL4ui64vNV	thirdparty/opengl/include/GL/gl3w.h	2502;"	d
glVertexAttribLFormat	thirdparty/opengl/include/GL/gl3w.h	2503;"	d
glVertexAttribLFormatNV	thirdparty/opengl/include/GL/gl3w.h	2504;"	d
glVertexAttribLPointer	thirdparty/opengl/include/GL/gl3w.h	2505;"	d
glVertexAttribP1ui	thirdparty/opengl/include/GL/gl3w.h	2506;"	d
glVertexAttribP1uiv	thirdparty/opengl/include/GL/gl3w.h	2507;"	d
glVertexAttribP2ui	thirdparty/opengl/include/GL/gl3w.h	2508;"	d
glVertexAttribP2uiv	thirdparty/opengl/include/GL/gl3w.h	2509;"	d
glVertexAttribP3ui	thirdparty/opengl/include/GL/gl3w.h	2510;"	d
glVertexAttribP3uiv	thirdparty/opengl/include/GL/gl3w.h	2511;"	d
glVertexAttribP4ui	thirdparty/opengl/include/GL/gl3w.h	2512;"	d
glVertexAttribP4uiv	thirdparty/opengl/include/GL/gl3w.h	2513;"	d
glVertexAttribPointer	thirdparty/glfw/src/deps/glad/glad.h	3062;"	d
glVertexAttribPointer	thirdparty/opengl/include/GL/gl3w.h	2514;"	d
glVertexBindingDivisor	thirdparty/opengl/include/GL/gl3w.h	2515;"	d
glVertexFormatNV	thirdparty/opengl/include/GL/gl3w.h	2516;"	d
glVertexPointer	thirdparty/glfw/src/deps/glad/glad.h	2397;"	d
glViewport	thirdparty/glfw/src/deps/glad/glad.h	1547;"	d
glViewport	thirdparty/opengl/include/GL/gl3w.h	2517;"	d
glViewportArrayv	thirdparty/opengl/include/GL/gl3w.h	2518;"	d
glViewportIndexedf	thirdparty/opengl/include/GL/gl3w.h	2519;"	d
glViewportIndexedfv	thirdparty/opengl/include/GL/gl3w.h	2520;"	d
glViewportPositionWScaleNV	thirdparty/opengl/include/GL/gl3w.h	2521;"	d
glViewportSwizzleNV	thirdparty/opengl/include/GL/gl3w.h	2522;"	d
glWaitSync	thirdparty/glfw/src/deps/glad/glad.h	3414;"	d
glWaitSync	thirdparty/opengl/include/GL/gl3w.h	2523;"	d
glWaitVkSemaphoreNV	thirdparty/opengl/include/GL/gl3w.h	2524;"	d
glWeightPathsNV	thirdparty/opengl/include/GL/gl3w.h	2525;"	d
glWindowPos2d	thirdparty/glfw/src/deps/glad/glad.h	2667;"	d
glWindowPos2dv	thirdparty/glfw/src/deps/glad/glad.h	2670;"	d
glWindowPos2f	thirdparty/glfw/src/deps/glad/glad.h	2673;"	d
glWindowPos2fv	thirdparty/glfw/src/deps/glad/glad.h	2676;"	d
glWindowPos2i	thirdparty/glfw/src/deps/glad/glad.h	2679;"	d
glWindowPos2iv	thirdparty/glfw/src/deps/glad/glad.h	2682;"	d
glWindowPos2s	thirdparty/glfw/src/deps/glad/glad.h	2685;"	d
glWindowPos2sv	thirdparty/glfw/src/deps/glad/glad.h	2688;"	d
glWindowPos3d	thirdparty/glfw/src/deps/glad/glad.h	2691;"	d
glWindowPos3dv	thirdparty/glfw/src/deps/glad/glad.h	2694;"	d
glWindowPos3f	thirdparty/glfw/src/deps/glad/glad.h	2697;"	d
glWindowPos3fv	thirdparty/glfw/src/deps/glad/glad.h	2700;"	d
glWindowPos3i	thirdparty/glfw/src/deps/glad/glad.h	2703;"	d
glWindowPos3iv	thirdparty/glfw/src/deps/glad/glad.h	2706;"	d
glWindowPos3s	thirdparty/glfw/src/deps/glad/glad.h	2709;"	d
glWindowPos3sv	thirdparty/glfw/src/deps/glad/glad.h	2712;"	d
glWindowRectanglesEXT	thirdparty/opengl/include/GL/gl3w.h	2526;"	d
glXCreateNewContext	thirdparty/glfw/src/glx_context.h	105;"	d
glXCreateWindow	thirdparty/glfw/src/glx_context.h	107;"	d
glXDestroyContext	thirdparty/glfw/src/glx_context.h	101;"	d
glXDestroyWindow	thirdparty/glfw/src/glx_context.h	108;"	d
glXGetClientString	thirdparty/glfw/src/glx_context.h	98;"	d
glXGetFBConfigAttrib	thirdparty/glfw/src/glx_context.h	97;"	d
glXGetFBConfigs	thirdparty/glfw/src/glx_context.h	96;"	d
glXGetVisualFromFBConfig	thirdparty/glfw/src/glx_context.h	106;"	d
glXMakeCurrent	thirdparty/glfw/src/glx_context.h	102;"	d
glXQueryExtension	thirdparty/glfw/src/glx_context.h	99;"	d
glXQueryExtensionsString	thirdparty/glfw/src/glx_context.h	104;"	d
glXQueryVersion	thirdparty/glfw/src/glx_context.h	100;"	d
glXSwapBuffers	thirdparty/glfw/src/glx_context.h	103;"	d
gl_data	lib/rov/src/rov.cpp	/^  ROV_Internal::rovGLData gl_data;$/;"	m	struct:__anon48::ROV_data	file:
gl_id	lib/rov/src/ogl/rov_gl.hpp	/^  GLuint gl_id;$/;"	m	struct:ROV_Internal::rovGLIndex
gl_id	lib/rov/src/ogl/rov_gl.hpp	/^  GLuint gl_id;$/;"	m	struct:ROV_Internal::rovGLLightPack
gl_id	lib/rov/src/ogl/rov_gl.hpp	/^  GLuint gl_id;$/;"	m	struct:ROV_Internal::rovGLMesh
gl_id	lib/rov/src/ogl/rov_gl.hpp	/^  GLuint gl_id;$/;"	m	struct:ROV_Internal::rovGLTexture
gladGLversionStruct	thirdparty/glfw/src/deps/glad/glad.h	/^struct gladGLversionStruct {$/;"	s
gladLoadGLLoader	thirdparty/glfw/src/deps/glad.c	/^int gladLoadGLLoader(GLADloadproc load) {$/;"	f
glad_glAccum	thirdparty/glfw/src/deps/glad.c	/^PFNGLACCUMPROC glad_glAccum;$/;"	v
glad_glAccum	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLACCUMPROC glad_glAccum;$/;"	v
glad_glActiveTexture	thirdparty/glfw/src/deps/glad.c	/^PFNGLACTIVETEXTUREPROC glad_glActiveTexture;$/;"	v
glad_glActiveTexture	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLACTIVETEXTUREPROC glad_glActiveTexture;$/;"	v
glad_glAlphaFunc	thirdparty/glfw/src/deps/glad.c	/^PFNGLALPHAFUNCPROC glad_glAlphaFunc;$/;"	v
glad_glAlphaFunc	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLALPHAFUNCPROC glad_glAlphaFunc;$/;"	v
glad_glAreTexturesResident	thirdparty/glfw/src/deps/glad.c	/^PFNGLARETEXTURESRESIDENTPROC glad_glAreTexturesResident;$/;"	v
glad_glAreTexturesResident	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLARETEXTURESRESIDENTPROC glad_glAreTexturesResident;$/;"	v
glad_glArrayElement	thirdparty/glfw/src/deps/glad.c	/^PFNGLARRAYELEMENTPROC glad_glArrayElement;$/;"	v
glad_glArrayElement	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLARRAYELEMENTPROC glad_glArrayElement;$/;"	v
glad_glAttachShader	thirdparty/glfw/src/deps/glad.c	/^PFNGLATTACHSHADERPROC glad_glAttachShader;$/;"	v
glad_glAttachShader	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLATTACHSHADERPROC glad_glAttachShader;$/;"	v
glad_glBegin	thirdparty/glfw/src/deps/glad.c	/^PFNGLBEGINPROC glad_glBegin;$/;"	v
glad_glBegin	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBEGINPROC glad_glBegin;$/;"	v
glad_glBeginConditionalRender	thirdparty/glfw/src/deps/glad.c	/^PFNGLBEGINCONDITIONALRENDERPROC glad_glBeginConditionalRender;$/;"	v
glad_glBeginConditionalRender	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBEGINCONDITIONALRENDERPROC glad_glBeginConditionalRender;$/;"	v
glad_glBeginQuery	thirdparty/glfw/src/deps/glad.c	/^PFNGLBEGINQUERYPROC glad_glBeginQuery;$/;"	v
glad_glBeginQuery	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBEGINQUERYPROC glad_glBeginQuery;$/;"	v
glad_glBeginTransformFeedback	thirdparty/glfw/src/deps/glad.c	/^PFNGLBEGINTRANSFORMFEEDBACKPROC glad_glBeginTransformFeedback;$/;"	v
glad_glBeginTransformFeedback	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBEGINTRANSFORMFEEDBACKPROC glad_glBeginTransformFeedback;$/;"	v
glad_glBindAttribLocation	thirdparty/glfw/src/deps/glad.c	/^PFNGLBINDATTRIBLOCATIONPROC glad_glBindAttribLocation;$/;"	v
glad_glBindAttribLocation	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBINDATTRIBLOCATIONPROC glad_glBindAttribLocation;$/;"	v
glad_glBindBuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLBINDBUFFERPROC glad_glBindBuffer;$/;"	v
glad_glBindBuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBINDBUFFERPROC glad_glBindBuffer;$/;"	v
glad_glBindBufferBase	thirdparty/glfw/src/deps/glad.c	/^PFNGLBINDBUFFERBASEPROC glad_glBindBufferBase;$/;"	v
glad_glBindBufferBase	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBINDBUFFERBASEPROC glad_glBindBufferBase;$/;"	v
glad_glBindBufferRange	thirdparty/glfw/src/deps/glad.c	/^PFNGLBINDBUFFERRANGEPROC glad_glBindBufferRange;$/;"	v
glad_glBindBufferRange	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBINDBUFFERRANGEPROC glad_glBindBufferRange;$/;"	v
glad_glBindFragDataLocation	thirdparty/glfw/src/deps/glad.c	/^PFNGLBINDFRAGDATALOCATIONPROC glad_glBindFragDataLocation;$/;"	v
glad_glBindFragDataLocation	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBINDFRAGDATALOCATIONPROC glad_glBindFragDataLocation;$/;"	v
glad_glBindFramebuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLBINDFRAMEBUFFERPROC glad_glBindFramebuffer;$/;"	v
glad_glBindFramebuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBINDFRAMEBUFFERPROC glad_glBindFramebuffer;$/;"	v
glad_glBindRenderbuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLBINDRENDERBUFFERPROC glad_glBindRenderbuffer;$/;"	v
glad_glBindRenderbuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBINDRENDERBUFFERPROC glad_glBindRenderbuffer;$/;"	v
glad_glBindTexture	thirdparty/glfw/src/deps/glad.c	/^PFNGLBINDTEXTUREPROC glad_glBindTexture;$/;"	v
glad_glBindTexture	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBINDTEXTUREPROC glad_glBindTexture;$/;"	v
glad_glBindVertexArray	thirdparty/glfw/src/deps/glad.c	/^PFNGLBINDVERTEXARRAYPROC glad_glBindVertexArray;$/;"	v
glad_glBindVertexArray	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBINDVERTEXARRAYPROC glad_glBindVertexArray;$/;"	v
glad_glBitmap	thirdparty/glfw/src/deps/glad.c	/^PFNGLBITMAPPROC glad_glBitmap;$/;"	v
glad_glBitmap	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBITMAPPROC glad_glBitmap;$/;"	v
glad_glBlendColor	thirdparty/glfw/src/deps/glad.c	/^PFNGLBLENDCOLORPROC glad_glBlendColor;$/;"	v
glad_glBlendColor	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBLENDCOLORPROC glad_glBlendColor;$/;"	v
glad_glBlendEquation	thirdparty/glfw/src/deps/glad.c	/^PFNGLBLENDEQUATIONPROC glad_glBlendEquation;$/;"	v
glad_glBlendEquation	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBLENDEQUATIONPROC glad_glBlendEquation;$/;"	v
glad_glBlendEquationSeparate	thirdparty/glfw/src/deps/glad.c	/^PFNGLBLENDEQUATIONSEPARATEPROC glad_glBlendEquationSeparate;$/;"	v
glad_glBlendEquationSeparate	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBLENDEQUATIONSEPARATEPROC glad_glBlendEquationSeparate;$/;"	v
glad_glBlendFunc	thirdparty/glfw/src/deps/glad.c	/^PFNGLBLENDFUNCPROC glad_glBlendFunc;$/;"	v
glad_glBlendFunc	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBLENDFUNCPROC glad_glBlendFunc;$/;"	v
glad_glBlendFuncSeparate	thirdparty/glfw/src/deps/glad.c	/^PFNGLBLENDFUNCSEPARATEPROC glad_glBlendFuncSeparate;$/;"	v
glad_glBlendFuncSeparate	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBLENDFUNCSEPARATEPROC glad_glBlendFuncSeparate;$/;"	v
glad_glBlitFramebuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLBLITFRAMEBUFFERPROC glad_glBlitFramebuffer;$/;"	v
glad_glBlitFramebuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBLITFRAMEBUFFERPROC glad_glBlitFramebuffer;$/;"	v
glad_glBufferData	thirdparty/glfw/src/deps/glad.c	/^PFNGLBUFFERDATAPROC glad_glBufferData;$/;"	v
glad_glBufferData	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBUFFERDATAPROC glad_glBufferData;$/;"	v
glad_glBufferSubData	thirdparty/glfw/src/deps/glad.c	/^PFNGLBUFFERSUBDATAPROC glad_glBufferSubData;$/;"	v
glad_glBufferSubData	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLBUFFERSUBDATAPROC glad_glBufferSubData;$/;"	v
glad_glCallList	thirdparty/glfw/src/deps/glad.c	/^PFNGLCALLLISTPROC glad_glCallList;$/;"	v
glad_glCallList	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCALLLISTPROC glad_glCallList;$/;"	v
glad_glCallLists	thirdparty/glfw/src/deps/glad.c	/^PFNGLCALLLISTSPROC glad_glCallLists;$/;"	v
glad_glCallLists	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCALLLISTSPROC glad_glCallLists;$/;"	v
glad_glCheckFramebufferStatus	thirdparty/glfw/src/deps/glad.c	/^PFNGLCHECKFRAMEBUFFERSTATUSPROC glad_glCheckFramebufferStatus;$/;"	v
glad_glCheckFramebufferStatus	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCHECKFRAMEBUFFERSTATUSPROC glad_glCheckFramebufferStatus;$/;"	v
glad_glClampColor	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLAMPCOLORPROC glad_glClampColor;$/;"	v
glad_glClampColor	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLAMPCOLORPROC glad_glClampColor;$/;"	v
glad_glClear	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLEARPROC glad_glClear;$/;"	v
glad_glClear	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLEARPROC glad_glClear;$/;"	v
glad_glClearAccum	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLEARACCUMPROC glad_glClearAccum;$/;"	v
glad_glClearAccum	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLEARACCUMPROC glad_glClearAccum;$/;"	v
glad_glClearBufferfi	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLEARBUFFERFIPROC glad_glClearBufferfi;$/;"	v
glad_glClearBufferfi	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLEARBUFFERFIPROC glad_glClearBufferfi;$/;"	v
glad_glClearBufferfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLEARBUFFERFVPROC glad_glClearBufferfv;$/;"	v
glad_glClearBufferfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLEARBUFFERFVPROC glad_glClearBufferfv;$/;"	v
glad_glClearBufferiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLEARBUFFERIVPROC glad_glClearBufferiv;$/;"	v
glad_glClearBufferiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLEARBUFFERIVPROC glad_glClearBufferiv;$/;"	v
glad_glClearBufferuiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLEARBUFFERUIVPROC glad_glClearBufferuiv;$/;"	v
glad_glClearBufferuiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLEARBUFFERUIVPROC glad_glClearBufferuiv;$/;"	v
glad_glClearColor	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLEARCOLORPROC glad_glClearColor;$/;"	v
glad_glClearColor	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLEARCOLORPROC glad_glClearColor;$/;"	v
glad_glClearDepth	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLEARDEPTHPROC glad_glClearDepth;$/;"	v
glad_glClearDepth	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLEARDEPTHPROC glad_glClearDepth;$/;"	v
glad_glClearIndex	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLEARINDEXPROC glad_glClearIndex;$/;"	v
glad_glClearIndex	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLEARINDEXPROC glad_glClearIndex;$/;"	v
glad_glClearStencil	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLEARSTENCILPROC glad_glClearStencil;$/;"	v
glad_glClearStencil	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLEARSTENCILPROC glad_glClearStencil;$/;"	v
glad_glClientActiveTexture	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLIENTACTIVETEXTUREPROC glad_glClientActiveTexture;$/;"	v
glad_glClientActiveTexture	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLIENTACTIVETEXTUREPROC glad_glClientActiveTexture;$/;"	v
glad_glClientWaitSync	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLIENTWAITSYNCPROC glad_glClientWaitSync;$/;"	v
glad_glClientWaitSync	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLIENTWAITSYNCPROC glad_glClientWaitSync;$/;"	v
glad_glClipPlane	thirdparty/glfw/src/deps/glad.c	/^PFNGLCLIPPLANEPROC glad_glClipPlane;$/;"	v
glad_glClipPlane	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCLIPPLANEPROC glad_glClipPlane;$/;"	v
glad_glColor3b	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3BPROC glad_glColor3b;$/;"	v
glad_glColor3b	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3BPROC glad_glColor3b;$/;"	v
glad_glColor3bv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3BVPROC glad_glColor3bv;$/;"	v
glad_glColor3bv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3BVPROC glad_glColor3bv;$/;"	v
glad_glColor3d	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3DPROC glad_glColor3d;$/;"	v
glad_glColor3d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3DPROC glad_glColor3d;$/;"	v
glad_glColor3dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3DVPROC glad_glColor3dv;$/;"	v
glad_glColor3dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3DVPROC glad_glColor3dv;$/;"	v
glad_glColor3f	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3FPROC glad_glColor3f;$/;"	v
glad_glColor3f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3FPROC glad_glColor3f;$/;"	v
glad_glColor3fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3FVPROC glad_glColor3fv;$/;"	v
glad_glColor3fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3FVPROC glad_glColor3fv;$/;"	v
glad_glColor3i	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3IPROC glad_glColor3i;$/;"	v
glad_glColor3i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3IPROC glad_glColor3i;$/;"	v
glad_glColor3iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3IVPROC glad_glColor3iv;$/;"	v
glad_glColor3iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3IVPROC glad_glColor3iv;$/;"	v
glad_glColor3s	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3SPROC glad_glColor3s;$/;"	v
glad_glColor3s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3SPROC glad_glColor3s;$/;"	v
glad_glColor3sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3SVPROC glad_glColor3sv;$/;"	v
glad_glColor3sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3SVPROC glad_glColor3sv;$/;"	v
glad_glColor3ub	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3UBPROC glad_glColor3ub;$/;"	v
glad_glColor3ub	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3UBPROC glad_glColor3ub;$/;"	v
glad_glColor3ubv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3UBVPROC glad_glColor3ubv;$/;"	v
glad_glColor3ubv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3UBVPROC glad_glColor3ubv;$/;"	v
glad_glColor3ui	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3UIPROC glad_glColor3ui;$/;"	v
glad_glColor3ui	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3UIPROC glad_glColor3ui;$/;"	v
glad_glColor3uiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3UIVPROC glad_glColor3uiv;$/;"	v
glad_glColor3uiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3UIVPROC glad_glColor3uiv;$/;"	v
glad_glColor3us	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3USPROC glad_glColor3us;$/;"	v
glad_glColor3us	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3USPROC glad_glColor3us;$/;"	v
glad_glColor3usv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR3USVPROC glad_glColor3usv;$/;"	v
glad_glColor3usv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR3USVPROC glad_glColor3usv;$/;"	v
glad_glColor4b	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4BPROC glad_glColor4b;$/;"	v
glad_glColor4b	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4BPROC glad_glColor4b;$/;"	v
glad_glColor4bv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4BVPROC glad_glColor4bv;$/;"	v
glad_glColor4bv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4BVPROC glad_glColor4bv;$/;"	v
glad_glColor4d	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4DPROC glad_glColor4d;$/;"	v
glad_glColor4d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4DPROC glad_glColor4d;$/;"	v
glad_glColor4dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4DVPROC glad_glColor4dv;$/;"	v
glad_glColor4dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4DVPROC glad_glColor4dv;$/;"	v
glad_glColor4f	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4FPROC glad_glColor4f;$/;"	v
glad_glColor4f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4FPROC glad_glColor4f;$/;"	v
glad_glColor4fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4FVPROC glad_glColor4fv;$/;"	v
glad_glColor4fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4FVPROC glad_glColor4fv;$/;"	v
glad_glColor4i	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4IPROC glad_glColor4i;$/;"	v
glad_glColor4i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4IPROC glad_glColor4i;$/;"	v
glad_glColor4iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4IVPROC glad_glColor4iv;$/;"	v
glad_glColor4iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4IVPROC glad_glColor4iv;$/;"	v
glad_glColor4s	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4SPROC glad_glColor4s;$/;"	v
glad_glColor4s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4SPROC glad_glColor4s;$/;"	v
glad_glColor4sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4SVPROC glad_glColor4sv;$/;"	v
glad_glColor4sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4SVPROC glad_glColor4sv;$/;"	v
glad_glColor4ub	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4UBPROC glad_glColor4ub;$/;"	v
glad_glColor4ub	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4UBPROC glad_glColor4ub;$/;"	v
glad_glColor4ubv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4UBVPROC glad_glColor4ubv;$/;"	v
glad_glColor4ubv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4UBVPROC glad_glColor4ubv;$/;"	v
glad_glColor4ui	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4UIPROC glad_glColor4ui;$/;"	v
glad_glColor4ui	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4UIPROC glad_glColor4ui;$/;"	v
glad_glColor4uiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4UIVPROC glad_glColor4uiv;$/;"	v
glad_glColor4uiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4UIVPROC glad_glColor4uiv;$/;"	v
glad_glColor4us	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4USPROC glad_glColor4us;$/;"	v
glad_glColor4us	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4USPROC glad_glColor4us;$/;"	v
glad_glColor4usv	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLOR4USVPROC glad_glColor4usv;$/;"	v
glad_glColor4usv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLOR4USVPROC glad_glColor4usv;$/;"	v
glad_glColorMask	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLORMASKPROC glad_glColorMask;$/;"	v
glad_glColorMask	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLORMASKPROC glad_glColorMask;$/;"	v
glad_glColorMaski	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLORMASKIPROC glad_glColorMaski;$/;"	v
glad_glColorMaski	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLORMASKIPROC glad_glColorMaski;$/;"	v
glad_glColorMaterial	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLORMATERIALPROC glad_glColorMaterial;$/;"	v
glad_glColorMaterial	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLORMATERIALPROC glad_glColorMaterial;$/;"	v
glad_glColorPointer	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOLORPOINTERPROC glad_glColorPointer;$/;"	v
glad_glColorPointer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOLORPOINTERPROC glad_glColorPointer;$/;"	v
glad_glCompileShader	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOMPILESHADERPROC glad_glCompileShader;$/;"	v
glad_glCompileShader	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOMPILESHADERPROC glad_glCompileShader;$/;"	v
glad_glCompressedTexImage1D	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOMPRESSEDTEXIMAGE1DPROC glad_glCompressedTexImage1D;$/;"	v
glad_glCompressedTexImage1D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOMPRESSEDTEXIMAGE1DPROC glad_glCompressedTexImage1D;$/;"	v
glad_glCompressedTexImage2D	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOMPRESSEDTEXIMAGE2DPROC glad_glCompressedTexImage2D;$/;"	v
glad_glCompressedTexImage2D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOMPRESSEDTEXIMAGE2DPROC glad_glCompressedTexImage2D;$/;"	v
glad_glCompressedTexImage3D	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOMPRESSEDTEXIMAGE3DPROC glad_glCompressedTexImage3D;$/;"	v
glad_glCompressedTexImage3D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOMPRESSEDTEXIMAGE3DPROC glad_glCompressedTexImage3D;$/;"	v
glad_glCompressedTexSubImage1D	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glad_glCompressedTexSubImage1D;$/;"	v
glad_glCompressedTexSubImage1D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glad_glCompressedTexSubImage1D;$/;"	v
glad_glCompressedTexSubImage2D	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glad_glCompressedTexSubImage2D;$/;"	v
glad_glCompressedTexSubImage2D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glad_glCompressedTexSubImage2D;$/;"	v
glad_glCompressedTexSubImage3D	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glad_glCompressedTexSubImage3D;$/;"	v
glad_glCompressedTexSubImage3D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glad_glCompressedTexSubImage3D;$/;"	v
glad_glCopyBufferSubData	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOPYBUFFERSUBDATAPROC glad_glCopyBufferSubData;$/;"	v
glad_glCopyBufferSubData	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOPYBUFFERSUBDATAPROC glad_glCopyBufferSubData;$/;"	v
glad_glCopyPixels	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOPYPIXELSPROC glad_glCopyPixels;$/;"	v
glad_glCopyPixels	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOPYPIXELSPROC glad_glCopyPixels;$/;"	v
glad_glCopyTexImage1D	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOPYTEXIMAGE1DPROC glad_glCopyTexImage1D;$/;"	v
glad_glCopyTexImage1D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOPYTEXIMAGE1DPROC glad_glCopyTexImage1D;$/;"	v
glad_glCopyTexImage2D	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOPYTEXIMAGE2DPROC glad_glCopyTexImage2D;$/;"	v
glad_glCopyTexImage2D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOPYTEXIMAGE2DPROC glad_glCopyTexImage2D;$/;"	v
glad_glCopyTexSubImage1D	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOPYTEXSUBIMAGE1DPROC glad_glCopyTexSubImage1D;$/;"	v
glad_glCopyTexSubImage1D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOPYTEXSUBIMAGE1DPROC glad_glCopyTexSubImage1D;$/;"	v
glad_glCopyTexSubImage2D	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOPYTEXSUBIMAGE2DPROC glad_glCopyTexSubImage2D;$/;"	v
glad_glCopyTexSubImage2D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOPYTEXSUBIMAGE2DPROC glad_glCopyTexSubImage2D;$/;"	v
glad_glCopyTexSubImage3D	thirdparty/glfw/src/deps/glad.c	/^PFNGLCOPYTEXSUBIMAGE3DPROC glad_glCopyTexSubImage3D;$/;"	v
glad_glCopyTexSubImage3D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCOPYTEXSUBIMAGE3DPROC glad_glCopyTexSubImage3D;$/;"	v
glad_glCreateProgram	thirdparty/glfw/src/deps/glad.c	/^PFNGLCREATEPROGRAMPROC glad_glCreateProgram;$/;"	v
glad_glCreateProgram	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCREATEPROGRAMPROC glad_glCreateProgram;$/;"	v
glad_glCreateShader	thirdparty/glfw/src/deps/glad.c	/^PFNGLCREATESHADERPROC glad_glCreateShader;$/;"	v
glad_glCreateShader	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCREATESHADERPROC glad_glCreateShader;$/;"	v
glad_glCullFace	thirdparty/glfw/src/deps/glad.c	/^PFNGLCULLFACEPROC glad_glCullFace;$/;"	v
glad_glCullFace	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLCULLFACEPROC glad_glCullFace;$/;"	v
glad_glDebugMessageCallback	thirdparty/glfw/src/deps/glad.c	/^PFNGLDEBUGMESSAGECALLBACKPROC glad_glDebugMessageCallback;$/;"	v
glad_glDebugMessageCallback	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDEBUGMESSAGECALLBACKPROC glad_glDebugMessageCallback;$/;"	v
glad_glDebugMessageCallbackKHR	thirdparty/glfw/src/deps/glad.c	/^PFNGLDEBUGMESSAGECALLBACKKHRPROC glad_glDebugMessageCallbackKHR;$/;"	v
glad_glDebugMessageCallbackKHR	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDEBUGMESSAGECALLBACKKHRPROC glad_glDebugMessageCallbackKHR;$/;"	v
glad_glDebugMessageControl	thirdparty/glfw/src/deps/glad.c	/^PFNGLDEBUGMESSAGECONTROLPROC glad_glDebugMessageControl;$/;"	v
glad_glDebugMessageControl	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDEBUGMESSAGECONTROLPROC glad_glDebugMessageControl;$/;"	v
glad_glDebugMessageControlKHR	thirdparty/glfw/src/deps/glad.c	/^PFNGLDEBUGMESSAGECONTROLKHRPROC glad_glDebugMessageControlKHR;$/;"	v
glad_glDebugMessageControlKHR	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDEBUGMESSAGECONTROLKHRPROC glad_glDebugMessageControlKHR;$/;"	v
glad_glDebugMessageInsert	thirdparty/glfw/src/deps/glad.c	/^PFNGLDEBUGMESSAGEINSERTPROC glad_glDebugMessageInsert;$/;"	v
glad_glDebugMessageInsert	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDEBUGMESSAGEINSERTPROC glad_glDebugMessageInsert;$/;"	v
glad_glDebugMessageInsertKHR	thirdparty/glfw/src/deps/glad.c	/^PFNGLDEBUGMESSAGEINSERTKHRPROC glad_glDebugMessageInsertKHR;$/;"	v
glad_glDebugMessageInsertKHR	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDEBUGMESSAGEINSERTKHRPROC glad_glDebugMessageInsertKHR;$/;"	v
glad_glDeleteBuffers	thirdparty/glfw/src/deps/glad.c	/^PFNGLDELETEBUFFERSPROC glad_glDeleteBuffers;$/;"	v
glad_glDeleteBuffers	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDELETEBUFFERSPROC glad_glDeleteBuffers;$/;"	v
glad_glDeleteFramebuffers	thirdparty/glfw/src/deps/glad.c	/^PFNGLDELETEFRAMEBUFFERSPROC glad_glDeleteFramebuffers;$/;"	v
glad_glDeleteFramebuffers	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDELETEFRAMEBUFFERSPROC glad_glDeleteFramebuffers;$/;"	v
glad_glDeleteLists	thirdparty/glfw/src/deps/glad.c	/^PFNGLDELETELISTSPROC glad_glDeleteLists;$/;"	v
glad_glDeleteLists	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDELETELISTSPROC glad_glDeleteLists;$/;"	v
glad_glDeleteProgram	thirdparty/glfw/src/deps/glad.c	/^PFNGLDELETEPROGRAMPROC glad_glDeleteProgram;$/;"	v
glad_glDeleteProgram	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDELETEPROGRAMPROC glad_glDeleteProgram;$/;"	v
glad_glDeleteQueries	thirdparty/glfw/src/deps/glad.c	/^PFNGLDELETEQUERIESPROC glad_glDeleteQueries;$/;"	v
glad_glDeleteQueries	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDELETEQUERIESPROC glad_glDeleteQueries;$/;"	v
glad_glDeleteRenderbuffers	thirdparty/glfw/src/deps/glad.c	/^PFNGLDELETERENDERBUFFERSPROC glad_glDeleteRenderbuffers;$/;"	v
glad_glDeleteRenderbuffers	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDELETERENDERBUFFERSPROC glad_glDeleteRenderbuffers;$/;"	v
glad_glDeleteShader	thirdparty/glfw/src/deps/glad.c	/^PFNGLDELETESHADERPROC glad_glDeleteShader;$/;"	v
glad_glDeleteShader	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDELETESHADERPROC glad_glDeleteShader;$/;"	v
glad_glDeleteSync	thirdparty/glfw/src/deps/glad.c	/^PFNGLDELETESYNCPROC glad_glDeleteSync;$/;"	v
glad_glDeleteSync	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDELETESYNCPROC glad_glDeleteSync;$/;"	v
glad_glDeleteTextures	thirdparty/glfw/src/deps/glad.c	/^PFNGLDELETETEXTURESPROC glad_glDeleteTextures;$/;"	v
glad_glDeleteTextures	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDELETETEXTURESPROC glad_glDeleteTextures;$/;"	v
glad_glDeleteVertexArrays	thirdparty/glfw/src/deps/glad.c	/^PFNGLDELETEVERTEXARRAYSPROC glad_glDeleteVertexArrays;$/;"	v
glad_glDeleteVertexArrays	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDELETEVERTEXARRAYSPROC glad_glDeleteVertexArrays;$/;"	v
glad_glDepthFunc	thirdparty/glfw/src/deps/glad.c	/^PFNGLDEPTHFUNCPROC glad_glDepthFunc;$/;"	v
glad_glDepthFunc	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDEPTHFUNCPROC glad_glDepthFunc;$/;"	v
glad_glDepthMask	thirdparty/glfw/src/deps/glad.c	/^PFNGLDEPTHMASKPROC glad_glDepthMask;$/;"	v
glad_glDepthMask	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDEPTHMASKPROC glad_glDepthMask;$/;"	v
glad_glDepthRange	thirdparty/glfw/src/deps/glad.c	/^PFNGLDEPTHRANGEPROC glad_glDepthRange;$/;"	v
glad_glDepthRange	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDEPTHRANGEPROC glad_glDepthRange;$/;"	v
glad_glDetachShader	thirdparty/glfw/src/deps/glad.c	/^PFNGLDETACHSHADERPROC glad_glDetachShader;$/;"	v
glad_glDetachShader	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDETACHSHADERPROC glad_glDetachShader;$/;"	v
glad_glDisable	thirdparty/glfw/src/deps/glad.c	/^PFNGLDISABLEPROC glad_glDisable;$/;"	v
glad_glDisable	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDISABLEPROC glad_glDisable;$/;"	v
glad_glDisableClientState	thirdparty/glfw/src/deps/glad.c	/^PFNGLDISABLECLIENTSTATEPROC glad_glDisableClientState;$/;"	v
glad_glDisableClientState	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDISABLECLIENTSTATEPROC glad_glDisableClientState;$/;"	v
glad_glDisableVertexAttribArray	thirdparty/glfw/src/deps/glad.c	/^PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_glDisableVertexAttribArray;$/;"	v
glad_glDisableVertexAttribArray	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_glDisableVertexAttribArray;$/;"	v
glad_glDisablei	thirdparty/glfw/src/deps/glad.c	/^PFNGLDISABLEIPROC glad_glDisablei;$/;"	v
glad_glDisablei	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDISABLEIPROC glad_glDisablei;$/;"	v
glad_glDrawArrays	thirdparty/glfw/src/deps/glad.c	/^PFNGLDRAWARRAYSPROC glad_glDrawArrays;$/;"	v
glad_glDrawArrays	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDRAWARRAYSPROC glad_glDrawArrays;$/;"	v
glad_glDrawArraysInstanced	thirdparty/glfw/src/deps/glad.c	/^PFNGLDRAWARRAYSINSTANCEDPROC glad_glDrawArraysInstanced;$/;"	v
glad_glDrawArraysInstanced	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDRAWARRAYSINSTANCEDPROC glad_glDrawArraysInstanced;$/;"	v
glad_glDrawBuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLDRAWBUFFERPROC glad_glDrawBuffer;$/;"	v
glad_glDrawBuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDRAWBUFFERPROC glad_glDrawBuffer;$/;"	v
glad_glDrawBuffers	thirdparty/glfw/src/deps/glad.c	/^PFNGLDRAWBUFFERSPROC glad_glDrawBuffers;$/;"	v
glad_glDrawBuffers	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDRAWBUFFERSPROC glad_glDrawBuffers;$/;"	v
glad_glDrawElements	thirdparty/glfw/src/deps/glad.c	/^PFNGLDRAWELEMENTSPROC glad_glDrawElements;$/;"	v
glad_glDrawElements	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDRAWELEMENTSPROC glad_glDrawElements;$/;"	v
glad_glDrawElementsBaseVertex	thirdparty/glfw/src/deps/glad.c	/^PFNGLDRAWELEMENTSBASEVERTEXPROC glad_glDrawElementsBaseVertex;$/;"	v
glad_glDrawElementsBaseVertex	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDRAWELEMENTSBASEVERTEXPROC glad_glDrawElementsBaseVertex;$/;"	v
glad_glDrawElementsInstanced	thirdparty/glfw/src/deps/glad.c	/^PFNGLDRAWELEMENTSINSTANCEDPROC glad_glDrawElementsInstanced;$/;"	v
glad_glDrawElementsInstanced	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDRAWELEMENTSINSTANCEDPROC glad_glDrawElementsInstanced;$/;"	v
glad_glDrawElementsInstancedBaseVertex	thirdparty/glfw/src/deps/glad.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_glDrawElementsInstancedBaseVertex;$/;"	v
glad_glDrawElementsInstancedBaseVertex	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_glDrawElementsInstancedBaseVertex;$/;"	v
glad_glDrawPixels	thirdparty/glfw/src/deps/glad.c	/^PFNGLDRAWPIXELSPROC glad_glDrawPixels;$/;"	v
glad_glDrawPixels	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDRAWPIXELSPROC glad_glDrawPixels;$/;"	v
glad_glDrawRangeElements	thirdparty/glfw/src/deps/glad.c	/^PFNGLDRAWRANGEELEMENTSPROC glad_glDrawRangeElements;$/;"	v
glad_glDrawRangeElements	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDRAWRANGEELEMENTSPROC glad_glDrawRangeElements;$/;"	v
glad_glDrawRangeElementsBaseVertex	thirdparty/glfw/src/deps/glad.c	/^PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_glDrawRangeElementsBaseVertex;$/;"	v
glad_glDrawRangeElementsBaseVertex	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_glDrawRangeElementsBaseVertex;$/;"	v
glad_glEdgeFlag	thirdparty/glfw/src/deps/glad.c	/^PFNGLEDGEFLAGPROC glad_glEdgeFlag;$/;"	v
glad_glEdgeFlag	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEDGEFLAGPROC glad_glEdgeFlag;$/;"	v
glad_glEdgeFlagPointer	thirdparty/glfw/src/deps/glad.c	/^PFNGLEDGEFLAGPOINTERPROC glad_glEdgeFlagPointer;$/;"	v
glad_glEdgeFlagPointer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEDGEFLAGPOINTERPROC glad_glEdgeFlagPointer;$/;"	v
glad_glEdgeFlagv	thirdparty/glfw/src/deps/glad.c	/^PFNGLEDGEFLAGVPROC glad_glEdgeFlagv;$/;"	v
glad_glEdgeFlagv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEDGEFLAGVPROC glad_glEdgeFlagv;$/;"	v
glad_glEnable	thirdparty/glfw/src/deps/glad.c	/^PFNGLENABLEPROC glad_glEnable;$/;"	v
glad_glEnable	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLENABLEPROC glad_glEnable;$/;"	v
glad_glEnableClientState	thirdparty/glfw/src/deps/glad.c	/^PFNGLENABLECLIENTSTATEPROC glad_glEnableClientState;$/;"	v
glad_glEnableClientState	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLENABLECLIENTSTATEPROC glad_glEnableClientState;$/;"	v
glad_glEnableVertexAttribArray	thirdparty/glfw/src/deps/glad.c	/^PFNGLENABLEVERTEXATTRIBARRAYPROC glad_glEnableVertexAttribArray;$/;"	v
glad_glEnableVertexAttribArray	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLENABLEVERTEXATTRIBARRAYPROC glad_glEnableVertexAttribArray;$/;"	v
glad_glEnablei	thirdparty/glfw/src/deps/glad.c	/^PFNGLENABLEIPROC glad_glEnablei;$/;"	v
glad_glEnablei	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLENABLEIPROC glad_glEnablei;$/;"	v
glad_glEnd	thirdparty/glfw/src/deps/glad.c	/^PFNGLENDPROC glad_glEnd;$/;"	v
glad_glEnd	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLENDPROC glad_glEnd;$/;"	v
glad_glEndConditionalRender	thirdparty/glfw/src/deps/glad.c	/^PFNGLENDCONDITIONALRENDERPROC glad_glEndConditionalRender;$/;"	v
glad_glEndConditionalRender	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLENDCONDITIONALRENDERPROC glad_glEndConditionalRender;$/;"	v
glad_glEndList	thirdparty/glfw/src/deps/glad.c	/^PFNGLENDLISTPROC glad_glEndList;$/;"	v
glad_glEndList	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLENDLISTPROC glad_glEndList;$/;"	v
glad_glEndQuery	thirdparty/glfw/src/deps/glad.c	/^PFNGLENDQUERYPROC glad_glEndQuery;$/;"	v
glad_glEndQuery	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLENDQUERYPROC glad_glEndQuery;$/;"	v
glad_glEndTransformFeedback	thirdparty/glfw/src/deps/glad.c	/^PFNGLENDTRANSFORMFEEDBACKPROC glad_glEndTransformFeedback;$/;"	v
glad_glEndTransformFeedback	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLENDTRANSFORMFEEDBACKPROC glad_glEndTransformFeedback;$/;"	v
glad_glEvalCoord1d	thirdparty/glfw/src/deps/glad.c	/^PFNGLEVALCOORD1DPROC glad_glEvalCoord1d;$/;"	v
glad_glEvalCoord1d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEVALCOORD1DPROC glad_glEvalCoord1d;$/;"	v
glad_glEvalCoord1dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLEVALCOORD1DVPROC glad_glEvalCoord1dv;$/;"	v
glad_glEvalCoord1dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEVALCOORD1DVPROC glad_glEvalCoord1dv;$/;"	v
glad_glEvalCoord1f	thirdparty/glfw/src/deps/glad.c	/^PFNGLEVALCOORD1FPROC glad_glEvalCoord1f;$/;"	v
glad_glEvalCoord1f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEVALCOORD1FPROC glad_glEvalCoord1f;$/;"	v
glad_glEvalCoord1fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLEVALCOORD1FVPROC glad_glEvalCoord1fv;$/;"	v
glad_glEvalCoord1fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEVALCOORD1FVPROC glad_glEvalCoord1fv;$/;"	v
glad_glEvalCoord2d	thirdparty/glfw/src/deps/glad.c	/^PFNGLEVALCOORD2DPROC glad_glEvalCoord2d;$/;"	v
glad_glEvalCoord2d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEVALCOORD2DPROC glad_glEvalCoord2d;$/;"	v
glad_glEvalCoord2dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLEVALCOORD2DVPROC glad_glEvalCoord2dv;$/;"	v
glad_glEvalCoord2dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEVALCOORD2DVPROC glad_glEvalCoord2dv;$/;"	v
glad_glEvalCoord2f	thirdparty/glfw/src/deps/glad.c	/^PFNGLEVALCOORD2FPROC glad_glEvalCoord2f;$/;"	v
glad_glEvalCoord2f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEVALCOORD2FPROC glad_glEvalCoord2f;$/;"	v
glad_glEvalCoord2fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLEVALCOORD2FVPROC glad_glEvalCoord2fv;$/;"	v
glad_glEvalCoord2fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEVALCOORD2FVPROC glad_glEvalCoord2fv;$/;"	v
glad_glEvalMesh1	thirdparty/glfw/src/deps/glad.c	/^PFNGLEVALMESH1PROC glad_glEvalMesh1;$/;"	v
glad_glEvalMesh1	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEVALMESH1PROC glad_glEvalMesh1;$/;"	v
glad_glEvalMesh2	thirdparty/glfw/src/deps/glad.c	/^PFNGLEVALMESH2PROC glad_glEvalMesh2;$/;"	v
glad_glEvalMesh2	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEVALMESH2PROC glad_glEvalMesh2;$/;"	v
glad_glEvalPoint1	thirdparty/glfw/src/deps/glad.c	/^PFNGLEVALPOINT1PROC glad_glEvalPoint1;$/;"	v
glad_glEvalPoint1	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEVALPOINT1PROC glad_glEvalPoint1;$/;"	v
glad_glEvalPoint2	thirdparty/glfw/src/deps/glad.c	/^PFNGLEVALPOINT2PROC glad_glEvalPoint2;$/;"	v
glad_glEvalPoint2	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLEVALPOINT2PROC glad_glEvalPoint2;$/;"	v
glad_glFeedbackBuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLFEEDBACKBUFFERPROC glad_glFeedbackBuffer;$/;"	v
glad_glFeedbackBuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFEEDBACKBUFFERPROC glad_glFeedbackBuffer;$/;"	v
glad_glFenceSync	thirdparty/glfw/src/deps/glad.c	/^PFNGLFENCESYNCPROC glad_glFenceSync;$/;"	v
glad_glFenceSync	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFENCESYNCPROC glad_glFenceSync;$/;"	v
glad_glFinish	thirdparty/glfw/src/deps/glad.c	/^PFNGLFINISHPROC glad_glFinish;$/;"	v
glad_glFinish	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFINISHPROC glad_glFinish;$/;"	v
glad_glFlush	thirdparty/glfw/src/deps/glad.c	/^PFNGLFLUSHPROC glad_glFlush;$/;"	v
glad_glFlush	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFLUSHPROC glad_glFlush;$/;"	v
glad_glFlushMappedBufferRange	thirdparty/glfw/src/deps/glad.c	/^PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_glFlushMappedBufferRange;$/;"	v
glad_glFlushMappedBufferRange	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_glFlushMappedBufferRange;$/;"	v
glad_glFogCoordPointer	thirdparty/glfw/src/deps/glad.c	/^PFNGLFOGCOORDPOINTERPROC glad_glFogCoordPointer;$/;"	v
glad_glFogCoordPointer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFOGCOORDPOINTERPROC glad_glFogCoordPointer;$/;"	v
glad_glFogCoordd	thirdparty/glfw/src/deps/glad.c	/^PFNGLFOGCOORDDPROC glad_glFogCoordd;$/;"	v
glad_glFogCoordd	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFOGCOORDDPROC glad_glFogCoordd;$/;"	v
glad_glFogCoorddv	thirdparty/glfw/src/deps/glad.c	/^PFNGLFOGCOORDDVPROC glad_glFogCoorddv;$/;"	v
glad_glFogCoorddv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFOGCOORDDVPROC glad_glFogCoorddv;$/;"	v
glad_glFogCoordf	thirdparty/glfw/src/deps/glad.c	/^PFNGLFOGCOORDFPROC glad_glFogCoordf;$/;"	v
glad_glFogCoordf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFOGCOORDFPROC glad_glFogCoordf;$/;"	v
glad_glFogCoordfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLFOGCOORDFVPROC glad_glFogCoordfv;$/;"	v
glad_glFogCoordfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFOGCOORDFVPROC glad_glFogCoordfv;$/;"	v
glad_glFogf	thirdparty/glfw/src/deps/glad.c	/^PFNGLFOGFPROC glad_glFogf;$/;"	v
glad_glFogf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFOGFPROC glad_glFogf;$/;"	v
glad_glFogfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLFOGFVPROC glad_glFogfv;$/;"	v
glad_glFogfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFOGFVPROC glad_glFogfv;$/;"	v
glad_glFogi	thirdparty/glfw/src/deps/glad.c	/^PFNGLFOGIPROC glad_glFogi;$/;"	v
glad_glFogi	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFOGIPROC glad_glFogi;$/;"	v
glad_glFogiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLFOGIVPROC glad_glFogiv;$/;"	v
glad_glFogiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFOGIVPROC glad_glFogiv;$/;"	v
glad_glFramebufferRenderbuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_glFramebufferRenderbuffer;$/;"	v
glad_glFramebufferRenderbuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_glFramebufferRenderbuffer;$/;"	v
glad_glFramebufferTexture	thirdparty/glfw/src/deps/glad.c	/^PFNGLFRAMEBUFFERTEXTUREPROC glad_glFramebufferTexture;$/;"	v
glad_glFramebufferTexture	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFRAMEBUFFERTEXTUREPROC glad_glFramebufferTexture;$/;"	v
glad_glFramebufferTexture1D	thirdparty/glfw/src/deps/glad.c	/^PFNGLFRAMEBUFFERTEXTURE1DPROC glad_glFramebufferTexture1D;$/;"	v
glad_glFramebufferTexture1D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFRAMEBUFFERTEXTURE1DPROC glad_glFramebufferTexture1D;$/;"	v
glad_glFramebufferTexture2D	thirdparty/glfw/src/deps/glad.c	/^PFNGLFRAMEBUFFERTEXTURE2DPROC glad_glFramebufferTexture2D;$/;"	v
glad_glFramebufferTexture2D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFRAMEBUFFERTEXTURE2DPROC glad_glFramebufferTexture2D;$/;"	v
glad_glFramebufferTexture3D	thirdparty/glfw/src/deps/glad.c	/^PFNGLFRAMEBUFFERTEXTURE3DPROC glad_glFramebufferTexture3D;$/;"	v
glad_glFramebufferTexture3D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFRAMEBUFFERTEXTURE3DPROC glad_glFramebufferTexture3D;$/;"	v
glad_glFramebufferTextureLayer	thirdparty/glfw/src/deps/glad.c	/^PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_glFramebufferTextureLayer;$/;"	v
glad_glFramebufferTextureLayer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_glFramebufferTextureLayer;$/;"	v
glad_glFrontFace	thirdparty/glfw/src/deps/glad.c	/^PFNGLFRONTFACEPROC glad_glFrontFace;$/;"	v
glad_glFrontFace	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFRONTFACEPROC glad_glFrontFace;$/;"	v
glad_glFrustum	thirdparty/glfw/src/deps/glad.c	/^PFNGLFRUSTUMPROC glad_glFrustum;$/;"	v
glad_glFrustum	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLFRUSTUMPROC glad_glFrustum;$/;"	v
glad_glGenBuffers	thirdparty/glfw/src/deps/glad.c	/^PFNGLGENBUFFERSPROC glad_glGenBuffers;$/;"	v
glad_glGenBuffers	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGENBUFFERSPROC glad_glGenBuffers;$/;"	v
glad_glGenFramebuffers	thirdparty/glfw/src/deps/glad.c	/^PFNGLGENFRAMEBUFFERSPROC glad_glGenFramebuffers;$/;"	v
glad_glGenFramebuffers	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGENFRAMEBUFFERSPROC glad_glGenFramebuffers;$/;"	v
glad_glGenLists	thirdparty/glfw/src/deps/glad.c	/^PFNGLGENLISTSPROC glad_glGenLists;$/;"	v
glad_glGenLists	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGENLISTSPROC glad_glGenLists;$/;"	v
glad_glGenQueries	thirdparty/glfw/src/deps/glad.c	/^PFNGLGENQUERIESPROC glad_glGenQueries;$/;"	v
glad_glGenQueries	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGENQUERIESPROC glad_glGenQueries;$/;"	v
glad_glGenRenderbuffers	thirdparty/glfw/src/deps/glad.c	/^PFNGLGENRENDERBUFFERSPROC glad_glGenRenderbuffers;$/;"	v
glad_glGenRenderbuffers	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGENRENDERBUFFERSPROC glad_glGenRenderbuffers;$/;"	v
glad_glGenTextures	thirdparty/glfw/src/deps/glad.c	/^PFNGLGENTEXTURESPROC glad_glGenTextures;$/;"	v
glad_glGenTextures	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGENTEXTURESPROC glad_glGenTextures;$/;"	v
glad_glGenVertexArrays	thirdparty/glfw/src/deps/glad.c	/^PFNGLGENVERTEXARRAYSPROC glad_glGenVertexArrays;$/;"	v
glad_glGenVertexArrays	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGENVERTEXARRAYSPROC glad_glGenVertexArrays;$/;"	v
glad_glGenerateMipmap	thirdparty/glfw/src/deps/glad.c	/^PFNGLGENERATEMIPMAPPROC glad_glGenerateMipmap;$/;"	v
glad_glGenerateMipmap	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGENERATEMIPMAPPROC glad_glGenerateMipmap;$/;"	v
glad_glGetActiveAttrib	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETACTIVEATTRIBPROC glad_glGetActiveAttrib;$/;"	v
glad_glGetActiveAttrib	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETACTIVEATTRIBPROC glad_glGetActiveAttrib;$/;"	v
glad_glGetActiveUniform	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETACTIVEUNIFORMPROC glad_glGetActiveUniform;$/;"	v
glad_glGetActiveUniform	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETACTIVEUNIFORMPROC glad_glGetActiveUniform;$/;"	v
glad_glGetActiveUniformBlockName	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_glGetActiveUniformBlockName;$/;"	v
glad_glGetActiveUniformBlockName	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_glGetActiveUniformBlockName;$/;"	v
glad_glGetActiveUniformBlockiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_glGetActiveUniformBlockiv;$/;"	v
glad_glGetActiveUniformBlockiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_glGetActiveUniformBlockiv;$/;"	v
glad_glGetActiveUniformName	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETACTIVEUNIFORMNAMEPROC glad_glGetActiveUniformName;$/;"	v
glad_glGetActiveUniformName	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETACTIVEUNIFORMNAMEPROC glad_glGetActiveUniformName;$/;"	v
glad_glGetActiveUniformsiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETACTIVEUNIFORMSIVPROC glad_glGetActiveUniformsiv;$/;"	v
glad_glGetActiveUniformsiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETACTIVEUNIFORMSIVPROC glad_glGetActiveUniformsiv;$/;"	v
glad_glGetAttachedShaders	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETATTACHEDSHADERSPROC glad_glGetAttachedShaders;$/;"	v
glad_glGetAttachedShaders	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETATTACHEDSHADERSPROC glad_glGetAttachedShaders;$/;"	v
glad_glGetAttribLocation	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETATTRIBLOCATIONPROC glad_glGetAttribLocation;$/;"	v
glad_glGetAttribLocation	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETATTRIBLOCATIONPROC glad_glGetAttribLocation;$/;"	v
glad_glGetBooleani_v	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETBOOLEANI_VPROC glad_glGetBooleani_v;$/;"	v
glad_glGetBooleani_v	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETBOOLEANI_VPROC glad_glGetBooleani_v;$/;"	v
glad_glGetBooleanv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETBOOLEANVPROC glad_glGetBooleanv;$/;"	v
glad_glGetBooleanv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETBOOLEANVPROC glad_glGetBooleanv;$/;"	v
glad_glGetBufferParameteri64v	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETBUFFERPARAMETERI64VPROC glad_glGetBufferParameteri64v;$/;"	v
glad_glGetBufferParameteri64v	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETBUFFERPARAMETERI64VPROC glad_glGetBufferParameteri64v;$/;"	v
glad_glGetBufferParameteriv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETBUFFERPARAMETERIVPROC glad_glGetBufferParameteriv;$/;"	v
glad_glGetBufferParameteriv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETBUFFERPARAMETERIVPROC glad_glGetBufferParameteriv;$/;"	v
glad_glGetBufferPointerv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETBUFFERPOINTERVPROC glad_glGetBufferPointerv;$/;"	v
glad_glGetBufferPointerv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETBUFFERPOINTERVPROC glad_glGetBufferPointerv;$/;"	v
glad_glGetBufferSubData	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETBUFFERSUBDATAPROC glad_glGetBufferSubData;$/;"	v
glad_glGetBufferSubData	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETBUFFERSUBDATAPROC glad_glGetBufferSubData;$/;"	v
glad_glGetClipPlane	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETCLIPPLANEPROC glad_glGetClipPlane;$/;"	v
glad_glGetClipPlane	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETCLIPPLANEPROC glad_glGetClipPlane;$/;"	v
glad_glGetCompressedTexImage	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_glGetCompressedTexImage;$/;"	v
glad_glGetCompressedTexImage	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_glGetCompressedTexImage;$/;"	v
glad_glGetDebugMessageLog	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETDEBUGMESSAGELOGPROC glad_glGetDebugMessageLog;$/;"	v
glad_glGetDebugMessageLog	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETDEBUGMESSAGELOGPROC glad_glGetDebugMessageLog;$/;"	v
glad_glGetDebugMessageLogKHR	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETDEBUGMESSAGELOGKHRPROC glad_glGetDebugMessageLogKHR;$/;"	v
glad_glGetDebugMessageLogKHR	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETDEBUGMESSAGELOGKHRPROC glad_glGetDebugMessageLogKHR;$/;"	v
glad_glGetDoublev	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETDOUBLEVPROC glad_glGetDoublev;$/;"	v
glad_glGetDoublev	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETDOUBLEVPROC glad_glGetDoublev;$/;"	v
glad_glGetError	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETERRORPROC glad_glGetError;$/;"	v
glad_glGetError	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETERRORPROC glad_glGetError;$/;"	v
glad_glGetFloatv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETFLOATVPROC glad_glGetFloatv;$/;"	v
glad_glGetFloatv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETFLOATVPROC glad_glGetFloatv;$/;"	v
glad_glGetFragDataLocation	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETFRAGDATALOCATIONPROC glad_glGetFragDataLocation;$/;"	v
glad_glGetFragDataLocation	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETFRAGDATALOCATIONPROC glad_glGetFragDataLocation;$/;"	v
glad_glGetFramebufferAttachmentParameteriv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetFramebufferAttachmentParameteriv;$/;"	v
glad_glGetFramebufferAttachmentParameteriv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetFramebufferAttachmentParameteriv;$/;"	v
glad_glGetGraphicsResetStatusARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETGRAPHICSRESETSTATUSARBPROC glad_glGetGraphicsResetStatusARB;$/;"	v
glad_glGetGraphicsResetStatusARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETGRAPHICSRESETSTATUSARBPROC glad_glGetGraphicsResetStatusARB;$/;"	v
glad_glGetInteger64i_v	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETINTEGER64I_VPROC glad_glGetInteger64i_v;$/;"	v
glad_glGetInteger64i_v	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETINTEGER64I_VPROC glad_glGetInteger64i_v;$/;"	v
glad_glGetInteger64v	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETINTEGER64VPROC glad_glGetInteger64v;$/;"	v
glad_glGetInteger64v	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETINTEGER64VPROC glad_glGetInteger64v;$/;"	v
glad_glGetIntegeri_v	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETINTEGERI_VPROC glad_glGetIntegeri_v;$/;"	v
glad_glGetIntegeri_v	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETINTEGERI_VPROC glad_glGetIntegeri_v;$/;"	v
glad_glGetIntegerv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETINTEGERVPROC glad_glGetIntegerv;$/;"	v
glad_glGetIntegerv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETINTEGERVPROC glad_glGetIntegerv;$/;"	v
glad_glGetLightfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETLIGHTFVPROC glad_glGetLightfv;$/;"	v
glad_glGetLightfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETLIGHTFVPROC glad_glGetLightfv;$/;"	v
glad_glGetLightiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETLIGHTIVPROC glad_glGetLightiv;$/;"	v
glad_glGetLightiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETLIGHTIVPROC glad_glGetLightiv;$/;"	v
glad_glGetMapdv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETMAPDVPROC glad_glGetMapdv;$/;"	v
glad_glGetMapdv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETMAPDVPROC glad_glGetMapdv;$/;"	v
glad_glGetMapfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETMAPFVPROC glad_glGetMapfv;$/;"	v
glad_glGetMapfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETMAPFVPROC glad_glGetMapfv;$/;"	v
glad_glGetMapiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETMAPIVPROC glad_glGetMapiv;$/;"	v
glad_glGetMapiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETMAPIVPROC glad_glGetMapiv;$/;"	v
glad_glGetMaterialfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETMATERIALFVPROC glad_glGetMaterialfv;$/;"	v
glad_glGetMaterialfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETMATERIALFVPROC glad_glGetMaterialfv;$/;"	v
glad_glGetMaterialiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETMATERIALIVPROC glad_glGetMaterialiv;$/;"	v
glad_glGetMaterialiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETMATERIALIVPROC glad_glGetMaterialiv;$/;"	v
glad_glGetMultisamplefv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETMULTISAMPLEFVPROC glad_glGetMultisamplefv;$/;"	v
glad_glGetMultisamplefv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETMULTISAMPLEFVPROC glad_glGetMultisamplefv;$/;"	v
glad_glGetObjectLabel	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETOBJECTLABELPROC glad_glGetObjectLabel;$/;"	v
glad_glGetObjectLabel	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETOBJECTLABELPROC glad_glGetObjectLabel;$/;"	v
glad_glGetObjectLabelKHR	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETOBJECTLABELKHRPROC glad_glGetObjectLabelKHR;$/;"	v
glad_glGetObjectLabelKHR	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETOBJECTLABELKHRPROC glad_glGetObjectLabelKHR;$/;"	v
glad_glGetObjectPtrLabel	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETOBJECTPTRLABELPROC glad_glGetObjectPtrLabel;$/;"	v
glad_glGetObjectPtrLabel	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETOBJECTPTRLABELPROC glad_glGetObjectPtrLabel;$/;"	v
glad_glGetObjectPtrLabelKHR	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETOBJECTPTRLABELKHRPROC glad_glGetObjectPtrLabelKHR;$/;"	v
glad_glGetObjectPtrLabelKHR	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETOBJECTPTRLABELKHRPROC glad_glGetObjectPtrLabelKHR;$/;"	v
glad_glGetPixelMapfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETPIXELMAPFVPROC glad_glGetPixelMapfv;$/;"	v
glad_glGetPixelMapfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETPIXELMAPFVPROC glad_glGetPixelMapfv;$/;"	v
glad_glGetPixelMapuiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETPIXELMAPUIVPROC glad_glGetPixelMapuiv;$/;"	v
glad_glGetPixelMapuiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETPIXELMAPUIVPROC glad_glGetPixelMapuiv;$/;"	v
glad_glGetPixelMapusv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETPIXELMAPUSVPROC glad_glGetPixelMapusv;$/;"	v
glad_glGetPixelMapusv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETPIXELMAPUSVPROC glad_glGetPixelMapusv;$/;"	v
glad_glGetPointerv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETPOINTERVPROC glad_glGetPointerv;$/;"	v
glad_glGetPointerv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETPOINTERVPROC glad_glGetPointerv;$/;"	v
glad_glGetPointervKHR	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETPOINTERVKHRPROC glad_glGetPointervKHR;$/;"	v
glad_glGetPointervKHR	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETPOINTERVKHRPROC glad_glGetPointervKHR;$/;"	v
glad_glGetPolygonStipple	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETPOLYGONSTIPPLEPROC glad_glGetPolygonStipple;$/;"	v
glad_glGetPolygonStipple	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETPOLYGONSTIPPLEPROC glad_glGetPolygonStipple;$/;"	v
glad_glGetProgramInfoLog	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETPROGRAMINFOLOGPROC glad_glGetProgramInfoLog;$/;"	v
glad_glGetProgramInfoLog	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETPROGRAMINFOLOGPROC glad_glGetProgramInfoLog;$/;"	v
glad_glGetProgramiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETPROGRAMIVPROC glad_glGetProgramiv;$/;"	v
glad_glGetProgramiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETPROGRAMIVPROC glad_glGetProgramiv;$/;"	v
glad_glGetQueryObjectiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETQUERYOBJECTIVPROC glad_glGetQueryObjectiv;$/;"	v
glad_glGetQueryObjectiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETQUERYOBJECTIVPROC glad_glGetQueryObjectiv;$/;"	v
glad_glGetQueryObjectuiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETQUERYOBJECTUIVPROC glad_glGetQueryObjectuiv;$/;"	v
glad_glGetQueryObjectuiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETQUERYOBJECTUIVPROC glad_glGetQueryObjectuiv;$/;"	v
glad_glGetQueryiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETQUERYIVPROC glad_glGetQueryiv;$/;"	v
glad_glGetQueryiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETQUERYIVPROC glad_glGetQueryiv;$/;"	v
glad_glGetRenderbufferParameteriv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_glGetRenderbufferParameteriv;$/;"	v
glad_glGetRenderbufferParameteriv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_glGetRenderbufferParameteriv;$/;"	v
glad_glGetShaderInfoLog	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETSHADERINFOLOGPROC glad_glGetShaderInfoLog;$/;"	v
glad_glGetShaderInfoLog	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETSHADERINFOLOGPROC glad_glGetShaderInfoLog;$/;"	v
glad_glGetShaderSource	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETSHADERSOURCEPROC glad_glGetShaderSource;$/;"	v
glad_glGetShaderSource	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETSHADERSOURCEPROC glad_glGetShaderSource;$/;"	v
glad_glGetShaderiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETSHADERIVPROC glad_glGetShaderiv;$/;"	v
glad_glGetShaderiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETSHADERIVPROC glad_glGetShaderiv;$/;"	v
glad_glGetString	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETSTRINGPROC glad_glGetString;$/;"	v
glad_glGetString	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETSTRINGPROC glad_glGetString;$/;"	v
glad_glGetStringi	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETSTRINGIPROC glad_glGetStringi;$/;"	v
glad_glGetStringi	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETSTRINGIPROC glad_glGetStringi;$/;"	v
glad_glGetSynciv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETSYNCIVPROC glad_glGetSynciv;$/;"	v
glad_glGetSynciv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETSYNCIVPROC glad_glGetSynciv;$/;"	v
glad_glGetTexEnvfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETTEXENVFVPROC glad_glGetTexEnvfv;$/;"	v
glad_glGetTexEnvfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETTEXENVFVPROC glad_glGetTexEnvfv;$/;"	v
glad_glGetTexEnviv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETTEXENVIVPROC glad_glGetTexEnviv;$/;"	v
glad_glGetTexEnviv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETTEXENVIVPROC glad_glGetTexEnviv;$/;"	v
glad_glGetTexGendv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETTEXGENDVPROC glad_glGetTexGendv;$/;"	v
glad_glGetTexGendv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETTEXGENDVPROC glad_glGetTexGendv;$/;"	v
glad_glGetTexGenfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETTEXGENFVPROC glad_glGetTexGenfv;$/;"	v
glad_glGetTexGenfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETTEXGENFVPROC glad_glGetTexGenfv;$/;"	v
glad_glGetTexGeniv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETTEXGENIVPROC glad_glGetTexGeniv;$/;"	v
glad_glGetTexGeniv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETTEXGENIVPROC glad_glGetTexGeniv;$/;"	v
glad_glGetTexImage	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETTEXIMAGEPROC glad_glGetTexImage;$/;"	v
glad_glGetTexImage	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETTEXIMAGEPROC glad_glGetTexImage;$/;"	v
glad_glGetTexLevelParameterfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETTEXLEVELPARAMETERFVPROC glad_glGetTexLevelParameterfv;$/;"	v
glad_glGetTexLevelParameterfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETTEXLEVELPARAMETERFVPROC glad_glGetTexLevelParameterfv;$/;"	v
glad_glGetTexLevelParameteriv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETTEXLEVELPARAMETERIVPROC glad_glGetTexLevelParameteriv;$/;"	v
glad_glGetTexLevelParameteriv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETTEXLEVELPARAMETERIVPROC glad_glGetTexLevelParameteriv;$/;"	v
glad_glGetTexParameterIiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETTEXPARAMETERIIVPROC glad_glGetTexParameterIiv;$/;"	v
glad_glGetTexParameterIiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETTEXPARAMETERIIVPROC glad_glGetTexParameterIiv;$/;"	v
glad_glGetTexParameterIuiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETTEXPARAMETERIUIVPROC glad_glGetTexParameterIuiv;$/;"	v
glad_glGetTexParameterIuiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETTEXPARAMETERIUIVPROC glad_glGetTexParameterIuiv;$/;"	v
glad_glGetTexParameterfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETTEXPARAMETERFVPROC glad_glGetTexParameterfv;$/;"	v
glad_glGetTexParameterfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETTEXPARAMETERFVPROC glad_glGetTexParameterfv;$/;"	v
glad_glGetTexParameteriv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETTEXPARAMETERIVPROC glad_glGetTexParameteriv;$/;"	v
glad_glGetTexParameteriv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETTEXPARAMETERIVPROC glad_glGetTexParameteriv;$/;"	v
glad_glGetTransformFeedbackVarying	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_glGetTransformFeedbackVarying;$/;"	v
glad_glGetTransformFeedbackVarying	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_glGetTransformFeedbackVarying;$/;"	v
glad_glGetUniformBlockIndex	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETUNIFORMBLOCKINDEXPROC glad_glGetUniformBlockIndex;$/;"	v
glad_glGetUniformBlockIndex	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETUNIFORMBLOCKINDEXPROC glad_glGetUniformBlockIndex;$/;"	v
glad_glGetUniformIndices	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETUNIFORMINDICESPROC glad_glGetUniformIndices;$/;"	v
glad_glGetUniformIndices	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETUNIFORMINDICESPROC glad_glGetUniformIndices;$/;"	v
glad_glGetUniformLocation	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETUNIFORMLOCATIONPROC glad_glGetUniformLocation;$/;"	v
glad_glGetUniformLocation	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETUNIFORMLOCATIONPROC glad_glGetUniformLocation;$/;"	v
glad_glGetUniformfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETUNIFORMFVPROC glad_glGetUniformfv;$/;"	v
glad_glGetUniformfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETUNIFORMFVPROC glad_glGetUniformfv;$/;"	v
glad_glGetUniformiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETUNIFORMIVPROC glad_glGetUniformiv;$/;"	v
glad_glGetUniformiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETUNIFORMIVPROC glad_glGetUniformiv;$/;"	v
glad_glGetUniformuiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETUNIFORMUIVPROC glad_glGetUniformuiv;$/;"	v
glad_glGetUniformuiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETUNIFORMUIVPROC glad_glGetUniformuiv;$/;"	v
glad_glGetVertexAttribIiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETVERTEXATTRIBIIVPROC glad_glGetVertexAttribIiv;$/;"	v
glad_glGetVertexAttribIiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETVERTEXATTRIBIIVPROC glad_glGetVertexAttribIiv;$/;"	v
glad_glGetVertexAttribIuiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETVERTEXATTRIBIUIVPROC glad_glGetVertexAttribIuiv;$/;"	v
glad_glGetVertexAttribIuiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETVERTEXATTRIBIUIVPROC glad_glGetVertexAttribIuiv;$/;"	v
glad_glGetVertexAttribPointerv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETVERTEXATTRIBPOINTERVPROC glad_glGetVertexAttribPointerv;$/;"	v
glad_glGetVertexAttribPointerv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETVERTEXATTRIBPOINTERVPROC glad_glGetVertexAttribPointerv;$/;"	v
glad_glGetVertexAttribdv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETVERTEXATTRIBDVPROC glad_glGetVertexAttribdv;$/;"	v
glad_glGetVertexAttribdv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETVERTEXATTRIBDVPROC glad_glGetVertexAttribdv;$/;"	v
glad_glGetVertexAttribfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETVERTEXATTRIBFVPROC glad_glGetVertexAttribfv;$/;"	v
glad_glGetVertexAttribfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETVERTEXATTRIBFVPROC glad_glGetVertexAttribfv;$/;"	v
glad_glGetVertexAttribiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETVERTEXATTRIBIVPROC glad_glGetVertexAttribiv;$/;"	v
glad_glGetVertexAttribiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETVERTEXATTRIBIVPROC glad_glGetVertexAttribiv;$/;"	v
glad_glGetnColorTableARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNCOLORTABLEARBPROC glad_glGetnColorTableARB;$/;"	v
glad_glGetnColorTableARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNCOLORTABLEARBPROC glad_glGetnColorTableARB;$/;"	v
glad_glGetnCompressedTexImageARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glad_glGetnCompressedTexImageARB;$/;"	v
glad_glGetnCompressedTexImageARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glad_glGetnCompressedTexImageARB;$/;"	v
glad_glGetnConvolutionFilterARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNCONVOLUTIONFILTERARBPROC glad_glGetnConvolutionFilterARB;$/;"	v
glad_glGetnConvolutionFilterARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNCONVOLUTIONFILTERARBPROC glad_glGetnConvolutionFilterARB;$/;"	v
glad_glGetnHistogramARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNHISTOGRAMARBPROC glad_glGetnHistogramARB;$/;"	v
glad_glGetnHistogramARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNHISTOGRAMARBPROC glad_glGetnHistogramARB;$/;"	v
glad_glGetnMapdvARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNMAPDVARBPROC glad_glGetnMapdvARB;$/;"	v
glad_glGetnMapdvARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNMAPDVARBPROC glad_glGetnMapdvARB;$/;"	v
glad_glGetnMapfvARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNMAPFVARBPROC glad_glGetnMapfvARB;$/;"	v
glad_glGetnMapfvARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNMAPFVARBPROC glad_glGetnMapfvARB;$/;"	v
glad_glGetnMapivARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNMAPIVARBPROC glad_glGetnMapivARB;$/;"	v
glad_glGetnMapivARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNMAPIVARBPROC glad_glGetnMapivARB;$/;"	v
glad_glGetnMinmaxARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNMINMAXARBPROC glad_glGetnMinmaxARB;$/;"	v
glad_glGetnMinmaxARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNMINMAXARBPROC glad_glGetnMinmaxARB;$/;"	v
glad_glGetnPixelMapfvARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNPIXELMAPFVARBPROC glad_glGetnPixelMapfvARB;$/;"	v
glad_glGetnPixelMapfvARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNPIXELMAPFVARBPROC glad_glGetnPixelMapfvARB;$/;"	v
glad_glGetnPixelMapuivARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNPIXELMAPUIVARBPROC glad_glGetnPixelMapuivARB;$/;"	v
glad_glGetnPixelMapuivARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNPIXELMAPUIVARBPROC glad_glGetnPixelMapuivARB;$/;"	v
glad_glGetnPixelMapusvARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNPIXELMAPUSVARBPROC glad_glGetnPixelMapusvARB;$/;"	v
glad_glGetnPixelMapusvARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNPIXELMAPUSVARBPROC glad_glGetnPixelMapusvARB;$/;"	v
glad_glGetnPolygonStippleARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNPOLYGONSTIPPLEARBPROC glad_glGetnPolygonStippleARB;$/;"	v
glad_glGetnPolygonStippleARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNPOLYGONSTIPPLEARBPROC glad_glGetnPolygonStippleARB;$/;"	v
glad_glGetnSeparableFilterARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNSEPARABLEFILTERARBPROC glad_glGetnSeparableFilterARB;$/;"	v
glad_glGetnSeparableFilterARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNSEPARABLEFILTERARBPROC glad_glGetnSeparableFilterARB;$/;"	v
glad_glGetnTexImageARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNTEXIMAGEARBPROC glad_glGetnTexImageARB;$/;"	v
glad_glGetnTexImageARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNTEXIMAGEARBPROC glad_glGetnTexImageARB;$/;"	v
glad_glGetnUniformdvARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNUNIFORMDVARBPROC glad_glGetnUniformdvARB;$/;"	v
glad_glGetnUniformdvARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNUNIFORMDVARBPROC glad_glGetnUniformdvARB;$/;"	v
glad_glGetnUniformfvARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNUNIFORMFVARBPROC glad_glGetnUniformfvARB;$/;"	v
glad_glGetnUniformfvARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNUNIFORMFVARBPROC glad_glGetnUniformfvARB;$/;"	v
glad_glGetnUniformivARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNUNIFORMIVARBPROC glad_glGetnUniformivARB;$/;"	v
glad_glGetnUniformivARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNUNIFORMIVARBPROC glad_glGetnUniformivARB;$/;"	v
glad_glGetnUniformuivARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLGETNUNIFORMUIVARBPROC glad_glGetnUniformuivARB;$/;"	v
glad_glGetnUniformuivARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLGETNUNIFORMUIVARBPROC glad_glGetnUniformuivARB;$/;"	v
glad_glHint	thirdparty/glfw/src/deps/glad.c	/^PFNGLHINTPROC glad_glHint;$/;"	v
glad_glHint	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLHINTPROC glad_glHint;$/;"	v
glad_glIndexMask	thirdparty/glfw/src/deps/glad.c	/^PFNGLINDEXMASKPROC glad_glIndexMask;$/;"	v
glad_glIndexMask	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINDEXMASKPROC glad_glIndexMask;$/;"	v
glad_glIndexPointer	thirdparty/glfw/src/deps/glad.c	/^PFNGLINDEXPOINTERPROC glad_glIndexPointer;$/;"	v
glad_glIndexPointer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINDEXPOINTERPROC glad_glIndexPointer;$/;"	v
glad_glIndexd	thirdparty/glfw/src/deps/glad.c	/^PFNGLINDEXDPROC glad_glIndexd;$/;"	v
glad_glIndexd	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINDEXDPROC glad_glIndexd;$/;"	v
glad_glIndexdv	thirdparty/glfw/src/deps/glad.c	/^PFNGLINDEXDVPROC glad_glIndexdv;$/;"	v
glad_glIndexdv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINDEXDVPROC glad_glIndexdv;$/;"	v
glad_glIndexf	thirdparty/glfw/src/deps/glad.c	/^PFNGLINDEXFPROC glad_glIndexf;$/;"	v
glad_glIndexf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINDEXFPROC glad_glIndexf;$/;"	v
glad_glIndexfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLINDEXFVPROC glad_glIndexfv;$/;"	v
glad_glIndexfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINDEXFVPROC glad_glIndexfv;$/;"	v
glad_glIndexi	thirdparty/glfw/src/deps/glad.c	/^PFNGLINDEXIPROC glad_glIndexi;$/;"	v
glad_glIndexi	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINDEXIPROC glad_glIndexi;$/;"	v
glad_glIndexiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLINDEXIVPROC glad_glIndexiv;$/;"	v
glad_glIndexiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINDEXIVPROC glad_glIndexiv;$/;"	v
glad_glIndexs	thirdparty/glfw/src/deps/glad.c	/^PFNGLINDEXSPROC glad_glIndexs;$/;"	v
glad_glIndexs	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINDEXSPROC glad_glIndexs;$/;"	v
glad_glIndexsv	thirdparty/glfw/src/deps/glad.c	/^PFNGLINDEXSVPROC glad_glIndexsv;$/;"	v
glad_glIndexsv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINDEXSVPROC glad_glIndexsv;$/;"	v
glad_glIndexub	thirdparty/glfw/src/deps/glad.c	/^PFNGLINDEXUBPROC glad_glIndexub;$/;"	v
glad_glIndexub	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINDEXUBPROC glad_glIndexub;$/;"	v
glad_glIndexubv	thirdparty/glfw/src/deps/glad.c	/^PFNGLINDEXUBVPROC glad_glIndexubv;$/;"	v
glad_glIndexubv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINDEXUBVPROC glad_glIndexubv;$/;"	v
glad_glInitNames	thirdparty/glfw/src/deps/glad.c	/^PFNGLINITNAMESPROC glad_glInitNames;$/;"	v
glad_glInitNames	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINITNAMESPROC glad_glInitNames;$/;"	v
glad_glInterleavedArrays	thirdparty/glfw/src/deps/glad.c	/^PFNGLINTERLEAVEDARRAYSPROC glad_glInterleavedArrays;$/;"	v
glad_glInterleavedArrays	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLINTERLEAVEDARRAYSPROC glad_glInterleavedArrays;$/;"	v
glad_glIsBuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLISBUFFERPROC glad_glIsBuffer;$/;"	v
glad_glIsBuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLISBUFFERPROC glad_glIsBuffer;$/;"	v
glad_glIsEnabled	thirdparty/glfw/src/deps/glad.c	/^PFNGLISENABLEDPROC glad_glIsEnabled;$/;"	v
glad_glIsEnabled	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLISENABLEDPROC glad_glIsEnabled;$/;"	v
glad_glIsEnabledi	thirdparty/glfw/src/deps/glad.c	/^PFNGLISENABLEDIPROC glad_glIsEnabledi;$/;"	v
glad_glIsEnabledi	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLISENABLEDIPROC glad_glIsEnabledi;$/;"	v
glad_glIsFramebuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLISFRAMEBUFFERPROC glad_glIsFramebuffer;$/;"	v
glad_glIsFramebuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLISFRAMEBUFFERPROC glad_glIsFramebuffer;$/;"	v
glad_glIsList	thirdparty/glfw/src/deps/glad.c	/^PFNGLISLISTPROC glad_glIsList;$/;"	v
glad_glIsList	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLISLISTPROC glad_glIsList;$/;"	v
glad_glIsProgram	thirdparty/glfw/src/deps/glad.c	/^PFNGLISPROGRAMPROC glad_glIsProgram;$/;"	v
glad_glIsProgram	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLISPROGRAMPROC glad_glIsProgram;$/;"	v
glad_glIsQuery	thirdparty/glfw/src/deps/glad.c	/^PFNGLISQUERYPROC glad_glIsQuery;$/;"	v
glad_glIsQuery	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLISQUERYPROC glad_glIsQuery;$/;"	v
glad_glIsRenderbuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLISRENDERBUFFERPROC glad_glIsRenderbuffer;$/;"	v
glad_glIsRenderbuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLISRENDERBUFFERPROC glad_glIsRenderbuffer;$/;"	v
glad_glIsShader	thirdparty/glfw/src/deps/glad.c	/^PFNGLISSHADERPROC glad_glIsShader;$/;"	v
glad_glIsShader	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLISSHADERPROC glad_glIsShader;$/;"	v
glad_glIsSync	thirdparty/glfw/src/deps/glad.c	/^PFNGLISSYNCPROC glad_glIsSync;$/;"	v
glad_glIsSync	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLISSYNCPROC glad_glIsSync;$/;"	v
glad_glIsTexture	thirdparty/glfw/src/deps/glad.c	/^PFNGLISTEXTUREPROC glad_glIsTexture;$/;"	v
glad_glIsTexture	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLISTEXTUREPROC glad_glIsTexture;$/;"	v
glad_glIsVertexArray	thirdparty/glfw/src/deps/glad.c	/^PFNGLISVERTEXARRAYPROC glad_glIsVertexArray;$/;"	v
glad_glIsVertexArray	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLISVERTEXARRAYPROC glad_glIsVertexArray;$/;"	v
glad_glLightModelf	thirdparty/glfw/src/deps/glad.c	/^PFNGLLIGHTMODELFPROC glad_glLightModelf;$/;"	v
glad_glLightModelf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLIGHTMODELFPROC glad_glLightModelf;$/;"	v
glad_glLightModelfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLLIGHTMODELFVPROC glad_glLightModelfv;$/;"	v
glad_glLightModelfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLIGHTMODELFVPROC glad_glLightModelfv;$/;"	v
glad_glLightModeli	thirdparty/glfw/src/deps/glad.c	/^PFNGLLIGHTMODELIPROC glad_glLightModeli;$/;"	v
glad_glLightModeli	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLIGHTMODELIPROC glad_glLightModeli;$/;"	v
glad_glLightModeliv	thirdparty/glfw/src/deps/glad.c	/^PFNGLLIGHTMODELIVPROC glad_glLightModeliv;$/;"	v
glad_glLightModeliv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLIGHTMODELIVPROC glad_glLightModeliv;$/;"	v
glad_glLightf	thirdparty/glfw/src/deps/glad.c	/^PFNGLLIGHTFPROC glad_glLightf;$/;"	v
glad_glLightf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLIGHTFPROC glad_glLightf;$/;"	v
glad_glLightfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLLIGHTFVPROC glad_glLightfv;$/;"	v
glad_glLightfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLIGHTFVPROC glad_glLightfv;$/;"	v
glad_glLighti	thirdparty/glfw/src/deps/glad.c	/^PFNGLLIGHTIPROC glad_glLighti;$/;"	v
glad_glLighti	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLIGHTIPROC glad_glLighti;$/;"	v
glad_glLightiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLLIGHTIVPROC glad_glLightiv;$/;"	v
glad_glLightiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLIGHTIVPROC glad_glLightiv;$/;"	v
glad_glLineStipple	thirdparty/glfw/src/deps/glad.c	/^PFNGLLINESTIPPLEPROC glad_glLineStipple;$/;"	v
glad_glLineStipple	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLINESTIPPLEPROC glad_glLineStipple;$/;"	v
glad_glLineWidth	thirdparty/glfw/src/deps/glad.c	/^PFNGLLINEWIDTHPROC glad_glLineWidth;$/;"	v
glad_glLineWidth	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLINEWIDTHPROC glad_glLineWidth;$/;"	v
glad_glLinkProgram	thirdparty/glfw/src/deps/glad.c	/^PFNGLLINKPROGRAMPROC glad_glLinkProgram;$/;"	v
glad_glLinkProgram	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLINKPROGRAMPROC glad_glLinkProgram;$/;"	v
glad_glListBase	thirdparty/glfw/src/deps/glad.c	/^PFNGLLISTBASEPROC glad_glListBase;$/;"	v
glad_glListBase	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLISTBASEPROC glad_glListBase;$/;"	v
glad_glLoadIdentity	thirdparty/glfw/src/deps/glad.c	/^PFNGLLOADIDENTITYPROC glad_glLoadIdentity;$/;"	v
glad_glLoadIdentity	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLOADIDENTITYPROC glad_glLoadIdentity;$/;"	v
glad_glLoadMatrixd	thirdparty/glfw/src/deps/glad.c	/^PFNGLLOADMATRIXDPROC glad_glLoadMatrixd;$/;"	v
glad_glLoadMatrixd	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLOADMATRIXDPROC glad_glLoadMatrixd;$/;"	v
glad_glLoadMatrixf	thirdparty/glfw/src/deps/glad.c	/^PFNGLLOADMATRIXFPROC glad_glLoadMatrixf;$/;"	v
glad_glLoadMatrixf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLOADMATRIXFPROC glad_glLoadMatrixf;$/;"	v
glad_glLoadName	thirdparty/glfw/src/deps/glad.c	/^PFNGLLOADNAMEPROC glad_glLoadName;$/;"	v
glad_glLoadName	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLOADNAMEPROC glad_glLoadName;$/;"	v
glad_glLoadTransposeMatrixd	thirdparty/glfw/src/deps/glad.c	/^PFNGLLOADTRANSPOSEMATRIXDPROC glad_glLoadTransposeMatrixd;$/;"	v
glad_glLoadTransposeMatrixd	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLOADTRANSPOSEMATRIXDPROC glad_glLoadTransposeMatrixd;$/;"	v
glad_glLoadTransposeMatrixf	thirdparty/glfw/src/deps/glad.c	/^PFNGLLOADTRANSPOSEMATRIXFPROC glad_glLoadTransposeMatrixf;$/;"	v
glad_glLoadTransposeMatrixf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLOADTRANSPOSEMATRIXFPROC glad_glLoadTransposeMatrixf;$/;"	v
glad_glLogicOp	thirdparty/glfw/src/deps/glad.c	/^PFNGLLOGICOPPROC glad_glLogicOp;$/;"	v
glad_glLogicOp	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLLOGICOPPROC glad_glLogicOp;$/;"	v
glad_glMap1d	thirdparty/glfw/src/deps/glad.c	/^PFNGLMAP1DPROC glad_glMap1d;$/;"	v
glad_glMap1d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMAP1DPROC glad_glMap1d;$/;"	v
glad_glMap1f	thirdparty/glfw/src/deps/glad.c	/^PFNGLMAP1FPROC glad_glMap1f;$/;"	v
glad_glMap1f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMAP1FPROC glad_glMap1f;$/;"	v
glad_glMap2d	thirdparty/glfw/src/deps/glad.c	/^PFNGLMAP2DPROC glad_glMap2d;$/;"	v
glad_glMap2d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMAP2DPROC glad_glMap2d;$/;"	v
glad_glMap2f	thirdparty/glfw/src/deps/glad.c	/^PFNGLMAP2FPROC glad_glMap2f;$/;"	v
glad_glMap2f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMAP2FPROC glad_glMap2f;$/;"	v
glad_glMapBuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLMAPBUFFERPROC glad_glMapBuffer;$/;"	v
glad_glMapBuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMAPBUFFERPROC glad_glMapBuffer;$/;"	v
glad_glMapBufferRange	thirdparty/glfw/src/deps/glad.c	/^PFNGLMAPBUFFERRANGEPROC glad_glMapBufferRange;$/;"	v
glad_glMapBufferRange	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMAPBUFFERRANGEPROC glad_glMapBufferRange;$/;"	v
glad_glMapGrid1d	thirdparty/glfw/src/deps/glad.c	/^PFNGLMAPGRID1DPROC glad_glMapGrid1d;$/;"	v
glad_glMapGrid1d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMAPGRID1DPROC glad_glMapGrid1d;$/;"	v
glad_glMapGrid1f	thirdparty/glfw/src/deps/glad.c	/^PFNGLMAPGRID1FPROC glad_glMapGrid1f;$/;"	v
glad_glMapGrid1f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMAPGRID1FPROC glad_glMapGrid1f;$/;"	v
glad_glMapGrid2d	thirdparty/glfw/src/deps/glad.c	/^PFNGLMAPGRID2DPROC glad_glMapGrid2d;$/;"	v
glad_glMapGrid2d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMAPGRID2DPROC glad_glMapGrid2d;$/;"	v
glad_glMapGrid2f	thirdparty/glfw/src/deps/glad.c	/^PFNGLMAPGRID2FPROC glad_glMapGrid2f;$/;"	v
glad_glMapGrid2f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMAPGRID2FPROC glad_glMapGrid2f;$/;"	v
glad_glMaterialf	thirdparty/glfw/src/deps/glad.c	/^PFNGLMATERIALFPROC glad_glMaterialf;$/;"	v
glad_glMaterialf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMATERIALFPROC glad_glMaterialf;$/;"	v
glad_glMaterialfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMATERIALFVPROC glad_glMaterialfv;$/;"	v
glad_glMaterialfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMATERIALFVPROC glad_glMaterialfv;$/;"	v
glad_glMateriali	thirdparty/glfw/src/deps/glad.c	/^PFNGLMATERIALIPROC glad_glMateriali;$/;"	v
glad_glMateriali	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMATERIALIPROC glad_glMateriali;$/;"	v
glad_glMaterialiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMATERIALIVPROC glad_glMaterialiv;$/;"	v
glad_glMaterialiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMATERIALIVPROC glad_glMaterialiv;$/;"	v
glad_glMatrixMode	thirdparty/glfw/src/deps/glad.c	/^PFNGLMATRIXMODEPROC glad_glMatrixMode;$/;"	v
glad_glMatrixMode	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMATRIXMODEPROC glad_glMatrixMode;$/;"	v
glad_glMultMatrixd	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTMATRIXDPROC glad_glMultMatrixd;$/;"	v
glad_glMultMatrixd	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTMATRIXDPROC glad_glMultMatrixd;$/;"	v
glad_glMultMatrixf	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTMATRIXFPROC glad_glMultMatrixf;$/;"	v
glad_glMultMatrixf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTMATRIXFPROC glad_glMultMatrixf;$/;"	v
glad_glMultTransposeMatrixd	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTTRANSPOSEMATRIXDPROC glad_glMultTransposeMatrixd;$/;"	v
glad_glMultTransposeMatrixd	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTTRANSPOSEMATRIXDPROC glad_glMultTransposeMatrixd;$/;"	v
glad_glMultTransposeMatrixf	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTTRANSPOSEMATRIXFPROC glad_glMultTransposeMatrixf;$/;"	v
glad_glMultTransposeMatrixf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTTRANSPOSEMATRIXFPROC glad_glMultTransposeMatrixf;$/;"	v
glad_glMultiDrawArrays	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTIDRAWARRAYSPROC glad_glMultiDrawArrays;$/;"	v
glad_glMultiDrawArrays	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTIDRAWARRAYSPROC glad_glMultiDrawArrays;$/;"	v
glad_glMultiDrawElements	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTIDRAWELEMENTSPROC glad_glMultiDrawElements;$/;"	v
glad_glMultiDrawElements	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTIDRAWELEMENTSPROC glad_glMultiDrawElements;$/;"	v
glad_glMultiDrawElementsBaseVertex	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_glMultiDrawElementsBaseVertex;$/;"	v
glad_glMultiDrawElementsBaseVertex	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_glMultiDrawElementsBaseVertex;$/;"	v
glad_glMultiTexCoord1d	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD1DPROC glad_glMultiTexCoord1d;$/;"	v
glad_glMultiTexCoord1d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD1DPROC glad_glMultiTexCoord1d;$/;"	v
glad_glMultiTexCoord1dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD1DVPROC glad_glMultiTexCoord1dv;$/;"	v
glad_glMultiTexCoord1dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD1DVPROC glad_glMultiTexCoord1dv;$/;"	v
glad_glMultiTexCoord1f	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD1FPROC glad_glMultiTexCoord1f;$/;"	v
glad_glMultiTexCoord1f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD1FPROC glad_glMultiTexCoord1f;$/;"	v
glad_glMultiTexCoord1fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD1FVPROC glad_glMultiTexCoord1fv;$/;"	v
glad_glMultiTexCoord1fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD1FVPROC glad_glMultiTexCoord1fv;$/;"	v
glad_glMultiTexCoord1i	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD1IPROC glad_glMultiTexCoord1i;$/;"	v
glad_glMultiTexCoord1i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD1IPROC glad_glMultiTexCoord1i;$/;"	v
glad_glMultiTexCoord1iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD1IVPROC glad_glMultiTexCoord1iv;$/;"	v
glad_glMultiTexCoord1iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD1IVPROC glad_glMultiTexCoord1iv;$/;"	v
glad_glMultiTexCoord1s	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD1SPROC glad_glMultiTexCoord1s;$/;"	v
glad_glMultiTexCoord1s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD1SPROC glad_glMultiTexCoord1s;$/;"	v
glad_glMultiTexCoord1sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD1SVPROC glad_glMultiTexCoord1sv;$/;"	v
glad_glMultiTexCoord1sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD1SVPROC glad_glMultiTexCoord1sv;$/;"	v
glad_glMultiTexCoord2d	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD2DPROC glad_glMultiTexCoord2d;$/;"	v
glad_glMultiTexCoord2d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD2DPROC glad_glMultiTexCoord2d;$/;"	v
glad_glMultiTexCoord2dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD2DVPROC glad_glMultiTexCoord2dv;$/;"	v
glad_glMultiTexCoord2dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD2DVPROC glad_glMultiTexCoord2dv;$/;"	v
glad_glMultiTexCoord2f	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD2FPROC glad_glMultiTexCoord2f;$/;"	v
glad_glMultiTexCoord2f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD2FPROC glad_glMultiTexCoord2f;$/;"	v
glad_glMultiTexCoord2fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD2FVPROC glad_glMultiTexCoord2fv;$/;"	v
glad_glMultiTexCoord2fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD2FVPROC glad_glMultiTexCoord2fv;$/;"	v
glad_glMultiTexCoord2i	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD2IPROC glad_glMultiTexCoord2i;$/;"	v
glad_glMultiTexCoord2i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD2IPROC glad_glMultiTexCoord2i;$/;"	v
glad_glMultiTexCoord2iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD2IVPROC glad_glMultiTexCoord2iv;$/;"	v
glad_glMultiTexCoord2iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD2IVPROC glad_glMultiTexCoord2iv;$/;"	v
glad_glMultiTexCoord2s	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD2SPROC glad_glMultiTexCoord2s;$/;"	v
glad_glMultiTexCoord2s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD2SPROC glad_glMultiTexCoord2s;$/;"	v
glad_glMultiTexCoord2sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD2SVPROC glad_glMultiTexCoord2sv;$/;"	v
glad_glMultiTexCoord2sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD2SVPROC glad_glMultiTexCoord2sv;$/;"	v
glad_glMultiTexCoord3d	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD3DPROC glad_glMultiTexCoord3d;$/;"	v
glad_glMultiTexCoord3d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD3DPROC glad_glMultiTexCoord3d;$/;"	v
glad_glMultiTexCoord3dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD3DVPROC glad_glMultiTexCoord3dv;$/;"	v
glad_glMultiTexCoord3dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD3DVPROC glad_glMultiTexCoord3dv;$/;"	v
glad_glMultiTexCoord3f	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD3FPROC glad_glMultiTexCoord3f;$/;"	v
glad_glMultiTexCoord3f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD3FPROC glad_glMultiTexCoord3f;$/;"	v
glad_glMultiTexCoord3fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD3FVPROC glad_glMultiTexCoord3fv;$/;"	v
glad_glMultiTexCoord3fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD3FVPROC glad_glMultiTexCoord3fv;$/;"	v
glad_glMultiTexCoord3i	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD3IPROC glad_glMultiTexCoord3i;$/;"	v
glad_glMultiTexCoord3i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD3IPROC glad_glMultiTexCoord3i;$/;"	v
glad_glMultiTexCoord3iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD3IVPROC glad_glMultiTexCoord3iv;$/;"	v
glad_glMultiTexCoord3iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD3IVPROC glad_glMultiTexCoord3iv;$/;"	v
glad_glMultiTexCoord3s	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD3SPROC glad_glMultiTexCoord3s;$/;"	v
glad_glMultiTexCoord3s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD3SPROC glad_glMultiTexCoord3s;$/;"	v
glad_glMultiTexCoord3sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD3SVPROC glad_glMultiTexCoord3sv;$/;"	v
glad_glMultiTexCoord3sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD3SVPROC glad_glMultiTexCoord3sv;$/;"	v
glad_glMultiTexCoord4d	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD4DPROC glad_glMultiTexCoord4d;$/;"	v
glad_glMultiTexCoord4d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD4DPROC glad_glMultiTexCoord4d;$/;"	v
glad_glMultiTexCoord4dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD4DVPROC glad_glMultiTexCoord4dv;$/;"	v
glad_glMultiTexCoord4dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD4DVPROC glad_glMultiTexCoord4dv;$/;"	v
glad_glMultiTexCoord4f	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD4FPROC glad_glMultiTexCoord4f;$/;"	v
glad_glMultiTexCoord4f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD4FPROC glad_glMultiTexCoord4f;$/;"	v
glad_glMultiTexCoord4fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD4FVPROC glad_glMultiTexCoord4fv;$/;"	v
glad_glMultiTexCoord4fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD4FVPROC glad_glMultiTexCoord4fv;$/;"	v
glad_glMultiTexCoord4i	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD4IPROC glad_glMultiTexCoord4i;$/;"	v
glad_glMultiTexCoord4i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD4IPROC glad_glMultiTexCoord4i;$/;"	v
glad_glMultiTexCoord4iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD4IVPROC glad_glMultiTexCoord4iv;$/;"	v
glad_glMultiTexCoord4iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD4IVPROC glad_glMultiTexCoord4iv;$/;"	v
glad_glMultiTexCoord4s	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD4SPROC glad_glMultiTexCoord4s;$/;"	v
glad_glMultiTexCoord4s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD4SPROC glad_glMultiTexCoord4s;$/;"	v
glad_glMultiTexCoord4sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLMULTITEXCOORD4SVPROC glad_glMultiTexCoord4sv;$/;"	v
glad_glMultiTexCoord4sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLMULTITEXCOORD4SVPROC glad_glMultiTexCoord4sv;$/;"	v
glad_glNewList	thirdparty/glfw/src/deps/glad.c	/^PFNGLNEWLISTPROC glad_glNewList;$/;"	v
glad_glNewList	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLNEWLISTPROC glad_glNewList;$/;"	v
glad_glNormal3b	thirdparty/glfw/src/deps/glad.c	/^PFNGLNORMAL3BPROC glad_glNormal3b;$/;"	v
glad_glNormal3b	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLNORMAL3BPROC glad_glNormal3b;$/;"	v
glad_glNormal3bv	thirdparty/glfw/src/deps/glad.c	/^PFNGLNORMAL3BVPROC glad_glNormal3bv;$/;"	v
glad_glNormal3bv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLNORMAL3BVPROC glad_glNormal3bv;$/;"	v
glad_glNormal3d	thirdparty/glfw/src/deps/glad.c	/^PFNGLNORMAL3DPROC glad_glNormal3d;$/;"	v
glad_glNormal3d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLNORMAL3DPROC glad_glNormal3d;$/;"	v
glad_glNormal3dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLNORMAL3DVPROC glad_glNormal3dv;$/;"	v
glad_glNormal3dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLNORMAL3DVPROC glad_glNormal3dv;$/;"	v
glad_glNormal3f	thirdparty/glfw/src/deps/glad.c	/^PFNGLNORMAL3FPROC glad_glNormal3f;$/;"	v
glad_glNormal3f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLNORMAL3FPROC glad_glNormal3f;$/;"	v
glad_glNormal3fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLNORMAL3FVPROC glad_glNormal3fv;$/;"	v
glad_glNormal3fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLNORMAL3FVPROC glad_glNormal3fv;$/;"	v
glad_glNormal3i	thirdparty/glfw/src/deps/glad.c	/^PFNGLNORMAL3IPROC glad_glNormal3i;$/;"	v
glad_glNormal3i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLNORMAL3IPROC glad_glNormal3i;$/;"	v
glad_glNormal3iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLNORMAL3IVPROC glad_glNormal3iv;$/;"	v
glad_glNormal3iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLNORMAL3IVPROC glad_glNormal3iv;$/;"	v
glad_glNormal3s	thirdparty/glfw/src/deps/glad.c	/^PFNGLNORMAL3SPROC glad_glNormal3s;$/;"	v
glad_glNormal3s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLNORMAL3SPROC glad_glNormal3s;$/;"	v
glad_glNormal3sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLNORMAL3SVPROC glad_glNormal3sv;$/;"	v
glad_glNormal3sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLNORMAL3SVPROC glad_glNormal3sv;$/;"	v
glad_glNormalPointer	thirdparty/glfw/src/deps/glad.c	/^PFNGLNORMALPOINTERPROC glad_glNormalPointer;$/;"	v
glad_glNormalPointer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLNORMALPOINTERPROC glad_glNormalPointer;$/;"	v
glad_glObjectLabel	thirdparty/glfw/src/deps/glad.c	/^PFNGLOBJECTLABELPROC glad_glObjectLabel;$/;"	v
glad_glObjectLabel	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLOBJECTLABELPROC glad_glObjectLabel;$/;"	v
glad_glObjectLabelKHR	thirdparty/glfw/src/deps/glad.c	/^PFNGLOBJECTLABELKHRPROC glad_glObjectLabelKHR;$/;"	v
glad_glObjectLabelKHR	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLOBJECTLABELKHRPROC glad_glObjectLabelKHR;$/;"	v
glad_glObjectPtrLabel	thirdparty/glfw/src/deps/glad.c	/^PFNGLOBJECTPTRLABELPROC glad_glObjectPtrLabel;$/;"	v
glad_glObjectPtrLabel	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLOBJECTPTRLABELPROC glad_glObjectPtrLabel;$/;"	v
glad_glObjectPtrLabelKHR	thirdparty/glfw/src/deps/glad.c	/^PFNGLOBJECTPTRLABELKHRPROC glad_glObjectPtrLabelKHR;$/;"	v
glad_glObjectPtrLabelKHR	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLOBJECTPTRLABELKHRPROC glad_glObjectPtrLabelKHR;$/;"	v
glad_glOrtho	thirdparty/glfw/src/deps/glad.c	/^PFNGLORTHOPROC glad_glOrtho;$/;"	v
glad_glOrtho	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLORTHOPROC glad_glOrtho;$/;"	v
glad_glPassThrough	thirdparty/glfw/src/deps/glad.c	/^PFNGLPASSTHROUGHPROC glad_glPassThrough;$/;"	v
glad_glPassThrough	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPASSTHROUGHPROC glad_glPassThrough;$/;"	v
glad_glPixelMapfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLPIXELMAPFVPROC glad_glPixelMapfv;$/;"	v
glad_glPixelMapfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPIXELMAPFVPROC glad_glPixelMapfv;$/;"	v
glad_glPixelMapuiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLPIXELMAPUIVPROC glad_glPixelMapuiv;$/;"	v
glad_glPixelMapuiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPIXELMAPUIVPROC glad_glPixelMapuiv;$/;"	v
glad_glPixelMapusv	thirdparty/glfw/src/deps/glad.c	/^PFNGLPIXELMAPUSVPROC glad_glPixelMapusv;$/;"	v
glad_glPixelMapusv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPIXELMAPUSVPROC glad_glPixelMapusv;$/;"	v
glad_glPixelStoref	thirdparty/glfw/src/deps/glad.c	/^PFNGLPIXELSTOREFPROC glad_glPixelStoref;$/;"	v
glad_glPixelStoref	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPIXELSTOREFPROC glad_glPixelStoref;$/;"	v
glad_glPixelStorei	thirdparty/glfw/src/deps/glad.c	/^PFNGLPIXELSTOREIPROC glad_glPixelStorei;$/;"	v
glad_glPixelStorei	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPIXELSTOREIPROC glad_glPixelStorei;$/;"	v
glad_glPixelTransferf	thirdparty/glfw/src/deps/glad.c	/^PFNGLPIXELTRANSFERFPROC glad_glPixelTransferf;$/;"	v
glad_glPixelTransferf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPIXELTRANSFERFPROC glad_glPixelTransferf;$/;"	v
glad_glPixelTransferi	thirdparty/glfw/src/deps/glad.c	/^PFNGLPIXELTRANSFERIPROC glad_glPixelTransferi;$/;"	v
glad_glPixelTransferi	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPIXELTRANSFERIPROC glad_glPixelTransferi;$/;"	v
glad_glPixelZoom	thirdparty/glfw/src/deps/glad.c	/^PFNGLPIXELZOOMPROC glad_glPixelZoom;$/;"	v
glad_glPixelZoom	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPIXELZOOMPROC glad_glPixelZoom;$/;"	v
glad_glPointParameterf	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOINTPARAMETERFPROC glad_glPointParameterf;$/;"	v
glad_glPointParameterf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOINTPARAMETERFPROC glad_glPointParameterf;$/;"	v
glad_glPointParameterfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOINTPARAMETERFVPROC glad_glPointParameterfv;$/;"	v
glad_glPointParameterfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOINTPARAMETERFVPROC glad_glPointParameterfv;$/;"	v
glad_glPointParameteri	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOINTPARAMETERIPROC glad_glPointParameteri;$/;"	v
glad_glPointParameteri	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOINTPARAMETERIPROC glad_glPointParameteri;$/;"	v
glad_glPointParameteriv	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOINTPARAMETERIVPROC glad_glPointParameteriv;$/;"	v
glad_glPointParameteriv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOINTPARAMETERIVPROC glad_glPointParameteriv;$/;"	v
glad_glPointSize	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOINTSIZEPROC glad_glPointSize;$/;"	v
glad_glPointSize	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOINTSIZEPROC glad_glPointSize;$/;"	v
glad_glPolygonMode	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOLYGONMODEPROC glad_glPolygonMode;$/;"	v
glad_glPolygonMode	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOLYGONMODEPROC glad_glPolygonMode;$/;"	v
glad_glPolygonOffset	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOLYGONOFFSETPROC glad_glPolygonOffset;$/;"	v
glad_glPolygonOffset	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOLYGONOFFSETPROC glad_glPolygonOffset;$/;"	v
glad_glPolygonStipple	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOLYGONSTIPPLEPROC glad_glPolygonStipple;$/;"	v
glad_glPolygonStipple	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOLYGONSTIPPLEPROC glad_glPolygonStipple;$/;"	v
glad_glPopAttrib	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOPATTRIBPROC glad_glPopAttrib;$/;"	v
glad_glPopAttrib	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOPATTRIBPROC glad_glPopAttrib;$/;"	v
glad_glPopClientAttrib	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOPCLIENTATTRIBPROC glad_glPopClientAttrib;$/;"	v
glad_glPopClientAttrib	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOPCLIENTATTRIBPROC glad_glPopClientAttrib;$/;"	v
glad_glPopDebugGroup	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOPDEBUGGROUPPROC glad_glPopDebugGroup;$/;"	v
glad_glPopDebugGroup	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOPDEBUGGROUPPROC glad_glPopDebugGroup;$/;"	v
glad_glPopDebugGroupKHR	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOPDEBUGGROUPKHRPROC glad_glPopDebugGroupKHR;$/;"	v
glad_glPopDebugGroupKHR	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOPDEBUGGROUPKHRPROC glad_glPopDebugGroupKHR;$/;"	v
glad_glPopMatrix	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOPMATRIXPROC glad_glPopMatrix;$/;"	v
glad_glPopMatrix	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOPMATRIXPROC glad_glPopMatrix;$/;"	v
glad_glPopName	thirdparty/glfw/src/deps/glad.c	/^PFNGLPOPNAMEPROC glad_glPopName;$/;"	v
glad_glPopName	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPOPNAMEPROC glad_glPopName;$/;"	v
glad_glPrimitiveRestartIndex	thirdparty/glfw/src/deps/glad.c	/^PFNGLPRIMITIVERESTARTINDEXPROC glad_glPrimitiveRestartIndex;$/;"	v
glad_glPrimitiveRestartIndex	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPRIMITIVERESTARTINDEXPROC glad_glPrimitiveRestartIndex;$/;"	v
glad_glPrioritizeTextures	thirdparty/glfw/src/deps/glad.c	/^PFNGLPRIORITIZETEXTURESPROC glad_glPrioritizeTextures;$/;"	v
glad_glPrioritizeTextures	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPRIORITIZETEXTURESPROC glad_glPrioritizeTextures;$/;"	v
glad_glProvokingVertex	thirdparty/glfw/src/deps/glad.c	/^PFNGLPROVOKINGVERTEXPROC glad_glProvokingVertex;$/;"	v
glad_glProvokingVertex	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPROVOKINGVERTEXPROC glad_glProvokingVertex;$/;"	v
glad_glPushAttrib	thirdparty/glfw/src/deps/glad.c	/^PFNGLPUSHATTRIBPROC glad_glPushAttrib;$/;"	v
glad_glPushAttrib	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPUSHATTRIBPROC glad_glPushAttrib;$/;"	v
glad_glPushClientAttrib	thirdparty/glfw/src/deps/glad.c	/^PFNGLPUSHCLIENTATTRIBPROC glad_glPushClientAttrib;$/;"	v
glad_glPushClientAttrib	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPUSHCLIENTATTRIBPROC glad_glPushClientAttrib;$/;"	v
glad_glPushDebugGroup	thirdparty/glfw/src/deps/glad.c	/^PFNGLPUSHDEBUGGROUPPROC glad_glPushDebugGroup;$/;"	v
glad_glPushDebugGroup	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPUSHDEBUGGROUPPROC glad_glPushDebugGroup;$/;"	v
glad_glPushDebugGroupKHR	thirdparty/glfw/src/deps/glad.c	/^PFNGLPUSHDEBUGGROUPKHRPROC glad_glPushDebugGroupKHR;$/;"	v
glad_glPushDebugGroupKHR	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPUSHDEBUGGROUPKHRPROC glad_glPushDebugGroupKHR;$/;"	v
glad_glPushMatrix	thirdparty/glfw/src/deps/glad.c	/^PFNGLPUSHMATRIXPROC glad_glPushMatrix;$/;"	v
glad_glPushMatrix	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPUSHMATRIXPROC glad_glPushMatrix;$/;"	v
glad_glPushName	thirdparty/glfw/src/deps/glad.c	/^PFNGLPUSHNAMEPROC glad_glPushName;$/;"	v
glad_glPushName	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLPUSHNAMEPROC glad_glPushName;$/;"	v
glad_glRasterPos2d	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS2DPROC glad_glRasterPos2d;$/;"	v
glad_glRasterPos2d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS2DPROC glad_glRasterPos2d;$/;"	v
glad_glRasterPos2dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS2DVPROC glad_glRasterPos2dv;$/;"	v
glad_glRasterPos2dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS2DVPROC glad_glRasterPos2dv;$/;"	v
glad_glRasterPos2f	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS2FPROC glad_glRasterPos2f;$/;"	v
glad_glRasterPos2f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS2FPROC glad_glRasterPos2f;$/;"	v
glad_glRasterPos2fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS2FVPROC glad_glRasterPos2fv;$/;"	v
glad_glRasterPos2fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS2FVPROC glad_glRasterPos2fv;$/;"	v
glad_glRasterPos2i	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS2IPROC glad_glRasterPos2i;$/;"	v
glad_glRasterPos2i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS2IPROC glad_glRasterPos2i;$/;"	v
glad_glRasterPos2iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS2IVPROC glad_glRasterPos2iv;$/;"	v
glad_glRasterPos2iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS2IVPROC glad_glRasterPos2iv;$/;"	v
glad_glRasterPos2s	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS2SPROC glad_glRasterPos2s;$/;"	v
glad_glRasterPos2s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS2SPROC glad_glRasterPos2s;$/;"	v
glad_glRasterPos2sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS2SVPROC glad_glRasterPos2sv;$/;"	v
glad_glRasterPos2sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS2SVPROC glad_glRasterPos2sv;$/;"	v
glad_glRasterPos3d	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS3DPROC glad_glRasterPos3d;$/;"	v
glad_glRasterPos3d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS3DPROC glad_glRasterPos3d;$/;"	v
glad_glRasterPos3dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS3DVPROC glad_glRasterPos3dv;$/;"	v
glad_glRasterPos3dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS3DVPROC glad_glRasterPos3dv;$/;"	v
glad_glRasterPos3f	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS3FPROC glad_glRasterPos3f;$/;"	v
glad_glRasterPos3f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS3FPROC glad_glRasterPos3f;$/;"	v
glad_glRasterPos3fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS3FVPROC glad_glRasterPos3fv;$/;"	v
glad_glRasterPos3fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS3FVPROC glad_glRasterPos3fv;$/;"	v
glad_glRasterPos3i	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS3IPROC glad_glRasterPos3i;$/;"	v
glad_glRasterPos3i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS3IPROC glad_glRasterPos3i;$/;"	v
glad_glRasterPos3iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS3IVPROC glad_glRasterPos3iv;$/;"	v
glad_glRasterPos3iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS3IVPROC glad_glRasterPos3iv;$/;"	v
glad_glRasterPos3s	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS3SPROC glad_glRasterPos3s;$/;"	v
glad_glRasterPos3s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS3SPROC glad_glRasterPos3s;$/;"	v
glad_glRasterPos3sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS3SVPROC glad_glRasterPos3sv;$/;"	v
glad_glRasterPos3sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS3SVPROC glad_glRasterPos3sv;$/;"	v
glad_glRasterPos4d	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS4DPROC glad_glRasterPos4d;$/;"	v
glad_glRasterPos4d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS4DPROC glad_glRasterPos4d;$/;"	v
glad_glRasterPos4dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS4DVPROC glad_glRasterPos4dv;$/;"	v
glad_glRasterPos4dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS4DVPROC glad_glRasterPos4dv;$/;"	v
glad_glRasterPos4f	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS4FPROC glad_glRasterPos4f;$/;"	v
glad_glRasterPos4f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS4FPROC glad_glRasterPos4f;$/;"	v
glad_glRasterPos4fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS4FVPROC glad_glRasterPos4fv;$/;"	v
glad_glRasterPos4fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS4FVPROC glad_glRasterPos4fv;$/;"	v
glad_glRasterPos4i	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS4IPROC glad_glRasterPos4i;$/;"	v
glad_glRasterPos4i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS4IPROC glad_glRasterPos4i;$/;"	v
glad_glRasterPos4iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS4IVPROC glad_glRasterPos4iv;$/;"	v
glad_glRasterPos4iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS4IVPROC glad_glRasterPos4iv;$/;"	v
glad_glRasterPos4s	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS4SPROC glad_glRasterPos4s;$/;"	v
glad_glRasterPos4s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS4SPROC glad_glRasterPos4s;$/;"	v
glad_glRasterPos4sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRASTERPOS4SVPROC glad_glRasterPos4sv;$/;"	v
glad_glRasterPos4sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRASTERPOS4SVPROC glad_glRasterPos4sv;$/;"	v
glad_glReadBuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLREADBUFFERPROC glad_glReadBuffer;$/;"	v
glad_glReadBuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLREADBUFFERPROC glad_glReadBuffer;$/;"	v
glad_glReadPixels	thirdparty/glfw/src/deps/glad.c	/^PFNGLREADPIXELSPROC glad_glReadPixels;$/;"	v
glad_glReadPixels	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLREADPIXELSPROC glad_glReadPixels;$/;"	v
glad_glReadnPixelsARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLREADNPIXELSARBPROC glad_glReadnPixelsARB;$/;"	v
glad_glReadnPixelsARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLREADNPIXELSARBPROC glad_glReadnPixelsARB;$/;"	v
glad_glRectd	thirdparty/glfw/src/deps/glad.c	/^PFNGLRECTDPROC glad_glRectd;$/;"	v
glad_glRectd	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRECTDPROC glad_glRectd;$/;"	v
glad_glRectdv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRECTDVPROC glad_glRectdv;$/;"	v
glad_glRectdv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRECTDVPROC glad_glRectdv;$/;"	v
glad_glRectf	thirdparty/glfw/src/deps/glad.c	/^PFNGLRECTFPROC glad_glRectf;$/;"	v
glad_glRectf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRECTFPROC glad_glRectf;$/;"	v
glad_glRectfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRECTFVPROC glad_glRectfv;$/;"	v
glad_glRectfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRECTFVPROC glad_glRectfv;$/;"	v
glad_glRecti	thirdparty/glfw/src/deps/glad.c	/^PFNGLRECTIPROC glad_glRecti;$/;"	v
glad_glRecti	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRECTIPROC glad_glRecti;$/;"	v
glad_glRectiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRECTIVPROC glad_glRectiv;$/;"	v
glad_glRectiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRECTIVPROC glad_glRectiv;$/;"	v
glad_glRects	thirdparty/glfw/src/deps/glad.c	/^PFNGLRECTSPROC glad_glRects;$/;"	v
glad_glRects	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRECTSPROC glad_glRects;$/;"	v
glad_glRectsv	thirdparty/glfw/src/deps/glad.c	/^PFNGLRECTSVPROC glad_glRectsv;$/;"	v
glad_glRectsv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRECTSVPROC glad_glRectsv;$/;"	v
glad_glRenderMode	thirdparty/glfw/src/deps/glad.c	/^PFNGLRENDERMODEPROC glad_glRenderMode;$/;"	v
glad_glRenderMode	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRENDERMODEPROC glad_glRenderMode;$/;"	v
glad_glRenderbufferStorage	thirdparty/glfw/src/deps/glad.c	/^PFNGLRENDERBUFFERSTORAGEPROC glad_glRenderbufferStorage;$/;"	v
glad_glRenderbufferStorage	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRENDERBUFFERSTORAGEPROC glad_glRenderbufferStorage;$/;"	v
glad_glRenderbufferStorageMultisample	thirdparty/glfw/src/deps/glad.c	/^PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_glRenderbufferStorageMultisample;$/;"	v
glad_glRenderbufferStorageMultisample	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_glRenderbufferStorageMultisample;$/;"	v
glad_glRotated	thirdparty/glfw/src/deps/glad.c	/^PFNGLROTATEDPROC glad_glRotated;$/;"	v
glad_glRotated	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLROTATEDPROC glad_glRotated;$/;"	v
glad_glRotatef	thirdparty/glfw/src/deps/glad.c	/^PFNGLROTATEFPROC glad_glRotatef;$/;"	v
glad_glRotatef	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLROTATEFPROC glad_glRotatef;$/;"	v
glad_glSampleCoverage	thirdparty/glfw/src/deps/glad.c	/^PFNGLSAMPLECOVERAGEPROC glad_glSampleCoverage;$/;"	v
glad_glSampleCoverage	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSAMPLECOVERAGEPROC glad_glSampleCoverage;$/;"	v
glad_glSampleCoverageARB	thirdparty/glfw/src/deps/glad.c	/^PFNGLSAMPLECOVERAGEARBPROC glad_glSampleCoverageARB;$/;"	v
glad_glSampleCoverageARB	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSAMPLECOVERAGEARBPROC glad_glSampleCoverageARB;$/;"	v
glad_glSampleMaski	thirdparty/glfw/src/deps/glad.c	/^PFNGLSAMPLEMASKIPROC glad_glSampleMaski;$/;"	v
glad_glSampleMaski	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSAMPLEMASKIPROC glad_glSampleMaski;$/;"	v
glad_glScaled	thirdparty/glfw/src/deps/glad.c	/^PFNGLSCALEDPROC glad_glScaled;$/;"	v
glad_glScaled	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSCALEDPROC glad_glScaled;$/;"	v
glad_glScalef	thirdparty/glfw/src/deps/glad.c	/^PFNGLSCALEFPROC glad_glScalef;$/;"	v
glad_glScalef	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSCALEFPROC glad_glScalef;$/;"	v
glad_glScissor	thirdparty/glfw/src/deps/glad.c	/^PFNGLSCISSORPROC glad_glScissor;$/;"	v
glad_glScissor	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSCISSORPROC glad_glScissor;$/;"	v
glad_glSecondaryColor3b	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3BPROC glad_glSecondaryColor3b;$/;"	v
glad_glSecondaryColor3b	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3BPROC glad_glSecondaryColor3b;$/;"	v
glad_glSecondaryColor3bv	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3BVPROC glad_glSecondaryColor3bv;$/;"	v
glad_glSecondaryColor3bv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3BVPROC glad_glSecondaryColor3bv;$/;"	v
glad_glSecondaryColor3d	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3DPROC glad_glSecondaryColor3d;$/;"	v
glad_glSecondaryColor3d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3DPROC glad_glSecondaryColor3d;$/;"	v
glad_glSecondaryColor3dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3DVPROC glad_glSecondaryColor3dv;$/;"	v
glad_glSecondaryColor3dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3DVPROC glad_glSecondaryColor3dv;$/;"	v
glad_glSecondaryColor3f	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3FPROC glad_glSecondaryColor3f;$/;"	v
glad_glSecondaryColor3f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3FPROC glad_glSecondaryColor3f;$/;"	v
glad_glSecondaryColor3fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3FVPROC glad_glSecondaryColor3fv;$/;"	v
glad_glSecondaryColor3fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3FVPROC glad_glSecondaryColor3fv;$/;"	v
glad_glSecondaryColor3i	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3IPROC glad_glSecondaryColor3i;$/;"	v
glad_glSecondaryColor3i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3IPROC glad_glSecondaryColor3i;$/;"	v
glad_glSecondaryColor3iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3IVPROC glad_glSecondaryColor3iv;$/;"	v
glad_glSecondaryColor3iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3IVPROC glad_glSecondaryColor3iv;$/;"	v
glad_glSecondaryColor3s	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3SPROC glad_glSecondaryColor3s;$/;"	v
glad_glSecondaryColor3s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3SPROC glad_glSecondaryColor3s;$/;"	v
glad_glSecondaryColor3sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3SVPROC glad_glSecondaryColor3sv;$/;"	v
glad_glSecondaryColor3sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3SVPROC glad_glSecondaryColor3sv;$/;"	v
glad_glSecondaryColor3ub	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3UBPROC glad_glSecondaryColor3ub;$/;"	v
glad_glSecondaryColor3ub	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3UBPROC glad_glSecondaryColor3ub;$/;"	v
glad_glSecondaryColor3ubv	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3UBVPROC glad_glSecondaryColor3ubv;$/;"	v
glad_glSecondaryColor3ubv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3UBVPROC glad_glSecondaryColor3ubv;$/;"	v
glad_glSecondaryColor3ui	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3UIPROC glad_glSecondaryColor3ui;$/;"	v
glad_glSecondaryColor3ui	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3UIPROC glad_glSecondaryColor3ui;$/;"	v
glad_glSecondaryColor3uiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3UIVPROC glad_glSecondaryColor3uiv;$/;"	v
glad_glSecondaryColor3uiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3UIVPROC glad_glSecondaryColor3uiv;$/;"	v
glad_glSecondaryColor3us	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3USPROC glad_glSecondaryColor3us;$/;"	v
glad_glSecondaryColor3us	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3USPROC glad_glSecondaryColor3us;$/;"	v
glad_glSecondaryColor3usv	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLOR3USVPROC glad_glSecondaryColor3usv;$/;"	v
glad_glSecondaryColor3usv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLOR3USVPROC glad_glSecondaryColor3usv;$/;"	v
glad_glSecondaryColorPointer	thirdparty/glfw/src/deps/glad.c	/^PFNGLSECONDARYCOLORPOINTERPROC glad_glSecondaryColorPointer;$/;"	v
glad_glSecondaryColorPointer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSECONDARYCOLORPOINTERPROC glad_glSecondaryColorPointer;$/;"	v
glad_glSelectBuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLSELECTBUFFERPROC glad_glSelectBuffer;$/;"	v
glad_glSelectBuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSELECTBUFFERPROC glad_glSelectBuffer;$/;"	v
glad_glShadeModel	thirdparty/glfw/src/deps/glad.c	/^PFNGLSHADEMODELPROC glad_glShadeModel;$/;"	v
glad_glShadeModel	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSHADEMODELPROC glad_glShadeModel;$/;"	v
glad_glShaderSource	thirdparty/glfw/src/deps/glad.c	/^PFNGLSHADERSOURCEPROC glad_glShaderSource;$/;"	v
glad_glShaderSource	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSHADERSOURCEPROC glad_glShaderSource;$/;"	v
glad_glStencilFunc	thirdparty/glfw/src/deps/glad.c	/^PFNGLSTENCILFUNCPROC glad_glStencilFunc;$/;"	v
glad_glStencilFunc	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSTENCILFUNCPROC glad_glStencilFunc;$/;"	v
glad_glStencilFuncSeparate	thirdparty/glfw/src/deps/glad.c	/^PFNGLSTENCILFUNCSEPARATEPROC glad_glStencilFuncSeparate;$/;"	v
glad_glStencilFuncSeparate	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSTENCILFUNCSEPARATEPROC glad_glStencilFuncSeparate;$/;"	v
glad_glStencilMask	thirdparty/glfw/src/deps/glad.c	/^PFNGLSTENCILMASKPROC glad_glStencilMask;$/;"	v
glad_glStencilMask	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSTENCILMASKPROC glad_glStencilMask;$/;"	v
glad_glStencilMaskSeparate	thirdparty/glfw/src/deps/glad.c	/^PFNGLSTENCILMASKSEPARATEPROC glad_glStencilMaskSeparate;$/;"	v
glad_glStencilMaskSeparate	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSTENCILMASKSEPARATEPROC glad_glStencilMaskSeparate;$/;"	v
glad_glStencilOp	thirdparty/glfw/src/deps/glad.c	/^PFNGLSTENCILOPPROC glad_glStencilOp;$/;"	v
glad_glStencilOp	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSTENCILOPPROC glad_glStencilOp;$/;"	v
glad_glStencilOpSeparate	thirdparty/glfw/src/deps/glad.c	/^PFNGLSTENCILOPSEPARATEPROC glad_glStencilOpSeparate;$/;"	v
glad_glStencilOpSeparate	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLSTENCILOPSEPARATEPROC glad_glStencilOpSeparate;$/;"	v
glad_glTexBuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXBUFFERPROC glad_glTexBuffer;$/;"	v
glad_glTexBuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXBUFFERPROC glad_glTexBuffer;$/;"	v
glad_glTexCoord1d	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD1DPROC glad_glTexCoord1d;$/;"	v
glad_glTexCoord1d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD1DPROC glad_glTexCoord1d;$/;"	v
glad_glTexCoord1dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD1DVPROC glad_glTexCoord1dv;$/;"	v
glad_glTexCoord1dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD1DVPROC glad_glTexCoord1dv;$/;"	v
glad_glTexCoord1f	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD1FPROC glad_glTexCoord1f;$/;"	v
glad_glTexCoord1f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD1FPROC glad_glTexCoord1f;$/;"	v
glad_glTexCoord1fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD1FVPROC glad_glTexCoord1fv;$/;"	v
glad_glTexCoord1fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD1FVPROC glad_glTexCoord1fv;$/;"	v
glad_glTexCoord1i	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD1IPROC glad_glTexCoord1i;$/;"	v
glad_glTexCoord1i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD1IPROC glad_glTexCoord1i;$/;"	v
glad_glTexCoord1iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD1IVPROC glad_glTexCoord1iv;$/;"	v
glad_glTexCoord1iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD1IVPROC glad_glTexCoord1iv;$/;"	v
glad_glTexCoord1s	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD1SPROC glad_glTexCoord1s;$/;"	v
glad_glTexCoord1s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD1SPROC glad_glTexCoord1s;$/;"	v
glad_glTexCoord1sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD1SVPROC glad_glTexCoord1sv;$/;"	v
glad_glTexCoord1sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD1SVPROC glad_glTexCoord1sv;$/;"	v
glad_glTexCoord2d	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD2DPROC glad_glTexCoord2d;$/;"	v
glad_glTexCoord2d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD2DPROC glad_glTexCoord2d;$/;"	v
glad_glTexCoord2dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD2DVPROC glad_glTexCoord2dv;$/;"	v
glad_glTexCoord2dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD2DVPROC glad_glTexCoord2dv;$/;"	v
glad_glTexCoord2f	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD2FPROC glad_glTexCoord2f;$/;"	v
glad_glTexCoord2f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD2FPROC glad_glTexCoord2f;$/;"	v
glad_glTexCoord2fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD2FVPROC glad_glTexCoord2fv;$/;"	v
glad_glTexCoord2fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD2FVPROC glad_glTexCoord2fv;$/;"	v
glad_glTexCoord2i	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD2IPROC glad_glTexCoord2i;$/;"	v
glad_glTexCoord2i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD2IPROC glad_glTexCoord2i;$/;"	v
glad_glTexCoord2iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD2IVPROC glad_glTexCoord2iv;$/;"	v
glad_glTexCoord2iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD2IVPROC glad_glTexCoord2iv;$/;"	v
glad_glTexCoord2s	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD2SPROC glad_glTexCoord2s;$/;"	v
glad_glTexCoord2s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD2SPROC glad_glTexCoord2s;$/;"	v
glad_glTexCoord2sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD2SVPROC glad_glTexCoord2sv;$/;"	v
glad_glTexCoord2sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD2SVPROC glad_glTexCoord2sv;$/;"	v
glad_glTexCoord3d	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD3DPROC glad_glTexCoord3d;$/;"	v
glad_glTexCoord3d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD3DPROC glad_glTexCoord3d;$/;"	v
glad_glTexCoord3dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD3DVPROC glad_glTexCoord3dv;$/;"	v
glad_glTexCoord3dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD3DVPROC glad_glTexCoord3dv;$/;"	v
glad_glTexCoord3f	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD3FPROC glad_glTexCoord3f;$/;"	v
glad_glTexCoord3f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD3FPROC glad_glTexCoord3f;$/;"	v
glad_glTexCoord3fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD3FVPROC glad_glTexCoord3fv;$/;"	v
glad_glTexCoord3fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD3FVPROC glad_glTexCoord3fv;$/;"	v
glad_glTexCoord3i	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD3IPROC glad_glTexCoord3i;$/;"	v
glad_glTexCoord3i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD3IPROC glad_glTexCoord3i;$/;"	v
glad_glTexCoord3iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD3IVPROC glad_glTexCoord3iv;$/;"	v
glad_glTexCoord3iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD3IVPROC glad_glTexCoord3iv;$/;"	v
glad_glTexCoord3s	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD3SPROC glad_glTexCoord3s;$/;"	v
glad_glTexCoord3s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD3SPROC glad_glTexCoord3s;$/;"	v
glad_glTexCoord3sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD3SVPROC glad_glTexCoord3sv;$/;"	v
glad_glTexCoord3sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD3SVPROC glad_glTexCoord3sv;$/;"	v
glad_glTexCoord4d	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD4DPROC glad_glTexCoord4d;$/;"	v
glad_glTexCoord4d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD4DPROC glad_glTexCoord4d;$/;"	v
glad_glTexCoord4dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD4DVPROC glad_glTexCoord4dv;$/;"	v
glad_glTexCoord4dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD4DVPROC glad_glTexCoord4dv;$/;"	v
glad_glTexCoord4f	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD4FPROC glad_glTexCoord4f;$/;"	v
glad_glTexCoord4f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD4FPROC glad_glTexCoord4f;$/;"	v
glad_glTexCoord4fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD4FVPROC glad_glTexCoord4fv;$/;"	v
glad_glTexCoord4fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD4FVPROC glad_glTexCoord4fv;$/;"	v
glad_glTexCoord4i	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD4IPROC glad_glTexCoord4i;$/;"	v
glad_glTexCoord4i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD4IPROC glad_glTexCoord4i;$/;"	v
glad_glTexCoord4iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD4IVPROC glad_glTexCoord4iv;$/;"	v
glad_glTexCoord4iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD4IVPROC glad_glTexCoord4iv;$/;"	v
glad_glTexCoord4s	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD4SPROC glad_glTexCoord4s;$/;"	v
glad_glTexCoord4s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD4SPROC glad_glTexCoord4s;$/;"	v
glad_glTexCoord4sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORD4SVPROC glad_glTexCoord4sv;$/;"	v
glad_glTexCoord4sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORD4SVPROC glad_glTexCoord4sv;$/;"	v
glad_glTexCoordPointer	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXCOORDPOINTERPROC glad_glTexCoordPointer;$/;"	v
glad_glTexCoordPointer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXCOORDPOINTERPROC glad_glTexCoordPointer;$/;"	v
glad_glTexEnvf	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXENVFPROC glad_glTexEnvf;$/;"	v
glad_glTexEnvf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXENVFPROC glad_glTexEnvf;$/;"	v
glad_glTexEnvfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXENVFVPROC glad_glTexEnvfv;$/;"	v
glad_glTexEnvfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXENVFVPROC glad_glTexEnvfv;$/;"	v
glad_glTexEnvi	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXENVIPROC glad_glTexEnvi;$/;"	v
glad_glTexEnvi	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXENVIPROC glad_glTexEnvi;$/;"	v
glad_glTexEnviv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXENVIVPROC glad_glTexEnviv;$/;"	v
glad_glTexEnviv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXENVIVPROC glad_glTexEnviv;$/;"	v
glad_glTexGend	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXGENDPROC glad_glTexGend;$/;"	v
glad_glTexGend	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXGENDPROC glad_glTexGend;$/;"	v
glad_glTexGendv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXGENDVPROC glad_glTexGendv;$/;"	v
glad_glTexGendv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXGENDVPROC glad_glTexGendv;$/;"	v
glad_glTexGenf	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXGENFPROC glad_glTexGenf;$/;"	v
glad_glTexGenf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXGENFPROC glad_glTexGenf;$/;"	v
glad_glTexGenfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXGENFVPROC glad_glTexGenfv;$/;"	v
glad_glTexGenfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXGENFVPROC glad_glTexGenfv;$/;"	v
glad_glTexGeni	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXGENIPROC glad_glTexGeni;$/;"	v
glad_glTexGeni	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXGENIPROC glad_glTexGeni;$/;"	v
glad_glTexGeniv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXGENIVPROC glad_glTexGeniv;$/;"	v
glad_glTexGeniv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXGENIVPROC glad_glTexGeniv;$/;"	v
glad_glTexImage1D	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXIMAGE1DPROC glad_glTexImage1D;$/;"	v
glad_glTexImage1D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXIMAGE1DPROC glad_glTexImage1D;$/;"	v
glad_glTexImage2D	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXIMAGE2DPROC glad_glTexImage2D;$/;"	v
glad_glTexImage2D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXIMAGE2DPROC glad_glTexImage2D;$/;"	v
glad_glTexImage2DMultisample	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXIMAGE2DMULTISAMPLEPROC glad_glTexImage2DMultisample;$/;"	v
glad_glTexImage2DMultisample	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXIMAGE2DMULTISAMPLEPROC glad_glTexImage2DMultisample;$/;"	v
glad_glTexImage3D	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXIMAGE3DPROC glad_glTexImage3D;$/;"	v
glad_glTexImage3D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXIMAGE3DPROC glad_glTexImage3D;$/;"	v
glad_glTexImage3DMultisample	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXIMAGE3DMULTISAMPLEPROC glad_glTexImage3DMultisample;$/;"	v
glad_glTexImage3DMultisample	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXIMAGE3DMULTISAMPLEPROC glad_glTexImage3DMultisample;$/;"	v
glad_glTexParameterIiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXPARAMETERIIVPROC glad_glTexParameterIiv;$/;"	v
glad_glTexParameterIiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXPARAMETERIIVPROC glad_glTexParameterIiv;$/;"	v
glad_glTexParameterIuiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXPARAMETERIUIVPROC glad_glTexParameterIuiv;$/;"	v
glad_glTexParameterIuiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXPARAMETERIUIVPROC glad_glTexParameterIuiv;$/;"	v
glad_glTexParameterf	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXPARAMETERFPROC glad_glTexParameterf;$/;"	v
glad_glTexParameterf	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXPARAMETERFPROC glad_glTexParameterf;$/;"	v
glad_glTexParameterfv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXPARAMETERFVPROC glad_glTexParameterfv;$/;"	v
glad_glTexParameterfv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXPARAMETERFVPROC glad_glTexParameterfv;$/;"	v
glad_glTexParameteri	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXPARAMETERIPROC glad_glTexParameteri;$/;"	v
glad_glTexParameteri	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXPARAMETERIPROC glad_glTexParameteri;$/;"	v
glad_glTexParameteriv	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXPARAMETERIVPROC glad_glTexParameteriv;$/;"	v
glad_glTexParameteriv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXPARAMETERIVPROC glad_glTexParameteriv;$/;"	v
glad_glTexSubImage1D	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXSUBIMAGE1DPROC glad_glTexSubImage1D;$/;"	v
glad_glTexSubImage1D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXSUBIMAGE1DPROC glad_glTexSubImage1D;$/;"	v
glad_glTexSubImage2D	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXSUBIMAGE2DPROC glad_glTexSubImage2D;$/;"	v
glad_glTexSubImage2D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXSUBIMAGE2DPROC glad_glTexSubImage2D;$/;"	v
glad_glTexSubImage3D	thirdparty/glfw/src/deps/glad.c	/^PFNGLTEXSUBIMAGE3DPROC glad_glTexSubImage3D;$/;"	v
glad_glTexSubImage3D	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTEXSUBIMAGE3DPROC glad_glTexSubImage3D;$/;"	v
glad_glTransformFeedbackVaryings	thirdparty/glfw/src/deps/glad.c	/^PFNGLTRANSFORMFEEDBACKVARYINGSPROC glad_glTransformFeedbackVaryings;$/;"	v
glad_glTransformFeedbackVaryings	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTRANSFORMFEEDBACKVARYINGSPROC glad_glTransformFeedbackVaryings;$/;"	v
glad_glTranslated	thirdparty/glfw/src/deps/glad.c	/^PFNGLTRANSLATEDPROC glad_glTranslated;$/;"	v
glad_glTranslated	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTRANSLATEDPROC glad_glTranslated;$/;"	v
glad_glTranslatef	thirdparty/glfw/src/deps/glad.c	/^PFNGLTRANSLATEFPROC glad_glTranslatef;$/;"	v
glad_glTranslatef	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLTRANSLATEFPROC glad_glTranslatef;$/;"	v
glad_glUniform1f	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM1FPROC glad_glUniform1f;$/;"	v
glad_glUniform1f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM1FPROC glad_glUniform1f;$/;"	v
glad_glUniform1fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM1FVPROC glad_glUniform1fv;$/;"	v
glad_glUniform1fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM1FVPROC glad_glUniform1fv;$/;"	v
glad_glUniform1i	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM1IPROC glad_glUniform1i;$/;"	v
glad_glUniform1i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM1IPROC glad_glUniform1i;$/;"	v
glad_glUniform1iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM1IVPROC glad_glUniform1iv;$/;"	v
glad_glUniform1iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM1IVPROC glad_glUniform1iv;$/;"	v
glad_glUniform1ui	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM1UIPROC glad_glUniform1ui;$/;"	v
glad_glUniform1ui	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM1UIPROC glad_glUniform1ui;$/;"	v
glad_glUniform1uiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM1UIVPROC glad_glUniform1uiv;$/;"	v
glad_glUniform1uiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM1UIVPROC glad_glUniform1uiv;$/;"	v
glad_glUniform2f	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM2FPROC glad_glUniform2f;$/;"	v
glad_glUniform2f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM2FPROC glad_glUniform2f;$/;"	v
glad_glUniform2fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM2FVPROC glad_glUniform2fv;$/;"	v
glad_glUniform2fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM2FVPROC glad_glUniform2fv;$/;"	v
glad_glUniform2i	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM2IPROC glad_glUniform2i;$/;"	v
glad_glUniform2i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM2IPROC glad_glUniform2i;$/;"	v
glad_glUniform2iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM2IVPROC glad_glUniform2iv;$/;"	v
glad_glUniform2iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM2IVPROC glad_glUniform2iv;$/;"	v
glad_glUniform2ui	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM2UIPROC glad_glUniform2ui;$/;"	v
glad_glUniform2ui	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM2UIPROC glad_glUniform2ui;$/;"	v
glad_glUniform2uiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM2UIVPROC glad_glUniform2uiv;$/;"	v
glad_glUniform2uiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM2UIVPROC glad_glUniform2uiv;$/;"	v
glad_glUniform3f	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM3FPROC glad_glUniform3f;$/;"	v
glad_glUniform3f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM3FPROC glad_glUniform3f;$/;"	v
glad_glUniform3fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM3FVPROC glad_glUniform3fv;$/;"	v
glad_glUniform3fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM3FVPROC glad_glUniform3fv;$/;"	v
glad_glUniform3i	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM3IPROC glad_glUniform3i;$/;"	v
glad_glUniform3i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM3IPROC glad_glUniform3i;$/;"	v
glad_glUniform3iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM3IVPROC glad_glUniform3iv;$/;"	v
glad_glUniform3iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM3IVPROC glad_glUniform3iv;$/;"	v
glad_glUniform3ui	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM3UIPROC glad_glUniform3ui;$/;"	v
glad_glUniform3ui	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM3UIPROC glad_glUniform3ui;$/;"	v
glad_glUniform3uiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM3UIVPROC glad_glUniform3uiv;$/;"	v
glad_glUniform3uiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM3UIVPROC glad_glUniform3uiv;$/;"	v
glad_glUniform4f	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM4FPROC glad_glUniform4f;$/;"	v
glad_glUniform4f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM4FPROC glad_glUniform4f;$/;"	v
glad_glUniform4fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM4FVPROC glad_glUniform4fv;$/;"	v
glad_glUniform4fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM4FVPROC glad_glUniform4fv;$/;"	v
glad_glUniform4i	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM4IPROC glad_glUniform4i;$/;"	v
glad_glUniform4i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM4IPROC glad_glUniform4i;$/;"	v
glad_glUniform4iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM4IVPROC glad_glUniform4iv;$/;"	v
glad_glUniform4iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM4IVPROC glad_glUniform4iv;$/;"	v
glad_glUniform4ui	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM4UIPROC glad_glUniform4ui;$/;"	v
glad_glUniform4ui	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM4UIPROC glad_glUniform4ui;$/;"	v
glad_glUniform4uiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORM4UIVPROC glad_glUniform4uiv;$/;"	v
glad_glUniform4uiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORM4UIVPROC glad_glUniform4uiv;$/;"	v
glad_glUniformBlockBinding	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORMBLOCKBINDINGPROC glad_glUniformBlockBinding;$/;"	v
glad_glUniformBlockBinding	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORMBLOCKBINDINGPROC glad_glUniformBlockBinding;$/;"	v
glad_glUniformMatrix2fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORMMATRIX2FVPROC glad_glUniformMatrix2fv;$/;"	v
glad_glUniformMatrix2fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORMMATRIX2FVPROC glad_glUniformMatrix2fv;$/;"	v
glad_glUniformMatrix2x3fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORMMATRIX2X3FVPROC glad_glUniformMatrix2x3fv;$/;"	v
glad_glUniformMatrix2x3fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORMMATRIX2X3FVPROC glad_glUniformMatrix2x3fv;$/;"	v
glad_glUniformMatrix2x4fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORMMATRIX2X4FVPROC glad_glUniformMatrix2x4fv;$/;"	v
glad_glUniformMatrix2x4fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORMMATRIX2X4FVPROC glad_glUniformMatrix2x4fv;$/;"	v
glad_glUniformMatrix3fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORMMATRIX3FVPROC glad_glUniformMatrix3fv;$/;"	v
glad_glUniformMatrix3fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORMMATRIX3FVPROC glad_glUniformMatrix3fv;$/;"	v
glad_glUniformMatrix3x2fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORMMATRIX3X2FVPROC glad_glUniformMatrix3x2fv;$/;"	v
glad_glUniformMatrix3x2fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORMMATRIX3X2FVPROC glad_glUniformMatrix3x2fv;$/;"	v
glad_glUniformMatrix3x4fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORMMATRIX3X4FVPROC glad_glUniformMatrix3x4fv;$/;"	v
glad_glUniformMatrix3x4fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORMMATRIX3X4FVPROC glad_glUniformMatrix3x4fv;$/;"	v
glad_glUniformMatrix4fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORMMATRIX4FVPROC glad_glUniformMatrix4fv;$/;"	v
glad_glUniformMatrix4fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORMMATRIX4FVPROC glad_glUniformMatrix4fv;$/;"	v
glad_glUniformMatrix4x2fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORMMATRIX4X2FVPROC glad_glUniformMatrix4x2fv;$/;"	v
glad_glUniformMatrix4x2fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORMMATRIX4X2FVPROC glad_glUniformMatrix4x2fv;$/;"	v
glad_glUniformMatrix4x3fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNIFORMMATRIX4X3FVPROC glad_glUniformMatrix4x3fv;$/;"	v
glad_glUniformMatrix4x3fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNIFORMMATRIX4X3FVPROC glad_glUniformMatrix4x3fv;$/;"	v
glad_glUnmapBuffer	thirdparty/glfw/src/deps/glad.c	/^PFNGLUNMAPBUFFERPROC glad_glUnmapBuffer;$/;"	v
glad_glUnmapBuffer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUNMAPBUFFERPROC glad_glUnmapBuffer;$/;"	v
glad_glUseProgram	thirdparty/glfw/src/deps/glad.c	/^PFNGLUSEPROGRAMPROC glad_glUseProgram;$/;"	v
glad_glUseProgram	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLUSEPROGRAMPROC glad_glUseProgram;$/;"	v
glad_glValidateProgram	thirdparty/glfw/src/deps/glad.c	/^PFNGLVALIDATEPROGRAMPROC glad_glValidateProgram;$/;"	v
glad_glValidateProgram	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVALIDATEPROGRAMPROC glad_glValidateProgram;$/;"	v
glad_glVertex2d	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX2DPROC glad_glVertex2d;$/;"	v
glad_glVertex2d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX2DPROC glad_glVertex2d;$/;"	v
glad_glVertex2dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX2DVPROC glad_glVertex2dv;$/;"	v
glad_glVertex2dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX2DVPROC glad_glVertex2dv;$/;"	v
glad_glVertex2f	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX2FPROC glad_glVertex2f;$/;"	v
glad_glVertex2f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX2FPROC glad_glVertex2f;$/;"	v
glad_glVertex2fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX2FVPROC glad_glVertex2fv;$/;"	v
glad_glVertex2fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX2FVPROC glad_glVertex2fv;$/;"	v
glad_glVertex2i	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX2IPROC glad_glVertex2i;$/;"	v
glad_glVertex2i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX2IPROC glad_glVertex2i;$/;"	v
glad_glVertex2iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX2IVPROC glad_glVertex2iv;$/;"	v
glad_glVertex2iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX2IVPROC glad_glVertex2iv;$/;"	v
glad_glVertex2s	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX2SPROC glad_glVertex2s;$/;"	v
glad_glVertex2s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX2SPROC glad_glVertex2s;$/;"	v
glad_glVertex2sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX2SVPROC glad_glVertex2sv;$/;"	v
glad_glVertex2sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX2SVPROC glad_glVertex2sv;$/;"	v
glad_glVertex3d	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX3DPROC glad_glVertex3d;$/;"	v
glad_glVertex3d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX3DPROC glad_glVertex3d;$/;"	v
glad_glVertex3dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX3DVPROC glad_glVertex3dv;$/;"	v
glad_glVertex3dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX3DVPROC glad_glVertex3dv;$/;"	v
glad_glVertex3f	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX3FPROC glad_glVertex3f;$/;"	v
glad_glVertex3f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX3FPROC glad_glVertex3f;$/;"	v
glad_glVertex3fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX3FVPROC glad_glVertex3fv;$/;"	v
glad_glVertex3fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX3FVPROC glad_glVertex3fv;$/;"	v
glad_glVertex3i	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX3IPROC glad_glVertex3i;$/;"	v
glad_glVertex3i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX3IPROC glad_glVertex3i;$/;"	v
glad_glVertex3iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX3IVPROC glad_glVertex3iv;$/;"	v
glad_glVertex3iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX3IVPROC glad_glVertex3iv;$/;"	v
glad_glVertex3s	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX3SPROC glad_glVertex3s;$/;"	v
glad_glVertex3s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX3SPROC glad_glVertex3s;$/;"	v
glad_glVertex3sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX3SVPROC glad_glVertex3sv;$/;"	v
glad_glVertex3sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX3SVPROC glad_glVertex3sv;$/;"	v
glad_glVertex4d	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX4DPROC glad_glVertex4d;$/;"	v
glad_glVertex4d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX4DPROC glad_glVertex4d;$/;"	v
glad_glVertex4dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX4DVPROC glad_glVertex4dv;$/;"	v
glad_glVertex4dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX4DVPROC glad_glVertex4dv;$/;"	v
glad_glVertex4f	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX4FPROC glad_glVertex4f;$/;"	v
glad_glVertex4f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX4FPROC glad_glVertex4f;$/;"	v
glad_glVertex4fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX4FVPROC glad_glVertex4fv;$/;"	v
glad_glVertex4fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX4FVPROC glad_glVertex4fv;$/;"	v
glad_glVertex4i	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX4IPROC glad_glVertex4i;$/;"	v
glad_glVertex4i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX4IPROC glad_glVertex4i;$/;"	v
glad_glVertex4iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX4IVPROC glad_glVertex4iv;$/;"	v
glad_glVertex4iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX4IVPROC glad_glVertex4iv;$/;"	v
glad_glVertex4s	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX4SPROC glad_glVertex4s;$/;"	v
glad_glVertex4s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX4SPROC glad_glVertex4s;$/;"	v
glad_glVertex4sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEX4SVPROC glad_glVertex4sv;$/;"	v
glad_glVertex4sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEX4SVPROC glad_glVertex4sv;$/;"	v
glad_glVertexAttrib1d	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB1DPROC glad_glVertexAttrib1d;$/;"	v
glad_glVertexAttrib1d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB1DPROC glad_glVertexAttrib1d;$/;"	v
glad_glVertexAttrib1dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB1DVPROC glad_glVertexAttrib1dv;$/;"	v
glad_glVertexAttrib1dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB1DVPROC glad_glVertexAttrib1dv;$/;"	v
glad_glVertexAttrib1f	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB1FPROC glad_glVertexAttrib1f;$/;"	v
glad_glVertexAttrib1f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB1FPROC glad_glVertexAttrib1f;$/;"	v
glad_glVertexAttrib1fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB1FVPROC glad_glVertexAttrib1fv;$/;"	v
glad_glVertexAttrib1fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB1FVPROC glad_glVertexAttrib1fv;$/;"	v
glad_glVertexAttrib1s	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB1SPROC glad_glVertexAttrib1s;$/;"	v
glad_glVertexAttrib1s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB1SPROC glad_glVertexAttrib1s;$/;"	v
glad_glVertexAttrib1sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB1SVPROC glad_glVertexAttrib1sv;$/;"	v
glad_glVertexAttrib1sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB1SVPROC glad_glVertexAttrib1sv;$/;"	v
glad_glVertexAttrib2d	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB2DPROC glad_glVertexAttrib2d;$/;"	v
glad_glVertexAttrib2d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB2DPROC glad_glVertexAttrib2d;$/;"	v
glad_glVertexAttrib2dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB2DVPROC glad_glVertexAttrib2dv;$/;"	v
glad_glVertexAttrib2dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB2DVPROC glad_glVertexAttrib2dv;$/;"	v
glad_glVertexAttrib2f	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB2FPROC glad_glVertexAttrib2f;$/;"	v
glad_glVertexAttrib2f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB2FPROC glad_glVertexAttrib2f;$/;"	v
glad_glVertexAttrib2fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB2FVPROC glad_glVertexAttrib2fv;$/;"	v
glad_glVertexAttrib2fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB2FVPROC glad_glVertexAttrib2fv;$/;"	v
glad_glVertexAttrib2s	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB2SPROC glad_glVertexAttrib2s;$/;"	v
glad_glVertexAttrib2s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB2SPROC glad_glVertexAttrib2s;$/;"	v
glad_glVertexAttrib2sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB2SVPROC glad_glVertexAttrib2sv;$/;"	v
glad_glVertexAttrib2sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB2SVPROC glad_glVertexAttrib2sv;$/;"	v
glad_glVertexAttrib3d	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB3DPROC glad_glVertexAttrib3d;$/;"	v
glad_glVertexAttrib3d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB3DPROC glad_glVertexAttrib3d;$/;"	v
glad_glVertexAttrib3dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB3DVPROC glad_glVertexAttrib3dv;$/;"	v
glad_glVertexAttrib3dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB3DVPROC glad_glVertexAttrib3dv;$/;"	v
glad_glVertexAttrib3f	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB3FPROC glad_glVertexAttrib3f;$/;"	v
glad_glVertexAttrib3f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB3FPROC glad_glVertexAttrib3f;$/;"	v
glad_glVertexAttrib3fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB3FVPROC glad_glVertexAttrib3fv;$/;"	v
glad_glVertexAttrib3fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB3FVPROC glad_glVertexAttrib3fv;$/;"	v
glad_glVertexAttrib3s	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB3SPROC glad_glVertexAttrib3s;$/;"	v
glad_glVertexAttrib3s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB3SPROC glad_glVertexAttrib3s;$/;"	v
glad_glVertexAttrib3sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB3SVPROC glad_glVertexAttrib3sv;$/;"	v
glad_glVertexAttrib3sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB3SVPROC glad_glVertexAttrib3sv;$/;"	v
glad_glVertexAttrib4Nbv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4NBVPROC glad_glVertexAttrib4Nbv;$/;"	v
glad_glVertexAttrib4Nbv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4NBVPROC glad_glVertexAttrib4Nbv;$/;"	v
glad_glVertexAttrib4Niv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4NIVPROC glad_glVertexAttrib4Niv;$/;"	v
glad_glVertexAttrib4Niv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4NIVPROC glad_glVertexAttrib4Niv;$/;"	v
glad_glVertexAttrib4Nsv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4NSVPROC glad_glVertexAttrib4Nsv;$/;"	v
glad_glVertexAttrib4Nsv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4NSVPROC glad_glVertexAttrib4Nsv;$/;"	v
glad_glVertexAttrib4Nub	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4NUBPROC glad_glVertexAttrib4Nub;$/;"	v
glad_glVertexAttrib4Nub	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4NUBPROC glad_glVertexAttrib4Nub;$/;"	v
glad_glVertexAttrib4Nubv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4NUBVPROC glad_glVertexAttrib4Nubv;$/;"	v
glad_glVertexAttrib4Nubv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4NUBVPROC glad_glVertexAttrib4Nubv;$/;"	v
glad_glVertexAttrib4Nuiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4NUIVPROC glad_glVertexAttrib4Nuiv;$/;"	v
glad_glVertexAttrib4Nuiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4NUIVPROC glad_glVertexAttrib4Nuiv;$/;"	v
glad_glVertexAttrib4Nusv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4NUSVPROC glad_glVertexAttrib4Nusv;$/;"	v
glad_glVertexAttrib4Nusv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4NUSVPROC glad_glVertexAttrib4Nusv;$/;"	v
glad_glVertexAttrib4bv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4BVPROC glad_glVertexAttrib4bv;$/;"	v
glad_glVertexAttrib4bv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4BVPROC glad_glVertexAttrib4bv;$/;"	v
glad_glVertexAttrib4d	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4DPROC glad_glVertexAttrib4d;$/;"	v
glad_glVertexAttrib4d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4DPROC glad_glVertexAttrib4d;$/;"	v
glad_glVertexAttrib4dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4DVPROC glad_glVertexAttrib4dv;$/;"	v
glad_glVertexAttrib4dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4DVPROC glad_glVertexAttrib4dv;$/;"	v
glad_glVertexAttrib4f	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4FPROC glad_glVertexAttrib4f;$/;"	v
glad_glVertexAttrib4f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4FPROC glad_glVertexAttrib4f;$/;"	v
glad_glVertexAttrib4fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4FVPROC glad_glVertexAttrib4fv;$/;"	v
glad_glVertexAttrib4fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4FVPROC glad_glVertexAttrib4fv;$/;"	v
glad_glVertexAttrib4iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4IVPROC glad_glVertexAttrib4iv;$/;"	v
glad_glVertexAttrib4iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4IVPROC glad_glVertexAttrib4iv;$/;"	v
glad_glVertexAttrib4s	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4SPROC glad_glVertexAttrib4s;$/;"	v
glad_glVertexAttrib4s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4SPROC glad_glVertexAttrib4s;$/;"	v
glad_glVertexAttrib4sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4SVPROC glad_glVertexAttrib4sv;$/;"	v
glad_glVertexAttrib4sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4SVPROC glad_glVertexAttrib4sv;$/;"	v
glad_glVertexAttrib4ubv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4UBVPROC glad_glVertexAttrib4ubv;$/;"	v
glad_glVertexAttrib4ubv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4UBVPROC glad_glVertexAttrib4ubv;$/;"	v
glad_glVertexAttrib4uiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4UIVPROC glad_glVertexAttrib4uiv;$/;"	v
glad_glVertexAttrib4uiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4UIVPROC glad_glVertexAttrib4uiv;$/;"	v
glad_glVertexAttrib4usv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIB4USVPROC glad_glVertexAttrib4usv;$/;"	v
glad_glVertexAttrib4usv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIB4USVPROC glad_glVertexAttrib4usv;$/;"	v
glad_glVertexAttribI1i	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI1IPROC glad_glVertexAttribI1i;$/;"	v
glad_glVertexAttribI1i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI1IPROC glad_glVertexAttribI1i;$/;"	v
glad_glVertexAttribI1iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI1IVPROC glad_glVertexAttribI1iv;$/;"	v
glad_glVertexAttribI1iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI1IVPROC glad_glVertexAttribI1iv;$/;"	v
glad_glVertexAttribI1ui	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI1UIPROC glad_glVertexAttribI1ui;$/;"	v
glad_glVertexAttribI1ui	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI1UIPROC glad_glVertexAttribI1ui;$/;"	v
glad_glVertexAttribI1uiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI1UIVPROC glad_glVertexAttribI1uiv;$/;"	v
glad_glVertexAttribI1uiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI1UIVPROC glad_glVertexAttribI1uiv;$/;"	v
glad_glVertexAttribI2i	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI2IPROC glad_glVertexAttribI2i;$/;"	v
glad_glVertexAttribI2i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI2IPROC glad_glVertexAttribI2i;$/;"	v
glad_glVertexAttribI2iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI2IVPROC glad_glVertexAttribI2iv;$/;"	v
glad_glVertexAttribI2iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI2IVPROC glad_glVertexAttribI2iv;$/;"	v
glad_glVertexAttribI2ui	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI2UIPROC glad_glVertexAttribI2ui;$/;"	v
glad_glVertexAttribI2ui	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI2UIPROC glad_glVertexAttribI2ui;$/;"	v
glad_glVertexAttribI2uiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI2UIVPROC glad_glVertexAttribI2uiv;$/;"	v
glad_glVertexAttribI2uiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI2UIVPROC glad_glVertexAttribI2uiv;$/;"	v
glad_glVertexAttribI3i	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI3IPROC glad_glVertexAttribI3i;$/;"	v
glad_glVertexAttribI3i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI3IPROC glad_glVertexAttribI3i;$/;"	v
glad_glVertexAttribI3iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI3IVPROC glad_glVertexAttribI3iv;$/;"	v
glad_glVertexAttribI3iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI3IVPROC glad_glVertexAttribI3iv;$/;"	v
glad_glVertexAttribI3ui	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI3UIPROC glad_glVertexAttribI3ui;$/;"	v
glad_glVertexAttribI3ui	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI3UIPROC glad_glVertexAttribI3ui;$/;"	v
glad_glVertexAttribI3uiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI3UIVPROC glad_glVertexAttribI3uiv;$/;"	v
glad_glVertexAttribI3uiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI3UIVPROC glad_glVertexAttribI3uiv;$/;"	v
glad_glVertexAttribI4bv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI4BVPROC glad_glVertexAttribI4bv;$/;"	v
glad_glVertexAttribI4bv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI4BVPROC glad_glVertexAttribI4bv;$/;"	v
glad_glVertexAttribI4i	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI4IPROC glad_glVertexAttribI4i;$/;"	v
glad_glVertexAttribI4i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI4IPROC glad_glVertexAttribI4i;$/;"	v
glad_glVertexAttribI4iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI4IVPROC glad_glVertexAttribI4iv;$/;"	v
glad_glVertexAttribI4iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI4IVPROC glad_glVertexAttribI4iv;$/;"	v
glad_glVertexAttribI4sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI4SVPROC glad_glVertexAttribI4sv;$/;"	v
glad_glVertexAttribI4sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI4SVPROC glad_glVertexAttribI4sv;$/;"	v
glad_glVertexAttribI4ubv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI4UBVPROC glad_glVertexAttribI4ubv;$/;"	v
glad_glVertexAttribI4ubv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI4UBVPROC glad_glVertexAttribI4ubv;$/;"	v
glad_glVertexAttribI4ui	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI4UIPROC glad_glVertexAttribI4ui;$/;"	v
glad_glVertexAttribI4ui	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI4UIPROC glad_glVertexAttribI4ui;$/;"	v
glad_glVertexAttribI4uiv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI4UIVPROC glad_glVertexAttribI4uiv;$/;"	v
glad_glVertexAttribI4uiv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI4UIVPROC glad_glVertexAttribI4uiv;$/;"	v
glad_glVertexAttribI4usv	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBI4USVPROC glad_glVertexAttribI4usv;$/;"	v
glad_glVertexAttribI4usv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBI4USVPROC glad_glVertexAttribI4usv;$/;"	v
glad_glVertexAttribIPointer	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBIPOINTERPROC glad_glVertexAttribIPointer;$/;"	v
glad_glVertexAttribIPointer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBIPOINTERPROC glad_glVertexAttribIPointer;$/;"	v
glad_glVertexAttribPointer	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXATTRIBPOINTERPROC glad_glVertexAttribPointer;$/;"	v
glad_glVertexAttribPointer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXATTRIBPOINTERPROC glad_glVertexAttribPointer;$/;"	v
glad_glVertexPointer	thirdparty/glfw/src/deps/glad.c	/^PFNGLVERTEXPOINTERPROC glad_glVertexPointer;$/;"	v
glad_glVertexPointer	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVERTEXPOINTERPROC glad_glVertexPointer;$/;"	v
glad_glViewport	thirdparty/glfw/src/deps/glad.c	/^PFNGLVIEWPORTPROC glad_glViewport;$/;"	v
glad_glViewport	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLVIEWPORTPROC glad_glViewport;$/;"	v
glad_glWaitSync	thirdparty/glfw/src/deps/glad.c	/^PFNGLWAITSYNCPROC glad_glWaitSync;$/;"	v
glad_glWaitSync	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWAITSYNCPROC glad_glWaitSync;$/;"	v
glad_glWindowPos2d	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS2DPROC glad_glWindowPos2d;$/;"	v
glad_glWindowPos2d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS2DPROC glad_glWindowPos2d;$/;"	v
glad_glWindowPos2dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS2DVPROC glad_glWindowPos2dv;$/;"	v
glad_glWindowPos2dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS2DVPROC glad_glWindowPos2dv;$/;"	v
glad_glWindowPos2f	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS2FPROC glad_glWindowPos2f;$/;"	v
glad_glWindowPos2f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS2FPROC glad_glWindowPos2f;$/;"	v
glad_glWindowPos2fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS2FVPROC glad_glWindowPos2fv;$/;"	v
glad_glWindowPos2fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS2FVPROC glad_glWindowPos2fv;$/;"	v
glad_glWindowPos2i	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS2IPROC glad_glWindowPos2i;$/;"	v
glad_glWindowPos2i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS2IPROC glad_glWindowPos2i;$/;"	v
glad_glWindowPos2iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS2IVPROC glad_glWindowPos2iv;$/;"	v
glad_glWindowPos2iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS2IVPROC glad_glWindowPos2iv;$/;"	v
glad_glWindowPos2s	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS2SPROC glad_glWindowPos2s;$/;"	v
glad_glWindowPos2s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS2SPROC glad_glWindowPos2s;$/;"	v
glad_glWindowPos2sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS2SVPROC glad_glWindowPos2sv;$/;"	v
glad_glWindowPos2sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS2SVPROC glad_glWindowPos2sv;$/;"	v
glad_glWindowPos3d	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS3DPROC glad_glWindowPos3d;$/;"	v
glad_glWindowPos3d	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS3DPROC glad_glWindowPos3d;$/;"	v
glad_glWindowPos3dv	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS3DVPROC glad_glWindowPos3dv;$/;"	v
glad_glWindowPos3dv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS3DVPROC glad_glWindowPos3dv;$/;"	v
glad_glWindowPos3f	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS3FPROC glad_glWindowPos3f;$/;"	v
glad_glWindowPos3f	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS3FPROC glad_glWindowPos3f;$/;"	v
glad_glWindowPos3fv	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS3FVPROC glad_glWindowPos3fv;$/;"	v
glad_glWindowPos3fv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS3FVPROC glad_glWindowPos3fv;$/;"	v
glad_glWindowPos3i	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS3IPROC glad_glWindowPos3i;$/;"	v
glad_glWindowPos3i	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS3IPROC glad_glWindowPos3i;$/;"	v
glad_glWindowPos3iv	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS3IVPROC glad_glWindowPos3iv;$/;"	v
glad_glWindowPos3iv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS3IVPROC glad_glWindowPos3iv;$/;"	v
glad_glWindowPos3s	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS3SPROC glad_glWindowPos3s;$/;"	v
glad_glWindowPos3s	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS3SPROC glad_glWindowPos3s;$/;"	v
glad_glWindowPos3sv	thirdparty/glfw/src/deps/glad.c	/^PFNGLWINDOWPOS3SVPROC glad_glWindowPos3sv;$/;"	v
glad_glWindowPos3sv	thirdparty/glfw/src/deps/glad/glad.h	/^GLAPI PFNGLWINDOWPOS3SVPROC glad_glWindowPos3sv;$/;"	v
glfw	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^} glfw;$/;"	v	typeref:struct:nk_glfw
glfwCreateCursor	thirdparty/glfw/src/input.c	/^GLFWAPI GLFWcursor* glfwCreateCursor(const GLFWimage* image, int xhot, int yhot)$/;"	f
glfwCreateStandardCursor	thirdparty/glfw/src/input.c	/^GLFWAPI GLFWcursor* glfwCreateStandardCursor(int shape)$/;"	f
glfwCreateWindow	thirdparty/glfw/src/window.c	/^GLFWAPI GLFWwindow* glfwCreateWindow(int width, int height,$/;"	f
glfwCreateWindowSurface	thirdparty/glfw/src/vulkan.c	/^GLFWAPI VkResult glfwCreateWindowSurface(VkInstance instance,$/;"	f
glfwDefaultWindowHints	thirdparty/glfw/src/window.c	/^void glfwDefaultWindowHints(void)$/;"	f
glfwDestroyCursor	thirdparty/glfw/src/input.c	/^GLFWAPI void glfwDestroyCursor(GLFWcursor* handle)$/;"	f
glfwDestroyWindow	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwDestroyWindow(GLFWwindow* handle)$/;"	f
glfwExtensionSupported	thirdparty/glfw/src/context.c	/^GLFWAPI int glfwExtensionSupported(const char* extension)$/;"	f
glfwFocusWindow	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwFocusWindow(GLFWwindow* handle)$/;"	f
glfwGetClipboardString	thirdparty/glfw/src/input.c	/^GLFWAPI const char* glfwGetClipboardString(GLFWwindow* handle)$/;"	f
glfwGetCurrentContext	thirdparty/glfw/src/context.c	/^GLFWAPI GLFWwindow* glfwGetCurrentContext(void)$/;"	f
glfwGetCursorPos	thirdparty/glfw/src/input.c	/^GLFWAPI void glfwGetCursorPos(GLFWwindow* handle, double* xpos, double* ypos)$/;"	f
glfwGetEGLContext	thirdparty/glfw/src/egl_context.c	/^GLFWAPI EGLContext glfwGetEGLContext(GLFWwindow* handle)$/;"	f
glfwGetEGLDisplay	thirdparty/glfw/src/egl_context.c	/^GLFWAPI EGLDisplay glfwGetEGLDisplay(void)$/;"	f
glfwGetEGLSurface	thirdparty/glfw/src/egl_context.c	/^GLFWAPI EGLSurface glfwGetEGLSurface(GLFWwindow* handle)$/;"	f
glfwGetError	thirdparty/glfw/src/init.c	/^GLFWAPI int glfwGetError(const char** description)$/;"	f
glfwGetFramebufferSize	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwGetFramebufferSize(GLFWwindow* handle, int* width, int* height)$/;"	f
glfwGetGLXContext	thirdparty/glfw/src/glx_context.c	/^GLFWAPI GLXContext glfwGetGLXContext(GLFWwindow* handle)$/;"	f
glfwGetGLXWindow	thirdparty/glfw/src/glx_context.c	/^GLFWAPI GLXWindow glfwGetGLXWindow(GLFWwindow* handle)$/;"	f
glfwGetGammaRamp	thirdparty/glfw/src/monitor.c	/^GLFWAPI const GLFWgammaramp* glfwGetGammaRamp(GLFWmonitor* handle)$/;"	f
glfwGetInputMode	thirdparty/glfw/src/input.c	/^GLFWAPI int glfwGetInputMode(GLFWwindow* handle, int mode)$/;"	f
glfwGetInstanceProcAddress	thirdparty/glfw/src/vulkan.c	/^GLFWAPI GLFWvkproc glfwGetInstanceProcAddress(VkInstance instance,$/;"	f
glfwGetJoystickAxes	thirdparty/glfw/src/input.c	/^GLFWAPI const float* glfwGetJoystickAxes(int jid, int* count)$/;"	f
glfwGetJoystickButtons	thirdparty/glfw/src/input.c	/^GLFWAPI const unsigned char* glfwGetJoystickButtons(int jid, int* count)$/;"	f
glfwGetJoystickHats	thirdparty/glfw/src/input.c	/^GLFWAPI const unsigned char* glfwGetJoystickHats(int jid, int* count)$/;"	f
glfwGetJoystickName	thirdparty/glfw/src/input.c	/^GLFWAPI const char* glfwGetJoystickName(int jid)$/;"	f
glfwGetKey	thirdparty/glfw/src/input.c	/^GLFWAPI int glfwGetKey(GLFWwindow* handle, int key)$/;"	f
glfwGetKeyName	thirdparty/glfw/src/input.c	/^GLFWAPI const char* glfwGetKeyName(int key, int scancode)$/;"	f
glfwGetKeyScancode	thirdparty/glfw/src/input.c	/^GLFWAPI int glfwGetKeyScancode(int key)$/;"	f
glfwGetMirDisplay	thirdparty/glfw/src/mir_window.c	/^GLFWAPI MirConnection* glfwGetMirDisplay(void)$/;"	f
glfwGetMirMonitor	thirdparty/glfw/src/mir_monitor.c	/^GLFWAPI int glfwGetMirMonitor(GLFWmonitor* handle)$/;"	f
glfwGetMirWindow	thirdparty/glfw/src/mir_window.c	/^GLFWAPI MirWindow* glfwGetMirWindow(GLFWwindow* handle)$/;"	f
glfwGetMonitorName	thirdparty/glfw/src/monitor.c	/^GLFWAPI const char* glfwGetMonitorName(GLFWmonitor* handle)$/;"	f
glfwGetMonitorPhysicalSize	thirdparty/glfw/src/monitor.c	/^GLFWAPI void glfwGetMonitorPhysicalSize(GLFWmonitor* handle, int* widthMM, int* heightMM)$/;"	f
glfwGetMonitorPos	thirdparty/glfw/src/monitor.c	/^GLFWAPI void glfwGetMonitorPos(GLFWmonitor* handle, int* xpos, int* ypos)$/;"	f
glfwGetMonitors	thirdparty/glfw/src/monitor.c	/^GLFWAPI GLFWmonitor** glfwGetMonitors(int* count)$/;"	f
glfwGetMouseButton	thirdparty/glfw/src/input.c	/^GLFWAPI int glfwGetMouseButton(GLFWwindow* handle, int button)$/;"	f
glfwGetOSMesaColorBuffer	thirdparty/glfw/src/osmesa_context.c	/^GLFWAPI int glfwGetOSMesaColorBuffer(GLFWwindow* handle, int* width,$/;"	f
glfwGetOSMesaContext	thirdparty/glfw/src/osmesa_context.c	/^GLFWAPI OSMesaContext glfwGetOSMesaContext(GLFWwindow* handle)$/;"	f
glfwGetOSMesaDepthBuffer	thirdparty/glfw/src/osmesa_context.c	/^GLFWAPI int glfwGetOSMesaDepthBuffer(GLFWwindow* handle,$/;"	f
glfwGetPhysicalDevicePresentationSupport	thirdparty/glfw/src/vulkan.c	/^GLFWAPI int glfwGetPhysicalDevicePresentationSupport(VkInstance instance,$/;"	f
glfwGetPrimaryMonitor	thirdparty/glfw/src/monitor.c	/^GLFWAPI GLFWmonitor* glfwGetPrimaryMonitor(void)$/;"	f
glfwGetProcAddress	thirdparty/glfw/src/context.c	/^GLFWAPI GLFWglproc glfwGetProcAddress(const char* procname)$/;"	f
glfwGetRequiredInstanceExtensions	thirdparty/glfw/src/vulkan.c	/^GLFWAPI const char** glfwGetRequiredInstanceExtensions(uint32_t* count)$/;"	f
glfwGetTime	thirdparty/glfw/src/input.c	/^GLFWAPI double glfwGetTime(void)$/;"	f
glfwGetTimerFrequency	thirdparty/glfw/src/input.c	/^GLFWAPI uint64_t glfwGetTimerFrequency(void)$/;"	f
glfwGetTimerValue	thirdparty/glfw/src/input.c	/^GLFWAPI uint64_t glfwGetTimerValue(void)$/;"	f
glfwGetVersion	thirdparty/glfw/src/init.c	/^GLFWAPI void glfwGetVersion(int* major, int* minor, int* rev)$/;"	f
glfwGetVersionString	thirdparty/glfw/src/init.c	/^GLFWAPI const char* glfwGetVersionString(void)$/;"	f
glfwGetVideoMode	thirdparty/glfw/src/monitor.c	/^GLFWAPI const GLFWvidmode* glfwGetVideoMode(GLFWmonitor* handle)$/;"	f
glfwGetVideoModes	thirdparty/glfw/src/monitor.c	/^GLFWAPI const GLFWvidmode* glfwGetVideoModes(GLFWmonitor* handle, int* count)$/;"	f
glfwGetWGLContext	thirdparty/glfw/src/wgl_context.c	/^GLFWAPI HGLRC glfwGetWGLContext(GLFWwindow* handle)$/;"	f
glfwGetWaylandDisplay	thirdparty/glfw/src/wl_window.c	/^GLFWAPI struct wl_display* glfwGetWaylandDisplay(void)$/;"	f
glfwGetWaylandMonitor	thirdparty/glfw/src/wl_monitor.c	/^GLFWAPI struct wl_output* glfwGetWaylandMonitor(GLFWmonitor* handle)$/;"	f
glfwGetWaylandWindow	thirdparty/glfw/src/wl_window.c	/^GLFWAPI struct wl_surface* glfwGetWaylandWindow(GLFWwindow* handle)$/;"	f
glfwGetWin32Adapter	thirdparty/glfw/src/win32_monitor.c	/^GLFWAPI const char* glfwGetWin32Adapter(GLFWmonitor* handle)$/;"	f
glfwGetWin32Monitor	thirdparty/glfw/src/win32_monitor.c	/^GLFWAPI const char* glfwGetWin32Monitor(GLFWmonitor* handle)$/;"	f
glfwGetWin32Window	thirdparty/glfw/src/win32_window.c	/^GLFWAPI HWND glfwGetWin32Window(GLFWwindow* handle)$/;"	f
glfwGetWindowAttrib	thirdparty/glfw/src/window.c	/^GLFWAPI int glfwGetWindowAttrib(GLFWwindow* handle, int attrib)$/;"	f
glfwGetWindowFrameSize	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwGetWindowFrameSize(GLFWwindow* handle,$/;"	f
glfwGetWindowMonitor	thirdparty/glfw/src/window.c	/^GLFWAPI GLFWmonitor* glfwGetWindowMonitor(GLFWwindow* handle)$/;"	f
glfwGetWindowPos	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwGetWindowPos(GLFWwindow* handle, int* xpos, int* ypos)$/;"	f
glfwGetWindowSize	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwGetWindowSize(GLFWwindow* handle, int* width, int* height)$/;"	f
glfwGetWindowUserPointer	thirdparty/glfw/src/window.c	/^GLFWAPI void* glfwGetWindowUserPointer(GLFWwindow* handle)$/;"	f
glfwGetX11Adapter	thirdparty/glfw/src/x11_monitor.c	/^GLFWAPI RRCrtc glfwGetX11Adapter(GLFWmonitor* handle)$/;"	f
glfwGetX11Display	thirdparty/glfw/src/x11_window.c	/^GLFWAPI Display* glfwGetX11Display(void)$/;"	f
glfwGetX11Monitor	thirdparty/glfw/src/x11_monitor.c	/^GLFWAPI RROutput glfwGetX11Monitor(GLFWmonitor* handle)$/;"	f
glfwGetX11Window	thirdparty/glfw/src/x11_window.c	/^GLFWAPI Window glfwGetX11Window(GLFWwindow* handle)$/;"	f
glfwHideWindow	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwHideWindow(GLFWwindow* handle)$/;"	f
glfwIconifyWindow	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwIconifyWindow(GLFWwindow* handle)$/;"	f
glfwInit	thirdparty/glfw/src/init.c	/^GLFWAPI int glfwInit(void)$/;"	f
glfwInitHint	thirdparty/glfw/src/init.c	/^GLFWAPI void glfwInitHint(int hint, int value)$/;"	f
glfwJoystickPresent	thirdparty/glfw/src/input.c	/^GLFWAPI int glfwJoystickPresent(int jid)$/;"	f
glfwMakeContextCurrent	thirdparty/glfw/src/context.c	/^GLFWAPI void glfwMakeContextCurrent(GLFWwindow* handle)$/;"	f
glfwMaximizeWindow	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwMaximizeWindow(GLFWwindow* handle)$/;"	f
glfwPollEvents	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwPollEvents(void)$/;"	f
glfwPostEmptyEvent	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwPostEmptyEvent(void)$/;"	f
glfwRequestWindowAttention	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwRequestWindowAttention(GLFWwindow* handle)$/;"	f
glfwRestoreWindow	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwRestoreWindow(GLFWwindow* handle)$/;"	f
glfwSetCharCallback	thirdparty/glfw/src/input.c	/^GLFWAPI GLFWcharfun glfwSetCharCallback(GLFWwindow* handle, GLFWcharfun cbfun)$/;"	f
glfwSetCharModsCallback	thirdparty/glfw/src/input.c	/^GLFWAPI GLFWcharmodsfun glfwSetCharModsCallback(GLFWwindow* handle, GLFWcharmodsfun cbfun)$/;"	f
glfwSetClipboardString	thirdparty/glfw/src/input.c	/^GLFWAPI void glfwSetClipboardString(GLFWwindow* handle, const char* string)$/;"	f
glfwSetCursor	thirdparty/glfw/src/input.c	/^GLFWAPI void glfwSetCursor(GLFWwindow* windowHandle, GLFWcursor* cursorHandle)$/;"	f
glfwSetCursorEnterCallback	thirdparty/glfw/src/input.c	/^GLFWAPI GLFWcursorenterfun glfwSetCursorEnterCallback(GLFWwindow* handle,$/;"	f
glfwSetCursorPos	thirdparty/glfw/src/input.c	/^GLFWAPI void glfwSetCursorPos(GLFWwindow* handle, double xpos, double ypos)$/;"	f
glfwSetCursorPosCallback	thirdparty/glfw/src/input.c	/^GLFWAPI GLFWcursorposfun glfwSetCursorPosCallback(GLFWwindow* handle,$/;"	f
glfwSetDropCallback	thirdparty/glfw/src/input.c	/^GLFWAPI GLFWdropfun glfwSetDropCallback(GLFWwindow* handle, GLFWdropfun cbfun)$/;"	f
glfwSetErrorCallback	thirdparty/glfw/src/init.c	/^GLFWAPI GLFWerrorfun glfwSetErrorCallback(GLFWerrorfun cbfun)$/;"	f
glfwSetFramebufferSizeCallback	thirdparty/glfw/src/window.c	/^GLFWAPI GLFWframebuffersizefun glfwSetFramebufferSizeCallback(GLFWwindow* handle,$/;"	f
glfwSetGamma	thirdparty/glfw/src/monitor.c	/^GLFWAPI void glfwSetGamma(GLFWmonitor* handle, float gamma)$/;"	f
glfwSetGammaRamp	thirdparty/glfw/src/monitor.c	/^GLFWAPI void glfwSetGammaRamp(GLFWmonitor* handle, const GLFWgammaramp* ramp)$/;"	f
glfwSetInputMode	thirdparty/glfw/src/input.c	/^GLFWAPI void glfwSetInputMode(GLFWwindow* handle, int mode, int value)$/;"	f
glfwSetJoystickCallback	thirdparty/glfw/src/input.c	/^GLFWAPI GLFWjoystickfun glfwSetJoystickCallback(GLFWjoystickfun cbfun)$/;"	f
glfwSetKeyCallback	thirdparty/glfw/src/input.c	/^GLFWAPI GLFWkeyfun glfwSetKeyCallback(GLFWwindow* handle, GLFWkeyfun cbfun)$/;"	f
glfwSetMonitorCallback	thirdparty/glfw/src/monitor.c	/^GLFWAPI GLFWmonitorfun glfwSetMonitorCallback(GLFWmonitorfun cbfun)$/;"	f
glfwSetMouseButtonCallback	thirdparty/glfw/src/input.c	/^GLFWAPI GLFWmousebuttonfun glfwSetMouseButtonCallback(GLFWwindow* handle,$/;"	f
glfwSetScrollCallback	thirdparty/glfw/src/input.c	/^GLFWAPI GLFWscrollfun glfwSetScrollCallback(GLFWwindow* handle,$/;"	f
glfwSetTime	thirdparty/glfw/src/input.c	/^GLFWAPI void glfwSetTime(double time)$/;"	f
glfwSetWindowAspectRatio	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwSetWindowAspectRatio(GLFWwindow* handle, int numer, int denom)$/;"	f
glfwSetWindowAttrib	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwSetWindowAttrib(GLFWwindow* handle, int attrib, int value)$/;"	f
glfwSetWindowCloseCallback	thirdparty/glfw/src/window.c	/^GLFWAPI GLFWwindowclosefun glfwSetWindowCloseCallback(GLFWwindow* handle,$/;"	f
glfwSetWindowFocusCallback	thirdparty/glfw/src/window.c	/^GLFWAPI GLFWwindowfocusfun glfwSetWindowFocusCallback(GLFWwindow* handle,$/;"	f
glfwSetWindowIcon	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwSetWindowIcon(GLFWwindow* handle,$/;"	f
glfwSetWindowIconifyCallback	thirdparty/glfw/src/window.c	/^GLFWAPI GLFWwindowiconifyfun glfwSetWindowIconifyCallback(GLFWwindow* handle,$/;"	f
glfwSetWindowMaximizeCallback	thirdparty/glfw/src/window.c	/^GLFWAPI GLFWwindowmaximizefun glfwSetWindowMaximizeCallback(GLFWwindow* handle,$/;"	f
glfwSetWindowMonitor	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwSetWindowMonitor(GLFWwindow* wh,$/;"	f
glfwSetWindowPos	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwSetWindowPos(GLFWwindow* handle, int xpos, int ypos)$/;"	f
glfwSetWindowPosCallback	thirdparty/glfw/src/window.c	/^GLFWAPI GLFWwindowposfun glfwSetWindowPosCallback(GLFWwindow* handle,$/;"	f
glfwSetWindowRefreshCallback	thirdparty/glfw/src/window.c	/^GLFWAPI GLFWwindowrefreshfun glfwSetWindowRefreshCallback(GLFWwindow* handle,$/;"	f
glfwSetWindowShouldClose	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwSetWindowShouldClose(GLFWwindow* handle, int value)$/;"	f
glfwSetWindowSize	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwSetWindowSize(GLFWwindow* handle, int width, int height)$/;"	f
glfwSetWindowSizeCallback	thirdparty/glfw/src/window.c	/^GLFWAPI GLFWwindowsizefun glfwSetWindowSizeCallback(GLFWwindow* handle,$/;"	f
glfwSetWindowSizeLimits	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwSetWindowSizeLimits(GLFWwindow* handle,$/;"	f
glfwSetWindowTitle	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwSetWindowTitle(GLFWwindow* handle, const char* title)$/;"	f
glfwSetWindowUserPointer	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwSetWindowUserPointer(GLFWwindow* handle, void* pointer)$/;"	f
glfwShowWindow	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwShowWindow(GLFWwindow* handle)$/;"	f
glfwSwapBuffers	thirdparty/glfw/src/context.c	/^GLFWAPI void glfwSwapBuffers(GLFWwindow* handle)$/;"	f
glfwSwapInterval	thirdparty/glfw/src/context.c	/^GLFWAPI void glfwSwapInterval(int interval)$/;"	f
glfwTerminate	thirdparty/glfw/src/init.c	/^GLFWAPI void glfwTerminate(void)$/;"	f
glfwVulkanSupported	thirdparty/glfw/src/vulkan.c	/^GLFWAPI int glfwVulkanSupported(void)$/;"	f
glfwWaitEvents	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwWaitEvents(void)$/;"	f
glfwWaitEventsTimeout	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwWaitEventsTimeout(double timeout)$/;"	f
glfwWindowHint	thirdparty/glfw/src/window.c	/^GLFWAPI void glfwWindowHint(int hint, int value)$/;"	f
glfwWindowShouldClose	thirdparty/glfw/src/window.c	/^GLFWAPI int glfwWindowShouldClose(GLFWwindow* handle)$/;"	f
glfw_aspect_process_state	lib/nil_aspects/src/glfw_aspect.cpp	/^glfw_aspect_process_state(Nil_ctx *ctx, void *data)$/;"	f
glfw_aspect_shutdown	lib/nil_aspects/src/glfw_aspect.cpp	/^glfw_aspect_shutdown(Nil_ctx *ctx, void *data)$/;"	f
glfw_aspect_startup	lib/nil_aspects/src/glfw_aspect.cpp	/^glfw_aspect_startup(Nil_ctx *ctx, void *data)$/;"	f
glfw_aspect_swap_buffer	lib/nil_aspects/src/glfw_aspect.cpp	/^glfw_aspect_swap_buffer(Nil_ctx *ctx, void *data)$/;"	f
glfw_aspect_tick	lib/nil_aspects/src/glfw_aspect.cpp	/^glfw_aspect_tick(Nil_ctx *ctx, void *data)$/;"	f
glfw_key_to_nil	lib/nil_aspects/src/glfw_aspect.cpp	/^glfw_key_to_nil(const int glfw_key)$/;"	f	namespace:__anon44
globalAlpha	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                             globalAlpha;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
global_alpha	thirdparty/glfw/src/deps/nuklear.h	/^    float global_alpha; \/* global alpha value *\/$/;"	m	struct:nk_convert_config
glx_get_proc_address	thirdparty/opengl/src/gl3w.cpp	/^static PFNGLXGETPROCADDRESSPROC glx_get_proc_address;$/;"	v	file:
glyf	thirdparty/glfw/src/deps/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo
glyf	thirdparty/stb/include/stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo
glyph_count	lib/nil/include/nil/resource/font.hpp	/^  uint32_t      glyph_count;$/;"	m	struct:Nil_font
glyph_count	thirdparty/glfw/src/deps/nuklear.h	/^    int glyph_count;$/;"	m	struct:nk_font_atlas
glyph_count	thirdparty/glfw/src/deps/nuklear.h	/^    nk_rune glyph_count;$/;"	m	struct:nk_baked_font
glyph_data	lib/nil/include/nil/resource/font.hpp	/^  uint32_t *glyph_data;$/;"	m	struct:Nil_font
glyph_data_count	lib/nil/include/nil/resource/font.hpp	/^  size_t    glyph_data_count;$/;"	m	struct:Nil_font
glyph_offset	thirdparty/glfw/src/deps/nuklear.h	/^    nk_rune glyph_offset;$/;"	m	struct:nk_baked_font
glyphs	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_font_glyph *glyphs;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_font_glyph
glyphs	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_font_glyph *glyphs;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_font_glyph
go_to_page_before	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int go_to_page_before(stb_vorbis *f, unsigned int limit_offset)$/;"	f	file:
go_to_page_before	thirdparty/stb/include/stb/stb_vorbis.c	/^static int go_to_page_before(stb_vorbis *f, unsigned int limit_offset)$/;"	f	file:
goal_crc	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32  goal_crc;    \/\/ expected crc if match$/;"	m	struct:__anon211	file:
goal_crc	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32  goal_crc;    \/\/ expected crc if match$/;"	m	struct:__anon124	file:
grab	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char grab;$/;"	m	struct:nk_mouse
grabbed	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char grabbed;$/;"	m	struct:nk_mouse
graph	lib/nil/src/internal_data/internal_data.hpp	/^  Nil::Graph::Data      *graph;$/;"	m	struct:Nil_ctx
graph_size_check	lib/nil/src/graph/graph.cpp	/^graph_size_check(const Nil::Graph::Data *graph)$/;"	f	namespace:Nil::Graph::__anon21
graph_tick_cb	lib/nil/src/graph/graph_data.hpp	/^  struct graph_tick_cb {$/;"	s	struct:Nil::Graph::Data
graph_type	lib/nil/src/graph/graph_data.hpp	/^  struct graph_type$/;"	s	struct:Nil::Graph::Data
graph_type_data	lib/nil/src/graph/graph_data.hpp	/^  lib::array<graph_type>    graph_type_data;$/;"	m	struct:Nil::Graph::Data
graphics_api	lib/rov/src/rov.cpp	/^  uint32_t graphics_api = 0;$/;"	m	struct:__anon48::ROV_data	file:
grbank	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *grbank;$/;"	m	class:TED
green	thirdparty/glfw/include/GLFW/glfw3.h	/^    unsigned short* green;$/;"	m	struct:GLFWgammaramp
greenBits	thirdparty/glfw/include/GLFW/glfw3.h	/^    int greenBits;$/;"	m	struct:GLFWvidmode
greenBits	thirdparty/glfw/src/internal.h	/^    int         greenBits;$/;"	m	struct:_GLFWfbconfig
grmode	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	int		rvsmode, grmode, ecmode;$/;"	m	class:TED
group_border	thirdparty/glfw/src/deps/nuklear.h	/^    float group_border;$/;"	m	struct:nk_style_window
group_border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color group_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
group_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 group_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
grow_factor	thirdparty/glfw/src/deps/nuklear.h	/^    float grow_factor;$/;"	m	struct:nk_buffer
gs_code	lib/nil/include/nil/resource/shader.hpp	/^  const char          *gs_code;$/;"	m	struct:Nil_shader
gsubrs	thirdparty/stb/include/stb/stb_truetype.h	/^   stbtt__buf gsubrs;                 \/\/ global charstring subroutines index$/;"	m	struct:stbtt_fontinfo
guess_word	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static void guess_word(darray *arg, char *word)$/;"	f	file:
guid	thirdparty/glfw/src/deps/mingw/dinput.h	/^	GUID			guid;$/;"	m	struct:DIEFFECTINFOA
guid	thirdparty/glfw/src/deps/mingw/dinput.h	/^	GUID			guid;$/;"	m	struct:DIEFFECTINFOW
guid	thirdparty/glfw/src/win32_joystick.h	/^    GUID                    guid;$/;"	m	struct:_GLFWjoystickWin32
guidActionMap	thirdparty/glfw/src/deps/mingw/dinput.h	/^	GUID		guidActionMap;$/;"	m	struct:_DIACTIONFORMATA
guidActionMap	thirdparty/glfw/src/deps/mingw/dinput.h	/^	GUID		guidActionMap;$/;"	m	struct:_DIACTIONFORMATW
guidClass	thirdparty/glfw/src/deps/mingw/dinput.h	/^	GUID    guidClass;$/;"	m	struct:DIPROPGUIDANDPATH
guidFFDriver	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID	guidFFDriver;$/;"	m	struct:DIDEVICEINSTANCEA
guidFFDriver	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID	guidFFDriver;$/;"	m	struct:DIDEVICEINSTANCEW
guidInstance	thirdparty/glfw/src/deps/mingw/dinput.h	/^	GUID		guidInstance;$/;"	m	struct:_DIACTIONA
guidInstance	thirdparty/glfw/src/deps/mingw/dinput.h	/^	GUID		guidInstance;$/;"	m	struct:_DIACTIONW
guidInstance	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID	guidInstance;$/;"	m	struct:DIDEVICEINSTANCEA
guidInstance	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID	guidInstance;$/;"	m	struct:DIDEVICEINSTANCEW
guidInstance	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID    guidInstance;$/;"	m	struct:DIDEVICEINSTANCE_DX3A
guidInstance	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID    guidInstance;$/;"	m	struct:DIDEVICEINSTANCE_DX3W
guidProduct	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID	guidProduct;$/;"	m	struct:DIDEVICEINSTANCEA
guidProduct	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID	guidProduct;$/;"	m	struct:DIDEVICEINSTANCEW
guidProduct	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID    guidProduct;$/;"	m	struct:DIDEVICEINSTANCE_DX3A
guidProduct	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID    guidProduct;$/;"	m	struct:DIDEVICEINSTANCE_DX3W
guidType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID	guidType;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
guidType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID	guidType;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
guidType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID    guidType;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3A
guidType	thirdparty/glfw/src/deps/mingw/dinput.h	/^    GUID    guidType;$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3W
h	thirdparty/glfw/src/deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart
h	thirdparty/glfw/src/deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state
h	thirdparty/glfw/src/deps/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
h	thirdparty/glfw/src/deps/nuklear.h	/^    nk_rp_coord w, h;$/;"	m	struct:nk_rp_rect
h	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle
h	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle_filled
h	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_image
h	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect
h	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_filled
h	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_multi_color
h	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_scissor
h	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_text
h	thirdparty/glfw/src/deps/nuklear.h	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap
h	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image
h	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect
h	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti
h	thirdparty/stb/include/stb/stb_image.h	/^      int h,v;$/;"	m	struct:__anon81::__anon82
h	thirdparty/stb/include/stb/stb_image.h	/^   int w,h;$/;"	m	struct:__anon92
h	thirdparty/stb/include/stb/stb_rect_pack.h	/^   stbrp_coord    w, h;$/;"	m	struct:stbrp_rect
h	thirdparty/stb/include/stb/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect
h	thirdparty/stb/include/stb/stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon103
h2	thirdparty/stb/include/stb/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon81::__anon82
hInstString	thirdparty/glfw/src/deps/mingw/dinput.h	/^	HINSTANCE	hInstString;$/;"	m	struct:_DIACTIONFORMATA
hInstString	thirdparty/glfw/src/deps/mingw/dinput.h	/^	HINSTANCE	hInstString;$/;"	m	struct:_DIACTIONFORMATW
h_oversample	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_range
h_oversample	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int   h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_context
h_oversample	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned char h_oversample, v_oversample; \/\/ don't set these, they're used internally$/;"	m	struct:__anon100
h_oversample	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned int   h_oversample, v_oversample;$/;"	m	struct:stbtt_pack_context
h_seg	thirdparty/stb/include/stb/stb_easy_font.h	/^    unsigned char h_seg;$/;"	m	struct:__anon136
ha	thirdparty/stb/include/stb/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon81::__anon82
halfCircleSegmentCount	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const int halfCircleSegmentCount = 64;$/;"	m	namespace:ImGuizmo	file:
half_pi	lib/math/include/math/general/constants.hpp	/^MATH_CONST_CONSTEXPR float           half_pi()     { return pi() * 0.5f;     }$/;"	f
half_tau	lib/math/include/math/general/constants.hpp	/^MATH_CONST_CONSTEXPR float           half_tau()    { return pi();            }$/;"	f
handle	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_user_font handle;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_user_font
handle	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image
handle	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    HANDLE                               handle;$/;"	m	struct:VkImportMemoryWin32HandleInfoNV
handle	thirdparty/glfw/src/egl_context.h	/^    void*           handle;$/;"	m	struct:_GLFWlibraryEGL
handle	thirdparty/glfw/src/egl_context.h	/^   EGLContext       handle;$/;"	m	struct:_GLFWcontextEGL
handle	thirdparty/glfw/src/glx_context.h	/^    GLXContext      handle;$/;"	m	struct:_GLFWcontextGLX
handle	thirdparty/glfw/src/glx_context.h	/^    void*           handle;$/;"	m	struct:_GLFWlibraryGLX
handle	thirdparty/glfw/src/internal.h	/^        void*           handle;$/;"	m	struct:_GLFWlibrary::__anon165
handle	thirdparty/glfw/src/internal.h	/^    uintptr_t   handle;$/;"	m	struct:_GLFWfbconfig
handle	thirdparty/glfw/src/osmesa_context.h	/^    OSMesaContext       handle;$/;"	m	struct:_GLFWcontextOSMesa
handle	thirdparty/glfw/src/osmesa_context.h	/^    void*           handle;$/;"	m	struct:_GLFWlibraryOSMesa
handle	thirdparty/glfw/src/posix_thread.h	/^    pthread_mutex_t handle;$/;"	m	struct:_GLFWmutexPOSIX
handle	thirdparty/glfw/src/wgl_context.h	/^    HGLRC     handle;$/;"	m	struct:_GLFWcontextWGL
handle	thirdparty/glfw/src/win32_platform.h	/^    HCURSOR             handle;$/;"	m	struct:_GLFWcursorWin32
handle	thirdparty/glfw/src/win32_platform.h	/^    HWND                handle;$/;"	m	struct:_GLFWwindowWin32
handle	thirdparty/glfw/src/x11_platform.h	/^        void*       handle;$/;"	m	struct:_GLFWlibraryX11::__anon150
handle	thirdparty/glfw/src/x11_platform.h	/^        void*       handle;$/;"	m	struct:_GLFWlibraryX11::__anon151
handle	thirdparty/glfw/src/x11_platform.h	/^        void*       handle;$/;"	m	struct:_GLFWlibraryX11::__anon152
handle	thirdparty/glfw/src/x11_platform.h	/^    Cursor handle;$/;"	m	struct:_GLFWcursorX11
handle	thirdparty/glfw/src/x11_platform.h	/^    Window          handle;$/;"	m	struct:_GLFWwindowX11
handle	thirdparty/remotery/src/Remotery.c	/^        HANDLE handle;$/;"	m	struct:Thread_t	file:
handle	thirdparty/soloud/include/soloud/soloud.h	/^	typedef unsigned int handle;$/;"	t	namespace:SoLoud
handleAbsEvent	thirdparty/glfw/src/linux_joystick.c	/^static void handleAbsEvent(_GLFWjoystick* js, int code, int value)$/;"	f	file:
handleConfigure	thirdparty/glfw/src/wl_window.c	/^static void handleConfigure(void* data,$/;"	f	file:
handleEnter	thirdparty/glfw/src/wl_window.c	/^static void handleEnter(void *data,$/;"	f	file:
handleEvent	thirdparty/glfw/src/mir_window.c	/^static void handleEvent(const MirEvent* event, _GLFWwindow* window)$/;"	f	file:
handleEvents	thirdparty/glfw/src/wl_window.c	/^handleEvents(int timeout)$/;"	f	file:
handleInput	thirdparty/glfw/src/mir_window.c	/^static void handleInput(const MirInputEvent* input_event, _GLFWwindow* window)$/;"	f	file:
handleKeyEvent	thirdparty/glfw/src/linux_joystick.c	/^static void handleKeyEvent(_GLFWjoystick* js, int code, int value)$/;"	f	file:
handleKeyEvent	thirdparty/glfw/src/mir_window.c	/^static void handleKeyEvent(const MirKeyboardEvent* key_event, _GLFWwindow* window)$/;"	f	file:
handleLeave	thirdparty/glfw/src/wl_window.c	/^static void handleLeave(void *data,$/;"	f	file:
handleLocked	thirdparty/glfw/src/wl_window.c	/^static void handleLocked(void* data,$/;"	f	file:
handlePing	thirdparty/glfw/src/wl_window.c	/^static void handlePing(void* data,$/;"	f	file:
handlePointerButton	thirdparty/glfw/src/mir_window.c	/^static void handlePointerButton(_GLFWwindow* window,$/;"	f	file:
handlePointerEvent	thirdparty/glfw/src/mir_window.c	/^static void handlePointerEvent(const MirPointerEvent* pointer_event,$/;"	f	file:
handlePointerMotion	thirdparty/glfw/src/mir_window.c	/^static void handlePointerMotion(_GLFWwindow* window,$/;"	f	file:
handlePopupDone	thirdparty/glfw/src/wl_window.c	/^static void handlePopupDone(void* data,$/;"	f	file:
handleRelativeMotion	thirdparty/glfw/src/wl_window.c	/^static void handleRelativeMotion(void* data,$/;"	f	file:
handleSelectionClear	thirdparty/glfw/src/x11_window.c	/^static void handleSelectionClear(XEvent* event)$/;"	f	file:
handleSelectionRequest	thirdparty/glfw/src/x11_window.c	/^static void handleSelectionRequest(XEvent* event)$/;"	f	file:
handleType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExternalMemoryHandleTypeFlagsNV    handleType;$/;"	m	struct:VkImportMemoryWin32HandleInfoNV
handleTypes	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExternalMemoryHandleTypeFlagsNV    handleTypes;$/;"	m	struct:VkExportMemoryAllocateInfoNV
handleTypes	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExternalMemoryHandleTypeFlagsNV    handleTypes;$/;"	m	struct:VkExternalMemoryImageCreateInfoNV
handleUnlocked	thirdparty/glfw/src/wl_window.c	/^static void handleUnlocked(void* data,$/;"	f	file:
has	lib/nil/src/interface/data/audio.cpp	/^has(const Node &node, const Audio &)$/;"	f	namespace:Nil::Data
has	lib/nil/src/interface/data/bounding_box.cpp	/^has(const Node &node, const Bounding_box &)$/;"	f	namespace:Nil::Data
has	lib/nil/src/interface/data/camera.cpp	/^has(const Node &node, const Camera &)$/;"	f	namespace:Nil::Data
has	lib/nil/src/interface/data/developer.cpp	/^has(const Node &node, const Developer &)$/;"	f	namespace:Nil::Data
has	lib/nil/src/interface/data/gamepad.cpp	/^has(const Node &node, const Gamepad &)$/;"	f	namespace:Nil::Data
has	lib/nil/src/interface/data/keyboard.cpp	/^has(const Node &node, const Keyboard &)$/;"	f	namespace:Nil::Data
has	lib/nil/src/interface/data/light.cpp	/^has(const Node &node, const Light &)$/;"	f	namespace:Nil::Data
has	lib/nil/src/interface/data/logic.cpp	/^has(const Node &node, const Logic &)$/;"	f	namespace:Nil::Data
has	lib/nil/src/interface/data/mouse.cpp	/^has(const Node &node, const Mouse &)$/;"	f	namespace:Nil::Data
has	lib/nil/src/interface/data/renderable.cpp	/^has(const Node &node, const Renderable &data)$/;"	f	namespace:Nil::Data
has	lib/nil/src/interface/data/renderable_text.cpp	/^has(const Node &node, const Renderable_text &data)$/;"	f	namespace:Nil::Data
has	lib/nil/src/interface/data/transform.cpp	/^has(const Node &node, const Transform &)$/;"	f	namespace:Nil::Data
has	lib/nil/src/interface/data/window.cpp	/^has(const Node &node, const Window &)$/;"	f	namespace:Nil::Data
hasEnded	thirdparty/soloud/src/audiosource/monotone/soloud_monotone.cpp	/^	bool MonotoneInstance::hasEnded()$/;"	f	class:SoLoud::MonotoneInstance
hasEnded	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt.cpp	/^	bool OpenmptInstance::hasEnded()$/;"	f	class:SoLoud::OpenmptInstance
hasEnded	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	bool SfxrInstance::hasEnded()$/;"	f	class:SoLoud::SfxrInstance
hasEnded	thirdparty/soloud/src/audiosource/speech/soloud_speech.cpp	/^	bool SpeechInstance::hasEnded()$/;"	f	class:SoLoud::SpeechInstance
hasEnded	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	bool TedSidInstance::hasEnded()$/;"	f	class:SoLoud::TedSidInstance
hasEnded	thirdparty/soloud/src/audiosource/vic/soloud_vic.cpp	/^	bool VicInstance::hasEnded()$/;"	f	class:SoLoud::VicInstance
hasEnded	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^	bool WavInstance::hasEnded()$/;"	f	class:SoLoud::WavInstance
hasEnded	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	bool WavStreamInstance::hasEnded()$/;"	f	class:SoLoud::WavStreamInstance
hasEnded	thirdparty/soloud/src/core/soloud_bus.cpp	/^	bool BusInstance::hasEnded()$/;"	f	class:SoLoud::BusInstance
hasPC	thirdparty/glfw/src/win32_platform.h	/^    GLFWbool            hasPC;$/;"	m	struct:_GLFWtimerWin32
hasUsableInputMethodStyle	thirdparty/glfw/src/x11_init.c	/^static GLFWbool hasUsableInputMethodStyle(void)$/;"	f	file:
has_arg	thirdparty/glfw/src/deps/getopt.h	/^  int has_arg;$/;"	m	struct:option
has_audio	lib/nil/src/interface/data/audio.cpp	/^has_audio(const Node &node)$/;"	f	namespace:Nil::Data
has_bounding_box	lib/nil/src/interface/data/bounding_box.cpp	/^has_bounding_box(const Node &node)$/;"	f	namespace:Nil::Data
has_camera	lib/nil/src/interface/data/camera.cpp	/^has_camera(const Node &node)$/;"	f	namespace:Nil::Data
has_component	lib/roa/include/roa/object.hpp	/^  has_component()$/;"	f	class:ROA::Object
has_component	lib/roa/src/component/component_engine.cpp	/^has_component(const uint32_t object_id, const uint32_t rtti_id)$/;"	f	namespace:ROA_detail
has_data	lib/roa/include/roa/object.hpp	/^  has_data() const$/;"	f	class:ROA::Object
has_developer	lib/nil/src/interface/data/developer.cpp	/^has_developer(const Node &node)$/;"	f	namespace:Nil::Data
has_ext	thirdparty/glfw/src/deps/glad.c	/^static int has_ext(const char *ext) {$/;"	f	file:
has_extension	lib/lib/include/lib/file.hpp	/^has_extension(const char *filename, const char *extension)$/;"	f	namespace:LIB_NS_NAME::file
has_gamepad	lib/nil/src/interface/data/gamepad.cpp	/^has_gamepad(const Node &node)$/;"	f	namespace:Nil::Data
has_initialized	lib/nil_aspects/include/aspect/renderer_aspect.hpp	/^  bool has_initialized = false;$/;"	m	struct:Nil_ext::ROV_Aspect::Data
has_keyboard	lib/nil/src/interface/data/keyboard.cpp	/^has_keyboard(const Node &node)$/;"	f	namespace:Nil::Data
has_light	lib/nil/src/interface/data/light.cpp	/^has_light(const Node &node)$/;"	f	namespace:Nil::Data
has_logic	lib/nil/src/interface/data/logic.cpp	/^has_logic(const Node &node)$/;"	f	namespace:Nil::Data
has_mouse	lib/nil/src/interface/data/mouse.cpp	/^has_mouse(const Node &node)$/;"	f	namespace:Nil::Data
has_next	thirdparty/tinydir/include/tinydir/tinydir.h	/^	int has_next;$/;"	m	struct:tinydir_dir
has_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^has_node_data(ROA::Object &obj, const ROA::Audio_player &data)$/;"	f	namespace:ROA_detail
has_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^has_node_data(ROA::Object &obj, const ROA::Bounding_box &data)$/;"	f	namespace:ROA_detail
has_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^has_node_data(ROA::Object &obj, const ROA::Camera &data)$/;"	f	namespace:ROA_detail
has_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^has_node_data(ROA::Object &obj, const ROA::Light &data)$/;"	f	namespace:ROA_detail
has_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^has_node_data(ROA::Object &obj, const ROA::Logic &data)$/;"	f	namespace:ROA_detail
has_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^has_node_data(ROA::Object &obj, const ROA::Renderable &data)$/;"	f	namespace:ROA_detail
has_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^has_node_data(ROA::Object &obj, const ROA::Transform &data)$/;"	f	namespace:ROA_detail
has_preferred_x	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char has_preferred_x;$/;"	m	struct:nk_text_edit
has_preferred_x	thirdparty/stb/include/stb/stb_textedit.h	/^   unsigned char has_preferred_x;$/;"	m	struct:__anon132
has_renderable	lib/nil/src/interface/data/renderable.cpp	/^has_renderable(const Node &node)$/;"	f	namespace:Nil::Data
has_renderable_text	lib/nil/src/interface/data/renderable_text.cpp	/^has_renderable_text(const Node &node)$/;"	f	namespace:Nil::Data
has_scrolling	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int has_scrolling;$/;"	m	struct:nk_panel
has_tag	lib/nil/src/interface/node.cpp	/^Node::has_tag(const char *tag) const$/;"	f	class:Nil::Node
has_transform	lib/nil/src/interface/data/transform.cpp	/^has_transform(const Node &)$/;"	f	namespace:Nil::Data
has_window	lib/nil/src/interface/data/window.cpp	/^has_window(const Node &node)$/;"	f	namespace:Nil::Data
hash_include_string	lib/lib/include/lib/string.hpp	/^hash_include_string(const std::string &string_to_search, const std::vector<std::string> &dirs_to_search)$/;"	f	namespace:LIB_NS_NAME::string
hatButtons	thirdparty/glfw/src/internal.h	/^    GLFWbool      hatButtons;$/;"	m	struct:_GLFWinitconfig
hatCount	thirdparty/glfw/src/internal.h	/^    int             hatCount;$/;"	m	struct:_GLFWjoystick
hats	thirdparty/glfw/src/cocoa_joystick.h	/^    CFMutableArrayRef   hats;$/;"	m	struct:_GLFWjoystickNS
hats	thirdparty/glfw/src/internal.h	/^    unsigned char*  hats;$/;"	m	struct:_GLFWjoystick
hats	thirdparty/glfw/src/linux_joystick.h	/^    int                     hats[4][2];$/;"	m	struct:_GLFWjoystickLinux
hcol	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char hcol[2], mcol[4], ecol[4], bmmcol[4], *cset;$/;"	m	class:TED
hd	thirdparty/stb/include/stb/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon81::__anon82
head	thirdparty/glfw/src/deps/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo
head	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_tt__hheap_chunk *head;$/;"	m	struct:nk_tt__hheap	typeref:struct:nk_tt__hheap::nk_tt__hheap_chunk
head	thirdparty/glfw/src/mir_platform.h	/^    TAILQ_HEAD(, EventNode) head;$/;"	m	struct:EventQueue
head	thirdparty/stb/include/stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo
head	thirdparty/stb/include/stb/stb_truetype.h	/^   struct stbtt__hheap_chunk *head;$/;"	m	struct:stbtt__hheap	typeref:struct:stbtt__hheap::stbtt__hheap_chunk
header	lib/lib/include/lib/memory.hpp	/^struct header$/;"	s	namespace:LIB_NS_NAME::mem
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_arc	typeref:struct:nk_command_arc::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_arc_filled	typeref:struct:nk_command_arc_filled::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_circle	typeref:struct:nk_command_circle::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_circle_filled	typeref:struct:nk_command_circle_filled::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_image	typeref:struct:nk_command_image::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_line	typeref:struct:nk_command_line::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polygon	typeref:struct:nk_command_polygon::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_command_polygon_filled::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polyline	typeref:struct:nk_command_polyline::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect	typeref:struct:nk_command_rect::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect_filled	typeref:struct:nk_command_rect_filled::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_scissor	typeref:struct:nk_command_scissor::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_text	typeref:struct:nk_command_text::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_command
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rect header;$/;"	m	struct:nk_popup_state	typeref:struct:nk_popup_state::nk_rect
header	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_window_header header;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_style_window_header
header	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^        WAVEHDR header[BUFFER_COUNT];$/;"	m	struct:SoLoud::SoLoudWinMMData	file:
header_height	thirdparty/glfw/src/deps/nuklear.h	/^    float header_height;$/;"	m	struct:nk_panel
heapIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                 heapIndex;$/;"	m	struct:VkMemoryType
height	lib/nil/include/nil/data/camera.hpp	/^  float height;$/;"	m	struct:Nil::Data::Camera
height	lib/nil/include/nil/data/window.hpp	/^  uint32_t  height;$/;"	m	struct:Nil::Data::Window
height	lib/nil/include/nil/resource/texture.hpp	/^  uint32_t height;      \/\/ If data_type == DATA then this is input.$/;"	m	struct:Nil_texture
height	lib/rov/src/ogl/rov_gl.hpp	/^  uint32_t height;$/;"	m	struct:ROV_Internal::rovGLFramebuffer
height	lib/rov/src/ogl/rov_gl.hpp	/^  uint32_t height;$/;"	m	struct:ROV_Internal::rovGLTexture
height	thirdparty/glfw/include/GLFW/glfw3.h	/^    int height;$/;"	m	struct:GLFWimage
height	thirdparty/glfw/include/GLFW/glfw3.h	/^    int height;$/;"	m	struct:GLFWvidmode
height	thirdparty/glfw/src/deps/nuklear.h	/^    float height;$/;"	m	struct:nk_baked_font
height	thirdparty/glfw/src/deps/nuklear.h	/^    float height;$/;"	m	struct:nk_command_text
height	thirdparty/glfw/src/deps/nuklear.h	/^    float height;$/;"	m	struct:nk_row_layout
height	thirdparty/glfw/src/deps/nuklear.h	/^    float height;$/;"	m	struct:nk_user_font
height	thirdparty/glfw/src/deps/nuklear.h	/^    float width, height;$/;"	m	struct:nk_user_font_glyph
height	thirdparty/glfw/src/deps/nuklear.h	/^    int   height;$/;"	m	struct:nk_tt_pack_context
height	thirdparty/glfw/src/deps/nuklear.h	/^    int height;$/;"	m	struct:nk_rp_context
height	thirdparty/glfw/src/deps/nuklear.h	/^   float height; \/* height of line *\/$/;"	m	struct:nk_text_find
height	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    int width, height;$/;"	m	struct:nk_glfw
height	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float    height;$/;"	m	struct:VkViewport
height	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                    height;$/;"	m	struct:VkFramebufferCreateInfo
height	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    height;$/;"	m	struct:VkExtent2D
height	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    height;$/;"	m	struct:VkExtent3D
height	thirdparty/glfw/src/internal.h	/^    int           height;$/;"	m	struct:_GLFWwndconfig
height	thirdparty/glfw/src/mir_platform.h	/^    int                     height;$/;"	m	struct:_GLFWwindowMir
height	thirdparty/glfw/src/null_platform.h	/^    int height;$/;"	m	struct:_GLFWwindowNull
height	thirdparty/glfw/src/osmesa_context.h	/^    int                 height;$/;"	m	struct:_GLFWcontextOSMesa
height	thirdparty/glfw/src/wl_platform.h	/^    int                         width, height;$/;"	m	struct:_GLFWcursorWayland
height	thirdparty/glfw/src/wl_platform.h	/^    int                         width, height;$/;"	m	struct:_GLFWwindowWayland
height	thirdparty/glfw/src/x11_platform.h	/^    int             width, height;$/;"	m	struct:_GLFWwindowX11
height	thirdparty/stb/include/stb/stb_rect_pack.h	/^   int height;$/;"	m	struct:stbrp_context
height	thirdparty/stb/include/stb/stb_textedit.h	/^   float height; \/\/ height of line$/;"	m	struct:__anon134
height	thirdparty/stb/include/stb/stb_truetype.h	/^   int   height;$/;"	m	struct:stbtt_pack_context
height	thirdparty/stb/include/stb/stb_truetype.h	/^   int width,height;$/;"	m	struct:__anon112
heightMM	thirdparty/glfw/src/internal.h	/^    int             widthMM, heightMM;$/;"	m	struct:_GLFWmonitor
helper	lib/lib/include/lib/helpers.hpp	/^namespace helper {$/;"	n	namespace:LIB_NS_NAME
helperWindowHandle	thirdparty/glfw/src/win32_platform.h	/^    HWND                helperWindowHandle;$/;"	m	struct:_GLFWlibraryWin32
helperWindowHandle	thirdparty/glfw/src/x11_platform.h	/^    Window          helperWindowHandle;$/;"	m	struct:_GLFWlibraryX11
helper_render_texture	lib/nil_aspects/src/imgui/imgui_resource.cpp	/^helper_render_texture($/;"	f	namespace:Nil::ImGUI::__anon46
heuristic	thirdparty/glfw/src/deps/nuklear.h	/^    int heuristic;$/;"	m	struct:nk_rp_context
heuristic	thirdparty/stb/include/stb/stb_rect_pack.h	/^   int heuristic;$/;"	m	struct:stbrp_context
hex_encoding_table	thirdparty/remotery/src/Remotery.c	/^static const char* hex_encoding_table = "0123456789ABCDEF";$/;"	v	file:
hhea	thirdparty/glfw/src/deps/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo
hhea	thirdparty/stb/include/stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo
hi_bitmap	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^inline void TED::hi_bitmap()$/;"	f	class:TED
hi_text	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^inline void TED::hi_text()$/;"	f	class:TED
hidManager	thirdparty/glfw/src/cocoa_platform.h	/^    IOHIDManagerRef     hidManager;$/;"	m	struct:_GLFWlibraryNS
hiddenCursorHandle	thirdparty/glfw/src/x11_platform.h	/^    Cursor          hiddenCursorHandle;$/;"	m	struct:_GLFWlibraryX11
highlight	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color highlight;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_chart_slot::nk_color
hinstance	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    HINSTANCE                       hinstance;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
hinstance	thirdparty/glfw/src/win32_platform.h	/^    HINSTANCE                       hinstance;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
hints	thirdparty/glfw/src/internal.h	/^    } hints;$/;"	m	struct:_GLFWlibrary	typeref:struct:_GLFWlibrary::__anon163
hmtx	thirdparty/glfw/src/deps/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo
hmtx	thirdparty/stb/include/stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo
horizontal_buffer	thirdparty/stb/include/stb/stb_image_resize.h	/^    float* horizontal_buffer;$/;"	m	struct:__anon72
horizontal_buffer_size	thirdparty/stb/include/stb/stb_image_resize.h	/^    int horizontal_buffer_size;$/;"	m	struct:__anon72
horizontal_coefficient_width	thirdparty/stb/include/stb/stb_image_resize.h	/^    int horizontal_coefficient_width;$/;"	m	struct:__anon72
horizontal_coefficients	thirdparty/stb/include/stb/stb_image_resize.h	/^    float* horizontal_coefficients;$/;"	m	struct:__anon72
horizontal_coefficients_size	thirdparty/stb/include/stb/stb_image_resize.h	/^    int horizontal_coefficients_size;$/;"	m	struct:__anon72
horizontal_contributors	thirdparty/stb/include/stb/stb_image_resize.h	/^    stbir__contributors* horizontal_contributors;$/;"	m	struct:__anon72
horizontal_contributors_size	thirdparty/stb/include/stb/stb_image_resize.h	/^    int horizontal_contributors_size;$/;"	m	struct:__anon72
horizontal_filter	thirdparty/stb/include/stb/stb_image_resize.h	/^    stbir_filter horizontal_filter;$/;"	m	struct:__anon72
horizontal_filter_pixel_margin	thirdparty/stb/include/stb/stb_image_resize.h	/^    int horizontal_filter_pixel_margin;$/;"	m	struct:__anon72
horizontal_filter_pixel_width	thirdparty/stb/include/stb/stb_image_resize.h	/^    int horizontal_filter_pixel_width;$/;"	m	struct:__anon72
horizontal_num_contributors	thirdparty/stb/include/stb/stb_image_resize.h	/^    int horizontal_num_contributors;$/;"	m	struct:__anon72
horizontal_scale	thirdparty/stb/include/stb/stb_image_resize.h	/^    float horizontal_scale;$/;"	m	struct:__anon72
horizontal_shift	thirdparty/stb/include/stb/stb_image_resize.h	/^    float horizontal_shift; \/\/ Units: output pixels$/;"	m	struct:__anon72
hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_style_item
hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_style_item
hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_style_item
hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_item
hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_item
hover_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item hover_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
hs	thirdparty/stb/include/stb/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon83
hshift	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int hshift, vshift;$/;"	m	class:TED
hsz	thirdparty/stb/include/stb/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon89
huff_ac	thirdparty/stb/include/stb/stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anon81
huff_dc	thirdparty/stb/include/stb/stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anon81
hwnd	thirdparty/glfw/src/deps/mingw/dinput.h	/^	HWND			hwnd;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA
hwnd	thirdparty/glfw/src/deps/mingw/dinput.h	/^	HWND			hwnd;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW
hwnd	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    HWND                            hwnd;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
hwnd	thirdparty/glfw/src/win32_platform.h	/^    HWND                            hwnd;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
i	thirdparty/glfw/src/deps/nuklear.h	/^    int i;$/;"	m	union:nk_property
i	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^      int i;$/;"	m	union:__anon216	file:
i	thirdparty/stb/include/stb/stb_vorbis.c	/^      int i;$/;"	m	union:__anon129	file:
ic	thirdparty/glfw/src/x11_platform.h	/^    XIC             ic;$/;"	m	struct:_GLFWwindowX11
iclass	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^  unsigned char iclass;$/;"	m	struct:INSTR
iconified	thirdparty/glfw/src/win32_platform.h	/^    GLFWbool            iconified;$/;"	m	struct:_GLFWwindowWin32
iconified	thirdparty/glfw/src/x11_platform.h	/^    GLFWbool        iconified;$/;"	m	struct:_GLFWwindowX11
iconify	thirdparty/glfw/src/internal.h	/^        GLFWwindowiconifyfun    iconify;$/;"	m	struct:_GLFWwindow::__anon162
id	lib/nil/include/nil/data/gamepad.hpp	/^  uint32_t id;$/;"	m	struct:Nil::Data::Gamepad
id	lib/nil/include/nil/data/keyboard.hpp	/^  uint32_t  id;$/;"	m	struct:Nil::Data::Keyboard
id	lib/nil/include/nil/data/mouse.hpp	/^  uint32_t id;$/;"	m	struct:Nil::Data::Mouse
id	lib/nil/include/nil/resource/audio.hpp	/^  uint32_t            id;$/;"	m	struct:Nil_audio_src
id	lib/nil/include/nil/resource/font.hpp	/^  uint32_t      id;$/;"	m	struct:Nil_font
id	lib/nil/include/nil/resource/material.hpp	/^  uint32_t              id;$/;"	m	struct:Nil_material
id	lib/nil/include/nil/resource/mesh.hpp	/^  uint32_t                id;$/;"	m	struct:Nil_mesh
id	lib/nil/include/nil/resource/shader.hpp	/^  uint32_t            id;$/;"	m	struct:Nil_shader
id	lib/nil/include/nil/resource/texture.hpp	/^  uint32_t            id;$/;"	m	struct:Nil_texture
id	thirdparty/glfw/include/GLFW/glfw3native.h	/^  typedef void* id;$/;"	t
id	thirdparty/glfw/src/cocoa_platform.h	/^typedef void* id;$/;"	t
id	thirdparty/glfw/src/deps/nuklear.h	/^    int id;$/;"	m	struct:nk_rp_rect
id	thirdparty/glfw/src/deps/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	m	union:__anon168
id	thirdparty/remotery/src/Remotery.c	/^    MessageID id;$/;"	m	struct:Message	file:
id	thirdparty/stb/include/stb/stb_image.h	/^      int id;$/;"	m	struct:__anon81::__anon82
id	thirdparty/stb/include/stb/stb_rect_pack.h	/^   int            id;$/;"	m	struct:stbrp_rect
id	thirdparty/stb/include/stb/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect
id	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint16 x,id;$/;"	m	struct:__anon126	file:
id_from_ptr	lib/lib/include/lib/key.hpp	/^id_from_ptr(const void *ptr)$/;"	f	namespace:LIB_NS_NAME::key
id_to_ptr	lib/lib/include/lib/key.hpp	/^id_to_ptr(const uint32_t id)$/;"	f	namespace:LIB_NS_NAME::key
idata	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon87
idct_block_kernel	thirdparty/stb/include/stb/stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anon81
ifft256	thirdparty/soloud/src/core/soloud_fft.cpp	/^        void ifft256(float *aBuffer)$/;"	f	namespace:SoLoud::FFT
illegalbank	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^inline void TED::illegalbank()$/;"	f	class:TED
ilog	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int ilog(int32 n)$/;"	f	file:
ilog	thirdparty/stb/include/stb/stb_vorbis.c	/^static int ilog(int32 n)$/;"	f	file:
im	thirdparty/glfw/src/x11_platform.h	/^    XIM             im;$/;"	m	struct:_GLFWlibraryX11
image	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_image image;$/;"	m	union:nk_style_item_data	typeref:struct:nk_style_item_data::nk_image
image	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImage                           image;$/;"	m	struct:VkSparseImageMemoryBindInfo
image	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImage                      image;$/;"	m	struct:VkSparseImageOpaqueMemoryBindInfo
image	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImage                    image;$/;"	m	struct:VkImageMemoryBarrier
image	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImage                    image;$/;"	m	struct:VkImageViewCreateInfo
image	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImage            image;$/;"	m	struct:VkDedicatedAllocationMemoryAllocateInfoNV
image	thirdparty/glfw/src/wl_platform.h	/^    struct wl_cursor_image*     image;$/;"	m	struct:_GLFWcursorWayland	typeref:struct:_GLFWcursorWayland::wl_cursor_image
imageArrayLayers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         imageArrayLayers;$/;"	m	struct:VkSwapchainCreateInfoKHR
imageBindCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                                    imageBindCount;$/;"	m	struct:VkBindSparseInfo
imageColorSpace	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkColorSpaceKHR                  imageColorSpace;$/;"	m	struct:VkSwapchainCreateInfoKHR
imageCubeArray	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    imageCubeArray;$/;"	m	struct:VkPhysicalDeviceFeatures
imageExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                        imageExtent;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
imageExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                       imageExtent;$/;"	m	struct:VkSwapchainCreateInfoKHR
imageExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent3D                  imageExtent;$/;"	m	struct:VkBufferImageCopy
imageFormat	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFormat                         imageFormat;$/;"	m	struct:VkSwapchainCreateInfoKHR
imageFormatProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageFormatProperties              imageFormatProperties;$/;"	m	struct:VkExternalImageFormatPropertiesNV
imageFormatProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageFormatProperties    imageFormatProperties;$/;"	m	struct:VkImageFormatProperties2KHR
imageGranularity	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent3D                  imageGranularity;$/;"	m	struct:VkSparseImageFormatProperties
imageLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageLayout    imageLayout;$/;"	m	struct:VkDescriptorImageInfo
imageMipTailFirstLod	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         imageMipTailFirstLod;$/;"	m	struct:VkSparseImageMemoryRequirements
imageMipTailOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize                     imageMipTailOffset;$/;"	m	struct:VkSparseImageMemoryRequirements
imageMipTailSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize                     imageMipTailSize;$/;"	m	struct:VkSparseImageMemoryRequirements
imageMipTailStride	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize                     imageMipTailStride;$/;"	m	struct:VkSparseImageMemoryRequirements
imageOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkOffset3D                  imageOffset;$/;"	m	struct:VkBufferImageCopy
imageOpaqueBindCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                                    imageOpaqueBindCount;$/;"	m	struct:VkBindSparseInfo
imageSharingMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSharingMode                    imageSharingMode;$/;"	m	struct:VkSwapchainCreateInfoKHR
imageSubresource	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageSubresourceLayers    imageSubresource;$/;"	m	struct:VkBufferImageCopy
imageType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageType              imageType;$/;"	m	struct:VkImageCreateInfo
imageUsage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageUsageFlags                imageUsage;$/;"	m	struct:VkSwapchainCreateInfoKHR
imageView	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageView      imageView;$/;"	m	struct:VkDescriptorImageInfo
image_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 image_padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_vec2
image_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 image_padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_vec2
imdct_step3_inner_r_loop	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void imdct_step3_inner_r_loop(int lim, float *e, int d0, int k_off, float *A, int k1)$/;"	f	file:
imdct_step3_inner_r_loop	thirdparty/stb/include/stb/stb_vorbis.c	/^static void imdct_step3_inner_r_loop(int lim, float *e, int d0, int k_off, float *A, int k1)$/;"	f	file:
imdct_step3_inner_s_loop	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void imdct_step3_inner_s_loop(int n, float *e, int i_off, int k_off, float *A, int a_off, int k0)$/;"	f	file:
imdct_step3_inner_s_loop	thirdparty/stb/include/stb/stb_vorbis.c	/^static void imdct_step3_inner_s_loop(int n, float *e, int i_off, int k_off, float *A, int a_off, int k0)$/;"	f	file:
imdct_step3_inner_s_loop_ld654	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void imdct_step3_inner_s_loop_ld654(int n, float *e, int i_off, float *A, int base_n)$/;"	f	file:
imdct_step3_inner_s_loop_ld654	thirdparty/stb/include/stb/stb_vorbis.c	/^static void imdct_step3_inner_s_loop_ld654(int n, float *e, int i_off, float *A, int base_n)$/;"	f	file:
imdct_step3_iter0_loop	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void imdct_step3_iter0_loop(int n, float *e, int i_off, int k_off, float *A)$/;"	f	file:
imdct_step3_iter0_loop	thirdparty/stb/include/stb/stb_vorbis.c	/^static void imdct_step3_iter0_loop(int n, float *e, int i_off, int k_off, float *A)$/;"	f	file:
img	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_image img;$/;"	m	struct:nk_command_image	typeref:struct:nk_command_image::nk_image
img	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_cursor::nk_image
img_buffer	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon76
img_buffer_end	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon76
img_buffer_original	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon76
img_buffer_original_end	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon76
img_comp	thirdparty/stb/include/stb/stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anon81	typeref:struct:__anon81::__anon82
img_h_max	thirdparty/stb/include/stb/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon81
img_mcu_h	thirdparty/stb/include/stb/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon81
img_mcu_w	thirdparty/stb/include/stb/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon81
img_mcu_x	thirdparty/stb/include/stb/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon81
img_mcu_y	thirdparty/stb/include/stb/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon81
img_n	thirdparty/stb/include/stb/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon76
img_out_n	thirdparty/stb/include/stb/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon76
img_v_max	thirdparty/stb/include/stb/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon81
img_x	thirdparty/stb/include/stb/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon76
img_y	thirdparty/stb/include/stb/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon76
implementationVersion	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    implementationVersion;$/;"	m	struct:VkLayerProperties
inactiveColor	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const ImU32 inactiveColor = 0x99999999;$/;"	m	namespace:ImGuizmo	file:
inactive_window_color	lib/nau/src/nau.cpp	/^  uint32_t inactive_window_color;$/;"	m	struct:__anon42::Nau_ctx	file:
inc_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_button
inc_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_button
inc_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_button
inc_symbol	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type inc_symbol;$/;"	m	struct:nk_style_scrollbar	typeref:enum:nk_style_scrollbar::nk_symbol_type
inc_symbol	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type inc_symbol;$/;"	m	struct:nk_style_slider	typeref:enum:nk_style_slider::nk_symbol_type
include_in_sort	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int include_in_sort(Codebook *c, uint8 len)$/;"	f	file:
include_in_sort	thirdparty/stb/include/stb/stb_vorbis.c	/^static int include_in_sort(Codebook *c, uint8 len)$/;"	f	file:
indent	thirdparty/glfw/src/deps/nuklear.h	/^    float indent;$/;"	m	struct:nk_style_tab
independentBlend	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    independentBlend;$/;"	m	struct:VkPhysicalDeviceFeatures
index	lib/nil/include/nil/resource/mesh.hpp	/^  uint32_t    *index;               \/\/ Internally copied$/;"	m	struct:Nil_mesh
index	lib/rov/src/rov_data.hpp	/^  uint32_t index;$/;"	m	struct:ROV_Internal::rovDrawCall
index	thirdparty/glfw/src/deps/nuklear.h	/^    int index;$/;"	m	struct:nk_chart_slot
index	thirdparty/glfw/src/deps/nuklear.h	/^    int index;$/;"	m	struct:nk_row_layout
index	thirdparty/glfw/src/win32_joystick.h	/^    DWORD                   index;$/;"	m	struct:_GLFWjoystickWin32
index	thirdparty/glfw/src/win32_platform.h	/^    DWORD               index;$/;"	m	struct:_GLFWtlsWin32
index	thirdparty/glfw/src/x11_platform.h	/^    int             index;$/;"	m	struct:_GLFWmonitorX11
index	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		unsigned int index;$/;"	m	class:SoLoud::Prg
indexCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    indexCount;$/;"	m	struct:VkDrawIndexedIndirectCommand
indexToLocFormat	thirdparty/glfw/src/deps/nuklear.h	/^    int indexToLocFormat; \/* format needed to map from glyph index to glyph *\/$/;"	m	struct:nk_tt_fontinfo
indexToLocFormat	thirdparty/stb/include/stb/stb_truetype.h	/^   int indexToLocFormat;              \/\/ format needed to map from glyph index to glyph$/;"	m	struct:stbtt_fontinfo
indexType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkIndexType                   indexType;$/;"	m	struct:VkObjectTableIndexBufferEntryNVX
index_count	lib/nil/include/nil/resource/mesh.hpp	/^  size_t      index_count;$/;"	m	struct:Nil_mesh
index_map	thirdparty/glfw/src/deps/nuklear.h	/^    int index_map; \/* a cmap mapping for our chosen character encoding *\/$/;"	m	struct:nk_tt_fontinfo
index_map	thirdparty/stb/include/stb/stb_truetype.h	/^   int index_map;                     \/\/ a cmap mapping for our chosen character encoding$/;"	m	struct:stbtt_fontinfo
indirectCommandsLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkIndirectCommandsLayoutNVX          indirectCommandsLayout;$/;"	m	struct:VkCmdProcessCommandsInfoNVX
indirectCommandsLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkIndirectCommandsLayoutNVX    indirectCommandsLayout;$/;"	m	struct:VkCmdReserveSpaceForCommandsInfoNVX
indirectCommandsTokenCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                             indirectCommandsTokenCount;$/;"	m	struct:VkCmdProcessCommandsInfoNVX
info	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_baked_font info;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_baked_font
info	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_tt_fontinfo info;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_font_bake_data::nk_tt_fontinfo
inherit_stuff	thirdparty/soloud/src/tools/codegen/main.cpp	/^void inherit_stuff()$/;"	f
inheritedQueries	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    inheritedQueries;$/;"	m	struct:VkPhysicalDeviceFeatures
init	lib/lib/include/lib/color.hpp	/^init(const float c1, const float c2, const float c3, const float c4)$/;"	f	namespace:LIB_NS_NAME::color
init	lib/lib/include/lib/color.hpp	/^init(const float channels[])$/;"	f	namespace:LIB_NS_NAME::color
init	lib/lib/include/lib/color.hpp	/^init(const uint32_t hex_components)$/;"	f	namespace:LIB_NS_NAME::color
init	lib/lib/include/lib/color.hpp	/^init(const uint8_t c1, const uint8_t c2, const uint8_t c3, const uint8_t c4)$/;"	f	namespace:LIB_NS_NAME::color
init	lib/lib/include/lib/color.hpp	/^init(const uint8_t channels[])$/;"	f	namespace:LIB_NS_NAME::color
init	thirdparty/glfw/src/internal.h	/^        _GLFWinitconfig init;$/;"	m	struct:_GLFWlibrary::__anon163
init	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^void klatt::init()$/;"	f	class:klatt
init	thirdparty/soloud/src/core/soloud.cpp	/^	result AlignedFloatBuffer::init(unsigned int aFloats)$/;"	f	class:SoLoud::AlignedFloatBuffer
init	thirdparty/soloud/src/core/soloud.cpp	/^	result Soloud::init(unsigned int aFlags, unsigned int aBackend, unsigned int aSamplerate, unsigned int aBufferSize, unsigned int aChannels)$/;"	f	class:SoLoud::Soloud
init	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSourceInstance3dData::init(AudioSource &aSource)$/;"	f	class:SoLoud::AudioSourceInstance3dData
init	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSourceInstance::init(AudioSource &aSource, int aPlayIndex)$/;"	f	class:SoLoud::AudioSourceInstance
init	thirdparty/soloud/src/core/soloud_thread.cpp	/^		void Pool::init(int aThreadCount)$/;"	f	class:SoLoud::Thread::Pool
initAddress	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	unsigned int initAddress;$/;"	m	class:CbmTune
initAddress	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	unsigned int initAddress;$/;"	m	struct:PsidHeader
initAntiresonator	thirdparty/soloud/src/audiosource/speech/resonator.cpp	/^void resonator::initAntiresonator($/;"	f	class:resonator
initExtensions	thirdparty/glfw/src/x11_init.c	/^static GLFWbool initExtensions(void)$/;"	f	file:
initFilter	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^void TED::initFilter(unsigned int sampleRate_, unsigned int filterOrder_)$/;"	f	class:TED
initParams	thirdparty/soloud/src/core/soloud_filter.cpp	/^	result FilterInstance::initParams(int aNumParams)$/;"	f	class:SoLoud::FilterInstance
initResonator	thirdparty/soloud/src/audiosource/speech/resonator.cpp	/^void resonator::initResonator($/;"	f	class:resonator
init_blocksize	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int init_blocksize(vorb *f, int b, int n)$/;"	f	file:
init_blocksize	thirdparty/stb/include/stb/stb_vorbis.c	/^static int init_blocksize(vorb *f, int b, int n)$/;"	f	file:
init_memory	lib/lib/include/lib/memory.hpp	/^init_memory()$/;"	f	namespace:LIB_NS_NAME::mem::__anon2
init_mode	thirdparty/glfw/src/deps/nuklear.h	/^    int init_mode;$/;"	m	struct:nk_rp_context
init_mode	thirdparty/stb/include/stb/stb_rect_pack.h	/^   int init_mode;$/;"	m	struct:stbrp_context
init_with_nil_transform	lib/nil_aspects/include/aspect/math_nil_extensions.hpp	/^init_with_nil_transform(const Nil::Data::Transform &trans)$/;"	f	namespace:math
initialDataSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    size_t                        initialDataSize;$/;"	m	struct:VkPipelineCacheCreateInfo
initialLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageLayout                   initialLayout;$/;"	m	struct:VkAttachmentDescription
initialLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageLayout            initialLayout;$/;"	m	struct:VkImageCreateInfo
initialize	lib/nil/src/graph/graph.cpp	/^initialize(Data *graph)$/;"	f	namespace:Nil::Graph
initialize_rov	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^initialize_rov(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
initialized	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char initialized;$/;"	m	struct:nk_text_edit
initialized	thirdparty/glfw/src/internal.h	/^    GLFWbool            initialized;$/;"	m	struct:_GLFWlibrary
initialized	thirdparty/stb/include/stb/stb_textedit.h	/^   unsigned char initialized;$/;"	m	struct:__anon132
initsynth	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^void klatt::initsynth(int aElementCount,unsigned char *aElement)$/;"	f	class:klatt
injectCodeToRAM	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::injectCodeToRAM(unsigned int address, unsigned char *from, size_t len)$/;"	f	class:TED
inline	thirdparty/glfw/src/deps/linmath.h	7;"	d
inline	thirdparty/soloud/src/tools/tedsid2dump/types.h	36;"	d
innerHash	thirdparty/remotery/src/Remotery.c	/^static void innerHash(unsigned int* result, unsigned int* w)$/;"	f	file:
inotify	thirdparty/glfw/src/linux_joystick.h	/^    int                     inotify;$/;"	m	struct:_GLFWlibraryLinux
input	lib/math/test/unit/general.cpp	/^  float input;$/;"	m	struct:__anon49::Math_general_test_data	file:
input	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_input input;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_input
inputAttachmentCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                        inputAttachmentCount;$/;"	m	struct:VkSubpassDescription
inputBuffer	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^static unsigned char inputBuffer[MAX_BUFFER_SIZE];$/;"	v	file:
inputChar	thirdparty/glfw/src/wl_init.c	/^static void inputChar(_GLFWwindow* window, uint32_t key)$/;"	f	file:
inputRate	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkVertexInputRate    inputRate;$/;"	m	struct:VkVertexInputBindingDescription
inputSource	thirdparty/glfw/src/cocoa_platform.h	/^    TISInputSourceRef   inputSource;$/;"	m	struct:_GLFWlibraryNS
input_data	thirdparty/stb/include/stb/stb_image_resize.h	/^    const void* input_data;$/;"	m	struct:__anon72
input_h	thirdparty/stb/include/stb/stb_image_resize.h	/^    int input_h;$/;"	m	struct:__anon72
input_handler	thirdparty/remotery/include/remotery/Remotery.h	/^    rmtInputHandlerPtr input_handler;$/;"	m	struct:rmtSettings
input_handler_context	thirdparty/remotery/include/remotery/Remotery.h	/^    void* input_handler_context;$/;"	m	struct:rmtSettings
input_stride_bytes	thirdparty/stb/include/stb/stb_image_resize.h	/^    int input_stride_bytes;$/;"	m	struct:__anon72
input_w	thirdparty/stb/include/stb/stb_image_resize.h	/^    int input_w;$/;"	m	struct:__anon72
ins	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^const instructions ins[256] =$/;"	v
insert	lib/lib/include/lib/array.hpp	/^  insert(const size_t i, const T &item)$/;"	f	class:LIB_NS_NAME::array
insert	lib/lib/include/lib/array.hpp	/^  insert(const size_t i, const T *start, const size_t count)$/;"	f	class:LIB_NS_NAME::array
insert	thirdparty/imgui/include/imgui/imgui.h	/^    inline iterator             insert(const_iterator it, const value_type& v)  { IM_ASSERT(it >= Data && it <= Data+Size); const ptrdiff_t off = it - Data; if (Size == Capacity) reserve(Capacity ? Capacity * 2 : 4); if (off < (int)Size) memmove(Data + off + 1, Data + off, ((size_t)Size - (size_t)off) * sizeof(value_type)); Data[off] = v; Size++; return Data + off; }$/;"	f	class:ImVector
insert_length	thirdparty/glfw/src/deps/nuklear.h	/^   short insert_length;$/;"	m	struct:nk_text_undo_record
insert_length	thirdparty/stb/include/stb/stb_textedit.h	/^   short           insert_length;$/;"	m	struct:__anon130
insert_mode	thirdparty/stb/include/stb/stb_textedit.h	/^   unsigned char insert_mode;$/;"	m	struct:__anon132
inspector_data	lib/nil_aspects/src/imgui/imgui_aspect.cpp	/^inspector_data(Nil::Node &node)$/;"	f	namespace:Nil_ext::ImGui_Aspect::__anon47
instance	lib/lib/include/lib/entity.hpp	/^instance(const uint32_t entity)$/;"	f	namespace:LIB_NS_NAME::entity
instance	thirdparty/glfw/src/wgl_context.h	/^    HINSTANCE                           instance;$/;"	m	struct:_GLFWlibraryWGL
instance	thirdparty/glfw/src/win32_platform.h	/^        HINSTANCE                       instance;$/;"	m	struct:_GLFWlibraryWin32::__anon153
instance	thirdparty/glfw/src/win32_platform.h	/^        HINSTANCE                       instance;$/;"	m	struct:_GLFWlibraryWin32::__anon154
instance	thirdparty/glfw/src/win32_platform.h	/^        HINSTANCE                       instance;$/;"	m	struct:_GLFWlibraryWin32::__anon155
instance	thirdparty/glfw/src/win32_platform.h	/^        HINSTANCE                       instance;$/;"	m	struct:_GLFWlibraryWin32::__anon156
instance	thirdparty/glfw/src/win32_platform.h	/^        HINSTANCE                       instance;$/;"	m	struct:_GLFWlibraryWin32::__anon157
instance	thirdparty/glfw/src/win32_platform.h	/^        HINSTANCE                       instance;$/;"	m	struct:_GLFWlibraryWin32::__anon158
instance	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	static TED *instance() { return instance_; };$/;"	f	class:TED
instanceCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    instanceCount;$/;"	m	struct:VkDrawIndexedIndirectCommand
instanceCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    instanceCount;$/;"	m	struct:VkDrawIndirectCommand
instance_	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^TED *TED::instance_;$/;"	m	class:TED	file:
instance_	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	static TED *instance_;$/;"	m	class:TED
instance_counter	lib/nil/src/graph/graph_data.hpp	/^  uint32_t                    instance_counter;$/;"	m	struct:Nil::Graph::Data
instructions	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^} instructions;$/;"	t	typeref:struct:INSTR
int16	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^typedef   signed short  int16;$/;"	t	file:
int16	thirdparty/stb/include/stb/stb_vorbis.c	/^typedef   signed short  int16;$/;"	t	file:
int16_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef signed __int16    int16_t;$/;"	t
int16_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef signed short      int16_t;$/;"	t
int16_t	thirdparty/glfw/src/deps/vulkan/vk_platform.h	/^        typedef signed   __int16 int16_t;$/;"	t
int32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    int32_t     int32[4];$/;"	m	union:VkClearColorValue
int32	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^typedef   signed int    int32;$/;"	t	file:
int32	thirdparty/stb/include/stb/stb_vorbis.c	/^typedef   signed int    int32;$/;"	t	file:
int32_t	thirdparty/glfw/src/deps/glad/glad.h	/^typedef __int32 int32_t;$/;"	t
int32_t	thirdparty/glfw/src/deps/glad/glad.h	/^typedef long int int32_t;$/;"	t
int32_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef signed __int32    int32_t;$/;"	t
int32_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef signed int        int32_t;$/;"	t
int32_t	thirdparty/glfw/src/deps/vulkan/vk_platform.h	/^        typedef signed   __int32 int32_t;$/;"	t
int32_t	thirdparty/opengl/include/GL/glcorearb.h	/^typedef __int32 int32_t;$/;"	t
int32_t	thirdparty/opengl/include/GL/glcorearb.h	/^typedef long int int32_t;$/;"	t
int64_t	thirdparty/glfw/src/deps/glad/glad.h	/^typedef __int64 int64_t;$/;"	t
int64_t	thirdparty/glfw/src/deps/glad/glad.h	/^typedef long int int64_t;$/;"	t
int64_t	thirdparty/glfw/src/deps/glad/glad.h	/^typedef long long int int64_t;$/;"	t
int64_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef signed __int64       int64_t;$/;"	t
int64_t	thirdparty/glfw/src/deps/vulkan/vk_platform.h	/^        typedef signed   __int64 int64_t;$/;"	t
int64_t	thirdparty/opengl/include/GL/glcorearb.h	/^typedef __int64 int64_t;$/;"	t
int64_t	thirdparty/opengl/include/GL/glcorearb.h	/^typedef long int int64_t;$/;"	t
int64_t	thirdparty/opengl/include/GL/glcorearb.h	/^typedef long long int int64_t;$/;"	t
int8	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^typedef   signed char   int8;$/;"	t	file:
int8	thirdparty/stb/include/stb/stb_vorbis.c	/^typedef   signed char   int8;$/;"	t	file:
int8_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef signed __int8     int8_t;$/;"	t
int8_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef signed char       int8_t;$/;"	t
int8_t	thirdparty/glfw/src/deps/vulkan/vk_platform.h	/^        typedef signed   __int8  int8_t;$/;"	t
int_fast16_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef int16_t   int_fast16_t;$/;"	t
int_fast32_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef int32_t   int_fast32_t;$/;"	t
int_fast64_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef int64_t   int_fast64_t;$/;"	t
int_fast8_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef int8_t    int_fast8_t;$/;"	t
int_least16_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef int16_t   int_least16_t;$/;"	t
int_least32_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef int32_t   int_least32_t;$/;"	t
int_least64_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef int64_t   int_least64_t;$/;"	t
int_least8_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef int8_t    int_least8_t;$/;"	t
integer_divide_table	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int8 integer_divide_table[DIVTAB_NUMER][DIVTAB_DENOM]; \/\/ 2KB$/;"	v
integer_divide_table	thirdparty/stb/include/stb/stb_vorbis.c	/^int8 integer_divide_table[DIVTAB_NUMER][DIVTAB_DENOM]; \/\/ 2KB$/;"	v
interlace_samples_float	thirdparty/soloud/src/core/soloud.cpp	/^	void interlace_samples_float(const float *aSourceBuffer, float *aDestBuffer, unsigned int aSamples, unsigned int aChannels)$/;"	f	namespace:SoLoud
interlace_samples_s16	thirdparty/soloud/src/core/soloud.cpp	/^	void interlace_samples_s16(const float *aSourceBuffer, short *aDestBuffer, unsigned int aSamples, unsigned int aChannels)$/;"	f	namespace:SoLoud
internal_quat	lib/math/include/math/quat/quat.hpp	/^  struct internal_quat$/;"	s	namespace:detail
interpolate	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^static float interpolate(Slope *aStartSlope, Slope *aEndSlope, float aMidValue, int aTime, int aDuration)$/;"	f	file:
interval	thirdparty/glfw/src/wgl_context.h	/^    int       interval;$/;"	m	struct:_GLFWcontextWGL
interval	thirdparty/glfw/src/x11_platform.h	/^        int         interval;$/;"	m	struct:_GLFWlibraryX11::__anon147
intmax_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef int64_t   intmax_t;$/;"	t
intptr_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef _W64 signed int   intptr_t;$/;"	t
intptr_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef signed __int64    intptr_t;$/;"	t
inverse_db_table	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static float inverse_db_table[256] =$/;"	v	file:
inverse_db_table	thirdparty/stb/include/stb/stb_vorbis.c	/^static float inverse_db_table[256] =$/;"	v	file:
inverse_mdct	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void inverse_mdct(float *buffer, int n, vorb *f, int blocktype)$/;"	f	file:
inverse_mdct	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^void inverse_mdct(float *buffer, int n, vorb *f, int blocktype)$/;"	f
inverse_mdct	thirdparty/stb/include/stb/stb_vorbis.c	/^static void inverse_mdct(float *buffer, int n, vorb *f, int blocktype)$/;"	f	file:
inverse_mdct	thirdparty/stb/include/stb/stb_vorbis.c	/^void inverse_mdct(float *buffer, int n, vorb *f, int blocktype)$/;"	f
inverse_mdct_slow	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^void inverse_mdct_slow(float *buffer, int n, vorb *f, int blocktype)$/;"	f
inverse_mdct_slow	thirdparty/stb/include/stb/stb_vorbis.c	/^void inverse_mdct_slow(float *buffer, int n, vorb *f, int blocktype)$/;"	f
invert	thirdparty/glfw/src/deps/nuklear.h	/^    int invert;$/;"	m	struct:nk_tt__edge
invert	thirdparty/stb/include/stb/stb_truetype.h	/^   int invert;$/;"	m	struct:stbtt__edge
invoke	thirdparty/catch/include/catch/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
io	thirdparty/stb/include/stb/stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anon76
io_user_data	thirdparty/stb/include/stb/stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anon76
iphase	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		int iphase;$/;"	m	class:SoLoud::SfxrInstance
ipp	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		int ipp;$/;"	m	class:SoLoud::SfxrInstance
irq_register	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned char *irq_register;$/;"	m	class:CPU
irq_sequence	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned char irq_sequence;$/;"	m	class:CPU
irqline	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int fastmode, irqline;$/;"	m	class:TED
isBitSet	thirdparty/glfw/src/linux_joystick.c	119;"	d	file:
isBitSet	thirdparty/glfw/src/linux_joystick.c	215;"	d	file:
isChannelEnabled	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	bool isChannelEnabled(unsigned int channel) {$/;"	f	class:TED
isCompositionEnabled	thirdparty/glfw/src/wgl_context.c	/^static GLFWbool isCompositionEnabled(void)$/;"	f	file:
isFalseTest	thirdparty/catch/include/catch/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFrameExtentsEvent	thirdparty/glfw/src/x11_window.c	/^static Bool isFrameExtentsEvent(Display* display, XEvent* event, XPointer pointer)$/;"	f	file:
isJustInfo	thirdparty/catch/include/catch/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isOk	thirdparty/catch/include/catch/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isPointerLocked	thirdparty/glfw/src/wl_window.c	/^static GLFWbool isPointerLocked(_GLFWwindow* window)$/;"	f	file:
isPsid	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int isPsid() { return psidFormat; };$/;"	f	class:TED
isSelectionEvent	thirdparty/glfw/src/x11_window.c	/^static Bool isSelectionEvent(Display* display, XEvent* event, XPointer pointer)$/;"	f	file:
isTrue	thirdparty/catch/include/catch/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isValidVoiceHandle	thirdparty/soloud/src/core/soloud_core_getters.cpp	/^	bool Soloud::isValidVoiceHandle(handle aVoiceHandle)$/;"	f	class:SoLoud::Soloud
isVoiceGroup	thirdparty/soloud/src/core/soloud_core_voicegroup.cpp	/^	bool Soloud::isVoiceGroup(handle aVoiceGroupHandle)$/;"	f	class:SoLoud::Soloud
isVoiceGroupEmpty	thirdparty/soloud/src/core/soloud_core_voicegroup.cpp	/^	bool Soloud::isVoiceGroupEmpty(handle aVoiceGroupHandle)$/;"	f	class:SoLoud::Soloud
is_aligned_16	lib/lib/include/lib/alignment.hpp	/^is_aligned_16(const uintptr_t addr)$/;"	f	namespace:LIB_NS_NAME::align
is_alphanumeric	thirdparty/soloud/src/tools/codegen/main.cpp	/^int is_alphanumeric(char c)$/;"	f
is_banned	thirdparty/soloud/src/tools/codegen/main.cpp	/^int is_banned(string aName)$/;"	f
is_between	lib/math/include/math/general/general.hpp	/^is_between(const float value, const float limit_a, const float limit_b)$/;"	f
is_blank	thirdparty/imgui/include/imgui/imgui.h	/^        static bool is_blank(char c) { return c == ' ' || c == '\\t'; }$/;"	f	struct:ImGuiTextFilter::TextRange
is_captured	lib/roa/src/interface/mouse.cpp	/^is_captured()$/;"	f	namespace:ROA::Mouse
is_clang_compiler	lib/lib/include/lib/platform.hpp	/^is_clang_compiler()$/;"	f	namespace:LIB_NS_NAME::platform
is_dir	thirdparty/tinydir/include/tinydir/tinydir.h	/^	int is_dir;$/;"	m	struct:tinydir_file
is_emscripten_platform	lib/lib/include/lib/platform.hpp	/^is_emscripten_platform()$/;"	f	namespace:LIB_NS_NAME::platform
is_gcc_compiler	lib/lib/include/lib/platform.hpp	/^is_gcc_compiler()$/;"	f	namespace:LIB_NS_NAME::platform
is_linux_platform	lib/lib/include/lib/platform.hpp	/^is_linux_platform()$/;"	f	namespace:LIB_NS_NAME::platform
is_mac_platform	lib/lib/include/lib/platform.hpp	/^is_mac_platform()$/;"	f	namespace:LIB_NS_NAME::platform
is_msvs_compiler	lib/lib/include/lib/platform.hpp	/^is_msvs_compiler()$/;"	f	namespace:LIB_NS_NAME::platform
is_near	lib/math/include/math/general/general.hpp	/^is_near(const float a, const float b, const float error_margin)$/;"	f
is_nix_platform	lib/lib/include/lib/platform.hpp	/^is_nix_platform()$/;"	f	namespace:LIB_NS_NAME::platform
is_pow_two	lib/math/include/math/general/general.hpp	/^is_pow_two(const uint32_t i)$/;"	f
is_power_of_two	lib/lib/include/lib/number.hpp	/^is_power_of_two(const uint32_t number)$/;"	f	namespace:LIB_NS_NAME::number
is_ref	lib/nil/src/interface/node.cpp	/^Node::is_ref() const$/;"	f	class:Nil::Node
is_ref	lib/roa/src/interface/object.cpp	/^Object::is_ref() const$/;"	f	class:ROA::Object
is_reg	thirdparty/tinydir/include/tinydir/tinydir.h	/^	int is_reg;$/;"	m	struct:tinydir_file
is_separator	thirdparty/imgui/src/imgui.cpp	/^static bool is_separator(unsigned int c)                                        { return ImCharIsSpace(c) || c==',' || c==';' || c=='(' || c==')' || c=='{' || c=='}' || c=='[' || c==']' || c=='|'; }$/;"	f	namespace:ImGuiStb
is_top_level	lib/nil/src/interface/node.cpp	/^Node::is_top_level() const$/;"	f	class:Nil::Node
is_valid	lib/nil/src/interface/node.cpp	/^Node::is_valid() const$/;"	f	class:Nil::Node
is_valid	lib/roa/src/interface/object.cpp	/^Object::is_valid() const$/;"	f	class:ROA::Object
is_valid	lib/roa/src/interface/resource.cpp	/^Resource::is_valid() const$/;"	f	class:ROA::Resource
is_valid_unquoted_key_char	thirdparty/json/src/json.c	/^static int is_valid_unquoted_key_char(const char c) {$/;"	f	file:
is_web_platform	lib/lib/include/lib/platform.hpp	/^is_web_platform()$/;"	f	namespace:LIB_NS_NAME::platform
is_whitespace	thirdparty/soloud/src/tools/codegen/main.cpp	/^int is_whitespace(char c)$/;"	f
is_whole_packet_present	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int is_whole_packet_present(stb_vorbis *f, int end_page)$/;"	f	file:
is_whole_packet_present	thirdparty/stb/include/stb/stb_vorbis.c	/^static int is_whole_packet_present(stb_vorbis *f, int end_page)$/;"	f	file:
is_windows_platform	lib/lib/include/lib/platform.hpp	/^is_windows_platform()$/;"	f	namespace:LIB_NS_NAME::platform
is_word_boundary	thirdparty/stb/include/stb/stb_textedit.h	/^static int is_word_boundary( STB_TEXTEDIT_STRING *_str, int _idx )$/;"	f
is_word_boundary_from_left	thirdparty/imgui/src/imgui.cpp	/^static int  is_word_boundary_from_left(STB_TEXTEDIT_STRING* obj, int idx)       { return idx > 0 ? (!is_separator( obj->Text[idx-1] ) && is_separator( obj->Text[idx] ) ) : 1; }$/;"	f	namespace:ImGuiStb
is_word_boundary_from_right	thirdparty/imgui/src/imgui.cpp	/^static int  is_word_boundary_from_right(STB_TEXTEDIT_STRING* obj, int idx)      { return idx > 0 ? (is_separator( obj->Text[idx-1] ) && !is_separator( obj->Text[idx] ) ) : 1; }$/;"	f	namespace:ImGuiStb
isconsonant	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static int isconsonant(int chr)$/;"	f	file:
ispixel	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^int ispixel(char ch, int x, int y)$/;"	f
isvowel	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static int isvowel(int chr)$/;"	f	file:
item	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rect item;$/;"	m	struct:nk_row_layout	typeref:struct:nk_row_layout::nk_rect
item_height	thirdparty/glfw/src/deps/nuklear.h	/^    float item_height;$/;"	m	struct:nk_row_layout
item_offset	thirdparty/glfw/src/deps/nuklear.h	/^    float item_offset;$/;"	m	struct:nk_row_layout
item_width	thirdparty/glfw/src/deps/nuklear.h	/^    float item_width;$/;"	m	struct:nk_row_layout
iter_54	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static __forceinline void iter_54(float *z)$/;"	f	file:
iter_54	thirdparty/stb/include/stb/stb_vorbis.c	/^static __forceinline void iter_54(float *z)$/;"	f	file:
iterator	thirdparty/imgui/include/imgui/imgui.h	/^    typedef value_type*         iterator;$/;"	t	class:ImVector
itoahex_s	thirdparty/remotery/src/Remotery.c	/^static void itoahex_s( char *dest, rsize_t dmax, rmtS32 value )$/;"	f	file:
jfif	thirdparty/stb/include/stb/stb_image.h	/^   int            jfif;$/;"	m	struct:__anon81
joyemu	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	bool joyemu;$/;"	m	class:TED
joystick	thirdparty/glfw/src/internal.h	/^        GLFWjoystickfun joystick;$/;"	m	struct:_GLFWlibrary::__anon166
joysticks	thirdparty/glfw/src/internal.h	/^    _GLFWjoystick       joysticks[GLFW_JOYSTICK_LAST + 1];$/;"	m	struct:_GLFWlibrary
json_arr_element	lib/nil/src/asset_loading/load_gltf.cpp	/^json_arr_element(const json_object_element_s *ele)$/;"	f	namespace:__anon41
json_array_element_s	thirdparty/json/include/json/json.h	/^struct json_array_element_s {$/;"	s
json_array_s	thirdparty/json/include/json/json.h	/^struct json_array_s {$/;"	s
json_get_array_size	thirdparty/json/src/json.c	/^static int json_get_array_size(struct json_parse_state_s *state) {$/;"	f	file:
json_get_key_size	thirdparty/json/src/json.c	/^static int json_get_key_size(struct json_parse_state_s *state) {$/;"	f	file:
json_get_number_size	thirdparty/json/src/json.c	/^static int json_get_number_size(struct json_parse_state_s *state) {$/;"	f	file:
json_get_object_size	thirdparty/json/src/json.c	/^static int json_get_object_size(struct json_parse_state_s *state,$/;"	f	file:
json_get_string_size	thirdparty/json/src/json.c	/^static int json_get_string_size(struct json_parse_state_s *state, size_t is_key) {$/;"	f	file:
json_get_value_size	thirdparty/json/src/json.c	/^static int json_get_value_size(struct json_parse_state_s *state,$/;"	f	file:
json_is_hexadecimal_digit	thirdparty/json/src/json.c	/^static int json_is_hexadecimal_digit(const char c) {$/;"	f	file:
json_number_s	thirdparty/json/include/json/json.h	/^struct json_number_s {$/;"	s
json_obj_element	lib/nil/src/asset_loading/load_gltf.cpp	/^json_obj_element(const json_value_s *obj)$/;"	f	namespace:__anon41
json_obj_name	lib/nil/src/asset_loading/load_gltf.cpp	/^json_obj_name(const json_object_element_s *ele, const char *name)$/;"	f	namespace:__anon41
json_object_element_s	thirdparty/json/include/json/json.h	/^struct json_object_element_s {$/;"	s
json_object_s	thirdparty/json/include/json/json.h	/^struct json_object_s {$/;"	s
json_parse	thirdparty/json/src/json.c	/^struct json_value_s *json_parse(const void *src, size_t src_size) {$/;"	f
json_parse_array	thirdparty/json/src/json.c	/^static void json_parse_array(struct json_parse_state_s *state,$/;"	f	file:
json_parse_error_allocator_failed	thirdparty/json/include/json/json.h	/^  json_parse_error_allocator_failed,$/;"	e	enum:json_parse_error_e
json_parse_error_e	thirdparty/json/include/json/json.h	/^enum json_parse_error_e {$/;"	g
json_parse_error_expected_colon	thirdparty/json/include/json/json.h	/^  json_parse_error_expected_colon,$/;"	e	enum:json_parse_error_e
json_parse_error_expected_comma_or_closing_bracket	thirdparty/json/include/json/json.h	/^  json_parse_error_expected_comma_or_closing_bracket,$/;"	e	enum:json_parse_error_e
json_parse_error_expected_opening_quote	thirdparty/json/include/json/json.h	/^  json_parse_error_expected_opening_quote,$/;"	e	enum:json_parse_error_e
json_parse_error_invalid_number_format	thirdparty/json/include/json/json.h	/^  json_parse_error_invalid_number_format,$/;"	e	enum:json_parse_error_e
json_parse_error_invalid_string	thirdparty/json/include/json/json.h	/^  json_parse_error_invalid_string,$/;"	e	enum:json_parse_error_e
json_parse_error_invalid_string_escape_sequence	thirdparty/json/include/json/json.h	/^  json_parse_error_invalid_string_escape_sequence,$/;"	e	enum:json_parse_error_e
json_parse_error_invalid_value	thirdparty/json/include/json/json.h	/^  json_parse_error_invalid_value,$/;"	e	enum:json_parse_error_e
json_parse_error_none	thirdparty/json/include/json/json.h	/^  json_parse_error_none = 0,$/;"	e	enum:json_parse_error_e
json_parse_error_premature_end_of_buffer	thirdparty/json/include/json/json.h	/^  json_parse_error_premature_end_of_buffer,$/;"	e	enum:json_parse_error_e
json_parse_error_unexpected_trailing_characters	thirdparty/json/include/json/json.h	/^  json_parse_error_unexpected_trailing_characters,$/;"	e	enum:json_parse_error_e
json_parse_error_unknown	thirdparty/json/include/json/json.h	/^  json_parse_error_unknown$/;"	e	enum:json_parse_error_e
json_parse_ex	thirdparty/json/src/json.c	/^json_parse_ex(const void *src, size_t src_size, size_t flags_bitset,$/;"	f
json_parse_flags_allow_c_style_comments	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_c_style_comments = 0x20,$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_equals_in_object	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_equals_in_object = 0x8,$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_global_object	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_global_object = 0x4,$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_hexadecimal_numbers	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_hexadecimal_numbers = 0x200,$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_inf_and_nan	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_inf_and_nan = 0x1000,$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_json5	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_json5 =$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_leading_or_trailing_decimal_point	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_leading_or_trailing_decimal_point = 0x800,$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_leading_plus_sign	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_leading_plus_sign = 0x400,$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_location_information	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_location_information = 0x80,$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_multi_line_strings	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_multi_line_strings = 0x2000,$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_no_commas	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_no_commas = 0x10,$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_simplified_json	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_simplified_json =$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_single_quoted_strings	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_single_quoted_strings = 0x100,$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_trailing_comma	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_trailing_comma = 0x1,$/;"	e	enum:json_parse_flags_e
json_parse_flags_allow_unquoted_keys	thirdparty/json/include/json/json.h	/^  json_parse_flags_allow_unquoted_keys = 0x2,$/;"	e	enum:json_parse_flags_e
json_parse_flags_default	thirdparty/json/include/json/json.h	/^  json_parse_flags_default = 0,$/;"	e	enum:json_parse_flags_e
json_parse_flags_deprecated	thirdparty/json/include/json/json.h	/^  json_parse_flags_deprecated = 0x40,$/;"	e	enum:json_parse_flags_e
json_parse_flags_e	thirdparty/json/include/json/json.h	/^enum json_parse_flags_e {$/;"	g
json_parse_key	thirdparty/json/src/json.c	/^static void json_parse_key(struct json_parse_state_s *state,$/;"	f	file:
json_parse_number	thirdparty/json/src/json.c	/^static void json_parse_number(struct json_parse_state_s *state,$/;"	f	file:
json_parse_object	thirdparty/json/src/json.c	/^static void json_parse_object(struct json_parse_state_s *state,$/;"	f	file:
json_parse_result_s	thirdparty/json/include/json/json.h	/^struct json_parse_result_s {$/;"	s
json_parse_state_s	thirdparty/json/src/json.c	/^struct json_parse_state_s {$/;"	s	file:
json_parse_string	thirdparty/json/src/json.c	/^static void json_parse_string(struct json_parse_state_s *state,$/;"	f	file:
json_parse_value	thirdparty/json/src/json.c	/^static void json_parse_value(struct json_parse_state_s *state,$/;"	f	file:
json_skip_all_skippables	thirdparty/json/src/json.c	/^static int json_skip_all_skippables(struct json_parse_state_s *state) {$/;"	f	file:
json_skip_c_style_comments	thirdparty/json/src/json.c	/^static int json_skip_c_style_comments(struct json_parse_state_s *state) {$/;"	f	file:
json_skip_whitespace	thirdparty/json/src/json.c	/^static int json_skip_whitespace(struct json_parse_state_s *state) {$/;"	f	file:
json_string_ex_s	thirdparty/json/include/json/json.h	/^struct json_string_ex_s {$/;"	s
json_string_s	thirdparty/json/include/json/json.h	/^struct json_string_s {$/;"	s
json_to_float	lib/nil/src/asset_loading/load_gltf.cpp	/^json_to_float(const json_value_s *val)$/;"	f	namespace:__anon41
json_to_int	lib/nil/src/asset_loading/load_gltf.cpp	/^json_to_int(const json_value_s *val)$/;"	f	namespace:__anon41
json_to_string	lib/nil/src/asset_loading/load_gltf.cpp	/^json_to_string(const json_value_s *val, size_t *data_length = nullptr)$/;"	f	namespace:__anon41
json_type_array	thirdparty/json/include/json/json.h	/^  json_type_array,$/;"	e	enum:json_type_e
json_type_e	thirdparty/json/include/json/json.h	/^enum json_type_e {$/;"	g
json_type_false	thirdparty/json/include/json/json.h	/^  json_type_false,$/;"	e	enum:json_type_e
json_type_null	thirdparty/json/include/json/json.h	/^  json_type_null$/;"	e	enum:json_type_e
json_type_number	thirdparty/json/include/json/json.h	/^  json_type_number,$/;"	e	enum:json_type_e
json_type_object	thirdparty/json/include/json/json.h	/^  json_type_object,$/;"	e	enum:json_type_e
json_type_string	thirdparty/json/include/json/json.h	/^  json_type_string,$/;"	e	enum:json_type_e
json_type_true	thirdparty/json/include/json/json.h	/^  json_type_true,$/;"	e	enum:json_type_e
json_value_ex_s	thirdparty/json/include/json/json.h	/^struct json_value_ex_s {$/;"	s
json_value_s	thirdparty/json/include/json/json.h	/^struct json_value_s {$/;"	s
json_write_minified	thirdparty/json/src/json.c	/^void *json_write_minified(const struct json_value_s *value, size_t *out_size) {$/;"	f
json_write_minified_array	thirdparty/json/src/json.c	/^static char *json_write_minified_array(const struct json_array_s *array,$/;"	f	file:
json_write_minified_get_array_size	thirdparty/json/src/json.c	/^static int json_write_minified_get_array_size(const struct json_array_s *array,$/;"	f	file:
json_write_minified_get_number_size	thirdparty/json/src/json.c	/^json_write_minified_get_number_size(const struct json_number_s *number,$/;"	f	file:
json_write_minified_get_object_size	thirdparty/json/src/json.c	/^json_write_minified_get_object_size(const struct json_object_s *object,$/;"	f	file:
json_write_minified_get_string_size	thirdparty/json/src/json.c	/^json_write_minified_get_string_size(const struct json_string_s *string,$/;"	f	file:
json_write_minified_get_value_size	thirdparty/json/src/json.c	/^static int json_write_minified_get_value_size(const struct json_value_s *value,$/;"	f	file:
json_write_minified_number	thirdparty/json/src/json.c	/^static char *json_write_minified_number(const struct json_number_s *number,$/;"	f	file:
json_write_minified_object	thirdparty/json/src/json.c	/^static char *json_write_minified_object(const struct json_object_s *object,$/;"	f	file:
json_write_minified_string	thirdparty/json/src/json.c	/^static char *json_write_minified_string(const struct json_string_s *string,$/;"	f	file:
json_write_minified_value	thirdparty/json/src/json.c	/^static char *json_write_minified_value(const struct json_value_s *value,$/;"	f	file:
json_write_pretty	thirdparty/json/src/json.c	/^void *json_write_pretty(const struct json_value_s *value, const char *indent,$/;"	f
json_write_pretty_array	thirdparty/json/src/json.c	/^static char *json_write_pretty_array(const struct json_array_s *array,$/;"	f	file:
json_write_pretty_get_array_size	thirdparty/json/src/json.c	/^static int json_write_pretty_get_array_size(const struct json_array_s *array,$/;"	f	file:
json_write_pretty_get_number_size	thirdparty/json/src/json.c	/^static int json_write_pretty_get_number_size(const struct json_number_s *number,$/;"	f	file:
json_write_pretty_get_object_size	thirdparty/json/src/json.c	/^static int json_write_pretty_get_object_size(const struct json_object_s *object,$/;"	f	file:
json_write_pretty_get_string_size	thirdparty/json/src/json.c	/^static int json_write_pretty_get_string_size(const struct json_string_s *string,$/;"	f	file:
json_write_pretty_get_value_size	thirdparty/json/src/json.c	/^static int json_write_pretty_get_value_size(const struct json_value_s *value,$/;"	f	file:
json_write_pretty_number	thirdparty/json/src/json.c	/^static char *json_write_pretty_number(const struct json_number_s *number,$/;"	f	file:
json_write_pretty_object	thirdparty/json/src/json.c	/^static char *json_write_pretty_object(const struct json_object_s *object,$/;"	f	file:
json_write_pretty_string	thirdparty/json/src/json.c	/^static char *json_write_pretty_string(const struct json_string_s *string,$/;"	f	file:
json_write_pretty_value	thirdparty/json/src/json.c	/^static char *json_write_pretty_value(const struct json_value_s *value,$/;"	f	file:
kPropertyUnicodeKeyLayoutData	thirdparty/glfw/src/cocoa_platform.h	/^        CFStringRef     kPropertyUnicodeKeyLayoutData;$/;"	m	struct:_GLFWlibraryNS::__anon142
kTISPropertyUnicodeKeyLayoutData	thirdparty/glfw/src/cocoa_platform.h	71;"	d
kern	thirdparty/glfw/src/deps/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo
kern	thirdparty/stb/include/stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo
kernal	thirdparty/soloud/src/tools/tedsid2dump/roms.h	/^unsigned char kernal[]={$/;"	v
kernel	thirdparty/stb/include/stb/stb_image_resize.h	/^    stbir__kernel_fn* kernel;$/;"	m	struct:__anon70
key	lib/lib/include/lib/key.hpp	/^namespace key {$/;"	n	namespace:LIB_NS_NAME
key	thirdparty/glfw/src/internal.h	/^        GLFWkeyfun              key;$/;"	m	struct:_GLFWwindow::__anon162
key	thirdparty/glfw/src/posix_thread.h	/^    pthread_key_t   key;$/;"	m	struct:_GLFWtlsPOSIX
key	thirdparty/imgui/include/imgui/imgui.h	/^        ImGuiID key;$/;"	m	struct:ImGuiStorage::Pair
key	thirdparty/remotery/src/Remotery.c	/^    rmtU32 key;$/;"	m	struct:__anon57	file:
keyMap	thirdparty/glfw/src/linux_joystick.h	/^    int                     keyMap[KEY_CNT - BTN_MISC];$/;"	m	struct:_GLFWjoystickLinux
keyName	thirdparty/glfw/src/cocoa_platform.h	/^    char                keyName[64];$/;"	m	struct:_GLFWlibraryNS
keyName	thirdparty/glfw/src/win32_platform.h	/^    char                keyName[64];$/;"	m	struct:_GLFWlibraryWin32
keyName	thirdparty/glfw/src/x11_platform.h	/^    char            keyName[5];$/;"	m	struct:_GLFWlibraryX11
key_count	lib/nil/include/nil/data/keyboard.hpp	/^  size_t    key_count;$/;"	m	struct:Nil::Data::Keyboard
key_name	lib/roa/src/interface/keyboard.cpp	/^key_name(const uint32_t key)$/;"	f	namespace:ROA::Keyboard
key_state	lib/nil/include/nil/data/keyboard.hpp	/^  uint32_t* key_state;$/;"	m	struct:Nil::Data::Keyboard
key_state	lib/roa/src/interface/keyboard.cpp	/^key_state(const uint32_t key)$/;"	f	namespace:ROA::Keyboard
keyboard	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_keyboard keyboard;$/;"	m	struct:nk_input	typeref:struct:nk_input::nk_keyboard
keyboard	thirdparty/glfw/src/wl_platform.h	/^    struct wl_keyboard*         keyboard;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::wl_keyboard
keyboardFocus	thirdparty/glfw/src/wl_platform.h	/^    _GLFWwindow*                keyboardFocus;$/;"	m	struct:_GLFWlibraryWayland
keyboardHandleEnter	thirdparty/glfw/src/wl_init.c	/^static void keyboardHandleEnter(void* data,$/;"	f	file:
keyboardHandleKey	thirdparty/glfw/src/wl_init.c	/^static void keyboardHandleKey(void* data,$/;"	f	file:
keyboardHandleKeymap	thirdparty/glfw/src/wl_init.c	/^static void keyboardHandleKeymap(void* data,$/;"	f	file:
keyboardHandleLeave	thirdparty/glfw/src/wl_init.c	/^static void keyboardHandleLeave(void* data,$/;"	f	file:
keyboardHandleModifiers	thirdparty/glfw/src/wl_init.c	/^static void keyboardHandleModifiers(void* data,$/;"	f	file:
keyboardListener	thirdparty/glfw/src/wl_init.c	/^static const struct wl_keyboard_listener keyboardListener = {$/;"	v	typeref:struct:wl_keyboard_listener	file:
keyboard_count	lib/nil/src/interface/data/keyboard.cpp	/^keyboard_count()$/;"	f	namespace:Nil::Data
keycode_to_string	lib/nil/include/nil/data/keyboard.hpp	/^keycode_to_string(const uint32_t keycode)$/;"	f	namespace:Nil::Data
keycodes	thirdparty/glfw/src/cocoa_platform.h	/^    short int           keycodes[256];$/;"	m	struct:_GLFWlibraryNS
keycodes	thirdparty/glfw/src/mir_platform.h	/^    short int keycodes[256];$/;"	m	struct:_GLFWlibraryMir
keycodes	thirdparty/glfw/src/win32_platform.h	/^    short int           keycodes[512];$/;"	m	struct:_GLFWlibraryWin32
keycodes	thirdparty/glfw/src/wl_platform.h	/^    short int                   keycodes[256];$/;"	m	struct:_GLFWlibraryWayland
keycodes	thirdparty/glfw/src/x11_platform.h	/^    short int       keycodes[256];$/;"	m	struct:_GLFWlibraryX11
keymap	thirdparty/glfw/src/wl_platform.h	/^        struct xkb_keymap*      keymap;$/;"	m	struct:_GLFWlibraryWayland::__anon144	typeref:struct:_GLFWlibraryWayland::__anon144::xkb_keymap
keys	lib/nil/src/interface/data/bounding_box.cpp	/^  lib::array<uint32_t> keys;$/;"	m	struct:__anon33::Bounding_box_data	file:
keys	lib/nil/src/interface/data/common.hpp	/^  lib::array<uint32_t>  keys;$/;"	m	struct:Nil::Data::Generic_data
keys	lib/nil/src/internal_data/resources/texture_data.hpp	/^  lib::array<uint32_t, 128> keys;$/;"	m	struct:Nil_texture_data
keys	lib/roa/include/roa/data.hpp	/^  std::vector<ROA::Object> keys;$/;"	m	class:ROA::Data
keys	lib/roa/src/component/component_engine.cpp	/^lib::array<uint64_t> keys;$/;"	m	namespace:__anon8	file:
keys	thirdparty/glfw/src/deps/nuklear.h	/^    nk_hash keys[NK_VALUE_PAGE_CAPACITY];$/;"	m	struct:nk_table
keys	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_key keys[NK_KEY_MAX];$/;"	m	struct:nk_keyboard	typeref:struct:nk_keyboard::nk_key
keys	thirdparty/glfw/src/internal.h	/^    char                keys[GLFW_KEY_LAST + 1];$/;"	m	struct:_GLFWwindow
keys	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	KEYS *keys;$/;"	m	class:TED
keysym	thirdparty/glfw/src/xkb_unicode.c	/^  unsigned short keysym;$/;"	m	struct:codepair	file:
keysymtab	thirdparty/glfw/src/xkb_unicode.c	/^} keysymtab[] = {$/;"	v	typeref:struct:codepair	file:
khronos_boolean_enum_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^} khronos_boolean_enum_t;$/;"	t	typeref:enum:__anon185
khronos_float_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef          float         khronos_float_t;$/;"	t
khronos_int16_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef signed   short int     khronos_int16_t;$/;"	t
khronos_int32_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef __int32                 khronos_int32_t;$/;"	t
khronos_int32_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef int                     khronos_int32_t;$/;"	t
khronos_int32_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef int32_t                 khronos_int32_t;$/;"	t
khronos_int64_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef __int64                 khronos_int64_t;$/;"	t
khronos_int64_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef int64_t                 khronos_int64_t;$/;"	t
khronos_int64_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef long int                khronos_int64_t;$/;"	t
khronos_int64_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef long long int           khronos_int64_t;$/;"	t
khronos_int8_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef signed   char          khronos_int8_t;$/;"	t
khronos_intptr_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef signed   long  int     khronos_intptr_t;$/;"	t
khronos_intptr_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef signed   long long int khronos_intptr_t;$/;"	t
khronos_ssize_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef signed   long  int     khronos_ssize_t;$/;"	t
khronos_ssize_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef signed   long long int khronos_ssize_t;$/;"	t
khronos_stime_nanoseconds_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef khronos_int64_t        khronos_stime_nanoseconds_t;$/;"	t
khronos_uint16_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef unsigned short int     khronos_uint16_t;$/;"	t
khronos_uint32_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef uint32_t                khronos_uint32_t;$/;"	t
khronos_uint32_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef unsigned __int32        khronos_uint32_t;$/;"	t
khronos_uint32_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef unsigned int            khronos_uint32_t;$/;"	t
khronos_uint64_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef uint64_t                khronos_uint64_t;$/;"	t
khronos_uint64_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef unsigned __int64        khronos_uint64_t;$/;"	t
khronos_uint64_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef unsigned long int       khronos_uint64_t;$/;"	t
khronos_uint64_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef unsigned long long int  khronos_uint64_t;$/;"	t
khronos_uint8_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef unsigned char          khronos_uint8_t;$/;"	t
khronos_uintptr_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef unsigned long  int     khronos_uintptr_t;$/;"	t
khronos_uintptr_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef unsigned long long int khronos_uintptr_t;$/;"	t
khronos_usize_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef unsigned long  int     khronos_usize_t;$/;"	t
khronos_usize_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef unsigned long long int khronos_usize_t;$/;"	t
khronos_utime_nanoseconds_t	thirdparty/glfw/src/deps/KHR/khrplatform.h	/^typedef khronos_uint64_t       khronos_utime_nanoseconds_t;$/;"	t
kind	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_property_kind kind;$/;"	m	struct:nk_property_variant	typeref:enum:nk_property_variant::nk_property_kind
klatt	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^klatt::klatt() : $/;"	f	class:klatt
klatt	thirdparty/soloud/src/audiosource/speech/klatt.h	/^class klatt$/;"	c
klatt_frame	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^klatt_frame::klatt_frame() :$/;"	f	class:klatt_frame
klatt_frame	thirdparty/soloud/src/audiosource/speech/klatt.h	/^class klatt_frame$/;"	c
known_loc_for_packet	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 known_loc_for_packet;$/;"	m	struct:stb_vorbis	file:
known_loc_for_packet	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 known_loc_for_packet;$/;"	m	struct:stb_vorbis	file:
lARx	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lARx;$/;"	m	struct:DIJOYSTATE2
lARy	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lARy;$/;"	m	struct:DIJOYSTATE2
lARz	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lARz;$/;"	m	struct:DIJOYSTATE2
lAX	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lAX;		\/* 'a' as in acceleration *\/$/;"	m	struct:DIJOYSTATE2
lAY	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lAY;$/;"	m	struct:DIJOYSTATE2
lAZ	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lAZ;$/;"	m	struct:DIJOYSTATE2
lAxisMax	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG		lAxisMax;$/;"	m	struct:_DIACTIONFORMATA
lAxisMax	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG		lAxisMax;$/;"	m	struct:_DIACTIONFORMATW
lAxisMin	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG		lAxisMin;$/;"	m	struct:_DIACTIONFORMATA
lAxisMin	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG		lAxisMin;$/;"	m	struct:_DIACTIONFORMATW
lCenter	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lCenter;$/;"	m	struct:DIPROPCAL
lDeadBand	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG			lDeadBand;$/;"	m	struct:DICONDITION
lEnd	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG			lEnd;$/;"	m	struct:DIRAMPFORCE
lFRx	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lFRx;		\/* 'fr' as in rotational force aka torque *\/$/;"	m	struct:DIJOYSTATE2
lFRy	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lFRy;$/;"	m	struct:DIJOYSTATE2
lFRz	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lFRz;$/;"	m	struct:DIJOYSTATE2
lFX	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lFX;		\/* 'f' as in force *\/$/;"	m	struct:DIJOYSTATE2
lFY	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lFY;$/;"	m	struct:DIJOYSTATE2
lFZ	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lFZ;$/;"	m	struct:DIJOYSTATE2
lMagnitude	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG			lMagnitude;$/;"	m	struct:DICONSTANTFORCE
lMax	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG		lMax;$/;"	m	struct:DIPROPRANGE
lMax	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG		lMax[5];$/;"	m	struct:DIPROPCALPOV
lMax	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lMax;$/;"	m	struct:DIPROPCAL
lMin	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG		lMin;$/;"	m	struct:DIPROPRANGE
lMin	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG		lMin[5];$/;"	m	struct:DIPROPCALPOV
lMin	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lMin;$/;"	m	struct:DIPROPCAL
lNegativeCoefficient	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG			lNegativeCoefficient;$/;"	m	struct:DICONDITION
lOffset	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG			lOffset;$/;"	m	struct:DICONDITION
lOffset	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG			lOffset;$/;"	m	struct:DIPERIODIC
lP	thirdparty/glfw/src/deps/mingw/dinput.h	/^    LONG	lP;$/;"	m	struct:_CPOINT
lPositiveCoefficient	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG			lPositiveCoefficient;$/;"	m	struct:DICONDITION
lRx	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lRx;$/;"	m	struct:DIJOYSTATE
lRx	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lRx;$/;"	m	struct:DIJOYSTATE2
lRy	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lRy;$/;"	m	struct:DIJOYSTATE
lRy	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lRy;$/;"	m	struct:DIJOYSTATE2
lRz	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lRz;$/;"	m	struct:DIJOYSTATE
lRz	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lRz;$/;"	m	struct:DIJOYSTATE2
lStart	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG			lStart;$/;"	m	struct:DIRAMPFORCE
lVRx	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lVRx;$/;"	m	struct:DIJOYSTATE2
lVRy	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lVRy;$/;"	m	struct:DIJOYSTATE2
lVRz	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lVRz;$/;"	m	struct:DIJOYSTATE2
lVX	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lVX;		\/* 'v' as in velocity *\/$/;"	m	struct:DIJOYSTATE2
lVY	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lVY;$/;"	m	struct:DIJOYSTATE2
lVZ	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lVZ;$/;"	m	struct:DIJOYSTATE2
lX	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lX;$/;"	m	struct:DIJOYSTATE
lX	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lX;$/;"	m	struct:DIJOYSTATE2
lX	thirdparty/glfw/src/deps/mingw/dinput.h	/^  LONG lX;$/;"	m	struct:DIMOUSESTATE
lX	thirdparty/glfw/src/deps/mingw/dinput.h	/^  LONG lX;$/;"	m	struct:DIMOUSESTATE2
lY	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lY;$/;"	m	struct:DIJOYSTATE
lY	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lY;$/;"	m	struct:DIJOYSTATE2
lY	thirdparty/glfw/src/deps/mingw/dinput.h	/^  LONG lY;$/;"	m	struct:DIMOUSESTATE
lY	thirdparty/glfw/src/deps/mingw/dinput.h	/^  LONG lY;$/;"	m	struct:DIMOUSESTATE2
lZ	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lZ;$/;"	m	struct:DIJOYSTATE
lZ	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	lZ;$/;"	m	struct:DIJOYSTATE2
lZ	thirdparty/glfw/src/deps/mingw/dinput.h	/^  LONG lZ;$/;"	m	struct:DIMOUSESTATE
lZ	thirdparty/glfw/src/deps/mingw/dinput.h	/^  LONG lZ;$/;"	m	struct:DIMOUSESTATE2
label_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
label_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_color
label_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_color
label_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
label_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_color
label_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_color
label_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
label_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_color
label_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_color
label_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 label_padding;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_vec2
largePoints	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    largePoints;$/;"	m	struct:VkPhysicalDeviceFeatures
last	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer
last	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size last;$/;"	m	struct:nk_popup_buffer
last	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 last;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_chart_slot::nk_vec2
lastByteWritten	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	unsigned char lastByteWritten;\/\/ Last value written to the SID$/;"	m	class:SIDsound
lastByteWritten	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	unsigned char lastByteWritten;\/\/ Last value written to the SID$/;"	m	class:SIDsound
lastCursorPosX	thirdparty/glfw/src/win32_platform.h	/^    int                 lastCursorPosX, lastCursorPosY;$/;"	m	struct:_GLFWwindowWin32
lastCursorPosX	thirdparty/glfw/src/x11_platform.h	/^    int             lastCursorPosX, lastCursorPosY;$/;"	m	struct:_GLFWwindowX11
lastCursorPosY	thirdparty/glfw/src/win32_platform.h	/^    int                 lastCursorPosX, lastCursorPosY;$/;"	m	struct:_GLFWwindowWin32
lastCursorPosY	thirdparty/glfw/src/x11_platform.h	/^    int             lastCursorPosX, lastCursorPosY;$/;"	m	struct:_GLFWwindowX11
lastKeyTime	thirdparty/glfw/src/x11_platform.h	/^    Time            lastKeyTime;$/;"	m	struct:_GLFWwindowX11
lastResetCycle	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	ClockCycle lastResetCycle;$/;"	m	class:TED
last_child	thirdparty/remotery/src/Remotery.c	/^    struct Sample* last_child;$/;"	m	struct:Sample	typeref:struct:Sample::Sample	file:
last_decoded_sample	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 last_decoded_sample;$/;"	m	struct:__anon212	file:
last_decoded_sample	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 last_decoded_sample;$/;"	m	struct:__anon125	file:
last_error	thirdparty/remotery/src/Remotery.c	/^    HRESULT last_error;$/;"	m	struct:D3D11	file:
last_page	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int last_page;$/;"	m	struct:stb_vorbis	file:
last_page	thirdparty/stb/include/stb/stb_vorbis.c	/^   int last_page;$/;"	m	struct:stb_vorbis	file:
last_ping_time	thirdparty/remotery/src/Remotery.c	/^    rmtU32 last_ping_time;$/;"	m	struct:__anon65	file:
last_seg	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int last_seg;  \/\/ flag that we're on the last segment$/;"	m	struct:stb_vorbis	file:
last_seg	thirdparty/stb/include/stb/stb_vorbis.c	/^   int last_seg;  \/\/ flag that we're on the last segment$/;"	m	struct:stb_vorbis	file:
last_seg_which	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int last_seg_which; \/\/ what was the segment number of the last seg?$/;"	m	struct:stb_vorbis	file:
last_seg_which	thirdparty/stb/include/stb/stb_vorbis.c	/^   int last_seg_which; \/\/ what was the segment number of the last seg?$/;"	m	struct:stb_vorbis	file:
last_tick	lib/nil/src/internal_data/internal_data.hpp	/^  lib::milliseconds     last_tick;$/;"	m	struct:Nil_ctx
last_widget_state	thirdparty/glfw/src/deps/nuklear.h	/^    nk_flags last_widget_state;$/;"	m	struct:nk_context
lasttime	thirdparty/soloud/src/tools/tedsid2dump/main.cpp	/^int lasttime = 0;$/;"	v
late_think_task_count	lib/nil/src/internal_data/internal_data.hpp	/^  size_t                late_think_task_count;$/;"	m	struct:Nil_ctx
late_think_tasks	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_cpu_task          late_think_tasks[NIL_MAX_CPU_TASK_QUEUE];$/;"	m	struct:Nil_ctx
layer	thirdparty/glfw/src/cocoa_platform.h	/^    id              layer;$/;"	m	struct:_GLFWwindowNS
layerCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              layerCount;$/;"	m	struct:VkImageSubresourceLayers
layerCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              layerCount;$/;"	m	struct:VkImageSubresourceRange
layerCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    layerCount;$/;"	m	struct:VkClearRect
layerName	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    char        layerName[VK_MAX_EXTENSION_NAME_SIZE];$/;"	m	struct:VkLayerProperties
layers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                    layers;$/;"	m	struct:VkFramebufferCreateInfo
layout	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_panel *layout;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_panel
layout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageLayout    layout;$/;"	m	struct:VkAttachmentReference
layout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineLayout                                 layout;$/;"	m	struct:VkGraphicsPipelineCreateInfo
layout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineLayout                   layout;$/;"	m	struct:VkComputePipelineCreateInfo
left	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color left;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_color
leftmatch	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static int leftmatch($/;"	f	file:
len	thirdparty/glfw/src/deps/nuklear.h	/^    int len; \/* in codepoints\/runes\/glyphs *\/$/;"	m	struct:nk_str
length	lib/lib/include/lib/string.hpp	/^length(const char *str)$/;"	f	namespace:LIB_NS_NAME::str
length	thirdparty/glfw/src/deps/nuklear.h	/^    int length;$/;"	m	struct:nk_command_text
length	thirdparty/glfw/src/deps/nuklear.h	/^    int length;$/;"	m	struct:nk_property_state
length	thirdparty/glfw/src/deps/nuklear.h	/^   int first_char, length; \/* first char of row, and length *\/$/;"	m	struct:nk_text_find
length	thirdparty/json/include/json/json.h	/^  size_t length;$/;"	m	struct:json_array_s
length	thirdparty/json/include/json/json.h	/^  size_t length;$/;"	m	struct:json_object_s
length	thirdparty/soloud/src/core/soloud_file.cpp	/^	unsigned int DiskFile::length()$/;"	f	class:SoLoud::DiskFile
length	thirdparty/soloud/src/core/soloud_file.cpp	/^	unsigned int MemoryFile::length()$/;"	f	class:SoLoud::MemoryFile
length	thirdparty/stb/include/stb/stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anon86
length	thirdparty/stb/include/stb/stb_textedit.h	/^   int first_char, length; \/\/ first char of row, and length$/;"	m	struct:__anon134
lerp	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^static float lerp(float a, float b, int t, int d)$/;"	f	file:
level	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkCommandBufferLevel    level;$/;"	m	struct:VkCommandBufferAllocateInfo
levelCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              levelCount;$/;"	m	struct:VkImageSubresourceRange
lflags	thirdparty/stb/include/stb/stb_image.h	/^   int lflags;$/;"	m	struct:__anon92
lhs	thirdparty/catch/include/catch/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lib	lib/lib/include/lib/memory_pool.cpp	/^namespace lib {$/;"	n	file:
lib_null	lib/lib/include/lib/model.hpp	/^constexpr uint32_t lib_null = 1; \/\/ decorative text - including null terminator$/;"	m	namespace:__anon3
libgl	thirdparty/opengl/src/gl3w.cpp	/^static HMODULE libgl;$/;"	v	file:
libgl	thirdparty/opengl/src/gl3w.cpp	/^static void *libgl;$/;"	v	file:
light_buffer	lib/rov/src/rov_data.hpp	/^  uint32_t light_buffer;$/;"	m	struct:ROV_Internal::rovRenderPass
light_buffers	lib/rov/src/ogl/rov_gl.hpp	/^  lib::array<rovGLLightPack>    light_buffers;$/;"	m	struct:ROV_Internal::rovGLData
light_count	lib/nil/src/interface/data/light.cpp	/^light_count()$/;"	f	namespace:Nil::Data
likely	lib/lib/include/lib/optimizations.hpp	16;"	d
likely	lib/lib/include/lib/optimizations.hpp	19;"	d
limit_connections_to_localhost	thirdparty/remotery/include/remotery/Remotery.h	/^    rmtBool limit_connections_to_localhost;$/;"	m	struct:rmtSettings
limit_connections_to_localhost	thirdparty/remotery/src/Remotery.c	/^    rmtBool limit_connections_to_localhost;$/;"	m	struct:__anon65	file:
limits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPhysicalDeviceLimits              limits;$/;"	m	struct:VkPhysicalDeviceProperties
line	thirdparty/catch/include/catch/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line0	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon83
line1	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon83
lineInfo	thirdparty/catch/include/catch/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineWidth	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                                      lineWidth;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
lineWidthGranularity	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                 lineWidthGranularity;$/;"	m	struct:VkPhysicalDeviceLimits
lineWidthRange	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                 lineWidthRange[2];$/;"	m	struct:VkPhysicalDeviceLimits
line_AA	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_anti_aliasing line_AA; \/* line anti-aliasing flag can be turned off if you are tight on memory *\/$/;"	m	struct:nk_convert_config	typeref:enum:nk_convert_config::nk_anti_aliasing
line_draw_calls	lib/rov/src/rov_data.hpp	/^  lib::array<rovLineDrawCall> line_draw_calls;$/;"	m	struct:ROV_Internal::rovRenderPass
line_info	app/perils/src/data/data.cpp	/^  lib::array<float> line_info;$/;"	m	namespace:Game_data::__anon220	file:
line_no	thirdparty/json/include/json/json.h	/^  size_t line_no;$/;"	m	struct:json_string_ex_s
line_no	thirdparty/json/include/json/json.h	/^  size_t line_no;$/;"	m	struct:json_value_ex_s
line_no	thirdparty/json/src/json.c	/^  size_t line_no;     \/\/ line counter for error reporting$/;"	m	struct:json_parse_state_s	file:
line_offset	thirdparty/json/src/json.c	/^  size_t line_offset; \/\/ (offset-line_offset) is the character number (in bytes)$/;"	m	struct:json_parse_state_s	file:
line_size	thirdparty/stb/include/stb/stb_image.h	/^   int line_size;$/;"	m	struct:__anon92
line_thickness	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_arc
line_thickness	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_circle
line_thickness	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_curve
line_thickness	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_line
line_thickness	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_polygon
line_thickness	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_polyline
line_thickness	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_rect
line_thickness	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_triangle
linear	app/perils/src/game/dynamic_object.cpp	/^linear(const float time)$/;"	f	namespace:Dynamic_object::__anon219
linearTilingFeatures	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFormatFeatureFlags    linearTilingFeatures;$/;"	m	struct:VkFormatProperties
linear_search	lib/lib/include/lib/key.hpp	/^linear_search(const uint32_t id_to_find,$/;"	f	namespace:LIB_NS_NAME::key
linear_search	lib/lib/include/lib/key.hpp	/^linear_search(const uint64_t id_to_find,$/;"	f	namespace:LIB_NS_NAME::key
linear_search_upper32	lib/lib/include/lib/key.hpp	/^linear_search_upper32($/;"	f	namespace:LIB_NS_NAME::key
linebuf	thirdparty/stb/include/stb/stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anon81::__anon82
listen_socket	thirdparty/remotery/src/Remotery.c	/^    WebSocket* listen_socket;$/;"	m	struct:__anon65	file:
listener	thirdparty/glfw/src/cocoa_platform.h	/^    id                  listener;$/;"	m	struct:_GLFWlibraryNS
load	lib/roa/include/roa/resource.hpp	/^  load(const char *filename)$/;"	f	class:ROA::Resource
load	lib/roa/src/interface/model_scene.cpp	/^load(ROA::Object obj, const char *filename)$/;"	f	namespace:ROA::Scene
load	lib/roa/src/interface/model_scene.cpp	/^load(const char *filename)$/;"	f	namespace:ROA::Model
load	lib/roa/src/interface/resource.cpp	/^Resource::load()$/;"	f	class:ROA::Resource
load	thirdparty/soloud/src/audiosource/monotone/soloud_monotone.cpp	/^	result Monotone::load(const char *aFilename)$/;"	f	class:SoLoud::Monotone
load	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt.cpp	/^	result Openmpt::load(const char *aFilename)$/;"	f	class:SoLoud::Openmpt
load	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	result TedSid::load(const char *aFilename)$/;"	f	class:SoLoud::TedSid
load	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^	result Wav::load(const char *aFilename)$/;"	f	class:SoLoud::Wav
load	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	result WavStream::load(const char *aFilename)$/;"	f	class:SoLoud::WavStream
loadAddress	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	unsigned int loadAddress;$/;"	m	class:CbmTune
loadAddress	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	unsigned int loadAddress;$/;"	m	struct:PsidHeader
loadFile	thirdparty/soloud/src/audiosource/monotone/soloud_monotone.cpp	/^	result Monotone::loadFile(File *aFile)$/;"	f	class:SoLoud::Monotone
loadFile	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt.cpp	/^	result Openmpt::loadFile(File *aFile)$/;"	f	class:SoLoud::Openmpt
loadFile	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	result TedSid::loadFile(File *aFile)$/;"	f	class:SoLoud::TedSid
loadFile	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^	result Wav::loadFile(File *aFile)$/;"	f	class:SoLoud::Wav
loadFile	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	result WavStream::loadFile(File *aFile)$/;"	f	class:SoLoud::WavStream
loadFileToMem	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	result TedSid::loadFileToMem(File *aFile)$/;"	f	class:SoLoud::TedSid
loadFileToMem	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	result WavStream::loadFileToMem(File *aFile)$/;"	f	class:SoLoud::WavStream
loadLibraries	thirdparty/glfw/src/win32_init.c	/^static GLFWbool loadLibraries(void)$/;"	f	file:
loadMem	thirdparty/soloud/src/audiosource/monotone/soloud_monotone.cpp	/^	result Monotone::loadMem(unsigned char *aMem, unsigned int aLength, bool aCopy, bool aTakeOwnership)$/;"	f	class:SoLoud::Monotone
loadMem	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt.cpp	/^	result Openmpt::loadMem(unsigned char *aMem, unsigned int aLength, bool aCopy, bool aTakeOwnership)$/;"	f	class:SoLoud::Openmpt
loadMem	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	result TedSid::loadMem(unsigned char *aMem, unsigned int aLength, bool aCopy, bool aTakeOwnership)$/;"	f	class:SoLoud::TedSid
loadMem	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^	result Wav::loadMem(unsigned char *aMem, unsigned int aLength, bool aCopy, bool aTakeOwnership)$/;"	f	class:SoLoud::Wav
loadMem	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	result WavStream::loadMem(unsigned char *aData, unsigned int aDataLen, bool aCopy, bool aTakeOwnership)$/;"	f	class:SoLoud::WavStream
loadOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAttachmentLoadOp              loadOp;$/;"	m	struct:VkAttachmentDescription
loadParams	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	result Sfxr::loadParams(const char *aFilename)$/;"	f	class:SoLoud::Sfxr
loadParamsFile	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	result Sfxr::loadParamsFile(File *aFile)$/;"	f	class:SoLoud::Sfxr
loadParamsMem	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	result Sfxr::loadParamsMem(unsigned char *aMem, unsigned int aLength, bool aCopy, bool aTakeOwnership)$/;"	f	class:SoLoud::Sfxr
loadPreset	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	result Sfxr::loadPreset(int aPresetNo, int aRandSeed)$/;"	f	class:SoLoud::Sfxr
loadToMem	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	result TedSid::loadToMem(const char *aFilename)$/;"	f	class:SoLoud::TedSid
loadToMem	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	result WavStream::loadToMem(const char *aFilename)$/;"	f	class:SoLoud::WavStream
loadWGLExtensions	thirdparty/glfw/src/wgl_context.c	/^static void loadWGLExtensions(void)$/;"	f	file:
load_GL_ARB_multisample	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_ARB_multisample(GLADloadproc load) {$/;"	f	file:
load_GL_ARB_robustness	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_ARB_robustness(GLADloadproc load) {$/;"	f	file:
load_GL_KHR_debug	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_KHR_debug(GLADloadproc load) {$/;"	f	file:
load_GL_VERSION_1_0	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_VERSION_1_0(GLADloadproc load) {$/;"	f	file:
load_GL_VERSION_1_1	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_VERSION_1_1(GLADloadproc load) {$/;"	f	file:
load_GL_VERSION_1_2	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_VERSION_1_2(GLADloadproc load) {$/;"	f	file:
load_GL_VERSION_1_3	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_VERSION_1_3(GLADloadproc load) {$/;"	f	file:
load_GL_VERSION_1_4	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_VERSION_1_4(GLADloadproc load) {$/;"	f	file:
load_GL_VERSION_1_5	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_VERSION_1_5(GLADloadproc load) {$/;"	f	file:
load_GL_VERSION_2_0	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_VERSION_2_0(GLADloadproc load) {$/;"	f	file:
load_GL_VERSION_2_1	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_VERSION_2_1(GLADloadproc load) {$/;"	f	file:
load_GL_VERSION_3_0	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_VERSION_3_0(GLADloadproc load) {$/;"	f	file:
load_GL_VERSION_3_1	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_VERSION_3_1(GLADloadproc load) {$/;"	f	file:
load_GL_VERSION_3_2	thirdparty/glfw/src/deps/glad.c	/^static void load_GL_VERSION_3_2(GLADloadproc load) {$/;"	f	file:
load_aspects	lib/nil_aspects/src/aspects.cpp	/^load_aspects(Nil_ctx *ctx)$/;"	f	namespace:Nil_ext
load_assets	app/perils/src/data/data.cpp	/^load_assets()$/;"	f	namespace:Game_data
load_dll	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^static int load_dll()$/;"	f	file:
load_dll	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static int load_dll()$/;"	f	file:
load_dll	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^static int load_dll()$/;"	f	file:
load_dll	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^static int load_dll()$/;"	f	file:
load_gltf	lib/nil/src/asset_loading/load_gltf.cpp	/^load_gltf(Nil_ctx *ctx, Nil::Node root_node, const char *path)$/;"	f	namespace:Nil::Assets
load_gpu_resources	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^load_gpu_resources(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
load_gpu_vr_resources	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^load_gpu_vr_resources(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
load_jpeg_image	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc *load_jpeg_image(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f
load_obj	lib/nil/src/asset_loading/load_obj.cpp	/^load_obj(Nil_ctx *ctx, Nil::Node node, const char *filename)$/;"	f	namespace:Nil::Assets
load_obj_from_file	lib/lib/include/lib/model.hpp	/^load_obj_from_file($/;"	f	namespace:LIB_NS_NAME::model_import
load_procs	thirdparty/opengl/src/gl3w.cpp	/^static void load_procs(GL3WGetProcAddressProc proc)$/;"	f	file:
load_resource	lib/roa/src/interface/detail/resource_interface.cpp	/^load_resource(ROA::Audio_source &rsrc, const char *file)$/;"	f	namespace:ROA_detail
load_resource	lib/roa/src/interface/detail/resource_interface.cpp	/^load_resource(ROA::Material &mat, const char *file)$/;"	f	namespace:ROA_detail
load_resource	lib/roa/src/interface/detail/resource_interface.cpp	/^load_resource(ROA::Mesh &rsrc, const char *file)$/;"	f	namespace:ROA_detail
load_resource	lib/roa/src/interface/detail/resource_interface.cpp	/^load_resource(ROA::Shader &mat, const char *file)$/;"	f	namespace:ROA_detail
loadfile	thirdparty/soloud/src/tools/codegen/main.cpp	/^char * loadfile(const char *aFilename)$/;"	f
loadhiromfromfile	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::loadhiromfromfile(int nr, char fname[512])$/;"	f	class:TED
loadloromfromfile	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::loadloromfromfile(int nr, char fname[512])$/;"	f	class:TED
loadogg	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^	result Wav::loadogg(File *aReader)$/;"	f	class:SoLoud::Wav
loadogg	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	result WavStream::loadogg(File * fp)$/;"	f	class:SoLoud::WavStream
loadroms	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::loadroms()$/;"	f	class:TED
loadshot	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^bool CPU::loadshot(void *CPUdump)$/;"	f	class:CPU
loadwav	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^    result Wav::loadwav(File *aReader)$/;"	f	class:SoLoud::Wav
loadwav	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	result WavStream::loadwav(File * fp)$/;"	f	class:SoLoud::WavStream
loca	thirdparty/glfw/src/deps/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo
loca	thirdparty/stb/include/stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo
local_bb	lib/nil/src/interface/data/bounding_box.cpp	/^  lib::array<Nil::Data::Bounding_box> local_bb;$/;"	m	struct:__anon33::Bounding_box_data	file:
local_transform	lib/nil/src/graph/graph_data.hpp	/^  lib::array<math::transform> local_transform;          \/\/ Local.$/;"	m	struct:Nil::Graph::Data
location	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    location;$/;"	m	struct:VkVertexInputAttributeDescription
lockAudioMutex	thirdparty/soloud/src/core/soloud.cpp	/^	void Soloud::lockAudioMutex()$/;"	f	class:SoLoud::Soloud
lockMutex	thirdparty/soloud/src/core/soloud_thread.cpp	/^		void lockMutex(void *aHandle)$/;"	f	namespace:SoLoud::Thread
lockPointer	thirdparty/glfw/src/wl_window.c	/^static void lockPointer(_GLFWwindow* window)$/;"	f	file:
lockedPointer	thirdparty/glfw/src/wl_platform.h	/^        struct zwp_locked_pointer_v1*      lockedPointer;$/;"	m	struct:_GLFWwindowWayland::__anon143	typeref:struct:_GLFWwindowWayland::__anon143::zwp_locked_pointer_v1
lockedPointerListener	thirdparty/glfw/src/wl_window.c	/^static const struct zwp_locked_pointer_v1_listener lockedPointerListener = {$/;"	v	typeref:struct:zwp_locked_pointer_v1_listener	file:
log	lib/lib/include/lib/logging.hpp	/^log(const char *prefix,$/;"	f	namespace:LIB_NS_NAME::logging
log2n	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^  int log2n;$/;"	m	struct:__anon215	file:
log2n	thirdparty/stb/include/stb/stb_vorbis.c	/^  int log2n;$/;"	m	struct:__anon128	file:
logFilename	thirdparty/remotery/include/remotery/Remotery.h	/^    rmtPStr logFilename;$/;"	m	struct:rmtSettings
log_v	lib/lib/include/lib/logging.hpp	/^log_v(const char *prefix,$/;"	f	namespace:LIB_NS_NAME::logging
logging	lib/lib/include/lib/logging.hpp	/^namespace logging {$/;"	n	namespace:LIB_NS_NAME
logging_outputs	lib/lib/include/lib/logging.hpp	/^  uint32_t logging_outputs = LIB_NS_NAME::logging::out::console;$/;"	m	namespace:__anon1
logicOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    logicOp;$/;"	m	struct:VkPhysicalDeviceFeatures
logicOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkLogicOp                                     logicOp;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
logicOpEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                                      logicOpEnable;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
logic_count	lib/nil/src/interface/data/logic.cpp	/^logic_count()$/;"	f	namespace:Nil::Data
logic_id	lib/nil/include/nil/data/logic.hpp	/^  uint32_t      logic_id;$/;"	m	struct:Nil::Data::Logic
logic_start_callback	lib/nil_aspects/src/roa_aspect.cpp	/^logic_start_callback(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROA_Aspect
logic_update_callback	lib/nil_aspects/src/roa_aspect.cpp	/^logic_update_callback(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROA_Aspect
lookatLH	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		void lookatLH(vec3 at, vec3 up)$/;"	f	struct:SoLoud::mat3
lookatRH	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		void lookatRH(vec3 at, vec3 up)$/;"	f	struct:SoLoud::mat3
lookup1_values	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int lookup1_values(int entries, int dim)$/;"	f	file:
lookup1_values	thirdparty/stb/include/stb/stb_vorbis.c	/^static int lookup1_values(int entries, int dim)$/;"	f	file:
lookup_type	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8  lookup_type;$/;"	m	struct:__anon203	file:
lookup_type	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8  lookup_type;$/;"	m	struct:__anon116	file:
lookup_values	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 lookup_values;$/;"	m	struct:__anon203	file:
lookup_values	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 lookup_values;$/;"	m	struct:__anon116	file:
loop	lib/nil/include/nil/data/audio.hpp	/^  bool loop;$/;"	m	struct:Nil::Data::Audio
lower32	lib/lib/include/lib/bits.hpp	/^lower32(const uint64_t i)$/;"	f	namespace:LIB_NS_NAME::bits
lpDiEffect	thirdparty/glfw/src/deps/mingw/dinput.h	/^  LPCDIEFFECT lpDiEffect;$/;"	m	struct:DIFILEEFFECT
lpEnvelope	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPDIENVELOPE		lpEnvelope;$/;"	m	struct:DIEFFECT
lpEnvelope	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPDIENVELOPE		lpEnvelope;$/;"	m	struct:DIEFFECT_DX5
lpUnkDDSTarget	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPUNKNOWN		lpUnkDDSTarget;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA
lpUnkDDSTarget	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPUNKNOWN		lpUnkDDSTarget;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW
lpal	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anon92
lprgFormats	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPDIACTIONFORMATA	lprgFormats;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA
lprgFormats	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPDIACTIONFORMATW	lprgFormats;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW
lprgImageInfoArray	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPDIDEVICEIMAGEINFOA	lprgImageInfoArray;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERA
lprgImageInfoArray	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPDIDEVICEIMAGEINFOW	lprgImageInfoArray;$/;"	m	struct:_DIDEVICEIMAGEINFOHEADERW
lptszActionName	thirdparty/glfw/src/deps/mingw/dinput.h	/^		LPCSTR	lptszActionName;$/;"	m	union:_DIACTIONA::__anon180
lptszActionName	thirdparty/glfw/src/deps/mingw/dinput.h	/^		LPCWSTR	lptszActionName;$/;"	m	union:_DIACTIONW::__anon181
lptszUserNames	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPSTR			lptszUserNames;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSA
lptszUserNames	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPWSTR			lptszUserNames;$/;"	m	struct:_DICONFIGUREDEVICESPARAMSW
lpvInBuffer	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPVOID	lpvInBuffer;$/;"	m	struct:DIEFFESCAPE
lpvOutBuffer	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPVOID	lpvOutBuffer;$/;"	m	struct:DIEFFESCAPE
lpvTypeSpecificParams	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPVOID			lpvTypeSpecificParams;$/;"	m	struct:DIEFFECT
lpvTypeSpecificParams	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPVOID			lpvTypeSpecificParams;$/;"	m	struct:DIEFFECT_DX5
luma	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^const double luma[9] = {$/;"	v
m	thirdparty/imguizmo/src/ImGuizmo.cpp	/^         float m[4][4];$/;"	m	union:ImGuizmo::matrix_t::__anon140	file:
m	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		vec3 m[3];$/;"	m	struct:SoLoud::mat3	file:
m16	thirdparty/imguizmo/src/ImGuizmo.cpp	/^         float m16[16];$/;"	m	union:ImGuizmo::matrix_t::__anon140	file:
m3dAt	thirdparty/soloud/include/soloud/soloud.h	/^		float m3dAt[3];$/;"	m	class:SoLoud::Soloud
m3dAttenuationModel	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int m3dAttenuationModel;$/;"	m	class:SoLoud::AudioSource
m3dAttenuationModel	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int m3dAttenuationModel;$/;"	m	class:SoLoud::AudioSourceInstance3dData
m3dAttenuationRolloff	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float m3dAttenuationRolloff;$/;"	m	class:SoLoud::AudioSource
m3dAttenuationRolloff	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float m3dAttenuationRolloff;$/;"	m	class:SoLoud::AudioSourceInstance3dData
m3dData	thirdparty/soloud/include/soloud/soloud.h	/^		AudioSourceInstance3dData m3dData[VOICE_COUNT];$/;"	m	class:SoLoud::Soloud
m3dDopplerFactor	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float m3dDopplerFactor;$/;"	m	class:SoLoud::AudioSource
m3dDopplerFactor	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float m3dDopplerFactor;$/;"	m	class:SoLoud::AudioSourceInstance3dData
m3dMaxDistance	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float m3dMaxDistance;$/;"	m	class:SoLoud::AudioSource
m3dMaxDistance	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float m3dMaxDistance;$/;"	m	class:SoLoud::AudioSourceInstance3dData
m3dMinDistance	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float m3dMinDistance;$/;"	m	class:SoLoud::AudioSource
m3dMinDistance	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float m3dMinDistance;$/;"	m	class:SoLoud::AudioSourceInstance3dData
m3dPosition	thirdparty/soloud/include/soloud/soloud.h	/^		float m3dPosition[3];$/;"	m	class:SoLoud::Soloud
m3dPosition	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float m3dPosition[3];$/;"	m	class:SoLoud::AudioSourceInstance3dData
m3dSoundSpeed	thirdparty/soloud/include/soloud/soloud.h	/^		float m3dSoundSpeed;$/;"	m	class:SoLoud::Soloud
m3dSpeakerPosition	thirdparty/soloud/include/soloud/soloud.h	/^		float m3dSpeakerPosition[3 * MAX_CHANNELS];$/;"	m	class:SoLoud::Soloud
m3dUp	thirdparty/soloud/include/soloud/soloud.h	/^		float m3dUp[3];$/;"	m	class:SoLoud::Soloud
m3dVelocity	thirdparty/soloud/include/soloud/soloud.h	/^		float m3dVelocity[3];$/;"	m	class:SoLoud::Soloud
m3dVelocity	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float m3dVelocity[3];$/;"	m	class:SoLoud::AudioSourceInstance3dData
m3dVolume	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float m3dVolume;$/;"	m	class:SoLoud::AudioSourceInstance3dData
mA	thirdparty/soloud/src/audiosource/speech/resonator.h	/^	float mA, mB, mC, mP1, mP2;$/;"	m	class:resonator
mA0	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		float mA0, mA1, mA2, mB1, mB2;$/;"	m	class:SoLoud::BiquadResonantFilterInstance
mA1	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		float mA0, mA1, mA2, mB1, mB2;$/;"	m	class:SoLoud::BiquadResonantFilterInstance
mA2	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		float mA0, mA1, mA2, mB1, mB2;$/;"	m	class:SoLoud::BiquadResonantFilterInstance
mActive	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		int mActive;$/;"	m	class:SoLoud::BiquadResonantFilterInstance
mActive	thirdparty/soloud/include/soloud/soloud_fader.h	/^		int mActive;$/;"	m	class:SoLoud::Fader
mActive	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mActive;$/;"	m	struct:SoLoud::MonotoneChannel
mActiveFader	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		int mActiveFader;$/;"	m	class:SoLoud::AudioSourceInstance
mActiveVoice	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mActiveVoice[VOICE_COUNT];$/;"	m	class:SoLoud::Soloud
mActiveVoiceCount	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mActiveVoiceCount;$/;"	m	class:SoLoud::Soloud
mActiveVoiceDirty	thirdparty/soloud/include/soloud/soloud.h	/^		bool mActiveVoiceDirty;$/;"	m	class:SoLoud::Soloud
mAllocChunk	thirdparty/soloud/src/audiosource/speech/darray.h	/^	int mAllocChunk;$/;"	m	class:darray
mAllocated	thirdparty/soloud/src/audiosource/speech/darray.h	/^	int mAllocated;$/;"	m	class:darray
mAlreadyLocked	thirdparty/glfw/src/deps/tinycthread.h	/^  int mAlreadyLocked;         \/* TRUE if the mutex is already locked *\/$/;"	m	struct:__anon182
mAmpAspir	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mAmpAspir;     \/\/ AP converted to linear gain  $/;"	m	class:klatt
mAmpBreth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mAmpBreth;     \/\/ ATURB converted to linear gain  $/;"	m	class:klatt
mAmpBypas	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mAmpBypas;     \/\/ mBypassFricationAmpdb converted to linear gain  $/;"	m	class:klatt
mAmpFrica	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mAmpFrica;     \/\/ mFricationAmpdb converted to linear gain  $/;"	m	class:klatt
mAmpVoice	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mAmpVoice;     \/\/ mVoicingAmpdb converted to linear gain  $/;"	m	class:klatt
mArg	thirdparty/glfw/src/deps/tinycthread.c	/^  void * mArg;            \/**< Function argument for the thread function. *\/$/;"	m	struct:__anon186	file:
mArp	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mArp;$/;"	m	struct:SoLoud::MonotoneChannel
mArpCounter	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mArpCounter;$/;"	m	struct:SoLoud::MonotoneChannel
mAspirationAmpdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mAspirationAmpdb;            \/\/ Amp of aspiration in dB,         0 to   70    $/;"	m	class:klatt_frame
mAttenuator	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		AudioAttenuator *mAttenuator;$/;"	m	class:SoLoud::AudioSource
mAttenuator	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		AudioAttenuator *mAttenuator;$/;"	m	class:SoLoud::AudioSourceInstance3dData
mAudioSourceID	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mAudioSourceID;$/;"	m	class:SoLoud::Soloud
mAudioSourceID	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int mAudioSourceID;$/;"	m	class:SoLoud::AudioSource
mAudioSourceID	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int mAudioSourceID;$/;"	m	class:SoLoud::AudioSourceInstance
mAudioThreadMutex	thirdparty/soloud/include/soloud/soloud.h	/^		void * mAudioThreadMutex;$/;"	m	class:SoLoud::Soloud
mAxisFactor	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float mAxisFactor[3];$/;"	m	struct:ImGuizmo::Context	file:
mB	thirdparty/soloud/src/audiosource/speech/resonator.h	/^	float mA, mB, mC, mP1, mP2;$/;"	m	class:resonator
mB1	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		float mA0, mA1, mA2, mB1, mB2;$/;"	m	class:SoLoud::BiquadResonantFilterInstance
mB2	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		float mA0, mA1, mA2, mB1, mB2;$/;"	m	class:SoLoud::BiquadResonantFilterInstance
mBackendCleanupFunc	thirdparty/soloud/include/soloud/soloud.h	/^		soloudCallFunction mBackendCleanupFunc;$/;"	m	class:SoLoud::Soloud
mBackendData	thirdparty/soloud/include/soloud/soloud.h	/^		void * mBackendData;$/;"	m	class:SoLoud::Soloud
mBackendID	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mBackendID;$/;"	m	class:SoLoud::Soloud
mBackendString	thirdparty/soloud/include/soloud/soloud.h	/^		const char * mBackendString;$/;"	m	class:SoLoud::Soloud
mBasePtr	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned char *mBasePtr; \/\/ raw allocated pointer (for delete)$/;"	m	class:SoLoud::AlignedFloatBuffer
mBaseSamplerate	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float mBaseSamplerate;$/;"	m	class:SoLoud::AudioSource
mBaseSamplerate	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float mBaseSamplerate;$/;"	m	class:SoLoud::AudioSourceInstance
mBelowAxisLimit	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      bool mBelowAxisLimit[3];$/;"	m	struct:ImGuizmo::Context	file:
mBelowPlaneLimit	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      bool mBelowPlaneLimit[3];$/;"	m	struct:ImGuizmo::Context	file:
mBitdepth	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^		float mBitdepth;$/;"	m	class:SoLoud::LofiFilter
mBits	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		unsigned int mBits;$/;"	m	class:SoLoud::WavStream
mBoost	thirdparty/soloud/include/soloud/soloud_bassboostfilter.h	/^		float mBoost;$/;"	m	class:SoLoud::BassboostFilter
mBoundsAnchor	thirdparty/imguizmo/src/ImGuizmo.cpp	/^	  vec_t mBoundsAnchor;$/;"	m	struct:ImGuizmo::Context	file:
mBoundsAxis	thirdparty/imguizmo/src/ImGuizmo.cpp	/^	  int mBoundsAxis[2];$/;"	m	struct:ImGuizmo::Context	file:
mBoundsBestAxis	thirdparty/imguizmo/src/ImGuizmo.cpp	/^	  int mBoundsBestAxis;$/;"	m	struct:ImGuizmo::Context	file:
mBoundsLocalPivot	thirdparty/imguizmo/src/ImGuizmo.cpp	/^	  vec_t mBoundsLocalPivot;$/;"	m	struct:ImGuizmo::Context	file:
mBoundsMatrix	thirdparty/imguizmo/src/ImGuizmo.cpp	/^	  matrix_t mBoundsMatrix;$/;"	m	struct:ImGuizmo::Context	file:
mBoundsPivot	thirdparty/imguizmo/src/ImGuizmo.cpp	/^	  vec_t mBoundsPivot;$/;"	m	struct:ImGuizmo::Context	file:
mBoundsPlan	thirdparty/imguizmo/src/ImGuizmo.cpp	/^	  vec_t mBoundsPlan;$/;"	m	struct:ImGuizmo::Context	file:
mBuffer	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float *mBuffer;$/;"	m	struct:SoLoud::AudioSourceResampleData
mBuffer	thirdparty/soloud/include/soloud/soloud_dcremovalfilter.h	/^		float *mBuffer;$/;"	m	class:SoLoud::DCRemovalFilterInstance
mBuffer	thirdparty/soloud/include/soloud/soloud_echofilter.h	/^		float *mBuffer;$/;"	m	class:SoLoud::EchoFilterInstance
mBuffer	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^		float *mBuffer;$/;"	m	class:SoLoud::FlangerFilterInstance
mBufferEndEvent	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        HANDLE mBufferEndEvent;$/;"	m	class:SoLoud::VoiceCallback	file:
mBufferLength	thirdparty/soloud/include/soloud/soloud_dcremovalfilter.h	/^		int mBufferLength;$/;"	m	class:SoLoud::DCRemovalFilterInstance
mBufferLength	thirdparty/soloud/include/soloud/soloud_echofilter.h	/^		int mBufferLength;$/;"	m	class:SoLoud::EchoFilterInstance
mBufferLength	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^		int mBufferLength;$/;"	m	class:SoLoud::FlangerFilterInstance
mBufferSize	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mBufferSize;$/;"	m	class:SoLoud::Soloud
mBusHandle	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int mBusHandle;$/;"	m	class:SoLoud::AudioSourceInstance
mBypassFricationAmpdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mBypassFricationAmpdb;       \/\/ Amp of bypass fric. in dB,       0 to   80  $/;"	m	class:klatt_frame
mC	thirdparty/soloud/src/audiosource/speech/resonator.h	/^	float mA, mB, mC, mP1, mP2;$/;"	m	class:resonator
mCameraDir	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mCameraDir;$/;"	m	struct:ImGuizmo::Context	file:
mCameraEye	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mCameraEye;$/;"	m	struct:ImGuizmo::Context	file:
mCameraRight	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mCameraRight;$/;"	m	struct:ImGuizmo::Context	file:
mCameraUp	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mCameraUp;$/;"	m	struct:ImGuizmo::Context	file:
mCellSize	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		unsigned char mCellSize; \/\/ must be 2 for version 1$/;"	m	struct:SoLoud::MonotoneSong
mChannel	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		MonotoneChannel mChannel[12];$/;"	m	class:SoLoud::MonotoneInstance
mChannelData	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^		LofiChannelData mChannelData[2];$/;"	m	class:SoLoud::LofiFilterInstance
mChannelHandle	thirdparty/soloud/include/soloud/soloud_bus.h	/^		unsigned int mChannelHandle;$/;"	m	class:SoLoud::Bus
mChannelVolume	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float mChannelVolume[MAX_CHANNELS];$/;"	m	class:SoLoud::AudioSourceInstance
mChannelVolume	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float mChannelVolume[MAX_CHANNELS];$/;"	m	class:SoLoud::AudioSourceInstance3dData
mChannels	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mChannels;$/;"	m	class:SoLoud::Soloud
mChannels	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int mChannels;$/;"	m	class:SoLoud::AudioSource
mChannels	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int mChannels;$/;"	m	class:SoLoud::AudioSourceInstance
mCollider	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		AudioCollider *mCollider;$/;"	m	class:SoLoud::AudioSource
mCollider	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		AudioCollider *mCollider;$/;"	m	class:SoLoud::AudioSourceInstance3dData
mColliderData	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		int mColliderData;$/;"	m	class:SoLoud::AudioSource
mColliderData	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		int mColliderData;$/;"	m	class:SoLoud::AudioSourceInstance3dData
mComment	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		char *mComment;$/;"	m	struct:SoLoud::MonotoneSong
mCritDampedGlotLowPassFilter	thirdparty/soloud/src/audiosource/speech/klatt.h	/^			  mCritDampedGlotLowPassFilter, mDownSampLowPassFilter, mOutputLowPassFilter;$/;"	m	class:klatt
mCurrent	thirdparty/soloud/include/soloud/soloud_fader.h	/^		float mCurrent;$/;"	m	class:SoLoud::Fader
mCurrentChannelVolume	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float mCurrentChannelVolume[MAX_CHANNELS];$/;"	m	class:SoLoud::AudioSourceInstance
mCurrentOperation	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      int mCurrentOperation;$/;"	m	struct:ImGuizmo::Context	file:
mDU	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	  const char mDU;$/;"	m	class:Element	file:
mData	thirdparty/soloud/include/soloud/soloud.h	/^		float *mData; \/\/ aligned pointer$/;"	m	class:SoLoud::AlignedFloatBuffer
mData	thirdparty/soloud/include/soloud/soloud_openmpt.h	/^		char *mData;$/;"	m	class:SoLoud::Openmpt
mData	thirdparty/soloud/include/soloud/soloud_wav.h	/^		float *mData;$/;"	m	class:SoLoud::Wav
mData	thirdparty/soloud/src/audiosource/speech/darray.h	/^	char *mData;$/;"	m	class:darray
mData	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	char mData[8];$/;"	m	class:PhonemeToElements	file:
mDataLen	thirdparty/soloud/include/soloud/soloud_openmpt.h	/^		unsigned int mDataLen;$/;"	m	class:SoLoud::Openmpt
mDataLength	thirdparty/soloud/include/soloud/soloud_file.h	/^		unsigned int mDataLength;$/;"	m	class:SoLoud::MemoryFile
mDataOffset	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		unsigned int mDataOffset;$/;"	m	class:SoLoud::WavStream
mDataOwned	thirdparty/soloud/include/soloud/soloud_file.h	/^		bool mDataOwned;$/;"	m	class:SoLoud::MemoryFile
mDataPtr	thirdparty/soloud/include/soloud/soloud_file.h	/^		unsigned char *mDataPtr;$/;"	m	class:SoLoud::MemoryFile
mDecay	thirdparty/soloud/include/soloud/soloud_echofilter.h	/^		float mDecay;$/;"	m	class:SoLoud::EchoFilter
mDecay	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mDecay;               \/\/ mVoicingSpectralTiltdb converted to exponential time const  $/;"	m	class:klatt
mDelay	thirdparty/soloud/include/soloud/soloud_echofilter.h	/^		float mDelay;$/;"	m	class:SoLoud::EchoFilter
mDelay	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^		float mDelay;$/;"	m	class:SoLoud::FlangerFilter
mDelaySamples	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int mDelaySamples;$/;"	m	class:SoLoud::AudioSourceInstance
mDelta	thirdparty/soloud/include/soloud/soloud_fader.h	/^		float mDelta;$/;"	m	class:SoLoud::Fader
mDict	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	  const char  *mDict; \/\/ unused$/;"	m	class:Element	file:
mDirty	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		int mDirty;$/;"	m	class:SoLoud::BiquadResonantFilterInstance
mDopplerValue	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float mDopplerValue;		$/;"	m	class:SoLoud::AudioSourceInstance3dData
mDownSampLowPassFilter	thirdparty/soloud/src/audiosource/speech/klatt.h	/^			  mCritDampedGlotLowPassFilter, mDownSampLowPassFilter, mOutputLowPassFilter;$/;"	m	class:klatt
mDrawList	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      ImDrawList* mDrawList;$/;"	m	struct:ImGuizmo::Context	file:
mElement	thirdparty/soloud/include/soloud/soloud_speech.h	/^		darray mElement;$/;"	m	class:SoLoud::Speech
mElement	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	unsigned char *mElement;$/;"	m	class:klatt
mElementCount	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mElementCount;$/;"	m	class:klatt
mElementIndex	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mElementIndex;$/;"	m	class:klatt
mEnabled	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mEnabled; $/;"	m	struct:SoLoud::MonotoneChannel
mEnabled	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mEnabled;$/;"	m	struct:SoLoud::MonotoneHardwareChannel
mEndTime	thirdparty/soloud/include/soloud/soloud_fader.h	/^		time mEndTime;$/;"	m	class:SoLoud::Fader
mEnum	thirdparty/soloud/src/tools/codegen/main.cpp	/^	vector<Enum *> mEnum;$/;"	m	struct:Class	file:
mEvents	thirdparty/glfw/src/deps/tinycthread.h	/^  HANDLE mEvents[2];                  \/* Signal and broadcast event HANDLEs. *\/$/;"	m	struct:__anon183
mExtDelay	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	char  mExtDelay;$/;"	m	class:Interp	file:
mF0Flutter	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mF0Flutter;$/;"	m	class:klatt
mF0FundamentalFreq	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mF0FundamentalFreq;          \/\/ Voicing fund freq in Hz                       $/;"	m	class:klatt_frame
mF0FundamentalFreq	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mF0FundamentalFreq;        \/\/ Voicing fund freq in Hz  $/;"	m	class:klatt
mFFTData	thirdparty/soloud/include/soloud/soloud.h	/^		float mFFTData[256];$/;"	m	class:SoLoud::Soloud
mFFTData	thirdparty/soloud/include/soloud/soloud_bus.h	/^		float mFFTData[256];$/;"	m	class:SoLoud::Bus
mFeat	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	  int   mFeat; \/\/ only ELM_FEATURE_VWL$/;"	m	class:Element	file:
mFile	thirdparty/soloud/include/soloud/soloud_tedsid.h	/^		File *mFile;$/;"	m	class:SoLoud::TedSid
mFile	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		File *mFile;$/;"	m	class:SoLoud::WavStreamInstance
mFileHandle	thirdparty/soloud/include/soloud/soloud_file.h	/^		FILE *mFileHandle;$/;"	m	class:SoLoud::DiskFile
mFileOwned	thirdparty/soloud/include/soloud/soloud_tedsid.h	/^		bool mFileOwned;$/;"	m	class:SoLoud::TedSid
mFilename	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		char *mFilename;$/;"	m	class:SoLoud::WavStream
mFilter	thirdparty/soloud/include/soloud/soloud.h	/^		Filter *mFilter[FILTERS_PER_STREAM];$/;"	m	class:SoLoud::Soloud
mFilter	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		Filter *mFilter[FILTERS_PER_STREAM];$/;"	m	class:SoLoud::AudioSource
mFilter	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		FilterInstance *mFilter[FILTERS_PER_STREAM];$/;"	m	class:SoLoud::AudioSourceInstance
mFilter	thirdparty/soloud/include/soloud/soloud_echofilter.h	/^		float mFilter;$/;"	m	class:SoLoud::EchoFilter
mFilterInstance	thirdparty/soloud/include/soloud/soloud.h	/^		FilterInstance *mFilterInstance[FILTERS_PER_STREAM];$/;"	m	class:SoLoud::Soloud
mFilterType	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		int mFilterType;$/;"	m	class:SoLoud::BiquadResonantFilter
mFilterType	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		int mFilterType;$/;"	m	class:SoLoud::BiquadResonantFilterInstance
mFixed	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	float mFixed;$/;"	m	class:Interp	file:
mFlags	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mFlags;$/;"	m	class:SoLoud::Soloud
mFlags	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int mFlags;$/;"	m	class:SoLoud::AudioSource
mFlags	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int mFlags;$/;"	m	class:SoLoud::AudioSourceInstance
mFlags	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int mFlags;$/;"	m	class:SoLoud::AudioSourceInstance3dData
mFont	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	  unsigned char mFont; \/\/ unused$/;"	m	class:Element	file:
mFormant1Ampdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant1Ampdb;              \/\/ Amp of par 1st formant in dB,    0 to   80  $/;"	m	class:klatt_frame
mFormant1Bandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant1Bandwidth;          \/\/ First formant bw in Hz,          40 to 1000   $/;"	m	class:klatt_frame
mFormant1Freq	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant1Freq;               \/\/ First formant freq in Hz,        200 to 1300  $/;"	m	class:klatt_frame
mFormant1ParallelBandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant1ParallelBandwidth;  \/\/ Par. 1st formant bw in Hz,       40 to 1000 $/;"	m	class:klatt_frame
mFormant2Ampdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant2Ampdb;              \/\/ Amp of F2 frication in dB,       0 to   80  $/;"	m	class:klatt_frame
mFormant2Bandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant2Bandwidth;          \/\/ Second formant bw in Hz,         40 to 1000   $/;"	m	class:klatt_frame
mFormant2Freq	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant2Freq;               \/\/ Second formant freq in Hz,       550 to 3000  $/;"	m	class:klatt_frame
mFormant2ParallelBandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant2ParallelBandwidth;  \/\/ Par. 2nd formant bw in Hz,       40 to 1000 $/;"	m	class:klatt_frame
mFormant3Ampdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant3Ampdb;              \/\/ Amp of F3 frication in dB,       0 to   80  $/;"	m	class:klatt_frame
mFormant3Bandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant3Bandwidth;          \/\/ Third formant bw in Hz,          40 to 1000   $/;"	m	class:klatt_frame
mFormant3Freq	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant3Freq;               \/\/ Third formant freq in Hz,        1200 to 4999 $/;"	m	class:klatt_frame
mFormant3ParallelBandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant3ParallelBandwidth;  \/\/ Par. 3rd formant bw in Hz,       40 to 1000 $/;"	m	class:klatt_frame
mFormant4Ampdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant4Ampdb;              \/\/ Amp of F4 frication in dB,       0 to   80  $/;"	m	class:klatt_frame
mFormant4Bandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant4Bandwidth;          \/\/ Fourth formant bw in Hz,         40 to 1000   $/;"	m	class:klatt_frame
mFormant4Freq	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant4Freq;               \/\/ Fourth formant freq in Hz,       1200 to 4999 $/;"	m	class:klatt_frame
mFormant4ParallelBandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant4ParallelBandwidth;  \/\/ Par. 4th formant bw in Hz,       40 to 1000 $/;"	m	class:klatt_frame
mFormant5Ampdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant5Ampdb;              \/\/ Amp of F5 frication in dB,       0 to   80  $/;"	m	class:klatt_frame
mFormant5Bandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant5Bandwidth;          \/\/ Fifth formant bw in Hz,          40 to 1000   $/;"	m	class:klatt_frame
mFormant5Freq	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant5Freq;               \/\/ Fifth formant freq in Hz,        1200 to 4999 $/;"	m	class:klatt_frame
mFormant5ParallelBandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant5ParallelBandwidth;  \/\/ Par. 5th formant bw in Hz,       40 to 1000 $/;"	m	class:klatt_frame
mFormant6Ampdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant6Ampdb;              \/\/ Amp of F6 (same as r6pa),        0 to   80  $/;"	m	class:klatt_frame
mFormant6Bandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant6Bandwidth;          \/\/ Sixth formant bw in Hz,          40 to 2000   $/;"	m	class:klatt_frame
mFormant6Freq	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant6Freq;               \/\/ Sixth formant freq in Hz,        1200 to 4999 $/;"	m	class:klatt_frame
mFormant6ParallelBandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFormant6ParallelBandwidth;  \/\/ Par. 6th formant bw in Hz,       40 to 2000 $/;"	m	class:klatt_frame
mFrames	thirdparty/soloud/include/soloud/soloud_speech.h	/^		int mFrames;$/;"	m	class:SoLoud::Speech
mFreq	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^		float mFreq;$/;"	m	class:SoLoud::FlangerFilter
mFreq	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mFreq[3];$/;"	m	struct:SoLoud::MonotoneChannel
mFrequency	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		float mFrequency;$/;"	m	class:SoLoud::BiquadResonantFilter
mFricationAmpdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mFricationAmpdb;             \/\/ Amp of frication in dB,          0 to   80    $/;"	m	class:klatt_frame
mFrom	thirdparty/soloud/include/soloud/soloud_fader.h	/^		float mFrom;$/;"	m	class:SoLoud::Fader
mFunc	thirdparty/soloud/src/core/soloud_thread.cpp	/^			threadFunction mFunc;$/;"	m	struct:SoLoud::Thread::soloud_thread_data	file:
mFuncName	thirdparty/soloud/src/tools/codegen/main.cpp	/^	string mFuncName;$/;"	m	struct:Method	file:
mFunction	thirdparty/glfw/src/deps/tinycthread.c	/^  thrd_start_t mFunction; \/**< Pointer to the function to be executed. *\/$/;"	m	struct:__anon186	file:
mGlobalVolume	thirdparty/soloud/include/soloud/soloud.h	/^		float mGlobalVolume;$/;"	m	class:SoLoud::Soloud
mGlobalVolumeFader	thirdparty/soloud/include/soloud/soloud.h	/^		Fader mGlobalVolumeFader;$/;"	m	class:SoLoud::Soloud
mGlotLast	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mGlotLast;            \/\/ Previous value of glotout  $/;"	m	class:klatt
mHandle	thirdparty/glfw/src/deps/tinycthread.h	/^  CRITICAL_SECTION mHandle;   \/* Critical section handle *\/$/;"	m	struct:__anon182
mHandle	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		handle mHandle;$/;"	m	class:SoLoud::AudioSourceInstance3dData
mHardwareChannels	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mHardwareChannels;$/;"	m	class:SoLoud::Monotone
mHeight	thirdparty/imguizmo/src/ImGuizmo.cpp	/^	  float mHeight = 0.f;$/;"	m	struct:ImGuizmo::Context	file:
mHighestVoice	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mHighestVoice;$/;"	m	class:SoLoud::Soloud
mIndex	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^		double mIndex;$/;"	m	class:SoLoud::FlangerFilterInstance
mInputBuffer	thirdparty/soloud/include/soloud/soloud_fftfilter.h	/^		float *mInputBuffer;$/;"	m	class:SoLoud::FFTFilterInstance
mInstance	thirdparty/soloud/include/soloud/soloud_bus.h	/^		BusInstance *mInstance;$/;"	m	class:SoLoud::Bus
mIntDelay	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	char  mIntDelay;$/;"	m	class:Interp	file:
mInterpolator	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	  Interp mInterpolator[ELM_COUNT];$/;"	m	class:Element	file:
mIpa	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	  const char  *mIpa; \/\/ unused$/;"	m	class:Element	file:
mKey	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	int mKey;$/;"	m	class:PhonemeToElements	file:
mKlattFramePars	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	klatt_frame mKlattFramePars;$/;"	m	class:klatt
mLastClockedTime	thirdparty/soloud/include/soloud/soloud.h	/^		time mLastClockedTime;$/;"	m	class:SoLoud::Soloud
mLastElement	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	Element * mLastElement;$/;"	m	class:klatt
mLastNote	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mLastNote;$/;"	m	struct:SoLoud::MonotoneChannel
mLeftoverSamples	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int mLeftoverSamples;$/;"	m	class:SoLoud::AudioSourceInstance
mLength	thirdparty/soloud/include/soloud/soloud_dcremovalfilter.h	/^		float mLength;$/;"	m	class:SoLoud::DCRemovalFilter
mLoopCount	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int mLoopCount;$/;"	m	class:SoLoud::AudioSourceInstance
mMVP	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      matrix_t mMVP;$/;"	m	struct:ImGuizmo::Context	file:
mMatrixOrigin	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mMatrixOrigin;$/;"	m	struct:ImGuizmo::Context	file:
mMaxActiveVoices	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mMaxActiveVoices;$/;"	m	class:SoLoud::Soloud
mMaxTask	thirdparty/soloud/include/soloud/soloud_thread.h	/^			int mMaxTask; \/\/ how many tasks are pending$/;"	m	class:SoLoud::Thread::Pool
mMemFile	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		File *mMemFile;$/;"	m	class:SoLoud::WavStream
mMethod	thirdparty/soloud/src/tools/codegen/main.cpp	/^	vector<Method *> mMethod;$/;"	m	struct:Class	file:
mMixBuffer	thirdparty/soloud/include/soloud/soloud_fftfilter.h	/^		float *mMixBuffer;$/;"	m	class:SoLoud::FFTFilterInstance
mMode	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      MODE mMode;$/;"	m	struct:ImGuizmo::Context	file:
mModel	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      matrix_t mModel;$/;"	m	struct:ImGuizmo::Context	file:
mModel	thirdparty/soloud/include/soloud/soloud_tedsid.h	/^		int mModel;$/;"	m	class:SoLoud::TedSid
mModelInverse	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      matrix_t mModelInverse;$/;"	m	struct:ImGuizmo::Context	file:
mModelScaleOrigin	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mModelScaleOrigin;$/;"	m	struct:ImGuizmo::Context	file:
mModelSource	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      matrix_t mModelSource;$/;"	m	struct:ImGuizmo::Context	file:
mModelSourceInverse	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      matrix_t mModelSourceInverse;$/;"	m	struct:ImGuizmo::Context	file:
mModfile	thirdparty/soloud/include/soloud/soloud_openmpt.h	/^		void *mModfile;$/;"	m	class:SoLoud::OpenmptInstance
mNLast	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mNLast;               \/\/ Previous output of random number generator  $/;"	m	class:klatt
mNMod	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mNMod;          \/\/ Position in period to begin noise amp. modul $/;"	m	class:klatt
mNOpen	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mNOpen;         \/\/ Number of samples in open phase of period  $/;"	m	class:klatt
mNPer	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mNPer;          \/\/ Current loc in voicing period   40000 samp\/s$/;"	m	class:klatt
mNTStress	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mNTStress;$/;"	m	class:klatt
mName	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	  const char *mName; \/\/ unused$/;"	m	class:Element	file:
mName	thirdparty/soloud/src/tools/codegen/main.cpp	/^	string mName;$/;"	m	struct:Class	file:
mName	thirdparty/soloud/src/tools/codegen/main.cpp	/^	string mName;$/;"	m	struct:Enum	file:
mNasalPole	thirdparty/soloud/src/audiosource/speech/klatt.h	/^		      mParallelResoNasalPole, mNasalPole, mNasalZero, $/;"	m	class:klatt
mNasalPoleBandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mNasalPoleBandwidth;         \/\/ Nasal pole bw in Hz,             40 to 1000   $/;"	m	class:klatt_frame
mNasalPoleFreq	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mNasalPoleFreq;              \/\/ Nasal pole freq in Hz,           248 to  528  $/;"	m	class:klatt_frame
mNasalZero	thirdparty/soloud/src/audiosource/speech/klatt.h	/^		      mParallelResoNasalPole, mNasalPole, mNasalZero, $/;"	m	class:klatt
mNasalZeroBandwidth	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mNasalZeroBandwidth;         \/\/ Nasal zero bw in Hz,             40 to 1000   $/;"	m	class:klatt_frame
mNasalZeroFreq	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mNasalZeroFreq;              \/\/ Nasal zero freq in Hz,           248 to  528  $/;"	m	class:klatt_frame
mNatglotA	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mNatglotA;           \/\/ Makes waveshape of glottal pulse when open  $/;"	m	class:klatt
mNatglotB	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mNatglotB;           \/\/ Makes waveshape of glottal pulse when open  $/;"	m	class:klatt
mNextChannel	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mNextChannel;$/;"	m	class:SoLoud::MonotoneInstance
mNextReg	thirdparty/soloud/include/soloud/soloud_tedsid.h	/^		int mNextReg;$/;"	m	class:SoLoud::TedSidInstance
mNextVal	thirdparty/soloud/include/soloud/soloud_tedsid.h	/^		int mNextVal;$/;"	m	class:SoLoud::TedSidInstance
mNoSamplesInOpenPeriod	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mNoSamplesInOpenPeriod;      \/\/ # of samples in open period,     10 to   65   $/;"	m	class:klatt_frame
mNotesHz	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mNotesHz[800];$/;"	m	class:SoLoud::Monotone
mNspFr	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mNspFr;$/;"	m	class:klatt
mNumParams	thirdparty/soloud/include/soloud/soloud_filter.h	/^		unsigned int mNumParams;$/;"	m	class:SoLoud::FilterInstance
mOffset	thirdparty/soloud/include/soloud/soloud_dcremovalfilter.h	/^		int mOffset;$/;"	m	class:SoLoud::DCRemovalFilterInstance
mOffset	thirdparty/soloud/include/soloud/soloud_echofilter.h	/^		int mOffset;$/;"	m	class:SoLoud::EchoFilterInstance
mOffset	thirdparty/soloud/include/soloud/soloud_fftfilter.h	/^		unsigned int mOffset[MAX_CHANNELS];$/;"	m	class:SoLoud::FFTFilterInstance
mOffset	thirdparty/soloud/include/soloud/soloud_file.h	/^		unsigned int mOffset;$/;"	m	class:SoLoud::MemoryFile
mOffset	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^		int mOffset;$/;"	m	class:SoLoud::FlangerFilterInstance
mOffset	thirdparty/soloud/include/soloud/soloud_speech.h	/^		int mOffset;$/;"	m	class:SoLoud::SpeechInstance
mOffset	thirdparty/soloud/include/soloud/soloud_wav.h	/^		unsigned int mOffset;$/;"	m	class:SoLoud::WavInstance
mOffset	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		unsigned int mOffset;$/;"	m	class:SoLoud::WavStreamInstance
mOgg	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		int mOgg;$/;"	m	class:SoLoud::WavStream
mOgg	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		stb_vorbis *mOgg;$/;"	m	class:SoLoud::WavStreamInstance
mOggFrameOffset	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		unsigned int mOggFrameOffset;$/;"	m	class:SoLoud::WavStreamInstance
mOggFrameSize	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		unsigned int mOggFrameSize;$/;"	m	class:SoLoud::WavStreamInstance
mOggOutputs	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		float **mOggOutputs;$/;"	m	class:SoLoud::WavStreamInstance
mOneMd	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mOneMd;               \/\/ in voicing one-pole ELM_FEATURE_LOW-pass filter  $/;"	m	class:klatt
mOrder	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mOrder;$/;"	m	class:SoLoud::MonotoneInstance
mOrder	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		unsigned char mOrder[256];$/;"	m	struct:SoLoud::MonotoneSong
mOrigParmCast	thirdparty/soloud/src/tools/codegen/main.cpp	/^	vector<string> mOrigParmCast;$/;"	m	struct:Method	file:
mOutput	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		MonotoneHardwareChannel mOutput[12];$/;"	m	class:SoLoud::MonotoneInstance
mOutputLowPassFilter	thirdparty/soloud/src/audiosource/speech/klatt.h	/^			  mCritDampedGlotLowPassFilter, mDownSampLowPassFilter, mOutputLowPassFilter;$/;"	m	class:klatt
mOutputScratch	thirdparty/soloud/include/soloud/soloud.h	/^		AlignedFloatBuffer mOutputScratch;$/;"	m	class:SoLoud::Soloud
mOverallGaindb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mOverallGaindb;              \/\/ Overall gain, 60 dB is unity,    0 to   60  $/;"	m	class:klatt_frame
mOverallRelativePlaySpeed	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float mOverallRelativePlaySpeed;$/;"	m	class:SoLoud::AudioSourceInstance
mOverallVolume	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float mOverallVolume;$/;"	m	class:SoLoud::AudioSourceInstance
mP1	thirdparty/soloud/src/audiosource/speech/resonator.h	/^	float mA, mB, mC, mP1, mP2;$/;"	m	class:resonator
mP2	thirdparty/soloud/src/audiosource/speech/resonator.h	/^	float mA, mB, mC, mP1, mP2;$/;"	m	class:resonator
mPalallelVoicingAmpdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mPalallelVoicingAmpdb;       \/\/ Amp of voicing,  par in dB,      0 to   70  $/;"	m	class:klatt_frame
mPan	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float mPan;$/;"	m	class:SoLoud::AudioSourceInstance
mPanFader	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		Fader mPanFader;$/;"	m	class:SoLoud::AudioSourceInstance
mParallelFormant1	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	resonator mParallelFormant1, mParallelFormant2, mParallelFormant3, $/;"	m	class:klatt
mParallelFormant2	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	resonator mParallelFormant1, mParallelFormant2, mParallelFormant3, $/;"	m	class:klatt
mParallelFormant3	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	resonator mParallelFormant1, mParallelFormant2, mParallelFormant3, $/;"	m	class:klatt
mParallelFormant4	thirdparty/soloud/src/audiosource/speech/klatt.h	/^		      mParallelFormant4, mParallelFormant5, mParallelFormant6,$/;"	m	class:klatt
mParallelFormant5	thirdparty/soloud/src/audiosource/speech/klatt.h	/^		      mParallelFormant4, mParallelFormant5, mParallelFormant6,$/;"	m	class:klatt
mParallelFormant6	thirdparty/soloud/src/audiosource/speech/klatt.h	/^		      mParallelFormant4, mParallelFormant5, mParallelFormant6,$/;"	m	class:klatt
mParallelNasalPoleAmpdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mParallelNasalPoleAmpdb;     \/\/ Amp of par nasal pole in dB,     0 to   80  $/;"	m	class:klatt_frame
mParallelResoNasalPole	thirdparty/soloud/src/audiosource/speech/klatt.h	/^		      mParallelResoNasalPole, mNasalPole, mNasalZero, $/;"	m	class:klatt
mParam	thirdparty/soloud/include/soloud/soloud_filter.h	/^		float *mParam;$/;"	m	class:SoLoud::FilterInstance
mParam	thirdparty/soloud/src/core/soloud_thread.cpp	/^			void *mParam;$/;"	m	struct:SoLoud::Thread::soloud_thread_data	file:
mParamChanged	thirdparty/soloud/include/soloud/soloud_filter.h	/^		unsigned int mParamChanged;$/;"	m	class:SoLoud::FilterInstance
mParamFader	thirdparty/soloud/include/soloud/soloud_filter.h	/^		Fader *mParamFader;$/;"	m	class:SoLoud::FilterInstance
mParams	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		SfxrParams mParams;$/;"	m	class:SoLoud::Sfxr
mParams	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		SfxrParams mParams;$/;"	m	class:SoLoud::SfxrInstance
mParent	thirdparty/soloud/include/soloud/soloud_bassboostfilter.h	/^		BassboostFilter *mParent;$/;"	m	class:SoLoud::BassboostFilterInstance
mParent	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		BiquadResonantFilter *mParent;$/;"	m	class:SoLoud::BiquadResonantFilterInstance
mParent	thirdparty/soloud/include/soloud/soloud_bus.h	/^		Bus *mParent;$/;"	m	class:SoLoud::BusInstance
mParent	thirdparty/soloud/include/soloud/soloud_dcremovalfilter.h	/^		DCRemovalFilter *mParent;$/;"	m	class:SoLoud::DCRemovalFilterInstance
mParent	thirdparty/soloud/include/soloud/soloud_echofilter.h	/^		EchoFilter *mParent;$/;"	m	class:SoLoud::EchoFilterInstance
mParent	thirdparty/soloud/include/soloud/soloud_fftfilter.h	/^		FFTFilter *mParent;$/;"	m	class:SoLoud::FFTFilterInstance
mParent	thirdparty/soloud/include/soloud/soloud_flangerfilter.h	/^		FlangerFilter *mParent;$/;"	m	class:SoLoud::FlangerFilterInstance
mParent	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^		LofiFilter *mParent;$/;"	m	class:SoLoud::LofiFilterInstance
mParent	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		Monotone *mParent;		$/;"	m	class:SoLoud::MonotoneInstance
mParent	thirdparty/soloud/include/soloud/soloud_openmpt.h	/^		Openmpt *mParent;$/;"	m	class:SoLoud::OpenmptInstance
mParent	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		Sfxr *mParent;$/;"	m	class:SoLoud::SfxrInstance
mParent	thirdparty/soloud/include/soloud/soloud_speech.h	/^		Speech *mParent;$/;"	m	class:SoLoud::SpeechInstance
mParent	thirdparty/soloud/include/soloud/soloud_tedsid.h	/^		TedSid *mParent;		$/;"	m	class:SoLoud::TedSidInstance
mParent	thirdparty/soloud/include/soloud/soloud_wav.h	/^		Wav *mParent;$/;"	m	class:SoLoud::WavInstance
mParent	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		WavStream *mParent;$/;"	m	class:SoLoud::WavStreamInstance
mParent	thirdparty/soloud/src/tools/codegen/main.cpp	/^	string mParent;$/;"	m	struct:Class	file:
mParmName	thirdparty/soloud/src/tools/codegen/main.cpp	/^	vector<string> mParmName;$/;"	m	struct:Method	file:
mParmType	thirdparty/soloud/src/tools/codegen/main.cpp	/^	vector<string> mParmType;$/;"	m	struct:Method	file:
mParmValue	thirdparty/soloud/src/tools/codegen/main.cpp	/^	vector<string> mParmValue;$/;"	m	struct:Method	file:
mPatternData	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		unsigned int *mPatternData; \/\/ 64 rows * mTotalPatterns * mTotalTracks$/;"	m	struct:SoLoud::MonotoneSong
mPauseScheduler	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		Fader mPauseScheduler;$/;"	m	class:SoLoud::AudioSourceInstance
mPlayIndex	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mPlayIndex;$/;"	m	class:SoLoud::Soloud
mPlayIndex	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int mPlayIndex;$/;"	m	class:SoLoud::AudioSourceInstance
mPlaying	thirdparty/soloud/include/soloud/soloud_openmpt.h	/^		int mPlaying;$/;"	m	class:SoLoud::OpenmptInstance
mPortamento	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mPortamento;$/;"	m	struct:SoLoud::MonotoneChannel
mPortamentoToNote	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mPortamentoToNote;$/;"	m	struct:SoLoud::MonotoneChannel
mPostClipScaler	thirdparty/soloud/include/soloud/soloud.h	/^		float mPostClipScaler;$/;"	m	class:SoLoud::Soloud
mProjectionMat	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      matrix_t mProjectionMat;$/;"	m	struct:ImGuizmo::Context	file:
mProportion	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	char  mProportion;$/;"	m	class:Interp	file:
mRK	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	  const char mRK;$/;"	m	class:Element	file:
mRand	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		Prg mRand;$/;"	m	class:SoLoud::Sfxr
mRand	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		Prg mRand;$/;"	m	class:SoLoud::SfxrInstance
mRayOrigin	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mRayOrigin;$/;"	m	struct:ImGuizmo::Context	file:
mRayVector	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mRayVector;$/;"	m	struct:ImGuizmo::Context	file:
mRecursive	thirdparty/glfw/src/deps/tinycthread.h	/^  int mRecursive;             \/* TRUE if the mutex is recursive *\/$/;"	m	struct:__anon182
mRef	thirdparty/soloud/src/tools/codegen/main.cpp	/^	vector<int> mRef;$/;"	m	struct:Method	file:
mRegValues	thirdparty/soloud/include/soloud/soloud_tedsid.h	/^		int mRegValues[128];$/;"	m	class:SoLoud::TedSidInstance
mRelativeOrigin	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mRelativeOrigin;$/;"	m	struct:ImGuizmo::Context	file:
mRelativePlaySpeedFader	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		Fader mRelativePlaySpeedFader;$/;"	m	class:SoLoud::AudioSourceInstance
mResampleData	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		AudioSourceResampleData *mResampleData[2];$/;"	m	class:SoLoud::AudioSourceInstance
mResonance	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		float mResonance;$/;"	m	class:SoLoud::BiquadResonantFilter
mRetType	thirdparty/soloud/src/tools/codegen/main.cpp	/^	string mRetType;$/;"	m	struct:Method	file:
mRobin	thirdparty/soloud/include/soloud/soloud_thread.h	/^			int mRobin; \/\/ cyclic counter, used to pick jobs for threads$/;"	m	class:SoLoud::Thread::Pool
mRotationAngle	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float mRotationAngle;$/;"	m	struct:ImGuizmo::Context	file:
mRotationAngleOrigin	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float mRotationAngleOrigin;$/;"	m	struct:ImGuizmo::Context	file:
mRotationVectorSource	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mRotationVectorSource;$/;"	m	struct:ImGuizmo::Context	file:
mRow	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mRow;$/;"	m	class:SoLoud::MonotoneInstance
mRowTick	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mRowTick;$/;"	m	class:SoLoud::MonotoneInstance
mRunning	thirdparty/soloud/include/soloud/soloud_thread.h	/^			volatile int mRunning; \/\/ running flag, used to flag threads to stop$/;"	m	class:SoLoud::Thread::Pool
mSID	thirdparty/soloud/include/soloud/soloud_tedsid.h	/^		SIDsound *mSID;$/;"	m	class:SoLoud::TedSidInstance
mSample	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^		float mSample;$/;"	m	struct:SoLoud::LofiChannelData
mSample	thirdparty/soloud/include/soloud/soloud_speech.h	/^		short *mSample;$/;"	m	class:SoLoud::SpeechInstance
mSampleCount	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mSampleCount;$/;"	m	class:SoLoud::MonotoneInstance
mSampleCount	thirdparty/soloud/include/soloud/soloud_speech.h	/^		int mSampleCount;$/;"	m	class:SoLoud::SpeechInstance
mSampleCount	thirdparty/soloud/include/soloud/soloud_tedsid.h	/^		unsigned int mSampleCount;$/;"	m	class:SoLoud::TedSidInstance
mSampleCount	thirdparty/soloud/include/soloud/soloud_wav.h	/^		unsigned int mSampleCount;$/;"	m	class:SoLoud::Wav
mSampleCount	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		unsigned int mSampleCount;$/;"	m	class:SoLoud::WavStream
mSamplePos	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		float mSamplePos;$/;"	m	struct:SoLoud::MonotoneHardwareChannel
mSamplePosInc	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		float mSamplePosInc;$/;"	m	struct:SoLoud::MonotoneHardwareChannel
mSampleRate	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		float mSampleRate;$/;"	m	class:SoLoud::BiquadResonantFilter
mSampleRate	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^		float mSampleRate;$/;"	m	class:SoLoud::LofiFilter
mSampleRate	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mSampleRate;$/;"	m	class:klatt
mSamplerate	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mSamplerate;$/;"	m	class:SoLoud::Soloud
mSamplerate	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float mSamplerate;$/;"	m	class:SoLoud::AudioSourceInstance
mSamplesToSkip	thirdparty/soloud/include/soloud/soloud_lofifilter.h	/^		float mSamplesToSkip;$/;"	m	struct:SoLoud::LofiChannelData
mSaveMousePosx	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float mSaveMousePosx;$/;"	m	struct:ImGuizmo::Context	file:
mScale	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mScale;$/;"	m	struct:ImGuizmo::Context	file:
mScaleValueOrigin	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mScaleValueOrigin;$/;"	m	struct:ImGuizmo::Context	file:
mScratch	thirdparty/soloud/include/soloud/soloud.h	/^		AlignedFloatBuffer mScratch;$/;"	m	class:SoLoud::Soloud
mScratch	thirdparty/soloud/include/soloud/soloud_bus.h	/^		AlignedFloatBuffer mScratch;$/;"	m	class:SoLoud::BusInstance
mScratchNeeded	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mScratchNeeded;$/;"	m	class:SoLoud::Soloud
mScratchSize	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mScratchSize;$/;"	m	class:SoLoud::Soloud
mScratchSize	thirdparty/soloud/include/soloud/soloud_bus.h	/^		unsigned int mScratchSize;$/;"	m	class:SoLoud::BusInstance
mScreenFactor	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float mScreenFactor;$/;"	m	struct:ImGuizmo::Context	file:
mScreenSquareCenter	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      ImVec2 mScreenSquareCenter;$/;"	m	struct:ImGuizmo::Context	file:
mScreenSquareMax	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      ImVec2 mScreenSquareMax;$/;"	m	struct:ImGuizmo::Context	file:
mScreenSquareMin	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      ImVec2 mScreenSquareMin;$/;"	m	struct:ImGuizmo::Context	file:
mSetRelativePlaySpeed	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float mSetRelativePlaySpeed;$/;"	m	class:SoLoud::AudioSourceInstance
mSetVolume	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float mSetVolume;$/;"	m	class:SoLoud::AudioSourceInstance
mSkew	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mSkew;                  \/\/ Alternating jitter, in half-period units  $/;"	m	class:klatt
mSkewnessOfAlternatePeriods	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mSkewnessOfAlternatePeriods;         \/\/ Skewness of alternate periods,0 to   40  $/;"	m	class:klatt
mSkewnessOfAlternatePeriods	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mSkewnessOfAlternatePeriods; \/\/ Skewness of alternate periods,   0 to   40 in sample#\/2$/;"	m	class:klatt_frame
mSoloud	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		Soloud *mSoloud;$/;"	m	class:SoLoud::AudioSource
mSong	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		MonotoneSong mSong;$/;"	m	class:SoLoud::Monotone
mSrcOffset	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		unsigned int mSrcOffset;$/;"	m	class:SoLoud::AudioSourceInstance
mStartTime	thirdparty/soloud/include/soloud/soloud_fader.h	/^		time mStartTime;$/;"	m	class:SoLoud::Fader
mState	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		BQRStateData mState[2];$/;"	m	class:SoLoud::BiquadResonantFilterInstance
mSteady	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	float mSteady;$/;"	m	class:Interp	file:
mStopScheduler	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		Fader mStopScheduler;$/;"	m	class:SoLoud::AudioSourceInstance
mStreamFile	thirdparty/soloud/include/soloud/soloud_wavstream.h	/^		File *mStreamFile;$/;"	m	class:SoLoud::WavStream
mStreamTime	thirdparty/soloud/include/soloud/soloud.h	/^		time mStreamTime;$/;"	m	class:SoLoud::Soloud
mStreamTime	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		time mStreamTime;$/;"	m	class:SoLoud::AudioSourceInstance
mStressE	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	Slope mStressE;$/;"	m	class:klatt
mStressS	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	Slope mStressS;$/;"	m	class:klatt
mSynth	thirdparty/soloud/include/soloud/soloud_speech.h	/^		klatt mSynth;$/;"	m	class:SoLoud::SpeechInstance
mT0	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mT0;            \/\/ Fundamental period in output samples times 4 $/;"	m	class:klatt
mTED	thirdparty/soloud/include/soloud/soloud_tedsid.h	/^		TED *mTED;$/;"	m	class:SoLoud::TedSidInstance
mTStress	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mTStress;$/;"	m	class:klatt
mTaskArray	thirdparty/soloud/include/soloud/soloud_thread.h	/^			PoolTask *mTaskArray[MAX_THREADPOOL_TASKS]; \/\/ pointers to tasks$/;"	m	class:SoLoud::Thread::Pool
mTemp	thirdparty/soloud/include/soloud/soloud_fftfilter.h	/^		float *mTemp;$/;"	m	class:SoLoud::FFTFilterInstance
mTempo	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mTempo; \/\/ ticks \/ row. Tick = 60hz. Default 4.$/;"	m	class:SoLoud::MonotoneInstance
mThread	thirdparty/soloud/include/soloud/soloud_thread.h	/^			ThreadHandle *mThread; \/\/ array of thread handles$/;"	m	class:SoLoud::Thread::Pool
mThreadCount	thirdparty/soloud/include/soloud/soloud_thread.h	/^			int mThreadCount; \/\/ number of threads$/;"	m	class:SoLoud::Thread::Pool
mTime	thirdparty/soloud/include/soloud/soloud_fader.h	/^		time mTime;$/;"	m	class:SoLoud::Fader
mTime	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mTime;                      \/* transition time *\/$/;"	m	class:Slope
mTimeCount	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mTimeCount;     \/\/ used for f0 flutter$/;"	m	class:klatt
mTitle	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		char *mTitle;$/;"	m	struct:SoLoud::MonotoneSong
mTo	thirdparty/soloud/include/soloud/soloud_fader.h	/^		float mTo;$/;"	m	class:SoLoud::Fader
mTop	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mTop;$/;"	m	class:klatt
mTotalPatterns	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		unsigned char mTotalPatterns;$/;"	m	struct:SoLoud::MonotoneSong
mTotalTracks	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		unsigned char mTotalTracks;$/;"	m	struct:SoLoud::MonotoneSong
mTotals	thirdparty/soloud/include/soloud/soloud_dcremovalfilter.h	/^		float *mTotals;$/;"	m	class:SoLoud::DCRemovalFilterInstance
mTranslationPlan	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mTranslationPlan;$/;"	m	struct:ImGuizmo::Context	file:
mTranslationPlanOrigin	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t mTranslationPlanOrigin;$/;"	m	struct:ImGuizmo::Context	file:
mUD	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^	  const char mUD;$/;"	m	class:Element	file:
mUsed	thirdparty/soloud/src/audiosource/speech/darray.h	/^	int mUsed;$/;"	m	class:darray
mVLast	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mVLast;               \/\/ Previous output of voice  $/;"	m	class:klatt
mVWave	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mVWave;               \/\/ Ditto, but before multiplication by mVoicingAmpdb  $/;"	m	class:klatt
mValue	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	float mValue;                   \/* boundary value *\/$/;"	m	class:Slope
mValue	thirdparty/soloud/src/tools/codegen/main.cpp	/^	string mValue;$/;"	m	struct:Enum	file:
mVersion	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		unsigned char mVersion; \/\/ must be 1$/;"	m	struct:SoLoud::MonotoneSong
mVibTable	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mVibTable[32];$/;"	m	class:SoLoud::Monotone
mVibrato	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mVibrato;$/;"	m	struct:SoLoud::MonotoneChannel
mVibratoDepth	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mVibratoDepth;$/;"	m	struct:SoLoud::MonotoneChannel
mVibratoIndex	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mVibratoIndex;$/;"	m	struct:SoLoud::MonotoneChannel
mVibratoSpeed	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mVibratoSpeed;$/;"	m	struct:SoLoud::MonotoneChannel
mViewMat	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      matrix_t mViewMat;$/;"	m	struct:ImGuizmo::Context	file:
mViewProjection	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      matrix_t mViewProjection;$/;"	m	struct:ImGuizmo::Context	file:
mVisualizationWaveData	thirdparty/soloud/include/soloud/soloud.h	/^		float mVisualizationWaveData[256];$/;"	m	class:SoLoud::Soloud
mVisualizationWaveData	thirdparty/soloud/include/soloud/soloud_bus.h	/^		float mVisualizationWaveData[256];$/;"	m	class:SoLoud::BusInstance
mVoice	thirdparty/soloud/include/soloud/soloud.h	/^		AudioSourceInstance *mVoice[VOICE_COUNT];$/;"	m	class:SoLoud::Soloud
mVoiceGroup	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int **mVoiceGroup;$/;"	m	class:SoLoud::Soloud
mVoiceGroupCount	thirdparty/soloud/include/soloud/soloud.h	/^		unsigned int mVoiceGroupCount;$/;"	m	class:SoLoud::Soloud
mVoicingAmpdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mVoicingAmpdb;               \/\/ Amp of voicing in dB,            0 to   70    $/;"	m	class:klatt_frame
mVoicingAmpdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mVoicingAmpdb;          \/\/ Amp of voicing in dB,    0 to   70  $/;"	m	class:klatt
mVoicingBreathiness	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mVoicingBreathiness;         \/\/ Breathiness in voicing,          0 to   80    $/;"	m	class:klatt_frame
mVoicingSpectralTiltdb	thirdparty/soloud/src/audiosource/speech/klatt.h	/^	int mVoicingSpectralTiltdb;      \/\/ Voicing spectral tilt in dB,     0 to   24    $/;"	m	class:klatt_frame
mVolume	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		float mVolume;$/;"	m	class:SoLoud::AudioSource
mVolumeFader	thirdparty/soloud/include/soloud/soloud_audiosource.h	/^		Fader mVolumeFader;$/;"	m	class:SoLoud::AudioSourceInstance
mWaitersCount	thirdparty/glfw/src/deps/tinycthread.h	/^  unsigned int mWaitersCount;         \/* Count of the number of waiters. *\/$/;"	m	struct:__anon183
mWaitersCountLock	thirdparty/glfw/src/deps/tinycthread.h	/^  CRITICAL_SECTION mWaitersCountLock; \/* Serialize access to mWaitersCount. *\/$/;"	m	struct:__anon183
mWaveData	thirdparty/soloud/include/soloud/soloud.h	/^		float mWaveData[256];$/;"	m	class:SoLoud::Soloud
mWaveData	thirdparty/soloud/include/soloud/soloud_bus.h	/^		float mWaveData[256];$/;"	m	class:SoLoud::Bus
mWaveform	thirdparty/soloud/include/soloud/soloud_monotone.h	/^		int mWaveform;$/;"	m	class:SoLoud::Monotone
mWidth	thirdparty/imguizmo/src/ImGuizmo.cpp	/^	  float mWidth = 0.f;$/;"	m	struct:ImGuizmo::Context	file:
mWorkMutex	thirdparty/soloud/include/soloud/soloud_thread.h	/^			void *mWorkMutex; \/\/ mutex to protect task array\/maxtask$/;"	m	class:SoLoud::Thread::Pool
mX	thirdparty/imguizmo/src/ImGuizmo.cpp	/^	  float mX = 0.f;$/;"	m	struct:ImGuizmo::Context	file:
mX	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		float mX, mY, mZ;$/;"	m	struct:SoLoud::vec3	file:
mX1	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		float mY1, mY2, mX1, mX2;$/;"	m	struct:SoLoud::BQRStateData
mX2	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		float mY1, mY2, mX1, mX2;$/;"	m	struct:SoLoud::BQRStateData
mY	thirdparty/imguizmo/src/ImGuizmo.cpp	/^	  float mY = 0.f;$/;"	m	struct:ImGuizmo::Context	file:
mY	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		float mX, mY, mZ;$/;"	m	struct:SoLoud::vec3	file:
mY1	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		float mY1, mY2, mX1, mX2;$/;"	m	struct:SoLoud::BQRStateData
mY2	thirdparty/soloud/include/soloud/soloud_biquadresonantfilter.h	/^		float mY1, mY2, mX1, mX2;$/;"	m	struct:SoLoud::BQRStateData
mZ	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		float mX, mY, mZ;$/;"	m	struct:SoLoud::vec3	file:
m_assertionInfo	thirdparty/catch/include/catch/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_begin	lib/lib/include/lib/array.hpp	/^  T*      m_begin;$/;"	m	class:LIB_NS_NAME::array
m_capacity	lib/lib/include/lib/array.hpp	/^  T*      m_capacity;$/;"	m	class:LIB_NS_NAME::array
m_caseSensitivity	thirdparty/catch/include/catch/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_clocks	thirdparty/soloud/include/soloud/soloud_vic.h	/^		float			m_clocks[4];		\/\/ base clock frequencies for oscillators, dependent on VIC model$/;"	m	class:SoLoud::Vic
m_count	thirdparty/catch/include/catch/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_data	lib/roa/include/roa/color.hpp	/^  uint32_t          m_data;$/;"	m	class:ROA::final
m_data	thirdparty/catch/include/catch/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	thirdparty/catch/include/catch/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	thirdparty/catch/include/catch/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	thirdparty/catch/include/catch/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	thirdparty/catch/include/catch/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_end	lib/lib/include/lib/array.hpp	/^  T*      m_end;$/;"	m	class:LIB_NS_NAME::array
m_end	lib/roa/include/roa/ray.hpp	/^  Vector3     m_end;$/;"	m	class:ROA::Ray
m_exprComponents	thirdparty/catch/include/catch/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_id	lib/roa/include/roa/object.hpp	/^  mutable uint64_t      m_id;$/;"	m	class:ROA::Object
m_id	lib/roa/include/roa/resource.hpp	/^  mutable uint32_t m_id;$/;"	m	class:ROA::Resource
m_impl	lib/roa/include/roa/collection.hpp	/^  Impl *m_impl;$/;"	m	class:ROA::final
m_info	thirdparty/catch/include/catch/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_label	thirdparty/catch/include/catch/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_lineInfo	thirdparty/catch/include/catch/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_matcher	thirdparty/catch/include/catch/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matchers	thirdparty/catch/include/catch/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	thirdparty/catch/include/catch/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_method	thirdparty/catch/include/catch/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_model	thirdparty/soloud/include/soloud/soloud_vic.h	/^		int				m_model;$/;"	m	class:SoLoud::Vic
m_node_id	lib/nil/include/nil/node.hpp	/^  mutable uint32_t  m_node_id;$/;"	m	class:Nil::final
m_noise	thirdparty/soloud/include/soloud/soloud_vic.h	/^		unsigned char 	m_noise[8192];$/;"	m	class:SoLoud::Vic
m_noisePos	thirdparty/soloud/include/soloud/soloud_vic.h	/^		unsigned int	m_noisePos;$/;"	m	class:SoLoud::VicInstance
m_p	thirdparty/catch/include/catch/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_parent	thirdparty/soloud/include/soloud/soloud_vic.h	/^		Vic*			m_parent;$/;"	m	class:SoLoud::VicInstance
m_phase	thirdparty/soloud/include/soloud/soloud_vic.h	/^		unsigned int	m_phase[4];$/;"	m	class:SoLoud::VicInstance
m_rc	thirdparty/catch/include/catch/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_regs	thirdparty/soloud/include/soloud/soloud_vic.h	/^		unsigned char	m_regs[MAX_REGS];		$/;"	m	class:SoLoud::Vic
m_resultData	thirdparty/catch/include/catch/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_sample	thirdparty/remotery/src/Remotery.c	/^    Sample m_sample;$/;"	m	struct:MetalSample	file:
m_sample	thirdparty/remotery/src/Remotery.c	/^    Sample m_sample;$/;"	m	struct:OpenGLSample	file:
m_shouldDebugBreak	thirdparty/catch/include/catch/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	thirdparty/catch/include/catch/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_stack_data	lib/lib/include/lib/array.hpp	/^  T       m_stack_data[_init_capacity ? _init_capacity : 1];$/;"	m	class:LIB_NS_NAME::array
m_start	lib/roa/include/roa/ray.hpp	/^  Vector3     m_start;$/;"	m	class:ROA::Ray
m_str	thirdparty/catch/include/catch/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_stream	thirdparty/catch/include/catch/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_what	thirdparty/catch/include/catch/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
ma	thirdparty/stb/include/stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon89
machineDoSomeFrames	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void machineDoSomeFrames(unsigned int count)$/;"	f
machineInit	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^TED *machineInit()$/;"	f
machineReset	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void machineReset()$/;"	f
machineShutDown	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void machineShutDown()$/;"	f
macroName	thirdparty/catch/include/catch/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
mag	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		float mag()$/;"	f	struct:SoLoud::vec3
magFilter	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFilter                magFilter;$/;"	m	struct:VkSamplerCreateInfo
magnitude	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 magnitude;$/;"	m	struct:__anon208	file:
magnitude	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 magnitude;$/;"	m	struct:__anon121	file:
main	app/blank/src/main.cpp	/^main()$/;"	f
main	app/perils/src/main.cpp	/^main()$/;"	f
main	thirdparty/soloud/src/tools/codegen/main.cpp	/^int main(int parc, char ** pars)$/;"	f
main	thirdparty/soloud/src/tools/lutgen/main.cpp	/^int main(int parc, char ** pars)$/;"	f
main	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^int main(int parc, char ** pars)$/;"	f
main	thirdparty/soloud/src/tools/tedsid2dump/main.cpp	/^int main(int argc, char *argv[])$/;"	f
main	thirdparty/stb/include/stb/stb_divide.h	/^int main(int argc, char **argv)$/;"	f
main	thirdparty/stb/include/stb/stb_truetype.h	/^int main(int argc, char **argv)$/;"	f
major	lib/nil/include/nil/data/window.hpp	/^  uint32_t      major;$/;"	m	struct:Nil::Data::Window
major	thirdparty/glfw/src/deps/glad/glad.h	/^    int major;$/;"	m	struct:gladGLversionStruct
major	thirdparty/glfw/src/egl_context.h	/^    EGLint          major, minor;$/;"	m	struct:_GLFWlibraryEGL
major	thirdparty/glfw/src/glx_context.h	/^    int             major, minor;$/;"	m	struct:_GLFWlibraryGLX
major	thirdparty/glfw/src/internal.h	/^    int                 major, minor, revision;$/;"	m	struct:_GLFWcontext
major	thirdparty/glfw/src/internal.h	/^    int           major;$/;"	m	struct:_GLFWctxconfig
major	thirdparty/glfw/src/x11_platform.h	/^        int         major;$/;"	m	struct:_GLFWlibraryX11::__anon145
major	thirdparty/glfw/src/x11_platform.h	/^        int         major;$/;"	m	struct:_GLFWlibraryX11::__anon146
major	thirdparty/glfw/src/x11_platform.h	/^        int         major;$/;"	m	struct:_GLFWlibraryX11::__anon149
major	thirdparty/glfw/src/x11_platform.h	/^        int         major;$/;"	m	struct:_GLFWlibraryX11::__anon152
major	thirdparty/opengl/src/gl3w.cpp	/^	int major, minor;$/;"	m	struct:__anon53	file:
majorOpcode	thirdparty/glfw/src/x11_platform.h	/^        int         majorOpcode;$/;"	m	struct:_GLFWlibraryX11::__anon146
majorOpcode	thirdparty/glfw/src/x11_platform.h	/^        int         majorOpcode;$/;"	m	struct:_GLFWlibraryX11::__anon152
makeContextCurrentEGL	thirdparty/glfw/src/egl_context.c	/^static void makeContextCurrentEGL(_GLFWwindow* window)$/;"	f	file:
makeContextCurrentGLX	thirdparty/glfw/src/glx_context.c	/^static void makeContextCurrentGLX(_GLFWwindow* window)$/;"	f	file:
makeContextCurrentOSMesa	thirdparty/glfw/src/osmesa_context.c	/^static void makeContextCurrentOSMesa(_GLFWwindow* window)$/;"	f	file:
makeContextCurrentWGL	thirdparty/glfw/src/wgl_context.c	/^static void makeContextCurrentWGL(_GLFWwindow* window)$/;"	f	file:
makeCurrent	thirdparty/glfw/src/internal.h	/^    _GLFWmakecontextcurrentfun  makeCurrent;$/;"	m	struct:_GLFWcontext
makeSafe	thirdparty/catch/include/catch/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeString	thirdparty/catch/include/catch/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	thirdparty/catch/include/catch/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeVect	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   vec_t makeVect(float _x, float _y, float _z = 0.f, float _w = 0.f) { vec_t res; res.x = _x; res.y = _y; res.z = _z; res.w = _w; return res; }$/;"	f	namespace:ImGuizmo
make_block_array	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void *make_block_array(void *mem, int count, int size)$/;"	f	file:
make_block_array	thirdparty/stb/include/stb/stb_vorbis.c	/^static void *make_block_array(void *mem, int count, int size)$/;"	f	file:
malloc	thirdparty/remotery/include/remotery/Remotery.h	/^    rmtMallocPtr malloc;$/;"	m	struct:rmtSettings
malloc	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	566;"	d	file:
malloc	thirdparty/stb/include/stb/stb_vorbis.c	563;"	d	file:
mapEntryCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                           mapEntryCount;$/;"	m	struct:VkSpecializationInfo
map_count	lib/lib/include/lib/model.hpp	/^  uint32_t  map_count;$/;"	m	struct:LIB_NS_NAME::material
map_path	lib/lib/include/lib/model.hpp	/^  char      **map_path;$/;"	m	struct:LIB_NS_NAME::material
map_type	lib/lib/include/lib/model.hpp	/^  uint32_t  *map_type;$/;"	m	struct:LIB_NS_NAME::material
map_type	lib/lib/include/lib/model.hpp	/^namespace map_type {$/;"	n	namespace:LIB_NS_NAME
mapping	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   Mapping *mapping;$/;"	m	struct:stb_vorbis	file:
mapping	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 mapping;$/;"	m	struct:__anon210	file:
mapping	thirdparty/stb/include/stb/stb_vorbis.c	/^   Mapping *mapping;$/;"	m	struct:stb_vorbis	file:
mapping	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 mapping;$/;"	m	struct:__anon123	file:
mapping_count	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int mapping_count;$/;"	m	struct:stb_vorbis	file:
mapping_count	thirdparty/stb/include/stb/stb_vorbis.c	/^   int mapping_count;$/;"	m	struct:stb_vorbis	file:
marker	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_buffer_marker marker[NK_BUFFER_MAX];$/;"	m	struct:nk_buffer	typeref:struct:nk_buffer::nk_buffer_marker
marker	thirdparty/stb/include/stb/stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon81
mask	thirdparty/remotery/src/Remotery.c	/^        rmtU8 mask[4];$/;"	m	union:__anon63::__anon64	file:
mask_offset	thirdparty/remotery/src/Remotery.c	/^    rmtU32 mask_offset;$/;"	m	struct:__anon63	file:
mask_u32	thirdparty/remotery/src/Remotery.c	/^        rmtU32 mask_u32;$/;"	m	union:__anon63::__anon64	file:
masterVolume	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	\/*static*\/ unsigned int masterVolume;$/;"	m	class:SIDsound
masterVolume	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    unsigned int    masterVolume;$/;"	m	class:TED
masterVolume	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^unsigned int SIDsound::masterVolume = 0;$/;"	m	class:SIDsound	file:
masterVolume	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	static unsigned int masterVolume;$/;"	m	class:SIDsound
masterVolume	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	static unsigned int masterVolume;$/;"	m	class:TED
masterVolume	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^unsigned int		   TED::masterVolume;$/;"	m	class:TED	file:
master_vol	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float master_vol;$/;"	m	struct:SoLoud::SfxrParams
masteringVoice	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        IXAudio2MasteringVoice *masteringVoice;$/;"	m	struct:SoLoud::XAudio2Data	file:
mat3	lib/math/include/math/mat/mat_types.hpp	/^struct mat3$/;"	s
mat3	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	struct mat3$/;"	s	namespace:SoLoud	file:
mat3_add	lib/math/include/math/mat/mat3.hpp	/^mat3_add(const mat3 &lhs, const mat3 &rhs)$/;"	f
mat3_data	lib/math/include/math/mat/mat3.hpp	/^mat3_data(const mat3 &mat)$/;"	f
mat3_determinant	lib/math/include/math/mat/mat3.hpp	/^mat3_determinant(const mat3 &det)$/;"	f
mat3_get	lib/math/include/math/mat/mat3.hpp	/^mat3_get(const mat3 &mat, const uint32_t index)$/;"	f
mat3_get	lib/math/include/math/mat/mat3.hpp	/^mat3_get(const mat3 &mat, const uint32_t row, const uint32_t col)$/;"	f
mat3_id	lib/math/include/math/mat/mat3.hpp	/^mat3_id()$/;"	f
mat3_init	lib/math/include/math/mat/mat3.hpp	/^mat3_init()$/;"	f
mat3_init	lib/math/include/math/mat/mat3.hpp	/^mat3_init(const float array[])$/;"	f
mat3_init	lib/math/include/math/mat/mat3.hpp	/^mat3_init(const float x)$/;"	f
mat3_is_near	lib/math/include/math/mat/mat3.hpp	/^mat3_is_near(const mat3 &left,$/;"	f
mat3_is_not_near	lib/math/include/math/mat/mat3.hpp	/^mat3_is_not_near(const mat3 &left,$/;"	f
mat3_multiply	lib/math/include/math/mat/mat3.hpp	/^mat3_multiply(const mat3 &a, const mat3 &b, const mat3 &c)$/;"	f
mat3_multiply	lib/math/include/math/mat/mat3.hpp	/^mat3_multiply(const mat3 &lhs, const mat3 &rhs)$/;"	f
mat3_multiply	lib/math/include/math/mat/mat3.hpp	/^mat3_multiply(const vec3 lhs, const mat3 &rhs)$/;"	f
mat3_rotation_pitch_from_euler	lib/math/include/math/mat/mat3.hpp	/^mat3_rotation_pitch_from_euler(const float rad)$/;"	f
mat3_rotation_roll_from_euler	lib/math/include/math/mat/mat3.hpp	/^mat3_rotation_roll_from_euler(const float rad)$/;"	f
mat3_rotation_yaw_from_euler	lib/math/include/math/mat/mat3.hpp	/^mat3_rotation_yaw_from_euler(const float rad)$/;"	f
mat3_scale	lib/math/include/math/mat/mat3.hpp	/^mat3_scale(const float x, const float y)$/;"	f
mat3_scale	lib/math/include/math/mat/mat3.hpp	/^mat3_scale(const vec2 scale)$/;"	f
mat3_set	lib/math/include/math/mat/mat3.hpp	/^mat3_set(mat3 &mat, const uint32_t row, const uint32_t col, const float set)$/;"	f
mat3_subtract	lib/math/include/math/mat/mat3.hpp	/^mat3_subtract(const mat3 &lhs, const mat3 &rhs)$/;"	f
mat3_to_array	lib/math/include/math/mat/mat3.hpp	/^mat3_to_array(const mat3 &m, float out_data[9])$/;"	f
mat3_transpose	lib/math/include/math/mat/mat3.hpp	/^mat3_transpose(const mat3 &m)$/;"	f
mat3_zero	lib/math/include/math/mat/mat3.hpp	/^mat3_zero()$/;"	f
mat4	lib/math/include/math/mat/mat_types.hpp	/^struct mat4$/;"	s
mat4_add	lib/math/include/math/mat/mat4.hpp	/^mat4_add(const mat4 &lhs, const mat4 &rhs)$/;"	f
mat4_data	lib/math/include/math/mat/mat4.hpp	/^mat4_data(const mat4 &mat)$/;"	f
mat4_from_nil_transform	lib/nil_aspects/include/aspect/math_nil_extensions.hpp	/^mat4_from_nil_transform(const Nil::Data::Transform &trans)$/;"	f	namespace:math
mat4_get	lib/math/include/math/mat/mat4.hpp	/^mat4_get(const mat4 &mat, const uint32_t row, const uint32_t col)$/;"	f
mat4_get_determinant	lib/math/include/math/mat/mat4.hpp	/^mat4_get_determinant(const mat4 &det)$/;"	f
mat4_get_sub_mat3	lib/math/include/math/mat/mat4.hpp	/^mat4_get_sub_mat3(const mat4 &mat)$/;"	f
mat4_id	lib/math/include/math/mat/mat4.hpp	/^mat4_id()$/;"	f
mat4_init	lib/math/include/math/mat/mat4.hpp	/^mat4_init()$/;"	f
mat4_init	lib/math/include/math/mat/mat4.hpp	/^mat4_init(const float array[])$/;"	f
mat4_init	lib/math/include/math/mat/mat4.hpp	/^mat4_init(const float x)$/;"	f
mat4_init	lib/math/include/math/mat/mat4.hpp	/^mat4_init(const mat3 sub_matrix)$/;"	f
mat4_inverse	lib/math/include/math/mat/mat4.hpp	/^mat4_inverse(const mat4 &to_inverse)$/;"	f
mat4_is_near	lib/math/include/math/mat/mat4.hpp	/^mat4_is_near(const mat4 &a, const mat4 &b, const float error)$/;"	f
mat4_is_not_near	lib/math/include/math/mat/mat4.hpp	/^mat4_is_not_near(const mat4 &a, const mat4 &b, const float error)$/;"	f
mat4_lookat	lib/math/include/math/mat/mat4.hpp	/^mat4_lookat(const vec3 eye_position, const vec3 look_at_position, const vec3 up)$/;"	f
mat4_lookat_from_nil_transform	lib/nil_aspects/include/aspect/math_nil_extensions.hpp	/^mat4_lookat_from_nil_transform(const Nil::Data::Transform &trans)$/;"	f	namespace:math
mat4_multiply	lib/math/include/math/mat/mat4.hpp	/^mat4_multiply(const float lhs, const mat4 &rhs)$/;"	f
mat4_multiply	lib/math/include/math/mat/mat4.hpp	/^mat4_multiply(const mat4 &lhs, const mat4 &rhs)$/;"	f
mat4_multiply	lib/math/include/math/mat/mat4.hpp	/^mat4_multiply(const mat4 &one, const mat4 &two, const mat4 &three)$/;"	f
mat4_multiply	lib/math/include/math/mat/mat4.hpp	/^mat4_multiply(const vec4 lhs, const mat4 &rhs)$/;"	f
mat4_orthographic	lib/math/include/math/mat/mat4.hpp	/^mat4_orthographic(const float width, const float height, const float near_plane, const float far_plane)$/;"	f
mat4_perspective	lib/math/include/math/mat/mat4.hpp	/^mat4_perspective(const float width, const float height, const float near_plane, const float far_plane, const float fov)$/;"	f
mat4_perspective_from_nil_camera	lib/nil_aspects/include/aspect/math_nil_extensions.hpp	/^mat4_perspective_from_nil_camera($/;"	f	namespace:math
mat4_rotate_around_axis	lib/math/include/math/mat/mat4.hpp	/^mat4_rotate_around_axis(const vec3 axis, const float radians)$/;"	f
mat4_scale	lib/math/include/math/mat/mat4.hpp	/^mat4_scale(const float x, const float y, const float z)$/;"	f
mat4_scale	lib/math/include/math/mat/mat4.hpp	/^mat4_scale(const vec3 scale_vec)$/;"	f
mat4_subtract	lib/math/include/math/mat/mat4.hpp	/^mat4_subtract(const mat4 &lhs, const mat4 &rhs)$/;"	f
mat4_to_array	lib/math/include/math/mat/mat4.hpp	/^mat4_to_array(const mat4 &mat, float *out_array)$/;"	f
mat4_translate	lib/math/include/math/mat/mat4.hpp	/^mat4_translate(const float x, const float y, const float z)$/;"	f
mat4_translate	lib/math/include/math/mat/mat4.hpp	/^mat4_translate(const vec3 move)$/;"	f
mat4_transpose	lib/math/include/math/mat/mat4.hpp	/^mat4_transpose(const mat4 &to_transpose)$/;"	f
mat4_zero	lib/math/include/math/mat/mat4.hpp	/^mat4_zero()$/;"	f
mat4x4	thirdparty/glfw/src/deps/linmath.h	/^typedef vec4 mat4x4[4];$/;"	t
mat4x4_add	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_add(mat4x4 M, mat4x4 a, mat4x4 b)$/;"	f
mat4x4_col	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_col(vec4 r, mat4x4 M, int i)$/;"	f
mat4x4_dup	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_dup(mat4x4 M, mat4x4 N)$/;"	f
mat4x4_from_quat	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_from_quat(mat4x4 M, quat q)$/;"	f
mat4x4_from_vec3_mul_outer	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_from_vec3_mul_outer(mat4x4 M, vec3 a, vec3 b)$/;"	f
mat4x4_frustum	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_frustum(mat4x4 M, float l, float r, float b, float t, float n, float f)$/;"	f
mat4x4_identity	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_identity(mat4x4 M)$/;"	f
mat4x4_invert	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_invert(mat4x4 T, mat4x4 M)$/;"	f
mat4x4_look_at	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_look_at(mat4x4 m, vec3 eye, vec3 center, vec3 up)$/;"	f
mat4x4_mul	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_mul(mat4x4 M, mat4x4 a, mat4x4 b)$/;"	f
mat4x4_mul_vec4	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_mul_vec4(vec4 r, mat4x4 M, vec4 v)$/;"	f
mat4x4_ortho	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_ortho(mat4x4 M, float l, float r, float b, float t, float n, float f)$/;"	f
mat4x4_orthonormalize	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_orthonormalize(mat4x4 R, mat4x4 M)$/;"	f
mat4x4_perspective	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_perspective(mat4x4 m, float y_fov, float aspect, float n, float f)$/;"	f
mat4x4_rotate	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_rotate(mat4x4 R, mat4x4 M, float x, float y, float z, float angle)$/;"	f
mat4x4_rotate_X	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_rotate_X(mat4x4 Q, mat4x4 M, float angle)$/;"	f
mat4x4_rotate_Y	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_rotate_Y(mat4x4 Q, mat4x4 M, float angle)$/;"	f
mat4x4_rotate_Z	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_rotate_Z(mat4x4 Q, mat4x4 M, float angle)$/;"	f
mat4x4_row	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_row(vec4 r, mat4x4 M, int i)$/;"	f
mat4x4_scale	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_scale(mat4x4 M, mat4x4 a, float k)$/;"	f
mat4x4_scale_aniso	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_scale_aniso(mat4x4 M, mat4x4 a, float x, float y, float z)$/;"	f
mat4x4_sub	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_sub(mat4x4 M, mat4x4 a, mat4x4 b)$/;"	f
mat4x4_translate	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_translate(mat4x4 T, float x, float y, float z)$/;"	f
mat4x4_translate_in_place	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_translate_in_place(mat4x4 M, float x, float y, float z)$/;"	f
mat4x4_transpose	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4_transpose(mat4x4 M, mat4x4 N)$/;"	f
mat4x4o_mul_quat	thirdparty/glfw/src/deps/linmath.h	/^static inline void mat4x4o_mul_quat(mat4x4 R, mat4x4 M, quat q)$/;"	f
match	thirdparty/catch/include/catch/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	thirdparty/catch/include/catch/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	thirdparty/catch/include/catch/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	thirdparty/catch/include/catch/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	thirdparty/catch/include/catch/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	thirdparty/catch/include/catch/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
material	lib/lib/include/lib/model.hpp	/^struct material$/;"	s	namespace:LIB_NS_NAME
material	lib/rov/src/rov_data.hpp	/^  uint64_t material;$/;"	m	struct:ROV_Internal::rovMaterial
material_count	lib/lib/include/lib/model.hpp	/^  uint32_t    material_count;$/;"	m	struct:LIB_NS_NAME::model
material_id	lib/lib/include/lib/model.hpp	/^  int32_t    *material_id;$/;"	m	struct:LIB_NS_NAME::model
material_id	lib/nil/include/nil/data/renderable.hpp	/^  uint32_t material_id;$/;"	m	struct:Nil::Data::Renderable
materials	lib/rov/src/rov_data.hpp	/^  lib::array<rovMaterial> materials;$/;"	m	struct:ROV_Internal::rovRenderPass
math	lib/nil_aspects/include/aspect/math_nil_extensions.hpp	/^namespace math {$/;"	n
matrix_t	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      matrix_t() {}$/;"	f	struct:ImGuizmo::matrix_t
matrix_t	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      matrix_t(const matrix_t& other) { memcpy(&m16[0], &other.m16[0], sizeof(float) * 16); }$/;"	f	struct:ImGuizmo::matrix_t
matrix_t	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   struct matrix_t$/;"	s	namespace:ImGuizmo	file:
max	lib/math/include/math/general/general.hpp	/^max(const float x, const float y)$/;"	f
max	lib/math/include/math/general/general.hpp	/^max(const int32_t x, const int32_t y)$/;"	f
max	lib/math/include/math/general/general.hpp	/^max(const uint32_t x, const uint32_t y)$/;"	f
max	lib/math/include/math/general/general.hpp	/^max(float *out, const float *a, const float *b, const size_t count)$/;"	f
max	lib/math/include/math/geometry/geometry_types.hpp	/^  MATH_NS_NAME::vec3 max;$/;"	m	struct:aabb
max	lib/nil/include/nil/data/bounding_box.hpp	/^  float max[3];$/;"	m	struct:Nil::Data::Bounding_box
max	thirdparty/glfw/src/deps/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot
max	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   template <typename T> T max(T x, T y) { return (x > y) ? x : y; }$/;"	f	namespace:ImGuizmo
max	thirdparty/remotery/src/Remotery.c	108;"	d	file:
maxAnisotropy	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                   maxAnisotropy;$/;"	m	struct:VkSamplerCreateInfo
maxArrayLayers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxArrayLayers;$/;"	m	struct:VkImageFormatProperties
maxBoundDescriptorSets	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxBoundDescriptorSets;$/;"	m	struct:VkPhysicalDeviceLimits
maxClipDistances	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxClipDistances;$/;"	m	struct:VkPhysicalDeviceLimits
maxColorAttachments	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxColorAttachments;$/;"	m	struct:VkPhysicalDeviceLimits
maxCombinedClipAndCullDistances	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxCombinedClipAndCullDistances;$/;"	m	struct:VkPhysicalDeviceLimits
maxComputeSharedMemorySize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxComputeSharedMemorySize;$/;"	m	struct:VkPhysicalDeviceLimits
maxComputeWorkGroupCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxComputeWorkGroupCount[3];$/;"	m	struct:VkPhysicalDeviceLimits
maxComputeWorkGroupInvocations	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxComputeWorkGroupInvocations;$/;"	m	struct:VkPhysicalDeviceLimits
maxComputeWorkGroupSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxComputeWorkGroupSize[3];$/;"	m	struct:VkPhysicalDeviceLimits
maxCullDistances	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxCullDistances;$/;"	m	struct:VkPhysicalDeviceLimits
maxDepth	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float    maxDepth;$/;"	m	struct:VkViewport
maxDepthBounds	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                                     maxDepthBounds;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
maxDescriptorSetInputAttachments	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetInputAttachments;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetSampledImages	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetSampledImages;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetSamplers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetSamplers;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetStorageBuffers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetStorageBuffers;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetStorageBuffersDynamic	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetStorageBuffersDynamic;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetStorageImages	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetStorageImages;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetUniformBuffers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetUniformBuffers;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetUniformBuffersDynamic	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetUniformBuffersDynamic;$/;"	m	struct:VkPhysicalDeviceLimits
maxDrawIndexedIndexValue	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxDrawIndexedIndexValue;$/;"	m	struct:VkPhysicalDeviceLimits
maxDrawIndirectCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxDrawIndirectCount;$/;"	m	struct:VkPhysicalDeviceLimits
maxDstExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                     maxDstExtent;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
maxDstPosition	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkOffset2D                     maxDstPosition;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
maxExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent3D            maxExtent;$/;"	m	struct:VkImageFormatProperties
maxFragmentCombinedOutputResources	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxFragmentCombinedOutputResources;$/;"	m	struct:VkPhysicalDeviceLimits
maxFragmentDualSrcAttachments	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxFragmentDualSrcAttachments;$/;"	m	struct:VkPhysicalDeviceLimits
maxFragmentInputComponents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxFragmentInputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxFragmentOutputAttachments	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxFragmentOutputAttachments;$/;"	m	struct:VkPhysicalDeviceLimits
maxFramebufferHeight	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxFramebufferHeight;$/;"	m	struct:VkPhysicalDeviceLimits
maxFramebufferLayers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxFramebufferLayers;$/;"	m	struct:VkPhysicalDeviceLimits
maxFramebufferWidth	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxFramebufferWidth;$/;"	m	struct:VkPhysicalDeviceLimits
maxGeometryInputComponents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxGeometryInputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxGeometryOutputComponents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxGeometryOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxGeometryOutputVertices	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxGeometryOutputVertices;$/;"	m	struct:VkPhysicalDeviceLimits
maxGeometryShaderInvocations	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxGeometryShaderInvocations;$/;"	m	struct:VkPhysicalDeviceLimits
maxGeometryTotalOutputComponents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxGeometryTotalOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxImageArrayLayers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         maxImageArrayLayers;$/;"	m	struct:VkSurfaceCapabilities2EXT
maxImageArrayLayers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         maxImageArrayLayers;$/;"	m	struct:VkSurfaceCapabilitiesKHR
maxImageArrayLayers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxImageArrayLayers;$/;"	m	struct:VkPhysicalDeviceLimits
maxImageCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         maxImageCount;$/;"	m	struct:VkSurfaceCapabilities2EXT
maxImageCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         maxImageCount;$/;"	m	struct:VkSurfaceCapabilitiesKHR
maxImageDimension1D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxImageDimension1D;$/;"	m	struct:VkPhysicalDeviceLimits
maxImageDimension2D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxImageDimension2D;$/;"	m	struct:VkPhysicalDeviceLimits
maxImageDimension3D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxImageDimension3D;$/;"	m	struct:VkPhysicalDeviceLimits
maxImageDimensionCube	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxImageDimensionCube;$/;"	m	struct:VkPhysicalDeviceLimits
maxImageExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                       maxImageExtent;$/;"	m	struct:VkSurfaceCapabilities2EXT
maxImageExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                       maxImageExtent;$/;"	m	struct:VkSurfaceCapabilitiesKHR
maxIndirectCommandsLayoutTokenCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           maxIndirectCommandsLayoutTokenCount;$/;"	m	struct:VkDeviceGeneratedCommandsLimitsNVX
maxInterpolationOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                 maxInterpolationOffset;$/;"	m	struct:VkPhysicalDeviceLimits
maxLod	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                   maxLod;$/;"	m	struct:VkSamplerCreateInfo
maxMemoryAllocationCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxMemoryAllocationCount;$/;"	m	struct:VkPhysicalDeviceLimits
maxMipLevels	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxMipLevels;$/;"	m	struct:VkImageFormatProperties
maxNbMessagesPerUpdate	thirdparty/remotery/include/remotery/Remotery.h	/^    rmtU32 maxNbMessagesPerUpdate;$/;"	m	struct:rmtSettings
maxObjectEntryCounts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           maxObjectEntryCounts;$/;"	m	struct:VkDeviceGeneratedCommandsLimitsNVX
maxPerStageDescriptorInputAttachments	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxPerStageDescriptorInputAttachments;$/;"	m	struct:VkPhysicalDeviceLimits
maxPerStageDescriptorSampledImages	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxPerStageDescriptorSampledImages;$/;"	m	struct:VkPhysicalDeviceLimits
maxPerStageDescriptorSamplers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxPerStageDescriptorSamplers;$/;"	m	struct:VkPhysicalDeviceLimits
maxPerStageDescriptorStorageBuffers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxPerStageDescriptorStorageBuffers;$/;"	m	struct:VkPhysicalDeviceLimits
maxPerStageDescriptorStorageImages	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxPerStageDescriptorStorageImages;$/;"	m	struct:VkPhysicalDeviceLimits
maxPerStageDescriptorUniformBuffers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxPerStageDescriptorUniformBuffers;$/;"	m	struct:VkPhysicalDeviceLimits
maxPerStageResources	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxPerStageResources;$/;"	m	struct:VkPhysicalDeviceLimits
maxPipelineLayouts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                             maxPipelineLayouts;$/;"	m	struct:VkObjectTableCreateInfoNVX
maxPushConstantsSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxPushConstantsSize;$/;"	m	struct:VkPhysicalDeviceLimits
maxResourceSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize          maxResourceSize;$/;"	m	struct:VkImageFormatProperties
maxS64	thirdparty/remotery/src/Remotery.c	/^rmtS64 maxS64(rmtS64 a, rmtS64 b)$/;"	f
maxSampleMaskWords	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxSampleMaskWords;$/;"	m	struct:VkPhysicalDeviceLimits
maxSampledImagesPerDescriptor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                             maxSampledImagesPerDescriptor;$/;"	m	struct:VkObjectTableCreateInfoNVX
maxSamplerAllocationCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxSamplerAllocationCount;$/;"	m	struct:VkPhysicalDeviceLimits
maxSamplerAnisotropy	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                 maxSamplerAnisotropy;$/;"	m	struct:VkPhysicalDeviceLimits
maxSamplerLodBias	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                 maxSamplerLodBias;$/;"	m	struct:VkPhysicalDeviceLimits
maxSequencesCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                             maxSequencesCount;$/;"	m	struct:VkCmdProcessCommandsInfoNVX
maxSequencesCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                       maxSequencesCount;$/;"	m	struct:VkCmdReserveSpaceForCommandsInfoNVX
maxSets	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                       maxSets;$/;"	m	struct:VkDescriptorPoolCreateInfo
maxSrcExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                     maxSrcExtent;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
maxSrcPosition	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkOffset2D                     maxSrcPosition;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
maxStorageBufferRange	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxStorageBufferRange;$/;"	m	struct:VkPhysicalDeviceLimits
maxStorageBuffersPerDescriptor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                             maxStorageBuffersPerDescriptor;$/;"	m	struct:VkObjectTableCreateInfoNVX
maxStorageImagesPerDescriptor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                             maxStorageImagesPerDescriptor;$/;"	m	struct:VkObjectTableCreateInfoNVX
maxTessellationControlPerPatchOutputComponents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxTessellationControlPerPatchOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationControlPerVertexInputComponents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxTessellationControlPerVertexInputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationControlPerVertexOutputComponents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxTessellationControlPerVertexOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationControlTotalOutputComponents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxTessellationControlTotalOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationEvaluationInputComponents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxTessellationEvaluationInputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationEvaluationOutputComponents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxTessellationEvaluationOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationGenerationLevel	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxTessellationGenerationLevel;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationPatchSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxTessellationPatchSize;$/;"	m	struct:VkPhysicalDeviceLimits
maxTexelBufferElements	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxTexelBufferElements;$/;"	m	struct:VkPhysicalDeviceLimits
maxTexelGatherOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxTexelGatherOffset;$/;"	m	struct:VkPhysicalDeviceLimits
maxTexelOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxTexelOffset;$/;"	m	struct:VkPhysicalDeviceLimits
maxU8	thirdparty/remotery/src/Remotery.c	/^rmtU8 maxU8(rmtU8 a, rmtU8 b)$/;"	f
maxUniformBufferRange	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxUniformBufferRange;$/;"	m	struct:VkPhysicalDeviceLimits
maxUniformBuffersPerDescriptor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                             maxUniformBuffersPerDescriptor;$/;"	m	struct:VkObjectTableCreateInfoNVX
maxVertexInputAttributeOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxVertexInputAttributeOffset;$/;"	m	struct:VkPhysicalDeviceLimits
maxVertexInputAttributes	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxVertexInputAttributes;$/;"	m	struct:VkPhysicalDeviceLimits
maxVertexInputBindingStride	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxVertexInputBindingStride;$/;"	m	struct:VkPhysicalDeviceLimits
maxVertexInputBindings	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxVertexInputBindings;$/;"	m	struct:VkPhysicalDeviceLimits
maxVertexOutputComponents	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxVertexOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxViewportDimensions	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxViewportDimensions[2];$/;"	m	struct:VkPhysicalDeviceLimits
maxViewports	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              maxViewports;$/;"	m	struct:VkPhysicalDeviceLimits
max_file_path_size	lib/lib/include/lib/platform.hpp	/^max_file_path_size()$/;"	f	namespace:LIB_NS_NAME::platform
max_frame_size	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int max_frame_size;$/;"	m	struct:__anon202	file:
max_frame_size	thirdparty/stb/include/stb/stb_vorbis.c	/^   int max_frame_size;$/;"	m	struct:__anon115	file:
max_length	lib/math/include/math/general/general.hpp	/^max_length(const float a, const float b)$/;"	f
max_loaded_major	thirdparty/glfw/src/deps/glad.c	/^static int max_loaded_major;$/;"	v	file:
max_loaded_minor	thirdparty/glfw/src/deps/glad.c	/^static int max_loaded_minor;$/;"	v	file:
max_nb_slots	thirdparty/remotery/src/Remotery.c	/^    rmtU32 max_nb_slots;$/;"	m	struct:__anon58	file:
max_value	thirdparty/glfw/src/deps/nuklear.h	/^    union nk_property max_value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property_variant::nk_property
max_x	thirdparty/glfw/src/deps/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel
max_x	thirdparty/stb/include/stb/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon92
max_x	thirdparty/stb/include/stb/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon110
max_y	thirdparty/stb/include/stb/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon92
max_y	thirdparty/stb/include/stb/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon110
maxcode	thirdparty/stb/include/stb/stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anon84
maxcode	thirdparty/stb/include/stb/stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anon80
maxheight	thirdparty/glfw/src/internal.h	/^    int                 maxwidth, maxheight;$/;"	m	struct:_GLFWwindow
maximize	thirdparty/glfw/src/internal.h	/^        GLFWwindowmaximizefun   maximize;$/;"	m	struct:_GLFWwindow::__anon162
maximize_symbol	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type maximize_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_window_header::nk_symbol_type
maximized	thirdparty/glfw/src/cocoa_platform.h	/^    GLFWbool        maximized;$/;"	m	struct:_GLFWwindowNS
maximized	thirdparty/glfw/src/internal.h	/^    GLFWbool      maximized;$/;"	m	struct:_GLFWwndconfig
maximized	thirdparty/glfw/src/win32_platform.h	/^    GLFWbool            maximized;$/;"	m	struct:_GLFWwindowWin32
maximized	thirdparty/glfw/src/wl_platform.h	/^    GLFWbool                    maximized;$/;"	m	struct:_GLFWwindowWayland
maximized	thirdparty/glfw/src/x11_platform.h	/^    GLFWbool        maximized;$/;"	m	struct:_GLFWwindowX11
maxwidth	thirdparty/glfw/src/internal.h	/^    int                 maxwidth, maxheight;$/;"	m	struct:_GLFWwindow
maybe_start_packet	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int maybe_start_packet(vorb *f)$/;"	f	file:
maybe_start_packet	thirdparty/stb/include/stb/stb_vorbis.c	/^static int maybe_start_packet(vorb *f)$/;"	f	file:
mb	thirdparty/stb/include/stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon89
mbEnable	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      bool mbEnable;$/;"	m	struct:ImGuizmo::Context	file:
mbUsing	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      bool mbUsing;$/;"	m	struct:ImGuizmo::Context	file:
mbUsingBounds	thirdparty/imguizmo/src/ImGuizmo.cpp	/^	  bool mbUsingBounds;$/;"	m	struct:ImGuizmo::Context	file:
mb_to_bytes	lib/lib/include/lib/convert.hpp	/^mb_to_bytes(const uint32_t mb)$/;"	f	namespace:LIB_NS_NAME::convert
mc_bitmap	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^inline void TED::mc_bitmap()$/;"	f	class:TED
mc_text	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^inline void TED::mc_text()$/;"	f	class:TED
mc_text_rvs	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^inline void TED::mc_text_rvs()$/;"	f	class:TED
mcec	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^inline void TED::mcec()$/;"	f	class:TED
mcol	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char hcol[2], mcol[4], ecol[4], bmmcol[4], *cset;$/;"	m	class:TED
mdct_lookup	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} mdct_lookup;$/;"	t	typeref:struct:__anon215	file:
mdct_lookup	thirdparty/stb/include/stb/stb_vorbis.c	/^} mdct_lookup;$/;"	t	typeref:struct:__anon128	file:
mem	lib/lib/include/lib/memory.hpp	/^namespace mem {$/;"	n	namespace:LIB_NS_NAME
mem	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		MemoryHandler *mem;$/;"	m	class:CPU
mem_8000_bfff	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *mem_8000_bfff, *mem_c000_ffff, *mem_fc00_fcff;$/;"	m	class:TED
mem_c000_ffff	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *mem_8000_bfff, *mem_c000_ffff, *mem_fc00_fcff;$/;"	m	class:TED
mem_fc00_fcff	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *mem_8000_bfff, *mem_c000_ffff, *mem_fc00_fcff;$/;"	m	class:TED
mem_offset	lib/lib/include/lib/alignment.hpp	/^mem_offset(const uintptr_t data, const size_t offset)$/;"	f	namespace:LIB_NS_NAME::align
mem_patch	thirdparty/soloud/src/tools/tedsid2dump/types.h	/^} mem_patch;$/;"	t	typeref:struct:_MEM_PATCH
mem_tag	lib/lib/include/lib/memory.hpp	/^  uint32_t mem_tag;$/;"	m	struct:LIB_NS_NAME::mem::header
memin	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::memin(void *img)$/;"	f	class:TED
memory	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_buffer memory;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_buffer
memory	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_memory memory;$/;"	m	struct:nk_buffer	typeref:struct:nk_buffer::nk_memory
memory	thirdparty/glfw/src/deps/nuklear.h	/^    void *memory;$/;"	m	struct:nk_memory_status
memory	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceMemory             memory;$/;"	m	struct:VkSparseImageMemoryBind
memory	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceMemory             memory;$/;"	m	struct:VkSparseMemoryBind
memory	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceMemory     memory;$/;"	m	struct:VkMappedMemoryRange
memoryHeapCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t        memoryHeapCount;$/;"	m	struct:VkPhysicalDeviceMemoryProperties
memoryHeaps	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkMemoryHeap    memoryHeaps[VK_MAX_MEMORY_HEAPS];$/;"	m	struct:VkPhysicalDeviceMemoryProperties
memoryOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize               memoryOffset;$/;"	m	struct:VkSparseImageMemoryBind
memoryOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize               memoryOffset;$/;"	m	struct:VkSparseMemoryBind
memoryProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPhysicalDeviceMemoryProperties    memoryProperties;$/;"	m	struct:VkPhysicalDeviceMemoryProperties2KHR
memoryTypeBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t        memoryTypeBits;$/;"	m	struct:VkMemoryRequirements
memoryTypeCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t        memoryTypeCount;$/;"	m	struct:VkPhysicalDeviceMemoryProperties
memoryTypeIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           memoryTypeIndex;$/;"	m	struct:VkMemoryAllocateInfo
memoryTypes	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkMemoryType    memoryTypes[VK_MAX_MEMORY_TYPES];$/;"	m	struct:VkPhysicalDeviceMemoryProperties
memory_pool_create	lib/lib/include/lib/memory_pool.cpp	/^memory_pool_create(const size_t number_of_bytes_to_reserve)$/;"	f	namespace:lib
memory_pool_get_chunk	lib/lib/include/lib/memory_pool.cpp	/^memory_pool_get_chunk(memory_pool *pool,$/;"	f	namespace:lib
memory_pool_get_chunk_by_index	lib/lib/include/lib/memory_pool.cpp	/^memory_pool_get_chunk_by_index(memory_pool *pool, const size_t index)$/;"	f	namespace:lib
memory_pool_get_number_of_chunks	lib/lib/include/lib/memory_pool.cpp	/^memory_pool_get_number_of_chunks(memory_pool *pool)$/;"	f	namespace:lib
memory_pool_return_chunk	lib/lib/include/lib/memory_pool.cpp	/^memory_pool_return_chunk(memory_pool *pool, memory_chunk *chunk)$/;"	f	namespace:lib
menu	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_menu_state menu;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_menu_state
menu_border	thirdparty/glfw/src/deps/nuklear.h	/^    float menu_border;$/;"	m	struct:nk_style_window
menu_border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color menu_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
menu_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button menu_button;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_button
menu_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 menu_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
menubar	thirdparty/glfw/src/internal.h	/^        GLFWbool  menubar;$/;"	m	struct:_GLFWinitconfig::__anon159
merge_mode	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char merge_mode;$/;"	m	struct:nk_font_config
mesh	lib/rov/src/rov_data.hpp	/^  uint32_t mesh;$/;"	m	struct:ROV_Internal::rovDrawCall
mesh_count	lib/lib/include/lib/model.hpp	/^  uint32_t    mesh_count;$/;"	m	struct:LIB_NS_NAME::model
mesh_id	lib/nil/include/nil/data/renderable.hpp	/^  uint32_t mesh_id;$/;"	m	struct:Nil::Data::Renderable
mesh_id	lib/nil/include/nil/data/renderable_text.hpp	/^  uint32_t      mesh_id;$/;"	m	struct:Nil::Data::Renderable_text
mesh_material	lib/lib/include/lib/model.hpp	/^  material   *mesh_material;$/;"	m	struct:LIB_NS_NAME::model
mesh_type_name	lib/nil/src/interface/resource/mesh.cpp	/^constexpr char mesh_type_name[] = "Mesh";$/;"	m	namespace:__anon37	file:
message	thirdparty/catch/include/catch/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
messageQueueSizeInBytes	thirdparty/remotery/include/remotery/Remotery.h	/^    rmtU32 messageQueueSizeInBytes;$/;"	m	struct:rmtSettings
message_func	lib/nil/include/nil/data/logic.hpp	/^  uintptr_t     message_func;$/;"	m	struct:Nil::Data::Logic
message_handler	app/perils/src/game/dynamic_object.cpp	/^message_handler(ROA::Object obj, uint32_t id, uintptr_t data)$/;"	f	namespace:Dynamic_object
metal	thirdparty/remotery/src/Remotery.c	/^    Metal* metal;$/;"	m	struct:Remotery	file:
mg	thirdparty/stb/include/stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon89
min	lib/math/include/math/general/general.hpp	/^min(const float x, const float y)$/;"	f
min	lib/math/include/math/general/general.hpp	/^min(const int32_t x, const int32_t y)$/;"	f
min	lib/math/include/math/general/general.hpp	/^min(const uint32_t x, const uint32_t y)$/;"	f
min	lib/math/include/math/general/general.hpp	/^min(const uint64_t x, const uint64_t y)$/;"	f
min	lib/math/include/math/general/general.hpp	/^min(float *out, const float *a, const float *b, const size_t count)$/;"	f
min	lib/math/include/math/geometry/geometry_types.hpp	/^  MATH_NS_NAME::vec3 min;$/;"	m	struct:aabb
min	lib/nil/include/nil/data/bounding_box.hpp	/^  float min[3];$/;"	m	struct:Nil::Data::Bounding_box
min	thirdparty/glfw/src/deps/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot
min	thirdparty/glfw/src/wl_init.c	/^static inline int min(int n1, int n2)$/;"	f	file:
min	thirdparty/remotery/src/Remotery.c	107;"	d	file:
minCommandsTokenBufferOffsetAlignment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           minCommandsTokenBufferOffsetAlignment;$/;"	m	struct:VkDeviceGeneratedCommandsLimitsNVX
minDepth	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float    minDepth;$/;"	m	struct:VkViewport
minDepthBounds	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                                     minDepthBounds;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
minDstExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                     minDstExtent;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
minDstPosition	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkOffset2D                     minDstPosition;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
minFilter	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFilter                minFilter;$/;"	m	struct:VkSamplerCreateInfo
minImageCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         minImageCount;$/;"	m	struct:VkSurfaceCapabilities2EXT
minImageCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         minImageCount;$/;"	m	struct:VkSurfaceCapabilitiesKHR
minImageCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         minImageCount;$/;"	m	struct:VkSwapchainCreateInfoKHR
minImageExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                       minImageExtent;$/;"	m	struct:VkSurfaceCapabilities2EXT
minImageExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                       minImageExtent;$/;"	m	struct:VkSurfaceCapabilitiesKHR
minImageTransferGranularity	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent3D      minImageTransferGranularity;$/;"	m	struct:VkQueueFamilyProperties
minInterpolationOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                 minInterpolationOffset;$/;"	m	struct:VkPhysicalDeviceLimits
minLod	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                   minLod;$/;"	m	struct:VkSamplerCreateInfo
minMemoryMapAlignment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    size_t                minMemoryMapAlignment;$/;"	m	struct:VkPhysicalDeviceLimits
minS64	thirdparty/remotery/src/Remotery.c	/^rmtS64 minS64(rmtS64 a, rmtS64 b)$/;"	f
minSampleShading	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                                    minSampleShading;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
minSequenceCountBufferOffsetAlignment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           minSequenceCountBufferOffsetAlignment;$/;"	m	struct:VkDeviceGeneratedCommandsLimitsNVX
minSequenceIndexBufferOffsetAlignment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           minSequenceIndexBufferOffsetAlignment;$/;"	m	struct:VkDeviceGeneratedCommandsLimitsNVX
minSrcExtent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                     minSrcExtent;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
minSrcPosition	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkOffset2D                     minSrcPosition;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
minStorageBufferOffsetAlignment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize          minStorageBufferOffsetAlignment;$/;"	m	struct:VkPhysicalDeviceLimits
minTexelBufferOffsetAlignment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize          minTexelBufferOffsetAlignment;$/;"	m	struct:VkPhysicalDeviceLimits
minTexelGatherOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    int32_t               minTexelGatherOffset;$/;"	m	struct:VkPhysicalDeviceLimits
minTexelOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    int32_t               minTexelOffset;$/;"	m	struct:VkPhysicalDeviceLimits
minU8	thirdparty/remotery/src/Remotery.c	/^rmtU8 minU8(rmtU8 a, rmtU8 b)$/;"	f
minUniformBufferOffsetAlignment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize          minUniformBufferOffsetAlignment;$/;"	m	struct:VkPhysicalDeviceLimits
min_length	lib/math/include/math/general/general.hpp	/^min_length(const float a, const float b)$/;"	f
min_size	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 min_size;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
min_value	thirdparty/glfw/src/deps/nuklear.h	/^    union nk_property min_value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property_variant::nk_property
min_x	thirdparty/stb/include/stb/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon110
min_y	thirdparty/stb/include/stb/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon110
minheight	thirdparty/glfw/src/internal.h	/^    int                 minwidth, minheight;$/;"	m	struct:_GLFWwindow
minimize_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button minimize_button;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_button
minimize_symbol	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type minimize_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_window_header::nk_symbol_type
minimum_value	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   float  minimum_value;$/;"	m	struct:__anon203	file:
minimum_value	thirdparty/stb/include/stb/stb_vorbis.c	/^   float  minimum_value;$/;"	m	struct:__anon116	file:
minor	lib/nil/include/nil/data/window.hpp	/^  uint32_t      minor;$/;"	m	struct:Nil::Data::Window
minor	thirdparty/glfw/src/deps/glad/glad.h	/^    int minor;$/;"	m	struct:gladGLversionStruct
minor	thirdparty/glfw/src/egl_context.h	/^    EGLint          major, minor;$/;"	m	struct:_GLFWlibraryEGL
minor	thirdparty/glfw/src/glx_context.h	/^    int             major, minor;$/;"	m	struct:_GLFWlibraryGLX
minor	thirdparty/glfw/src/internal.h	/^    int                 major, minor, revision;$/;"	m	struct:_GLFWcontext
minor	thirdparty/glfw/src/internal.h	/^    int           minor;$/;"	m	struct:_GLFWctxconfig
minor	thirdparty/glfw/src/x11_platform.h	/^        int         minor;$/;"	m	struct:_GLFWlibraryX11::__anon145
minor	thirdparty/glfw/src/x11_platform.h	/^        int         minor;$/;"	m	struct:_GLFWlibraryX11::__anon146
minor	thirdparty/glfw/src/x11_platform.h	/^        int         minor;$/;"	m	struct:_GLFWlibraryX11::__anon149
minor	thirdparty/glfw/src/x11_platform.h	/^        int         minor;$/;"	m	struct:_GLFWlibraryX11::__anon152
minor	thirdparty/opengl/src/gl3w.cpp	/^	int major, minor;$/;"	m	struct:__anon53	file:
minwidth	thirdparty/glfw/src/internal.h	/^    int                 minwidth, minheight;$/;"	m	struct:_GLFWwindow
mipLevel	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              mipLevel;$/;"	m	struct:VkImageSubresource
mipLevel	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              mipLevel;$/;"	m	struct:VkImageSubresourceLayers
mipLevels	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                 mipLevels;$/;"	m	struct:VkImageCreateInfo
mipLodBias	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                   mipLodBias;$/;"	m	struct:VkSamplerCreateInfo
mipmapMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSamplerMipmapMode     mipmapMode;$/;"	m	struct:VkSamplerCreateInfo
mipmapPrecisionBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              mipmapPrecisionBits;$/;"	m	struct:VkPhysicalDeviceLimits
mirModToGLFWMod	thirdparty/glfw/src/mir_window.c	/^static int mirModToGLFWMod(uint32_t mods)$/;"	f	file:
mirSurface	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    MirSurface*                   mirSurface;$/;"	m	struct:VkMirSurfaceCreateInfoKHR
mirWindow	thirdparty/glfw/src/mir_platform.h	/^    MirWindow*                  mirWindow;$/;"	m	struct:VkMirWindowCreateInfoKHR
mix	thirdparty/soloud/src/core/soloud.cpp	/^	void Soloud::mix(float *aBuffer, unsigned int aSamples)$/;"	f	class:SoLoud::Soloud
mixBus	thirdparty/soloud/src/core/soloud.cpp	/^	void Soloud::mixBus(float *aBuffer, unsigned int aSamples, float *aScratch, unsigned int aBus, float aSamplerate, unsigned int aChannels)$/;"	f	class:SoLoud::Soloud
mixSigned16	thirdparty/soloud/src/core/soloud.cpp	/^	void Soloud::mixSigned16(short *aBuffer, unsigned int aSamples)$/;"	f	class:SoLoud::Soloud
mix_internal	thirdparty/soloud/src/core/soloud.cpp	/^	void Soloud::mix_internal(unsigned int aSamples)$/;"	f	class:SoLoud::Soloud
mm_context	thirdparty/remotery/include/remotery/Remotery.h	/^    void* mm_context;$/;"	m	struct:rmtSettings
mod	lib/math/include/math/general/general.hpp	/^mod(const float x, const float divisor)$/;"	f
mod_table	lib/nil/src/asset_loading/load_gltf.cpp	/^static int mod_table[] = {0, 2, 1};$/;"	m	namespace:__anon41	file:
mode	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char mode;$/;"	m	struct:nk_edit_state
mode	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char mode;$/;"	m	struct:nk_text_edit
mode	thirdparty/glfw/src/wl_monitor.c	/^static void mode(void* data,$/;"	f	file:
mode	thirdparty/remotery/src/Remotery.c	/^    enum WebSocketMode mode;$/;"	m	struct:__anon63	typeref:enum:__anon63::WebSocketMode	file:
modeChanged	thirdparty/glfw/src/win32_platform.h	/^    GLFWbool            modeChanged;$/;"	m	struct:_GLFWmonitorWin32
modeCount	thirdparty/glfw/src/internal.h	/^    int             modeCount;$/;"	m	struct:_GLFWmonitor
modeIsGood	thirdparty/glfw/src/x11_monitor.c	/^static GLFWbool modeIsGood(const XRRModeInfo* mi)$/;"	f	file:
mode_config	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   Mode mode_config[64];  \/\/ varies$/;"	m	struct:stb_vorbis	file:
mode_config	thirdparty/stb/include/stb/stb_vorbis.c	/^   Mode mode_config[64];  \/\/ varies$/;"	m	struct:stb_vorbis	file:
mode_count	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int mode_count;$/;"	m	struct:stb_vorbis	file:
mode_count	thirdparty/stb/include/stb/stb_vorbis.c	/^   int mode_count;$/;"	m	struct:stb_vorbis	file:
model	lib/lib/include/lib/model.hpp	/^struct model$/;"	s	namespace:LIB_NS_NAME
model	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	char model[32];$/;"	m	struct:PsidHeader
model_	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	int model_;$/;"	m	class:SIDsound
model_	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	int model_;$/;"	m	class:SIDsound
model_import	lib/lib/include/lib/model.hpp	/^namespace model_import {$/;"	n	namespace:LIB_NS_NAME
modes	thirdparty/glfw/src/internal.h	/^    GLFWvidmode*    modes;$/;"	m	struct:_GLFWmonitor
modesPruned	thirdparty/glfw/src/win32_platform.h	/^    GLFWbool            modesPruned;$/;"	m	struct:_GLFWmonitorWin32
modifiers	thirdparty/glfw/src/wl_platform.h	/^        unsigned int            modifiers;$/;"	m	struct:_GLFWlibraryWayland::__anon144
modulatedBy	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		SIDVoice *modulatedBy;	\/\/ the voice that modulates this one$/;"	m	class:SIDsound::SIDVoice
modulatedBy	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		SIDVoice *modulatedBy;	\/\/ the voice that modulates this one$/;"	m	class:SIDsound::SIDVoice
modulatesThis	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		SIDVoice *modulatesThis;\/\/ the voice that is modulated by this one$/;"	m	class:SIDsound::SIDVoice
modulatesThis	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		SIDVoice *modulatesThis;\/\/ the voice that is modulated by this one$/;"	m	class:SIDsound::SIDVoice
module	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkShaderModule                      module;$/;"	m	struct:VkPipelineShaderStageCreateInfo
monitor	thirdparty/glfw/src/internal.h	/^        GLFWmonitorfun  monitor;$/;"	m	struct:_GLFWlibrary::__anon166
monitor	thirdparty/glfw/src/internal.h	/^    _GLFWmonitor*       monitor;$/;"	m	struct:_GLFWwindow
monitorBroken	thirdparty/glfw/src/x11_platform.h	/^        GLFWbool    monitorBroken;$/;"	m	struct:_GLFWlibraryX11::__anon145
monitorCount	thirdparty/glfw/src/internal.h	/^    int                 monitorCount;$/;"	m	struct:_GLFWlibrary
monitors	thirdparty/glfw/src/internal.h	/^    _GLFWmonitor**      monitors;$/;"	m	struct:_GLFWlibrary
monitors	thirdparty/glfw/src/wl_platform.h	/^    _GLFWmonitor**              monitors;$/;"	m	struct:_GLFWwindowWayland
monitorsCount	thirdparty/glfw/src/wl_platform.h	/^    int                         monitorsCount;$/;"	m	struct:_GLFWwindowWayland
monitorsSize	thirdparty/glfw/src/wl_platform.h	/^    int                         monitorsSize;$/;"	m	struct:_GLFWwindowWayland
monotonic	thirdparty/glfw/src/posix_time.h	/^    GLFWbool    monotonic;$/;"	m	struct:_GLFWtimerPOSIX
mouse	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_mouse mouse;$/;"	m	struct:nk_input	typeref:struct:nk_input::nk_mouse
mouseButton	thirdparty/glfw/src/internal.h	/^        GLFWmousebuttonfun      mouseButton;$/;"	m	struct:_GLFWwindow::__anon162
mouseButtons	thirdparty/glfw/src/internal.h	/^    char                mouseButtons[GLFW_MOUSE_BUTTON_LAST + 1];$/;"	m	struct:_GLFWwindow
mouse_count	lib/nil/src/interface/data/mouse.cpp	/^mouse_count()$/;"	f	namespace:Nil::Data
mq_to_d3d11_main	thirdparty/remotery/src/Remotery.c	/^    rmtMessageQueue* mq_to_d3d11_main;$/;"	m	struct:D3D11	file:
mq_to_metal_main	thirdparty/remotery/src/Remotery.c	/^    rmtMessageQueue* mq_to_metal_main;$/;"	m	struct:Metal_t	file:
mq_to_opengl_main	thirdparty/remotery/src/Remotery.c	/^    rmtMessageQueue* mq_to_opengl_main;$/;"	m	struct:OpenGL_t	file:
mq_to_rmt_thread	thirdparty/remotery/src/Remotery.c	/^    rmtMessageQueue* mq_to_rmt_thread;$/;"	m	struct:Remotery	file:
mr	thirdparty/stb/include/stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon89
msSleep	thirdparty/remotery/src/Remotery.c	/^static void msSleep(rmtU32 time_ms)$/;"	f	file:
msSleepBetweenServerUpdates	thirdparty/remotery/include/remotery/Remotery.h	/^    rmtU32 msSleepBetweenServerUpdates;$/;"	m	struct:rmtSettings
msTimer_Get	thirdparty/remotery/src/Remotery.c	/^static rmtU32 msTimer_Get()$/;"	f	file:
msg_audio_failed	lib/nil/src/interface/resource/audio.cpp	/^constexpr char msg_audio_failed[]       = "Failed to add Audio file %s";$/;"	m	namespace:__anon39	file:
msg_audio_name_exists	lib/nil/src/interface/resource/audio.cpp	/^constexpr char msg_audio_name_exists[]  = "Audio file with name %s already exists";$/;"	m	namespace:__anon39	file:
msg_audio_no_data	lib/nil/src/interface/resource/audio.cpp	/^constexpr char msg_audio_no_data[]      = "Audio file %s has no data";$/;"	m	namespace:__anon39	file:
msg_audio_no_name	lib/nil/src/interface/resource/audio.cpp	/^constexpr char msg_audio_no_name[]      = "Loading an Audio file - must have a name";$/;"	m	namespace:__anon39	file:
msg_failed_to_find_node	lib/nil/src/graph/graph.cpp	/^constexpr char msg_failed_to_find_node[] = "Failed to find node_id %d";$/;"	m	namespace:Nil::Graph::__anon21	file:
msg_invalid_params	lib/nil/src/graph/graph.cpp	/^constexpr char msg_invalid_params[]      = "Invalid paramaters";$/;"	m	namespace:Nil::Graph::__anon21	file:
msg_mesh_failed	lib/nil/src/interface/resource/mesh.cpp	/^constexpr char msg_mesh_failed[]        = "Failed to add Mesh %s";$/;"	m	namespace:__anon37	file:
msg_mesh_has_no_vertex	lib/nil/src/interface/resource/mesh.cpp	/^constexpr char msg_mesh_has_no_vertex[] = "Mesh %s has no vertex data";$/;"	m	namespace:__anon37	file:
msg_mesh_name_exists	lib/nil/src/interface/resource/mesh.cpp	/^constexpr char msg_mesh_name_exists[]   = "Mesh with name %s already exists";$/;"	m	namespace:__anon37	file:
msg_mesh_no_name	lib/nil/src/interface/resource/mesh.cpp	/^constexpr char msg_mesh_no_name[]       = "Loading a Mesh - must have a name";$/;"	m	namespace:__anon37	file:
msg_node_invalid	lib/nil/src/interface/node.cpp	/^constexpr char msg_node_invalid[]     = "Node is invalid";$/;"	m	namespace:__anon40	file:
msg_node_tag_invalid	lib/nil/src/interface/node.cpp	/^constexpr char msg_node_tag_invalid[] = "Tag must be a valid string";$/;"	m	namespace:__anon40	file:
msg_node_tag_limit	lib/nil/src/interface/node.cpp	/^constexpr char msg_node_tag_limit[]   = "Exceeds tag limit of 64";$/;"	m	namespace:__anon40	file:
msg_node_tag_trunc	lib/nil/src/interface/node.cpp	/^constexpr char msg_node_tag_trunc[]   = "Tag will be truncated";$/;"	m	namespace:__anon40	file:
msg_roa_audio_failed	lib/roa/src/interface/audio_source.cpp	/^constexpr char msg_roa_audio_failed[] = "Failed load audio";$/;"	m	namespace:__anon6	file:
msg_shader_failed	lib/nil/src/interface/resource/shader.cpp	/^constexpr char msg_shader_failed[]      = "Failed to add Shader %s";$/;"	m	namespace:__anon38	file:
msg_shader_name_exists	lib/nil/src/interface/resource/shader.cpp	/^constexpr char msg_shader_name_exists[] = "Shader with name %s already exists";$/;"	m	namespace:__anon38	file:
msg_shader_no_name	lib/nil/src/interface/resource/shader.cpp	/^constexpr char msg_shader_no_name[]     = "Sahder needs to have a name.";$/;"	m	namespace:__anon38	file:
msg_texture_failed	lib/nil/src/interface/resource/texture.cpp	/^constexpr char msg_texture_failed[]      = "Failed to add Texture %s";$/;"	m	namespace:__anon36	file:
msg_texture_name_exists	lib/nil/src/interface/resource/texture.cpp	/^constexpr char msg_texture_name_exists[] = "Texture with name %s already exists";$/;"	m	namespace:__anon36	file:
msg_texture_no_name	lib/nil/src/interface/resource/texture.cpp	/^constexpr char msg_texture_no_name[]     = "Loading a Texture - must have a name.";$/;"	m	namespace:__anon36	file:
msg_transform_failed_to_find	lib/nil/src/interface/data/transform.cpp	/^constexpr char msg_transform_failed_to_find[] = "Failed to located transform";$/;"	m	namespace:__anon34	file:
msg_transform_no_node	lib/nil/src/interface/data/transform.cpp	/^constexpr char msg_transform_no_node[]        = "Transform with ID: %d is invalid";$/;"	m	namespace:__anon34	file:
mtx_destroy	thirdparty/glfw/src/deps/tinycthread.c	/^void mtx_destroy(mtx_t *mtx)$/;"	f
mtx_init	thirdparty/glfw/src/deps/tinycthread.c	/^int mtx_init(mtx_t *mtx, int type)$/;"	f
mtx_lock	thirdparty/glfw/src/deps/tinycthread.c	/^int mtx_lock(mtx_t *mtx)$/;"	f
mtx_plain	thirdparty/glfw/src/deps/tinycthread.h	178;"	d
mtx_recursive	thirdparty/glfw/src/deps/tinycthread.h	181;"	d
mtx_t	thirdparty/glfw/src/deps/tinycthread.h	/^typedef pthread_mutex_t mtx_t;$/;"	t
mtx_t	thirdparty/glfw/src/deps/tinycthread.h	/^} mtx_t;$/;"	t	typeref:struct:__anon182
mtx_timed	thirdparty/glfw/src/deps/tinycthread.h	179;"	d
mtx_timedlock	thirdparty/glfw/src/deps/tinycthread.c	/^int mtx_timedlock(mtx_t *mtx, const struct timespec *ts)$/;"	f
mtx_try	thirdparty/glfw/src/deps/tinycthread.h	180;"	d
mtx_trylock	thirdparty/glfw/src/deps/tinycthread.c	/^int mtx_trylock(mtx_t *mtx)$/;"	f
mtx_unlock	thirdparty/glfw/src/deps/tinycthread.c	/^int mtx_unlock(mtx_t *mtx)$/;"	f
mul	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		vec3 mul(vec3 a)$/;"	f	struct:SoLoud::mat3
multiDrawIndirect	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    multiDrawIndirect;$/;"	m	struct:VkPhysicalDeviceFeatures
multiViewport	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    multiViewport;$/;"	m	struct:VkPhysicalDeviceFeatures
multiline_constexpr	lib/lib/include/lib/platform.hpp	/^multiline_constexpr()$/;"	f	namespace:LIB_NS_NAME::platform
multiplicands	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   codetype *multiplicands;$/;"	m	struct:__anon203	file:
multiplicands	thirdparty/stb/include/stb/stb_vorbis.c	/^   codetype *multiplicands;$/;"	m	struct:__anon116	file:
muted	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int muted;		\/\/ voice muted flag (only for 3rd voice)$/;"	m	class:SIDsound::SIDVoice
muted	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int muted;		\/\/ voice muted flag (only for 3rd voice)$/;"	m	class:SIDsound::SIDVoice
mutexCallFunction	thirdparty/soloud/include/soloud/soloud.h	/^	typedef void (*mutexCallFunction)(void *aMutexPtr);$/;"	t	namespace:SoLoud
mux	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 mux;$/;"	m	struct:__anon208	file:
mux	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 mux;$/;"	m	struct:__anon121	file:
my_stbtt_initfont	thirdparty/stb/include/stb/stb_truetype.h	/^void my_stbtt_initfont(void)$/;"	f
my_stbtt_print	thirdparty/stb/include/stb/stb_truetype.h	/^void my_stbtt_print(float x, float y, char *text)$/;"	f
mystrdup	thirdparty/soloud/src/audiosource/monotone/soloud_monotone.cpp	/^	static char * mystrdup(const char *src)$/;"	f	namespace:SoLoud
n	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^  int n;$/;"	m	struct:__anon215	file:
n	thirdparty/stb/include/stb/stb_vorbis.c	/^  int n;$/;"	m	struct:__anon128	file:
n0	thirdparty/stb/include/stb/stb_image_resize.h	/^    int n0; \/\/ First contributing pixel$/;"	m	struct:__anon71
n1	thirdparty/stb/include/stb/stb_image_resize.h	/^    int n1; \/\/ Last contributing pixel$/;"	m	struct:__anon71
n_files	thirdparty/tinydir/include/tinydir/tinydir.h	/^	size_t n_files;$/;"	m	struct:tinydir_dir
name	lib/lib/include/lib/model.hpp	/^  char      **name;$/;"	m	struct:LIB_NS_NAME::model
name	lib/lib/include/lib/model.hpp	/^  char *name;$/;"	m	struct:LIB_NS_NAME::material
name	lib/lib/include/lib/nyaml.hpp	/^  std::string       name   = "";$/;"	m	class:LIB_NS_NAME::nyaml::node
name	lib/nil/include/nil/resource/audio.hpp	/^  const char          *name;$/;"	m	struct:Nil_audio_src
name	lib/nil/include/nil/resource/font.hpp	/^  const char        *name;$/;"	m	struct:Nil_font
name	lib/nil/include/nil/resource/material.hpp	/^  const char      *name;$/;"	m	struct:Nil_material
name	lib/nil/include/nil/resource/mesh.hpp	/^  const char  *name;                \/\/ Internally copied$/;"	m	struct:Nil_mesh
name	lib/nil/include/nil/resource/shader.hpp	/^  const char          *name;$/;"	m	struct:Nil_shader
name	lib/nil/include/nil/resource/texture.hpp	/^  const char        *name;      \/\/ Internally copied$/;"	m	struct:Nil_texture
name	lib/nil/src/graph/graph_data.hpp	/^  short_string name;$/;"	m	struct:Nil::Graph::node_data
name	thirdparty/catch/include/catch/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	thirdparty/glfw/src/deps/getopt.h	/^  const char* name;$/;"	m	struct:option
name	thirdparty/glfw/src/deps/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_edit_state
name	thirdparty/glfw/src/deps/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_popup_state
name	thirdparty/glfw/src/deps/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_property_state
name	thirdparty/glfw/src/deps/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_window
name	thirdparty/glfw/src/internal.h	/^    char*           name;$/;"	m	struct:_GLFWjoystick
name	thirdparty/glfw/src/internal.h	/^    char*           name;$/;"	m	struct:_GLFWmonitor
name	thirdparty/json/include/json/json.h	/^  struct json_string_s *name;$/;"	m	struct:json_object_element_s	typeref:struct:json_object_element_s::json_string_s
name	thirdparty/remotery/src/Remotery.c	/^    rmtS8 name[64];$/;"	m	struct:ThreadSampler	file:
name	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^  char name[4];$/;"	m	struct:INSTR
name	thirdparty/tinydir/include/tinydir/tinydir.h	/^	_tinydir_char_t name[_TINYDIR_FILENAME_MAX];$/;"	m	struct:tinydir_file
name_hash	thirdparty/remotery/src/Remotery.c	/^    rmtU32 name_hash;$/;"	m	struct:Sample	file:
name_string	thirdparty/glfw/src/deps/nuklear.h	/^    char name_string[NK_WINDOW_MAX_NAME];$/;"	m	struct:nk_window
names	thirdparty/remotery/src/Remotery.c	/^    StringTable* names;$/;"	m	struct:ThreadSampler	file:
namespace	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Core.js	/^function namespace(name)$/;"	f
native	thirdparty/glfw/src/wl_platform.h	/^    struct wl_egl_window*       native;$/;"	m	struct:_GLFWwindowWayland	typeref:struct:_GLFWwindowWayland::wl_egl_window
nativeWindow	thirdparty/glfw/src/mir_platform.h	/^    MirEGLNativeWindowType  nativeWindow;$/;"	m	struct:_GLFWwindowMir
natural_source	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^float klatt::natural_source(int aNper)$/;"	f	class:klatt
nau_begin	lib/nau/src/nau.cpp	/^nau_begin(const char *name)$/;"	f
nau_destroy	lib/nau/src/nau.cpp	/^nau_destroy()$/;"	f
nau_end	lib/nau/src/nau.cpp	/^nau_end()$/;"	f
nau_float	lib/nau/src/nau.cpp	/^nau_float(const char *name, float *data)$/;"	f
nau_gl3_destroy	lib/nau/src/renderer/opengl3.cpp	/^nau_gl3_destroy()$/;"	f
nau_gl3_init	lib/nau/src/renderer/opengl3.cpp	/^nau_gl3_init()$/;"	f
nau_gl3_render	lib/nau/src/renderer/opengl3.cpp	/^nau_gl3_render(Nau_renderable *renderables, size_t count)$/;"	f
nau_gl3_renderer	lib/nau/src/renderer/opengl3.cpp	/^struct nau_gl3_renderer$/;"	s	namespace:__anon43	file:
nau_init	lib/nau/src/nau.cpp	/^nau_init()$/;"	f
nau_new_frame	lib/nau/src/nau.cpp	/^nau_new_frame()$/;"	f
nau_render_data	lib/nau/src/nau.cpp	/^nau_render_data(Nau_renderable **renderables, size_t *count)$/;"	f
nau_set_color_active_window	lib/nau/src/nau.cpp	/^nau_set_color_active_window(const uint32_t color)$/;"	f
nau_set_color_inactive_window	lib/nau/src/nau.cpp	/^nau_set_color_inactive_window(const uint32_t color)$/;"	f
nau_set_viewport	lib/nau/src/nau.cpp	/^nau_set_viewport(const uint32_t width, const uint32_t height)$/;"	f
nb_allocated	thirdparty/remotery/src/Remotery.c	/^    volatile rmtS32 nb_allocated;$/;"	m	struct:__anon55	file:
nb_children	thirdparty/remotery/src/Remotery.c	/^    rmtU32 nb_children;$/;"	m	struct:Sample	file:
nb_free	thirdparty/remotery/src/Remotery.c	/^    volatile rmtS32 nb_free;$/;"	m	struct:__anon55	file:
nb_inuse	thirdparty/remotery/src/Remotery.c	/^    volatile rmtS32 nb_inuse;$/;"	m	struct:__anon55	file:
nb_slots	thirdparty/remotery/src/Remotery.c	/^    rmtU32 nb_slots;$/;"	m	struct:__anon58	file:
near_plane	lib/nil/include/nil/data/camera.hpp	/^  float near_plane;$/;"	m	struct:Nil::Data::Camera
nearest_floor	lib/math/include/math/general/general.hpp	/^nearest_floor(const float x, const float increments)$/;"	f
needed	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size needed;$/;"	m	struct:nk_buffer
needed	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size needed;$/;"	m	struct:nk_memory_status
neg	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		void neg()$/;"	f	struct:SoLoud::vec3
neighbors	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 neighbors[31*8+2][2];$/;"	m	struct:__anon205	file:
neighbors	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void neighbors(uint16 *x, int n, int *plow, int *phigh)$/;"	f	file:
neighbors	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 neighbors[31*8+2][2];$/;"	m	struct:__anon118	file:
neighbors	thirdparty/stb/include/stb/stb_vorbis.c	/^static void neighbors(uint16 *x, int n, int *plow, int *phigh)$/;"	f	file:
newEventNode	thirdparty/glfw/src/mir_window.c	/^static EventNode* newEventNode(const MirEvent* event, _GLFWwindow* context)$/;"	f	file:
newLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageLayout              newLayout;$/;"	m	struct:VkImageMemoryBarrier
next	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size next;$/;"	m	struct:nk_command
next	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_font *next;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_font
next	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_font_config *next;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config::nk_font_config
next	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_page *next;$/;"	m	struct:nk_page	typeref:struct:nk_page::nk_page
next	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_page_element *next;$/;"	m	struct:nk_page_element	typeref:struct:nk_page_element::nk_page_element
next	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rp_node  *next;$/;"	m	struct:nk_rp_node	typeref:struct:nk_rp_node::nk_rp_node
next	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_table *next, *prev;$/;"	m	struct:nk_table	typeref:struct:nk_table::nk_table
next	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_tt__active_edge *next;$/;"	m	struct:nk_tt__active_edge	typeref:struct:nk_tt__active_edge::nk_tt__active_edge
next	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_tt__hheap_chunk *next;$/;"	m	struct:nk_tt__hheap_chunk	typeref:struct:nk_tt__hheap_chunk::nk_tt__hheap_chunk
next	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_window *next;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_window
next	thirdparty/glfw/src/internal.h	/^    _GLFWcursor*    next;$/;"	m	struct:_GLFWcursor
next	thirdparty/glfw/src/internal.h	/^    _GLFWerror*     next;$/;"	m	struct:_GLFWerror
next	thirdparty/glfw/src/internal.h	/^    struct _GLFWwindow* next;$/;"	m	struct:_GLFWwindow	typeref:struct:_GLFWwindow::_GLFWwindow
next	thirdparty/json/include/json/json.h	/^  struct json_array_element_s *next;$/;"	m	struct:json_array_element_s	typeref:struct:json_array_element_s::json_array_element_s
next	thirdparty/json/include/json/json.h	/^  struct json_object_element_s *next;$/;"	m	struct:json_object_element_s	typeref:struct:json_object_element_s::json_object_element_s
next	thirdparty/remotery/src/Remotery.c	/^    struct ObjectLink_s* volatile next;$/;"	m	struct:ObjectLink_s	file:
next	thirdparty/remotery/src/Remotery.c	/^    struct ThreadSampler* volatile next;$/;"	m	struct:ThreadSampler	file:
next	thirdparty/stb/include/stb/stb_rect_pack.h	/^   stbrp_node  *next;$/;"	m	struct:stbrp_node
next	thirdparty/stb/include/stb/stb_truetype.h	/^   struct stbtt__active_edge *next;$/;"	m	struct:stbtt__active_edge	typeref:struct:stbtt__active_edge::stbtt__active_edge
next	thirdparty/stb/include/stb/stb_truetype.h	/^   struct stbtt__hheap_chunk *next;$/;"	m	struct:stbtt__hheap_chunk	typeref:struct:stbtt__hheap_chunk::stbtt__hheap_chunk
next_power_of_two	lib/lib/include/lib/number.hpp	/^next_power_of_two(const uint32_t number)$/;"	f	namespace:LIB_NS_NAME::number
next_seg	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int next_seg;$/;"	m	struct:stb_vorbis	file:
next_seg	thirdparty/stb/include/stb/stb_vorbis.c	/^   int next_seg;$/;"	m	struct:stb_vorbis	file:
next_segment	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int next_segment(vorb *f)$/;"	f	file:
next_segment	thirdparty/stb/include/stb/stb_vorbis.c	/^static int next_segment(vorb *f)$/;"	f	file:
next_sibling	thirdparty/remotery/src/Remotery.c	/^    struct Sample* next_sibling;$/;"	m	struct:Sample	typeref:struct:Sample::Sample	file:
nextins	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned char nextins;$/;"	m	class:CPU
nil_ctx	lib/roa/src/common/context.cpp	/^Nil_ctx *nil_ctx = nullptr;$/;"	m	namespace:__anon7	file:
nil_ctx_add_aspect	lib/nil/src/interface/nil.cpp	/^nil_ctx_add_aspect(Nil_ctx *ctx, Nil_aspect aspect)$/;"	f
nil_ctx_aspect_count	lib/nil/src/interface/nil.cpp	/^nil_ctx_aspect_count(Nil_ctx *ctx)$/;"	f
nil_ctx_destroy	lib/nil/src/interface/nil.cpp	/^nil_ctx_destroy(Nil_ctx **ctx)$/;"	f
nil_ctx_get_delta_time	lib/nil/src/interface/nil.cpp	/^nil_ctx_get_delta_time(Nil_ctx *ctx)$/;"	f
nil_ctx_graph_data_count	lib/nil/src/interface/nil.cpp	/^nil_ctx_graph_data_count(Nil_ctx *ctx)$/;"	f
nil_ctx_graph_data_details	lib/nil/src/interface/nil.cpp	/^nil_ctx_graph_data_details(Nil_ctx *ctx)$/;"	f
nil_ctx_graph_data_ids	lib/nil/src/interface/nil.cpp	/^nil_ctx_graph_data_ids(Nil_ctx *ctx)$/;"	f
nil_ctx_graph_data_local_transforms	lib/nil/src/interface/nil.cpp	/^nil_ctx_graph_data_local_transforms(Nil_ctx *ctx)$/;"	f
nil_ctx_graph_data_world_transforms	lib/nil/src/interface/nil.cpp	/^nil_ctx_graph_data_world_transforms(Nil_ctx *ctx)$/;"	f
nil_ctx_initialize	lib/nil/src/interface/nil.cpp	/^nil_ctx_initialize(Nil_ctx **ctx)$/;"	f
nil_ctx_quit_signal	lib/nil/src/interface/nil.cpp	/^nil_ctx_quit_signal(Nil_ctx *ctx)$/;"	f
nil_ctx_think	lib/nil/src/interface/nil.cpp	/^nil_ctx_think(Nil_ctx *ctx)$/;"	f
nil_rsrc_audio_src_create	lib/nil/src/interface/resource/audio.cpp	/^nil_rsrc_audio_src_create(Nil_ctx *ctx, Nil_audio_src *in_out, bool move)$/;"	f
nil_rsrc_audio_src_create_batch	lib/nil/src/interface/resource/audio.cpp	/^nil_rsrc_audio_src_create_batch(Nil_ctx *ctx, Nil_audio_src *in_out, size_t count, bool move)$/;"	f
nil_rsrc_audio_src_destroy	lib/nil/src/interface/resource/audio.cpp	/^nil_rsrc_audio_src_destroy(Nil_ctx *ctx)$/;"	f
nil_rsrc_audio_src_destroy	lib/nil/src/interface/resource/audio.cpp	/^nil_rsrc_audio_src_destroy(Nil_ctx *ctx, uint32_t id)$/;"	f
nil_rsrc_audio_src_find_by_id	lib/nil/src/interface/resource/audio.cpp	/^nil_rsrc_audio_src_find_by_id(Nil_ctx *ctx, uint32_t id, Nil_audio_src *out)$/;"	f
nil_rsrc_audio_src_find_by_name	lib/nil/src/interface/resource/audio.cpp	/^nil_rsrc_audio_src_find_by_name(Nil_ctx *ctx, const char *name, Nil_audio_src *out)$/;"	f
nil_rsrc_audio_src_get_by_id	lib/nil/src/interface/resource/audio.cpp	/^nil_rsrc_audio_src_get_by_id(Nil_ctx *ctx, uint32_t id, Nil_audio_src **out)$/;"	f
nil_rsrc_audio_src_get_count	lib/nil/src/interface/resource/audio.cpp	/^nil_rsrc_audio_src_get_count(Nil_ctx *ctx)$/;"	f
nil_rsrc_audio_src_get_data	lib/nil/src/interface/resource/audio.cpp	/^nil_rsrc_audio_src_get_data(Nil_ctx *ctx, size_t *out_count, Nil_audio_src **out_data)$/;"	f
nil_rsrc_audio_src_get_load_status	lib/nil/src/interface/resource/audio.cpp	/^nil_rsrc_audio_src_get_load_status(Nil_ctx *ctx, uint32_t id)$/;"	f
nil_rsrc_audio_src_initialize	lib/nil/src/interface/resource/audio.cpp	/^nil_rsrc_audio_src_initialize(Nil_ctx *ctx)$/;"	f
nil_rsrc_audio_src_set_load_status	lib/nil/src/interface/resource/audio.cpp	/^nil_rsrc_audio_src_set_load_status(Nil_ctx *ctx, uint32_t id, Nil_resource_status new_status)$/;"	f
nil_rsrc_copy_src_helper	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_copy_src_helper(Nil_ctx *ctx, const char **dest, const char *new_src)$/;"	f
nil_rsrc_load_model	lib/nil/src/interface/resource/load.cpp	/^nil_rsrc_load_model(Nil_ctx *ctx, const char *filename)$/;"	f
nil_rsrc_load_model_scene	lib/nil/src/interface/resource/load.cpp	/^nil_rsrc_load_model_scene(Nil_ctx *ctx, Nil::Node node, const char *filename)$/;"	f
nil_rsrc_load_scene	lib/nil/src/interface/resource/load.cpp	/^nil_rsrc_load_scene(Nil_ctx *ctx, Nil::Node &node, const char *filename)$/;"	f
nil_rsrc_material_create	lib/nil/src/interface/resource/material.cpp	/^nil_rsrc_material_create(Nil_ctx *ctx, Nil_material *in_out, bool move)$/;"	f
nil_rsrc_material_create_batch	lib/nil/src/interface/resource/material.cpp	/^nil_rsrc_material_create_batch(Nil_ctx *ctx, Nil_material *in_out, size_t count, bool move)$/;"	f
nil_rsrc_material_destroy	lib/nil/src/interface/resource/material.cpp	/^nil_rsrc_material_destroy(Nil_ctx *ctx)$/;"	f
nil_rsrc_material_destroy	lib/nil/src/interface/resource/material.cpp	/^nil_rsrc_material_destroy(Nil_ctx *ctx, uint32_t id)$/;"	f
nil_rsrc_material_find_by_id	lib/nil/src/interface/resource/material.cpp	/^nil_rsrc_material_find_by_id(Nil_ctx *ctx, uint32_t id, Nil_material *out)$/;"	f
nil_rsrc_material_find_by_name	lib/nil/src/interface/resource/material.cpp	/^nil_rsrc_material_find_by_name(Nil_ctx *ctx, const char *name, Nil_material *out)$/;"	f
nil_rsrc_material_get_by_id	lib/nil/src/interface/resource/material.cpp	/^nil_rsrc_material_get_by_id(Nil_ctx *ctx, uint32_t id, Nil_material **out)$/;"	f
nil_rsrc_material_get_count	lib/nil/src/interface/resource/material.cpp	/^nil_rsrc_material_get_count(Nil_ctx *ctx)$/;"	f
nil_rsrc_material_get_data	lib/nil/src/interface/resource/material.cpp	/^nil_rsrc_material_get_data(Nil_ctx *ctx, size_t *out_count, Nil_material **out_data)$/;"	f
nil_rsrc_material_get_load_status	lib/nil/src/interface/resource/material.cpp	/^nil_rsrc_material_get_load_status(Nil_ctx *ctx, uint32_t id)$/;"	f
nil_rsrc_material_initialize	lib/nil/src/interface/resource/material.cpp	/^nil_rsrc_material_initialize(Nil_ctx *ctx)$/;"	f
nil_rsrc_material_set_load_status	lib/nil/src/interface/resource/material.cpp	/^nil_rsrc_material_set_load_status(Nil_ctx *ctx, uint32_t id, Nil_resource_status status)$/;"	f
nil_rsrc_mesh_create	lib/nil/src/interface/resource/mesh.cpp	/^nil_rsrc_mesh_create(Nil_ctx *ctx, Nil_mesh *in_out, bool move)$/;"	f
nil_rsrc_mesh_create_batch	lib/nil/src/interface/resource/mesh.cpp	/^nil_rsrc_mesh_create_batch(Nil_ctx *ctx, Nil_mesh *in, size_t count, bool move)$/;"	f
nil_rsrc_mesh_destroy	lib/nil/src/interface/resource/mesh.cpp	/^nil_rsrc_mesh_destroy(Nil_ctx *ctx)$/;"	f
nil_rsrc_mesh_destroy	lib/nil/src/interface/resource/mesh.cpp	/^nil_rsrc_mesh_destroy(Nil_ctx *ctx, uint32_t id)$/;"	f
nil_rsrc_mesh_find_by_id	lib/nil/src/interface/resource/mesh.cpp	/^nil_rsrc_mesh_find_by_id(Nil_ctx *ctx, uint32_t id, Nil_mesh *out)$/;"	f
nil_rsrc_mesh_find_by_name	lib/nil/src/interface/resource/mesh.cpp	/^nil_rsrc_mesh_find_by_name(Nil_ctx *ctx, const char *name, Nil_mesh *out)$/;"	f
nil_rsrc_mesh_get_by_id	lib/nil/src/interface/resource/mesh.cpp	/^nil_rsrc_mesh_get_by_id(Nil_ctx *ctx, uint32_t id, Nil_mesh **out)$/;"	f
nil_rsrc_mesh_get_count	lib/nil/src/interface/resource/mesh.cpp	/^nil_rsrc_mesh_get_count(Nil_ctx *ctx)$/;"	f
nil_rsrc_mesh_get_data	lib/nil/src/interface/resource/mesh.cpp	/^nil_rsrc_mesh_get_data(Nil_ctx *ctx, size_t *out_count, Nil_mesh **out_data)$/;"	f
nil_rsrc_mesh_get_load_status	lib/nil/src/interface/resource/mesh.cpp	/^nil_rsrc_mesh_get_load_status(Nil_ctx *ctx, uint32_t id)$/;"	f
nil_rsrc_mesh_initialize	lib/nil/src/interface/resource/mesh.cpp	/^nil_rsrc_mesh_initialize(Nil_ctx *ctx)$/;"	f
nil_rsrc_mesh_set_load_status	lib/nil/src/interface/resource/mesh.cpp	/^nil_rsrc_mesh_set_load_status(Nil_ctx *ctx, uint32_t id, Nil_resource_status new_status)$/;"	f
nil_rsrc_shader_create	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_create(Nil_ctx *ctx, Nil_shader *shd, bool move)$/;"	f
nil_rsrc_shader_create_batch	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_create_batch(Nil_ctx *ctx, Nil_shader *in, size_t count, bool move)$/;"	f
nil_rsrc_shader_destroy	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_destroy(Nil_ctx *ctx)$/;"	f
nil_rsrc_shader_destroy	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_destroy(uint32_t id)$/;"	f
nil_rsrc_shader_find_by_id	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_find_by_id(Nil_ctx *ctx, const uint32_t id, Nil_shader *out)$/;"	f
nil_rsrc_shader_find_by_name	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_find_by_name(Nil_ctx *ctx, const char *name, Nil_shader *out)$/;"	f
nil_rsrc_shader_get_by_id	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_get_by_id(Nil_ctx *ctx, uint32_t id, Nil_shader **out)$/;"	f
nil_rsrc_shader_get_count	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_get_count(Nil_ctx *ctx)$/;"	f
nil_rsrc_shader_get_data	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_get_data(Nil_ctx *ctx, size_t *count, Nil_shader **data)$/;"	f
nil_rsrc_shader_get_fs_src	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_get_fs_src(Nil_ctx *ctx, uint32_t id)$/;"	f
nil_rsrc_shader_get_gs_src	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_get_gs_src(Nil_ctx *ctx, uint32_t id)$/;"	f
nil_rsrc_shader_get_load_status	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_get_load_status(Nil_ctx *ctx, uint32_t id)$/;"	f
nil_rsrc_shader_get_type	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_get_type(Nil_ctx *ctx, uint32_t id)$/;"	f
nil_rsrc_shader_get_vs_src	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_get_vs_src(Nil_ctx *ctx, uint32_t id)$/;"	f
nil_rsrc_shader_initialize	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_initialize(Nil_ctx *ctx)$/;"	f
nil_rsrc_shader_set_fs_src	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_set_fs_src(Nil_ctx *ctx, uint32_t id, const char *src)$/;"	f
nil_rsrc_shader_set_gs_src	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_set_gs_src(Nil_ctx *ctx, uint32_t id, const char *src)$/;"	f
nil_rsrc_shader_set_load_status	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_set_load_status(Nil_ctx *ctx, uint32_t id, Nil_resource_status new_status)$/;"	f
nil_rsrc_shader_set_type	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_set_type(Nil_ctx *ctx, uint32_t id, Nil_shader_type type)$/;"	f
nil_rsrc_shader_set_vs_src	lib/nil/src/interface/resource/shader.cpp	/^nil_rsrc_shader_set_vs_src(Nil_ctx *ctx, uint32_t id, const char *src)$/;"	f
nil_rsrc_texture_create	lib/nil/src/interface/resource/texture.cpp	/^nil_rsrc_texture_create(Nil_ctx *ctx, Nil_texture *in_out, bool move)$/;"	f
nil_rsrc_texture_create_batch	lib/nil/src/interface/resource/texture.cpp	/^nil_rsrc_texture_create_batch(Nil_ctx *ctx, Nil_texture *in, size_t count, bool move)$/;"	f
nil_rsrc_texture_destroy	lib/nil/src/interface/resource/texture.cpp	/^nil_rsrc_texture_destroy(Nil_ctx *ctx)$/;"	f
nil_rsrc_texture_destroy	lib/nil/src/interface/resource/texture.cpp	/^nil_rsrc_texture_destroy(Nil_ctx *ctx, uint32_t id)$/;"	f
nil_rsrc_texture_find_by_id	lib/nil/src/interface/resource/texture.cpp	/^nil_rsrc_texture_find_by_id(Nil_ctx *ctx, uint32_t id, Nil_texture *out)$/;"	f
nil_rsrc_texture_find_by_name	lib/nil/src/interface/resource/texture.cpp	/^nil_rsrc_texture_find_by_name(Nil_ctx *ctx, const char *name, Nil_texture *out)$/;"	f
nil_rsrc_texture_get_by_id	lib/nil/src/interface/resource/texture.cpp	/^nil_rsrc_texture_get_by_id(Nil_ctx *ctx, uint32_t id, Nil_texture **out)$/;"	f
nil_rsrc_texture_get_count	lib/nil/src/interface/resource/texture.cpp	/^nil_rsrc_texture_get_count(Nil_ctx *ctx)$/;"	f
nil_rsrc_texture_get_data	lib/nil/src/interface/resource/texture.cpp	/^nil_rsrc_texture_get_data(Nil_ctx *ctx, size_t *out_count, Nil_texture **out_data)$/;"	f
nil_rsrc_texture_get_load_status	lib/nil/src/interface/resource/texture.cpp	/^nil_rsrc_texture_get_load_status(Nil_ctx *ctx, uint32_t id)$/;"	f
nil_rsrc_texture_initialize	lib/nil/src/interface/resource/texture.cpp	/^nil_rsrc_texture_initialize(Nil_ctx *ctx)$/;"	f
nil_rsrc_texture_set_load_status	lib/nil/src/interface/resource/texture.cpp	/^nil_rsrc_texture_set_load_status(Nil_ctx *ctx, uint32_t id, Nil_resource_status new_status)$/;"	f
nil_task_cpu_add	lib/nil/src/interface/task.cpp	/^nil_task_cpu_add($/;"	f
nil_task_cpu_process	lib/nil/src/internal_data/task_queue.cpp	/^nil_task_cpu_process(Nil_ctx *ctx, const Nil_cpu_task *tasks, const size_t count)$/;"	f
nil_task_gpu_add	lib/nil/src/interface/task.cpp	/^nil_task_gpu_add($/;"	f
nil_task_gpu_process	lib/nil/src/internal_data/task_queue.cpp	/^nil_task_gpu_process(Nil_ctx *ctx, const Nil_gpu_task *tasks, const size_t count)$/;"	f
nk__barrier	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier;$/;"	v
nk__barrier2	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier2;$/;"	v
nk__barrier3	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier3;$/;"	v
nk__barrier4	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier4;$/;"	v
nk__begin	thirdparty/glfw/src/deps/nuklear.h	/^nk__begin(struct nk_context *ctx)$/;"	f
nk__dout	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL unsigned char *nk__dout;$/;"	v
nk__draw_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk__draw_begin(const struct nk_context *ctx,$/;"	f
nk__draw_end	thirdparty/glfw/src/deps/nuklear.h	/^nk__draw_end(const struct nk_context *ctx, const struct nk_buffer *buffer)$/;"	f
nk__draw_list_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk__draw_list_begin(const struct nk_draw_list *canvas, const struct nk_buffer *buffer)$/;"	f
nk__draw_list_end	thirdparty/glfw/src/deps/nuklear.h	/^nk__draw_list_end(const struct nk_draw_list *canvas, const struct nk_buffer *buffer)$/;"	f
nk__draw_list_next	thirdparty/glfw/src/deps/nuklear.h	/^nk__draw_list_next(const struct nk_draw_command *cmd,$/;"	f
nk__draw_next	thirdparty/glfw/src/deps/nuklear.h	/^nk__draw_next(const struct nk_draw_command *cmd,$/;"	f
nk__in2	thirdparty/glfw/src/deps/nuklear.h	10653;"	d
nk__in3	thirdparty/glfw/src/deps/nuklear.h	10654;"	d
nk__in4	thirdparty/glfw/src/deps/nuklear.h	10655;"	d
nk__lit	thirdparty/glfw/src/deps/nuklear.h	/^nk__lit(unsigned char *data, unsigned int length)$/;"	f
nk__match	thirdparty/glfw/src/deps/nuklear.h	/^nk__match(unsigned char *data, unsigned int length)$/;"	f
nk__next	thirdparty/glfw/src/deps/nuklear.h	/^nk__next(struct nk_context *ctx, const struct nk_command *cmd)$/;"	f
nk_add_value	thirdparty/glfw/src/deps/nuklear.h	/^nk_add_value(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_adler32	thirdparty/glfw/src/deps/nuklear.h	/^nk_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflen)$/;"	f
nk_alignof	thirdparty/glfw/src/deps/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	s
nk_allocation_type	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_allocation_type {$/;"	g
nk_allocator	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_allocator {$/;"	s
nk_anti_aliasing	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_anti_aliasing   {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	g
nk_baked_font	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_baked_font {$/;"	s
nk_baker_align	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const nk_size nk_baker_align = NK_ALIGNOF(struct nk_font_baker);$/;"	v
nk_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_begin(struct nk_context *ctx, const char *title,$/;"	f
nk_begin_titled	thirdparty/glfw/src/deps/nuklear.h	/^nk_begin_titled(struct nk_context *ctx, const char *name, const char *title,$/;"	f
nk_black	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const struct nk_color nk_black = {0,0,0,255};$/;"	v	typeref:struct:nk_color
nk_blue	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const struct nk_color nk_blue = {0,0,255,255};$/;"	v	typeref:struct:nk_color
nk_buffer	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_buffer {$/;"	s
nk_buffer_align	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_align(void *unaligned, nk_size align, nk_size *alignment,$/;"	f
nk_buffer_alloc	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_alloc(struct nk_buffer *b, enum nk_buffer_allocation_type type,$/;"	f
nk_buffer_allocation_type	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_buffer_allocation_type {$/;"	g
nk_buffer_clear	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_clear(struct nk_buffer *b)$/;"	f
nk_buffer_free	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_free(struct nk_buffer *b)$/;"	f
nk_buffer_info	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_info(struct nk_memory_status *s, struct nk_buffer *b)$/;"	f
nk_buffer_init	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_init(struct nk_buffer *b, const struct nk_allocator *a,$/;"	f
nk_buffer_init_default	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_init_default(struct nk_buffer *buffer)$/;"	f
nk_buffer_init_fixed	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_init_fixed(struct nk_buffer *b, void *m, nk_size size)$/;"	f
nk_buffer_mark	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_mark(struct nk_buffer *buffer, enum nk_buffer_allocation_type type)$/;"	f
nk_buffer_marker	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_buffer_marker {$/;"	s
nk_buffer_memory	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_memory(struct nk_buffer *buffer)$/;"	f
nk_buffer_memory_const	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_memory_const(const struct nk_buffer *buffer)$/;"	f
nk_buffer_push	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_push(struct nk_buffer *b, enum nk_buffer_allocation_type type,$/;"	f
nk_buffer_realloc	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_realloc(struct nk_buffer *b, nk_size capacity, nk_size *size)$/;"	f
nk_buffer_reset	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_reset(struct nk_buffer *buffer, enum nk_buffer_allocation_type type)$/;"	f
nk_buffer_total	thirdparty/glfw/src/deps/nuklear.h	/^nk_buffer_total(struct nk_buffer *buffer)$/;"	f
nk_build	thirdparty/glfw/src/deps/nuklear.h	/^nk_build(struct nk_context *ctx)$/;"	f
nk_build_align	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const nk_size nk_build_align = NK_ALIGNOF(struct nk_font_bake_data);$/;"	v
nk_button_behavior	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	g
nk_button_behavior	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_behavior(nk_flags *state, struct nk_rect r,$/;"	f
nk_button_color	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_color(struct nk_context *ctx, struct nk_color color)$/;"	f
nk_button_image	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_image(struct nk_context *ctx, struct nk_image img)$/;"	f
nk_button_image_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_button_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_button_image_label_styled	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_button_image_label_styled(struct nk_context *ctx,$/;"	f
nk_button_image_styled	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_image_styled(struct nk_context *ctx, const struct nk_style_button *style,$/;"	f
nk_button_image_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_button_image_text_styled	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_image_text_styled(struct nk_context *ctx,$/;"	f
nk_button_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_button_label(struct nk_context *ctx, const char *title)$/;"	f
nk_button_label_styled	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_button_label_styled(struct nk_context *ctx,$/;"	f
nk_button_pop_behavior	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_pop_behavior(struct nk_context *ctx)$/;"	f
nk_button_push_behavior	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_push_behavior(struct nk_context *ctx, enum nk_button_behavior behavior)$/;"	f
nk_button_set_behavior	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_set_behavior(struct nk_context *ctx, enum nk_button_behavior behavior)$/;"	f
nk_button_symbol	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_symbol(struct nk_context *ctx, enum nk_symbol_type symbol)$/;"	f
nk_button_symbol_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_button_symbol_label(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f
nk_button_symbol_label_styled	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_button_symbol_label_styled(struct nk_context *ctx,$/;"	f
nk_button_symbol_styled	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_symbol_styled(struct nk_context *ctx,$/;"	f
nk_button_symbol_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_symbol_text(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f
nk_button_symbol_text_styled	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_symbol_text_styled(struct nk_context *ctx,$/;"	f
nk_button_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_text(struct nk_context *ctx, const char *title, int len)$/;"	f
nk_button_text_styled	thirdparty/glfw/src/deps/nuklear.h	/^nk_button_text_styled(struct nk_context *ctx,$/;"	f
nk_buttons	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_buttons {$/;"	g
nk_byte	thirdparty/glfw/src/deps/nuklear.h	/^typedef NK_UINT8 nk_byte;$/;"	t
nk_char	thirdparty/glfw/src/deps/nuklear.h	/^typedef NK_INT8 nk_char;$/;"	t
nk_char_align	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const nk_size nk_char_align = NK_ALIGNOF(struct nk_tt_packedchar);$/;"	v
nk_chart	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_chart {$/;"	s
nk_chart_add_slot	thirdparty/glfw/src/deps/nuklear.h	/^nk_chart_add_slot(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f
nk_chart_add_slot_colored	thirdparty/glfw/src/deps/nuklear.h	/^nk_chart_add_slot_colored(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f
nk_chart_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_chart_begin(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f
nk_chart_begin_colored	thirdparty/glfw/src/deps/nuklear.h	/^nk_chart_begin_colored(struct nk_context *ctx, enum nk_chart_type type,$/;"	f
nk_chart_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_chart_end(struct nk_context *ctx)$/;"	f
nk_chart_event	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	g
nk_chart_push	thirdparty/glfw/src/deps/nuklear.h	/^nk_chart_push(struct nk_context *ctx, float value)$/;"	f
nk_chart_push_column	thirdparty/glfw/src/deps/nuklear.h	/^nk_chart_push_column(const struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_chart_push_line	thirdparty/glfw/src/deps/nuklear.h	/^nk_chart_push_line(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_chart_push_slot	thirdparty/glfw/src/deps/nuklear.h	/^nk_chart_push_slot(struct nk_context *ctx, float value, int slot)$/;"	f
nk_chart_slot	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_chart_slot {$/;"	s
nk_chart_type	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	g
nk_check_flags_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API unsigned int nk_check_flags_label(struct nk_context *ctx, const char *label,$/;"	f
nk_check_flags_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_check_flags_text(struct nk_context *ctx, const char *text, int len,$/;"	f
nk_check_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_check_label(struct nk_context *ctx, const char *label, int active)$/;"	f
nk_check_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_check_text(struct nk_context *ctx, const char *text, int len, int active)$/;"	f
nk_checkbox_flags_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_checkbox_flags_label(struct nk_context *ctx, const char *label,$/;"	f
nk_checkbox_flags_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_checkbox_flags_text(struct nk_context *ctx, const char *text, int len,$/;"	f
nk_checkbox_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_checkbox_label(struct nk_context *ctx, const char *label, int *active)$/;"	f
nk_checkbox_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_checkbox_text(struct nk_context *ctx, const char *text, int len, int *active)$/;"	f
nk_clear	thirdparty/glfw/src/deps/nuklear.h	/^nk_clear(struct nk_context *ctx)$/;"	f
nk_clipboard	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_clipboard {$/;"	s
nk_collapse_states	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	g
nk_color	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	s
nk_color_d	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_d(double *r, double *g, double *b, double *a, struct nk_color in)$/;"	f
nk_color_dv	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_dv(double *c, struct nk_color in)$/;"	f
nk_color_f	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_f(float *r, float *g, float *b, float *a, struct nk_color in)$/;"	f
nk_color_format	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	g
nk_color_fv	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_fv(float *c, struct nk_color in)$/;"	f
nk_color_hex_rgb	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hex_rgb(char *output, struct nk_color col)$/;"	f
nk_color_hex_rgba	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hex_rgba(char *output, struct nk_color col)$/;"	f
nk_color_hsv_b	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hsv_b(nk_byte *out_h, nk_byte *out_s, nk_byte *out_v, struct nk_color in)$/;"	f
nk_color_hsv_bv	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hsv_bv(nk_byte *out, struct nk_color in)$/;"	f
nk_color_hsv_f	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hsv_f(float *out_h, float *out_s, float *out_v, struct nk_color in)$/;"	f
nk_color_hsv_fv	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hsv_fv(float *out, struct nk_color in)$/;"	f
nk_color_hsv_i	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hsv_i(int *out_h, int *out_s, int *out_v, struct nk_color in)$/;"	f
nk_color_hsv_iv	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hsv_iv(int *out, struct nk_color in)$/;"	f
nk_color_hsva_b	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hsva_b(nk_byte *h, nk_byte *s, nk_byte *v, nk_byte *a, struct nk_color in)$/;"	f
nk_color_hsva_bv	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hsva_bv(nk_byte *out, struct nk_color in)$/;"	f
nk_color_hsva_f	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hsva_f(float *out_h, float *out_s,$/;"	f
nk_color_hsva_fv	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hsva_fv(float *out, struct nk_color in)$/;"	f
nk_color_hsva_i	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hsva_i(int *out_h, int *out_s, int *out_v,$/;"	f
nk_color_hsva_iv	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_hsva_iv(int *out, struct nk_color in)$/;"	f
nk_color_names	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const char *nk_color_names[NK_COLOR_COUNT] = {$/;"	v
nk_color_pick	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_pick(struct nk_context * ctx, struct nk_color *color,$/;"	f
nk_color_picker	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_picker(struct nk_context *ctx, struct nk_color color,$/;"	f
nk_color_picker_behavior	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_picker_behavior(nk_flags *state,$/;"	f
nk_color_u32	thirdparty/glfw/src/deps/nuklear.h	/^nk_color_u32(struct nk_color in)$/;"	f
nk_colorf	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	s
nk_combo	thirdparty/glfw/src/deps/nuklear.h	/^nk_combo(struct nk_context *ctx, const char **items, int count,$/;"	f
nk_combo_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_combo_begin(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_combo_begin_color	thirdparty/glfw/src/deps/nuklear.h	/^nk_combo_begin_color(struct nk_context *ctx, struct nk_color color, struct nk_vec2 size)$/;"	f
nk_combo_begin_image	thirdparty/glfw/src/deps/nuklear.h	/^nk_combo_begin_image(struct nk_context *ctx, struct nk_image img, struct nk_vec2 size)$/;"	f
nk_combo_begin_image_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_combo_begin_image_label(struct nk_context *ctx,$/;"	f
nk_combo_begin_image_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_combo_begin_image_text(struct nk_context *ctx, const char *selected, int len,$/;"	f
nk_combo_begin_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_combo_begin_label(struct nk_context *ctx, const char *selected, struct nk_vec2 size)$/;"	f
nk_combo_begin_symbol	thirdparty/glfw/src/deps/nuklear.h	/^nk_combo_begin_symbol(struct nk_context *ctx, enum nk_symbol_type symbol, struct nk_vec2 size)$/;"	f
nk_combo_begin_symbol_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_combo_begin_symbol_label(struct nk_context *ctx,$/;"	f
nk_combo_begin_symbol_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_combo_begin_symbol_text(struct nk_context *ctx, const char *selected, int len,$/;"	f
nk_combo_begin_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_combo_begin_text(struct nk_context *ctx, const char *selected, int len,$/;"	f
nk_combo_callback	thirdparty/glfw/src/deps/nuklear.h	/^nk_combo_callback(struct nk_context *ctx, void(*item_getter)(void*, int, const char**),$/;"	f
nk_combo_close	thirdparty/glfw/src/deps/nuklear.h	/^NK_API void nk_combo_close(struct nk_context *ctx)$/;"	f
nk_combo_end	thirdparty/glfw/src/deps/nuklear.h	/^NK_API void nk_combo_end(struct nk_context *ctx)$/;"	f
nk_combo_item_image_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_combo_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_combo_item_image_text	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_combo_item_image_text(struct nk_context *ctx, struct nk_image img, const char *text,$/;"	f
nk_combo_item_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_combo_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f
nk_combo_item_symbol_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_combo_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_combo_item_symbol_text	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_combo_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_combo_item_text	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_combo_item_text(struct nk_context *ctx, const char *text, int len,nk_flags align)$/;"	f
nk_combo_separator	thirdparty/glfw/src/deps/nuklear.h	/^nk_combo_separator(struct nk_context *ctx, const char *items_separated_by_separator,$/;"	f
nk_combo_string	thirdparty/glfw/src/deps/nuklear.h	/^nk_combo_string(struct nk_context *ctx, const char *items_separated_by_zeros,$/;"	f
nk_combobox	thirdparty/glfw/src/deps/nuklear.h	/^NK_API void nk_combobox(struct nk_context *ctx, const char **items, int count,$/;"	f
nk_combobox_callback	thirdparty/glfw/src/deps/nuklear.h	/^NK_API void nk_combobox_callback(struct nk_context *ctx,$/;"	f
nk_combobox_separator	thirdparty/glfw/src/deps/nuklear.h	/^NK_API void nk_combobox_separator(struct nk_context *ctx, const char *items_separated_by_separator,$/;"	f
nk_combobox_string	thirdparty/glfw/src/deps/nuklear.h	/^NK_API void nk_combobox_string(struct nk_context *ctx, const char *items_separated_by_zeros,$/;"	f
nk_command	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command {$/;"	s
nk_command_arc	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_arc {$/;"	s
nk_command_arc_filled	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_arc_filled {$/;"	s
nk_command_buffer	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_buffer {$/;"	s
nk_command_buffer_init	thirdparty/glfw/src/deps/nuklear.h	/^nk_command_buffer_init(struct nk_command_buffer *cmdbuf,$/;"	f
nk_command_buffer_push	thirdparty/glfw/src/deps/nuklear.h	/^nk_command_buffer_push(struct nk_command_buffer* b,$/;"	f
nk_command_buffer_reset	thirdparty/glfw/src/deps/nuklear.h	/^nk_command_buffer_reset(struct nk_command_buffer *buffer)$/;"	f
nk_command_circle	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_circle {$/;"	s
nk_command_circle_filled	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_circle_filled {$/;"	s
nk_command_clipping	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_command_clipping {$/;"	g
nk_command_curve	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_curve {$/;"	s
nk_command_image	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_image {$/;"	s
nk_command_line	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_line {$/;"	s
nk_command_polygon	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_polygon {$/;"	s
nk_command_polygon_filled	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_polygon_filled {$/;"	s
nk_command_polyline	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_polyline {$/;"	s
nk_command_rect	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_rect {$/;"	s
nk_command_rect_filled	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_rect_filled {$/;"	s
nk_command_rect_multi_color	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_rect_multi_color {$/;"	s
nk_command_scissor	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_scissor {$/;"	s
nk_command_text	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_text {$/;"	s
nk_command_triangle	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_triangle {$/;"	s
nk_command_triangle_filled	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_command_triangle_filled {$/;"	s
nk_command_type	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_command_type {$/;"	g
nk_configuration_stacks	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_configuration_stacks {$/;"	s
nk_context	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_context {$/;"	s
nk_contextual_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_contextual_begin(struct nk_context *ctx, nk_flags flags, struct nk_vec2 size,$/;"	f
nk_contextual_close	thirdparty/glfw/src/deps/nuklear.h	/^nk_contextual_close(struct nk_context *ctx)$/;"	f
nk_contextual_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_contextual_end(struct nk_context *ctx)$/;"	f
nk_contextual_item_image_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_contextual_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_contextual_item_image_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_contextual_item_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_contextual_item_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_contextual_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f
nk_contextual_item_symbol_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_contextual_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f
nk_contextual_item_symbol_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_contextual_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f
nk_contextual_item_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_contextual_item_text(struct nk_context *ctx, const char *text, int len,$/;"	f
nk_convert	thirdparty/glfw/src/deps/nuklear.h	/^nk_convert(struct nk_context *ctx, struct nk_buffer *cmds,$/;"	f
nk_convert_config	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_convert_config {$/;"	s
nk_cos	thirdparty/glfw/src/deps/nuklear.h	/^nk_cos(float x)$/;"	f
nk_create_page_element	thirdparty/glfw/src/deps/nuklear.h	/^nk_create_page_element(struct nk_context *ctx)$/;"	f
nk_create_panel	thirdparty/glfw/src/deps/nuklear.h	/^nk_create_panel(struct nk_context *ctx)$/;"	f
nk_create_table	thirdparty/glfw/src/deps/nuklear.h	/^nk_create_table(struct nk_context *ctx)$/;"	f
nk_create_window	thirdparty/glfw/src/deps/nuklear.h	/^nk_create_window(struct nk_context *ctx)$/;"	f
nk_cursor	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	s
nk_custom_cursor_data	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const char nk_custom_cursor_data[NK_CURSOR_DATA_W * NK_CURSOR_DATA_H + 1] =$/;"	v
nk_decode_85	thirdparty/glfw/src/deps/nuklear.h	/^nk_decode_85(unsigned char* dst, const unsigned char* src)$/;"	f
nk_decode_85_byte	thirdparty/glfw/src/deps/nuklear.h	/^nk_decode_85_byte(char c)$/;"	f
nk_decompress	thirdparty/glfw/src/deps/nuklear.h	/^nk_decompress(unsigned char *output, unsigned char *i, unsigned int length)$/;"	f
nk_decompress_length	thirdparty/glfw/src/deps/nuklear.h	/^nk_decompress_length(unsigned char *input)$/;"	f
nk_decompress_token	thirdparty/glfw/src/deps/nuklear.h	/^nk_decompress_token(unsigned char *i)$/;"	f
nk_default_color_style	thirdparty/glfw/src/deps/nuklear.h	/^nk_default_color_style[NK_COLOR_COUNT] = {$/;"	v	typeref:struct:nk_color
nk_do_button	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_button(nk_flags *state, struct nk_command_buffer *out, struct nk_rect r,$/;"	f
nk_do_button_image	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_button_image(nk_flags *state,$/;"	f
nk_do_button_symbol	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_button_symbol(nk_flags *state,$/;"	f
nk_do_button_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_button_text(nk_flags *state,$/;"	f
nk_do_button_text_image	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_button_text_image(nk_flags *state,$/;"	f
nk_do_button_text_symbol	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_button_text_symbol(nk_flags *state,$/;"	f
nk_do_color_picker	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_color_picker(nk_flags *state,$/;"	f
nk_do_edit	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_edit(nk_flags *state, struct nk_command_buffer *out,$/;"	f
nk_do_progress	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_progress(nk_flags *state,$/;"	f
nk_do_property	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_property(nk_flags *ws,$/;"	f
nk_do_scrollbarh	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_scrollbarh(nk_flags *state,$/;"	f
nk_do_scrollbarv	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_scrollbarv(nk_flags *state,$/;"	f
nk_do_selectable	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_selectable(nk_flags *state, struct nk_command_buffer *out,$/;"	f
nk_do_selectable_image	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_selectable_image(nk_flags *state, struct nk_command_buffer *out,$/;"	f
nk_do_slider	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_slider(nk_flags *state,$/;"	f
nk_do_toggle	thirdparty/glfw/src/deps/nuklear.h	/^nk_do_toggle(nk_flags *state,$/;"	f
nk_drag_behavior	thirdparty/glfw/src/deps/nuklear.h	/^nk_drag_behavior(nk_flags *state, const struct nk_input *in,$/;"	f
nk_draw_button	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_button(struct nk_command_buffer *out,$/;"	f
nk_draw_button_image	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_button_image(struct nk_command_buffer *out,$/;"	f
nk_draw_button_symbol	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_button_symbol(struct nk_command_buffer *out,$/;"	f
nk_draw_button_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_button_text(struct nk_command_buffer *out,$/;"	f
nk_draw_button_text_image	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_button_text_image(struct nk_command_buffer *out,$/;"	f
nk_draw_button_text_symbol	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_button_text_symbol(struct nk_command_buffer *out,$/;"	f
nk_draw_checkbox	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_checkbox(struct nk_command_buffer *out,$/;"	f
nk_draw_color_picker	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_color_picker(struct nk_command_buffer *o, const struct nk_rect *matrix,$/;"	f
nk_draw_command	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_draw_command {$/;"	s
nk_draw_foreach	thirdparty/glfw/src/deps/nuklear.h	994;"	d
nk_draw_foreach_bounded	thirdparty/glfw/src/deps/nuklear.h	995;"	d
nk_draw_image	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_image(struct nk_command_buffer *b, struct nk_rect r,$/;"	f
nk_draw_index	thirdparty/glfw/src/deps/nuklear.h	/^typedef nk_ushort nk_draw_index;$/;"	t
nk_draw_list	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_draw_list {$/;"	s
nk_draw_list_add_clip	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_add_clip(struct nk_draw_list *list, struct nk_rect rect)$/;"	f
nk_draw_list_add_image	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_add_image(struct nk_draw_list *list, struct nk_image texture,$/;"	f
nk_draw_list_add_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_add_text(struct nk_draw_list *list, const struct nk_user_font *font,$/;"	f
nk_draw_list_alloc_elements	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_alloc_elements(struct nk_draw_list *list, nk_size count)$/;"	f
nk_draw_list_alloc_path	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_alloc_path(struct nk_draw_list *list, int count)$/;"	f
nk_draw_list_alloc_vertices	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_alloc_vertices(struct nk_draw_list *list, nk_size count)$/;"	f
nk_draw_list_clear	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_clear(struct nk_draw_list *list)$/;"	f
nk_draw_list_command_last	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_command_last(struct nk_draw_list *list)$/;"	f
nk_draw_list_fill_circle	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_fill_circle(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f
nk_draw_list_fill_poly_convex	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_fill_poly_convex(struct nk_draw_list *list,$/;"	f
nk_draw_list_fill_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_fill_rect(struct nk_draw_list *list, struct nk_rect rect,$/;"	f
nk_draw_list_fill_rect_multi_color	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_fill_rect_multi_color(struct nk_draw_list *list, struct nk_rect rect,$/;"	f
nk_draw_list_fill_triangle	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_fill_triangle(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_list_foreach	thirdparty/glfw/src/deps/nuklear.h	2146;"	d
nk_draw_list_init	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_init(struct nk_draw_list *list)$/;"	f
nk_draw_list_path_arc_to	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_path_arc_to(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f
nk_draw_list_path_arc_to_fast	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_path_arc_to_fast(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f
nk_draw_list_path_clear	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_path_clear(struct nk_draw_list *list)$/;"	f
nk_draw_list_path_curve_to	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_path_curve_to(struct nk_draw_list *list, struct nk_vec2 p2,$/;"	f
nk_draw_list_path_fill	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_path_fill(struct nk_draw_list *list, struct nk_color color)$/;"	f
nk_draw_list_path_last	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_path_last(struct nk_draw_list *list)$/;"	f
nk_draw_list_path_line_to	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_path_line_to(struct nk_draw_list *list, struct nk_vec2 pos)$/;"	f
nk_draw_list_path_rect_to	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_path_rect_to(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_list_path_stroke	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_path_stroke(struct nk_draw_list *list, struct nk_color color,$/;"	f
nk_draw_list_push_command	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_push_command(struct nk_draw_list *list, struct nk_rect clip,$/;"	f
nk_draw_list_push_image	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_push_image(struct nk_draw_list *list, nk_handle texture)$/;"	f
nk_draw_list_push_rect_uv	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_push_rect_uv(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_list_push_userdata	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_push_userdata(struct nk_draw_list *list, nk_handle userdata)$/;"	f
nk_draw_list_setup	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_setup(struct nk_draw_list *canvas, const struct nk_convert_config *config,$/;"	f
nk_draw_list_stroke	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_draw_list_stroke {$/;"	g
nk_draw_list_stroke_circle	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_stroke_circle(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f
nk_draw_list_stroke_curve	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_stroke_curve(struct nk_draw_list *list, struct nk_vec2 p0,$/;"	f
nk_draw_list_stroke_line	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_stroke_line(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_list_stroke_poly_line	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_stroke_poly_line(struct nk_draw_list *list, const struct nk_vec2 *points,$/;"	f
nk_draw_list_stroke_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_stroke_rect(struct nk_draw_list *list, struct nk_rect rect,$/;"	f
nk_draw_list_stroke_triangle	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_list_stroke_triangle(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_null_texture	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_draw_null_texture {$/;"	s
nk_draw_option	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_option(struct nk_command_buffer *out,$/;"	f
nk_draw_progress	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_progress(struct nk_command_buffer *out, nk_flags state,$/;"	f
nk_draw_property	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_property(struct nk_command_buffer *out, const struct nk_style_property *style,$/;"	f
nk_draw_scrollbar	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_scrollbar(struct nk_command_buffer *out, nk_flags state,$/;"	f
nk_draw_selectable	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_selectable(struct nk_command_buffer *out,$/;"	f
nk_draw_slider	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_slider(struct nk_command_buffer *out, nk_flags state,$/;"	f
nk_draw_symbol	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_symbol(struct nk_command_buffer *out, enum nk_symbol_type type,$/;"	f
nk_draw_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_text(struct nk_command_buffer *b, struct nk_rect r,$/;"	f
nk_draw_vertex	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_vertex(void *dst, const struct nk_convert_config *config,$/;"	f
nk_draw_vertex_color	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_vertex_color(void *attribute, const float *values,$/;"	f
nk_draw_vertex_element	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_vertex_element(void *dst, const float *values, int value_count,$/;"	f
nk_draw_vertex_layout_attribute	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_draw_vertex_layout_attribute {$/;"	g
nk_draw_vertex_layout_element	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_draw_vertex_layout_element {$/;"	s
nk_draw_vertex_layout_element_is_end_of_layout	thirdparty/glfw/src/deps/nuklear.h	/^nk_draw_vertex_layout_element_is_end_of_layout($/;"	f
nk_draw_vertex_layout_format	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_draw_vertex_layout_format {$/;"	g
nk_dtoa	thirdparty/glfw/src/deps/nuklear.h	/^nk_dtoa(char *s, double n)$/;"	f
nk_edit_buffer	thirdparty/glfw/src/deps/nuklear.h	/^nk_edit_buffer(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_edit_draw_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_edit_draw_text(struct nk_command_buffer *out,$/;"	f
nk_edit_events	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_edit_events {$/;"	g
nk_edit_flags	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_edit_flags {$/;"	g
nk_edit_focus	thirdparty/glfw/src/deps/nuklear.h	/^nk_edit_focus(struct nk_context *ctx, nk_flags flags)$/;"	f
nk_edit_state	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_edit_state {$/;"	s
nk_edit_string	thirdparty/glfw/src/deps/nuklear.h	/^nk_edit_string(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_edit_string_zero_terminated	thirdparty/glfw/src/deps/nuklear.h	/^nk_edit_string_zero_terminated(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_edit_types	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_edit_types {$/;"	g
nk_edit_unfocus	thirdparty/glfw/src/deps/nuklear.h	/^nk_edit_unfocus(struct nk_context *ctx)$/;"	f
nk_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_end(struct nk_context *ctx)$/;"	f
nk_false	thirdparty/glfw/src/deps/nuklear.h	/^enum {nk_false, nk_true};$/;"	e	enum:__anon167
nk_file_load	thirdparty/glfw/src/deps/nuklear.h	/^nk_file_load(const char* path, nk_size* siz, struct nk_allocator *alloc)$/;"	f
nk_fill_arc	thirdparty/glfw/src/deps/nuklear.h	/^nk_fill_arc(struct nk_command_buffer *b, float cx, float cy, float radius,$/;"	f
nk_fill_circle	thirdparty/glfw/src/deps/nuklear.h	/^nk_fill_circle(struct nk_command_buffer *b, struct nk_rect r, struct nk_color c)$/;"	f
nk_fill_polygon	thirdparty/glfw/src/deps/nuklear.h	/^nk_fill_polygon(struct nk_command_buffer *b, float *points, int point_count,$/;"	f
nk_fill_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_fill_rect(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f
nk_fill_rect_multi_color	thirdparty/glfw/src/deps/nuklear.h	/^nk_fill_rect_multi_color(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f
nk_fill_triangle	thirdparty/glfw/src/deps/nuklear.h	/^nk_fill_triangle(struct nk_command_buffer *b, float x0, float y0, float x1,$/;"	f
nk_filter_ascii	thirdparty/glfw/src/deps/nuklear.h	/^nk_filter_ascii(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_binary	thirdparty/glfw/src/deps/nuklear.h	/^nk_filter_binary(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_decimal	thirdparty/glfw/src/deps/nuklear.h	/^nk_filter_decimal(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_default	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_filter_default(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_float	thirdparty/glfw/src/deps/nuklear.h	/^nk_filter_float(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_hex	thirdparty/glfw/src/deps/nuklear.h	/^nk_filter_hex(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_oct	thirdparty/glfw/src/deps/nuklear.h	/^nk_filter_oct(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_find_value	thirdparty/glfw/src/deps/nuklear.h	/^nk_find_value(struct nk_window *win, nk_hash name)$/;"	f
nk_find_window	thirdparty/glfw/src/deps/nuklear.h	/^nk_find_window(struct nk_context *ctx, nk_hash hash, const char *name)$/;"	f
nk_finish	thirdparty/glfw/src/deps/nuklear.h	/^nk_finish(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_finish_buffer	thirdparty/glfw/src/deps/nuklear.h	/^nk_finish_buffer(struct nk_context *ctx, struct nk_command_buffer *buffer)$/;"	f
nk_finish_popup	thirdparty/glfw/src/deps/nuklear.h	/^nk_finish_popup(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_flags	thirdparty/glfw/src/deps/nuklear.h	/^typedef nk_uint nk_flags;$/;"	t
nk_float	thirdparty/glfw/src/deps/nuklear.h	2879;"	d
nk_font	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_font {$/;"	s
nk_font_atlas	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_font_atlas {$/;"	s
nk_font_atlas_add	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_add(struct nk_font_atlas *atlas, const struct nk_font_config *config)$/;"	f
nk_font_atlas_add_compressed	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_add_compressed(struct nk_font_atlas *atlas,$/;"	f
nk_font_atlas_add_compressed_base85	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_add_compressed_base85(struct nk_font_atlas *atlas,$/;"	f
nk_font_atlas_add_default	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_add_default(struct nk_font_atlas *atlas,$/;"	f
nk_font_atlas_add_from_file	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_add_from_file(struct nk_font_atlas *atlas, const char *file_path,$/;"	f
nk_font_atlas_add_from_memory	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_add_from_memory(struct nk_font_atlas *atlas, void *memory,$/;"	f
nk_font_atlas_bake	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_bake(struct nk_font_atlas *atlas, int *width, int *height,$/;"	f
nk_font_atlas_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_begin(struct nk_font_atlas *atlas)$/;"	f
nk_font_atlas_cleanup	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_cleanup(struct nk_font_atlas *atlas)$/;"	f
nk_font_atlas_clear	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_clear(struct nk_font_atlas *atlas)$/;"	f
nk_font_atlas_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_end(struct nk_font_atlas *atlas, nk_handle texture,$/;"	f
nk_font_atlas_format	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_font_atlas_format {$/;"	g
nk_font_atlas_init	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_init(struct nk_font_atlas *atlas, struct nk_allocator *alloc)$/;"	f
nk_font_atlas_init_custom	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_init_custom(struct nk_font_atlas *atlas,$/;"	f
nk_font_atlas_init_default	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_atlas_init_default(struct nk_font_atlas *atlas)$/;"	f
nk_font_bake	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_bake(struct nk_font_baker *baker, void *image_memory, int width, int height,$/;"	f
nk_font_bake_convert	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_bake_convert(void *out_memory, int img_width, int img_height,$/;"	f
nk_font_bake_custom_data	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_bake_custom_data(void *img_memory, int img_width, int img_height,$/;"	f
nk_font_bake_data	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_font_bake_data {$/;"	s
nk_font_bake_pack	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_bake_pack(struct nk_font_baker *baker,$/;"	f
nk_font_baker	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_baker(void *memory, int glyph_count, int count, struct nk_allocator *alloc)$/;"	f
nk_font_baker	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_font_baker {$/;"	s
nk_font_baker_memory	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_baker_memory(nk_size *temp, int *glyph_count,$/;"	f
nk_font_chinese_glyph_ranges	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_chinese_glyph_ranges(void)$/;"	f
nk_font_config	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_config(float pixel_height)$/;"	f
nk_font_config	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_font_config {$/;"	s
nk_font_coord_type	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_font_coord_type {$/;"	g
nk_font_cyrillic_glyph_ranges	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_cyrillic_glyph_ranges(void)$/;"	f
nk_font_default_glyph_ranges	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_default_glyph_ranges(void)$/;"	f
nk_font_find_glyph	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_find_glyph(struct nk_font *font, nk_rune unicode)$/;"	f
nk_font_glyph	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_font_glyph {$/;"	s
nk_font_init	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_init(struct nk_font *font, float pixel_height,$/;"	f
nk_font_korean_glyph_ranges	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_korean_glyph_ranges(void)$/;"	f
nk_font_query_font_glyph	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_query_font_glyph(nk_handle handle, float height,$/;"	f
nk_font_text_width	thirdparty/glfw/src/deps/nuklear.h	/^nk_font_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f
nk_foreach	thirdparty/glfw/src/deps/nuklear.h	991;"	d
nk_free	thirdparty/glfw/src/deps/nuklear.h	/^nk_free(struct nk_context *ctx)$/;"	f
nk_free_page_element	thirdparty/glfw/src/deps/nuklear.h	/^nk_free_page_element(struct nk_context *ctx, struct nk_page_element *elem)$/;"	f
nk_free_panel	thirdparty/glfw/src/deps/nuklear.h	/^nk_free_panel(struct nk_context *ctx, struct nk_panel *pan)$/;"	f
nk_free_table	thirdparty/glfw/src/deps/nuklear.h	/^nk_free_table(struct nk_context *ctx, struct nk_table *tbl)$/;"	f
nk_free_window	thirdparty/glfw/src/deps/nuklear.h	/^nk_free_window(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_get_null_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_get_null_rect(void)$/;"	f
nk_gflw3_scroll_callback	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^nk_gflw3_scroll_callback(GLFWwindow *win, double xoff, double yoff)$/;"	f
nk_glfw	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^static struct nk_glfw {$/;"	s
nk_glfw3_char_callback	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^nk_glfw3_char_callback(GLFWwindow *win, unsigned int codepoint)$/;"	f
nk_glfw3_clipbard_copy	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^nk_glfw3_clipbard_copy(nk_handle usr, const char *text, int len)$/;"	f
nk_glfw3_clipbard_paste	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^nk_glfw3_clipbard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f
nk_glfw3_device_upload_atlas	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^nk_glfw3_device_upload_atlas(const void *image, int width, int height)$/;"	f
nk_glfw3_font_stash_begin	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^nk_glfw3_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f
nk_glfw3_font_stash_end	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^nk_glfw3_font_stash_end(void)$/;"	f
nk_glfw3_init	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^nk_glfw3_init(GLFWwindow *win, enum nk_glfw_init_state init_state)$/;"	f
nk_glfw3_new_frame	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^nk_glfw3_new_frame(void)$/;"	f
nk_glfw3_render	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^nk_glfw3_render(enum nk_anti_aliasing AA, int max_vertex_buffer, int max_element_buffer)$/;"	f
nk_glfw3_shutdown	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^void nk_glfw3_shutdown(void)$/;"	f
nk_glfw_device	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^struct nk_glfw_device {$/;"	s
nk_glfw_init_state	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^enum nk_glfw_init_state{$/;"	g
nk_glfw_vertex	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^struct nk_glfw_vertex {$/;"	s
nk_glyph	thirdparty/glfw/src/deps/nuklear.h	/^typedef char nk_glyph[NK_UTF_SIZE];$/;"	t
nk_green	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const struct nk_color nk_green = {0,255,0,255};$/;"	v	typeref:struct:nk_color
nk_group_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_group_begin(struct nk_context *ctx, const char *title, nk_flags flags)$/;"	f
nk_group_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_group_end(struct nk_context *ctx)$/;"	f
nk_group_scrolled_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_group_scrolled_begin(struct nk_context *ctx,$/;"	f
nk_group_scrolled_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_group_scrolled_end(struct nk_context *ctx)$/;"	f
nk_group_scrolled_offset_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_group_scrolled_offset_begin(struct nk_context *ctx,$/;"	f
nk_handle	thirdparty/glfw/src/deps/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	t	typeref:union:__anon168
nk_handle_id	thirdparty/glfw/src/deps/nuklear.h	/^nk_handle_id(int id)$/;"	f
nk_handle_ptr	thirdparty/glfw/src/deps/nuklear.h	/^nk_handle_ptr(void *ptr)$/;"	f
nk_hash	thirdparty/glfw/src/deps/nuklear.h	/^typedef nk_uint nk_hash;$/;"	t
nk_heading	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	g
nk_helper	thirdparty/glfw/src/deps/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	s
nk_helper	thirdparty/glfw/src/deps/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	s
nk_hsv	thirdparty/glfw/src/deps/nuklear.h	/^nk_hsv(int h, int s, int v)$/;"	f
nk_hsv_bv	thirdparty/glfw/src/deps/nuklear.h	/^nk_hsv_bv(const nk_byte *c)$/;"	f
nk_hsv_f	thirdparty/glfw/src/deps/nuklear.h	/^nk_hsv_f(float h, float s, float v)$/;"	f
nk_hsv_fv	thirdparty/glfw/src/deps/nuklear.h	/^nk_hsv_fv(const float *c)$/;"	f
nk_hsv_iv	thirdparty/glfw/src/deps/nuklear.h	/^nk_hsv_iv(const int *c)$/;"	f
nk_hsva	thirdparty/glfw/src/deps/nuklear.h	/^nk_hsva(int h, int s, int v, int a)$/;"	f
nk_hsva_bv	thirdparty/glfw/src/deps/nuklear.h	/^nk_hsva_bv(const nk_byte *c)$/;"	f
nk_hsva_f	thirdparty/glfw/src/deps/nuklear.h	/^nk_hsva_f(float h, float s, float v, float a)$/;"	f
nk_hsva_fv	thirdparty/glfw/src/deps/nuklear.h	/^nk_hsva_fv(const float *c)$/;"	f
nk_hsva_iv	thirdparty/glfw/src/deps/nuklear.h	/^nk_hsva_iv(const int *c)$/;"	f
nk_iceilf	thirdparty/glfw/src/deps/nuklear.h	/^nk_iceilf(float x)$/;"	f
nk_ifloord	thirdparty/glfw/src/deps/nuklear.h	/^nk_ifloord(double x)$/;"	f
nk_ifloorf	thirdparty/glfw/src/deps/nuklear.h	/^nk_ifloorf(float x)$/;"	f
nk_image	thirdparty/glfw/src/deps/nuklear.h	/^nk_image(struct nk_context *ctx, struct nk_image img)$/;"	f
nk_image	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	s
nk_image_handle	thirdparty/glfw/src/deps/nuklear.h	/^nk_image_handle(nk_handle handle)$/;"	f
nk_image_id	thirdparty/glfw/src/deps/nuklear.h	/^nk_image_id(int id)$/;"	f
nk_image_is_subimage	thirdparty/glfw/src/deps/nuklear.h	/^nk_image_is_subimage(const struct nk_image* img)$/;"	f
nk_image_ptr	thirdparty/glfw/src/deps/nuklear.h	/^nk_image_ptr(void *ptr)$/;"	f
nk_init	thirdparty/glfw/src/deps/nuklear.h	/^nk_init(struct nk_context *ctx, struct nk_allocator *alloc,$/;"	f
nk_init_custom	thirdparty/glfw/src/deps/nuklear.h	/^nk_init_custom(struct nk_context *ctx, struct nk_buffer *cmds,$/;"	f
nk_init_default	thirdparty/glfw/src/deps/nuklear.h	/^nk_init_default(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f
nk_init_fixed	thirdparty/glfw/src/deps/nuklear.h	/^nk_init_fixed(struct nk_context *ctx, void *memory, nk_size size,$/;"	f
nk_input	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_input {$/;"	s
nk_input_any_mouse_click_in_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_any_mouse_click_in_rect(const struct nk_input *in, struct nk_rect b)$/;"	f
nk_input_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_begin(struct nk_context *ctx)$/;"	f
nk_input_button	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_button(struct nk_context *ctx, enum nk_buttons id, int x, int y, int down)$/;"	f
nk_input_char	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_char(struct nk_context *ctx, char c)$/;"	f
nk_input_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_end(struct nk_context *ctx)$/;"	f
nk_input_glyph	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_glyph(struct nk_context *ctx, const nk_glyph glyph)$/;"	f
nk_input_has_mouse_click	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_has_mouse_click(const struct nk_input *i, enum nk_buttons id)$/;"	f
nk_input_has_mouse_click_down_in_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_has_mouse_click_down_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f
nk_input_has_mouse_click_in_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_has_mouse_click_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f
nk_input_is_key_down	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_is_key_down(const struct nk_input *i, enum nk_keys key)$/;"	f
nk_input_is_key_pressed	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_is_key_pressed(const struct nk_input *i, enum nk_keys key)$/;"	f
nk_input_is_key_released	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_is_key_released(const struct nk_input *i, enum nk_keys key)$/;"	f
nk_input_is_mouse_click_down_in_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_is_mouse_click_down_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f
nk_input_is_mouse_click_in_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_is_mouse_click_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f
nk_input_is_mouse_down	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_is_mouse_down(const struct nk_input *i, enum nk_buttons id)$/;"	f
nk_input_is_mouse_hovering_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_is_mouse_hovering_rect(const struct nk_input *i, struct nk_rect rect)$/;"	f
nk_input_is_mouse_pressed	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_is_mouse_pressed(const struct nk_input *i, enum nk_buttons id)$/;"	f
nk_input_is_mouse_prev_hovering_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_is_mouse_prev_hovering_rect(const struct nk_input *i, struct nk_rect rect)$/;"	f
nk_input_is_mouse_released	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_is_mouse_released(const struct nk_input *i, enum nk_buttons id)$/;"	f
nk_input_key	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_key(struct nk_context *ctx, enum nk_keys key, int down)$/;"	f
nk_input_motion	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_motion(struct nk_context *ctx, int x, int y)$/;"	f
nk_input_mouse_clicked	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_mouse_clicked(const struct nk_input *i, enum nk_buttons id, struct nk_rect rect)$/;"	f
nk_input_scroll	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_scroll(struct nk_context *ctx, float y)$/;"	f
nk_input_unicode	thirdparty/glfw/src/deps/nuklear.h	/^nk_input_unicode(struct nk_context *ctx, nk_rune unicode)$/;"	f
nk_insert_window	thirdparty/glfw/src/deps/nuklear.h	/^nk_insert_window(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_int	thirdparty/glfw/src/deps/nuklear.h	/^typedef NK_INT32 nk_int;$/;"	t
nk_inv_sqrt	thirdparty/glfw/src/deps/nuklear.h	/^nk_inv_sqrt(float number)$/;"	f
nk_is_lower	thirdparty/glfw/src/deps/nuklear.h	/^NK_INTERN int nk_is_lower(int c) {return (c >= 'a' && c <= 'z') || (c >= 0xE0 && c <= 0xFF);}$/;"	f
nk_is_upper	thirdparty/glfw/src/deps/nuklear.h	/^NK_INTERN int nk_is_upper(int c){return (c >= 'A' && c <= 'Z') || (c >= 0xC0 && c <= 0xDF);}$/;"	f
nk_is_word_boundary	thirdparty/glfw/src/deps/nuklear.h	/^nk_is_word_boundary( struct nk_text_edit *state, int idx)$/;"	f
nk_item_is_any_active	thirdparty/glfw/src/deps/nuklear.h	/^nk_item_is_any_active(struct nk_context *ctx)$/;"	f
nk_itoa	thirdparty/glfw/src/deps/nuklear.h	/^nk_itoa(char *s, long n)$/;"	f
nk_key	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_key {$/;"	s
nk_keyboard	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_keyboard {$/;"	s
nk_keys	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_keys {$/;"	g
nk_label	thirdparty/glfw/src/deps/nuklear.h	/^nk_label(struct nk_context *ctx, const char *str, nk_flags alignment)$/;"	f
nk_label_colored	thirdparty/glfw/src/deps/nuklear.h	/^nk_label_colored(struct nk_context *ctx, const char *str, nk_flags align,$/;"	f
nk_label_colored_wrap	thirdparty/glfw/src/deps/nuklear.h	/^nk_label_colored_wrap(struct nk_context *ctx, const char *str, struct nk_color color)$/;"	f
nk_label_wrap	thirdparty/glfw/src/deps/nuklear.h	/^nk_label_wrap(struct nk_context *ctx, const char *str)$/;"	f
nk_labelf	thirdparty/glfw/src/deps/nuklear.h	/^nk_labelf(struct nk_context *ctx, nk_flags flags, const char *fmt, ...)$/;"	f
nk_labelf_colored	thirdparty/glfw/src/deps/nuklear.h	/^nk_labelf_colored(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_labelf_colored_wrap	thirdparty/glfw/src/deps/nuklear.h	/^nk_labelf_colored_wrap(struct nk_context *ctx, struct nk_color color,$/;"	f
nk_labelf_wrap	thirdparty/glfw/src/deps/nuklear.h	/^nk_labelf_wrap(struct nk_context *ctx, const char *fmt,...)$/;"	f
nk_layout_format	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	g
nk_layout_peek	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_peek(struct nk_rect *bounds, struct nk_context *ctx)$/;"	f
nk_layout_ratio_from_pixel	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_ratio_from_pixel(struct nk_context *ctx, float pixel_width)$/;"	f
nk_layout_row	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_row(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f
nk_layout_row_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_row_begin(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f
nk_layout_row_calculate_usable_space	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_row_calculate_usable_space(const struct nk_style *style, enum nk_panel_type type,$/;"	f
nk_layout_row_dynamic	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_row_dynamic(struct nk_context *ctx, float height, int cols)$/;"	f
nk_layout_row_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_row_end(struct nk_context *ctx)$/;"	f
nk_layout_row_push	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_row_push(struct nk_context *ctx, float ratio_or_width)$/;"	f
nk_layout_row_static	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_row_static(struct nk_context *ctx, float height, int item_width, int cols)$/;"	f
nk_layout_row_template_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_row_template_begin(struct nk_context *ctx, float height)$/;"	f
nk_layout_row_template_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_row_template_end(struct nk_context *ctx)$/;"	f
nk_layout_row_template_push_dynamic	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_row_template_push_dynamic(struct nk_context *ctx)$/;"	f
nk_layout_row_template_push_static	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_row_template_push_static(struct nk_context *ctx, float width)$/;"	f
nk_layout_row_template_push_variable	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_row_template_push_variable(struct nk_context *ctx, float min_width)$/;"	f
nk_layout_space_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_space_begin(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f
nk_layout_space_bounds	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_space_bounds(struct nk_context *ctx)$/;"	f
nk_layout_space_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_space_end(struct nk_context *ctx)$/;"	f
nk_layout_space_push	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_space_push(struct nk_context *ctx, struct nk_rect rect)$/;"	f
nk_layout_space_rect_to_local	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_space_rect_to_local(struct nk_context *ctx, struct nk_rect ret)$/;"	f
nk_layout_space_rect_to_screen	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_space_rect_to_screen(struct nk_context *ctx, struct nk_rect ret)$/;"	f
nk_layout_space_to_local	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_space_to_local(struct nk_context *ctx, struct nk_vec2 ret)$/;"	f
nk_layout_space_to_screen	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_space_to_screen(struct nk_context *ctx, struct nk_vec2 ret)$/;"	f
nk_layout_widget_space	thirdparty/glfw/src/deps/nuklear.h	/^nk_layout_widget_space(struct nk_rect *bounds, const struct nk_context *ctx,$/;"	f
nk_link_page_element_into_freelist	thirdparty/glfw/src/deps/nuklear.h	/^nk_link_page_element_into_freelist(struct nk_context *ctx,$/;"	f
nk_list_view	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_list_view {$/;"	s
nk_list_view_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_list_view_begin(struct nk_context *ctx, struct nk_list_view *view,$/;"	f
nk_list_view_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_list_view_end(struct nk_list_view *view)$/;"	f
nk_log10	thirdparty/glfw/src/deps/nuklear.h	/^nk_log10(double n)$/;"	f
nk_malloc	thirdparty/glfw/src/deps/nuklear.h	/^NK_INTERN void* nk_malloc(nk_handle unused, void *old,nk_size size)$/;"	f
nk_memcopy	thirdparty/glfw/src/deps/nuklear.h	/^nk_memcopy(void *dst0, const void *src0, nk_size length)$/;"	f
nk_memory	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	s
nk_memory_status	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_memory_status {$/;"	s
nk_memset	thirdparty/glfw/src/deps/nuklear.h	/^nk_memset(void *ptr, int c0, nk_size size)$/;"	f
nk_menu_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_menu_begin(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_menu_begin_image	thirdparty/glfw/src/deps/nuklear.h	/^nk_menu_begin_image(struct nk_context *ctx, const char *id, struct nk_image img,$/;"	f
nk_menu_begin_image_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_menu_begin_image_label(struct nk_context *ctx,$/;"	f
nk_menu_begin_image_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_menu_begin_image_text(struct nk_context *ctx, const char *title, int len,$/;"	f
nk_menu_begin_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_menu_begin_label(struct nk_context *ctx,$/;"	f
nk_menu_begin_symbol	thirdparty/glfw/src/deps/nuklear.h	/^nk_menu_begin_symbol(struct nk_context *ctx, const char *id,$/;"	f
nk_menu_begin_symbol_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_menu_begin_symbol_label(struct nk_context *ctx,$/;"	f
nk_menu_begin_symbol_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_menu_begin_symbol_text(struct nk_context *ctx, const char *title, int len,$/;"	f
nk_menu_begin_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_menu_begin_text(struct nk_context *ctx, const char *title, int len,$/;"	f
nk_menu_close	thirdparty/glfw/src/deps/nuklear.h	/^NK_API void nk_menu_close(struct nk_context *ctx)$/;"	f
nk_menu_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_menu_end(struct nk_context *ctx)$/;"	f
nk_menu_item_image_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_menu_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_menu_item_image_text	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_menu_item_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_menu_item_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_menu_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f
nk_menu_item_symbol_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_menu_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_menu_item_symbol_text	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_menu_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_menu_item_text	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_menu_item_text(struct nk_context *ctx, const char *title, int len, nk_flags align)$/;"	f
nk_menu_state	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_menu_state {$/;"	s
nk_menubar_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_menubar_begin(struct nk_context *ctx)$/;"	f
nk_menubar_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_menubar_end(struct nk_context *ctx)$/;"	f
nk_mfree	thirdparty/glfw/src/deps/nuklear.h	/^NK_INTERN void nk_mfree(nk_handle unused, void *ptr)$/;"	f
nk_modify	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	g
nk_mouse	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_mouse {$/;"	s
nk_mouse_button	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_mouse_button {$/;"	s
nk_murmur_hash	thirdparty/glfw/src/deps/nuklear.h	/^nk_murmur_hash(const void * key, int len, nk_hash seed)$/;"	f
nk_nonblock_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_nonblock_begin(struct nk_context *ctx,$/;"	f
nk_null_rect	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const struct nk_rect nk_null_rect = {-8192.0f, -8192.0f, 16384, 16384};$/;"	v	typeref:struct:nk_rect
nk_option_label	thirdparty/glfw/src/deps/nuklear.h	/^nk_option_label(struct nk_context *ctx, const char *label, int active)$/;"	f
nk_option_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_option_text(struct nk_context *ctx, const char *text, int len, int is_active)$/;"	f
nk_orientation	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	g
nk_pad_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_pad_rect(struct nk_rect r, struct nk_vec2 pad)$/;"	f
nk_page	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_page {$/;"	s
nk_page_data	thirdparty/glfw/src/deps/nuklear.h	/^union nk_page_data {$/;"	u
nk_page_element	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_page_element {$/;"	s
nk_panel	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_panel {$/;"	s
nk_panel_alloc_row	thirdparty/glfw/src/deps/nuklear.h	/^nk_panel_alloc_row(const struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_panel_alloc_space	thirdparty/glfw/src/deps/nuklear.h	/^nk_panel_alloc_space(struct nk_rect *bounds, const struct nk_context *ctx)$/;"	f
nk_panel_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_panel_begin(struct nk_context *ctx, const char *title, enum nk_panel_type panel_type)$/;"	f
nk_panel_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_panel_end(struct nk_context *ctx)$/;"	f
nk_panel_flags	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_panel_flags {$/;"	g
nk_panel_get_border	thirdparty/glfw/src/deps/nuklear.h	/^nk_panel_get_border(const struct nk_style *style, nk_flags flags,$/;"	f
nk_panel_get_border_color	thirdparty/glfw/src/deps/nuklear.h	/^nk_panel_get_border_color(const struct nk_style *style, enum nk_panel_type type)$/;"	f
nk_panel_get_padding	thirdparty/glfw/src/deps/nuklear.h	/^nk_panel_get_padding(const struct nk_style *style, enum nk_panel_type type)$/;"	f
nk_panel_has_header	thirdparty/glfw/src/deps/nuklear.h	/^nk_panel_has_header(nk_flags flags, const char *title)$/;"	f
nk_panel_is_nonblock	thirdparty/glfw/src/deps/nuklear.h	/^nk_panel_is_nonblock(enum nk_panel_type type)$/;"	f
nk_panel_is_sub	thirdparty/glfw/src/deps/nuklear.h	/^nk_panel_is_sub(enum nk_panel_type type)$/;"	f
nk_panel_layout	thirdparty/glfw/src/deps/nuklear.h	/^nk_panel_layout(const struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_panel_row_layout_type	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_panel_row_layout_type {$/;"	g
nk_panel_set	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_panel_set {$/;"	g
nk_panel_type	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_panel_type {$/;"	g
nk_parse_hex	thirdparty/glfw/src/deps/nuklear.h	/^nk_parse_hex(const char *p, int length)$/;"	f
nk_plot	thirdparty/glfw/src/deps/nuklear.h	/^nk_plot(struct nk_context *ctx, enum nk_chart_type type, const float *values,$/;"	f
nk_plot_function	thirdparty/glfw/src/deps/nuklear.h	/^nk_plot_function(struct nk_context *ctx, enum nk_chart_type type, void *userdata,$/;"	f
nk_plugin_alloc	thirdparty/glfw/src/deps/nuklear.h	/^typedef void*(*nk_plugin_alloc)(nk_handle, void *old, nk_size);$/;"	t
nk_plugin_copy	thirdparty/glfw/src/deps/nuklear.h	/^typedef void(*nk_plugin_copy)(nk_handle, const char*, int len);$/;"	t
nk_plugin_filter	thirdparty/glfw/src/deps/nuklear.h	/^typedef int(*nk_plugin_filter)(const struct nk_text_edit*, nk_rune unicode);$/;"	t
nk_plugin_free	thirdparty/glfw/src/deps/nuklear.h	/^typedef void (*nk_plugin_free)(nk_handle, void *old);$/;"	t
nk_plugin_paste	thirdparty/glfw/src/deps/nuklear.h	/^typedef void(*nk_plugin_paste)(nk_handle, struct nk_text_edit*);$/;"	t
nk_pool	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_pool {$/;"	s
nk_pool_alloc	thirdparty/glfw/src/deps/nuklear.h	/^nk_pool_alloc(struct nk_pool *pool)$/;"	f
nk_pool_free	thirdparty/glfw/src/deps/nuklear.h	/^nk_pool_free(struct nk_pool *pool)$/;"	f
nk_pool_init	thirdparty/glfw/src/deps/nuklear.h	/^nk_pool_init(struct nk_pool *pool, struct nk_allocator *alloc,$/;"	f
nk_pool_init_fixed	thirdparty/glfw/src/deps/nuklear.h	/^nk_pool_init_fixed(struct nk_pool *pool, void *memory, nk_size size)$/;"	f
nk_popup_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_popup_begin(struct nk_context *ctx, enum nk_popup_type type,$/;"	f
nk_popup_buffer	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_popup_buffer {$/;"	s
nk_popup_close	thirdparty/glfw/src/deps/nuklear.h	/^nk_popup_close(struct nk_context *ctx)$/;"	f
nk_popup_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_popup_end(struct nk_context *ctx)$/;"	f
nk_popup_state	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_popup_state {$/;"	s
nk_popup_type	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	g
nk_pow	thirdparty/glfw/src/deps/nuklear.h	/^nk_pow(double x, int n)$/;"	f
nk_prog	thirdparty/glfw/src/deps/nuklear.h	/^NK_API nk_size nk_prog(struct nk_context *ctx, nk_size cur, nk_size max, int modifyable)$/;"	f
nk_proggy_clean_ttf_compressed_data_base85	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const char nk_proggy_clean_ttf_compressed_data_base85[11980+1] =$/;"	v
nk_progress	thirdparty/glfw/src/deps/nuklear.h	/^nk_progress(struct nk_context *ctx, nk_size *cur, nk_size max, int is_modifyable)$/;"	f
nk_progress_behavior	thirdparty/glfw/src/deps/nuklear.h	/^nk_progress_behavior(nk_flags *state, const struct nk_input *in,$/;"	f
nk_property	thirdparty/glfw/src/deps/nuklear.h	/^nk_property(struct nk_context *ctx, const char *name, struct nk_property_variant *variant,$/;"	f
nk_property	thirdparty/glfw/src/deps/nuklear.h	/^union nk_property {$/;"	u
nk_property_behavior	thirdparty/glfw/src/deps/nuklear.h	/^nk_property_behavior(nk_flags *ws, const struct nk_input *in,$/;"	f
nk_property_double	thirdparty/glfw/src/deps/nuklear.h	/^nk_property_double(struct nk_context *ctx, const char *name,$/;"	f
nk_property_filter	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_property_filter {$/;"	g
nk_property_float	thirdparty/glfw/src/deps/nuklear.h	/^nk_property_float(struct nk_context *ctx, const char *name,$/;"	f
nk_property_int	thirdparty/glfw/src/deps/nuklear.h	/^nk_property_int(struct nk_context *ctx, const char *name,$/;"	f
nk_property_kind	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_property_kind {$/;"	g
nk_property_state	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_property_state {$/;"	s
nk_property_status	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_property_status {$/;"	g
nk_property_variant	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_property_variant {$/;"	s
nk_property_variant_double	thirdparty/glfw/src/deps/nuklear.h	/^nk_property_variant_double(double value, double min_value, double max_value,$/;"	f
nk_property_variant_float	thirdparty/glfw/src/deps/nuklear.h	/^nk_property_variant_float(float value, float min_value, float max_value, float step)$/;"	f
nk_property_variant_int	thirdparty/glfw/src/deps/nuklear.h	/^nk_property_variant_int(int value, int min_value, int max_value, int step)$/;"	f
nk_propertyd	thirdparty/glfw/src/deps/nuklear.h	/^nk_propertyd(struct nk_context *ctx, const char *name, double min,$/;"	f
nk_propertyf	thirdparty/glfw/src/deps/nuklear.h	/^nk_propertyf(struct nk_context *ctx, const char *name, float min,$/;"	f
nk_propertyi	thirdparty/glfw/src/deps/nuklear.h	/^nk_propertyi(struct nk_context *ctx, const char *name, int min, int val,$/;"	f
nk_ptr	thirdparty/glfw/src/deps/nuklear.h	/^typedef NK_POINTER_TYPE nk_ptr;$/;"	t
nk_ptr_add	thirdparty/glfw/src/deps/nuklear.h	3013;"	d
nk_ptr_add_const	thirdparty/glfw/src/deps/nuklear.h	3014;"	d
nk_push_scissor	thirdparty/glfw/src/deps/nuklear.h	/^nk_push_scissor(struct nk_command_buffer *b, struct nk_rect r)$/;"	f
nk_push_table	thirdparty/glfw/src/deps/nuklear.h	/^nk_push_table(struct nk_window *win, struct nk_table *tbl)$/;"	f
nk_query_font_glyph_f	thirdparty/glfw/src/deps/nuklear.h	/^typedef void(*nk_query_font_glyph_f)(nk_handle handle, float font_height,$/;"	t
nk_radio_label	thirdparty/glfw/src/deps/nuklear.h	/^nk_radio_label(struct nk_context *ctx, const char *label, int *active)$/;"	f
nk_radio_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_radio_text(struct nk_context *ctx, const char *text, int len, int *active)$/;"	f
nk_range_align	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const nk_size nk_range_align = NK_ALIGNOF(struct nk_tt_pack_range);$/;"	v
nk_range_count	thirdparty/glfw/src/deps/nuklear.h	/^nk_range_count(const nk_rune *range)$/;"	f
nk_range_glyph_count	thirdparty/glfw/src/deps/nuklear.h	/^nk_range_glyph_count(const nk_rune *range, int count)$/;"	f
nk_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_rect(float x, float y, float w, float h)$/;"	f
nk_rect	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	s
nk_rect_align	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const nk_size nk_rect_align = NK_ALIGNOF(struct nk_rp_rect);$/;"	v
nk_rect_height_compare	thirdparty/glfw/src/deps/nuklear.h	/^nk_rect_height_compare(const void *a, const void *b)$/;"	f
nk_rect_original_order	thirdparty/glfw/src/deps/nuklear.h	/^nk_rect_original_order(const void *a, const void *b)$/;"	f
nk_rect_pos	thirdparty/glfw/src/deps/nuklear.h	/^nk_rect_pos(struct nk_rect r)$/;"	f
nk_rect_size	thirdparty/glfw/src/deps/nuklear.h	/^nk_rect_size(struct nk_rect r)$/;"	f
nk_recta	thirdparty/glfw/src/deps/nuklear.h	/^nk_recta(struct nk_vec2 pos, struct nk_vec2 size)$/;"	f
nk_recti	thirdparty/glfw/src/deps/nuklear.h	/^nk_recti(int x, int y, int w, int h)$/;"	f
nk_recti	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	s
nk_rectiv	thirdparty/glfw/src/deps/nuklear.h	/^nk_rectiv(const int *r)$/;"	f
nk_rectv	thirdparty/glfw/src/deps/nuklear.h	/^nk_rectv(const float *r)$/;"	f
nk_red	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const struct nk_color nk_red = {255,0,0,255};$/;"	v	typeref:struct:nk_color
nk_remove_table	thirdparty/glfw/src/deps/nuklear.h	/^nk_remove_table(struct nk_window *win, struct nk_table *tbl)$/;"	f
nk_remove_window	thirdparty/glfw/src/deps/nuklear.h	/^nk_remove_window(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_rgb	thirdparty/glfw/src/deps/nuklear.h	/^nk_rgb(int r, int g, int b)$/;"	f
nk_rgb_bv	thirdparty/glfw/src/deps/nuklear.h	/^nk_rgb_bv(const nk_byte* c)$/;"	f
nk_rgb_f	thirdparty/glfw/src/deps/nuklear.h	/^nk_rgb_f(float r, float g, float b)$/;"	f
nk_rgb_fv	thirdparty/glfw/src/deps/nuklear.h	/^nk_rgb_fv(const float *c)$/;"	f
nk_rgb_hex	thirdparty/glfw/src/deps/nuklear.h	/^nk_rgb_hex(const char *rgb)$/;"	f
nk_rgb_iv	thirdparty/glfw/src/deps/nuklear.h	/^nk_rgb_iv(const int *c)$/;"	f
nk_rgba	thirdparty/glfw/src/deps/nuklear.h	/^nk_rgba(int r, int g, int b, int a)$/;"	f
nk_rgba_bv	thirdparty/glfw/src/deps/nuklear.h	/^nk_rgba_bv(const nk_byte *c)$/;"	f
nk_rgba_f	thirdparty/glfw/src/deps/nuklear.h	/^nk_rgba_f(float r, float g, float b, float a)$/;"	f
nk_rgba_fv	thirdparty/glfw/src/deps/nuklear.h	/^nk_rgba_fv(const float *c)$/;"	f
nk_rgba_hex	thirdparty/glfw/src/deps/nuklear.h	/^nk_rgba_hex(const char *rgb)$/;"	f
nk_rgba_iv	thirdparty/glfw/src/deps/nuklear.h	/^nk_rgba_iv(const int *c)$/;"	f
nk_rgba_u32	thirdparty/glfw/src/deps/nuklear.h	/^nk_rgba_u32(nk_uint in)$/;"	f
nk_round_up_pow2	thirdparty/glfw/src/deps/nuklear.h	/^nk_round_up_pow2(nk_uint v)$/;"	f
nk_row_layout	thirdparty/glfw/src/deps/nuklear.h	/^nk_row_layout(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f
nk_row_layout	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_row_layout {$/;"	s
nk_rp__findresult	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_rp__findresult {$/;"	s
nk_rp__skyline_find_best_pos	thirdparty/glfw/src/deps/nuklear.h	/^nk_rp__skyline_find_best_pos(struct nk_rp_context *c, int width, int height)$/;"	f
nk_rp__skyline_find_min_y	thirdparty/glfw/src/deps/nuklear.h	/^nk_rp__skyline_find_min_y(struct nk_rp_context *c, struct nk_rp_node *first,$/;"	f
nk_rp__skyline_pack_rectangle	thirdparty/glfw/src/deps/nuklear.h	/^nk_rp__skyline_pack_rectangle(struct nk_rp_context *context, int width, int height)$/;"	f
nk_rp_context	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_rp_context {$/;"	s
nk_rp_coord	thirdparty/glfw/src/deps/nuklear.h	/^typedef unsigned short nk_rp_coord;$/;"	t
nk_rp_init_target	thirdparty/glfw/src/deps/nuklear.h	/^nk_rp_init_target(struct nk_rp_context *context, int width, int height,$/;"	f
nk_rp_node	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_rp_node {$/;"	s
nk_rp_pack_rects	thirdparty/glfw/src/deps/nuklear.h	/^nk_rp_pack_rects(struct nk_rp_context *context, struct nk_rp_rect *rects, int num_rects)$/;"	f
nk_rp_qsort	thirdparty/glfw/src/deps/nuklear.h	/^nk_rp_qsort(struct nk_rp_rect *array, unsigned int len, int(*cmp)(const void*,const void*))$/;"	f
nk_rp_rect	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_rp_rect {$/;"	s
nk_rp_setup_allow_out_of_mem	thirdparty/glfw/src/deps/nuklear.h	/^nk_rp_setup_allow_out_of_mem(struct nk_rp_context *context, int allow_out_of_mem)$/;"	f
nk_rune	thirdparty/glfw/src/deps/nuklear.h	/^typedef nk_uint nk_rune;$/;"	t
nk_scroll	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	s
nk_scrollbar_behavior	thirdparty/glfw/src/deps/nuklear.h	/^nk_scrollbar_behavior(nk_flags *state, struct nk_input *in,$/;"	f
nk_select_image_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_select_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_select_image_text	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_select_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_select_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_select_label(struct nk_context *ctx, const char *str, nk_flags align, int value)$/;"	f
nk_select_text	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_select_text(struct nk_context *ctx, const char *str, int len,$/;"	f
nk_selectable_image_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_selectable_image_label(struct nk_context *ctx,struct nk_image img,$/;"	f
nk_selectable_image_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_selectable_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_selectable_label	thirdparty/glfw/src/deps/nuklear.h	/^NK_API int nk_selectable_label(struct nk_context *ctx, const char *str, nk_flags align, int *value)$/;"	f
nk_selectable_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_selectable_text(struct nk_context *ctx, const char *str, int len,$/;"	f
nk_set_user_data	thirdparty/glfw/src/deps/nuklear.h	/^nk_set_user_data(struct nk_context *ctx, nk_handle handle)$/;"	f
nk_setup	thirdparty/glfw/src/deps/nuklear.h	/^nk_setup(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f
nk_short	thirdparty/glfw/src/deps/nuklear.h	/^typedef NK_INT16 nk_short;$/;"	t
nk_show_states	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	g
nk_shrink_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_shrink_rect(struct nk_rect r, float amount)$/;"	f
nk_sin	thirdparty/glfw/src/deps/nuklear.h	/^nk_sin(float x)$/;"	f
nk_size	thirdparty/glfw/src/deps/nuklear.h	/^typedef NK_SIZE_TYPE nk_size;$/;"	t
nk_slide_float	thirdparty/glfw/src/deps/nuklear.h	/^nk_slide_float(struct nk_context *ctx, float min, float val, float max, float step)$/;"	f
nk_slide_int	thirdparty/glfw/src/deps/nuklear.h	/^nk_slide_int(struct nk_context *ctx, int min, int val, int max, int step)$/;"	f
nk_slider_behavior	thirdparty/glfw/src/deps/nuklear.h	/^nk_slider_behavior(nk_flags *state, struct nk_rect *logical_cursor,$/;"	f
nk_slider_float	thirdparty/glfw/src/deps/nuklear.h	/^nk_slider_float(struct nk_context *ctx, float min_value, float *value, float max_value,$/;"	f
nk_slider_int	thirdparty/glfw/src/deps/nuklear.h	/^nk_slider_int(struct nk_context *ctx, int min, int *val, int max, int step)$/;"	f
nk_spacing	thirdparty/glfw/src/deps/nuklear.h	/^nk_spacing(struct nk_context *ctx, int cols)$/;"	f
nk_sqrt	thirdparty/glfw/src/deps/nuklear.h	/^nk_sqrt(float x)$/;"	f
nk_start	thirdparty/glfw/src/deps/nuklear.h	/^nk_start(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_start_buffer	thirdparty/glfw/src/deps/nuklear.h	/^nk_start_buffer(struct nk_context *ctx, struct nk_command_buffer *buffer)$/;"	f
nk_start_popup	thirdparty/glfw/src/deps/nuklear.h	/^nk_start_popup(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_str	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_str {$/;"	s
nk_str_append_str_char	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_append_str_char(struct nk_str *s, const char *str)$/;"	f
nk_str_append_str_runes	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_append_str_runes(struct nk_str *str, const nk_rune *runes)$/;"	f
nk_str_append_str_utf8	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_append_str_utf8(struct nk_str *str, const char *text)$/;"	f
nk_str_append_text_char	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_append_text_char(struct nk_str *s, const char *str, int len)$/;"	f
nk_str_append_text_runes	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_append_text_runes(struct nk_str *str, const nk_rune *text, int len)$/;"	f
nk_str_append_text_utf8	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_append_text_utf8(struct nk_str *str, const char *text, int len)$/;"	f
nk_str_at_char	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_at_char(struct nk_str *s, int pos)$/;"	f
nk_str_at_char_const	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_at_char_const(const struct nk_str *s, int pos)$/;"	f
nk_str_at_const	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_at_const(const struct nk_str *str, int pos, nk_rune *unicode, int *len)$/;"	f
nk_str_at_rune	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_at_rune(struct nk_str *str, int pos, nk_rune *unicode, int *len)$/;"	f
nk_str_clear	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_clear(struct nk_str *str)$/;"	f
nk_str_delete_chars	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_delete_chars(struct nk_str *s, int pos, int len)$/;"	f
nk_str_delete_runes	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_delete_runes(struct nk_str *s, int pos, int len)$/;"	f
nk_str_free	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_free(struct nk_str *str)$/;"	f
nk_str_get	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_get(struct nk_str *s)$/;"	f
nk_str_get_const	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_get_const(const struct nk_str *s)$/;"	f
nk_str_init	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_init(struct nk_str *str, const struct nk_allocator *alloc, nk_size size)$/;"	f
nk_str_init_default	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_init_default(struct nk_str *str)$/;"	f
nk_str_init_fixed	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_init_fixed(struct nk_str *str, void *memory, nk_size size)$/;"	f
nk_str_insert_at_char	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_insert_at_char(struct nk_str *s, int pos, const char *str, int len)$/;"	f
nk_str_insert_at_rune	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_insert_at_rune(struct nk_str *str, int pos, const char *cstr, int len)$/;"	f
nk_str_insert_str_char	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_insert_str_char(struct nk_str *str, int pos, const char *text)$/;"	f
nk_str_insert_str_runes	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_insert_str_runes(struct nk_str *str, int pos, const nk_rune *runes)$/;"	f
nk_str_insert_str_utf8	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_insert_str_utf8(struct nk_str *str, int pos, const char *text)$/;"	f
nk_str_insert_text_char	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_insert_text_char(struct nk_str *str, int pos, const char *text, int len)$/;"	f
nk_str_insert_text_runes	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_insert_text_runes(struct nk_str *str, int pos, const nk_rune *runes, int len)$/;"	f
nk_str_insert_text_utf8	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_insert_text_utf8(struct nk_str *str, int pos, const char *text, int len)$/;"	f
nk_str_len	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_len(struct nk_str *s)$/;"	f
nk_str_len_char	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_len_char(struct nk_str *s)$/;"	f
nk_str_match_here	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_match_here(const char *regexp, const char *text)$/;"	f
nk_str_match_star	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_match_star(int c, const char *regexp, const char *text)$/;"	f
nk_str_remove_chars	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_remove_chars(struct nk_str *s, int len)$/;"	f
nk_str_remove_runes	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_remove_runes(struct nk_str *str, int len)$/;"	f
nk_str_rune_at	thirdparty/glfw/src/deps/nuklear.h	/^nk_str_rune_at(const struct nk_str *str, int pos)$/;"	f
nk_strfilter	thirdparty/glfw/src/deps/nuklear.h	/^nk_strfilter(const char *text, const char *regexp)$/;"	f
nk_strfmt	thirdparty/glfw/src/deps/nuklear.h	/^nk_strfmt(char *buf, int buf_size, const char *fmt, va_list args)$/;"	f
nk_stricmp	thirdparty/glfw/src/deps/nuklear.h	/^nk_stricmp(const char *s1, const char *s2)$/;"	f
nk_stricmpn	thirdparty/glfw/src/deps/nuklear.h	/^nk_stricmpn(const char *s1, const char *s2, int n)$/;"	f
nk_string_float_limit	thirdparty/glfw/src/deps/nuklear.h	/^nk_string_float_limit(char *string, int prec)$/;"	f
nk_strlen	thirdparty/glfw/src/deps/nuklear.h	/^nk_strlen(const char *str)$/;"	f
nk_strmatch_fuzzy_string	thirdparty/glfw/src/deps/nuklear.h	/^nk_strmatch_fuzzy_string(char const *str, char const *pattern, int *out_score)$/;"	f
nk_strmatch_fuzzy_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_strmatch_fuzzy_text(const char *str, int str_len,$/;"	f
nk_stroke_arc	thirdparty/glfw/src/deps/nuklear.h	/^nk_stroke_arc(struct nk_command_buffer *b, float cx, float cy, float radius,$/;"	f
nk_stroke_circle	thirdparty/glfw/src/deps/nuklear.h	/^nk_stroke_circle(struct nk_command_buffer *b, struct nk_rect r,$/;"	f
nk_stroke_curve	thirdparty/glfw/src/deps/nuklear.h	/^nk_stroke_curve(struct nk_command_buffer *b, float ax, float ay,$/;"	f
nk_stroke_line	thirdparty/glfw/src/deps/nuklear.h	/^nk_stroke_line(struct nk_command_buffer *b, float x0, float y0,$/;"	f
nk_stroke_polygon	thirdparty/glfw/src/deps/nuklear.h	/^nk_stroke_polygon(struct nk_command_buffer *b,  float *points, int point_count,$/;"	f
nk_stroke_polyline	thirdparty/glfw/src/deps/nuklear.h	/^nk_stroke_polyline(struct nk_command_buffer *b, float *points, int point_count,$/;"	f
nk_stroke_rect	thirdparty/glfw/src/deps/nuklear.h	/^nk_stroke_rect(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f
nk_stroke_triangle	thirdparty/glfw/src/deps/nuklear.h	/^nk_stroke_triangle(struct nk_command_buffer *b, float x0, float y0, float x1,$/;"	f
nk_strrev_ascii	thirdparty/glfw/src/deps/nuklear.h	/^nk_strrev_ascii(char *s)$/;"	f
nk_strtod	thirdparty/glfw/src/deps/nuklear.h	/^nk_strtod(const char *str, char **endptr)$/;"	f
nk_strtof	thirdparty/glfw/src/deps/nuklear.h	/^nk_strtof(const char *str, char **endptr)$/;"	f
nk_strtoi	thirdparty/glfw/src/deps/nuklear.h	/^nk_strtoi(const char *str, char **endptr)$/;"	f
nk_style	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style {$/;"	s
nk_style_button	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_button {$/;"	s
nk_style_chart	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_chart {$/;"	s
nk_style_colors	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_style_colors {$/;"	g
nk_style_combo	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_combo {$/;"	s
nk_style_cursor	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_style_cursor {$/;"	g
nk_style_default	thirdparty/glfw/src/deps/nuklear.h	/^NK_API void nk_style_default(struct nk_context *ctx){nk_style_from_table(ctx, 0);}$/;"	f
nk_style_edit	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_edit {$/;"	s
nk_style_from_table	thirdparty/glfw/src/deps/nuklear.h	/^nk_style_from_table(struct nk_context *ctx, const struct nk_color *table)$/;"	f
nk_style_get_color_by_name	thirdparty/glfw/src/deps/nuklear.h	/^NK_API const char *nk_style_get_color_by_name(enum nk_style_colors c)$/;"	f
nk_style_header_align	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_style_header_align {$/;"	g
nk_style_hide_cursor	thirdparty/glfw/src/deps/nuklear.h	/^nk_style_hide_cursor(struct nk_context *ctx)$/;"	f
nk_style_item	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_item {$/;"	s
nk_style_item_color	thirdparty/glfw/src/deps/nuklear.h	/^NK_API struct nk_style_item nk_style_item_color(struct nk_color col)$/;"	f
nk_style_item_data	thirdparty/glfw/src/deps/nuklear.h	/^union nk_style_item_data {$/;"	u
nk_style_item_hide	thirdparty/glfw/src/deps/nuklear.h	/^NK_API struct nk_style_item nk_style_item_hide(void)$/;"	f
nk_style_item_image	thirdparty/glfw/src/deps/nuklear.h	/^NK_API struct nk_style_item nk_style_item_image(struct nk_image img)$/;"	f
nk_style_item_type	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_style_item_type {$/;"	g
nk_style_load_all_cursors	thirdparty/glfw/src/deps/nuklear.h	/^nk_style_load_all_cursors(struct nk_context *ctx, struct nk_cursor *cursors)$/;"	f
nk_style_load_cursor	thirdparty/glfw/src/deps/nuklear.h	/^nk_style_load_cursor(struct nk_context *ctx, enum nk_style_cursor cursor,$/;"	f
nk_style_pop_font	thirdparty/glfw/src/deps/nuklear.h	/^nk_style_pop_font(struct nk_context *ctx)$/;"	f
nk_style_progress	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_progress {$/;"	s
nk_style_property	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_property {$/;"	s
nk_style_push_font	thirdparty/glfw/src/deps/nuklear.h	/^nk_style_push_font(struct nk_context *ctx, struct nk_user_font *font)$/;"	f
nk_style_scrollbar	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_scrollbar {$/;"	s
nk_style_selectable	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_selectable {$/;"	s
nk_style_set_cursor	thirdparty/glfw/src/deps/nuklear.h	/^nk_style_set_cursor(struct nk_context *ctx, enum nk_style_cursor c)$/;"	f
nk_style_set_font	thirdparty/glfw/src/deps/nuklear.h	/^nk_style_set_font(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f
nk_style_show_cursor	thirdparty/glfw/src/deps/nuklear.h	/^nk_style_show_cursor(struct nk_context *ctx)$/;"	f
nk_style_slider	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_slider {$/;"	s
nk_style_tab	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_tab {$/;"	s
nk_style_text	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_text {$/;"	s
nk_style_toggle	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_toggle {$/;"	s
nk_style_window	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_window {$/;"	s
nk_style_window_header	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_style_window_header {$/;"	s
nk_subimage_handle	thirdparty/glfw/src/deps/nuklear.h	/^nk_subimage_handle(nk_handle handle, unsigned short w, unsigned short h,$/;"	f
nk_subimage_id	thirdparty/glfw/src/deps/nuklear.h	/^nk_subimage_id(int id, unsigned short w, unsigned short h, struct nk_rect r)$/;"	f
nk_subimage_ptr	thirdparty/glfw/src/deps/nuklear.h	/^nk_subimage_ptr(void *ptr, unsigned short w, unsigned short h, struct nk_rect r)$/;"	f
nk_symbol_type	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_symbol_type {$/;"	g
nk_table	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_table {$/;"	s
nk_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_text(struct nk_context *ctx, const char *str, int len, nk_flags alignment)$/;"	f
nk_text	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_text {$/;"	s
nk_text_align	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_text_align {$/;"	g
nk_text_alignment	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_text_alignment {$/;"	g
nk_text_calculate_text_bounds	thirdparty/glfw/src/deps/nuklear.h	/^nk_text_calculate_text_bounds(const struct nk_user_font *font,$/;"	f
nk_text_clamp	thirdparty/glfw/src/deps/nuklear.h	/^nk_text_clamp(const struct nk_user_font *font, const char *text,$/;"	f
nk_text_colored	thirdparty/glfw/src/deps/nuklear.h	/^nk_text_colored(struct nk_context *ctx, const char *str, int len,$/;"	f
nk_text_edit	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_text_edit {$/;"	s
nk_text_edit_mode	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_text_edit_mode {$/;"	g
nk_text_edit_row	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_text_edit_row {$/;"	s
nk_text_edit_type	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_text_edit_type {$/;"	g
nk_text_find	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_text_find {$/;"	s
nk_text_undo_record	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_text_undo_record {$/;"	s
nk_text_undo_state	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_text_undo_state {$/;"	s
nk_text_width_f	thirdparty/glfw/src/deps/nuklear.h	/^typedef float(*nk_text_width_f)(nk_handle, float h, const char*, int len);$/;"	t
nk_text_wrap	thirdparty/glfw/src/deps/nuklear.h	/^nk_text_wrap(struct nk_context *ctx, const char *str, int len)$/;"	f
nk_text_wrap_colored	thirdparty/glfw/src/deps/nuklear.h	/^nk_text_wrap_colored(struct nk_context *ctx, const char *str,$/;"	f
nk_textedit_clamp	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_clamp(struct nk_text_edit *state)$/;"	f
nk_textedit_clear_state	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_clear_state(struct nk_text_edit *state, enum nk_text_edit_type type,$/;"	f
nk_textedit_click	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_click(struct nk_text_edit *state, float x, float y,$/;"	f
nk_textedit_create_undo_record	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_create_undo_record(struct nk_text_undo_state *state, int numchars)$/;"	f
nk_textedit_createundo	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_createundo(struct nk_text_undo_state *state, int pos,$/;"	f
nk_textedit_cut	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_cut(struct nk_text_edit *state)$/;"	f
nk_textedit_delete	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_delete(struct nk_text_edit *state, int where, int len)$/;"	f
nk_textedit_delete_selection	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_delete_selection(struct nk_text_edit *state)$/;"	f
nk_textedit_discard_redo	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_discard_redo(struct nk_text_undo_state *state)$/;"	f
nk_textedit_discard_undo	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_discard_undo(struct nk_text_undo_state *state)$/;"	f
nk_textedit_drag	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_drag(struct nk_text_edit *state, float x, float y,$/;"	f
nk_textedit_find_charpos	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_find_charpos(struct nk_text_find *find, struct nk_text_edit *state,$/;"	f
nk_textedit_flush_redo	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_flush_redo(struct nk_text_undo_state *state)$/;"	f
nk_textedit_free	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_free(struct nk_text_edit *state)$/;"	f
nk_textedit_get_width	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_get_width(const struct nk_text_edit *edit, int line_start, int char_id,$/;"	f
nk_textedit_init	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_init(struct nk_text_edit *state, struct nk_allocator *alloc, nk_size size)$/;"	f
nk_textedit_init_default	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_init_default(struct nk_text_edit *state)$/;"	f
nk_textedit_init_fixed	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_init_fixed(struct nk_text_edit *state, void *memory, nk_size size)$/;"	f
nk_textedit_key	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_key(struct nk_text_edit *state, enum nk_keys key, int shift_mod,$/;"	f
nk_textedit_layout_row	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_layout_row(struct nk_text_edit_row *r, struct nk_text_edit *edit,$/;"	f
nk_textedit_locate_coord	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_locate_coord(struct nk_text_edit *edit, float x, float y,$/;"	f
nk_textedit_makeundo_delete	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_makeundo_delete(struct nk_text_edit *state, int where, int length)$/;"	f
nk_textedit_makeundo_insert	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_makeundo_insert(struct nk_text_edit *state, int where, int length)$/;"	f
nk_textedit_makeundo_replace	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_makeundo_replace(struct nk_text_edit *state, int where,$/;"	f
nk_textedit_move_to_first	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_move_to_first(struct nk_text_edit *state)$/;"	f
nk_textedit_move_to_last	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_move_to_last(struct nk_text_edit *state)$/;"	f
nk_textedit_move_to_word_next	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_move_to_word_next(struct nk_text_edit *state)$/;"	f
nk_textedit_move_to_word_previous	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_move_to_word_previous(struct nk_text_edit *state)$/;"	f
nk_textedit_paste	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_paste(struct nk_text_edit *state, char const *ctext, int len)$/;"	f
nk_textedit_prep_selection_at_cursor	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_prep_selection_at_cursor(struct nk_text_edit *state)$/;"	f
nk_textedit_redo	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_redo(struct nk_text_edit *state)$/;"	f
nk_textedit_select_all	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_select_all(struct nk_text_edit *state)$/;"	f
nk_textedit_sortselection	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_sortselection(struct nk_text_edit *state)$/;"	f
nk_textedit_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_text(struct nk_text_edit *state, const char *text, int total_len)$/;"	f
nk_textedit_undo	thirdparty/glfw/src/deps/nuklear.h	/^nk_textedit_undo(struct nk_text_edit *state)$/;"	f
nk_to_lower	thirdparty/glfw/src/deps/nuklear.h	/^NK_INTERN int nk_to_lower(int c) {return (c >= 'A' && c <= 'Z') ? (c - ('a' + 'A')) : c;}$/;"	f
nk_to_upper	thirdparty/glfw/src/deps/nuklear.h	/^NK_INTERN int nk_to_upper(int c) {return (c >= 'a' && c <= 'z') ? (c - ('a' - 'A')) : c;}$/;"	f
nk_toggle_behavior	thirdparty/glfw/src/deps/nuklear.h	/^nk_toggle_behavior(const struct nk_input *in, struct nk_rect select,$/;"	f
nk_toggle_type	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_toggle_type {$/;"	g
nk_tooltip	thirdparty/glfw/src/deps/nuklear.h	/^nk_tooltip(struct nk_context *ctx, const char *text)$/;"	f
nk_tooltip_begin	thirdparty/glfw/src/deps/nuklear.h	/^nk_tooltip_begin(struct nk_context *ctx, float width)$/;"	f
nk_tooltip_end	thirdparty/glfw/src/deps/nuklear.h	/^nk_tooltip_end(struct nk_context *ctx)$/;"	f
nk_tree_base	thirdparty/glfw/src/deps/nuklear.h	/^nk_tree_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_image_push	thirdparty/glfw/src/deps/nuklear.h	793;"	d
nk_tree_image_push_hashed	thirdparty/glfw/src/deps/nuklear.h	/^nk_tree_image_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_image_push_id	thirdparty/glfw/src/deps/nuklear.h	794;"	d
nk_tree_pop	thirdparty/glfw/src/deps/nuklear.h	/^nk_tree_pop(struct nk_context *ctx)$/;"	f
nk_tree_push	thirdparty/glfw/src/deps/nuklear.h	790;"	d
nk_tree_push_hashed	thirdparty/glfw/src/deps/nuklear.h	/^nk_tree_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_push_id	thirdparty/glfw/src/deps/nuklear.h	791;"	d
nk_tree_state_base	thirdparty/glfw/src/deps/nuklear.h	/^nk_tree_state_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_state_image_push	thirdparty/glfw/src/deps/nuklear.h	/^nk_tree_state_image_push(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_state_pop	thirdparty/glfw/src/deps/nuklear.h	/^nk_tree_state_pop(struct nk_context *ctx)$/;"	f
nk_tree_state_push	thirdparty/glfw/src/deps/nuklear.h	/^nk_tree_state_push(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_type	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	g
nk_triangle_from_direction	thirdparty/glfw/src/deps/nuklear.h	/^nk_triangle_from_direction(struct nk_vec2 *result, struct nk_rect r,$/;"	f
nk_true	thirdparty/glfw/src/deps/nuklear.h	/^enum {nk_false, nk_true};$/;"	e	enum:__anon167
nk_ttBYTE	thirdparty/glfw/src/deps/nuklear.h	8386;"	d
nk_ttCHAR	thirdparty/glfw/src/deps/nuklear.h	8387;"	d
nk_ttLONG	thirdparty/glfw/src/deps/nuklear.h	8393;"	d
nk_ttSHORT	thirdparty/glfw/src/deps/nuklear.h	/^    static nk_short nk_ttSHORT(const nk_byte *p)   { return (nk_short)(p[0]*256 + p[1]); }$/;"	f
nk_ttSHORT	thirdparty/glfw/src/deps/nuklear.h	8391;"	d
nk_ttULONG	thirdparty/glfw/src/deps/nuklear.h	/^    static nk_uint nk_ttULONG(const nk_byte *p)  { return (nk_uint)((p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]); }$/;"	f
nk_ttULONG	thirdparty/glfw/src/deps/nuklear.h	8392;"	d
nk_ttUSHORT	thirdparty/glfw/src/deps/nuklear.h	/^    static nk_ushort nk_ttUSHORT(const nk_byte *p) { return (nk_ushort)(p[0]*256 + p[1]); }$/;"	f
nk_ttUSHORT	thirdparty/glfw/src/deps/nuklear.h	8390;"	d
nk_tt_FindGlyphIndex	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_FindGlyphIndex(const struct nk_tt_fontinfo *info, int unicode_codepoint)$/;"	f
nk_tt_FlattenCurves	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_FlattenCurves(struct nk_tt_vertex *vertices, int num_verts,$/;"	f
nk_tt_GetFontVMetrics	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_GetFontVMetrics(const struct nk_tt_fontinfo *info,$/;"	f
nk_tt_GetGlyphBitmapBox	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_GetGlyphBitmapBox(const struct nk_tt_fontinfo *font, int glyph,$/;"	f
nk_tt_GetGlyphBitmapBoxSubpixel	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_GetGlyphBitmapBoxSubpixel(const struct nk_tt_fontinfo *font,$/;"	f
nk_tt_GetGlyphBox	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_GetGlyphBox(const struct nk_tt_fontinfo *info, int glyph_index,$/;"	f
nk_tt_GetGlyphHMetrics	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_GetGlyphHMetrics(const struct nk_tt_fontinfo *info, int glyph_index,$/;"	f
nk_tt_GetGlyphShape	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_GetGlyphShape(const struct nk_tt_fontinfo *info, struct nk_allocator *alloc,$/;"	f
nk_tt_GetPackedQuad	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_GetPackedQuad(struct nk_tt_packedchar *chardata, int pw, int ph,$/;"	f
nk_tt_InitFont	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_InitFont(struct nk_tt_fontinfo *info, const unsigned char *data2, int fontstart)$/;"	f
nk_tt_MakeGlyphBitmapSubpixel	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_MakeGlyphBitmapSubpixel(const struct nk_tt_fontinfo *info, unsigned char *output,$/;"	f
nk_tt_PackBegin	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_PackBegin(struct nk_tt_pack_context *spc, unsigned char *pixels,$/;"	f
nk_tt_PackEnd	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_PackEnd(struct nk_tt_pack_context *spc, struct nk_allocator *alloc)$/;"	f
nk_tt_PackFontRangesGatherRects	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_PackFontRangesGatherRects(struct nk_tt_pack_context *spc,$/;"	f
nk_tt_PackFontRangesRenderIntoRects	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_PackFontRangesRenderIntoRects(struct nk_tt_pack_context *spc,$/;"	f
nk_tt_PackSetOversampling	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_PackSetOversampling(struct nk_tt_pack_context *spc,$/;"	f
nk_tt_Rasterize	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_Rasterize(struct nk_tt__bitmap *result, float flatness_in_pixels,$/;"	f
nk_tt_ScaleForMappingEmToPixels	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_ScaleForMappingEmToPixels(const struct nk_tt_fontinfo *info, float pixels)$/;"	f
nk_tt_ScaleForPixelHeight	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_ScaleForPixelHeight(const struct nk_tt_fontinfo *info, float height)$/;"	f
nk_tt__GetGlyfOffset	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__GetGlyfOffset(const struct nk_tt_fontinfo *info, int glyph_index)$/;"	f
nk_tt__active_edge	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt__active_edge {$/;"	s
nk_tt__add_point	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__add_point(struct nk_tt__point *points, int n, float x, float y)$/;"	f
nk_tt__bitmap	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt__bitmap{$/;"	s
nk_tt__edge	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt__edge {$/;"	s
nk_tt__fill_active_edges_new	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__fill_active_edges_new(float *scanline, float *scanline_fill, int len,$/;"	f
nk_tt__find_table	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__find_table(const nk_byte *data, nk_uint fontstart, const char *tag)$/;"	f
nk_tt__h_prefilter	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes,$/;"	f
nk_tt__handle_clipped_edge	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__handle_clipped_edge(float *scanline, int x, struct nk_tt__active_edge *e,$/;"	f
nk_tt__hheap	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt__hheap {$/;"	s
nk_tt__hheap_alloc	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__hheap_alloc(struct nk_tt__hheap *hh, nk_size size)$/;"	f
nk_tt__hheap_chunk	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt__hheap_chunk {$/;"	s
nk_tt__hheap_cleanup	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__hheap_cleanup(struct nk_tt__hheap *hh)$/;"	f
nk_tt__hheap_free	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__hheap_free(struct nk_tt__hheap *hh, void *p)$/;"	f
nk_tt__new_active	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__new_active(struct nk_tt__hheap *hh, struct nk_tt__edge *e,$/;"	f
nk_tt__oversample_shift	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__oversample_shift(int oversample)$/;"	f
nk_tt__point	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt__point {float x,y;};$/;"	s
nk_tt__rasterize	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__rasterize(struct nk_tt__bitmap *result, struct nk_tt__point *pts,$/;"	f
nk_tt__rasterize_sorted_edges	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__rasterize_sorted_edges(struct nk_tt__bitmap *result, struct nk_tt__edge *e,$/;"	f
nk_tt__sort_edges	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__sort_edges(struct nk_tt__edge *p, int n)$/;"	f
nk_tt__sort_edges_ins_sort	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__sort_edges_ins_sort(struct nk_tt__edge *p, int n)$/;"	f
nk_tt__sort_edges_quicksort	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__sort_edges_quicksort(struct nk_tt__edge *p, int n)$/;"	f
nk_tt__tesselate_curve	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__tesselate_curve(struct nk_tt__point *points, int *num_points,$/;"	f
nk_tt__v_prefilter	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes,$/;"	f
nk_tt_aligned_quad	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt_aligned_quad{$/;"	s
nk_tt_bakedchar	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt_bakedchar {$/;"	s
nk_tt_fontinfo	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt_fontinfo {$/;"	s
nk_tt_pack_context	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt_pack_context {$/;"	s
nk_tt_pack_range	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt_pack_range {$/;"	s
nk_tt_packedchar	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt_packedchar {$/;"	s
nk_tt_setvertex	thirdparty/glfw/src/deps/nuklear.h	/^nk_tt_setvertex(struct nk_tt_vertex *v, nk_byte type, nk_int x, nk_int y, nk_int cx, nk_int cy)$/;"	f
nk_tt_tag	thirdparty/glfw/src/deps/nuklear.h	8402;"	d
nk_tt_tag4	thirdparty/glfw/src/deps/nuklear.h	8400;"	d
nk_tt_vertex	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt_vertex {$/;"	s
nk_uchar	thirdparty/glfw/src/deps/nuklear.h	/^typedef NK_UINT8 nk_uchar;$/;"	t
nk_uint	thirdparty/glfw/src/deps/nuklear.h	/^typedef NK_UINT32 nk_uint;$/;"	t
nk_unify	thirdparty/glfw/src/deps/nuklear.h	/^nk_unify(struct nk_rect *clip, const struct nk_rect *a, float x0, float y0,$/;"	f
nk_user_font	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_user_font {$/;"	s
nk_user_font_glyph	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_user_font_glyph {$/;"	s
nk_ushort	thirdparty/glfw/src/deps/nuklear.h	/^typedef NK_UINT16 nk_ushort;$/;"	t
nk_utf_at	thirdparty/glfw/src/deps/nuklear.h	/^nk_utf_at(const char *buffer, int length, int index,$/;"	f
nk_utf_decode	thirdparty/glfw/src/deps/nuklear.h	/^nk_utf_decode(const char *c, nk_rune *u, int clen)$/;"	f
nk_utf_decode_byte	thirdparty/glfw/src/deps/nuklear.h	/^nk_utf_decode_byte(char c, int *i)$/;"	f
nk_utf_encode	thirdparty/glfw/src/deps/nuklear.h	/^nk_utf_encode(nk_rune u, char *c, int clen)$/;"	f
nk_utf_encode_byte	thirdparty/glfw/src/deps/nuklear.h	/^nk_utf_encode_byte(nk_rune u, int i)$/;"	f
nk_utf_len	thirdparty/glfw/src/deps/nuklear.h	/^nk_utf_len(const char *str, int len)$/;"	f
nk_utf_validate	thirdparty/glfw/src/deps/nuklear.h	/^nk_utf_validate(nk_rune *u, int i)$/;"	f
nk_utfbyte	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const nk_byte nk_utfbyte[NK_UTF_SIZE+1] = {0x80, 0, 0xC0, 0xE0, 0xF0};$/;"	v
nk_utfmask	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const nk_byte nk_utfmask[NK_UTF_SIZE+1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v
nk_utfmax	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const nk_uint nk_utfmax[NK_UTF_SIZE+1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v
nk_utfmin	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const nk_uint nk_utfmin[NK_UTF_SIZE+1] = {0, 0, 0x80, 0x800, 0x10000};$/;"	v
nk_value_bool	thirdparty/glfw/src/deps/nuklear.h	/^nk_value_bool(struct nk_context *ctx, const char *prefix, int value)$/;"	f
nk_value_color_byte	thirdparty/glfw/src/deps/nuklear.h	/^nk_value_color_byte(struct nk_context *ctx, const char *p, struct nk_color c)$/;"	f
nk_value_color_float	thirdparty/glfw/src/deps/nuklear.h	/^nk_value_color_float(struct nk_context *ctx, const char *p, struct nk_color color)$/;"	f
nk_value_color_hex	thirdparty/glfw/src/deps/nuklear.h	/^nk_value_color_hex(struct nk_context *ctx, const char *prefix, struct nk_color color)$/;"	f
nk_value_float	thirdparty/glfw/src/deps/nuklear.h	/^nk_value_float(struct nk_context *ctx, const char *prefix, float value)$/;"	f
nk_value_int	thirdparty/glfw/src/deps/nuklear.h	/^nk_value_int(struct nk_context *ctx, const char *prefix, int value)$/;"	f
nk_value_uint	thirdparty/glfw/src/deps/nuklear.h	/^nk_value_uint(struct nk_context *ctx, const char *prefix, unsigned int value)$/;"	f
nk_vec2	thirdparty/glfw/src/deps/nuklear.h	/^nk_vec2(float x, float y)$/;"	f
nk_vec2	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	s
nk_vec2_add	thirdparty/glfw/src/deps/nuklear.h	3009;"	d
nk_vec2_len_sqr	thirdparty/glfw/src/deps/nuklear.h	3010;"	d
nk_vec2_muls	thirdparty/glfw/src/deps/nuklear.h	3011;"	d
nk_vec2_sub	thirdparty/glfw/src/deps/nuklear.h	3008;"	d
nk_vec2i	thirdparty/glfw/src/deps/nuklear.h	/^nk_vec2i(int x, int y)$/;"	f
nk_vec2i	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	s
nk_vec2iv	thirdparty/glfw/src/deps/nuklear.h	/^nk_vec2iv(const int *v)$/;"	f
nk_vec2v	thirdparty/glfw/src/deps/nuklear.h	/^nk_vec2v(const float *v)$/;"	f
nk_vsnprintf	thirdparty/glfw/src/deps/nuklear.h	/^nk_vsnprintf(char *buf, int buf_size, const char *fmt, va_list args)$/;"	f
nk_white	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const struct nk_color nk_white = {255,255,255,255};$/;"	v	typeref:struct:nk_color
nk_widget	thirdparty/glfw/src/deps/nuklear.h	/^nk_widget(struct nk_rect *bounds, const struct nk_context *ctx)$/;"	f
nk_widget_bounds	thirdparty/glfw/src/deps/nuklear.h	/^nk_widget_bounds(struct nk_context *ctx)$/;"	f
nk_widget_fitting	thirdparty/glfw/src/deps/nuklear.h	/^nk_widget_fitting(struct nk_rect *bounds, struct nk_context *ctx,$/;"	f
nk_widget_has_mouse_click_down	thirdparty/glfw/src/deps/nuklear.h	/^nk_widget_has_mouse_click_down(struct nk_context *ctx, enum nk_buttons btn, int down)$/;"	f
nk_widget_height	thirdparty/glfw/src/deps/nuklear.h	/^nk_widget_height(struct nk_context *ctx)$/;"	f
nk_widget_is_hovered	thirdparty/glfw/src/deps/nuklear.h	/^nk_widget_is_hovered(struct nk_context *ctx)$/;"	f
nk_widget_is_mouse_clicked	thirdparty/glfw/src/deps/nuklear.h	/^nk_widget_is_mouse_clicked(struct nk_context *ctx, enum nk_buttons btn)$/;"	f
nk_widget_layout_states	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_widget_layout_states {$/;"	g
nk_widget_position	thirdparty/glfw/src/deps/nuklear.h	/^nk_widget_position(struct nk_context *ctx)$/;"	f
nk_widget_size	thirdparty/glfw/src/deps/nuklear.h	/^nk_widget_size(struct nk_context *ctx)$/;"	f
nk_widget_state_reset	thirdparty/glfw/src/deps/nuklear.h	12609;"	d
nk_widget_states	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_widget_states {$/;"	g
nk_widget_text	thirdparty/glfw/src/deps/nuklear.h	/^nk_widget_text(struct nk_command_buffer *o, struct nk_rect b,$/;"	f
nk_widget_text_wrap	thirdparty/glfw/src/deps/nuklear.h	/^nk_widget_text_wrap(struct nk_command_buffer *o, struct nk_rect b,$/;"	f
nk_widget_width	thirdparty/glfw/src/deps/nuklear.h	/^nk_widget_width(struct nk_context *ctx)$/;"	f
nk_window	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_window {$/;"	s
nk_window_close	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_close(struct nk_context *ctx, const char *name)$/;"	f
nk_window_collapse	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_collapse(struct nk_context *ctx, const char *name,$/;"	f
nk_window_collapse_if	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_collapse_if(struct nk_context *ctx, const char *name,$/;"	f
nk_window_find	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_find(struct nk_context *ctx, const char *name)$/;"	f
nk_window_flags	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_window_flags {$/;"	g
nk_window_get_bounds	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_get_bounds(const struct nk_context *ctx)$/;"	f
nk_window_get_canvas	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_get_canvas(struct nk_context *ctx)$/;"	f
nk_window_get_content_region	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_get_content_region(struct nk_context *ctx)$/;"	f
nk_window_get_content_region_max	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_get_content_region_max(struct nk_context *ctx)$/;"	f
nk_window_get_content_region_min	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_get_content_region_min(struct nk_context *ctx)$/;"	f
nk_window_get_content_region_size	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_get_content_region_size(struct nk_context *ctx)$/;"	f
nk_window_get_height	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_get_height(const struct nk_context *ctx)$/;"	f
nk_window_get_panel	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_get_panel(struct nk_context *ctx)$/;"	f
nk_window_get_position	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_get_position(const struct nk_context *ctx)$/;"	f
nk_window_get_size	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_get_size(const struct nk_context *ctx)$/;"	f
nk_window_get_width	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_get_width(const struct nk_context *ctx)$/;"	f
nk_window_has_focus	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_has_focus(const struct nk_context *ctx)$/;"	f
nk_window_insert_location	thirdparty/glfw/src/deps/nuklear.h	/^enum nk_window_insert_location {$/;"	g
nk_window_is_active	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_is_active(struct nk_context *ctx, const char *name)$/;"	f
nk_window_is_any_hovered	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_is_any_hovered(struct nk_context *ctx)$/;"	f
nk_window_is_closed	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_is_closed(struct nk_context *ctx, const char *name)$/;"	f
nk_window_is_collapsed	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_is_collapsed(struct nk_context *ctx, const char *name)$/;"	f
nk_window_is_hidden	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_is_hidden(struct nk_context *ctx, const char *name)$/;"	f
nk_window_is_hovered	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_is_hovered(struct nk_context *ctx)$/;"	f
nk_window_set_bounds	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_set_bounds(struct nk_context *ctx, struct nk_rect bounds)$/;"	f
nk_window_set_focus	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_set_focus(struct nk_context *ctx, const char *name)$/;"	f
nk_window_set_position	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_set_position(struct nk_context *ctx, struct nk_vec2 pos)$/;"	f
nk_window_set_size	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_set_size(struct nk_context *ctx, struct nk_vec2 size)$/;"	f
nk_window_show	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_show(struct nk_context *ctx, const char *name, enum nk_show_states s)$/;"	f
nk_window_show_if	thirdparty/glfw/src/deps/nuklear.h	/^nk_window_show_if(struct nk_context *ctx, const char *name,$/;"	f
nk_wmask	thirdparty/glfw/src/deps/nuklear.h	3406;"	d
nk_wmask	thirdparty/glfw/src/deps/nuklear.h	3445;"	d
nk_wmask	thirdparty/glfw/src/deps/nuklear.h	3457;"	d
nk_wmask	thirdparty/glfw/src/deps/nuklear.h	3501;"	d
nk_word	thirdparty/glfw/src/deps/nuklear.h	3404;"	d
nk_word	thirdparty/glfw/src/deps/nuklear.h	3443;"	d
nk_word	thirdparty/glfw/src/deps/nuklear.h	3455;"	d
nk_word	thirdparty/glfw/src/deps/nuklear.h	3499;"	d
nk_wsize	thirdparty/glfw/src/deps/nuklear.h	3405;"	d
nk_wsize	thirdparty/glfw/src/deps/nuklear.h	3444;"	d
nk_wsize	thirdparty/glfw/src/deps/nuklear.h	3456;"	d
nk_wsize	thirdparty/glfw/src/deps/nuklear.h	3500;"	d
nk_yellow	thirdparty/glfw/src/deps/nuklear.h	/^NK_GLOBAL const struct nk_color nk_yellow = {255,255,0,255};$/;"	v	typeref:struct:nk_color
nk_zero	thirdparty/glfw/src/deps/nuklear.h	/^nk_zero(void *ptr, nk_size size)$/;"	f
nk_zero_struct	thirdparty/glfw/src/deps/nuklear.h	3015;"	d
no_argument	thirdparty/glfw/src/deps/getopt.c	/^const int no_argument = 0;$/;"	v
node	lib/lib/include/lib/nyaml.hpp	/^class node$/;"	c	namespace:LIB_NS_NAME::nyaml
node_child_count	lib/nil/src/graph/graph.cpp	/^node_child_count($/;"	f	namespace:Nil::Graph
node_create	lib/nil/src/graph/graph.cpp	/^node_create(Data *graph)$/;"	f	namespace:Nil::Graph
node_data	lib/nil/src/graph/graph_data.hpp	/^struct node_data$/;"	s	namespace:Nil::Graph
node_delete_callbacks	lib/nil/src/graph/graph_data.hpp	/^  lib::array<node_delete_cb>              node_delete_callbacks;$/;"	m	struct:Nil::Graph::Data
node_delete_cb	lib/nil/src/graph/graph_data.hpp	/^  struct node_delete_cb {$/;"	s	struct:Nil::Graph::Data
node_descendants_count	lib/nil/src/graph/graph.cpp	/^node_descendants_count($/;"	f	namespace:Nil::Graph
node_exists	lib/nil/src/graph/graph.cpp	/^node_exists($/;"	f	namespace:Nil::Graph
node_get_child	lib/nil/src/graph/graph.cpp	/^node_get_child($/;"	f	namespace:Nil::Graph
node_get_data_type_id	lib/nil/src/graph/graph.cpp	/^node_get_data_type_id($/;"	f	namespace:Nil::Graph
node_get_name	lib/nil/src/graph/graph.cpp	/^node_get_name($/;"	f	namespace:Nil::Graph
node_get_parent	lib/nil/src/graph/graph.cpp	/^node_get_parent(const Data *graph, const uint32_t node_id)$/;"	f	namespace:Nil::Graph
node_get_tags	lib/nil/src/graph/graph.cpp	/^node_get_tags($/;"	f	namespace:Nil::Graph
node_get_transform	lib/nil/src/graph/graph.cpp	/^node_get_transform($/;"	f	namespace:Nil::Graph
node_get_user_data	lib/nil/src/graph/graph.cpp	/^node_get_user_data($/;"	f	namespace:Nil::Graph
node_id	lib/nil/src/graph/graph_data.hpp	/^  lib::array<uint32_t>        node_id;                  \/\/ Unique instance IDs.$/;"	m	struct:Nil::Graph::Data
node_maximize_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button node_maximize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_button
node_minimize_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button node_minimize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_button
node_no_name	lib/nil/src/interface/node.cpp	/^constexpr char node_no_name[]    = "Unknown";$/;"	m	namespace:__anon40	file:
node_no_tag	lib/nil/src/interface/node.cpp	/^constexpr char node_no_tag[]     = "";$/;"	m	namespace:__anon40	file:
node_owned_id	lib/nil/src/interface/node.cpp	/^constexpr uint32_t node_owned_id = 1;$/;"	m	namespace:__anon40	file:
node_recalc_transform_branch	lib/nil/src/graph/graph.cpp	/^node_recalc_transform_branch($/;"	f	namespace:Nil::Graph::__anon22
node_ref_id	lib/nil/src/interface/node.cpp	/^constexpr uint32_t node_ref_id   = 0;$/;"	m	namespace:__anon40	file:
node_register_type	lib/nil/src/graph/graph.cpp	/^node_register_type($/;"	f	namespace:Nil::Graph
node_remove	lib/nil/src/graph/graph.cpp	/^node_remove(Data *graph, const uint32_t node_id)$/;"	f	namespace:Nil::Graph
node_set_name	lib/nil/src/graph/graph.cpp	/^node_set_name($/;"	f	namespace:Nil::Graph
node_set_parent	lib/nil/src/graph/graph.cpp	/^node_set_parent($/;"	f	namespace:Nil::Graph
node_set_tags	lib/nil/src/graph/graph.cpp	/^node_set_tags($/;"	f	namespace:Nil::Graph
node_set_transform	lib/nil/src/graph/graph.cpp	/^node_set_transform($/;"	f	namespace:Nil::Graph
node_set_user_data	lib/nil/src/graph/graph.cpp	/^node_set_user_data($/;"	f	namespace:Nil::Graph
node_tag_curr_count	lib/nil/src/interface/node.cpp	/^size_t           node_tag_curr_count = 0;$/;"	m	namespace:__anon40	file:
node_tag_max_count	lib/nil/src/interface/node.cpp	/^constexpr size_t node_tag_max_count  = 64;$/;"	m	namespace:__anon40	file:
node_tag_max_length	lib/nil/src/interface/node.cpp	/^constexpr size_t node_tag_max_length = NIL_MAX_TAG_NAME_LENGTH + 1;$/;"	m	namespace:__anon40	file:
node_type_id	lib/nil/src/graph/graph_data.hpp	/^  uint64_t node_type_id;$/;"	m	struct:Nil::Graph::node_data
node_unregister_type	lib/nil/src/graph/graph.cpp	/^node_unregister_type($/;"	f	namespace:Nil::Graph
nodes	thirdparty/glfw/src/deps/nuklear.h	/^    void  *nodes;$/;"	m	struct:nk_tt_pack_context
nodes	thirdparty/stb/include/stb/stb_truetype.h	/^   void  *nodes;$/;"	m	struct:stbtt_pack_context
noerror	thirdparty/glfw/src/internal.h	/^    GLFWbool            forward, debug, noerror;$/;"	m	struct:_GLFWcontext
noerror	thirdparty/glfw/src/internal.h	/^    GLFWbool      noerror;$/;"	m	struct:_GLFWctxconfig
noexcept	lib/nil/include/nil/node.hpp	/^                    Node(Node &&other) noexcept;$/;"	m	class:Nil::final
noexcept	lib/nil/include/nil/node.hpp	/^  Node&             operator=(Node &&other) noexcept;$/;"	m	class:Nil::final
noexcept	lib/roa/include/roa/object.hpp	/^                        Object(Object &&other) noexcept;$/;"	m	class:ROA::Object
noexcept	lib/roa/include/roa/object.hpp	/^                        Object(const Object &other) noexcept;$/;"	m	class:ROA::Object
noexcept	lib/roa/include/roa/object.hpp	/^                        operator bool() const noexcept;$/;"	m	class:ROA::Object
noexcept	lib/roa/include/roa/object.hpp	/^  Object&               operator=(Object &&other) noexcept;$/;"	m	class:ROA::Object
noexcept	lib/roa/include/roa/object.hpp	/^  Object&               operator=(const Object &other) noexcept;$/;"	m	class:ROA::Object
noexcept	lib/roa/include/roa/object.hpp	/^  bool                  operator!=(const Object &other) const noexcept;$/;"	m	class:ROA::Object
noexcept	lib/roa/include/roa/object.hpp	/^  bool                  operator==(const Object &other) const noexcept;$/;"	m	class:ROA::Object
noise	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    unsigned char   noise[256]; \/\/ 0-8$/;"	m	class:TED
noise	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static unsigned char   noise[256]; \/\/ 0-8$/;"	v	file:
noise_buffer	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float noise_buffer[32];$/;"	m	class:SoLoud::SfxrInstance
nomore	thirdparty/stb/include/stb/stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon81
nonCoherentAtomSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize          nonCoherentAtomSize;$/;"	m	struct:VkPhysicalDeviceLimits
nop_createIndex	lib/rov/src/nop/rov_nop.hpp	/^nop_createIndex() { return true; }$/;"	f	namespace:ROV_Internal
nop_createLights	lib/rov/src/nop/rov_nop.hpp	/^nop_createLights() { return true; }$/;"	f	namespace:ROV_Internal
nop_createMesh	lib/rov/src/nop/rov_nop.hpp	/^nop_createMesh() { return true; }$/;"	f	namespace:ROV_Internal
nop_createRenderTarget	lib/rov/src/nop/rov_nop.hpp	/^nop_createRenderTarget() { return true; }$/;"	f	namespace:ROV_Internal
nop_createTexture	lib/rov/src/nop/rov_nop.hpp	/^nop_createTexture() { return true; }$/;"	f	namespace:ROV_Internal
nop_data	lib/rov/src/rov.cpp	/^  ROV_Internal::rovNopData nop_data;$/;"	m	struct:__anon48::ROV_data	file:
nop_destroy	lib/rov/src/nop/rov_nop.hpp	/^nop_destroy() {}$/;"	f	namespace:ROV_Internal
nop_exec	lib/rov/src/nop/rov_nop.hpp	/^nop_exec() {}$/;"	f	namespace:ROV_Internal
nop_init	lib/rov/src/nop/rov_nop.hpp	/^nop_init() {}$/;"	f	namespace:ROV_Internal
nop_updateLights	lib/rov/src/nop/rov_nop.hpp	/^nop_updateLights() { return true; }$/;"	f	namespace:ROV_Internal
normal	lib/math/include/math/geometry/geometry_types.hpp	/^  MATH_NS_NAME::vec3 normal;$/;"	m	struct:plane
normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_style_item
normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_style_item
normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_style_item
normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_item
normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_item
normal_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item normal_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
normal_vec3	lib/nil/include/nil/resource/mesh.hpp	/^  float       *normal_vec3;         \/\/ Internally copied$/;"	m	struct:Nil_mesh
normalize	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		void normalize()$/;"	f	struct:SoLoud::vec3
normals	lib/lib/include/lib/model.hpp	/^  float     **normals;$/;"	m	struct:LIB_NS_NAME::model
nr_activebps	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int nr_activebps;$/;"	m	class:CPU
nr_of_bps	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^const unsigned int CPU::nr_of_bps = 11;$/;"	m	class:CPU	file:
nr_of_bps	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		static const unsigned int nr_of_bps;	$/;"	m	class:CPU
nrwscr	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int nrwscr, fltscr;$/;"	m	class:TED
ns	thirdparty/glfw/src/internal.h	/^    } ns;$/;"	m	struct:_GLFWinitconfig	typeref:struct:_GLFWinitconfig::__anon159
ns	thirdparty/glfw/src/internal.h	/^    } ns;$/;"	m	struct:_GLFWwndconfig	typeref:struct:_GLFWwndconfig::__anon160
nsgl	thirdparty/glfw/src/internal.h	/^    } nsgl;$/;"	m	struct:_GLFWctxconfig	typeref:struct:_GLFWctxconfig::__anon161
null	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_draw_null_texture null; \/* handle to texture with a white pixel for shape drawing *\/$/;"	m	struct:nk_convert_config	typeref:struct:nk_convert_config::nk_draw_null_texture
null	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_glfw_device::nk_draw_null_texture
null	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		bool null()$/;"	f	struct:SoLoud::vec3
nullCleanup	thirdparty/soloud/src/backend/null/soloud_null.cpp	/^    static void nullCleanup(Soloud *aSoloud)$/;"	f	namespace:SoLoud
null_init	thirdparty/soloud/src/backend/null/soloud_null.cpp	/^    result null_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
null_init	thirdparty/soloud/src/backend/null/soloud_null.cpp	/^    result null_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer, unsigned int aChannels)$/;"	f	namespace:SoLoud
nulltype_t	lib/math/include/math/vec/vec_types.hpp	/^typedef decltype(nullptr) nulltype_t;$/;"	t
numGlyphs	thirdparty/glfw/src/deps/nuklear.h	/^    int numGlyphs;\/* number of glyphs, needed for range checking *\/$/;"	m	struct:nk_tt_fontinfo
numGlyphs	thirdparty/stb/include/stb/stb_truetype.h	/^   int numGlyphs;                     \/\/ number of glyphs, needed for range checking$/;"	m	struct:stbtt_fontinfo
num_bits	thirdparty/stb/include/stb/stb_image.h	/^   int num_bits;$/;"	m	struct:__anon85
num_channels	thirdparty/stb/include/stb/stb_image.h	/^   int num_channels;$/;"	m	struct:__anon78
num_chars	thirdparty/glfw/src/deps/nuklear.h	/^    int num_chars;$/;"	m	struct:nk_tt_pack_range
num_chars	thirdparty/glfw/src/deps/nuklear.h	/^   int num_chars;$/;"	m	struct:nk_text_edit_row
num_chars	thirdparty/stb/include/stb/stb_textedit.h	/^   int num_chars;$/;"	m	struct:__anon133
num_chars	thirdparty/stb/include/stb/stb_truetype.h	/^   int num_chars;$/;"	m	struct:__anon100
num_exts_i	thirdparty/glfw/src/deps/glad.c	/^static int num_exts_i = 0;$/;"	v	file:
num_nodes	thirdparty/glfw/src/deps/nuklear.h	/^    int num_nodes;$/;"	m	struct:nk_rp_context
num_nodes	thirdparty/stb/include/stb/stb_rect_pack.h	/^   int num_nodes;$/;"	m	struct:stbrp_context
num_remaining_in_head_chunk	thirdparty/glfw/src/deps/nuklear.h	/^    int    num_remaining_in_head_chunk;$/;"	m	struct:nk_tt__hheap
num_remaining_in_head_chunk	thirdparty/stb/include/stb/stb_truetype.h	/^   int    num_remaining_in_head_chunk;$/;"	m	struct:stbtt__hheap
num_vertices	thirdparty/stb/include/stb/stb_truetype.h	/^   int num_vertices;$/;"	m	struct:__anon110
number	lib/lib/include/lib/number.hpp	/^namespace number {$/;"	n	namespace:LIB_NS_NAME
number	thirdparty/json/include/json/json.h	/^  const char *number;$/;"	m	struct:json_number_s
number_of_books	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 number_of_books;$/;"	m	struct:__anon204	file:
number_of_books	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 number_of_books;$/;"	m	struct:__anon117	file:
number_of_buckets	lib/lib/include/lib/memory.hpp	/^  uint32_t number_of_buckets;$/;"	m	struct:LIB_NS_NAME::mem::header
number_size	thirdparty/json/include/json/json.h	/^  size_t number_size;$/;"	m	struct:json_number_s
numer	thirdparty/glfw/src/internal.h	/^    int                 numer, denom;$/;"	m	struct:_GLFWwindow
nyaml	lib/lib/include/lib/nyaml.hpp	/^namespace nyaml {$/;"	n	namespace:LIB_NS_NAME
obj_to_array	scripts/asset_scripts/obj_to_cpp_array.rb	/^  def self.obj_to_array(obj_filename)$/;"	F	class:Export
object	thirdparty/glfw/src/cocoa_platform.h	/^    id              object;$/;"	m	struct:_GLFWcursorNS
object	thirdparty/glfw/src/cocoa_platform.h	/^    id              object;$/;"	m	struct:_GLFWwindowNS
object	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint64_t                      object;$/;"	m	struct:VkDebugMarkerObjectNameInfoEXT
object	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint64_t                      object;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
object	thirdparty/glfw/src/nsgl_context.h	/^    id	         object;$/;"	m	struct:_GLFWcontextNSGL
objectCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                             objectCount;$/;"	m	struct:VkObjectTableCreateInfoNVX
objectCount	thirdparty/glfw/src/win32_joystick.c	/^    int                     objectCount;$/;"	m	struct:_GLFWobjenumWin32	file:
objectCount	thirdparty/glfw/src/win32_joystick.h	/^    int                     objectCount;$/;"	m	struct:_GLFWjoystickWin32
objectTable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectTableNVX                     objectTable;$/;"	m	struct:VkCmdProcessCommandsInfoNVX
objectTable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectTableNVX               objectTable;$/;"	m	struct:VkCmdReserveSpaceForCommandsInfoNVX
objectType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDebugReportObjectTypeEXT    objectType;$/;"	m	struct:VkDebugMarkerObjectNameInfoEXT
objectType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDebugReportObjectTypeEXT    objectType;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
object_size	thirdparty/remotery/src/Remotery.c	/^    rmtU32 object_size;$/;"	m	struct:__anon55	file:
objects	thirdparty/glfw/src/win32_joystick.c	/^    _GLFWjoyobjectWin32*    objects;$/;"	m	struct:_GLFWobjenumWin32	file:
objects	thirdparty/glfw/src/win32_joystick.h	/^    _GLFWjoyobjectWin32*    objects;$/;"	m	struct:_GLFWjoystickWin32
objs	app/perils/src/game/dynamic_object.cpp	/^Data objs[16];$/;"	m	namespace:Dynamic_object::__anon218	file:
objs	lib/roa/src/interface/collection.cpp	/^  std::vector<ROA::Object> objs;$/;"	m	struct:ROA::Collection::Impl	file:
occlusionQueryEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                         occlusionQueryEnable;$/;"	m	struct:VkCommandBufferInheritanceInfo
occlusionQueryPrecise	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    occlusionQueryPrecise;$/;"	m	struct:VkPhysicalDeviceFeatures
offline	thirdparty/glfw/src/internal.h	/^        GLFWbool  offline;$/;"	m	struct:_GLFWctxconfig::__anon161
offset	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size offset;$/;"	m	struct:nk_buffer_marker
offset	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size offset;$/;"	m	struct:nk_draw_vertex_layout_element
offset	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_scroll offset;$/;"	m	struct:nk_menu_state	typeref:struct:nk_menu_state::nk_scroll
offset	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 offset;$/;"	m	struct:nk_user_font_glyph	typeref:struct:nk_user_font_glyph::nk_vec2
offset	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_cursor::
offset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize                      offset;$/;"	m	struct:VkIndirectCommandsTokenNVX
offset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize               offset;$/;"	m	struct:VkBufferViewCreateInfo
offset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize       offset;$/;"	m	struct:VkBufferMemoryBarrier
offset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize       offset;$/;"	m	struct:VkMappedMemoryRange
offset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize    offset;$/;"	m	struct:VkDescriptorBufferInfo
offset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize    offset;$/;"	m	struct:VkSubresourceLayout
offset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkOffset2D    offset;$/;"	m	struct:VkRect2D
offset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkOffset3D                 offset;$/;"	m	struct:VkSparseImageMemoryBind
offset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              offset;$/;"	m	struct:VkPushConstantRange
offset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    offset;$/;"	m	struct:VkSpecializationMapEntry
offset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    offset;$/;"	m	struct:VkVertexInputAttributeDescription
offset	thirdparty/glfw/src/internal.h	/^        uint64_t        offset;$/;"	m	struct:_GLFWlibrary::__anon164
offset	thirdparty/glfw/src/win32_joystick.h	/^    int                     offset;$/;"	m	struct:_GLFWjoyobjectWin32
offset	thirdparty/json/include/json/json.h	/^  size_t offset;$/;"	m	struct:json_string_ex_s
offset	thirdparty/json/include/json/json.h	/^  size_t offset;$/;"	m	struct:json_value_ex_s
offset	thirdparty/json/src/json.c	/^  size_t offset;$/;"	m	struct:json_parse_state_s	file:
offset	thirdparty/stb/include/stb/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon89
offset_x	thirdparty/glfw/src/deps/nuklear.h	/^    nk_uint *offset_x;$/;"	m	struct:nk_panel
offset_y	thirdparty/glfw/src/deps/nuklear.h	/^    nk_uint *offset_y;$/;"	m	struct:nk_panel
ogg_page_header	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static uint8 ogg_page_header[4] = { 0x4f, 0x67, 0x67, 0x53 };$/;"	v	file:
ogg_page_header	thirdparty/stb/include/stb/stb_vorbis.c	/^static uint8 ogg_page_header[4] = { 0x4f, 0x67, 0x67, 0x53 };$/;"	v	file:
ogl	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    struct nk_glfw_device ogl;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_glfw_device
ogl_createFramebuffer	lib/rov/src/ogl/rov_gl_resources.cpp	/^ogl_createFramebuffer($/;"	f	namespace:ROV_Internal
ogl_createIndex	lib/rov/src/ogl/rov_gl_resources.cpp	/^ogl_createIndex($/;"	f	namespace:ROV_Internal
ogl_createLights	lib/rov/src/ogl/rov_gl_resources.cpp	/^ogl_createLights($/;"	f	namespace:ROV_Internal
ogl_createMesh	lib/rov/src/ogl/rov_gl_resources.cpp	/^ogl_createMesh($/;"	f	namespace:ROV_Internal
ogl_createProgram	lib/rov/src/ogl/rov_gl_resources.cpp	/^ogl_createProgram($/;"	f	namespace:ROV_Internal
ogl_createTexture	lib/rov/src/ogl/rov_gl_resources.cpp	/^ogl_createTexture($/;"	f	namespace:ROV_Internal
ogl_destroy	lib/rov/src/ogl/rov_gl.cpp	/^ogl_destroy(rovGLData *gl_data)$/;"	f	namespace:ROV_Internal
ogl_destroyIndexes	lib/rov/src/ogl/rov_gl_resources.cpp	/^ogl_destroyIndexes(rovGLData *gl_data)$/;"	f	namespace:ROV_Internal
ogl_destroyLights	lib/rov/src/ogl/rov_gl_resources.cpp	/^ogl_destroyLights(rovGLData *gl_data)$/;"	f	namespace:ROV_Internal
ogl_destroyMeshes	lib/rov/src/ogl/rov_gl_resources.cpp	/^ogl_destroyMeshes(rovGLData *gl_data)$/;"	f	namespace:ROV_Internal
ogl_destroyPrograms	lib/rov/src/ogl/rov_gl_resources.cpp	/^ogl_destroyPrograms(rovGLData *gl_data)$/;"	f	namespace:ROV_Internal
ogl_destroyTextures	lib/rov/src/ogl/rov_gl_resources.cpp	/^ogl_destroyTextures(rovGLData *gl_data)$/;"	f	namespace:ROV_Internal
ogl_exec	lib/rov/src/ogl/rov_gl_exec.cpp	/^ogl_exec($/;"	f	namespace:ROV_Internal
ogl_init	lib/rov/src/ogl/rov_gl.cpp	/^ogl_init(rovGLData *gl_data, const char *asset_prefix)$/;"	f	namespace:ROV_Internal
ogl_updateLights	lib/rov/src/ogl/rov_gl_resources.cpp	/^ogl_updateLights($/;"	f	namespace:ROV_Internal
old	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int old;$/;"	m	struct:nk_edit_state
old	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int old;$/;"	m	struct:nk_property_state
oldLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageLayout              oldLayout;$/;"	m	struct:VkImageMemoryBarrier
oldMode	thirdparty/glfw/src/x11_platform.h	/^    RRMode          oldMode;$/;"	m	struct:_GLFWmonitorX11
oldSwapchain	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSwapchainKHR                   oldSwapchain;$/;"	m	struct:VkSwapchainCreateInfoKHR
old_out	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *out, *old_out;             \/\/ output buffer (always 4 components)$/;"	m	struct:__anon92
oldregs	thirdparty/soloud/src/tools/tedsid2dump/main.cpp	/^int oldregs[1024] = {$/;"	v
on_destroy	lib/roa/src/interface/component.cpp	/^Component::on_destroy()$/;"	f	class:ROA::Component
on_early_think	lib/roa/src/interface/component.cpp	/^Component::on_early_think()$/;"	f	class:ROA::Component
on_late_think	lib/roa/src/interface/component.cpp	/^Component::on_late_think()$/;"	f	class:ROA::Component
on_stack	lib/lib/include/lib/helpers.hpp	/^on_stack(const void *ptr)$/;"	f	namespace:LIB_NS_NAME::helper
on_start	app/perils/src/game/actor_kinematic.cpp	/^Actor_kinematic::on_start()$/;"	f	class:Game::Actor_kinematic
on_start	app/perils/src/game/game_manager.cpp	/^Game_manager::on_start()$/;"	f	class:Game::Game_manager
on_start	lib/roa/src/interface/component.cpp	/^Component::on_start()$/;"	f	class:ROA::Component
on_think	app/perils/src/game/actor_kinematic.cpp	/^Actor_kinematic::on_think()$/;"	f	class:Game::Actor_kinematic
on_think	app/perils/src/game/game_manager.cpp	/^Game_manager::on_think()$/;"	f	class:Game::Game_manager
on_think	lib/roa/src/interface/component.cpp	/^Component::on_think()$/;"	f	class:ROA::Component
op	thirdparty/catch/include/catch/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
opCast	thirdparty/catch/include/catch/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	thirdparty/catch/include/catch/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
open	thirdparty/soloud/src/core/soloud_file.cpp	/^	result DiskFile::open(const char *aFilename)$/;"	f	class:SoLoud::DiskFile
openDll	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^static HMODULE openDll()$/;"	f	file:
openDll	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^static void * openDll()$/;"	f	file:
openDll	thirdparty/soloud/src/backend/openal/soloud_openal_dll.c	/^static HMODULE openDll()$/;"	f	file:
openDll	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^static HMODULE openDll()$/;"	f	file:
openDll	thirdparty/soloud/src/backend/portaudio/soloud_portaudio_dll.c	/^static void* openDll()$/;"	f	file:
openDll	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^static HMODULE openDll()$/;"	f	file:
openDll	thirdparty/soloud/src/backend/sdl/soloud_sdl_dll.c	/^static void * openDll()$/;"	f	file:
openFileToMem	thirdparty/soloud/src/core/soloud_file.cpp	/^	result MemoryFile::openFileToMem(File *aFile)$/;"	f	class:SoLoud::MemoryFile
openJoystickDevice	thirdparty/glfw/src/linux_joystick.c	/^static GLFWbool openJoystickDevice(const char* path)$/;"	f	file:
openMem	thirdparty/soloud/src/core/soloud_file.cpp	/^	result MemoryFile::openMem(unsigned char *aData, unsigned int aDataLength, bool aCopy, bool aTakeOwnership)$/;"	f	class:SoLoud::MemoryFile
openToMem	thirdparty/soloud/src/core/soloud_file.cpp	/^	result MemoryFile::openToMem(const char *aFile)$/;"	f	class:SoLoud::MemoryFile
open_libgl	thirdparty/opengl/src/gl3w.cpp	/^static void open_libgl(void)$/;"	f	file:
openal_init	thirdparty/soloud/src/backend/openal/soloud_openal.cpp	/^	result openal_init(SoLoud::Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
opengl	thirdparty/remotery/src/Remotery.c	/^    OpenGL* opengl;$/;"	m	struct:Remotery	file:
openmpt_module_create_from_memory	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^void *openmpt_module_create_from_memory(const void * filedata, size_t filesize, void *logfunc, void * user, void * ctls)$/;"	f
openmpt_module_destroy	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^void openmpt_module_destroy(void * mod)$/;"	f
openmpt_module_read_float_stereo	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt_dll.c	/^int openmpt_module_read_float_stereo(void * mod, int samplerate, size_t count, float * left, float * right)$/;"	f
opensles_init	thirdparty/soloud/src/backend/opensles/soloud_opensles.cpp	/^	result opensles_init(SoLoud::Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
operator !	thirdparty/catch/include/catch/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	thirdparty/catch/include/catch/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !=	lib/nil/src/interface/node.cpp	/^Node::operator!=(const Node &other) const$/;"	f	class:Nil::Node
operator !=	lib/roa/src/interface/color.cpp	/^Color::operator!=(const Color &other) const$/;"	f	class:ROA::Color
operator !=	lib/roa/src/interface/resource.cpp	/^Resource::operator!=(const Resource &other) const$/;"	f	class:ROA::Resource
operator &&	thirdparty/catch/include/catch/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	thirdparty/catch/include/catch/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator *	thirdparty/catch/include/catch/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2 operator*(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(lhs.x*rhs.x, lhs.y*rhs.y); }$/;"	f
operator *	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2 operator*(const ImVec2& lhs, const float rhs)              { return ImVec2(lhs.x*rhs, lhs.y*rhs); }$/;"	f
operator *	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      matrix_t operator * (const matrix_t& mat) const$/;"	f	struct:ImGuizmo::matrix_t
operator *	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   vec_t vec_t::operator * (const vec_t& v) const { return makeVect(x * v.x, y * v.y, z * v.z, w * v.w); }$/;"	f	class:ImGuizmo::vec_t
operator *	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   vec_t vec_t::operator * (float f) const { return makeVect(x * f, y * f, z * f, w *f); }$/;"	f	class:ImGuizmo::vec_t
operator *=	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2& operator*=(ImVec2& lhs, const float rhs)                  { lhs.x *= rhs; lhs.y *= rhs; return lhs; }$/;"	f
operator *=	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      matrix_t& operator *= (const matrix_t& mat)$/;"	f	struct:ImGuizmo::matrix_t
operator *=	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t& operator *= (const vec_t& v) { x *= v.x; y *= v.y; z *= v.z; w *= v.w; return *this; }$/;"	f	struct:ImGuizmo::vec_t
operator *=	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t& operator *= (float v) { x *= v;	y *= v;	z *= v;	w *= v;	return *this; }$/;"	f	struct:ImGuizmo::vec_t
operator +	thirdparty/catch/include/catch/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	thirdparty/catch/include/catch/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2 operator+(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(lhs.x+rhs.x, lhs.y+rhs.y); }$/;"	f
operator +	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      const vec_t& operator + () const { return (*this); }$/;"	f	struct:ImGuizmo::vec_t
operator +	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   ImVec2 operator+ (const ImVec2& a, const ImVec2& b) { return ImVec2(a.x + b.x, a.y + b.y); }$/;"	f	namespace:ImGuizmo
operator +	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   vec_t vec_t::operator + (const vec_t& v) const { return makeVect(x + v.x, y + v.y, z + v.z, w + v.w); }$/;"	f	class:ImGuizmo::vec_t
operator +=	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2& operator+=(ImVec2& lhs, const ImVec2& rhs)                { lhs.x += rhs.x; lhs.y += rhs.y; return lhs; }$/;"	f
operator +=	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t& operator += (const vec_t& v) { x += v.x; y += v.y; z += v.z; w += v.w; return *this; }$/;"	f	struct:ImGuizmo::vec_t
operator -	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2 operator-(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(lhs.x-rhs.x, lhs.y-rhs.y); }$/;"	f
operator -	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec4 operator-(const ImVec4& lhs, const ImVec4& rhs)            { return ImVec4(lhs.x-rhs.x, lhs.y-rhs.y, lhs.z-rhs.z, lhs.w-rhs.w); }$/;"	f
operator -	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   vec_t vec_t::operator - () const { return makeVect(-x, -y, -z, -w); }$/;"	f	class:ImGuizmo::vec_t
operator -	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   vec_t vec_t::operator - (const vec_t& v) const { return makeVect(x - v.x, y - v.y, z - v.z, w - v.w); }$/;"	f	class:ImGuizmo::vec_t
operator -=	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2& operator-=(ImVec2& lhs, const ImVec2& rhs)                { lhs.x -= rhs.x; lhs.y -= rhs.y; return lhs; }$/;"	f
operator -=	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      vec_t& operator -= (const vec_t& v) { x -= v.x; y -= v.y; z -= v.z; w -= v.w; return *this; }$/;"	f	struct:ImGuizmo::vec_t
operator ->	thirdparty/catch/include/catch/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator /	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2 operator\/(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(lhs.x\/rhs.x, lhs.y\/rhs.y); }$/;"	f
operator /	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2 operator\/(const ImVec2& lhs, const float rhs)              { return ImVec2(lhs.x\/rhs, lhs.y\/rhs); }$/;"	f
operator /=	thirdparty/imgui/include/imgui/imgui_internal.h	/^static inline ImVec2& operator\/=(ImVec2& lhs, const float rhs)                  { lhs.x \/= rhs; lhs.y \/= rhs; return lhs; }$/;"	f
operator <<	thirdparty/catch/include/catch/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator =	lib/lib/include/lib/array.hpp	/^  operator=(const array &other)$/;"	f	class:LIB_NS_NAME::array
operator =	lib/lib/include/lib/nyaml.hpp	/^node::operator=(const std::string &new_value)$/;"	f	class:LIB_NS_NAME::nyaml::node
operator =	lib/nil/src/interface/node.cpp	/^Node::operator=(const Node &other)$/;"	f	class:Nil::Node
operator =	lib/roa/src/interface/collection.cpp	/^Collection::operator=(Collection &&other)$/;"	f	class:ROA::Collection
operator =	lib/roa/src/interface/collection.cpp	/^Collection::operator=(const Collection &other)$/;"	f	class:ROA::Collection
operator =	lib/roa/src/interface/resource.cpp	/^Resource::operator=(Resource &&other)$/;"	f	class:ROA::Resource
operator =	lib/roa/src/interface/resource.cpp	/^Resource::operator=(const Resource &other)$/;"	f	class:ROA::Resource
operator =	thirdparty/catch/include/catch/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	thirdparty/catch/include/catch/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	thirdparty/catch/include/catch/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator ==	lib/nil/src/interface/node.cpp	/^Node::operator==(const Node &other) const$/;"	f	class:Nil::Node
operator ==	lib/roa/src/interface/color.cpp	/^Color::operator==(const Color &other) const$/;"	f	class:ROA::Color
operator ==	lib/roa/src/interface/resource.cpp	/^Resource::operator==(const Resource &other) const$/;"	f	class:ROA::Resource
operator ImU32	thirdparty/imgui/include/imgui/imgui.h	/^    inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }$/;"	f	struct:ImColor
operator ImVec4	thirdparty/imgui/include/imgui/imgui.h	/^    inline operator ImVec4() const                                  { return Value; }$/;"	f	struct:ImColor
operator SafeBool::type	thirdparty/catch/include/catch/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator []	lib/lib/include/lib/array.hpp	/^  T& operator[](const size_t i)             { return m_begin[i]; }$/;"	f	class:LIB_NS_NAME::array
operator []	lib/lib/include/lib/array.hpp	/^  const T& operator[](const size_t i) const { return m_begin[i]; }$/;"	f	class:LIB_NS_NAME::array
operator []	lib/lib/include/lib/nyaml.hpp	/^node::operator[](const char *name)$/;"	f	class:LIB_NS_NAME::nyaml::node
operator []	lib/lib/include/lib/nyaml.hpp	/^node::operator[](const int i)$/;"	f	class:LIB_NS_NAME::nyaml::node
operator []	thirdparty/imgui/include/imgui/imgui.h	/^    inline char         operator[](int i) { return Buf.Data[i]; }$/;"	f	struct:ImGuiTextBuffer
operator []	thirdparty/imgui/include/imgui/imgui.h	/^    inline const value_type&    operator[](int i) const         { IM_ASSERT(i < Size); return Data[i]; }$/;"	f	class:ImVector
operator []	thirdparty/imgui/include/imgui/imgui.h	/^    inline value_type&          operator[](int i)               { IM_ASSERT(i < Size); return Data[i]; }$/;"	f	class:ImVector
operator []	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      const float& operator [] (size_t index) const { return ((float*)&x)[index]; }$/;"	f	struct:ImGuizmo::vec_t
operator []	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float& operator [] (size_t index) { return ((float*)&x)[index]; }$/;"	f	struct:ImGuizmo::vec_t
operator bool	lib/nil/src/interface/node.cpp	/^Node::operator bool() const$/;"	f	class:Nil::Node
operator bool	lib/roa/src/interface/resource.cpp	/^Resource::operator bool() const$/;"	f	class:ROA::Resource
operator bool	thirdparty/imgui/include/imgui/imgui.h	/^    operator bool() const { int current_frame = ImGui::GetFrameCount(); if (RefFrame == current_frame) return false; RefFrame = current_frame; return true; }$/;"	f	struct:ImGuiOnceUponAFrame
operator const float*	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      operator const float* () const { return m16; }$/;"	f	struct:ImGuizmo::matrix_t
operator delete	thirdparty/imgui/include/imgui/imgui_internal.h	/^inline void operator delete(void*, ImPlacementNewDummy, void*) {}$/;"	f
operator float *	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      operator float * () { return m16; }$/;"	f	struct:ImGuizmo::matrix_t
operator new	thirdparty/imgui/include/imgui/imgui_internal.h	/^inline void* operator new(size_t, ImPlacementNewDummy, void* ptr) { return ptr; }$/;"	f
operator |	thirdparty/catch/include/catch/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator ||	thirdparty/catch/include/catch/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	thirdparty/catch/include/catch/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
optarg	thirdparty/glfw/src/deps/getopt.c	/^char* optarg;$/;"	v
optcursor	thirdparty/glfw/src/deps/getopt.c	/^static char* optcursor = NULL;$/;"	v	file:
opterr	thirdparty/glfw/src/deps/getopt.c	/^int opterr;$/;"	v
optimalBufferCopyOffsetAlignment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize          optimalBufferCopyOffsetAlignment;$/;"	m	struct:VkPhysicalDeviceLimits
optimalBufferCopyRowPitchAlignment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize          optimalBufferCopyRowPitchAlignment;$/;"	m	struct:VkPhysicalDeviceLimits
optimalTilingFeatures	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkFormatFeatureFlags    optimalTilingFeatures;$/;"	m	struct:VkFormatProperties
optind	thirdparty/glfw/src/deps/getopt.c	/^int optind = 1;$/;"	v
option	thirdparty/glfw/src/deps/getopt.h	/^struct option {$/;"	s
option	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_toggle option;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_toggle
optional_argument	thirdparty/glfw/src/deps/getopt.c	/^const int optional_argument = 2;$/;"	v
optopt	thirdparty/glfw/src/deps/getopt.c	/^int optopt;$/;"	v
order	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 order;$/;"	m	struct:__anon204	file:
order	thirdparty/stb/include/stb/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon81
order	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 order;$/;"	m	struct:__anon117	file:
originalRamp	thirdparty/glfw/src/internal.h	/^    GLFWgammaramp   originalRamp;$/;"	m	struct:_GLFWmonitor
oscCount	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             oscCount[2];$/;"	m	class:TED
oscCount	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static int             oscCount[2];$/;"	v	file:
oscStep	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             oscStep;$/;"	m	class:TED
oscStep	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^static int             oscStep;$/;"	v	file:
oscillateFilterParameter	thirdparty/soloud/src/core/soloud_core_filterops.cpp	/^	void Soloud::oscillateFilterParameter(handle aVoiceHandle, unsigned int aFilterId, unsigned int aAttributeId, float aFrom, float aTo, double aTime)$/;"	f	class:SoLoud::Soloud
oscillateFilterParameter	thirdparty/soloud/src/core/soloud_filter.cpp	/^	void FilterInstance::oscillateFilterParameter(unsigned int aAttributeId, float aFrom, float aTo, double aTime, double aStartTime)$/;"	f	class:SoLoud::FilterInstance
oscillateGlobalVolume	thirdparty/soloud/src/core/soloud_core_faderops.cpp	/^	void Soloud::oscillateGlobalVolume(float aFrom, float aTo, time aTime)$/;"	f	class:SoLoud::Soloud
oscillatePan	thirdparty/soloud/src/core/soloud_core_faderops.cpp	/^	void Soloud::oscillatePan(handle aVoiceHandle, float aFrom, float aTo, time aTime)$/;"	f	class:SoLoud::Soloud
oscillateRelativePlaySpeed	thirdparty/soloud/src/core/soloud_core_faderops.cpp	/^	void Soloud::oscillateRelativePlaySpeed(handle aVoiceHandle, float aFrom, float aTo, time aTime)$/;"	f	class:SoLoud::Soloud
oscillateVolume	thirdparty/soloud/src/core/soloud_core_faderops.cpp	/^	void Soloud::oscillateVolume(handle aVoiceHandle, float aFrom, float aTo, time aTime)$/;"	f	class:SoLoud::Soloud
oscillatorInit	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	/^void TED::oscillatorInit()$/;"	f	class:TED
oscillatorInit	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^void TED::oscillatorInit()$/;"	f	class:TED
oscillatorReset	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	/^void TED::oscillatorReset()$/;"	f	class:TED
oscillatorReset	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^void TED::oscillatorReset()$/;"	f	class:TED
oss	thirdparty/catch/include/catch/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
ossCleanup	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^    static void ossCleanup(Soloud *aSoloud)$/;"	f	namespace:SoLoud
ossDeviceHandle	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^        int ossDeviceHandle;$/;"	m	struct:SoLoud::OSSData	file:
ossThread	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^    static void ossThread(void *aParam)$/;"	f	namespace:SoLoud
oss_init	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^    result oss_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
oss_init	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^    result oss_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer, unsigned int aChannels)$/;"	f	namespace:SoLoud
out	lib/lib/include/lib/logging.hpp	/^namespace out {$/;"	n	namespace:LIB_NS_NAME::logging
out	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon87
out	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *out, *old_out;             \/\/ output buffer (always 4 components)$/;"	m	struct:__anon92
outfile	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^static int outfile(char const *filename, int rgb_dir, int vdir, int x, int y, int comp, int expand_mono, void *data, int alpha, int pad, const char *fmt, ...)$/;"	f
outfile	thirdparty/soloud/src/tools/tedsid2dump/main.cpp	/^FILE * outfile = NULL;$/;"	v
output	thirdparty/glfw/src/wl_platform.h	/^    struct wl_output*           output;$/;"	m	struct:_GLFWmonitorWayland	typeref:struct:_GLFWmonitorWayland::wl_output
output	thirdparty/glfw/src/x11_platform.h	/^    RROutput        output;$/;"	m	struct:_GLFWmonitorX11
outputId	thirdparty/glfw/src/mir_platform.h	/^    int outputId;$/;"	m	struct:_GLFWmonitorMir
outputListener	thirdparty/glfw/src/wl_monitor.c	/^static const struct wl_output_listener outputListener = {$/;"	v	typeref:struct:wl_output_listener	file:
output_data	thirdparty/stb/include/stb/stb_image_resize.h	/^    void* output_data;$/;"	m	struct:__anon72
output_h	thirdparty/stb/include/stb/stb_image_resize.h	/^    int output_h;$/;"	m	struct:__anon72
output_stride_bytes	thirdparty/stb/include/stb/stb_image_resize.h	/^    int output_stride_bytes;$/;"	m	struct:__anon72
output_w	thirdparty/stb/include/stb/stb_image_resize.h	/^    int output_w;$/;"	m	struct:__anon72
outputs	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   float *outputs        [STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	file:
outputs	thirdparty/stb/include/stb/stb_vorbis.c	/^   float *outputs        [STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	file:
overlay	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_command_buffer overlay;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_command_buffer
override	app/perils/src/game/actor_kinematic.hpp	/^  void            on_start() override;$/;"	m	struct:Game::Actor_kinematic
override	app/perils/src/game/actor_kinematic.hpp	/^  void            on_think() override;$/;"	m	struct:Game::Actor_kinematic
override	app/perils/src/game/game_manager.hpp	/^  void            on_start() override;$/;"	m	struct:Game::Game_manager
override	app/perils/src/game/game_manager.hpp	/^  void            on_think() override;$/;"	m	struct:Game::Game_manager
overrideRedirect	thirdparty/glfw/src/x11_platform.h	/^    GLFWbool        overrideRedirect;$/;"	m	struct:_GLFWwindowX11
oversample_h	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char oversample_v, oversample_h;$/;"	m	struct:nk_font_config
oversample_v	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char oversample_v, oversample_h;$/;"	m	struct:nk_font_config
pAcquireKeys	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const uint64_t*          pAcquireKeys;$/;"	m	struct:VkWin32KeyedMutexAcquireReleaseInfoNV
pAcquireSyncs	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkDeviceMemory*    pAcquireSyncs;$/;"	m	struct:VkWin32KeyedMutexAcquireReleaseInfoNV
pAcquireTimeoutMilliseconds	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const uint32_t*          pAcquireTimeoutMilliseconds;$/;"	m	struct:VkWin32KeyedMutexAcquireReleaseInfoNV
pApplicationInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkApplicationInfo*    pApplicationInfo;$/;"	m	struct:VkInstanceCreateInfo
pApplicationName	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const char*        pApplicationName;$/;"	m	struct:VkApplicationInfo
pAttachments	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkAttachmentDescription*    pAttachments;$/;"	m	struct:VkRenderPassCreateInfo
pAttachments	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkImageView*          pAttachments;$/;"	m	struct:VkFramebufferCreateInfo
pAttachments	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPipelineColorBlendAttachmentState*    pAttachments;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
pAttributes	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const SECURITY_ATTRIBUTES*    pAttributes;$/;"	m	struct:VkExportMemoryWin32HandleInfoNV
pBindings	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkDescriptorSetLayoutBinding*    pBindings;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo
pBinds	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSparseImageMemoryBind*    pBinds;$/;"	m	struct:VkSparseImageMemoryBindInfo
pBinds	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSparseMemoryBind*    pBinds;$/;"	m	struct:VkSparseBufferMemoryBindInfo
pBinds	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSparseMemoryBind*    pBinds;$/;"	m	struct:VkSparseImageOpaqueMemoryBindInfo
pBufferBinds	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSparseBufferMemoryBindInfo*         pBufferBinds;$/;"	m	struct:VkBindSparseInfo
pBufferInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkDescriptorBufferInfo*    pBufferInfo;$/;"	m	struct:VkWriteDescriptorSet
pClearValues	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkClearValue*    pClearValues;$/;"	m	struct:VkRenderPassBeginInfo
pCode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const uint32_t*              pCode;$/;"	m	struct:VkShaderModuleCreateInfo
pColorAttachments	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkAttachmentReference*    pColorAttachments;$/;"	m	struct:VkSubpassDescription
pColorBlendState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPipelineColorBlendStateCreateInfo*       pColorBlendState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pCommandBuffers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkCommandBuffer*         pCommandBuffers;$/;"	m	struct:VkSubmitInfo
pData	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                        pData;$/;"	m	struct:VkSpecializationInfo
pDependencies	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSubpassDependency*        pDependencies;$/;"	m	struct:VkRenderPassCreateInfo
pDepthStencilAttachment	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkAttachmentReference*    pDepthStencilAttachment;$/;"	m	struct:VkSubpassDescription
pDepthStencilState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPipelineDepthStencilStateCreateInfo*     pDepthStencilState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pDisabledValidationChecks	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkValidationCheckEXT*    pDisabledValidationChecks;$/;"	m	struct:VkValidationFlagsEXT
pDynamicState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPipelineDynamicStateCreateInfo*          pDynamicState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pDynamicStates	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkDynamicState*                pDynamicStates;$/;"	m	struct:VkPipelineDynamicStateCreateInfo
pEnabledFeatures	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPhysicalDeviceFeatures*    pEnabledFeatures;$/;"	m	struct:VkDeviceCreateInfo
pEngineName	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const char*        pEngineName;$/;"	m	struct:VkApplicationInfo
pImageBinds	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSparseImageMemoryBindInfo*          pImageBinds;$/;"	m	struct:VkBindSparseInfo
pImageIndices	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const uint32_t*          pImageIndices;$/;"	m	struct:VkPresentInfoKHR
pImageInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkDescriptorImageInfo*     pImageInfo;$/;"	m	struct:VkWriteDescriptorSet
pImageOpaqueBinds	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSparseImageOpaqueMemoryBindInfo*    pImageOpaqueBinds;$/;"	m	struct:VkBindSparseInfo
pImmutableSamplers	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSampler*      pImmutableSamplers;$/;"	m	struct:VkDescriptorSetLayoutBinding
pIndirectCommandsTokens	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkIndirectCommandsTokenNVX*    pIndirectCommandsTokens;$/;"	m	struct:VkCmdProcessCommandsInfoNVX
pInheritanceInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkCommandBufferInheritanceInfo*    pInheritanceInfo;$/;"	m	struct:VkCommandBufferBeginInfo
pInitialData	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                   pInitialData;$/;"	m	struct:VkPipelineCacheCreateInfo
pInputAssemblyState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPipelineInputAssemblyStateCreateInfo*    pInputAssemblyState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pInputAttachments	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkAttachmentReference*    pInputAttachments;$/;"	m	struct:VkSubpassDescription
pMapEntries	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSpecializationMapEntry*    pMapEntries;$/;"	m	struct:VkSpecializationInfo
pMarkerName	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const char*        pMarkerName;$/;"	m	struct:VkDebugMarkerMarkerInfoEXT
pMultisampleState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPipelineMultisampleStateCreateInfo*      pMultisampleState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pName	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const char*                         pName;$/;"	m	struct:VkPipelineShaderStageCreateInfo
pNext	thirdparty/glfw/src/cocoa_platform.h	/^    const void*                     pNext;$/;"	m	struct:VkMacOSSurfaceCreateInfoMVK
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                                      pNext;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                                   pNext;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                                 pNext;$/;"	m	struct:VkBindSparseInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                                 pNext;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                                pNext;$/;"	m	struct:VkIndirectCommandsLayoutCreateInfoNVX
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                                pNext;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                                pNext;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                               pNext;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                               pNext;$/;"	m	struct:VkPipelineTessellationStateCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                              pNext;$/;"	m	struct:VkCommandBufferBeginInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                              pNext;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                            pNext;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                           pNext;$/;"	m	struct:VkPipelineViewportStateCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                          pNext;$/;"	m	struct:VkCmdProcessCommandsInfoNVX
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                          pNext;$/;"	m	struct:VkExportMemoryAllocateInfoNV
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                          pNext;$/;"	m	struct:VkExternalMemoryImageCreateInfoNV
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                          pNext;$/;"	m	struct:VkImportMemoryWin32HandleInfoNV
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                          pNext;$/;"	m	struct:VkObjectTableCreateInfoNVX
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                          pNext;$/;"	m	struct:VkPipelineDynamicStateCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                         pNext;$/;"	m	struct:VkPipelineShaderStageCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                        pNext;$/;"	m	struct:VkComputePipelineCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                        pNext;$/;"	m	struct:VkDeviceCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                       pNext;$/;"	m	struct:VkAndroidSurfaceCreateInfoKHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                       pNext;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                       pNext;$/;"	m	struct:VkRenderPassCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                       pNext;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                      pNext;$/;"	m	struct:VkCommandBufferInheritanceInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                      pNext;$/;"	m	struct:VkQueryPoolCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                      pNext;$/;"	m	struct:VkSwapchainCreateInfoKHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                      pNext;$/;"	m	struct:VkWriteDescriptorSet
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                     pNext;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                     pNext;$/;"	m	struct:VkDescriptorSetAllocateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                     pNext;$/;"	m	struct:VkPipelineLayoutCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                     pNext;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                    pNext;$/;"	m	struct:VkCmdReserveSpaceForCommandsInfoNVX
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                    pNext;$/;"	m	struct:VkDescriptorPoolCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                    pNext;$/;"	m	struct:VkDisplayModeCreateInfoKHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                    pNext;$/;"	m	struct:VkSubmitInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                    pNext;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                   pNext;$/;"	m	struct:VkDebugMarkerObjectNameInfoEXT
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                   pNext;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                   pNext;$/;"	m	struct:VkExportMemoryWin32HandleInfoNV
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                   pNext;$/;"	m	struct:VkMirSurfaceCreateInfoKHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                   pNext;$/;"	m	struct:VkPipelineCacheCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                   pNext;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                  pNext;$/;"	m	struct:VkShaderModuleCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                 pNext;$/;"	m	struct:VkCommandPoolCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                 pNext;$/;"	m	struct:VkDeviceQueueCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                 pNext;$/;"	m	struct:VkFramebufferCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                 pNext;$/;"	m	struct:VkInstanceCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                 pNext;$/;"	m	struct:VkSwapchainCounterCreateInfoEXT
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                 pNext;$/;"	m	struct:VkViSurfaceCreateInfoNN
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                pNext;$/;"	m	struct:VkBufferViewCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                pNext;$/;"	m	struct:VkImageMemoryBarrier
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                pNext;$/;"	m	struct:VkImageViewCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                pNext;$/;"	m	struct:VkPipelineRasterizationStateRasterizationOrderAMD
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*               pNext;$/;"	m	struct:VkDisplayPowerInfoEXT
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*               pNext;$/;"	m	struct:VkSemaphoreCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*              pNext;$/;"	m	struct:VkDisplayEventInfoEXT
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*              pNext;$/;"	m	struct:VkImageCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*              pNext;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2KHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*              pNext;$/;"	m	struct:VkPresentInfoKHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*              pNext;$/;"	m	struct:VkValidationFlagsEXT
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*              pNext;$/;"	m	struct:VkWin32KeyedMutexAcquireReleaseInfoNV
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*             pNext;$/;"	m	struct:VkCommandBufferAllocateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*             pNext;$/;"	m	struct:VkDeviceEventInfoEXT
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*             pNext;$/;"	m	struct:VkSamplerCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*            pNext;$/;"	m	struct:VkBufferCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*            pNext;$/;"	m	struct:VkRenderPassBeginInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*           pNext;$/;"	m	struct:VkEventCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*           pNext;$/;"	m	struct:VkFenceCreateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*           pNext;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2KHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkApplicationInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkBufferMemoryBarrier
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkCopyDescriptorSet
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkDebugMarkerMarkerInfoEXT
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkDedicatedAllocationBufferCreateInfoNV
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkDedicatedAllocationImageCreateInfoNV
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkDedicatedAllocationMemoryAllocateInfoNV
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkDeviceGeneratedCommandsFeaturesNVX
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkDeviceGeneratedCommandsLimitsNVX
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkDisplayPresentInfoKHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkMappedMemoryRange
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkMemoryAllocateInfo
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkMemoryBarrier
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    void*                               pNext;$/;"	m	struct:VkPhysicalDeviceMemoryProperties2KHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    void*                            pNext;$/;"	m	struct:VkSparseImageFormatProperties2KHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    void*                            pNext;$/;"	m	struct:VkSurfaceCapabilities2EXT
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    void*                         pNext;$/;"	m	struct:VkPhysicalDeviceProperties2KHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    void*                       pNext;$/;"	m	struct:VkPhysicalDeviceFeatures2KHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    void*                      pNext;$/;"	m	struct:VkImageFormatProperties2KHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    void*                      pNext;$/;"	m	struct:VkQueueFamilyProperties2KHR
pNext	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    void*                 pNext;$/;"	m	struct:VkFormatProperties2KHR
pNext	thirdparty/glfw/src/mir_platform.h	/^    const void*                 pNext;$/;"	m	struct:VkMirWindowCreateInfoKHR
pNext	thirdparty/glfw/src/win32_platform.h	/^    const void*                     pNext;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
pNext	thirdparty/glfw/src/wl_platform.h	/^    const void*                     pNext;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR
pNext	thirdparty/glfw/src/x11_platform.h	/^    const void*                 pNext;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
pNext	thirdparty/glfw/src/x11_platform.h	/^    const void*                 pNext;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
pObjectEntryCounts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const uint32_t*                      pObjectEntryCounts;$/;"	m	struct:VkObjectTableCreateInfoNVX
pObjectEntryTypes	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkObjectEntryTypeNVX*          pObjectEntryTypes;$/;"	m	struct:VkObjectTableCreateInfoNVX
pObjectEntryUsageFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkObjectEntryUsageFlagsNVX*    pObjectEntryUsageFlags;$/;"	m	struct:VkObjectTableCreateInfoNVX
pObjectName	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const char*                   pObjectName;$/;"	m	struct:VkDebugMarkerObjectNameInfoEXT
pPoolSizes	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkDescriptorPoolSize*    pPoolSizes;$/;"	m	struct:VkDescriptorPoolCreateInfo
pPreserveAttachments	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const uint32_t*                 pPreserveAttachments;$/;"	m	struct:VkSubpassDescription
pPushConstantRanges	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPushConstantRange*      pPushConstantRanges;$/;"	m	struct:VkPipelineLayoutCreateInfo
pQueueCreateInfos	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkDeviceQueueCreateInfo*     pQueueCreateInfos;$/;"	m	struct:VkDeviceCreateInfo
pQueueFamilyIndices	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const uint32_t*                  pQueueFamilyIndices;$/;"	m	struct:VkSwapchainCreateInfoKHR
pQueueFamilyIndices	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const uint32_t*          pQueueFamilyIndices;$/;"	m	struct:VkImageCreateInfo
pQueueFamilyIndices	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const uint32_t*        pQueueFamilyIndices;$/;"	m	struct:VkBufferCreateInfo
pQueuePriorities	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const float*                pQueuePriorities;$/;"	m	struct:VkDeviceQueueCreateInfo
pRasterizationState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPipelineRasterizationStateCreateInfo*    pRasterizationState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pReleaseKeys	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const uint64_t*          pReleaseKeys;$/;"	m	struct:VkWin32KeyedMutexAcquireReleaseInfoNV
pReleaseSyncs	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkDeviceMemory*    pReleaseSyncs;$/;"	m	struct:VkWin32KeyedMutexAcquireReleaseInfoNV
pResolveAttachments	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkAttachmentReference*    pResolveAttachments;$/;"	m	struct:VkSubpassDescription
pResults	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkResult*                pResults;$/;"	m	struct:VkPresentInfoKHR
pSampleMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSampleMask*                      pSampleMask;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
pScissors	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkRect2D*                       pScissors;$/;"	m	struct:VkPipelineViewportStateCreateInfo
pSetLayouts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkDescriptorSetLayout*    pSetLayouts;$/;"	m	struct:VkDescriptorSetAllocateInfo
pSetLayouts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkDescriptorSetLayout*    pSetLayouts;$/;"	m	struct:VkPipelineLayoutCreateInfo
pSignalSemaphores	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSemaphore*                          pSignalSemaphores;$/;"	m	struct:VkBindSparseInfo
pSignalSemaphores	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSemaphore*             pSignalSemaphores;$/;"	m	struct:VkSubmitInfo
pSpecializationInfo	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSpecializationInfo*         pSpecializationInfo;$/;"	m	struct:VkPipelineShaderStageCreateInfo
pStages	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPipelineShaderStageCreateInfo*           pStages;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pSubpasses	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSubpassDescription*       pSubpasses;$/;"	m	struct:VkRenderPassCreateInfo
pSwapchains	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSwapchainKHR*    pSwapchains;$/;"	m	struct:VkPresentInfoKHR
pTag	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const void*                   pTag;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
pTessellationState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPipelineTessellationStateCreateInfo*     pTessellationState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pTexelBufferView	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkBufferView*              pTexelBufferView;$/;"	m	struct:VkWriteDescriptorSet
pTokens	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkIndirectCommandsLayoutTokenNVX*    pTokens;$/;"	m	struct:VkIndirectCommandsLayoutCreateInfoNVX
pUserData	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    void*                                   pUserData;$/;"	m	struct:VkAllocationCallbacks
pUserData	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    void*                           pUserData;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT
pVertexAttributeDescriptions	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkVertexInputAttributeDescription*    pVertexAttributeDescriptions;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
pVertexBindingDescriptions	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkVertexInputBindingDescription*      pVertexBindingDescriptions;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
pVertexInputState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPipelineVertexInputStateCreateInfo*      pVertexInputState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pView	thirdparty/glfw/src/cocoa_platform.h	/^    const void*                     pView;$/;"	m	struct:VkMacOSSurfaceCreateInfoMVK
pViewportState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPipelineViewportStateCreateInfo*         pViewportState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pViewports	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkViewport*                     pViewports;$/;"	m	struct:VkPipelineViewportStateCreateInfo
pWaitDstStageMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkPipelineStageFlags*    pWaitDstStageMask;$/;"	m	struct:VkSubmitInfo
pWaitSemaphores	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSemaphore*                          pWaitSemaphores;$/;"	m	struct:VkBindSparseInfo
pWaitSemaphores	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSemaphore*             pWaitSemaphores;$/;"	m	struct:VkSubmitInfo
pWaitSemaphores	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const VkSemaphore*       pWaitSemaphores;$/;"	m	struct:VkPresentInfoKHR
p_arp_mod	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_arp_mod;$/;"	m	struct:SoLoud::SfxrParams
p_arp_speed	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_arp_speed;$/;"	m	struct:SoLoud::SfxrParams
p_base_freq	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_base_freq;$/;"	m	struct:SoLoud::SfxrParams
p_duty	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_duty;$/;"	m	struct:SoLoud::SfxrParams
p_duty_ramp	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_duty_ramp;$/;"	m	struct:SoLoud::SfxrParams
p_env_attack	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_env_attack;$/;"	m	struct:SoLoud::SfxrParams
p_env_decay	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_env_decay;$/;"	m	struct:SoLoud::SfxrParams
p_env_punch	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_env_punch;$/;"	m	struct:SoLoud::SfxrParams
p_env_sustain	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_env_sustain;$/;"	m	struct:SoLoud::SfxrParams
p_first	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   ProbedPage p_first, p_last;$/;"	m	struct:stb_vorbis	file:
p_first	thirdparty/stb/include/stb/stb_vorbis.c	/^   ProbedPage p_first, p_last;$/;"	m	struct:stb_vorbis	file:
p_freq_dramp	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_freq_dramp;$/;"	m	struct:SoLoud::SfxrParams
p_freq_limit	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_freq_limit;$/;"	m	struct:SoLoud::SfxrParams
p_freq_ramp	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_freq_ramp;$/;"	m	struct:SoLoud::SfxrParams
p_hpf_freq	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_hpf_freq;$/;"	m	struct:SoLoud::SfxrParams
p_hpf_ramp	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_hpf_ramp;$/;"	m	struct:SoLoud::SfxrParams
p_last	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   ProbedPage p_first, p_last;$/;"	m	struct:stb_vorbis	file:
p_last	thirdparty/stb/include/stb/stb_vorbis.c	/^   ProbedPage p_first, p_last;$/;"	m	struct:stb_vorbis	file:
p_lpf_freq	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_lpf_freq;$/;"	m	struct:SoLoud::SfxrParams
p_lpf_ramp	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_lpf_ramp;$/;"	m	struct:SoLoud::SfxrParams
p_lpf_resonance	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_lpf_resonance;$/;"	m	struct:SoLoud::SfxrParams
p_pha_offset	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_pha_offset;$/;"	m	struct:SoLoud::SfxrParams
p_pha_ramp	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_pha_ramp;$/;"	m	struct:SoLoud::SfxrParams
p_repeat_speed	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_repeat_speed;$/;"	m	struct:SoLoud::SfxrParams
p_vib_delay	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_vib_delay;$/;"	m	struct:SoLoud::SfxrParams
p_vib_speed	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_vib_speed;$/;"	m	struct:SoLoud::SfxrParams
p_vib_strength	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float p_vib_strength;$/;"	m	struct:SoLoud::SfxrParams
pack3232	lib/lib/include/lib/bits.hpp	/^pack3232(const uint32_t a, const uint32_t b)$/;"	f	namespace:LIB_NS_NAME::bits
pack824	lib/lib/include/lib/bits.hpp	/^pack824(const uint8_t a, const uint32_t b)$/;"	f	namespace:LIB_NS_NAME::bits
pack8888	lib/lib/include/lib/bits.hpp	/^pack8888(const uint8_t a, const uint8_t b, const uint8_t c, const uint8_t d)$/;"	f	namespace:LIB_NS_NAME::bits
pack_info	thirdparty/glfw/src/deps/nuklear.h	/^    void *pack_info;$/;"	m	struct:nk_tt_pack_context
pack_info	thirdparty/stb/include/stb/stb_truetype.h	/^   void *pack_info;$/;"	m	struct:stbtt_pack_context
packed_chars	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_tt_packedchar *packed_chars;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_tt_packedchar
packet_bytes	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int packet_bytes;$/;"	m	struct:stb_vorbis	file:
packet_bytes	thirdparty/stb/include/stb/stb_vorbis.c	/^   int packet_bytes;$/;"	m	struct:stb_vorbis	file:
padding	thirdparty/glfw/src/deps/nuklear.h	/^    int   padding;$/;"	m	struct:nk_tt_pack_context
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_text	typeref:struct:nk_style_text::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_text	typeref:struct:nk_text::nk_vec2
padding	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char padding[3];$/;"	m	struct:nk_font_config
padding	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char type,padding;$/;"	m	struct:nk_tt_vertex
padding	thirdparty/stb/include/stb/stb_truetype.h	/^      unsigned char type,padding;$/;"	m	struct:__anon102
padding	thirdparty/stb/include/stb/stb_truetype.h	/^   int   padding;$/;"	m	struct:stbtt_pack_context
padding1	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char padding1;$/;"	m	struct:nk_text_edit
padding1	thirdparty/stb/include/stb/stb_textedit.h	/^   unsigned char padding1, padding2, padding3;$/;"	m	struct:__anon132
padding2	thirdparty/stb/include/stb/stb_textedit.h	/^   unsigned char padding1, padding2, padding3;$/;"	m	struct:__anon132
padding3	thirdparty/stb/include/stb/stb_textedit.h	/^   unsigned char padding1, padding2, padding3;$/;"	m	struct:__anon132
page_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int page_count;$/;"	m	struct:nk_pool
page_crc_tests	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int page_crc_tests; \/\/ only in push_mode: number of tests active; -1 if not searching$/;"	m	struct:stb_vorbis	file:
page_crc_tests	thirdparty/stb/include/stb/stb_vorbis.c	/^   int page_crc_tests; \/\/ only in push_mode: number of tests active; -1 if not searching$/;"	m	struct:stb_vorbis	file:
page_end	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 page_start, page_end;$/;"	m	struct:__anon212	file:
page_end	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 page_start, page_end;$/;"	m	struct:__anon125	file:
page_flag	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 page_flag;$/;"	m	struct:stb_vorbis	file:
page_flag	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 page_flag;$/;"	m	struct:stb_vorbis	file:
page_start	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 page_start, page_end;$/;"	m	struct:__anon212	file:
page_start	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 page_start, page_end;$/;"	m	struct:__anon125	file:
pages	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_page *pages;$/;"	m	struct:nk_pool	typeref:struct:nk_pool::nk_page
pal	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anon92
pan	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_panel pan;$/;"	m	union:nk_page_data	typeref:struct:nk_page_data::nk_panel
param	thirdparty/remotery/src/Remotery.c	/^    void* param;$/;"	m	struct:Thread_t	file:
parameters	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDisplayModeParametersKHR     parameters;$/;"	m	struct:VkDisplayModeCreateInfoKHR
parameters	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDisplayModeParametersKHR    parameters;$/;"	m	struct:VkDisplayModePropertiesKHR
parent	lib/lib/include/lib/nyaml.hpp	/^  node*             parent = nullptr;$/;"	m	class:LIB_NS_NAME::nyaml::node
parent	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size parent;$/;"	m	struct:nk_popup_buffer
parent	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_panel *parent;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_panel
parent	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_window *parent;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_window
parent	thirdparty/remotery/src/Remotery.c	/^    struct Sample* parent;$/;"	m	struct:Sample	typeref:struct:Sample::Sample	file:
parent_depth_data	lib/nil/src/graph/graph_data.hpp	/^  lib::array<uint64_t>        parent_depth_data;        \/\/ Parent ID and Depth.$/;"	m	struct:Nil::Graph::Data
parse	lib/lib/include/lib/nyaml.hpp	/^parse(const char *data)$/;"	f	namespace:LIB_NS_NAME::nyaml
parse	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	result WavStream::parse(File *aFile)$/;"	f	class:SoLoud::WavStream
parse	thirdparty/soloud/src/tools/codegen/main.cpp	/^void parse(const char *aFilename, int aPrintProgress = 0)$/;"	f
parse	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.cpp	/^int CbmTune::parse(char *fName)$/;"	f	class:CbmTune
parse	thirdparty/stb/include/stb/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon92
parsePsid	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^unsigned int parsePsid(unsigned char *buf, PsidHeader &psidHdr_)$/;"	f
parseUriList	thirdparty/glfw/src/x11_window.c	/^static char** parseUriList(char* text, int* count)$/;"	f	file:
parse_params	thirdparty/soloud/src/tools/codegen/main.cpp	/^void parse_params(Method *m, char *b, int &ofs)$/;"	f
parse_version	thirdparty/opengl/src/gl3w.cpp	/^static int parse_version(void)$/;"	f	file:
part_size	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 part_size;$/;"	m	struct:__anon207	file:
part_size	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 part_size;$/;"	m	struct:__anon120	file:
partition_class_list	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 partition_class_list[32]; \/\/ varies$/;"	m	struct:__anon205	file:
partition_class_list	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 partition_class_list[32]; \/\/ varies$/;"	m	struct:__anon118	file:
partitions	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 partitions;$/;"	m	struct:__anon205	file:
partitions	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 partitions;$/;"	m	struct:__anon118	file:
parwave	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^void klatt::parwave(klatt_frame *frame, short int *jwave)$/;"	f	class:klatt
passOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStencilOp    passOp;$/;"	m	struct:VkStencilOpState
paste	thirdparty/glfw/src/deps/nuklear.h	/^    nk_plugin_paste paste;$/;"	m	struct:nk_clipboard
patchControlPoints	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                                  patchControlPoints;$/;"	m	struct:VkPipelineTessellationStateCreateInfo
path	thirdparty/glfw/src/linux_joystick.h	/^    char                    path[PATH_MAX];$/;"	m	struct:_GLFWjoystickLinux
path	thirdparty/tinydir/include/tinydir/tinydir.h	/^	_tinydir_char_t path[_TINYDIR_PATH_MAX];$/;"	m	struct:tinydir_dir
path	thirdparty/tinydir/include/tinydir/tinydir.h	/^	_tinydir_char_t path[_TINYDIR_PATH_MAX];$/;"	m	struct:tinydir_file
path_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int path_count;$/;"	m	struct:nk_draw_list
path_offset	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int path_offset;$/;"	m	struct:nk_draw_list
payload	thirdparty/json/include/json/json.h	/^  void *payload;$/;"	m	struct:json_value_s
payload	thirdparty/remotery/src/Remotery.c	/^    rmtU8 payload[1];$/;"	m	struct:Message	file:
payload_size	thirdparty/remotery/src/Remotery.c	/^    rmtU32 payload_size;$/;"	m	struct:Message	file:
peek_decode_initial	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int peek_decode_initial(vorb *f, int *p_left_start, int *p_left_end, int *p_right_start, int *p_right_end, int *mode)$/;"	f	file:
peek_decode_initial	thirdparty/stb/include/stb/stb_vorbis.c	/^static int peek_decode_initial(vorb *f, int *p_left_start, int *p_left_end, int *p_right_start, int *p_right_end, int *mode)$/;"	f	file:
performOptionalSelector	thirdparty/catch/include/catch/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
period	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		int period;$/;"	m	class:SoLoud::SfxrInstance
permanent	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_allocator permanent;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_allocator
persistent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32           persistent;$/;"	m	struct:VkDisplayPresentInfoKHR
persistentContent	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                      persistentContent;$/;"	m	struct:VkDisplayPropertiesKHR
pfnAllocation	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    PFN_vkAllocationFunction                pfnAllocation;$/;"	m	struct:VkAllocationCallbacks
pfnCallback	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    PFN_vkDebugReportCallbackEXT    pfnCallback;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT
pfnFree	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    PFN_vkFreeFunction                      pfnFree;$/;"	m	struct:VkAllocationCallbacks
pfnInternalAllocation	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    PFN_vkInternalAllocationNotification    pfnInternalAllocation;$/;"	m	struct:VkAllocationCallbacks
pfnInternalFree	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    PFN_vkInternalFreeNotification          pfnInternalFree;$/;"	m	struct:VkAllocationCallbacks
pfnReallocation	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    PFN_vkReallocationFunction              pfnReallocation;$/;"	m	struct:VkAllocationCallbacks
pguid	thirdparty/glfw/src/deps/mingw/dinput.h	/^    const GUID *pguid;$/;"	m	struct:_DIOBJECTDATAFORMAT
phase	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		int phase;$/;"	m	class:SoLoud::SfxrInstance
phaser_buffer	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float phaser_buffer[1024];$/;"	m	class:SoLoud::SfxrInstance
phone_cat	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static void phone_cat(darray *arg, const char *s)$/;"	f	file:
phone_to_elm	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^int klatt::phone_to_elm(char *aPhoneme, int aCount, darray *aElement)$/;"	f	class:klatt
phoneme_to_element_lookup	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^static char * phoneme_to_element_lookup(char *s, void ** data)$/;"	f	file:
phoneme_to_elements	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^static PhonemeToElements phoneme_to_elements[PHONEME_COUNT] = $/;"	v	file:
physicalDimensions	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                    physicalDimensions;$/;"	m	struct:VkDisplayPropertiesKHR
physicalResolution	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D                    physicalResolution;$/;"	m	struct:VkDisplayPropertiesKHR
pi	lib/math/include/math/general/constants.hpp	/^MATH_CONST_CONSTEXPR float           pi()          { return 3.14159265359f;  }$/;"	f
pio1	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char pio1;$/;"	m	class:TED
pipeline	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipeline                    pipeline;$/;"	m	struct:VkObjectTablePipelineEntryNVX
pipelineBindPoint	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineBindPoint                        pipelineBindPoint;$/;"	m	struct:VkIndirectCommandsLayoutCreateInfoNVX
pipelineBindPoint	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineBindPoint             pipelineBindPoint;$/;"	m	struct:VkSubpassDescription
pipelineCacheUUID	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint8_t                             pipelineCacheUUID[VK_UUID_SIZE];$/;"	m	struct:VkPhysicalDeviceProperties
pipelineLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineLayout              pipelineLayout;$/;"	m	struct:VkObjectTableDescriptorSetEntryNVX
pipelineLayout	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineLayout              pipelineLayout;$/;"	m	struct:VkObjectTablePushConstantEntryNVX
pipelineStatistics	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkQueryPipelineStatisticFlags    pipelineStatistics;$/;"	m	struct:VkCommandBufferInheritanceInfo
pipelineStatistics	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkQueryPipelineStatisticFlags    pipelineStatistics;$/;"	m	struct:VkQueryPoolCreateInfo
pipelineStatisticsQuery	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    pipelineStatisticsQuery;$/;"	m	struct:VkPhysicalDeviceFeatures
pitch_synch_par_reset	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^void klatt::pitch_synch_par_reset(klatt_frame *frame, int ns)$/;"	f	class:klatt
pixel	thirdparty/glfw/src/deps/nuklear.h	/^    void *pixel;$/;"	m	struct:nk_font_atlas
pixelFormat	thirdparty/glfw/src/nsgl_context.h	/^    id           pixelFormat;$/;"	m	struct:_GLFWcontextNSGL
pixel_snap	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char pixel_snap;$/;"	m	struct:nk_font_config
pixels	thirdparty/glfw/include/GLFW/glfw3.h	/^    unsigned char* pixels;$/;"	m	struct:GLFWimage
pixels	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char *pixels;$/;"	m	struct:nk_tt_pack_context
pixels	thirdparty/glfw/src/deps/nuklear.h	/^   unsigned char *pixels;$/;"	m	struct:nk_tt__bitmap
pixels	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned char *pixels;$/;"	m	struct:__anon103
pixels	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned char *pixels;$/;"	m	struct:stbtt_pack_context
plane	lib/math/include/math/geometry/geometry_types.hpp	/^struct plane$/;"	s
planeIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                          planeIndex;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
planeLimit	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const float planeLimit = 0.2f;$/;"	m	namespace:ImGuizmo	file:
planeReorderPossible	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                      planeReorderPossible;$/;"	m	struct:VkDisplayPropertiesKHR
planeStackIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                          planeStackIndex;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
plane_init	lib/math/include/math/geometry/plane.hpp	/^plane_init(const vec3 position, const vec3 normal)$/;"	f
platform	lib/lib/include/lib/platform.hpp	/^namespace platform {$/;"	n	namespace:LIB_NS_NAME
platform_resource	lib/nil/include/nil/resource/audio.hpp	/^  uintptr_t           platform_resource;$/;"	m	struct:Nil_audio_src
platform_resource	lib/nil/include/nil/resource/font.hpp	/^  uintptr_t     platform_resource;$/;"	m	struct:Nil_font
platform_resource	lib/nil/include/nil/resource/mesh.hpp	/^  uintptr_t               platform_resource;$/;"	m	struct:Nil_mesh
platform_resource	lib/nil/include/nil/resource/shader.hpp	/^  uintptr_t           platform_resource;$/;"	m	struct:Nil_shader
platform_resource	lib/nil/include/nil/resource/texture.hpp	/^  uintptr_t           platform_resource;$/;"	m	struct:Nil_texture
play	thirdparty/soloud/src/core/soloud_bus.cpp	/^	handle Bus::play(AudioSource &aSound, float aVolume, float aPan, bool aPaused)$/;"	f	class:SoLoud::Bus
play	thirdparty/soloud/src/core/soloud_core_basicops.cpp	/^	handle Soloud::play(AudioSource &aSound, float aVolume, float aPan, bool aPaused, unsigned int aBus)$/;"	f	class:SoLoud::Soloud
play3d	thirdparty/soloud/src/core/soloud_bus.cpp	/^	handle Bus::play3d(AudioSource &aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, bool aPaused)$/;"	f	class:SoLoud::Bus
play3d	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	handle Soloud::play3d(AudioSource &aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, bool aPaused, unsigned int aBus)$/;"	f	class:SoLoud::Soloud
play3dClocked	thirdparty/soloud/src/core/soloud_bus.cpp	/^	handle Bus::play3dClocked(time aSoundTime, AudioSource &aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume)$/;"	f	class:SoLoud::Bus
play3dClocked	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	handle Soloud::play3dClocked(time aSoundTime, AudioSource &aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, unsigned int aBus)$/;"	f	class:SoLoud::Soloud
playAddress	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.h	/^	unsigned int playAddress;$/;"	m	class:CbmTune
playBackground	thirdparty/soloud/src/core/soloud_core_basicops.cpp	/^	handle Soloud::playBackground(AudioSource &aSound, float aVolume, bool aPaused, unsigned int aBus)$/;"	f	class:SoLoud::Soloud
playClocked	thirdparty/soloud/src/core/soloud_bus.cpp	/^	handle Bus::playClocked(time aSoundTime, AudioSource &aSound, float aVolume, float aPan)$/;"	f	class:SoLoud::Bus
playClocked	thirdparty/soloud/src/core/soloud_core_basicops.cpp	/^	handle Soloud::playClocked(time aSoundTime, AudioSource &aSound, float aVolume, float aPan, unsigned int aBus)$/;"	f	class:SoLoud::Soloud
playState	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^static int playState = 1;$/;"	v	file:
playbackSpeed	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int playbackSpeed;$/;"	m	class:TED
player	app/perils/src/game/actor_kinematic.hpp	/^  ROA::Audio_player player;$/;"	m	struct:Game::Actor_kinematic
playerCode	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	unsigned char *playerCode;$/;"	m	struct:PsidHeader
playerLength	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	unsigned int *playerLength;$/;"	m	struct:PsidHeader
playerStartAddress	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^static const unsigned int playerStartAddress = 0xfe00;$/;"	v	file:
player_update	lib/nil_aspects/src/so_loud.cpp	/^player_update(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::SoLoud_Aspect
playing_sample	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		bool playing_sample;$/;"	m	class:SoLoud::SfxrInstance
plot_diff	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^void plot_diff(const char *aFilename, int aSampleCount, int aHeight, float *aSrc1, float *aSrc2, int aColor1, int aColor2, int aBgColor, int aGridColor)$/;"	f
pluralise	thirdparty/catch/include/catch/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
plus4hi	thirdparty/soloud/src/tools/tedsid2dump/roms.h	/^unsigned char plus4hi[]={$/;"	v
plus4lo	thirdparty/soloud/src/tools/tedsid2dump/roms.h	/^unsigned char plus4lo[]={$/;"	v
pointSizeGranularity	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                 pointSizeGranularity;$/;"	m	struct:VkPhysicalDeviceLimits
pointSizeRange	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                 pointSizeRange[2];$/;"	m	struct:VkPhysicalDeviceLimits
point_compare	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int STBV_CDECL point_compare(const void *p, const void *q)$/;"	f	file:
point_compare	thirdparty/stb/include/stb/stb_vorbis.c	/^static int STBV_CDECL point_compare(const void *p, const void *q)$/;"	f	file:
point_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polygon
point_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polygon_filled
point_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polyline
pointer	thirdparty/glfw/src/wl_platform.h	/^    struct wl_pointer*          pointer;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::wl_pointer
pointerConstraints	thirdparty/glfw/src/wl_platform.h	/^    struct zwp_pointer_constraints_v1*      pointerConstraints;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::zwp_pointer_constraints_v1
pointerFocus	thirdparty/glfw/src/wl_platform.h	/^    _GLFWwindow*                pointerFocus;$/;"	m	struct:_GLFWlibraryWayland
pointerHandleAxis	thirdparty/glfw/src/wl_init.c	/^static void pointerHandleAxis(void* data,$/;"	f	file:
pointerHandleButton	thirdparty/glfw/src/wl_init.c	/^static void pointerHandleButton(void* data,$/;"	f	file:
pointerHandleEnter	thirdparty/glfw/src/wl_init.c	/^static void pointerHandleEnter(void* data,$/;"	f	file:
pointerHandleLeave	thirdparty/glfw/src/wl_init.c	/^static void pointerHandleLeave(void* data,$/;"	f	file:
pointerHandleMotion	thirdparty/glfw/src/wl_init.c	/^static void pointerHandleMotion(void* data,$/;"	f	file:
pointerListener	thirdparty/glfw/src/wl_init.c	/^static const struct wl_pointer_listener pointerListener = {$/;"	v	typeref:struct:wl_pointer_listener	file:
pointerLock	thirdparty/glfw/src/wl_platform.h	/^    } pointerLock;$/;"	m	struct:_GLFWwindowWayland	typeref:struct:_GLFWwindowWayland::__anon143
pointerSerial	thirdparty/glfw/src/wl_platform.h	/^    uint32_t                    pointerSerial;$/;"	m	struct:_GLFWlibraryWayland
points	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polygon	typeref:struct:nk_command_polygon::nk_vec2i
points	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_command_polygon_filled::nk_vec2i
points	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polyline	typeref:struct:nk_command_polyline::nk_vec2i
pollAbsState	thirdparty/glfw/src/linux_joystick.c	/^static void pollAbsState(_GLFWjoystick* js)$/;"	f	file:
polygonMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPolygonMode                              polygonMode;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
pool	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_allocator pool;$/;"	m	struct:nk_buffer	typeref:struct:nk_buffer::nk_allocator
pool	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_pool pool;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_pool
poolSizeCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                       poolSizeCount;$/;"	m	struct:VkDescriptorPoolCreateInfo
poolWorker	thirdparty/soloud/src/core/soloud_thread.cpp	/^		static void poolWorker(void *aParam)$/;"	f	namespace:SoLoud::Thread
pop_back	lib/lib/include/lib/array.hpp	/^  pop_back()$/;"	f	class:LIB_NS_NAME::array
pop_back	thirdparty/imgui/include/imgui/imgui.h	/^    inline void                 pop_back()                      { IM_ASSERT(Size > 0); Size--; }$/;"	f	class:ImVector
popup	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_popup_state popup;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_popup_state
popup_border	thirdparty/glfw/src/deps/nuklear.h	/^    float popup_border;$/;"	m	struct:nk_style_window
popup_border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color popup_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
popup_buffer	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_popup_buffer popup_buffer;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_popup_buffer
popup_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 popup_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
port	thirdparty/remotery/include/remotery/Remotery.h	/^    rmtU16 port;$/;"	m	struct:rmtSettings
port	thirdparty/remotery/src/Remotery.c	/^    rmtU16 port;$/;"	m	struct:__anon65	file:
port	thirdparty/soloud/src/backend/vita_homebrew/soloud_vita_homebrew.cpp	/^		int port;$/;"	m	struct:SoLoud::VitaData	file:
portaudio_callback	thirdparty/soloud/src/backend/portaudio/soloud_portaudio.cpp	/^	static int portaudio_callback( $/;"	f	namespace:SoLoud
portaudio_init	thirdparty/soloud/src/backend/portaudio/soloud_portaudio.cpp	/^	result portaudio_init(SoLoud::Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
portaudio_init	thirdparty/soloud/src/backend/portaudio/soloud_portaudio.cpp	/^	result portaudio_init(SoLoud::Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer, unsigned int aChannels)$/;"	f	namespace:SoLoud
portaudio_mutex_lock	thirdparty/soloud/src/backend/portaudio/soloud_portaudio.cpp	/^	static void portaudio_mutex_lock(void * mutex)$/;"	f	namespace:SoLoud
portaudio_mutex_unlock	thirdparty/soloud/src/backend/portaudio/soloud_portaudio.cpp	/^	static void portaudio_mutex_unlock(void * mutex)$/;"	f	namespace:SoLoud
pos	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 pos;$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_vec2
pos	thirdparty/glfw/src/internal.h	/^        GLFWwindowposfun        pos;$/;"	m	struct:_GLFWwindow::__anon162
pos	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2  pos;$/;"	m	struct:ImDrawVert
pos	thirdparty/soloud/src/core/soloud_file.cpp	/^	unsigned int DiskFile::pos()$/;"	f	class:SoLoud::DiskFile
pos	thirdparty/soloud/src/core/soloud_file.cpp	/^	unsigned int MemoryFile::pos()$/;"	f	class:SoLoud::MemoryFile
pose_classes	lib/nil_aspects/include/aspect/renderer_aspect.hpp	/^  lib::array<char> pose_classes;$/;"	m	struct:Nil_ext::ROV_Aspect::Data
position	lib/math/include/math/geometry/geometry_types.hpp	/^  MATH_NS_NAME::vec3 position;$/;"	m	struct:plane
position	lib/math/include/math/transform/transform_types.hpp	/^  vec3     position;$/;"	m	struct:transform
position	lib/nil/include/nil/data/camera.hpp	/^  float position[3];$/;"	m	struct:Nil::Data::Camera
position	lib/nil/include/nil/data/light.hpp	/^  float position[3];$/;"	m	struct:Nil::Data::Light
position	lib/nil/include/nil/data/mouse.hpp	/^  int32_t position[2];$/;"	m	struct:Nil::Data::Mouse
position	lib/nil/include/nil/data/transform.hpp	/^  float position[3];$/;"	m	struct:Nil::Data::Transform
position	lib/rov/include/rov/rov.hpp	/^  rovVec4 position;     \/\/ x, y, z, type$/;"	m	struct:rovLight
position	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    float position[2];$/;"	m	struct:nk_glfw_vertex
position	thirdparty/imguizmo/src/ImGuizmo.cpp	/^            vec_t right, up, dir, position;$/;"	m	struct:ImGuizmo::matrix_t::__anon140::__anon141	file:
position_vec3	lib/nil/include/nil/resource/mesh.hpp	/^  float       *position_vec3;       \/\/ Internally copied$/;"	m	struct:Nil_mesh
post_render_task_count	lib/nil/src/internal_data/internal_data.hpp	/^  size_t                post_render_task_count;$/;"	m	struct:Nil_ctx
post_render_tasks	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_gpu_task          post_render_tasks[NIL_MAX_GPU_TASK_QUEUE];$/;"	m	struct:Nil_ctx
postinit	thirdparty/soloud/src/core/soloud.cpp	/^	void Soloud::postinit(unsigned int aSamplerate, unsigned int aBufferSize, unsigned int aFlags, unsigned int aChannels)$/;"	f	class:SoLoud::Soloud
povCount	thirdparty/glfw/src/win32_joystick.c	/^    int                     povCount;$/;"	m	struct:_GLFWobjenumWin32	file:
powerState	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDisplayPowerStateEXT    powerState;$/;"	m	struct:VkDisplayPowerInfoEXT
ppEnabledExtensionNames	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const char* const*                 ppEnabledExtensionNames;$/;"	m	struct:VkDeviceCreateInfo
ppEnabledExtensionNames	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const char* const*          ppEnabledExtensionNames;$/;"	m	struct:VkInstanceCreateInfo
ppEnabledLayerNames	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const char* const*                 ppEnabledLayerNames;$/;"	m	struct:VkDeviceCreateInfo
ppEnabledLayerNames	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    const char* const*          ppEnabledLayerNames;$/;"	m	struct:VkInstanceCreateInfo
prddr	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char prp, prddr;$/;"	m	class:TED
preTransform	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSurfaceTransformFlagBitsKHR    preTransform;$/;"	m	struct:VkSwapchainCreateInfoKHR
pre_render_task_count	lib/nil/src/internal_data/internal_data.hpp	/^  size_t                pre_render_task_count;$/;"	m	struct:Nil_ctx
pre_render_tasks	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_gpu_task          pre_render_tasks[NIL_MAX_GPU_TASK_QUEUE];$/;"	m	struct:Nil_ctx
predict_point	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int predict_point(int x, int x0, int x1, int y0, int y1)$/;"	f	file:
predict_point	thirdparty/stb/include/stb/stb_vorbis.c	/^static int predict_point(int x, int x0, int x1, int y0, int y1)$/;"	f	file:
preferred_x	thirdparty/glfw/src/deps/nuklear.h	/^    float preferred_x;$/;"	m	struct:nk_text_edit
preferred_x	thirdparty/stb/include/stb/stb_textedit.h	/^   float preferred_x; \/\/ this determines where the cursor up\/down tries to seek to along x$/;"	m	struct:__anon132
prefix	thirdparty/glfw/src/egl_context.h	/^    GLFWbool        prefix;$/;"	m	struct:_GLFWlibraryEGL
prefix	thirdparty/stb/include/stb/stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anon91
prep_huffman	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static __forceinline void prep_huffman(vorb *f)$/;"	f	file:
prep_huffman	thirdparty/stb/include/stb/stb_vorbis.c	/^static __forceinline void prep_huffman(vorb *f)$/;"	f	file:
present	thirdparty/glfw/src/internal.h	/^    GLFWbool        present;$/;"	m	struct:_GLFWjoystick
presentMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPresentModeKHR                 presentMode;$/;"	m	struct:VkSwapchainCreateInfoKHR
preserveAttachmentCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                        preserveAttachmentCount;$/;"	m	struct:VkSubpassDescription
pressed	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item pressed;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
pressed_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item pressed_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
prev	thirdparty/glfw/src/deps/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_edit_state
prev	thirdparty/glfw/src/deps/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_property_state
prev	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_page_element *prev;$/;"	m	struct:nk_page_element	typeref:struct:nk_page_element::nk_page_element
prev	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_table *next, *prev;$/;"	m	struct:nk_table	typeref:struct:nk_table::
prev	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 prev;$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_vec2
prev	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_window *prev;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_window
prev_first	thirdparty/glfw/src/deps/nuklear.h	/^   int prev_first;  \/*_ first char of previous row *\/$/;"	m	struct:nk_text_find
prev_first	thirdparty/stb/include/stb/stb_textedit.h	/^   int prev_first;  \/\/ first char of previous row$/;"	m	struct:__anon134
prev_link	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rp_node **prev_link;$/;"	m	struct:nk_rp__findresult	typeref:struct:nk_rp__findresult::nk_rp_node
prev_link	thirdparty/stb/include/stb/stb_rect_pack.h	/^   stbrp_node **prev_link;$/;"	m	struct:__anon95
previousMode	thirdparty/glfw/src/cocoa_platform.h	/^    CGDisplayModeRef    previousMode;$/;"	m	struct:_GLFWmonitorNS
previous_length	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int previous_length;$/;"	m	struct:stb_vorbis	file:
previous_length	thirdparty/stb/include/stb/stb_vorbis.c	/^   int previous_length;$/;"	m	struct:stb_vorbis	file:
previous_window	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   float *previous_window[STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	file:
previous_window	thirdparty/stb/include/stb/stb_vorbis.c	/^   float *previous_window[STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	file:
prgPlayer	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^static unsigned char prgPlayer[] = {$/;"	v	file:
primitiveRestartEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                                   primitiveRestartEnable;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo
print	lib/lib/include/lib/nyaml.hpp	/^print(std::string &output, const node *expor_node, int indent)$/;"	f	namespace:LIB_NS_NAME::nyaml::detail
printHeader	thirdparty/soloud/src/tools/tedsid2dump/main.cpp	/^static void printHeader()$/;"	f	file:
printPsidInfo	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void printPsidInfo(PsidHeader &psidHdr_)$/;"	f
printUsage	thirdparty/soloud/src/tools/tedsid2dump/main.cpp	/^static void printUsage()$/;"	f	file:
priority	lib/nil/include/nil/data/camera.hpp	/^  int32_t priority;$/;"	m	struct:Nil::Data::Camera
process	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^void CPU::process()$/;"	f	class:CPU
process	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void process(int ticks)$/;"	f
processEvent	thirdparty/glfw/src/x11_window.c	/^static void processEvent(XEvent *event)$/;"	f	file:
process_event_lists	lib/nil/src/interface/data/common.hpp	/^  process_event_lists()$/;"	f	struct:Nil::Data::Generic_data
profile	thirdparty/glfw/src/internal.h	/^    int                 profile;$/;"	m	struct:_GLFWcontext
profile	thirdparty/glfw/src/internal.h	/^    int           profile;$/;"	m	struct:_GLFWctxconfig
proggy_clean_ttf_compressed_data_base85	thirdparty/imgui/src/imgui_draw.cpp	/^static const char proggy_clean_ttf_compressed_data_base85[11980+1] =$/;"	v	file:
program	lib/nau/src/renderer/opengl3.cpp	/^  GLuint program;$/;"	m	struct:__anon43::nau_gl3_renderer	file:
program	lib/rov/src/ogl/rov_gl.hpp	/^  GLuint program;$/;"	m	struct:ROV_Internal::rovGLLineProgram
program	lib/rov/src/ogl/rov_gl.hpp	/^  GLuint program;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
progress	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_progress progress;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_progress
progressive	thirdparty/stb/include/stb/stb_image.h	/^   int            progressive;$/;"	m	struct:__anon81
proj	lib/rov/src/rov_data.hpp	/^  rovMat4 proj;$/;"	m	struct:ROV_Internal::rovRenderPass
properties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPhysicalDeviceProperties    properties;$/;"	m	struct:VkPhysicalDeviceProperties2KHR
properties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSparseImageFormatProperties    properties;$/;"	m	struct:VkSparseImageFormatProperties2KHR
property	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_property_state property;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_property_state
property	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_property property;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_property
propertyFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkMemoryPropertyFlags    propertyFlags;$/;"	m	struct:VkMemoryType
protectedPlayerMemory	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char protectedPlayerMemory[0x1000];$/;"	m	class:TED
prp	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char prp, prddr;$/;"	m	class:TED
psidChangeTrack	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^bool psidChangeTrack(int direction)$/;"	f
psidFormat	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	bool psidFormat;$/;"	m	class:TED
psidHdr	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^static PsidHeader psidHdr;$/;"	v	file:
psidPlayer	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^static unsigned char psidPlayer[] = {$/;"	v	file:
psidReplayAddr	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int psidReplayAddr;$/;"	m	class:TED
ptr	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	m	struct:nk_memory
ptr	thirdparty/glfw/src/deps/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	m	union:__anon168
ptr	thirdparty/remotery/src/Remotery.c	/^    rmtU8* ptr;$/;"	m	struct:VirtualMirrorBuffer	file:
ptr	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned int  ptr;$/;"	m	class:CPU
publicAdapterName	thirdparty/glfw/src/win32_platform.h	/^    char                publicAdapterName[64];$/;"	m	struct:_GLFWmonitorWin32
publicDisplayName	thirdparty/glfw/src/win32_platform.h	/^    char                publicDisplayName[64];$/;"	m	struct:_GLFWmonitorWin32
pull	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	14;"	d	file:
punct_rules	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static Rule punct_rules[] =$/;"	v	file:
push	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	13;"	d	file:
pushConstantRangeCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                        pushConstantRangeCount;$/;"	m	struct:VkPipelineLayoutCreateInfo
push_back	lib/lib/include/lib/array.hpp	/^  push_back(T &&item)$/;"	f	class:LIB_NS_NAME::array
push_back	lib/lib/include/lib/array.hpp	/^  push_back(const T &item)$/;"	f	class:LIB_NS_NAME::array
push_back	thirdparty/imgui/include/imgui/imgui.h	/^    inline void                 push_back(const value_type& v)  { if (Size == Capacity) reserve(_grow_capacity(Size+1)); Data[Size++] = v; }$/;"	f	class:ImVector
push_mode	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8  push_mode;$/;"	m	struct:stb_vorbis	file:
push_mode	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8  push_mode;$/;"	m	struct:stb_vorbis	file:
put	thirdparty/soloud/src/audiosource/speech/darray.cpp	/^void darray::put(int aData)$/;"	f	class:darray
pvertices	thirdparty/stb/include/stb/stb_truetype.h	/^   stbtt_vertex *pvertices;$/;"	m	struct:__anon110
pw	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned short pw;		\/\/ pulse-width value$/;"	m	class:SIDsound::SIDVoice
pw	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned short pw;		\/\/ pulse-width value$/;"	m	class:SIDsound::SIDVoice
quadMax	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const float quadMax = 0.8f;$/;"	m	namespace:ImGuizmo	file:
quadMin	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const float quadMin = 0.5f;$/;"	m	namespace:ImGuizmo	file:
quadUV	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const float quadUV[8] = { quadMin, quadMin, quadMin, quadMax, quadMax, quadMax, quadMax, quadMin };$/;"	m	namespace:ImGuizmo	file:
quantize	thirdparty/soloud/src/tools/tedsid2dump/main.cpp	/^int quantize = 0;$/;"	v
quart_tau	lib/math/include/math/general/constants.hpp	/^MATH_CONST_CONSTEXPR float           quart_tau()   { return half_pi();       }$/;"	f
quat	lib/math/include/math/quat/quat_types.hpp	/^struct quat$/;"	s
quat	thirdparty/glfw/src/deps/linmath.h	/^typedef float quat[4];$/;"	t
quat_add	thirdparty/glfw/src/deps/linmath.h	/^static inline void quat_add(quat r, quat a, quat b)$/;"	f
quat_conj	thirdparty/glfw/src/deps/linmath.h	/^static inline void quat_conj(quat r, quat q)$/;"	f
quat_conjugate	lib/math/include/math/quat/quat.hpp	/^quat_conjugate(const quat to_conj)$/;"	f
quat_from_mat4x4	thirdparty/glfw/src/deps/linmath.h	/^static inline void quat_from_mat4x4(quat q, mat4x4 M)$/;"	f
quat_get	lib/math/include/math/quat/quat.hpp	/^quat_get(const quat quat, const uint32_t i)$/;"	f
quat_get_rotation_matrix	lib/math/include/math/quat/quat.hpp	/^quat_get_rotation_matrix(const quat to_mat3)$/;"	f
quat_get_w	lib/math/include/math/quat/quat.hpp	/^quat_get_w(const quat quat)$/;"	f
quat_get_x	lib/math/include/math/quat/quat.hpp	/^quat_get_x(const quat quat)$/;"	f
quat_get_y	lib/math/include/math/quat/quat.hpp	/^quat_get_y(const quat quat)$/;"	f
quat_get_z	lib/math/include/math/quat/quat.hpp	/^quat_get_z(const quat quat)$/;"	f
quat_identity	thirdparty/glfw/src/deps/linmath.h	/^static inline void quat_identity(quat q)$/;"	f
quat_init	lib/math/include/math/quat/quat.hpp	/^quat_init()$/;"	f
quat_init	lib/math/include/math/quat/quat.hpp	/^quat_init(const float data[4])$/;"	f
quat_init	lib/math/include/math/quat/quat.hpp	/^quat_init(const float x, const float y, const float z, const float w)$/;"	f
quat_init_with_axis_angle	lib/math/include/math/quat/quat.hpp	/^quat_init_with_axis_angle(const float x, const float y, const float z, const float theta_radians)$/;"	f
quat_init_with_axis_angle	lib/math/include/math/quat/quat.hpp	/^quat_init_with_axis_angle(const vec3 axis, const float theta_radians)$/;"	f
quat_init_with_euler_angles	lib/math/include/math/quat/quat.hpp	/^quat_init_with_euler_angles(const float pitch_radians, const float yaw_radians, const float roll_radians)$/;"	f
quat_init_with_mat3	lib/math/include/math/quat/quat.hpp	/^quat_init_with_mat3(const mat3 &mat)$/;"	f
quat_inner_product	thirdparty/glfw/src/deps/linmath.h	/^static inline float quat_inner_product(quat a, quat b)$/;"	f
quat_is_near	lib/math/include/math/quat/quat.hpp	/^quat_is_near(const quat a, const quat b, float err)$/;"	f
quat_length	lib/math/include/math/quat/quat.hpp	/^quat_length(const quat to_length)$/;"	f
quat_mul	thirdparty/glfw/src/deps/linmath.h	/^static inline void quat_mul(quat r, quat p, quat q)$/;"	f
quat_mul_vec3	thirdparty/glfw/src/deps/linmath.h	/^static inline void quat_mul_vec3(vec3 r, quat q, vec3 v)$/;"	f
quat_multiply	lib/math/include/math/quat/quat.hpp	/^quat_multiply(const quat a, const quat b, const quat c)$/;"	f
quat_multiply	lib/math/include/math/quat/quat.hpp	/^quat_multiply(const quat left, const quat right)$/;"	f
quat_norm	thirdparty/glfw/src/deps/linmath.h	483;"	d
quat_normalize	lib/math/include/math/quat/quat.hpp	/^quat_normalize(const quat to_normalize)$/;"	f
quat_rotate	thirdparty/glfw/src/deps/linmath.h	/^static inline void quat_rotate(quat r, float angle, vec3 axis) {$/;"	f
quat_rotate_point	lib/math/include/math/quat/quat.hpp	/^quat_rotate_point(const quat rotation, const vec3 point)$/;"	f
quat_scale	thirdparty/glfw/src/deps/linmath.h	/^static inline void quat_scale(quat r, quat v, float s)$/;"	f
quat_sub	thirdparty/glfw/src/deps/linmath.h	/^static inline void quat_sub(quat r, quat a, quat b)$/;"	f
quat_to_array	lib/math/include/math/quat/quat.hpp	/^quat_to_array(const quat to_array, float out[4])$/;"	f
queries	thirdparty/remotery/src/Remotery.c	/^    GLuint queries[2];$/;"	m	struct:OpenGLTimestamp	file:
query	thirdparty/glfw/src/deps/nuklear.h	/^    nk_query_font_glyph_f query;$/;"	m	struct:nk_user_font
queryCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         queryCount;$/;"	m	struct:VkQueryPoolCreateInfo
queryFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkQueryControlFlags              queryFlags;$/;"	m	struct:VkCommandBufferInheritanceInfo
queryType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkQueryType                      queryType;$/;"	m	struct:VkQueryPoolCreateInfo
query_disjoint	thirdparty/remotery/src/Remotery.c	/^    ID3D11Query* query_disjoint;$/;"	m	struct:D3D11Timestamp	file:
query_end	thirdparty/remotery/src/Remotery.c	/^    ID3D11Query* query_end;$/;"	m	struct:D3D11Timestamp	file:
query_start	thirdparty/remotery/src/Remotery.c	/^    ID3D11Query* query_start;$/;"	m	struct:D3D11Timestamp	file:
queueCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                    queueCount;$/;"	m	struct:VkDeviceQueueCreateInfo
queueCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t        queueCount;$/;"	m	struct:VkQueueFamilyProperties
queueCreateInfoCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                           queueCreateInfoCount;$/;"	m	struct:VkDeviceCreateInfo
queueFamilyIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                    queueFamilyIndex;$/;"	m	struct:VkCommandPoolCreateInfo
queueFamilyIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                    queueFamilyIndex;$/;"	m	struct:VkDeviceQueueCreateInfo
queueFamilyIndexCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         queueFamilyIndexCount;$/;"	m	struct:VkSwapchainCreateInfoKHR
queueFamilyIndexCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                 queueFamilyIndexCount;$/;"	m	struct:VkImageCreateInfo
queueFamilyIndexCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t               queueFamilyIndexCount;$/;"	m	struct:VkBufferCreateInfo
queueFamilyProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkQueueFamilyProperties    queueFamilyProperties;$/;"	m	struct:VkQueueFamilyProperties2KHR
queueFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkQueueFlags    queueFlags;$/;"	m	struct:VkQueueFamilyProperties
quit_signal	lib/nil/src/internal_data/internal_data.hpp	/^  bool                  quit_signal;$/;"	m	struct:Nil_ctx
r	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short r;$/;"	m	struct:nk_command_arc
r	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short r;$/;"	m	struct:nk_command_arc_filled
r	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color
r	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf
r	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkComponentSwizzle    r;$/;"	m	struct:VkComponentMapping
ramptr	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *scrptr, *endptr, *ramptr;$/;"	m	class:TED
rand	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	unsigned int Prg::rand()$/;"	f	class:SoLoud::Prg
rand_range	lib/math/include/math/general/general.hpp	/^rand_range(const float start, const float end)$/;"	f
rand_range	lib/math/include/math/general/general.hpp	/^rand_range(const int32_t start, const int32_t end)$/;"	f
rand_range	lib/math/include/math/general/general.hpp	/^rand_range(const uint32_t start, const uint32_t end)$/;"	f
randr	thirdparty/glfw/src/x11_platform.h	/^    } randr;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon145
range	thirdparty/glfw/src/deps/nuklear.h	/^    const nk_rune *range;$/;"	m	struct:nk_font_config
range	thirdparty/glfw/src/deps/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot
range	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize               range;$/;"	m	struct:VkBufferViewCreateInfo
range	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize    range;$/;"	m	struct:VkDescriptorBufferInfo
range_count	thirdparty/glfw/src/deps/nuklear.h	/^    nk_rune range_count;$/;"	m	struct:nk_font_bake_data
rangebits	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 rangebits;$/;"	m	struct:__anon205	file:
rangebits	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 rangebits;$/;"	m	struct:__anon118	file:
ranges	thirdparty/glfw/src/deps/nuklear.h	/^    const nk_rune *ranges;$/;"	m	struct:nk_baked_font
ranges	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_tt_pack_range *ranges;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_font_bake_data::nk_tt_pack_range
ranges	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_tt_pack_range *ranges;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_tt_pack_range
rasterizationOrder	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkRasterizationOrderAMD    rasterizationOrder;$/;"	m	struct:VkPipelineRasterizationStateRasterizationOrderAMD
rasterizationSamples	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlagBits                    rasterizationSamples;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
rasterizer	lib/rov/src/rov_data.hpp	/^  rovRasterizer rasterizer;$/;"	m	struct:ROV_Internal::rovRenderPass
rasterizerDiscardEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                                   rasterizerDiscardEnable;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
rate	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint16 rate;$/;"	m	struct:__anon204	file:
rate	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint16 rate;$/;"	m	struct:__anon117	file:
ratio	thirdparty/glfw/src/deps/nuklear.h	/^    const float *ratio;$/;"	m	struct:nk_row_layout
ratio	thirdparty/stb/include/stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon92
rawInput	thirdparty/glfw/src/win32_platform.h	/^    RAWINPUT*           rawInput;$/;"	m	struct:_GLFWlibraryWin32
rawInputSize	thirdparty/glfw/src/win32_platform.h	/^    int                 rawInputSize;$/;"	m	struct:_GLFWlibraryWin32
rawMemoryToString	thirdparty/catch/include/catch/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
raw_coeff	thirdparty/stb/include/stb/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon81::__anon82
raw_data	thirdparty/stb/include/stb/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon81::__anon82
ray	lib/math/include/math/geometry/geometry_types.hpp	/^struct ray$/;"	s
ray_direction	lib/math/include/math/geometry/ray.hpp	/^ray_direction(const ray &ray)$/;"	f
ray_from_perpective_viewport	lib/math/include/math/geometry/ray.hpp	/^ray_from_perpective_viewport($/;"	f
ray_init	lib/math/include/math/geometry/ray.hpp	/^ray_init()$/;"	f
ray_init	lib/math/include/math/geometry/ray.hpp	/^ray_init(const float start[3], const float end[3])$/;"	f
ray_init	lib/math/include/math/geometry/ray.hpp	/^ray_init(const vec3 start, const vec3 end)$/;"	f
ray_inverse	lib/math/include/math/geometry/ray.hpp	/^ray_inverse(const ray &ray)$/;"	f
ray_is_near	lib/math/include/math/geometry/ray.hpp	/^ray_is_near(const ray &a, const ray &b, const float error)$/;"	f
ray_length	lib/math/include/math/geometry/ray.hpp	/^ray_length(const ray &ray)$/;"	f
ray_test_aabb	lib/math/include/math/geometry/ray.hpp	/^ray_test_aabb(const ray &in_ray, const aabb &box)$/;"	f
ray_test_closest_edge	lib/math/include/math/geometry/ray.hpp	/^ray_test_closest_edge(const float tris[], const size_t tri_count, const vec3 point, vec3 &seg_a, vec3 &seg_b)$/;"	f
ray_test_plane	lib/math/include/math/geometry/ray.hpp	/^ray_test_plane(const ray &in_ray, const plane &target, float *out_distance)$/;"	f
ray_test_triangles	lib/math/include/math/geometry/ray.hpp	/^ray_test_triangles($/;"	f
rcCalloutRect	thirdparty/glfw/src/deps/mingw/dinput.h	/^	RECT	rcCalloutRect;$/;"	m	struct:_DIDEVICEIMAGEINFOA
rcCalloutRect	thirdparty/glfw/src/deps/mingw/dinput.h	/^	RECT	rcCalloutRect;$/;"	m	struct:_DIDEVICEIMAGEINFOW
rcOverlay	thirdparty/glfw/src/deps/mingw/dinput.h	/^	RECT	rcOverlay;$/;"	m	struct:_DIDEVICEIMAGEINFOA
rcOverlay	thirdparty/glfw/src/deps/mingw/dinput.h	/^	RECT	rcOverlay;$/;"	m	struct:_DIDEVICEIMAGEINFOW
read	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^unsigned char SIDsound::read(unsigned int adr)$/;"	f	class:SIDsound
read	thirdparty/soloud/src/core/soloud_file.cpp	/^	unsigned int DiskFile::read(unsigned char *aDst, unsigned int aBytes)$/;"	f	class:SoLoud::DiskFile
read	thirdparty/soloud/src/core/soloud_file.cpp	/^	unsigned int MemoryFile::read(unsigned char *aDst, unsigned int aBytes)$/;"	f	class:SoLoud::MemoryFile
read	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^unsigned char SIDsound::read(unsigned int adr)$/;"	f	class:SIDsound
read	thirdparty/stb/include/stb/stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  return number of bytes actually read$/;"	m	struct:__anon75
read16	thirdparty/soloud/src/core/soloud_file.cpp	/^	unsigned int File::read16()$/;"	f	class:SoLoud::File
read32	thirdparty/soloud/src/core/soloud_file.cpp	/^	unsigned int File::read32()$/;"	f	class:SoLoud::File
read8	thirdparty/soloud/src/core/soloud_file.cpp	/^	unsigned int File::read8()$/;"	f	class:SoLoud::File
readDMA	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char readDMA(unsigned int addr) { return Ram[addr]; }$/;"	f	class:TED
readFile	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^unsigned int readFile(char *fName, unsigned char **bufferPtr, size_t *bLen)$/;"	f
readPsid16	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^inline unsigned short readPsid16(const unsigned char *p, int offset)$/;"	f
readPsid32	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^inline unsigned int readPsid32(const unsigned char *p, int offset)$/;"	f
read_from_callbacks	thirdparty/stb/include/stb/stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anon76
read_pos	thirdparty/remotery/src/Remotery.c	/^    rmtU32 read_pos;$/;"	m	struct:rmtMessageQueue	file:
ready	thirdparty/remotery/src/Remotery.c	/^    rmtBool ready;$/;"	m	struct:MetalTimestamp	file:
realloc	thirdparty/remotery/include/remotery/Remotery.h	/^    rmtReallocPtr realloc;$/;"	m	struct:rmtSettings
realloc	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	568;"	d	file:
realloc	thirdparty/stb/include/stb/stb_vorbis.c	565;"	d	file:
receive_handler	thirdparty/remotery/src/Remotery.c	/^    Server_ReceiveHandler receive_handler;$/;"	m	struct:__anon65	file:
receive_handler_context	thirdparty/remotery/src/Remotery.c	/^    void* receive_handler_context;$/;"	m	struct:__anon65	file:
reconstructedExpression	thirdparty/catch/include/catch/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
rect	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkRect2D    rect;$/;"	m	struct:VkClearRect
rect_height_compare	thirdparty/stb/include/stb/stb_rect_pack.h	/^static int rect_height_compare(const void *a, const void *b)$/;"	f
rect_original_order	thirdparty/stb/include/stb/stb_rect_pack.h	/^static int rect_original_order(const void *a, const void *b)$/;"	f
rects	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rp_rect *rects;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_font_bake_data::nk_rp_rect
rects	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_rp_rect *rects;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_rp_rect
red	thirdparty/glfw/include/GLFW/glfw3.h	/^    unsigned short* red;$/;"	m	struct:GLFWgammaramp
redBits	thirdparty/glfw/include/GLFW/glfw3.h	/^    int redBits;$/;"	m	struct:GLFWvidmode
redBits	thirdparty/glfw/src/internal.h	/^    int         redBits;$/;"	m	struct:_GLFWfbconfig
redo_char_point	thirdparty/glfw/src/deps/nuklear.h	/^   short redo_char_point;$/;"	m	struct:nk_text_undo_state
redo_char_point	thirdparty/stb/include/stb/stb_textedit.h	/^   short undo_char_point, redo_char_point;$/;"	m	struct:__anon131
redo_point	thirdparty/glfw/src/deps/nuklear.h	/^   short redo_point;$/;"	m	struct:nk_text_undo_state
redo_point	thirdparty/stb/include/stb/stb_textedit.h	/^   short undo_point, redo_point;$/;"	m	struct:__anon131
reference	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t       reference;$/;"	m	struct:VkStencilOpState
refresh	thirdparty/glfw/src/internal.h	/^        GLFWwindowrefreshfun    refresh;$/;"	m	struct:_GLFWwindow::__anon162
refreshRate	thirdparty/glfw/include/GLFW/glfw3.h	/^    int refreshRate;$/;"	m	struct:GLFWvidmode
refreshRate	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t      refreshRate;$/;"	m	struct:VkDisplayModeParametersKHR
refreshRate	thirdparty/glfw/src/internal.h	/^        int             refreshRate;$/;"	m	struct:_GLFWlibrary::__anon163
refreshVideoModes	thirdparty/glfw/src/monitor.c	/^static GLFWbool refreshVideoModes(_GLFWmonitor* monitor)$/;"	f	file:
regex	thirdparty/glfw/src/linux_joystick.h	/^    regex_t                 regex;$/;"	m	struct:_GLFWlibraryLinux
region	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image
registry	thirdparty/glfw/src/wl_platform.h	/^    struct wl_registry*         registry;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::wl_registry
registryHandleGlobal	thirdparty/glfw/src/wl_init.c	/^static void registryHandleGlobal(void* data,$/;"	f	file:
registryHandleGlobalRemove	thirdparty/glfw/src/wl_init.c	/^static void registryHandleGlobalRemove(void *data,$/;"	f	file:
registryListener	thirdparty/glfw/src/wl_init.c	/^static const struct wl_registry_listener registryListener = {$/;"	v	typeref:struct:wl_registry_listener	file:
regwrites	thirdparty/soloud/src/tools/tedsid2dump/main.cpp	/^int regwrites = 0;$/;"	v
relativePointer	thirdparty/glfw/src/wl_platform.h	/^        struct zwp_relative_pointer_v1*    relativePointer;$/;"	m	struct:_GLFWwindowWayland::__anon143	typeref:struct:_GLFWwindowWayland::__anon143::zwp_relative_pointer_v1
relativePointerListener	thirdparty/glfw/src/wl_window.c	/^static const struct zwp_relative_pointer_v1_listener relativePointerListener = {$/;"	v	typeref:struct:zwp_relative_pointer_v1_listener	file:
relativePointerManager	thirdparty/glfw/src/wl_platform.h	/^    struct zwp_relative_pointer_manager_v1* relativePointerManager;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::zwp_relative_pointer_manager_v1
release	thirdparty/catch/include/catch/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	thirdparty/glfw/src/internal.h	/^    int                 release;$/;"	m	struct:_GLFWcontext
release	thirdparty/glfw/src/internal.h	/^    int           release;$/;"	m	struct:_GLFWctxconfig
release	thirdparty/soloud/src/core/soloud_thread.cpp	/^        void release(ThreadHandle aThreadHandle)$/;"	f	namespace:SoLoud::Thread
releaseCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                 releaseCount;$/;"	m	struct:VkWin32KeyedMutexAcquireReleaseInfoNV
releaseMonitor	thirdparty/glfw/src/win32_window.c	/^static void releaseMonitor(_GLFWwindow* window)$/;"	f	file:
releaseMonitor	thirdparty/glfw/src/x11_window.c	/^static void releaseMonitor(_GLFWwindow* window)$/;"	f	file:
remove_audio	lib/nil/src/interface/data/audio.cpp	/^remove_audio(Node &node)$/;"	f	namespace:Nil::Data
remove_bounding_box	lib/nil/src/interface/data/bounding_box.cpp	/^remove_bounding_box(Node &node)$/;"	f	namespace:Nil::Data
remove_camera	lib/nil/src/interface/data/camera.cpp	/^remove_camera(Node &node)$/;"	f	namespace:Nil::Data
remove_data	lib/nil/src/interface/data/common.hpp	/^  remove_data(const Nil::Node &node)$/;"	f	struct:Nil::Data::Generic_data
remove_data_helper	lib/nil/src/interface/data/common.hpp	/^remove_data_helper($/;"	f	namespace:Nil::Data
remove_developer	lib/nil/src/interface/data/developer.cpp	/^remove_developer(Node &node)$/;"	f	namespace:Nil::Data
remove_gamepad	lib/nil/src/interface/data/gamepad.cpp	/^remove_gamepad(Node &node)$/;"	f	namespace:Nil::Data
remove_keyboard	lib/nil/src/interface/data/keyboard.cpp	/^remove_keyboard(Node &node)$/;"	f	namespace:Nil::Data
remove_light	lib/nil/src/interface/data/light.cpp	/^remove_light(Node &node)$/;"	f	namespace:Nil::Data
remove_logic	lib/nil/src/interface/data/logic.cpp	/^remove_logic(Node &node)$/;"	f	namespace:Nil::Data
remove_mouse	lib/nil/src/interface/data/mouse.cpp	/^remove_mouse(Node &node)$/;"	f	namespace:Nil::Data
remove_renderable	lib/nil/src/interface/data/renderable.cpp	/^remove_renderable(Node &node)$/;"	f	namespace:Nil::Data
remove_renderable_text	lib/nil/src/interface/data/renderable_text.cpp	/^remove_renderable_text(Node &node)$/;"	f	namespace:Nil::Data
remove_tag	lib/nil/src/interface/node.cpp	/^Node::remove_tag(const char *tag)$/;"	f	class:Nil::Node
remove_window	lib/nil/src/interface/data/window.cpp	/^remove_window(Node &node)$/;"	f	namespace:Nil::Data
removed_bb_data	lib/nil/src/interface/data/bounding_box.cpp	/^  lib::array<Nil::Data::Bounding_box> removed_bb_data;$/;"	m	struct:__anon33::Bounding_box_data	file:
removed_bb_nodes	lib/nil/src/interface/data/bounding_box.cpp	/^  std::vector<Nil::Node>              removed_bb_nodes;$/;"	m	struct:__anon33::Bounding_box_data	file:
removed_data	lib/nil/src/interface/data/common.hpp	/^  lib::array<T>           removed_data;$/;"	m	struct:Nil::Data::Generic_data
removed_nodes	lib/nil/src/interface/data/common.hpp	/^  std::vector<Nil::Node>  removed_nodes;$/;"	m	struct:Nil::Data::Generic_data
renderArea	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkRect2D               renderArea;$/;"	m	struct:VkRenderPassBeginInfo
renderClient	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^        IAudioRenderClient *renderClient;$/;"	m	struct:SoLoud::WASAPIData	file:
renderPass	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkRenderPass                                     renderPass;$/;"	m	struct:VkGraphicsPipelineCreateInfo
renderPass	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkRenderPass                     renderPass;$/;"	m	struct:VkCommandBufferInheritanceInfo
renderPass	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkRenderPass                renderPass;$/;"	m	struct:VkFramebufferCreateInfo
renderPass	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkRenderPass           renderPass;$/;"	m	struct:VkRenderPassBeginInfo
renderSound	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	/^void TED::renderSound(unsigned int nrsamples, short *buffer)$/;"	f	class:TED
renderSound	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^void TED::renderSound(unsigned int nrsamples)$/;"	f	class:TED
render_data	lib/nil_aspects/src/imgui/imgui_aspect.cpp	/^render_data(bool *window)$/;"	f	namespace:Nil_ext::ImGui_Aspect::__anon47
render_data	lib/nil_aspects/src/imgui/imgui_data.cpp	/^render_data(Nil::Data::Audio *data)$/;"	f	namespace:Nil::ImGUI
render_data	lib/nil_aspects/src/imgui/imgui_data.cpp	/^render_data(Nil::Data::Bounding_box *data)$/;"	f	namespace:Nil::ImGUI
render_data	lib/nil_aspects/src/imgui/imgui_data.cpp	/^render_data(Nil::Data::Camera *cams, const size_t count)$/;"	f	namespace:Nil::ImGUI
render_data	lib/nil_aspects/src/imgui/imgui_data.cpp	/^render_data(Nil::Data::Camera *data)$/;"	f	namespace:Nil::ImGUI
render_data	lib/nil_aspects/src/imgui/imgui_data.cpp	/^render_data(Nil::Data::Developer *data)$/;"	f	namespace:Nil::ImGUI
render_data	lib/nil_aspects/src/imgui/imgui_data.cpp	/^render_data(Nil::Data::Light *data)$/;"	f	namespace:Nil::ImGUI
render_data	lib/nil_aspects/src/imgui/imgui_data.cpp	/^render_data(Nil::Data::Mouse *data)$/;"	f	namespace:Nil::ImGUI
render_data	lib/nil_aspects/src/imgui/imgui_data.cpp	/^render_data(Nil::Data::Renderable *data)$/;"	f	namespace:Nil::ImGUI
render_data	lib/nil_aspects/src/imgui/imgui_data.cpp	/^render_data(Nil::Data::Transform *data)$/;"	f	namespace:Nil::ImGUI
render_data	lib/nil_aspects/src/imgui/imgui_data.cpp	/^render_data(Nil::Data::Window *data)$/;"	f	namespace:Nil::ImGUI
render_data	lib/nil_aspects/src/imgui/imgui_data.hpp	/^render_data(T *data)$/;"	f	namespace:Nil::ImGUI
render_data	lib/nil_aspects/src/imgui/imgui_data.hpp	/^render_data(T *data, const size_t count)$/;"	f	namespace:Nil::ImGUI
render_data_overview	lib/nil_aspects/src/imgui/imgui_data.cpp	/^render_data_overview($/;"	f	namespace:Nil::ImGUI
render_node	lib/nil_aspects/src/imgui/imgui_aspect.cpp	/^render_node(const Nil::Node &node, Nil::Node &inspect)$/;"	f	namespace:Nil_ext::ImGui_Aspect::__anon47
render_ok	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	bool render_ok;$/;"	m	class:TED
render_resource	lib/nil_aspects/src/imgui/imgui_resource.cpp	/^render_resource(const Nil_material *rsrc, const size_t count)$/;"	f	namespace:Nil::ImGUI
render_resource	lib/nil_aspects/src/imgui/imgui_resource.cpp	/^render_resource(const Nil_mesh *rsrc, const size_t count)$/;"	f	namespace:Nil::ImGUI
render_resource	lib/nil_aspects/src/imgui/imgui_resource.cpp	/^render_resource(const Nil_shader *rsrc, const size_t count)$/;"	f	namespace:Nil::ImGUI
render_resource	lib/nil_aspects/src/imgui/imgui_resource.cpp	/^render_resource(const Nil_texture *rsrc, const size_t count)$/;"	f	namespace:Nil::ImGUI
render_resource_overview	lib/nil_aspects/src/imgui/imgui_resource.cpp	/^void render_resource_overview($/;"	f	namespace:Nil::ImGUI
render_rsrc	lib/nil_aspects/src/imgui/imgui_aspect.cpp	/^render_rsrc(bool *window)$/;"	f	namespace:Nil_ext::ImGui_Aspect::__anon47
render_target	lib/rov/src/rov_data.hpp	/^  uint32_t render_target;$/;"	m	struct:ROV_Internal::rovRenderPass
render_task_count	lib/nil/src/internal_data/internal_data.hpp	/^  size_t                render_task_count;$/;"	m	struct:Nil_ctx
render_tasks	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_gpu_task          render_tasks[NIL_MAX_GPU_TASK_QUEUE];$/;"	m	struct:Nil_ctx
renderable	lib/nau/src/nau.cpp	/^  std::vector<Nau_renderable> renderable;$/;"	m	struct:__anon42::Nau_ctx	file:
renderable_count	lib/nil/src/interface/data/renderable.cpp	/^renderable_count()$/;"	f	namespace:Nil::Data
renderable_text_count	lib/nil/src/interface/data/renderable_text.cpp	/^renderable_text_count()$/;"	f	namespace:Nil::Data
rep_limit	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		int rep_limit;$/;"	m	class:SoLoud::SfxrInstance
rep_time	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		int rep_time;$/;"	m	class:SoLoud::SfxrInstance
replayAddress	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	unsigned int replayAddress;$/;"	m	struct:PsidHeader
request_exit	thirdparty/remotery/src/Remotery.c	/^    volatile rmtBool request_exit;$/;"	m	struct:Thread_t	file:
request_state	lib/nil/include/nil/data/audio.hpp	/^  enum { NO_REQ_STATE, PLAY, STOP }          request_state;$/;"	m	struct:Nil::Data::Audio	typeref:enum:Nil::Data::Audio::__anon10
required_argument	thirdparty/glfw/src/deps/getopt.c	/^const int required_argument = 1;$/;"	v
resample	thirdparty/soloud/src/core/soloud.cpp	/^	void resample(float *aSrc,$/;"	f	namespace:SoLoud
resample	thirdparty/stb/include/stb/stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anon83
resample_catmullrom	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^void resample_catmullrom(float *aSrc,$/;"	f
resample_experiment	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^void resample_experiment(float *aSrc,$/;"	f
resample_gauss5	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^void resample_gauss5(float *aSrc,$/;"	f
resample_linear	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^void resample_linear(float *aSrc,$/;"	f
resample_pointsample	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^void resample_pointsample(float *aSrc,$/;"	f
resample_row_1	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc *resample_row_1(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
resample_row_func	thirdparty/stb/include/stb/stb_image.h	/^typedef stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,$/;"	t
resample_row_hv_2_kernel	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs);$/;"	m	struct:__anon81
resample_sinc6	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^void resample_sinc6(float *aSrc,$/;"	f
resamplername	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^char *resamplername[MAX_RESAMPLER] =$/;"	v
reserve	lib/lib/include/lib/array.hpp	/^  reserve(const size_t new_size)$/;"	f	class:LIB_NS_NAME::array
reserve	thirdparty/imgui/include/imgui/imgui.h	/^    inline void                 reserve(int new_capacity)$/;"	f	class:ImVector
reset	lib/lib/include/lib/string_pool.hpp	/^reset()$/;"	f	namespace:LIB_NS_NAME::string_pool
reset	thirdparty/catch/include/catch/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^void SIDsound::reset(void)$/;"	f	class:SIDsound
reset	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^void SIDsound::reset(void)$/;"	f	class:SIDsound
resetCycleCounter	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	void resetCycleCounter() { lastResetCycle = CycleCounter; }$/;"	f	class:TED
resetParams	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	void Sfxr::resetParams()$/;"	f	class:SoLoud::Sfxr
resetSample	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	void SfxrInstance::resetSample(bool aRestart)$/;"	f	class:SoLoud::SfxrInstance
residencyAlignedMipSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    residencyAlignedMipSize;$/;"	m	struct:VkPhysicalDeviceSparseProperties
residencyNonResidentStrict	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    residencyNonResidentStrict;$/;"	m	struct:VkPhysicalDeviceSparseProperties
residencyStandard2DBlockShape	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    residencyStandard2DBlockShape;$/;"	m	struct:VkPhysicalDeviceSparseProperties
residencyStandard2DMultisampleBlockShape	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    residencyStandard2DMultisampleBlockShape;$/;"	m	struct:VkPhysicalDeviceSparseProperties
residencyStandard3DBlockShape	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    residencyStandard3DBlockShape;$/;"	m	struct:VkPhysicalDeviceSparseProperties
residue_books	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int16 (*residue_books)[8];$/;"	m	struct:__anon207	file:
residue_books	thirdparty/stb/include/stb/stb_vorbis.c	/^   int16 (*residue_books)[8];$/;"	m	struct:__anon120	file:
residue_config	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   Residue *residue_config;$/;"	m	struct:stb_vorbis	file:
residue_config	thirdparty/stb/include/stb/stb_vorbis.c	/^   Residue *residue_config;$/;"	m	struct:stb_vorbis	file:
residue_count	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int residue_count;$/;"	m	struct:stb_vorbis	file:
residue_count	thirdparty/stb/include/stb/stb_vorbis.c	/^   int residue_count;$/;"	m	struct:stb_vorbis	file:
residue_decode	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int residue_decode(vorb *f, Codebook *book, float *target, int offset, int n, int rtype)$/;"	f	file:
residue_decode	thirdparty/stb/include/stb/stb_vorbis.c	/^static int residue_decode(vorb *f, Codebook *book, float *target, int offset, int n, int rtype)$/;"	f	file:
residue_types	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint16 residue_types[64]; \/\/ varies$/;"	m	struct:stb_vorbis	file:
residue_types	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint16 residue_types[64]; \/\/ varies$/;"	m	struct:stb_vorbis	file:
resizable	thirdparty/glfw/src/internal.h	/^    GLFWbool            resizable;$/;"	m	struct:_GLFWwindow
resizable	thirdparty/glfw/src/internal.h	/^    GLFWbool      resizable;$/;"	m	struct:_GLFWwndconfig
resize	lib/lib/include/lib/array.hpp	/^  resize(const size_t new_size)$/;"	f	class:LIB_NS_NAME::array
resize	thirdparty/imgui/include/imgui/imgui.h	/^    inline void                 resize(int new_size)            { if (new_size > Capacity) reserve(_grow_capacity(new_size)); Size = new_size; }$/;"	f	class:ImVector
resolve_fbo	lib/rov/src/ogl/rov_gl.hpp	/^  GLuint resolve_fbo;$/;"	m	struct:ROV_Internal::rovGLFramebuffer
resolve_tex	lib/rov/src/ogl/rov_gl.hpp	/^  GLuint resolve_tex;$/;"	m	struct:ROV_Internal::rovGLFramebuffer
resonanceCoeffDiv1024	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	int resonanceCoeffDiv1024;		\/\/ filter resonance * 1024$/;"	m	class:SIDsound
resonanceCoeffDiv1024	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	int resonanceCoeffDiv1024;		\/\/ filter resonance * 1024$/;"	m	class:SIDsound
resonate	thirdparty/soloud/src/audiosource/speech/resonator.cpp	/^float resonator::resonate(float input)$/;"	f	class:resonator
resonator	thirdparty/soloud/src/audiosource/speech/resonator.cpp	/^resonator::resonator()$/;"	f	class:resonator
resonator	thirdparty/soloud/src/audiosource/speech/resonator.h	/^class resonator$/;"	c
resourceOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize               resourceOffset;$/;"	m	struct:VkSparseMemoryBind
resource_update	lib/nil_aspects/src/so_loud.cpp	/^resource_update(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::SoLoud_Aspect
restart_interval	thirdparty/stb/include/stb/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon81
restoreCursorPosX	thirdparty/glfw/src/cocoa_platform.h	/^    double              restoreCursorPosX, restoreCursorPosY;$/;"	m	struct:_GLFWlibraryNS
restoreCursorPosX	thirdparty/glfw/src/win32_platform.h	/^    double              restoreCursorPosX, restoreCursorPosY;$/;"	m	struct:_GLFWlibraryWin32
restoreCursorPosX	thirdparty/glfw/src/x11_platform.h	/^    double          restoreCursorPosX, restoreCursorPosY;$/;"	m	struct:_GLFWlibraryX11
restoreCursorPosY	thirdparty/glfw/src/cocoa_platform.h	/^    double              restoreCursorPosX, restoreCursorPosY;$/;"	m	struct:_GLFWlibraryNS
restoreCursorPosY	thirdparty/glfw/src/win32_platform.h	/^    double              restoreCursorPosX, restoreCursorPosY;$/;"	m	struct:_GLFWlibraryWin32
restoreCursorPosY	thirdparty/glfw/src/x11_platform.h	/^    double          restoreCursorPosX, restoreCursorPosY;$/;"	m	struct:_GLFWlibraryX11
result	thirdparty/soloud/include/soloud/soloud.h	/^	typedef unsigned int result;$/;"	t	namespace:SoLoud
resultDisposition	thirdparty/catch/include/catch/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultType	thirdparty/catch/include/catch/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
retina	thirdparty/glfw/src/internal.h	/^        GLFWbool  retina;$/;"	m	struct:_GLFWwndconfig::__anon160
revision	thirdparty/glfw/src/internal.h	/^    int                 major, minor, revision;$/;"	m	struct:_GLFWcontext
rewind	thirdparty/soloud/src/audiosource/speech/soloud_speech.cpp	/^	result SpeechInstance::rewind()$/;"	f	class:SoLoud::SpeechInstance
rewind	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^	result WavInstance::rewind()$/;"	f	class:SoLoud::WavInstance
rewind	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	result WavStreamInstance::rewind()$/;"	f	class:SoLoud::WavStreamInstance
rewind	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	result AudioSourceInstance::rewind()$/;"	f	class:SoLoud::AudioSourceInstance
rgb	thirdparty/stb/include/stb/stb_image.h	/^   int            rgb;$/;"	m	struct:__anon81
rgbButtons	thirdparty/glfw/src/deps/mingw/dinput.h	/^	BYTE	rgbButtons[128];$/;"	m	struct:DIJOYSTATE2
rgbButtons	thirdparty/glfw/src/deps/mingw/dinput.h	/^	BYTE	rgbButtons[32];$/;"	m	struct:DIJOYSTATE
rgbButtons	thirdparty/glfw/src/deps/mingw/dinput.h	/^  BYTE rgbButtons[4];$/;"	m	struct:DIMOUSESTATE
rgbButtons	thirdparty/glfw/src/deps/mingw/dinput.h	/^  BYTE rgbButtons[8];$/;"	m	struct:DIMOUSESTATE2
rgdwAxes	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPDWORD			rgdwAxes;$/;"	m	struct:DIEFFECT
rgdwAxes	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPDWORD			rgdwAxes;$/;"	m	struct:DIEFFECT_DX5
rgdwPOV	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	rgdwPOV[4];$/;"	m	struct:DIJOYSTATE
rgdwPOV	thirdparty/glfw/src/deps/mingw/dinput.h	/^	DWORD	rgdwPOV[4];$/;"	m	struct:DIJOYSTATE2
rglASlider	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	rglASlider[2];$/;"	m	struct:DIJOYSTATE2
rglDirection	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPLONG			rglDirection;$/;"	m	struct:DIEFFECT
rglDirection	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPLONG			rglDirection;$/;"	m	struct:DIEFFECT_DX5
rglFSlider	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	rglFSlider[2];$/;"	m	struct:DIJOYSTATE2
rglForceData	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPLONG			rglForceData;$/;"	m	struct:DICUSTOMFORCE
rglSlider	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	rglSlider[2];$/;"	m	struct:DIJOYSTATE
rglSlider	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	rglSlider[2];$/;"	m	struct:DIJOYSTATE2
rglVSlider	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LONG	rglVSlider[2];$/;"	m	struct:DIJOYSTATE2
rgoAction	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPDIACTIONA	rgoAction;$/;"	m	struct:_DIACTIONFORMATA
rgoAction	thirdparty/glfw/src/deps/mingw/dinput.h	/^	LPDIACTIONW	rgoAction;$/;"	m	struct:_DIACTIONFORMATW
rgodf	thirdparty/glfw/src/deps/mingw/dinput.h	/^    LPDIOBJECTDATAFORMAT	rgodf;$/;"	m	struct:_DIDATAFORMAT
rgptCalloutLine	thirdparty/glfw/src/deps/mingw/dinput.h	/^	POINT	rgptCalloutLine[5];$/;"	m	struct:_DIDEVICEIMAGEINFOA
rgptCalloutLine	thirdparty/glfw/src/deps/mingw/dinput.h	/^	POINT	rgptCalloutLine[5];$/;"	m	struct:_DIDEVICEIMAGEINFOW
rhs	thirdparty/catch/include/catch/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
right	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color right;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_color
right	thirdparty/imguizmo/src/ImGuizmo.cpp	/^            vec_t right, up, dir, position;$/;"	m	struct:ImGuizmo::matrix_t::__anon140::__anon141	file:
rightmatch	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static int rightmatch($/;"	f	file:
ring	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int ring;		\/\/ ring modulation flag$/;"	m	class:SIDsound::SIDVoice
ring	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int ring;		\/\/ ring modulation flag$/;"	m	class:SIDsound::SIDVoice
ring_buffer	thirdparty/stb/include/stb/stb_image_resize.h	/^    float* ring_buffer;$/;"	m	struct:__anon72
ring_buffer_begin_index	thirdparty/stb/include/stb/stb_image_resize.h	/^    int ring_buffer_begin_index;    \/\/ first_scanline is at this index in the ring buffer$/;"	m	struct:__anon72
ring_buffer_first_scanline	thirdparty/stb/include/stb/stb_image_resize.h	/^    int ring_buffer_first_scanline;$/;"	m	struct:__anon72
ring_buffer_last_scanline	thirdparty/stb/include/stb/stb_image_resize.h	/^    int ring_buffer_last_scanline;$/;"	m	struct:__anon72
ring_buffer_length_bytes	thirdparty/stb/include/stb/stb_image_resize.h	/^    int ring_buffer_length_bytes;   \/\/ The length of an individual entry in the ring buffer. The total number of ring buffers is stbir__get_filter_pixel_width(filter)$/;"	m	struct:__anon72
ring_buffer_num_entries	thirdparty/stb/include/stb/stb_image_resize.h	/^    int ring_buffer_num_entries;    \/\/ Total number of entries in the ring buffer.$/;"	m	struct:__anon72
ring_buffer_size	thirdparty/stb/include/stb/stb_image_resize.h	/^    int ring_buffer_size;$/;"	m	struct:__anon72
rmtBool	thirdparty/remotery/include/remotery/Remotery.h	/^typedef unsigned int rmtBool;$/;"	t
rmtCUDABind	thirdparty/remotery/include/remotery/Remotery.h	/^typedef struct rmtCUDABind$/;"	s
rmtCUDABind	thirdparty/remotery/include/remotery/Remotery.h	/^} rmtCUDABind;$/;"	t	typeref:struct:rmtCUDABind
rmtError	thirdparty/remotery/include/remotery/Remotery.h	/^typedef enum rmtError$/;"	g
rmtError	thirdparty/remotery/include/remotery/Remotery.h	/^} rmtError;$/;"	t	typeref:enum:rmtError
rmtFree	thirdparty/remotery/src/Remotery.c	/^static void rmtFree( void* ptr )$/;"	f	file:
rmtFreeLibrary	thirdparty/remotery/src/Remotery.c	/^static void rmtFreeLibrary(void* handle)$/;"	f	file:
rmtFreePtr	thirdparty/remotery/include/remotery/Remotery.h	/^typedef void (*rmtFreePtr)(void* mm_context, void* ptr);$/;"	t
rmtGetProcAddress	thirdparty/remotery/src/Remotery.c	/^static void* rmtGetProcAddress(void* handle, const char* symbol)$/;"	f	file:
rmtHashTable	thirdparty/remotery/src/Remotery.c	/^} rmtHashTable;$/;"	t	typeref:struct:__anon58	file:
rmtHashTable_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError rmtHashTable_Constructor(rmtHashTable* table, rmtU32 max_nb_slots)$/;"	f	file:
rmtHashTable_Destructor	thirdparty/remotery/src/Remotery.c	/^static void rmtHashTable_Destructor(rmtHashTable* table)$/;"	f	file:
rmtHashTable_Find	thirdparty/remotery/src/Remotery.c	/^static rmtU32 rmtHashTable_Find(rmtHashTable* table, rmtU32 key)$/;"	f	file:
rmtHashTable_Insert	thirdparty/remotery/src/Remotery.c	/^static rmtError rmtHashTable_Insert(rmtHashTable* table, rmtU32 key, rmtU32 value)$/;"	f	file:
rmtHashTable_Resize	thirdparty/remotery/src/Remotery.c	/^static rmtError rmtHashTable_Resize(rmtHashTable* table)$/;"	f	file:
rmtInputHandlerPtr	thirdparty/remotery/include/remotery/Remotery.h	/^typedef void (*rmtInputHandlerPtr)(const char* text, void* context);$/;"	t
rmtLoadLibrary	thirdparty/remotery/src/Remotery.c	/^static void* rmtLoadLibrary(const char* path)$/;"	f	file:
rmtMalloc	thirdparty/remotery/src/Remotery.c	/^static void* rmtMalloc( rmtU32 size )$/;"	f	file:
rmtMallocPtr	thirdparty/remotery/include/remotery/Remotery.h	/^typedef void* (*rmtMallocPtr)(void* mm_context, rmtU32 size);$/;"	t
rmtMessageQueue	thirdparty/remotery/src/Remotery.c	/^typedef struct rmtMessageQueue$/;"	s	file:
rmtMessageQueue	thirdparty/remotery/src/Remotery.c	/^} rmtMessageQueue;$/;"	t	typeref:struct:rmtMessageQueue	file:
rmtMessageQueue_AllocMessage	thirdparty/remotery/src/Remotery.c	/^static Message* rmtMessageQueue_AllocMessage(rmtMessageQueue* queue, rmtU32 payload_size, struct ThreadSampler* thread_sampler)$/;"	f	file:
rmtMessageQueue_CommitMessage	thirdparty/remotery/src/Remotery.c	/^static void rmtMessageQueue_CommitMessage(Message* message, MessageID id)$/;"	f	file:
rmtMessageQueue_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError rmtMessageQueue_Constructor(rmtMessageQueue* queue, rmtU32 size)$/;"	f	file:
rmtMessageQueue_ConsumeNextMessage	thirdparty/remotery/src/Remotery.c	/^static void rmtMessageQueue_ConsumeNextMessage(rmtMessageQueue* queue, Message* message)$/;"	f	file:
rmtMessageQueue_Destructor	thirdparty/remotery/src/Remotery.c	/^static void rmtMessageQueue_Destructor(rmtMessageQueue* queue)$/;"	f	file:
rmtMessageQueue_IsEmpty	thirdparty/remotery/src/Remotery.c	/^static rmtBool rmtMessageQueue_IsEmpty(rmtMessageQueue* queue)$/;"	f	file:
rmtMessageQueue_PeekNextMessage	thirdparty/remotery/src/Remotery.c	/^Message* rmtMessageQueue_PeekNextMessage(rmtMessageQueue* queue)$/;"	f
rmtMessageQueue_SizeForPayload	thirdparty/remotery/src/Remotery.c	/^static rmtU32 rmtMessageQueue_SizeForPayload(rmtU32 payload_size)$/;"	f	file:
rmtMetal_usGetTime	thirdparty/remotery/src/Remotery.c	/^rmtU64 rmtMetal_usGetTime()$/;"	f
rmtPStr	thirdparty/remotery/include/remotery/Remotery.h	/^typedef const char* rmtPStr;$/;"	t
rmtRealloc	thirdparty/remotery/src/Remotery.c	/^static void* rmtRealloc( void* ptr, rmtU32 size)$/;"	f	file:
rmtReallocPtr	thirdparty/remotery/include/remotery/Remotery.h	/^typedef void* (*rmtReallocPtr)(void* mm_context, void* ptr, rmtU32 size);$/;"	t
rmtS16	thirdparty/remotery/include/remotery/Remotery.h	/^typedef short rmtS16;$/;"	t
rmtS32	thirdparty/remotery/include/remotery/Remotery.h	/^typedef int rmtS32;$/;"	t
rmtS64	thirdparty/remotery/include/remotery/Remotery.h	/^typedef long long rmtS64;$/;"	t
rmtS8	thirdparty/remotery/include/remotery/Remotery.h	/^typedef char rmtS8;$/;"	t
rmtSampleFlags	thirdparty/remotery/include/remotery/Remotery.h	/^typedef enum rmtSampleFlags$/;"	g
rmtSampleFlags	thirdparty/remotery/include/remotery/Remotery.h	/^} rmtSampleFlags;$/;"	t	typeref:enum:rmtSampleFlags
rmtSettings	thirdparty/remotery/include/remotery/Remotery.h	/^typedef struct rmtSettings$/;"	s
rmtSettings	thirdparty/remotery/include/remotery/Remotery.h	/^} rmtSettings;$/;"	t	typeref:struct:rmtSettings
rmtTLS	thirdparty/remotery/src/Remotery.c	/^    typedef pthread_key_t rmtTLS;$/;"	t	file:
rmtTLS	thirdparty/remotery/src/Remotery.c	/^    typedef rmtU32 rmtTLS;$/;"	t	file:
rmtThread	thirdparty/remotery/src/Remotery.c	/^typedef struct Thread_t rmtThread;$/;"	t	typeref:struct:Thread_t	file:
rmtThread_Constructor	thirdparty/remotery/src/Remotery.c	/^static rmtError rmtThread_Constructor(rmtThread* thread, ThreadProc callback, void* param)$/;"	f	file:
rmtThread_Destructor	thirdparty/remotery/src/Remotery.c	/^static void rmtThread_Destructor(rmtThread* thread)$/;"	f	file:
rmtThread_Join	thirdparty/remotery/src/Remotery.c	/^static void rmtThread_Join(rmtThread* thread)$/;"	f	file:
rmtThread_RequestExit	thirdparty/remotery/src/Remotery.c	/^static void rmtThread_RequestExit(rmtThread* thread)$/;"	f	file:
rmtThread_Valid	thirdparty/remotery/src/Remotery.c	/^static int rmtThread_Valid(rmtThread* thread)$/;"	f	file:
rmtU16	thirdparty/remotery/include/remotery/Remotery.h	/^typedef unsigned short rmtU16;$/;"	t
rmtU32	thirdparty/remotery/include/remotery/Remotery.h	/^typedef unsigned int rmtU32;$/;"	t
rmtU64	thirdparty/remotery/include/remotery/Remotery.h	/^typedef unsigned long long rmtU64;$/;"	t
rmtU8	thirdparty/remotery/include/remotery/Remotery.h	/^typedef unsigned char rmtU8;$/;"	t
rmt_BeginCPUSample	thirdparty/remotery/include/remotery/Remotery.h	300;"	d
rmt_BeginCPUSampleDynamic	thirdparty/remotery/include/remotery/Remotery.h	306;"	d
rmt_BeginCUDASample	thirdparty/remotery/include/remotery/Remotery.h	388;"	d
rmt_BeginD3D11Sample	thirdparty/remotery/include/remotery/Remotery.h	405;"	d
rmt_BeginD3D11SampleDynamic	thirdparty/remotery/include/remotery/Remotery.h	411;"	d
rmt_BeginMetalSample	thirdparty/remotery/include/remotery/Remotery.h	443;"	d
rmt_BeginMetalSampleDynamic	thirdparty/remotery/include/remotery/Remotery.h	449;"	d
rmt_BeginOpenGLSample	thirdparty/remotery/include/remotery/Remotery.h	424;"	d
rmt_BeginOpenGLSampleDynamic	thirdparty/remotery/include/remotery/Remotery.h	430;"	d
rmt_BindCUDA	thirdparty/remotery/include/remotery/Remotery.h	384;"	d
rmt_BindD3D11	thirdparty/remotery/include/remotery/Remotery.h	399;"	d
rmt_BindMetal	thirdparty/remotery/include/remotery/Remotery.h	437;"	d
rmt_BindOpenGL	thirdparty/remotery/include/remotery/Remotery.h	418;"	d
rmt_CreateGlobalInstance	thirdparty/remotery/include/remotery/Remotery.h	282;"	d
rmt_DestroyGlobalInstance	thirdparty/remotery/include/remotery/Remotery.h	285;"	d
rmt_EndCPUSample	thirdparty/remotery/include/remotery/Remotery.h	309;"	d
rmt_EndCPUSampleOnScopeExit	thirdparty/remotery/include/remotery/Remotery.h	/^struct rmt_EndCPUSampleOnScopeExit$/;"	s
rmt_EndCUDASample	thirdparty/remotery/include/remotery/Remotery.h	395;"	d
rmt_EndCUDASampleOnScopeExit	thirdparty/remotery/include/remotery/Remotery.h	/^    rmt_EndCUDASampleOnScopeExit(void* stream) : stream(stream)$/;"	f	struct:rmt_EndCUDASampleOnScopeExit
rmt_EndCUDASampleOnScopeExit	thirdparty/remotery/include/remotery/Remotery.h	/^struct rmt_EndCUDASampleOnScopeExit$/;"	s
rmt_EndD3D11Sample	thirdparty/remotery/include/remotery/Remotery.h	414;"	d
rmt_EndD3D11SampleOnScopeExit	thirdparty/remotery/include/remotery/Remotery.h	/^struct rmt_EndD3D11SampleOnScopeExit$/;"	s
rmt_EndMetalSample	thirdparty/remotery/include/remotery/Remotery.h	452;"	d
rmt_EndMetalSampleOnScopeExit	thirdparty/remotery/include/remotery/Remotery.h	/^struct rmt_EndMetalSampleOnScopeExit$/;"	s
rmt_EndOpenGLSample	thirdparty/remotery/include/remotery/Remotery.h	433;"	d
rmt_EndOpenGLSampleOnScopeExit	thirdparty/remotery/include/remotery/Remotery.h	/^struct rmt_EndOpenGLSampleOnScopeExit$/;"	s
rmt_GetGlobalInstance	thirdparty/remotery/include/remotery/Remotery.h	291;"	d
rmt_LogText	thirdparty/remotery/include/remotery/Remotery.h	297;"	d
rmt_ScopedCPUSample	thirdparty/remotery/include/remotery/Remotery.h	534;"	d
rmt_ScopedCUDASample	thirdparty/remotery/include/remotery/Remotery.h	537;"	d
rmt_ScopedD3D11Sample	thirdparty/remotery/include/remotery/Remotery.h	540;"	d
rmt_ScopedMetalSample	thirdparty/remotery/include/remotery/Remotery.h	546;"	d
rmt_ScopedOpenGLSample	thirdparty/remotery/include/remotery/Remotery.h	543;"	d
rmt_SetCurrentThreadName	thirdparty/remotery/include/remotery/Remotery.h	294;"	d
rmt_SetGlobalInstance	thirdparty/remotery/include/remotery/Remotery.h	288;"	d
rmt_Settings	thirdparty/remotery/include/remotery/Remotery.h	279;"	d
rmt_UnbindD3D11	thirdparty/remotery/include/remotery/Remotery.h	402;"	d
rmt_UnbindMetal	thirdparty/remotery/include/remotery/Remotery.h	440;"	d
rmt_UnbindOpenGL	thirdparty/remotery/include/remotery/Remotery.h	421;"	d
rmtglBeginQuery	thirdparty/remotery/src/Remotery.c	5973;"	d	file:
rmtglDeleteQueries	thirdparty/remotery/src/Remotery.c	5972;"	d	file:
rmtglEndQuery	thirdparty/remotery/src/Remotery.c	5974;"	d	file:
rmtglGenQueries	thirdparty/remotery/src/Remotery.c	5971;"	d	file:
rmtglGetError	thirdparty/remotery/src/Remotery.c	/^static GLenum rmtglGetError(void)$/;"	f	file:
rmtglGetProcAddress	thirdparty/remotery/src/Remotery.c	/^static void* rmtglGetProcAddress(OpenGL* opengl, const char* symbol)$/;"	f	file:
rmtglGetQueryObjecti64v	thirdparty/remotery/src/Remotery.c	5977;"	d	file:
rmtglGetQueryObjectiv	thirdparty/remotery/src/Remotery.c	5975;"	d	file:
rmtglGetQueryObjectui64v	thirdparty/remotery/src/Remotery.c	5978;"	d	file:
rmtglGetQueryObjectuiv	thirdparty/remotery/src/Remotery.c	5976;"	d	file:
rmtglQueryCounter	thirdparty/remotery/src/Remotery.c	5979;"	d	file:
rnd	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	324;"	d	file:
robustBufferAccess	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    robustBufferAccess;$/;"	m	struct:VkPhysicalDeviceFeatures
robustness	thirdparty/glfw/src/internal.h	/^    int                 robustness;$/;"	m	struct:_GLFWcontext
robustness	thirdparty/glfw/src/internal.h	/^    int           robustness;$/;"	m	struct:_GLFWctxconfig
rol	thirdparty/remotery/src/Remotery.c	/^static unsigned int rol(const unsigned int value, const unsigned int steps)$/;"	f	file:
romhighpath	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	char romhighpath[4][256];$/;"	m	class:TED
romlopath	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	char romlopath[4][256];$/;"	m	class:TED
root	thirdparty/glfw/src/x11_platform.h	/^    Window          root;$/;"	m	struct:_GLFWlibraryX11
root	thirdparty/remotery/src/Remotery.c	/^    Sample* root;$/;"	m	struct:SampleTree	file:
root_sample	thirdparty/remotery/src/Remotery.c	/^    Sample* root_sample;$/;"	m	struct:Msg_SampleTree	file:
root_three	lib/math/include/math/general/constants.hpp	/^MATH_CONST_CONSTEXPR float           root_three()  { return 1.73205080757f;  }$/;"	f
root_two	lib/math/include/math/general/constants.hpp	/^MATH_CONST_CONSTEXPR float           root_two()    { return 1.41421356237f;  }$/;"	f
rotation	lib/math/include/math/transform/transform_types.hpp	/^  quat     rotation;$/;"	m	struct:transform
rotation	lib/nil/include/nil/data/transform.hpp	/^  float rotation[4];$/;"	m	struct:Nil::Data::Transform
rotationInfoMask	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const char *rotationInfoMask[] = { "X : %5.2f deg %5.2f rad", "Y : %5.2f deg %5.2f rad", "Z : %5.2f deg %5.2f rad", "Screen : %5.2f deg %5.2f rad" };$/;"	m	namespace:ImGuizmo	file:
rotl32	thirdparty/remotery/src/Remotery.c	/^static rmtU32 rotl32(rmtU32 x, rmtS8 r)$/;"	f	file:
rounding	thirdparty/glfw/src/deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_button
rounding	thirdparty/glfw/src/deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_chart
rounding	thirdparty/glfw/src/deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_combo
rounding	thirdparty/glfw/src/deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_edit
rounding	thirdparty/glfw/src/deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_progress
rounding	thirdparty/glfw/src/deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_property
rounding	thirdparty/glfw/src/deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_scrollbar
rounding	thirdparty/glfw/src/deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_selectable
rounding	thirdparty/glfw/src/deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_slider
rounding	thirdparty/glfw/src/deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_tab
rounding	thirdparty/glfw/src/deps/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_window
rounding	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short rounding;$/;"	m	struct:nk_command_rect
rounding	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short rounding;$/;"	m	struct:nk_command_rect_filled
rounding_cursor	thirdparty/glfw/src/deps/nuklear.h	/^    float rounding_cursor;$/;"	m	struct:nk_style_scrollbar
rovClearFlag_Color	lib/rov/include/rov/rov.hpp	/^constexpr uint32_t rovClearFlag_Color = 1;$/;"	v
rovClearFlag_Depth	lib/rov/include/rov/rov.hpp	/^constexpr uint32_t rovClearFlag_Depth = 2;$/;"	v
rovData	lib/rov/src/rov_data.hpp	/^struct rovData$/;"	s	namespace:ROV_Internal
rovDrawCall	lib/rov/src/rov_data.hpp	/^struct rovDrawCall$/;"	s	namespace:ROV_Internal
rovGLData	lib/rov/src/ogl/rov_gl.hpp	/^struct rovGLData$/;"	s	namespace:ROV_Internal
rovGLFramebuffer	lib/rov/src/ogl/rov_gl.hpp	/^struct rovGLFramebuffer$/;"	s	namespace:ROV_Internal
rovGLIndex	lib/rov/src/ogl/rov_gl.hpp	/^struct rovGLIndex$/;"	s	namespace:ROV_Internal
rovGLLightPack	lib/rov/src/ogl/rov_gl.hpp	/^struct rovGLLightPack$/;"	s	namespace:ROV_Internal
rovGLLineProgram	lib/rov/src/ogl/rov_gl.hpp	/^struct rovGLLineProgram$/;"	s	namespace:ROV_Internal
rovGLMesh	lib/rov/src/ogl/rov_gl.hpp	/^struct rovGLMesh$/;"	s	namespace:ROV_Internal
rovGLMeshProgram	lib/rov/src/ogl/rov_gl.hpp	/^struct rovGLMeshProgram$/;"	s	namespace:ROV_Internal
rovGLTexture	lib/rov/src/ogl/rov_gl.hpp	/^struct rovGLTexture$/;"	s	namespace:ROV_Internal
rovGraphicsApi_GL4	lib/rov/include/rov/rov.hpp	/^constexpr uint32_t rovGraphicsApi_GL4 = 1;$/;"	v
rovGraphicsApi_NOP	lib/rov/include/rov/rov.hpp	/^constexpr uint32_t rovGraphicsApi_NOP = 0;$/;"	v
rovInputFormat_PNT	lib/rov/include/rov/rov.hpp	/^constexpr uint32_t rovInputFormat_PNT = 1;$/;"	v
rovLight	lib/rov/include/rov/rov.hpp	/^struct rovLight$/;"	s
rovLineDrawCall	lib/rov/src/rov_data.hpp	/^struct rovLineDrawCall$/;"	s	namespace:ROV_Internal
rovMaterial	lib/rov/src/rov_data.hpp	/^struct rovMaterial$/;"	s	namespace:ROV_Internal
rovNopData	lib/rov/src/nop/rov_nop.hpp	/^struct rovNopData$/;"	s	namespace:ROV_Internal
rovPixel_RG8	lib/rov/include/rov/rov.hpp	/^constexpr uint32_t rovPixel_RG8       = 2;$/;"	v
rovPixel_RGB8	lib/rov/include/rov/rov.hpp	/^constexpr uint32_t rovPixel_RGB8      = 3;$/;"	v
rovPixel_RGBA8	lib/rov/include/rov/rov.hpp	/^constexpr uint32_t rovPixel_RGBA8     = 4;$/;"	v
rovRasterizer	lib/rov/include/rov/rov.hpp	/^struct rovRasterizer$/;"	s
rovRenderPass	lib/rov/src/rov_data.hpp	/^struct rovRenderPass$/;"	s	namespace:ROV_Internal
rovShader_Count	lib/rov/include/rov/rov.hpp	/^constexpr uint32_t rovShader_Count      = 4;$/;"	v
rovShader_Depth	lib/rov/include/rov/rov.hpp	/^constexpr uint32_t rovShader_Depth      = 3;$/;"	v
rovShader_Fullbright	lib/rov/include/rov/rov.hpp	/^constexpr uint32_t rovShader_Fullbright = 2;$/;"	v
rovShader_Lit	lib/rov/include/rov/rov.hpp	/^constexpr uint32_t rovShader_Lit        = 1;$/;"	v
rovShader_Overdraw	lib/rov/include/rov/rov.hpp	/^constexpr uint32_t rovShader_Overdraw   = 4;$/;"	v
rov_createIndex	lib/rov/src/rov.cpp	/^rov_createIndex($/;"	f
rov_createLights	lib/rov/src/rov.cpp	/^rov_createLights($/;"	f
rov_createMesh	lib/rov/src/rov.cpp	/^rov_createMesh($/;"	f
rov_createRenderTarget	lib/rov/src/rov.cpp	/^rov_createRenderTarget($/;"	f
rov_createTexture	lib/rov/src/rov.cpp	/^rov_createTexture($/;"	f
rov_curr_material	lib/rov/src/rov_data.cpp	/^rov_curr_material(rovData *data)$/;"	f	namespace:ROV_Internal
rov_data	lib/rov/src/rov.cpp	/^  ROV_Internal::rovData rov_data;$/;"	m	struct:__anon48::ROV_data	file:
rov_destroy	lib/rov/src/rov.cpp	/^rov_destroy()$/;"	f
rov_execute	lib/rov/src/rov.cpp	/^rov_execute()$/;"	f
rov_frame_buffers	lib/rov/src/ogl/rov_gl.hpp	/^  lib::array<rovGLFramebuffer>  rov_frame_buffers;$/;"	m	struct:ROV_Internal::rovGLData
rov_indexes	lib/rov/src/ogl/rov_gl.hpp	/^  lib::array<rovGLIndex>        rov_indexes;$/;"	m	struct:ROV_Internal::rovGLData
rov_initialize	lib/rov/src/rov.cpp	/^rov_initialize(const uint32_t graphics_api, const char *asset_prefix)$/;"	f
rov_line_programs	lib/rov/src/ogl/rov_gl.hpp	/^  lib::array<rovGLLineProgram>  rov_line_programs;$/;"	m	struct:ROV_Internal::rovGLData
rov_max_texture_maps	lib/rov/src/ogl/rov_gl.hpp	/^constexpr uint32_t rov_max_texture_maps = 3;$/;"	m	namespace:ROV_Internal
rov_max_textures	lib/rov/src/rov_data.hpp	/^constexpr uint32_t rov_max_textures = 3;$/;"	m	namespace:ROV_Internal
rov_mesh_programs	lib/rov/src/ogl/rov_gl.hpp	/^  lib::array<rovGLMeshProgram>  rov_mesh_programs;$/;"	m	struct:ROV_Internal::rovGLData
rov_meshes	lib/rov/src/ogl/rov_gl.hpp	/^  lib::array<rovGLMesh>         rov_meshes;$/;"	m	struct:ROV_Internal::rovGLData
rov_render_bounding_box	lib/nil_aspects/src/renderer/rov_extensions.cpp	/^rov_render_bounding_box($/;"	f	namespace:Nil_ext
rov_render_camera_cross	lib/nil_aspects/src/renderer/rov_extensions.cpp	/^rov_render_camera_cross(Nil::Data::Camera cam, uint32_t viewport[2])$/;"	f	namespace:Nil_ext
rov_render_passes	lib/rov/src/rov_data.hpp	/^  std::vector<ROV_Internal::rovRenderPass> rov_render_passes;$/;"	m	struct:ROV_Internal::rovData
rov_resetState	lib/rov/src/rov.cpp	/^rov_resetState()$/;"	f
rov_setColor	lib/rov/src/rov.cpp	/^rov_setColor(const float col[4])$/;"	f
rov_setColor	lib/rov/src/rov.cpp	/^rov_setColor(float r, float g, float b, float a)$/;"	f
rov_setColor	lib/rov/src/rov.cpp	/^rov_setColor(uint32_t col)$/;"	f
rov_setIndex	lib/rov/src/rov.cpp	/^rov_setIndex(uint32_t index_id)$/;"	f
rov_setMesh	lib/rov/src/rov.cpp	/^rov_setMesh(uint32_t mesh_id)$/;"	f
rov_setRasterizer	lib/rov/src/rov.cpp	/^rov_setRasterizer(rovRasterizer rasterizer)$/;"	f
rov_setRenderTarget	lib/rov/src/rov.cpp	/^rov_setRenderTarget(const uint32_t render_target)$/;"	f
rov_setShader	lib/rov/src/rov.cpp	/^rov_setShader(uint32_t shader_type)$/;"	f
rov_setTexture	lib/rov/src/rov.cpp	/^rov_setTexture(uint32_t texture_id, uint32_t texture_slot)$/;"	f
rov_startRenderPass	lib/rov/src/rov.cpp	/^rov_startRenderPass($/;"	f
rov_submitLine	lib/rov/src/rov.cpp	/^rov_submitLine(const float start[3], const float end[3])$/;"	f
rov_submitMeshTransform	lib/rov/src/rov.cpp	/^rov_submitMeshTransform(const float world[16])$/;"	f
rov_textures	lib/rov/src/ogl/rov_gl.hpp	/^  lib::array<rovGLTexture>      rov_textures;$/;"	m	struct:ROV_Internal::rovGLData
rov_updateLights	lib/rov/src/rov.cpp	/^rov_updateLights($/;"	f
row	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_row_layout row;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_row_layout
rowPitch	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize    rowPitch;$/;"	m	struct:VkSubresourceLayout
row_no	thirdparty/json/include/json/json.h	/^  size_t row_no;$/;"	m	struct:json_string_ex_s
row_no	thirdparty/json/include/json/json.h	/^  size_t row_no;$/;"	m	struct:json_value_ex_s
row_padding	thirdparty/glfw/src/deps/nuklear.h	/^    float row_padding;$/;"	m	struct:nk_style_edit
rsidPlayer	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^static unsigned char rsidPlayer[] = {$/;"	v	file:
rsize_t	thirdparty/remotery/src/Remotery.c	/^typedef __darwin_size_t rsize_t;$/;"	t	file:
rsize_t	thirdparty/remotery/src/Remotery.c	/^typedef unsigned int rsize_t;$/;"	t	file:
rsrc_audio	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_audio_src_data*   rsrc_audio;$/;"	m	struct:Nil_ctx
rsrc_font_data	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_font_data*        rsrc_font_data;$/;"	m	struct:Nil_ctx
rsrc_material	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_material_data*    rsrc_material;$/;"	m	struct:Nil_ctx
rsrc_mesh	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_mesh_data*        rsrc_mesh;$/;"	m	struct:Nil_ctx
rsrc_shader	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_shader_data*      rsrc_shader;$/;"	m	struct:Nil_ctx
rsrc_texture	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_texture_data*     rsrc_texture;$/;"	m	struct:Nil_ctx
run	lib/roa/src/interface/application.cpp	/^Application::run(Custom_tick_fn tick, uintptr_t user_data)$/;"	f	class:ROA::Application
rv_text	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^inline void TED::rv_text()$/;"	f	class:TED
rvsmode	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	int		rvsmode, grmode, ecmode;$/;"	m	class:TED
s	thirdparty/catch/include/catch/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	thirdparty/stb/include/stb/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon81
s	thirdparty/stb/include/stb/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon87
s0	thirdparty/glfw/src/deps/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad
s0	thirdparty/stb/include/stb/stb_image_resize.h	/^    float s0, t0, s1, t1;$/;"	m	struct:__anon72
s0	thirdparty/stb/include/stb/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon98
s1	thirdparty/glfw/src/deps/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad
s1	thirdparty/stb/include/stb/stb_image_resize.h	/^    float s0, t0, s1, t1;$/;"	m	struct:__anon72
s1	thirdparty/stb/include/stb/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon98
sRGB	thirdparty/glfw/src/internal.h	/^    GLFWbool    sRGB;$/;"	m	struct:_GLFWfbconfig
sThumbLX	thirdparty/glfw/src/deps/mingw/xinput.h	/^    SHORT sThumbLX;$/;"	m	struct:_XINPUT_GAMEPAD
sThumbLY	thirdparty/glfw/src/deps/mingw/xinput.h	/^    SHORT sThumbLY;$/;"	m	struct:_XINPUT_GAMEPAD
sThumbRX	thirdparty/glfw/src/deps/mingw/xinput.h	/^    SHORT sThumbRX;$/;"	m	struct:_XINPUT_GAMEPAD
sThumbRY	thirdparty/glfw/src/deps/mingw/xinput.h	/^    SHORT sThumbRY;$/;"	m	struct:_XINPUT_GAMEPAD
sType	thirdparty/glfw/src/cocoa_platform.h	/^    VkStructureType                 sType;$/;"	m	struct:VkMacOSSurfaceCreateInfoMVK
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                                  sType;$/;"	m	struct:VkGraphicsPipelineCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                               sType;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                             sType;$/;"	m	struct:VkBindSparseInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                             sType;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                            sType;$/;"	m	struct:VkIndirectCommandsLayoutCreateInfoNVX
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                            sType;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                            sType;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                           sType;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                           sType;$/;"	m	struct:VkPipelineTessellationStateCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                          sType;$/;"	m	struct:VkCommandBufferBeginInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                          sType;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                        sType;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                       sType;$/;"	m	struct:VkPipelineViewportStateCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                      sType;$/;"	m	struct:VkCmdProcessCommandsInfoNVX
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                      sType;$/;"	m	struct:VkExportMemoryAllocateInfoNV
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                      sType;$/;"	m	struct:VkExternalMemoryImageCreateInfoNV
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                      sType;$/;"	m	struct:VkImportMemoryWin32HandleInfoNV
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                      sType;$/;"	m	struct:VkObjectTableCreateInfoNVX
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                      sType;$/;"	m	struct:VkPipelineDynamicStateCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                     sType;$/;"	m	struct:VkPhysicalDeviceMemoryProperties2KHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                     sType;$/;"	m	struct:VkPipelineShaderStageCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                    sType;$/;"	m	struct:VkComputePipelineCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                    sType;$/;"	m	struct:VkDeviceCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                   sType;$/;"	m	struct:VkAndroidSurfaceCreateInfoKHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                   sType;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                   sType;$/;"	m	struct:VkRenderPassCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                   sType;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                  sType;$/;"	m	struct:VkCommandBufferInheritanceInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                  sType;$/;"	m	struct:VkQueryPoolCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                  sType;$/;"	m	struct:VkSparseImageFormatProperties2KHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                  sType;$/;"	m	struct:VkSurfaceCapabilities2EXT
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                  sType;$/;"	m	struct:VkSwapchainCreateInfoKHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                  sType;$/;"	m	struct:VkWriteDescriptorSet
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                 sType;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                 sType;$/;"	m	struct:VkDescriptorSetAllocateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                 sType;$/;"	m	struct:VkPipelineLayoutCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                 sType;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                sType;$/;"	m	struct:VkCmdReserveSpaceForCommandsInfoNVX
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                sType;$/;"	m	struct:VkDescriptorPoolCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                sType;$/;"	m	struct:VkDisplayModeCreateInfoKHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                sType;$/;"	m	struct:VkSubmitInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType                sType;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType               sType;$/;"	m	struct:VkDebugMarkerObjectNameInfoEXT
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType               sType;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType               sType;$/;"	m	struct:VkExportMemoryWin32HandleInfoNV
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType               sType;$/;"	m	struct:VkMirSurfaceCreateInfoKHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType               sType;$/;"	m	struct:VkPhysicalDeviceProperties2KHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType               sType;$/;"	m	struct:VkPipelineCacheCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType               sType;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType              sType;$/;"	m	struct:VkShaderModuleCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType             sType;$/;"	m	struct:VkCommandPoolCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType             sType;$/;"	m	struct:VkDeviceQueueCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType             sType;$/;"	m	struct:VkFramebufferCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType             sType;$/;"	m	struct:VkInstanceCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType             sType;$/;"	m	struct:VkPhysicalDeviceFeatures2KHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType             sType;$/;"	m	struct:VkSwapchainCounterCreateInfoEXT
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType             sType;$/;"	m	struct:VkViSurfaceCreateInfoNN
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType            sType;$/;"	m	struct:VkBufferViewCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType            sType;$/;"	m	struct:VkImageFormatProperties2KHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType            sType;$/;"	m	struct:VkImageMemoryBarrier
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType            sType;$/;"	m	struct:VkImageViewCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType            sType;$/;"	m	struct:VkPipelineRasterizationStateRasterizationOrderAMD
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType            sType;$/;"	m	struct:VkQueueFamilyProperties2KHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType           sType;$/;"	m	struct:VkDisplayPowerInfoEXT
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType           sType;$/;"	m	struct:VkSemaphoreCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType          sType;$/;"	m	struct:VkDisplayEventInfoEXT
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType          sType;$/;"	m	struct:VkImageCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType          sType;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2KHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType          sType;$/;"	m	struct:VkPresentInfoKHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType          sType;$/;"	m	struct:VkValidationFlagsEXT
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType          sType;$/;"	m	struct:VkWin32KeyedMutexAcquireReleaseInfoNV
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType         sType;$/;"	m	struct:VkCommandBufferAllocateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType         sType;$/;"	m	struct:VkDeviceEventInfoEXT
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType         sType;$/;"	m	struct:VkSamplerCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType        sType;$/;"	m	struct:VkBufferCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType        sType;$/;"	m	struct:VkRenderPassBeginInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType       sType;$/;"	m	struct:VkEventCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType       sType;$/;"	m	struct:VkFenceCreateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType       sType;$/;"	m	struct:VkFormatProperties2KHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType       sType;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2KHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkApplicationInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkBufferMemoryBarrier
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkCopyDescriptorSet
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkDebugMarkerMarkerInfoEXT
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkDedicatedAllocationBufferCreateInfoNV
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkDedicatedAllocationImageCreateInfoNV
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkDedicatedAllocationMemoryAllocateInfoNV
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkDeviceGeneratedCommandsFeaturesNVX
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkDeviceGeneratedCommandsLimitsNVX
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkDisplayPresentInfoKHR
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkMappedMemoryRange
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkMemoryAllocateInfo
sType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkMemoryBarrier
sType	thirdparty/glfw/src/mir_platform.h	/^    VkStructureType             sType;$/;"	m	struct:VkMirWindowCreateInfoKHR
sType	thirdparty/glfw/src/win32_platform.h	/^    VkStructureType                 sType;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
sType	thirdparty/glfw/src/wl_platform.h	/^    VkStructureType                 sType;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR
sType	thirdparty/glfw/src/x11_platform.h	/^    VkStructureType             sType;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
sType	thirdparty/glfw/src/x11_platform.h	/^    VkStructureType             sType;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
sampleBuffer	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^        short *sampleBuffer;$/;"	m	struct:SoLoud::ALSAData	file:
sampleBuffer	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^        short *sampleBuffer;$/;"	m	struct:SoLoud::OSSData	file:
sampleBuffer	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^        short *sampleBuffer[BUFFER_COUNT];$/;"	m	struct:SoLoud::SoLoudWinMMData	file:
sampleCounts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlags    sampleCounts;$/;"	m	struct:VkImageFormatProperties
sampleRate	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	unsigned int sampleRate;$/;"	m	class:SIDsound
sampleRate	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             sampleRate;$/;"	m	class:TED
sampleRate	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	unsigned int sampleRate;$/;"	m	class:SIDsound
sampleRate	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int sampleRate;$/;"	m	class:TED
sampleRateShading	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    sampleRateShading;$/;"	m	struct:VkPhysicalDeviceFeatures
sampleShadingEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                                 sampleShadingEnable;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
sample_loc	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32  sample_loc;  \/\/ granule pos encoded in page$/;"	m	struct:__anon211	file:
sample_loc	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32  sample_loc;  \/\/ granule pos encoded in page$/;"	m	struct:__anon124	file:
sample_rate	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   unsigned int sample_rate;$/;"	m	struct:__anon202	file:
sample_rate	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   unsigned int sample_rate;$/;"	m	struct:stb_vorbis	file:
sample_rate	thirdparty/stb/include/stb/stb_vorbis.c	/^   unsigned int sample_rate;$/;"	m	struct:__anon115	file:
sample_rate	thirdparty/stb/include/stb/stb_vorbis.c	/^   unsigned int sample_rate;$/;"	m	struct:stb_vorbis	file:
sample_trees	thirdparty/remotery/src/Remotery.c	/^    SampleTree* sample_trees[SampleType_Count];$/;"	m	struct:ThreadSampler	file:
sampledImageColorSampleCounts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlags    sampledImageColorSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
sampledImageDepthSampleCounts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlags    sampledImageDepthSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
sampledImageIntegerSampleCounts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlags    sampledImageIntegerSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
sampledImageStencilSampleCounts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlags    sampledImageStencilSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
sampler	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampler        sampler;$/;"	m	struct:VkDescriptorImageInfo
samplerAnisotropy	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    samplerAnisotropy;$/;"	m	struct:VkPhysicalDeviceFeatures
samples	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlagBits           samples;$/;"	m	struct:VkAttachmentDescription
samples	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlagBits    samples;$/;"	m	struct:VkImageCreateInfo
samples	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlagBits    samples;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2KHR
samples	thirdparty/glfw/src/internal.h	/^    int         samples;$/;"	m	struct:_GLFWfbconfig
samples	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^        int samples;$/;"	m	struct:SoLoud::ALSAData	file:
samples	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^        int samples;$/;"	m	struct:SoLoud::OSSData	file:
samples	thirdparty/soloud/src/backend/vita_homebrew/soloud_vita_homebrew.cpp	/^		unsigned samples;$/;"	m	struct:SoLoud::VitaData	file:
samples	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^        int samples;$/;"	m	struct:SoLoud::SoLoudWinMMData	file:
samples	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        int samples;$/;"	m	struct:SoLoud::XAudio2Data	file:
samples_output	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 samples_output;$/;"	m	struct:stb_vorbis	file:
samples_output	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 samples_output;$/;"	m	struct:stb_vorbis	file:
sat_test	lib/math/include/math/geometry/aabb.hpp	/^  sat_test(const float origin_a,$/;"	f	namespace:detail
saver	thirdparty/glfw/src/x11_platform.h	/^    } saver;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon147
saveshot	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^bool CPU::saveshot(void *CPUdump)$/;"	f	class:CPU
saw	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^float saw(float v)$/;"	f
scale	lib/math/include/math/transform/transform_types.hpp	/^  vec3     scale; $/;"	m	struct:transform
scale	lib/nil/include/nil/data/transform.hpp	/^  float scale[3];$/;"	m	struct:Nil::Data::Transform
scale	lib/roa/src/interface/vector3.cpp	/^Vector3::scale(const float scale) const$/;"	f	class:ROA::Vector3
scale	thirdparty/glfw/src/deps/nuklear.h	/^    float scale;$/;"	m	struct:nk_font
scale	thirdparty/glfw/src/wl_monitor.c	/^static void scale(void* data,$/;"	f	file:
scale	thirdparty/glfw/src/wl_platform.h	/^    int                         scale;$/;"	m	struct:_GLFWmonitorWayland
scale	thirdparty/glfw/src/wl_platform.h	/^    int                         scale;$/;"	m	struct:_GLFWwindowWayland
scale	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^  float scale;$/;"	m	struct:__anon215	file:
scale	thirdparty/stb/include/stb/stb_vorbis.c	/^  float scale;$/;"	m	struct:__anon128	file:
scaleInfoMask	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const char *scaleInfoMask[] = { "X : %5.2f", "Y : %5.2f", "Z : %5.2f", "XYZ : %5.2f" };$/;"	m	namespace:ImGuizmo	file:
scaler	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_item scaler;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_style_item
scan	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   CRCscan scan[STB_VORBIS_PUSHDATA_CRC_COUNT];$/;"	m	struct:stb_vorbis	file:
scan	thirdparty/stb/include/stb/stb_vorbis.c	/^   CRCscan scan[STB_VORBIS_PUSHDATA_CRC_COUNT];$/;"	m	struct:stb_vorbis	file:
scan_n	thirdparty/stb/include/stb/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon81
scancodes	thirdparty/glfw/src/cocoa_platform.h	/^    short int           scancodes[GLFW_KEY_LAST + 1];$/;"	m	struct:_GLFWlibraryNS
scancodes	thirdparty/glfw/src/mir_platform.h	/^    short int scancodes[GLFW_KEY_LAST + 1];$/;"	m	struct:_GLFWlibraryMir
scancodes	thirdparty/glfw/src/win32_platform.h	/^    short int           scancodes[GLFW_KEY_LAST + 1];$/;"	m	struct:_GLFWlibraryWin32
scancodes	thirdparty/glfw/src/wl_platform.h	/^    short int                   scancodes[GLFW_KEY_LAST + 1];$/;"	m	struct:_GLFWlibraryWayland
scancodes	thirdparty/glfw/src/x11_platform.h	/^    short int       scancodes[GLFW_KEY_LAST + 1];$/;"	m	struct:_GLFWlibraryX11
schedulePause	thirdparty/soloud/src/core/soloud_core_faderops.cpp	/^	void Soloud::schedulePause(handle aVoiceHandle, time aTime)$/;"	f	class:SoLoud::Soloud
scheduleStop	thirdparty/soloud/src/core/soloud_core_faderops.cpp	/^	void Soloud::scheduleStop(handle aVoiceHandle, time aTime)$/;"	f	class:SoLoud::Soloud
scissorCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                              scissorCount;$/;"	m	struct:VkPipelineViewportStateCreateInfo
scrattr	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	int		scrattr, charbank;$/;"	m	class:TED
scrblank	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	bool scrblank;$/;"	m	class:TED
screen	thirdparty/glfw/src/x11_platform.h	/^    int             screen;$/;"	m	struct:_GLFWlibraryX11
screen	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char screen[SCR_HSIZE*(SCR_VSIZE*2)];$/;"	m	class:TED
screenRotateSize	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   const float screenRotateSize = 0.06f;$/;"	m	namespace:ImGuizmo	file:
scrmode	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	void	(TED::*scrmode)();$/;"	m	class:TED
scroll	lib/nil/include/nil/data/mouse.hpp	/^  float scroll[2];$/;"	m	struct:Nil::Data::Mouse
scroll	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    float scroll;$/;"	m	struct:nk_glfw
scroll	thirdparty/glfw/src/internal.h	/^        GLFWscrollfun           scroll;$/;"	m	struct:_GLFWwindow::__anon162
scroll_delta	thirdparty/glfw/src/deps/nuklear.h	/^    float scroll_delta;$/;"	m	struct:nk_mouse
scroll_pointer	thirdparty/glfw/src/deps/nuklear.h	/^    nk_uint *scroll_pointer;$/;"	m	struct:nk_list_view
scroll_value	thirdparty/glfw/src/deps/nuklear.h	/^    nk_uint scroll_value;$/;"	m	struct:nk_list_view
scrollbar	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_scroll scrollbar;$/;"	m	struct:nk_edit_state	typeref:struct:nk_edit_state::nk_scroll
scrollbar	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_scroll scrollbar;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_scroll
scrollbar	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_scrollbar scrollbar;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_style_scrollbar
scrollbar	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 scrollbar;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_edit::nk_vec2
scrollbar_hiding_timer	thirdparty/glfw/src/deps/nuklear.h	/^    float scrollbar_hiding_timer;$/;"	m	struct:nk_window
scrollbar_size	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 scrollbar_size;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_vec2
scrollbar_size	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 scrollbar_size;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
scrolled	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int scrolled;$/;"	m	struct:nk_window
scrollh	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_scrollbar scrollh;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_scrollbar
scrollv	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_scrollbar scrollv;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_scrollbar
scrptr	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *scrptr, *endptr, *ramptr;$/;"	m	class:TED
sdl2static_init	thirdparty/soloud/src/backend/sdl2_static/soloud_sdl2_static.cpp	/^	result sdl2static_init(SoLoud::Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
sdl_init	thirdparty/soloud/src/backend/sdl/soloud_sdl.cpp	/^	result sdl_init(SoLoud::Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
sdlstatic_init	thirdparty/soloud/src/backend/sdl_static/soloud_sdl_static.cpp	/^	result sdlstatic_init(SoLoud::Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
seat	thirdparty/glfw/src/wl_platform.h	/^    struct wl_seat*             seat;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::wl_seat
seatHandleCapabilities	thirdparty/glfw/src/wl_init.c	/^static void seatHandleCapabilities(void* data,$/;"	f	file:
seatListener	thirdparty/glfw/src/wl_init.c	/^static const struct wl_seat_listener seatListener = {$/;"	v	typeref:struct:wl_seat_listener	file:
second8	lib/lib/include/lib/bits.hpp	/^second8(const uint32_t i)$/;"	f	namespace:LIB_NS_NAME::bits
section	thirdparty/glfw/src/win32_platform.h	/^    CRITICAL_SECTION    section;$/;"	m	struct:_GLFWmutexWin32
seek	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSourceInstance::seek(double aSeconds, float *mScratch, unsigned int mScratchSize)$/;"	f	class:SoLoud::AudioSourceInstance
seek	thirdparty/soloud/src/core/soloud_core_basicops.cpp	/^	void Soloud::seek(handle aVoiceHandle, time aSeconds)$/;"	f	class:SoLoud::Soloud
seek	thirdparty/soloud/src/core/soloud_file.cpp	/^	void DiskFile::seek(int aOffset)$/;"	f	class:SoLoud::DiskFile
seek	thirdparty/soloud/src/core/soloud_file.cpp	/^	void MemoryFile::seek(int aOffset)$/;"	f	class:SoLoud::MemoryFile
seek_to_sample_coarse	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int seek_to_sample_coarse(stb_vorbis *f, uint32 sample_number)$/;"	f	file:
seek_to_sample_coarse	thirdparty/stb/include/stb/stb_vorbis.c	/^static int seek_to_sample_coarse(stb_vorbis *f, uint32 sample_number)$/;"	f	file:
segment_count	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int segment_count;$/;"	m	struct:stb_vorbis	file:
segment_count	thirdparty/stb/include/stb/stb_vorbis.c	/^   int segment_count;$/;"	m	struct:stb_vorbis	file:
segments	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 segments[255];$/;"	m	struct:stb_vorbis	file:
segments	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 segments[255];$/;"	m	struct:stb_vorbis	file:
sel_end	thirdparty/glfw/src/deps/nuklear.h	/^    int sel_end;$/;"	m	struct:nk_edit_state
sel_start	thirdparty/glfw/src/deps/nuklear.h	/^    int sel_start;$/;"	m	struct:nk_edit_state
selectWaveForm	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^void TED::selectWaveForm(unsigned int channel, unsigned int wave)$/;"	f	class:TED
select_end	thirdparty/glfw/src/deps/nuklear.h	/^    int select_end;$/;"	m	struct:nk_text_edit
select_end	thirdparty/stb/include/stb/stb_textedit.h	/^   int select_end;$/;"	m	struct:__anon132
select_start	thirdparty/glfw/src/deps/nuklear.h	/^    int select_start;$/;"	m	struct:nk_text_edit
select_start	thirdparty/stb/include/stb/stb_textedit.h	/^   int select_start;          \/\/ selection start point$/;"	m	struct:__anon132
selectable	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_selectable selectable;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_selectable
selected_bbs	lib/nil_aspects/include/aspect/renderer_aspect.hpp	/^  lib::array<Nil::Data::Bounding_box> selected_bbs;$/;"	m	struct:Nil_ext::ROV_Aspect::Data
selected_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color selected_color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_color
selected_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color selected_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
selected_model	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^int selected_model = 1;$/;"	v
selected_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color selected_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
selected_text_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color selected_text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
selected_text_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color selected_text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
selectionColor	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const ImU32 selectionColor = 0xFF1080FF;$/;"	m	namespace:ImGuizmo	file:
sendEventToWM	thirdparty/glfw/src/x11_window.c	/^static void sendEventToWM(_GLFWwindow* window, Atom type,$/;"	f	file:
send_message	lib/roa/src/interface/logic.cpp	/^Logic::send_message(const uint32_t id, const uintptr_t msg_data)$/;"	f	class:ROA::Logic
seq	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_context
seq	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_edit_state
seq	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_property_state
seq	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_table
seq	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_window
sequence_p	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8  sequence_p;$/;"	m	struct:__anon203	file:
sequence_p	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8  sequence_p;$/;"	m	struct:__anon116	file:
sequencesCountBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBuffer                             sequencesCountBuffer;$/;"	m	struct:VkCmdProcessCommandsInfoNVX
sequencesCountOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize                         sequencesCountOffset;$/;"	m	struct:VkCmdProcessCommandsInfoNVX
sequencesIndexBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBuffer                             sequencesIndexBuffer;$/;"	m	struct:VkCmdProcessCommandsInfoNVX
sequencesIndexOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize                         sequencesIndexOffset;$/;"	m	struct:VkCmdProcessCommandsInfoNVX
serial	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 serial; \/\/ stream serial number for verification$/;"	m	struct:stb_vorbis	file:
serial	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 serial; \/\/ stream serial number for verification$/;"	m	struct:stb_vorbis	file:
server	thirdparty/remotery/src/Remotery.c	/^    Server* server;$/;"	m	struct:Remotery	file:
set	lib/nil/src/interface/data/audio.cpp	/^set(Node &node, const Audio &in)$/;"	f	namespace:Nil::Data
set	lib/nil/src/interface/data/bounding_box.cpp	/^set(Node &node, const Bounding_box &in)$/;"	f	namespace:Nil::Data
set	lib/nil/src/interface/data/camera.cpp	/^set(Node &node, const Camera &in)$/;"	f	namespace:Nil::Data
set	lib/nil/src/interface/data/developer.cpp	/^set(Node &node, const Developer &in)$/;"	f	namespace:Nil::Data
set	lib/nil/src/interface/data/gamepad.cpp	/^set(Node &node, const Gamepad &in)$/;"	f	namespace:Nil::Data
set	lib/nil/src/interface/data/keyboard.cpp	/^set(Node &node, const Keyboard &in)$/;"	f	namespace:Nil::Data
set	lib/nil/src/interface/data/light.cpp	/^set(Node &node, const Light &in)$/;"	f	namespace:Nil::Data
set	lib/nil/src/interface/data/logic.cpp	/^set(Node &node, const Logic &in)$/;"	f	namespace:Nil::Data
set	lib/nil/src/interface/data/mouse.cpp	/^set(Node &node, const Mouse &in)$/;"	f	namespace:Nil::Data
set	lib/nil/src/interface/data/renderable.cpp	/^set(Node &node, const Renderable &in)$/;"	f	namespace:Nil::Data
set	lib/nil/src/interface/data/renderable_text.cpp	/^set(Node &node, const Renderable_text &in)$/;"	f	namespace:Nil::Data
set	lib/nil/src/interface/data/transform.cpp	/^set(Node &node, const Transform &in)$/;"	f	namespace:Nil::Data
set	lib/nil/src/interface/data/window.cpp	/^set(Node &node, const Window &in)$/;"	f	namespace:Nil::Data
set	thirdparty/soloud/src/core/soloud_fader.cpp	/^	void Fader::set(float aFrom, float aTo, double aTime, double aStartTime)$/;"	f	class:SoLoud::Fader
set3dAttenuation	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::set3dAttenuation(unsigned int aAttenuationModel, float aAttenuationRolloffFactor)$/;"	f	class:SoLoud::AudioSource
set3dAttenuator	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::set3dAttenuator(AudioAttenuator *aAttenuator)$/;"	f	class:SoLoud::AudioSource
set3dCollider	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::set3dCollider(AudioCollider *aCollider, int aUserData)$/;"	f	class:SoLoud::AudioSource
set3dDistanceDelay	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::set3dDistanceDelay(bool aDistanceDelay)$/;"	f	class:SoLoud::AudioSource
set3dDopplerFactor	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::set3dDopplerFactor(float aDopplerFactor)$/;"	f	class:SoLoud::AudioSource
set3dListenerAt	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	void Soloud::set3dListenerAt(float aAtX, float aAtY, float aAtZ)$/;"	f	class:SoLoud::Soloud
set3dListenerParameters	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	void Soloud::set3dListenerParameters(float aPosX, float aPosY, float aPosZ, float aAtX, float aAtY, float aAtZ, float aUpX, float aUpY, float aUpZ, float aVelocityX, float aVelocityY, float aVelocityZ)$/;"	f	class:SoLoud::Soloud
set3dListenerPosition	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	void Soloud::set3dListenerPosition(float aPosX, float aPosY, float aPosZ)$/;"	f	class:SoLoud::Soloud
set3dListenerRelative	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::set3dListenerRelative(bool aListenerRelative)$/;"	f	class:SoLoud::AudioSource
set3dListenerUp	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	void Soloud::set3dListenerUp(float aUpX, float aUpY, float aUpZ)$/;"	f	class:SoLoud::Soloud
set3dListenerVelocity	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	void Soloud::set3dListenerVelocity(float aVelocityX, float aVelocityY, float aVelocityZ)$/;"	f	class:SoLoud::Soloud
set3dMinMaxDistance	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::set3dMinMaxDistance(float aMinDistance, float aMaxDistance)$/;"	f	class:SoLoud::AudioSource
set3dProcessing	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::set3dProcessing(bool aDo3dProcessing)$/;"	f	class:SoLoud::AudioSource
set3dSoundSpeed	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	result Soloud::set3dSoundSpeed(float aSpeed)$/;"	f	class:SoLoud::Soloud
set3dSourceAttenuation	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	void Soloud::set3dSourceAttenuation(handle aVoiceHandle, unsigned int aAttenuationModel, float aAttenuationRolloffFactor)$/;"	f	class:SoLoud::Soloud
set3dSourceDopplerFactor	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	void Soloud::set3dSourceDopplerFactor(handle aVoiceHandle, float aDopplerFactor)$/;"	f	class:SoLoud::Soloud
set3dSourceMinMaxDistance	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	void Soloud::set3dSourceMinMaxDistance(handle aVoiceHandle, float aMinDistance, float aMaxDistance)$/;"	f	class:SoLoud::Soloud
set3dSourceParameters	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	void Soloud::set3dSourceParameters(handle aVoiceHandle, float aPosX, float aPosY, float aPosZ, float aVelocityX, float aVelocityY, float aVelocityZ)$/;"	f	class:SoLoud::Soloud
set3dSourcePosition	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	void Soloud::set3dSourcePosition(handle aVoiceHandle, float aPosX, float aPosY, float aPosZ)$/;"	f	class:SoLoud::Soloud
set3dSourceVelocity	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	void Soloud::set3dSourceVelocity(handle aVoiceHandle, float aVelocityX, float aVelocityY, float aVelocityZ)$/;"	f	class:SoLoud::Soloud
setAttrib	thirdparty/glfw/src/egl_context.c	429;"	d	file:
setAttrib	thirdparty/glfw/src/egl_context.c	679;"	d	file:
setAttrib	thirdparty/glfw/src/glx_context.c	423;"	d	file:
setAttrib	thirdparty/glfw/src/glx_context.c	619;"	d	file:
setAttrib	thirdparty/glfw/src/osmesa_context.c	187;"	d	file:
setAttrib	thirdparty/glfw/src/osmesa_context.c	284;"	d	file:
setAttrib	thirdparty/glfw/src/wgl_context.c	480;"	d	file:
setAttrib	thirdparty/glfw/src/wgl_context.c	726;"	d	file:
setChannels	thirdparty/soloud/src/core/soloud_bus.cpp	/^	result Bus::setChannels(unsigned int aChannels)$/;"	f	class:SoLoud::Bus
setCursorNameForWindow	thirdparty/glfw/src/mir_window.c	/^static void setCursorNameForWindow(MirWindow* window, char const* name)$/;"	f	file:
setDelaySamples	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	void Soloud::setDelaySamples(handle aVoiceHandle, unsigned int aSamples)$/;"	f	class:SoLoud::Soloud
setFilter	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::setFilter(unsigned int aFilterId, Filter *aFilter)$/;"	f	class:SoLoud::AudioSource
setFilter	thirdparty/soloud/src/core/soloud_bus.cpp	/^	void Bus::setFilter(unsigned int aFilterId, Filter *aFilter)$/;"	f	class:SoLoud::Bus
setFilterCutoff	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^inline void SIDsound::setFilterCutoff()$/;"	f	class:SIDsound
setFilterCutoff	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^inline void SIDsound::setFilterCutoff()$/;"	f	class:SIDsound
setFilterOrder	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^void TED::setFilterOrder(unsigned int value)$/;"	f	class:TED
setFilterParameter	thirdparty/soloud/src/core/soloud_core_filterops.cpp	/^	void Soloud::setFilterParameter(handle aVoiceHandle, unsigned int aFilterId, unsigned int aAttributeId, float aValue)$/;"	f	class:SoLoud::Soloud
setFilterParameter	thirdparty/soloud/src/core/soloud_filter.cpp	/^	void FilterInstance::setFilterParameter(unsigned int aAttributeId, float aValue)$/;"	f	class:SoLoud::FilterInstance
setFreq	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	/^inline void TED::setFreq(unsigned int channel, int freq)$/;"	f	class:TED
setFreq	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^inline void TED::setFreq(unsigned int channel, int freq)$/;"	f	class:TED
setFrequency	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^void SIDsound::setFrequency(unsigned int sid_frequency)$/;"	f	class:SIDsound
setFrequency	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^void SIDsound::setFrequency(unsigned int sid_frequency)$/;"	f	class:SIDsound
setGain	thirdparty/soloud/src/audiosource/speech/resonator.cpp	/^void resonator::setGain(float aG)$/;"	f	class:resonator
setGlobalFilter	thirdparty/soloud/src/core/soloud_core_filterops.cpp	/^	void Soloud::setGlobalFilter(unsigned int aFilterId, Filter *aFilter)$/;"	f	class:SoLoud::Soloud
setGlobalVolume	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	void Soloud::setGlobalVolume(float aVolume)$/;"	f	class:SoLoud::Soloud
setInaudibleBehavior	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::setInaudibleBehavior(bool aMustTick, bool aKill)$/;"	f	class:SoLoud::AudioSource
setInaudibleBehavior	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	void Soloud::setInaudibleBehavior(handle aVoiceHandle, bool aMustTick, bool aKill)$/;"	f	class:SoLoud::Soloud
setLFO	thirdparty/soloud/src/core/soloud_fader.cpp	/^	void Fader::setLFO(float aFrom, float aTo, double aTime, double aStartTime)$/;"	f	class:SoLoud::Fader
setLayoutCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                        setLayoutCount;$/;"	m	struct:VkPipelineLayoutCreateInfo
setLooping	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::setLooping(bool aLoop)$/;"	f	class:SoLoud::AudioSource
setLooping	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	void Soloud::setLooping(handle aVoiceHandle, bool aLooping)$/;"	f	class:SoLoud::Soloud
setMasterVolume	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^void TED::setMasterVolume(unsigned int shift)$/;"	f	class:TED
setMaxActiveVoiceCount	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	result Soloud::setMaxActiveVoiceCount(unsigned int aVoiceCount)$/;"	f	class:SoLoud::Soloud
setModel	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^void SIDsound::setModel(unsigned int model) $/;"	f	class:SIDsound
setModel	thirdparty/soloud/src/audiosource/vic/soloud_vic.cpp	/^	void Vic::setModel(int model)$/;"	f	class:SoLoud::Vic
setModel	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^void SIDsound::setModel(unsigned int model) $/;"	f	class:SIDsound
setOpaqueRegion	thirdparty/glfw/src/wl_window.c	/^static void setOpaqueRegion(_GLFWwindow* window)$/;"	f	file:
setPC	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^void CPU::setPC(unsigned int addr)$/;"	f	class:CPU
setPan	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	void Soloud::setPan(handle aVoiceHandle, float aPan)$/;"	f	class:SoLoud::Soloud
setPanAbsolute	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	void Soloud::setPanAbsolute(handle aVoiceHandle, float aLVolume, float aRVolume, float aLBVolume, float aRBVolume, float aCVolume, float aSVolume)$/;"	f	class:SoLoud::Soloud
setParams	thirdparty/soloud/src/audiosource/monotone/soloud_monotone.cpp	/^	result Monotone::setParams(int aHardwareChannels, int aWaveform)$/;"	f	class:SoLoud::Monotone
setParams	thirdparty/soloud/src/filter/soloud_bassboostfilter.cpp	/^	result BassboostFilter::setParams(float aBoost)$/;"	f	class:SoLoud::BassboostFilter
setParams	thirdparty/soloud/src/filter/soloud_biquadresonantfilter.cpp	/^	result BiquadResonantFilter::setParams(int aType, float aSampleRate, float aFrequency, float aResonance)$/;"	f	class:SoLoud::BiquadResonantFilter
setParams	thirdparty/soloud/src/filter/soloud_dcremovalfilter.cpp	/^	result DCRemovalFilter::setParams(float aLength)$/;"	f	class:SoLoud::DCRemovalFilter
setParams	thirdparty/soloud/src/filter/soloud_echofilter.cpp	/^	result EchoFilter::setParams(float aDelay, float aDecay, float aFilter)$/;"	f	class:SoLoud::EchoFilter
setParams	thirdparty/soloud/src/filter/soloud_flangerfilter.cpp	/^	result FlangerFilter::setParams(float aDelay, float aFreq)$/;"	f	class:SoLoud::FlangerFilter
setParams	thirdparty/soloud/src/filter/soloud_lofifilter.cpp	/^	result LofiFilter::setParams(float aSampleRate, float aBitdepth)$/;"	f	class:SoLoud::LofiFilter
setPause	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	void Soloud::setPause(handle aVoiceHandle, bool aPause)$/;"	f	class:SoLoud::Soloud
setPauseAll	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	void Soloud::setPauseAll(bool aPause)$/;"	f	class:SoLoud::Soloud
setPostClipScaler	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	void Soloud::setPostClipScaler(float aScaler)$/;"	f	class:SoLoud::Soloud
setProtectVoice	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	void Soloud::setProtectVoice(handle aVoiceHandle, bool aProtect)$/;"	f	class:SoLoud::Soloud
setPsid	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	void setPsid(bool isPsidFormat) { psidFormat = isPsidFormat; };$/;"	f	class:TED
setPsidPlayAddress	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	void setPsidPlayAddress(unsigned int addr) { psidReplayAddr = addr; };$/;"	f	class:TED
setRamMask	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	void setRamMask(unsigned int value) { RAMMask=value;}$/;"	f	class:TED
setRegister	thirdparty/soloud/include/soloud/soloud_vic.h	/^		void setRegister(int reg, unsigned char value) 		{ m_regs[reg] = value; }$/;"	f	class:SoLoud::Vic
setRelativePlaySpeed	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	result Soloud::setRelativePlaySpeed(handle aVoiceHandle, float aSpeed)$/;"	f	class:SoLoud::Soloud
setReplayFreq	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	virtual void setReplayFreq() {$/;"	f	class:SIDsound
setReplayFreq	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	virtual void setReplayFreq() {$/;"	f	class:SIDsound
setResonance	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^inline void SIDsound::setResonance()$/;"	f	class:SIDsound
setResonance	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^inline void SIDsound::setResonance()$/;"	f	class:SIDsound
setST	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		void setST(unsigned char st) { ST = st; };$/;"	f	class:CPU
setSampleRate	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^void SIDsound::setSampleRate(unsigned int sampleRate_)$/;"	f	class:SIDsound
setSampleRate	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^void SIDsound::setSampleRate(unsigned int sampleRate_)$/;"	f	class:SIDsound
setSampleRate	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^void TED::setSampleRate(unsigned int value)$/;"	f	class:TED
setSamplerate	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	void Soloud::setSamplerate(handle aVoiceHandle, float aSamplerate)$/;"	f	class:SoLoud::Soloud
setSingleInstance	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::setSingleInstance(bool aSingleInstance)$/;"	f	class:SoLoud::AudioSource
setSpeakerPosition	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	result Soloud::setSpeakerPosition(unsigned int aChannel, float aX, float aY, float aZ)$/;"	f	class:SoLoud::Soloud
setText	thirdparty/soloud/src/audiosource/speech/soloud_speech.cpp	/^	result Speech::setText(const char *aText)$/;"	f	class:SoLoud::Speech
setVisualizationEnable	thirdparty/soloud/src/core/soloud_bus.cpp	/^	void Bus::setVisualizationEnable(bool aEnable)$/;"	f	class:SoLoud::Bus
setVisualizationEnable	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	void Soloud::setVisualizationEnable(bool aEnable)$/;"	f	class:SoLoud::Soloud
setVoicePan	thirdparty/soloud/src/core/soloud_core_voiceops.cpp	/^	void Soloud::setVoicePan(unsigned int aVoice, float aPan)$/;"	f	class:SoLoud::Soloud
setVoicePause	thirdparty/soloud/src/core/soloud_core_voiceops.cpp	/^	void Soloud::setVoicePause(unsigned int aVoice, int aPause)$/;"	f	class:SoLoud::Soloud
setVoiceRelativePlaySpeed	thirdparty/soloud/src/core/soloud_core_voiceops.cpp	/^	result Soloud::setVoiceRelativePlaySpeed(unsigned int aVoice, float aSpeed)$/;"	f	class:SoLoud::Soloud
setVoiceVolume	thirdparty/soloud/src/core/soloud_core_voiceops.cpp	/^	void Soloud::setVoiceVolume(unsigned int aVoice, float aVolume)$/;"	f	class:SoLoud::Soloud
setVolume	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::setVolume(float aVolume)$/;"	f	class:SoLoud::AudioSource
setVolume	thirdparty/soloud/src/core/soloud_core_setters.cpp	/^	void Soloud::setVolume(handle aVoiceHandle, float aVolume)$/;"	f	class:SoLoud::Soloud
setWindowConfinement	thirdparty/glfw/src/mir_window.c	/^static void setWindowConfinement(_GLFWwindow* window, MirPointerConfinementState state)$/;"	f	file:
set_atten	lib/roa/src/interface/light.cpp	/^Light::set_atten(const float con, const float lin, const float exp)$/;"	f	class:ROA::Light
set_captured	lib/roa/src/interface/mouse.cpp	/^set_captured(const bool set)$/;"	f	namespace:ROA::Mouse
set_clear_color	lib/roa/src/interface/camera.cpp	/^Camera::set_clear_color(const Color &color)$/;"	f	class:ROA::Camera
set_color	lib/roa/src/interface/material.cpp	/^Material::set_color(const Color &col)$/;"	f	class:ROA::Material
set_constant_atten	lib/roa/src/interface/light.cpp	/^Light::set_constant_atten(const float atten)$/;"	f	class:ROA::Light
set_data	lib/nil/src/graph/graph.cpp	/^set_data(const uint32_t parent, const uint32_t depth)$/;"	f	namespace:Nil::Graph::__anon21
set_data	lib/nil/src/interface/data/common.hpp	/^  set_data(Nil::Node &node, const T &in)$/;"	f	struct:Nil::Data::Generic_data
set_data	lib/roa/include/roa/object.hpp	/^  set_data(const T &t)$/;"	f	class:ROA::Object
set_data_helper	lib/nil/src/interface/data/common.hpp	/^set_data_helper($/;"	f	namespace:Nil::Data
set_exponential_atten	lib/roa/src/interface/light.cpp	/^Light::set_exponential_atten(const float atten)$/;"	f	class:ROA::Light
set_far_plane	lib/roa/src/interface/camera.cpp	/^Camera::set_far_plane(const float far)$/;"	f	class:ROA::Camera
set_field_of_view	lib/roa/src/interface/camera.cpp	/^Camera::set_field_of_view(const float radians)$/;"	f	class:ROA::Camera
set_file_offset	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int set_file_offset(stb_vorbis *f, unsigned int loc)$/;"	f	file:
set_file_offset	thirdparty/stb/include/stb/stb_vorbis.c	/^static int set_file_offset(stb_vorbis *f, unsigned int loc)$/;"	f	file:
set_fragment_shader_code	lib/roa/src/interface/shader.cpp	/^Shader::set_fragment_shader_code(const char *src)$/;"	f	class:ROA::Shader
set_geometry_shader_code	lib/roa/src/interface/shader.cpp	/^Shader::set_geometry_shader_code(const char *src)$/;"	f	class:ROA::Shader
set_height	lib/roa/src/interface/camera.cpp	/^Camera::set_height(const float height)$/;"	f	class:ROA::Camera
set_linear_atten	lib/roa/src/interface/light.cpp	/^Light::set_linear_atten(const float atten)$/;"	f	class:ROA::Light
set_material	lib/roa/src/interface/renderable.cpp	/^Renderable::set_material(const ROA::Material &mat)$/;"	f	class:ROA::Renderable
set_max	lib/roa/src/interface/bounding_box.cpp	/^Bounding_box::set_max(const Vector3 &in)$/;"	f	class:ROA::Bounding_box
set_mesh	lib/roa/src/interface/renderable.cpp	/^Renderable::set_mesh(const Mesh &mesh)$/;"	f	class:ROA::Renderable
set_message_func	lib/roa/src/interface/logic.cpp	/^Logic::set_message_func(Logic_message_func msg_fn)$/;"	f	class:ROA::Logic
set_min	lib/roa/src/interface/bounding_box.cpp	/^Bounding_box::set_min(const Vector3 &in)$/;"	f	class:ROA::Bounding_box
set_name	lib/lib/include/lib/nyaml.hpp	/^node::set_name(const std::string &str)$/;"	f	class:LIB_NS_NAME::nyaml::node
set_name	lib/nil/src/interface/node.cpp	/^Node::set_name(const char *name)$/;"	f	class:Nil::Node
set_name	lib/roa/src/interface/object.cpp	/^Object::set_name(const char *name)$/;"	f	class:ROA::Object
set_near_plane	lib/roa/src/interface/camera.cpp	/^Camera::set_near_plane(const float near)$/;"	f	class:ROA::Camera
set_nil_data	lib/roa/src/common/common.hpp	/^set_nil_data(ROA::Object obj, T &in_data)$/;"	f	namespace:ROA_detail
set_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^set_node_data(ROA::Object &obj, const ROA::Audio_player &data)$/;"	f	namespace:ROA_detail
set_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^set_node_data(ROA::Object &obj, const ROA::Bounding_box &data)$/;"	f	namespace:ROA_detail
set_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^set_node_data(ROA::Object &obj, const ROA::Camera &data)$/;"	f	namespace:ROA_detail
set_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^set_node_data(ROA::Object &obj, const ROA::Light &data)$/;"	f	namespace:ROA_detail
set_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^set_node_data(ROA::Object &obj, const ROA::Logic &data)$/;"	f	namespace:ROA_detail
set_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^set_node_data(ROA::Object &obj, const ROA::Renderable &data)$/;"	f	namespace:ROA_detail
set_node_data	lib/roa/src/interface/detail/component_interface.cpp	/^set_node_data(ROA::Object &obj, const ROA::Transform &data)$/;"	f	namespace:ROA_detail
set_output	lib/lib/include/lib/logging.hpp	/^set_output(const uint32_t output)$/;"	f	namespace:LIB_NS_NAME::logging
set_parent	lib/lib/include/lib/nyaml.hpp	/^node::set_parent(node* set_parent)$/;"	f	class:LIB_NS_NAME::nyaml::node
set_parent	lib/nil/src/interface/node.cpp	/^Node::set_parent(const Node &other)$/;"	f	class:Nil::Node
set_parent	lib/roa/src/interface/object.cpp	/^Object::set_parent(const ROA::Object obj)$/;"	f	class:ROA::Object
set_play	lib/roa/src/interface/audio_player.cpp	/^Audio_player::set_play(const bool play)$/;"	f	class:ROA::Audio_player
set_position	lib/roa/src/interface/transform.cpp	/^Transform::set_position(const ROA::Vector3 &in)$/;"	f	class:ROA::Transform
set_priority	lib/roa/src/interface/camera.cpp	/^Camera::set_priority(const int32_t priority)$/;"	f	class:ROA::Camera
set_rotation	lib/roa/src/interface/transform.cpp	/^Transform::set_rotation(const Quaternion &in)$/;"	f	class:ROA::Transform
set_scale	lib/roa/src/interface/transform.cpp	/^Transform::set_scale(const Vector3 &in)$/;"	f	class:ROA::Transform
set_shader	lib/roa/src/interface/material.cpp	/^Material::set_shader(const Shader &shader)$/;"	f	class:ROA::Material
set_shader_type	lib/roa/src/interface/shader.cpp	/^Shader::set_shader_type(const Shader_type type)$/;"	f	class:ROA::Shader
set_source	lib/roa/src/interface/audio_player.cpp	/^Audio_player::set_source(Audio_source &in)$/;"	f	class:ROA::Audio_player
set_trans	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^static void set_trans(Slope *t, Element * a, Element * b,int ext, int e)$/;"	f	file:
set_type	lib/roa/src/interface/light.cpp	/^Light::set_type(const Light_type type)$/;"	f	class:ROA::Light
set_update_func	lib/roa/src/interface/logic.cpp	/^Logic::set_update_func(Logic_update_func update_fn)$/;"	f	class:ROA::Logic
set_user_data	lib/nil/src/interface/node.cpp	/^Node::set_user_data(const uintptr_t user_data)$/;"	f	class:Nil::Node
set_user_data	lib/roa/src/interface/object.cpp	/^Object::set_user_data(uintptr_t user_data)$/;"	f	class:ROA::Object
set_value	lib/lib/include/lib/nyaml.hpp	/^node::set_value(const std::string &str)$/;"	f	class:LIB_NS_NAME::nyaml::node
set_vertex_shader_code	lib/roa/src/interface/shader.cpp	/^Shader::set_vertex_shader_code(const char *src)$/;"	f	class:ROA::Shader
set_volume	lib/roa/src/interface/audio_player.cpp	/^Audio_player::set_volume(const float val)$/;"	f	class:ROA::Audio_player
set_width	lib/roa/src/interface/camera.cpp	/^Camera::set_width(const float width)$/;"	f	class:ROA::Camera
set_world_position	lib/roa/src/interface/transform.cpp	/^Transform::set_world_position(const Vector3 pos)$/;"	f	class:ROA::Transform
setplaybackSpeed	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^void TED::setplaybackSpeed(unsigned int speed)$/;"	f	class:TED
setter_fn	lib/nil/src/interface/data/common.hpp	/^  setter_cb setter_fn = nullptr;$/;"	m	struct:Nil::Data::Generic_data
setup	app/perils/src/data/data.cpp	/^setup()$/;"	f	namespace:Game_data
setup	app/perils/src/game/dynamic_object.cpp	/^setup(Data *obj)$/;"	f	namespace:Dynamic_object
setup_free	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void setup_free(vorb *f, void *p)$/;"	f	file:
setup_free	thirdparty/stb/include/stb/stb_vorbis.c	/^static void setup_free(vorb *f, void *p)$/;"	f	file:
setup_malloc	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void *setup_malloc(vorb *f, int sz)$/;"	f	file:
setup_malloc	thirdparty/stb/include/stb/stb_vorbis.c	/^static void *setup_malloc(vorb *f, int sz)$/;"	f	file:
setup_memory_required	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   unsigned int setup_memory_required;$/;"	m	struct:__anon202	file:
setup_memory_required	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   unsigned int setup_memory_required;$/;"	m	struct:stb_vorbis	file:
setup_memory_required	thirdparty/stb/include/stb/stb_vorbis.c	/^   unsigned int setup_memory_required;$/;"	m	struct:__anon115	file:
setup_memory_required	thirdparty/stb/include/stb/stb_vorbis.c	/^   unsigned int setup_memory_required;$/;"	m	struct:stb_vorbis	file:
setup_offset	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int setup_offset;$/;"	m	struct:stb_vorbis	file:
setup_offset	thirdparty/stb/include/stb/stb_vorbis.c	/^   int setup_offset;$/;"	m	struct:stb_vorbis	file:
setup_resource	lib/roa/src/interface/detail/resource_interface.cpp	/^setup_resource(const uint32_t id)$/;"	f	namespace:ROA_detail
setup_temp_free	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void setup_temp_free(vorb *f, void *p, int sz)$/;"	f	file:
setup_temp_free	thirdparty/stb/include/stb/stb_vorbis.c	/^static void setup_temp_free(vorb *f, void *p, int sz)$/;"	f	file:
setup_temp_malloc	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void *setup_temp_malloc(vorb *f, int sz)$/;"	f	file:
setup_temp_malloc	thirdparty/stb/include/stb/stb_vorbis.c	/^static void *setup_temp_malloc(vorb *f, int sz)$/;"	f	file:
setup_temp_memory_required	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   unsigned int setup_temp_memory_required;$/;"	m	struct:__anon202	file:
setup_temp_memory_required	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   unsigned int setup_temp_memory_required;$/;"	m	struct:stb_vorbis	file:
setup_temp_memory_required	thirdparty/stb/include/stb/stb_vorbis.c	/^   unsigned int setup_temp_memory_required;$/;"	m	struct:__anon115	file:
setup_temp_memory_required	thirdparty/stb/include/stb/stb_vorbis.c	/^   unsigned int setup_temp_memory_required;$/;"	m	struct:stb_vorbis	file:
sha1macro	thirdparty/remotery/src/Remotery.c	2544;"	d	file:
sha1macro	thirdparty/remotery/src/Remotery.c	2584;"	d	file:
shaderClipDistance	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderClipDistance;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderCullDistance	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderCullDistance;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderFloat64	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderFloat64;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderImageGatherExtended	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderImageGatherExtended;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderInt16	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderInt16;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderInt64	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderInt64;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderResourceMinLod	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderResourceMinLod;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderResourceResidency	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderResourceResidency;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderSampledImageArrayDynamicIndexing	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderSampledImageArrayDynamicIndexing;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderStorageBufferArrayDynamicIndexing	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderStorageBufferArrayDynamicIndexing;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderStorageImageArrayDynamicIndexing	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderStorageImageArrayDynamicIndexing;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderStorageImageExtendedFormats	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderStorageImageExtendedFormats;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderStorageImageMultisample	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderStorageImageMultisample;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderStorageImageReadWithoutFormat	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderStorageImageReadWithoutFormat;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderStorageImageWriteWithoutFormat	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderStorageImageWriteWithoutFormat;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderTessellationAndGeometryPointSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderTessellationAndGeometryPointSize;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderUniformBufferArrayDynamicIndexing	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    shaderUniformBufferArrayDynamicIndexing;$/;"	m	struct:VkPhysicalDeviceFeatures
shader_id	lib/nil/include/nil/resource/material.hpp	/^  uint32_t        shader_id;$/;"	m	struct:Nil_material
shader_type	lib/rov/src/rov_data.hpp	/^  uint32_t shader_type;$/;"	m	struct:ROV_Internal::rovRenderPass
shader_type_name	lib/nil/src/interface/resource/shader.cpp	/^constexpr char shader_type_name[] = "Shader";$/;"	m	namespace:__anon38	file:
shape_AA	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_anti_aliasing shape_AA; \/* shape anti-aliasing flag can be turned off if you are tight on memory *\/$/;"	m	struct:nk_convert_config	typeref:enum:nk_convert_config::nk_anti_aliasing
share	thirdparty/glfw/src/internal.h	/^    _GLFWwindow*  share;$/;"	m	struct:_GLFWctxconfig
sharingMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSharingMode            sharingMode;$/;"	m	struct:VkImageCreateInfo
sharingMode	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSharingMode          sharingMode;$/;"	m	struct:VkBufferCreateInfo
shcore	thirdparty/glfw/src/win32_platform.h	/^    } shcore;$/;"	m	struct:_GLFWlibraryWin32	typeref:struct:_GLFWlibraryWin32::__anon158
shell	thirdparty/glfw/src/wl_platform.h	/^    struct wl_shell*            shell;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::wl_shell
shellSurface	thirdparty/glfw/src/wl_platform.h	/^    struct wl_shell_surface*    shellSurface;$/;"	m	struct:_GLFWwindowWayland	typeref:struct:_GLFWwindowWayland::wl_shell_surface
shellSurfaceListener	thirdparty/glfw/src/wl_window.c	/^static const struct wl_shell_surface_listener shellSurfaceListener = {$/;"	v	typeref:struct:wl_shell_surface_listener	file:
shiftMask	thirdparty/glfw/src/wl_platform.h	/^        xkb_mod_mask_t          shiftMask;$/;"	m	struct:_GLFWlibraryWayland::__anon144
shiftReg	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int shiftReg;	\/\/ shift register for noise waveform$/;"	m	class:SIDsound::SIDVoice
shiftReg	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int shiftReg;	\/\/ shift register for noise waveform$/;"	m	class:SIDsound::SIDVoice
shm	thirdparty/glfw/src/wl_platform.h	/^    struct wl_shm*              shm;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::wl_shm
short_string	lib/nil/src/graph/graph_data.hpp	/^struct short_string$/;"	s	namespace:Nil::Graph
shouldClose	thirdparty/glfw/src/internal.h	/^    GLFWbool            shouldClose;$/;"	m	struct:_GLFWwindow
shouldContinueOnFailure	thirdparty/catch/include/catch/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	thirdparty/catch/include/catch/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
show	thirdparty/stb/include/stb/stb_divide.h	/^int show=0;$/;"	v
show_buttons	thirdparty/glfw/src/deps/nuklear.h	/^    int show_buttons;$/;"	m	struct:nk_style_scrollbar
show_buttons	thirdparty/glfw/src/deps/nuklear.h	/^    int show_buttons;$/;"	m	struct:nk_style_slider
show_data_audio	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_audio;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_bbox	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_bbox;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_camera	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_camera;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_collider	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_collider;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_developer	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_developer;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_gamepad	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_gamepad;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_keyboard	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_keyboard;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_light	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_light;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_logic	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_logic;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_mouse	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_mouse;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_overview	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_overview;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_renderables	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_renderables;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_rigidbody	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_rigidbody;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_transform	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_transform;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_data_window	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_data_window;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_graph	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_graph;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_lib_memory	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_lib_memory;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_menu	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_menu;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_node_events	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_node_events;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_raw_graph	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_raw_graph;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_rsrc_materials	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_rsrc_materials;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_rsrc_meshes	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_rsrc_meshes;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_rsrc_overview	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_rsrc_overview;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
show_rsrc_textures	lib/nil_aspects/include/aspect/imgui_aspect.hpp	/^  bool show_rsrc_textures;$/;"	m	struct:Nil_ext::ImGui_Aspect::Data
shut_down	lib/nil_aspects/src/imgui/imgui_aspect.cpp	/^shut_down(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ImGui_Aspect
shut_down	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^shut_down(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
shut_down	lib/nil_aspects/src/roa_aspect.cpp	/^shut_down(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROA_Aspect
shut_down	lib/nil_aspects/src/so_loud.cpp	/^shut_down(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::SoLoud_Aspect
shutdown	lib/nil/include/nil/aspect.hpp	/^  Nil_aspect_callback_fn      shutdown;$/;"	m	struct:Nil_aspect
sidBaseFreq	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	unsigned int sidBaseFreq;	\/\/ SID base frequency$/;"	m	class:SIDsound
sidBaseFreq	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	unsigned int sidBaseFreq;	\/\/ SID base frequency$/;"	m	class:SIDsound
sidCard	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	SIDsound *sidCard;$/;"	m	class:TED
sidCyclesPerSampleInt	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	unsigned int sidCyclesPerSampleInt;$/;"	m	class:SIDsound
sidCyclesPerSampleInt	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	unsigned int sidCyclesPerSampleInt;$/;"	m	class:SIDsound
sign	lib/math/include/math/general/general.hpp	/^sign(const float x)$/;"	f
signalSemaphoreCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                                    signalSemaphoreCount;$/;"	m	struct:VkBindSparseInfo
signalSemaphoreCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                       signalSemaphoreCount;$/;"	m	struct:VkSubmitInfo
simd_vec	lib/math/include/math/vec/vec_types.hpp	/^    SIMD_TYPE simd_vec;$/;"	m	union:vec2::__anon52
simd_vec	lib/math/include/math/vec/vec_types.hpp	/^    SIMD_TYPE simd_vec;$/;"	m	union:vec3::__anon51
simd_vec	lib/math/include/math/vec/vec_types.hpp	/^    SIMD_TYPE simd_vec;$/;"	m	union:vec4::__anon50
sin	lib/math/include/math/general/general.hpp	/^sin(const float radians)$/;"	f
sincpi	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^float sincpi(float x)$/;"	f
single_line	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char single_line;$/;"	m	struct:nk_edit_state
single_line	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char single_line;$/;"	m	struct:nk_text_edit
single_line	thirdparty/stb/include/stb/stb_textedit.h	/^   unsigned char single_line;$/;"	m	struct:__anon132
size	lib/lib/include/lib/array.hpp	/^  size_t size() const       { return (m_end - m_begin); }$/;"	f	class:LIB_NS_NAME::array
size	lib/lib/include/lib/string_pool.hpp	/^size()$/;"	f	namespace:LIB_NS_NAME::string_pool
size	lib/roa/src/interface/collection.cpp	/^Collection::size() const$/;"	f	class:ROA::Collection
size	thirdparty/glfw/include/GLFW/glfw3.h	/^    unsigned int size;$/;"	m	struct:GLFWgammaramp
size	thirdparty/glfw/src/deps/nuklear.h	/^    float size;$/;"	m	struct:nk_font_config
size	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_buffer
size	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_memory_status
size	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_pool
size	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int size;$/;"	m	struct:nk_page
size	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_cursor::nk_vec2
size	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	m	struct:nk_memory
size	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize               size;$/;"	m	struct:VkSparseMemoryBind
size	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize           size;$/;"	m	struct:VkBufferCreateInfo
size	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize         size;$/;"	m	struct:VkMemoryHeap
size	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize       size;$/;"	m	struct:VkBufferMemoryBarrier
size	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize       size;$/;"	m	struct:VkMappedMemoryRange
size	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize    size;$/;"	m	struct:VkBufferCopy
size	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize    size;$/;"	m	struct:VkMemoryRequirements
size	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize    size;$/;"	m	struct:VkSubresourceLayout
size	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    size_t      size;$/;"	m	struct:VkSpecializationMapEntry
size	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              size;$/;"	m	struct:VkPushConstantRange
size	thirdparty/glfw/src/internal.h	/^        GLFWwindowsizefun       size;$/;"	m	struct:_GLFWwindow::__anon162
size	thirdparty/imgui/include/imgui/imgui.h	/^    inline int                  size() const                    { return Size; }$/;"	f	class:ImVector
size	thirdparty/imgui/include/imgui/imgui.h	/^    int                 size() const { return Buf.Size - 1; }$/;"	f	struct:ImGuiTextBuffer
size	thirdparty/json/src/json.c	/^  size_t size;$/;"	m	struct:json_parse_state_s	file:
size	thirdparty/remotery/src/Remotery.c	/^    rmtU32 size;$/;"	m	struct:VirtualMirrorBuffer	file:
size	thirdparty/remotery/src/Remotery.c	/^    rmtU32 size;$/;"	m	struct:rmtMessageQueue	file:
size	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anon80
size	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc  size[288];$/;"	m	struct:__anon84
size	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon90
size	thirdparty/stb/include/stb/stb_truetype.h	/^   int size;$/;"	m	struct:__anon96
size_bytes	thirdparty/remotery/src/Remotery.c	/^    rmtU32 size_bytes;$/;"	m	struct:Sample	file:
sizeof	thirdparty/glfw/src/deps/nuklear.h	/^NK_STATIC_ASSERT(sizeof(nk_ptr) == sizeof(void*));$/;"	v
sizer	thirdparty/catch/include/catch/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	thirdparty/catch/include/catch/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
skip	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void skip(vorb *z, int n)$/;"	f	file:
skip	thirdparty/stb/include/stb/stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget' the last -n bytes if negative$/;"	m	struct:__anon75
skip	thirdparty/stb/include/stb/stb_vorbis.c	/^static void skip(vorb *z, int n)$/;"	f	file:
sleep	thirdparty/soloud/src/core/soloud_thread.cpp	/^		void sleep(int aMSec)$/;"	f	namespace:SoLoud::Thread
slider	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_slider slider;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_slider
sliderCount	thirdparty/glfw/src/win32_joystick.c	/^    int                     sliderCount;$/;"	m	struct:_GLFWobjenumWin32	file:
slot	thirdparty/glfw/src/deps/nuklear.h	/^    int slot;$/;"	m	struct:nk_chart
slot_free	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^  			bool slot_free;  			$/;"	m	struct:CPU::__anon195
slots	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_chart_slot slots[NK_CHART_MAX_SLOT];$/;"	m	struct:nk_chart	typeref:struct:nk_chart::nk_chart_slot
slots	thirdparty/remotery/src/Remotery.c	/^    HashSlot* slots;$/;"	m	struct:__anon58	file:
smallIcon	thirdparty/glfw/src/win32_platform.h	/^    HICON               smallIcon;$/;"	m	struct:_GLFWwindowWin32
smbFft	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^static void smbFft(float *fftBuffer, int fftFrameSizeLog, int sign)$/;"	f	file:
snapTension	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const float snapTension = 0.5f;$/;"	m	namespace:ImGuizmo	file:
snprintf	thirdparty/imgui/src/imgui_draw.cpp	36;"	d	file:
socket	thirdparty/remotery/src/Remotery.c	/^    SOCKET socket;$/;"	m	struct:__anon60	file:
softreset	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^void CPU::softreset()$/;"	f	class:CPU
soloud	lib/nil_aspects/include/aspect/so_loud.hpp	/^  SoLoud::Soloud soloud; \/\/ Engine core$/;"	m	struct:Nil_ext::SoLoud_Aspect::Data
soloud	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^        Soloud *soloud;$/;"	m	struct:SoLoud::ALSAData	file:
soloud	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^        Soloud *soloud;$/;"	m	struct:SoLoud::OSSData	file:
soloud	thirdparty/soloud/src/backend/vita_homebrew/soloud_vita_homebrew.cpp	/^		Soloud *soloud;$/;"	m	struct:SoLoud::VitaData	file:
soloud	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^        Soloud *soloud;$/;"	m	struct:SoLoud::WASAPIData	file:
soloud	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^        Soloud *soloud;$/;"	m	struct:SoLoud::SoLoudWinMMData	file:
soloud	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        Soloud *soloud;$/;"	m	struct:SoLoud::XAudio2Data	file:
soloudCallFunction	thirdparty/soloud/include/soloud/soloud.h	/^	typedef void (*soloudCallFunction)(Soloud *aSoloud);$/;"	t	namespace:SoLoud
soloud_portaudio_deinit	thirdparty/soloud/src/backend/portaudio/soloud_portaudio.cpp	/^	void soloud_portaudio_deinit(SoLoud::Soloud *aSoloud)$/;"	f	namespace:SoLoud
soloud_thread_data	thirdparty/soloud/src/core/soloud_thread.cpp	/^		struct soloud_thread_data$/;"	s	namespace:SoLoud::Thread	file:
sorted_codewords	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 *sorted_codewords;$/;"	m	struct:__anon203	file:
sorted_codewords	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 *sorted_codewords;$/;"	m	struct:__anon116	file:
sorted_entries	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int     sorted_entries;$/;"	m	struct:__anon203	file:
sorted_entries	thirdparty/stb/include/stb/stb_vorbis.c	/^   int     sorted_entries;$/;"	m	struct:__anon116	file:
sorted_order	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 sorted_order[31*8+2];$/;"	m	struct:__anon205	file:
sorted_order	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 sorted_order[31*8+2];$/;"	m	struct:__anon118	file:
sorted_values	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int    *sorted_values;$/;"	m	struct:__anon203	file:
sorted_values	thirdparty/stb/include/stb/stb_vorbis.c	/^   int    *sorted_values;$/;"	m	struct:__anon116	file:
sound_vol	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float sound_vol;$/;"	m	struct:SoLoud::SfxrParams
source	thirdparty/glfw/src/internal.h	/^    int                 source;$/;"	m	struct:_GLFWcontext
source	thirdparty/glfw/src/internal.h	/^    int           source;$/;"	m	struct:_GLFWctxconfig
source	thirdparty/glfw/src/x11_platform.h	/^        Window      source;$/;"	m	struct:_GLFWlibraryX11::__anon148
sourceVoice	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        IXAudio2SourceVoice *sourceVoice;$/;"	m	struct:SoLoud::XAudio2Data	file:
spacing	thirdparty/glfw/src/deps/nuklear.h	/^    float spacing;$/;"	m	struct:nk_style_toggle
spacing	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config::nk_vec2
spacing	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_vec2
spacing	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_vec2
spacing	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_vec2
spacing	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
spacing	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_vec2
sparse	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8  sparse;$/;"	m	struct:__anon203	file:
sparse	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8  sparse;$/;"	m	struct:__anon116	file:
sparseAddressSpaceSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize          sparseAddressSpaceSize;$/;"	m	struct:VkPhysicalDeviceLimits
sparseBinding	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    sparseBinding;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseProperties	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPhysicalDeviceSparseProperties    sparseProperties;$/;"	m	struct:VkPhysicalDeviceProperties
sparseResidency16Samples	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    sparseResidency16Samples;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidency2Samples	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    sparseResidency2Samples;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidency4Samples	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    sparseResidency4Samples;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidency8Samples	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    sparseResidency8Samples;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidencyAliased	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    sparseResidencyAliased;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidencyBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    sparseResidencyBuffer;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidencyImage2D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    sparseResidencyImage2D;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidencyImage3D	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    sparseResidencyImage3D;$/;"	m	struct:VkPhysicalDeviceFeatures
spc	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_tt_pack_context spc;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_tt_pack_context
specVersion	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    specVersion;$/;"	m	struct:VkExtensionProperties
specVersion	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    specVersion;$/;"	m	struct:VkLayerProperties
specVersion	thirdparty/glfw/src/internal.h	/^    uint32_t        specVersion;$/;"	m	struct:VkExtensionProperties
spec_end	thirdparty/stb/include/stb/stb_image.h	/^   int            spec_end;$/;"	m	struct:__anon81
spec_start	thirdparty/stb/include/stb/stb_image.h	/^   int            spec_start;$/;"	m	struct:__anon81
spell_out	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static int spell_out(const char *word, int n, darray *phone)$/;"	f	file:
split	thirdparty/imgui/src/imgui.cpp	/^void ImGuiTextFilter::TextRange::split(char separator, ImVector<TextRange>& out)$/;"	f	class:ImGuiTextFilter::TextRange
sqrt	lib/math/include/math/general/general.hpp	/^sqrt(const float x)$/;"	f
square	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static float square(float x)$/;"	f	file:
square	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^float square(float v)$/;"	f
square	thirdparty/stb/include/stb/stb_vorbis.c	/^static float square(float x)$/;"	f	file:
square_duty	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float square_duty;$/;"	m	class:SoLoud::SfxrInstance
square_slide	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float square_slide;$/;"	m	class:SoLoud::SfxrInstance
srand	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	void Prg::srand(int aSeed)$/;"	f	class:SoLoud::Prg
src	thirdparty/json/src/json.c	/^  const char *src;$/;"	m	struct:json_parse_state_s	file:
srcAccessMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAccessFlags              srcAccessMask;$/;"	m	struct:VkImageMemoryBarrier
srcAccessMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAccessFlags           srcAccessMask;$/;"	m	struct:VkSubpassDependency
srcAccessMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAccessFlags      srcAccessMask;$/;"	m	struct:VkBufferMemoryBarrier
srcAccessMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAccessFlags      srcAccessMask;$/;"	m	struct:VkMemoryBarrier
srcAlphaBlendFactor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBlendFactor            srcAlphaBlendFactor;$/;"	m	struct:VkPipelineColorBlendAttachmentState
srcArrayElement	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           srcArrayElement;$/;"	m	struct:VkCopyDescriptorSet
srcBinding	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           srcBinding;$/;"	m	struct:VkCopyDescriptorSet
srcColorBlendFactor	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBlendFactor            srcColorBlendFactor;$/;"	m	struct:VkPipelineColorBlendAttachmentState
srcOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDeviceSize    srcOffset;$/;"	m	struct:VkBufferCopy
srcOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkOffset3D                  srcOffset;$/;"	m	struct:VkImageCopy
srcOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkOffset3D                  srcOffset;$/;"	m	struct:VkImageResolve
srcOffsets	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkOffset3D                  srcOffsets[2];$/;"	m	struct:VkImageBlit
srcQueueFamilyIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                   srcQueueFamilyIndex;$/;"	m	struct:VkImageMemoryBarrier
srcQueueFamilyIndex	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t           srcQueueFamilyIndex;$/;"	m	struct:VkBufferMemoryBarrier
srcRect	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkRect2D           srcRect;$/;"	m	struct:VkDisplayPresentInfoKHR
srcSet	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDescriptorSet    srcSet;$/;"	m	struct:VkCopyDescriptorSet
srcStageMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineStageFlags    srcStageMask;$/;"	m	struct:VkSubpassDependency
srcSubpass	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                srcSubpass;$/;"	m	struct:VkSubpassDependency
srcSubresource	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageSubresourceLayers    srcSubresource;$/;"	m	struct:VkImageBlit
srcSubresource	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageSubresourceLayers    srcSubresource;$/;"	m	struct:VkImageCopy
srcSubresource	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageSubresourceLayers    srcSubresource;$/;"	m	struct:VkImageResolve
stack	thirdparty/soloud/src/tools/tedsid2dump/cpu.h	/^		unsigned char *stack;$/;"	m	class:CPU
stack_hint	lib/nil/src/graph/graph.cpp	/^constexpr size_t stack_hint = NIL_GRAPH_TRANSFORM_STACK_HINT;$/;"	m	namespace:Nil::Graph::__anon21	file:
stacks	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_configuration_stacks stacks;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_configuration_stacks
stage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPipelineShaderStageCreateInfo    stage;$/;"	m	struct:VkComputePipelineCreateInfo
stage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkShaderStageFlagBits               stage;$/;"	m	struct:VkPipelineShaderStageCreateInfo
stageCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                                         stageCount;$/;"	m	struct:VkGraphicsPipelineCreateInfo
stageFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkShaderStageFlags            stageFlags;$/;"	m	struct:VkObjectTablePushConstantEntryNVX
stageFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkShaderStageFlags    stageFlags;$/;"	m	struct:VkDescriptorSetLayoutBinding
stageFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkShaderStageFlags    stageFlags;$/;"	m	struct:VkPushConstantRange
standardSampleLocations	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32              standardSampleLocations;$/;"	m	struct:VkPhysicalDeviceLimits
start	app/perils/src/game/dynamic_object.hpp	/^  lib::milliseconds start = 0.f;$/;"	m	struct:Dynamic_object::Data
start	lib/math/include/math/geometry/geometry_types.hpp	/^  MATH_NS_NAME::vec3 start;$/;"	m	struct:ray
start	lib/roa/src/component/component_engine.cpp	/^lib::array<ROA::Component*> start;$/;"	m	namespace:__anon8	file:
start	lib/rov/src/rov_data.hpp	/^  rovVec3 start;$/;"	m	struct:ROV_Internal::rovLineDrawCall
start	thirdparty/json/include/json/json.h	/^  struct json_array_element_s *start;$/;"	m	struct:json_array_s	typeref:struct:json_array_s::json_array_element_s
start	thirdparty/json/include/json/json.h	/^  struct json_object_element_s *start;$/;"	m	struct:json_object_s	typeref:struct:json_object_s::json_object_element_s
start	thirdparty/remotery/src/Remotery.c	/^    rmtU64 start;$/;"	m	struct:MetalTimestamp	file:
start_decoder	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int start_decoder(vorb *f)$/;"	f	file:
start_decoder	thirdparty/stb/include/stb/stb_vorbis.c	/^static int start_decoder(vorb *f)$/;"	f	file:
start_packet	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int start_packet(vorb *f)$/;"	f	file:
start_packet	thirdparty/stb/include/stb/stb_vorbis.c	/^static int start_packet(vorb *f)$/;"	f	file:
start_page	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int start_page(vorb *f)$/;"	f	file:
start_page	thirdparty/stb/include/stb/stb_vorbis.c	/^static int start_page(vorb *f)$/;"	f	file:
start_page_no_capturepattern	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int start_page_no_capturepattern(vorb *f)$/;"	f	file:
start_page_no_capturepattern	thirdparty/stb/include/stb/stb_vorbis.c	/^static int start_page_no_capturepattern(vorb *f)$/;"	f	file:
start_up	lib/nil_aspects/src/imgui/imgui_aspect.cpp	/^start_up(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ImGui_Aspect
start_up	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^start_up(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
start_up	lib/nil_aspects/src/roa_aspect.cpp	/^start_up(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROA_Aspect
start_up	lib/nil_aspects/src/so_loud.cpp	/^start_up(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::SoLoud_Aspect
start_x	thirdparty/stb/include/stb/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon92
start_y	thirdparty/stb/include/stb/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon92
started	thirdparty/stb/include/stb/stb_truetype.h	/^   int started;$/;"	m	struct:__anon110
startup	lib/nil/include/nil/aspect.hpp	/^  Nil_aspect_callback_fn      startup;$/;"	m	struct:Nil_aspect
state	thirdparty/glfw/src/deps/nuklear.h	/^    int state;$/;"	m	struct:nk_property_state
state	thirdparty/glfw/src/wl_platform.h	/^        struct xkb_state*       state;$/;"	m	struct:_GLFWlibraryWayland::__anon144	typeref:struct:_GLFWlibraryWayland::__anon144::xkb_state
state	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		unsigned int state[16];$/;"	m	class:SoLoud::Prg
stats	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^static unsigned int stats[255];$/;"	v	file:
status	lib/nil/include/nil/resource/audio.hpp	/^  Nil_resource_status status;$/;"	m	struct:Nil_audio_src
status	lib/nil/include/nil/resource/font.hpp	/^  Nil_resource_status       status;$/;"	m	struct:Nil_font
status	lib/nil/include/nil/resource/material.hpp	/^  Nil_resource_status   status;$/;"	m	struct:Nil_material
status	lib/nil/include/nil/resource/mesh.hpp	/^  Nil_resource_status     status;$/;"	m	struct:Nil_mesh
status	lib/nil/include/nil/resource/shader.hpp	/^  Nil_resource_status status;$/;"	m	struct:Nil_shader
status	lib/nil/include/nil/resource/texture.hpp	/^  Nil_resource_status status;$/;"	m	struct:Nil_texture
stb__As16Bit	thirdparty/stb/include/stb/stb_dxt.h	/^static unsigned short stb__As16Bit(int r, int g, int b)$/;"	f
stb__CompressAlphaBlock	thirdparty/stb/include/stb/stb_dxt.h	/^static void stb__CompressAlphaBlock(unsigned char *dest,unsigned char *src,int mode)$/;"	f
stb__CompressColorBlock	thirdparty/stb/include/stb/stb_dxt.h	/^static void stb__CompressColorBlock(unsigned char *dest, unsigned char *block, int mode)$/;"	f
stb__DitherBlock	thirdparty/stb/include/stb/stb_dxt.h	/^static void stb__DitherBlock(unsigned char *dest, unsigned char *block)$/;"	f
stb__EvalColors	thirdparty/stb/include/stb/stb_dxt.h	/^static void stb__EvalColors(unsigned char *color,unsigned short c0,unsigned short c1)$/;"	f
stb__Expand5	thirdparty/stb/include/stb/stb_dxt.h	/^static unsigned char stb__Expand5[32];$/;"	v
stb__Expand6	thirdparty/stb/include/stb/stb_dxt.h	/^static unsigned char stb__Expand6[64];$/;"	v
stb__From16Bit	thirdparty/stb/include/stb/stb_dxt.h	/^static void stb__From16Bit(unsigned char *out, unsigned short v)$/;"	f
stb__InitDXT	thirdparty/stb/include/stb/stb_dxt.h	/^static void stb__InitDXT()$/;"	f
stb__Lerp13	thirdparty/stb/include/stb/stb_dxt.h	/^static int stb__Lerp13(int a, int b)$/;"	f
stb__Lerp13RGB	thirdparty/stb/include/stb/stb_dxt.h	/^static void stb__Lerp13RGB(unsigned char *out, unsigned char *p1, unsigned char *p2)$/;"	f
stb__MatchColorsBlock	thirdparty/stb/include/stb/stb_dxt.h	/^static unsigned int stb__MatchColorsBlock(unsigned char *block, unsigned char *color,int dither)$/;"	f
stb__Mul8Bit	thirdparty/stb/include/stb/stb_dxt.h	/^static int stb__Mul8Bit(int a, int b)$/;"	f
stb__OMatch5	thirdparty/stb/include/stb/stb_dxt.h	/^static unsigned char stb__OMatch5[256][2];$/;"	v
stb__OMatch6	thirdparty/stb/include/stb/stb_dxt.h	/^static unsigned char stb__OMatch6[256][2];$/;"	v
stb__OptimizeColorsBlock	thirdparty/stb/include/stb/stb_dxt.h	/^static void stb__OptimizeColorsBlock(unsigned char *block, unsigned short *pmax16, unsigned short *pmin16)$/;"	f
stb__PrepareOptTable	thirdparty/stb/include/stb/stb_dxt.h	/^static void stb__PrepareOptTable(unsigned char *Table,const unsigned char *expand,int size)$/;"	f
stb__QuantGTab	thirdparty/stb/include/stb/stb_dxt.h	/^static unsigned char stb__QuantGTab[256+16];$/;"	v
stb__QuantRBTab	thirdparty/stb/include/stb/stb_dxt.h	/^static unsigned char stb__QuantRBTab[256+16];$/;"	v
stb__RefineBlock	thirdparty/stb/include/stb/stb_dxt.h	/^static int stb__RefineBlock(unsigned char *block, unsigned short *pmax16, unsigned short *pmin16, unsigned int mask)$/;"	f
stb__barrier	thirdparty/imgui/src/imgui_draw.cpp	/^static unsigned char *stb__barrier, *stb__barrier2, *stb__barrier3, *stb__barrier4;$/;"	v	file:
stb__barrier2	thirdparty/imgui/src/imgui_draw.cpp	/^static unsigned char *stb__barrier, *stb__barrier2, *stb__barrier3, *stb__barrier4;$/;"	v	file:
stb__barrier3	thirdparty/imgui/src/imgui_draw.cpp	/^static unsigned char *stb__barrier, *stb__barrier2, *stb__barrier3, *stb__barrier4;$/;"	v	file:
stb__barrier4	thirdparty/imgui/src/imgui_draw.cpp	/^static unsigned char *stb__barrier, *stb__barrier2, *stb__barrier3, *stb__barrier4;$/;"	v	file:
stb__div	thirdparty/stb/include/stb/stb_divide.h	/^   int stb__div(int v1, int v2)$/;"	f
stb__div	thirdparty/stb/include/stb/stb_divide.h	119;"	d
stb__dout	thirdparty/imgui/src/imgui_draw.cpp	/^static unsigned char *stb__dout;$/;"	v	file:
stb__in2	thirdparty/imgui/src/imgui_draw.cpp	2217;"	d	file:
stb__in3	thirdparty/imgui/src/imgui_draw.cpp	2218;"	d	file:
stb__in4	thirdparty/imgui/src/imgui_draw.cpp	2219;"	d	file:
stb__lit	thirdparty/imgui/src/imgui_draw.cpp	/^static void stb__lit(unsigned char *data, unsigned int length)$/;"	f	file:
stb__match	thirdparty/imgui/src/imgui_draw.cpp	/^static void stb__match(unsigned char *data, unsigned int length)$/;"	f	file:
stb__mod	thirdparty/stb/include/stb/stb_divide.h	/^   int stb__mod(int v1, int v2)$/;"	f
stb__mod	thirdparty/stb/include/stb/stb_divide.h	120;"	d
stb__perlin_ease	thirdparty/stb/include/stb/stb_perlin.h	187;"	d
stb__perlin_fastfloor	thirdparty/stb/include/stb/stb_perlin.h	/^static int stb__perlin_fastfloor(float a)$/;"	f
stb__perlin_grad	thirdparty/stb/include/stb/stb_perlin.h	/^static float stb__perlin_grad(int hash, float x, float y, float z)$/;"	f
stb__perlin_lerp	thirdparty/stb/include/stb/stb_perlin.h	/^static float stb__perlin_lerp(float a, float b, float t)$/;"	f
stb__perlin_randtab	thirdparty/stb/include/stb/stb_perlin.h	/^static unsigned char stb__perlin_randtab[512] =$/;"	v
stb__sclamp	thirdparty/stb/include/stb/stb_dxt.h	/^static int stb__sclamp(float y, int p0, int p1)$/;"	f
stb_adler32	thirdparty/imgui/src/imgui_draw.cpp	/^static unsigned int stb_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflen)$/;"	f	file:
stb_compress_dxt_block	thirdparty/stb/include/stb/stb_dxt.h	/^void stb_compress_dxt_block(unsigned char *dest, const unsigned char *src, int alpha, int mode)$/;"	f
stb_decompress	thirdparty/imgui/src/imgui_draw.cpp	/^static unsigned int stb_decompress(unsigned char *output, unsigned char *i, unsigned int length)$/;"	f	file:
stb_decompress_length	thirdparty/imgui/src/imgui_draw.cpp	/^static unsigned int stb_decompress_length(unsigned char *input)$/;"	f	file:
stb_decompress_token	thirdparty/imgui/src/imgui_draw.cpp	/^static unsigned char *stb_decompress_token(unsigned char *i)$/;"	f	file:
stb_div_eucl	thirdparty/stb/include/stb/stb_divide.h	/^int stb_div_eucl(int v1, int v2)$/;"	f
stb_div_floor	thirdparty/stb/include/stb/stb_divide.h	/^int stb_div_floor(int v1, int v2)$/;"	f
stb_div_trunc	thirdparty/stb/include/stb/stb_divide.h	/^int stb_div_trunc(int v1, int v2)$/;"	f
stb_easy_font_charinfo	thirdparty/stb/include/stb/stb_easy_font.h	/^} stb_easy_font_charinfo[96] = {$/;"	v	typeref:struct:__anon136
stb_easy_font_color	thirdparty/stb/include/stb/stb_easy_font.h	/^} stb_easy_font_color;$/;"	t	typeref:struct:__anon137
stb_easy_font_draw_segs	thirdparty/stb/include/stb/stb_easy_font.h	/^static int stb_easy_font_draw_segs(float x, float y, unsigned char *segs, int num_segs, int vertical, stb_easy_font_color c, char *vbuf, int vbuf_size, int offset)$/;"	f
stb_easy_font_height	thirdparty/stb/include/stb/stb_easy_font.h	/^static int stb_easy_font_height(char *text)$/;"	f
stb_easy_font_hseg	thirdparty/stb/include/stb/stb_easy_font.h	/^unsigned char stb_easy_font_hseg[214] = {$/;"	v
stb_easy_font_print	thirdparty/stb/include/stb/stb_easy_font.h	/^static int stb_easy_font_print(float x, float y, char *text, unsigned char color[4], void *vertex_buffer, int vbuf_size)$/;"	f
stb_easy_font_spacing	thirdparty/stb/include/stb/stb_easy_font.h	/^static void stb_easy_font_spacing(float spacing)$/;"	f
stb_easy_font_spacing_val	thirdparty/stb/include/stb/stb_easy_font.h	/^float stb_easy_font_spacing_val = 0;$/;"	v
stb_easy_font_vseg	thirdparty/stb/include/stb/stb_easy_font.h	/^unsigned char stb_easy_font_vseg[253] = {$/;"	v
stb_easy_font_width	thirdparty/stb/include/stb/stb_easy_font.h	/^static int stb_easy_font_width(char *text)$/;"	f
stb_image_write_test	thirdparty/glfw/src/deps/stb_image_write.h	/^typedef int stb_image_write_test[sizeof(stbiw_uint32)==4 ? 1 : -1];$/;"	t
stb_image_write_test	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^typedef int stb_image_write_test[sizeof(stbiw_uint32)==4 ? 1 : -1];$/;"	t
stb_image_write_test	thirdparty/stb/include/stb/stb_image_write.h	/^typedef int stb_image_write_test[sizeof(stbiw_uint32)==4 ? 1 : -1];$/;"	t
stb_mod_eucl	thirdparty/stb/include/stb/stb_divide.h	/^int stb_mod_eucl(int v1, int v2)$/;"	f
stb_mod_floor	thirdparty/stb/include/stb/stb_divide.h	/^int stb_mod_floor(int v1, int v2)$/;"	f
stb_mod_trunc	thirdparty/stb/include/stb/stb_divide.h	/^int stb_mod_trunc(int v1, int v2)$/;"	f
stb_perlin_fbm_noise3	thirdparty/stb/include/stb/stb_perlin.h	/^float stb_perlin_fbm_noise3(float x, float y, float z,float lacunarity, float gain, int octaves,int x_wrap, int y_wrap, int z_wrap)$/;"	f
stb_perlin_noise3	thirdparty/stb/include/stb/stb_perlin.h	/^float stb_perlin_noise3(float x, float y, float z, int x_wrap, int y_wrap, int z_wrap)$/;"	f
stb_perlin_ridge_noise3	thirdparty/stb/include/stb/stb_perlin.h	/^float stb_perlin_ridge_noise3(float x, float y, float z,float lacunarity, float gain, float offset, int octaves,int x_wrap, int y_wrap, int z_wrap)$/;"	f
stb_perlin_turbulence_noise3	thirdparty/stb/include/stb/stb_perlin.h	/^float stb_perlin_turbulence_noise3(float x, float y, float z, float lacunarity, float gain, int octaves,int x_wrap, int y_wrap, int z_wrap)$/;"	f
stb_text_create_undo_record	thirdparty/stb/include/stb/stb_textedit.h	/^static StbUndoRecord *stb_text_create_undo_record(StbUndoState *state, int numchars)$/;"	f
stb_text_createundo	thirdparty/stb/include/stb/stb_textedit.h	/^static STB_TEXTEDIT_CHARTYPE *stb_text_createundo(StbUndoState *state, int pos, int insert_len, int delete_len)$/;"	f
stb_text_locate_coord	thirdparty/stb/include/stb/stb_textedit.h	/^static int stb_text_locate_coord(STB_TEXTEDIT_STRING *str, float x, float y)$/;"	f
stb_text_makeundo_delete	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_text_makeundo_delete(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int where, int length)$/;"	f
stb_text_makeundo_insert	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_text_makeundo_insert(STB_TexteditState *state, int where, int length)$/;"	f
stb_text_makeundo_replace	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_text_makeundo_replace(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int where, int old_length, int new_length)$/;"	f
stb_text_redo	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_text_redo(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f
stb_text_undo	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_text_undo(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f
stb_textedit_clamp	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_clamp(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f
stb_textedit_clear_state	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_clear_state(STB_TexteditState *state, int is_single_line)$/;"	f
stb_textedit_click	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_click(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, float x, float y)$/;"	f
stb_textedit_cut	thirdparty/stb/include/stb/stb_textedit.h	/^static int stb_textedit_cut(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f
stb_textedit_delete	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_delete(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int where, int len)$/;"	f
stb_textedit_delete_selection	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_delete_selection(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f
stb_textedit_discard_redo	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_discard_redo(StbUndoState *state)$/;"	f
stb_textedit_discard_undo	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_discard_undo(StbUndoState *state)$/;"	f
stb_textedit_drag	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_drag(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, float x, float y)$/;"	f
stb_textedit_find_charpos	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_find_charpos(StbFindState *find, STB_TEXTEDIT_STRING *str, int n, int single_line)$/;"	f
stb_textedit_flush_redo	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_flush_redo(StbUndoState *state)$/;"	f
stb_textedit_initialize_state	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_initialize_state(STB_TexteditState *state, int is_single_line)$/;"	f
stb_textedit_key	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_key(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int key)$/;"	f
stb_textedit_move_to_first	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_move_to_first(STB_TexteditState *state)$/;"	f
stb_textedit_move_to_last	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_move_to_last(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f
stb_textedit_move_to_word_next	thirdparty/stb/include/stb/stb_textedit.h	/^static int stb_textedit_move_to_word_next( STB_TEXTEDIT_STRING *_str, STB_TexteditState *_state )$/;"	f
stb_textedit_move_to_word_previous	thirdparty/stb/include/stb/stb_textedit.h	/^static int stb_textedit_move_to_word_previous( STB_TEXTEDIT_STRING *_str, STB_TexteditState *_state )$/;"	f
stb_textedit_paste	thirdparty/stb/include/stb/stb_textedit.h	/^static int stb_textedit_paste(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, STB_TEXTEDIT_CHARTYPE const *ctext, int len)$/;"	f
stb_textedit_prep_selection_at_cursor	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_prep_selection_at_cursor(STB_TexteditState *state)$/;"	f
stb_textedit_sortselection	thirdparty/stb/include/stb/stb_textedit.h	/^static void stb_textedit_sortselection(STB_TexteditState *state)$/;"	f
stb_vorbis	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^struct stb_vorbis$/;"	s	file:
stb_vorbis	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^typedef struct stb_vorbis stb_vorbis;$/;"	t	typeref:struct:stb_vorbis	file:
stb_vorbis	thirdparty/stb/include/stb/stb_vorbis.c	/^struct stb_vorbis$/;"	s	file:
stb_vorbis	thirdparty/stb/include/stb/stb_vorbis.c	/^typedef struct stb_vorbis stb_vorbis;$/;"	t	typeref:struct:stb_vorbis	file:
stb_vorbis_alloc	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} stb_vorbis_alloc;$/;"	t	typeref:struct:__anon201	file:
stb_vorbis_alloc	thirdparty/stb/include/stb/stb_vorbis.c	/^} stb_vorbis_alloc;$/;"	t	typeref:struct:__anon114	file:
stb_vorbis_close	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^void stb_vorbis_close(stb_vorbis *p)$/;"	f
stb_vorbis_close	thirdparty/stb/include/stb/stb_vorbis.c	/^void stb_vorbis_close(stb_vorbis *p)$/;"	f
stb_vorbis_decode_filename	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_decode_filename(const char *filename, int *channels, int *sample_rate, short **output)$/;"	f
stb_vorbis_decode_filename	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_decode_filename(const char *filename, int *channels, int *sample_rate, short **output)$/;"	f
stb_vorbis_decode_frame_pushdata	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_decode_frame_pushdata($/;"	f
stb_vorbis_decode_frame_pushdata	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_decode_frame_pushdata($/;"	f
stb_vorbis_decode_memory	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_decode_memory(const uint8 *mem, int len, int *channels, int *sample_rate, short **output)$/;"	f
stb_vorbis_decode_memory	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_decode_memory(const uint8 *mem, int len, int *channels, int *sample_rate, short **output)$/;"	f
stb_vorbis_float_size_test	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   typedef char stb_vorbis_float_size_test[sizeof(float)==4 && sizeof(int) == 4];$/;"	t	file:
stb_vorbis_float_size_test	thirdparty/stb/include/stb/stb_vorbis.c	/^   typedef char stb_vorbis_float_size_test[sizeof(float)==4 && sizeof(int) == 4];$/;"	t	file:
stb_vorbis_flush_pushdata	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^void stb_vorbis_flush_pushdata(stb_vorbis *f)$/;"	f
stb_vorbis_flush_pushdata	thirdparty/stb/include/stb/stb_vorbis.c	/^void stb_vorbis_flush_pushdata(stb_vorbis *f)$/;"	f
stb_vorbis_get_error	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_get_error(stb_vorbis *f)$/;"	f
stb_vorbis_get_error	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_get_error(stb_vorbis *f)$/;"	f
stb_vorbis_get_file_offset	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^unsigned int stb_vorbis_get_file_offset(stb_vorbis *f)$/;"	f
stb_vorbis_get_file_offset	thirdparty/stb/include/stb/stb_vorbis.c	/^unsigned int stb_vorbis_get_file_offset(stb_vorbis *f)$/;"	f
stb_vorbis_get_frame_float	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_get_frame_float(stb_vorbis *f, int *channels, float ***output)$/;"	f
stb_vorbis_get_frame_float	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_get_frame_float(stb_vorbis *f, int *channels, float ***output)$/;"	f
stb_vorbis_get_frame_short	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_get_frame_short(stb_vorbis *f, int num_c, short **buffer, int num_samples)$/;"	f
stb_vorbis_get_frame_short	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_get_frame_short(stb_vorbis *f, int num_c, short **buffer, int num_samples)$/;"	f
stb_vorbis_get_frame_short_interleaved	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_get_frame_short_interleaved(stb_vorbis *f, int num_c, short *buffer, int num_shorts)$/;"	f
stb_vorbis_get_frame_short_interleaved	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_get_frame_short_interleaved(stb_vorbis *f, int num_c, short *buffer, int num_shorts)$/;"	f
stb_vorbis_get_info	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^stb_vorbis_info stb_vorbis_get_info(stb_vorbis *f)$/;"	f
stb_vorbis_get_info	thirdparty/stb/include/stb/stb_vorbis.c	/^stb_vorbis_info stb_vorbis_get_info(stb_vorbis *f)$/;"	f
stb_vorbis_get_sample_offset	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_get_sample_offset(stb_vorbis *f)$/;"	f
stb_vorbis_get_sample_offset	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_get_sample_offset(stb_vorbis *f)$/;"	f
stb_vorbis_get_samples_float	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_get_samples_float(stb_vorbis *f, int channels, float **buffer, int num_samples)$/;"	f
stb_vorbis_get_samples_float	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_get_samples_float(stb_vorbis *f, int channels, float **buffer, int num_samples)$/;"	f
stb_vorbis_get_samples_float_interleaved	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_get_samples_float_interleaved(stb_vorbis *f, int channels, float *buffer, int num_floats)$/;"	f
stb_vorbis_get_samples_float_interleaved	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_get_samples_float_interleaved(stb_vorbis *f, int channels, float *buffer, int num_floats)$/;"	f
stb_vorbis_get_samples_short	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_get_samples_short(stb_vorbis *f, int channels, short **buffer, int len)$/;"	f
stb_vorbis_get_samples_short	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_get_samples_short(stb_vorbis *f, int channels, short **buffer, int len)$/;"	f
stb_vorbis_get_samples_short_interleaved	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_get_samples_short_interleaved(stb_vorbis *f, int channels, short *buffer, int num_shorts)$/;"	f
stb_vorbis_get_samples_short_interleaved	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_get_samples_short_interleaved(stb_vorbis *f, int channels, short *buffer, int num_shorts)$/;"	f
stb_vorbis_info	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^} stb_vorbis_info;$/;"	t	typeref:struct:__anon202	file:
stb_vorbis_info	thirdparty/stb/include/stb/stb_vorbis.c	/^} stb_vorbis_info;$/;"	t	typeref:struct:__anon115	file:
stb_vorbis_open_file	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^stb_vorbis * stb_vorbis_open_file(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc)$/;"	f
stb_vorbis_open_file	thirdparty/stb/include/stb/stb_vorbis.c	/^stb_vorbis * stb_vorbis_open_file(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc)$/;"	f
stb_vorbis_open_file_section	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^stb_vorbis * stb_vorbis_open_file_section(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc, unsigned int length)$/;"	f
stb_vorbis_open_file_section	thirdparty/stb/include/stb/stb_vorbis.c	/^stb_vorbis * stb_vorbis_open_file_section(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc, unsigned int length)$/;"	f
stb_vorbis_open_filename	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^stb_vorbis * stb_vorbis_open_filename(const char *filename, int *error, const stb_vorbis_alloc *alloc)$/;"	f
stb_vorbis_open_filename	thirdparty/stb/include/stb/stb_vorbis.c	/^stb_vorbis * stb_vorbis_open_filename(const char *filename, int *error, const stb_vorbis_alloc *alloc)$/;"	f
stb_vorbis_open_memory	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^stb_vorbis * stb_vorbis_open_memory(const unsigned char *data, int len, int *error, const stb_vorbis_alloc *alloc)$/;"	f
stb_vorbis_open_memory	thirdparty/stb/include/stb/stb_vorbis.c	/^stb_vorbis * stb_vorbis_open_memory(const unsigned char *data, int len, int *error, const stb_vorbis_alloc *alloc)$/;"	f
stb_vorbis_open_pushdata	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^stb_vorbis *stb_vorbis_open_pushdata($/;"	f
stb_vorbis_open_pushdata	thirdparty/stb/include/stb/stb_vorbis.c	/^stb_vorbis *stb_vorbis_open_pushdata($/;"	f
stb_vorbis_seek	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_seek(stb_vorbis *f, unsigned int sample_number)$/;"	f
stb_vorbis_seek	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_seek(stb_vorbis *f, unsigned int sample_number)$/;"	f
stb_vorbis_seek_frame	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^int stb_vorbis_seek_frame(stb_vorbis *f, unsigned int sample_number)$/;"	f
stb_vorbis_seek_frame	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_seek_frame(stb_vorbis *f, unsigned int sample_number)$/;"	f
stb_vorbis_seek_start	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^void stb_vorbis_seek_start(stb_vorbis *f)$/;"	f
stb_vorbis_seek_start	thirdparty/stb/include/stb/stb_vorbis.c	/^int stb_vorbis_seek_start(stb_vorbis *f)$/;"	f
stb_vorbis_stream_length_in_samples	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^unsigned int stb_vorbis_stream_length_in_samples(stb_vorbis *f)$/;"	f
stb_vorbis_stream_length_in_samples	thirdparty/stb/include/stb/stb_vorbis.c	/^unsigned int stb_vorbis_stream_length_in_samples(stb_vorbis *f)$/;"	f
stb_vorbis_stream_length_in_seconds	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^float stb_vorbis_stream_length_in_seconds(stb_vorbis *f)$/;"	f
stb_vorbis_stream_length_in_seconds	thirdparty/stb/include/stb/stb_vorbis.c	/^float stb_vorbis_stream_length_in_seconds(stb_vorbis *f)$/;"	f
stbdiv_check	thirdparty/stb/include/stb/stb_divide.h	/^void stbdiv_check(int q, int r, int a, int b, char *type, int dir)$/;"	f
stbi__DNL	thirdparty/stb/include/stb/stb_image.h	3035;"	d
stbi__EOI	thirdparty/stb/include/stb/stb_image.h	3037;"	d
stbi__SOF	thirdparty/stb/include/stb/stb_image.h	3038;"	d
stbi__SOF_progressive	thirdparty/stb/include/stb/stb_image.h	3041;"	d
stbi__SOI	thirdparty/stb/include/stb/stb_image.h	3036;"	d
stbi__SOS	thirdparty/stb/include/stb/stb_image.h	3039;"	d
stbi__YCbCr_to_RGB_row	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__YCbCr_to_RGB_row(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step)$/;"	f
stbi__YCbCr_to_RGB_simd	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__YCbCr_to_RGB_simd(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc const *pcr, int count, int step)$/;"	f
stbi__addsizes_valid	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__addsizes_valid(int a, int b)$/;"	f
stbi__at_eof	thirdparty/stb/include/stb/stb_image.h	/^stbi_inline static int stbi__at_eof(stbi__context *s)$/;"	f
stbi__bit_reverse	thirdparty/stb/include/stb/stb_image.h	/^stbi_inline static int stbi__bit_reverse(int v, int bits)$/;"	f
stbi__bitcount	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__bitcount(unsigned int a)$/;"	f
stbi__bitreverse16	thirdparty/stb/include/stb/stb_image.h	/^stbi_inline static int stbi__bitreverse16(int n)$/;"	f
stbi__blinn_8x8	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc stbi__blinn_8x8(stbi_uc x, stbi_uc y)$/;"	f
stbi__bmask	thirdparty/stb/include/stb/stb_image.h	/^static stbi__uint32 stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535};$/;"	v
stbi__bmp_data	thirdparty/stb/include/stb/stb_image.h	/^} stbi__bmp_data;$/;"	t	typeref:struct:__anon89
stbi__bmp_info	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__bmp_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__bmp_load	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__bmp_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f
stbi__bmp_parse_header	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__bmp_parse_header(stbi__context *s, stbi__bmp_data *info)$/;"	f
stbi__bmp_test	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__bmp_test(stbi__context *s)$/;"	f
stbi__bmp_test_raw	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__bmp_test_raw(stbi__context *s)$/;"	f
stbi__build_fast_ac	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__build_fast_ac(stbi__int16 *fast_ac, stbi__huffman *h)$/;"	f
stbi__build_huffman	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__build_huffman(stbi__huffman *h, int *count)$/;"	f
stbi__check_png_header	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__check_png_header(stbi__context *s)$/;"	f
stbi__clamp	thirdparty/stb/include/stb/stb_image.h	/^stbi_inline static stbi_uc stbi__clamp(int x)$/;"	f
stbi__cleanup_jpeg	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__cleanup_jpeg(stbi__jpeg *j)$/;"	f
stbi__compute_huffman_codes	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__compute_huffman_codes(stbi__zbuf *a)$/;"	f
stbi__compute_transparency	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__compute_transparency(stbi__png *z, stbi_uc tc[3], int out_n)$/;"	f
stbi__compute_transparency16	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__compute_transparency16(stbi__png *z, stbi__uint16 tc[3], int out_n)$/;"	f
stbi__compute_y	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc stbi__compute_y(int r, int g, int b)$/;"	f
stbi__compute_y_16	thirdparty/stb/include/stb/stb_image.h	/^static stbi__uint16 stbi__compute_y_16(int r, int g, int b)$/;"	f
stbi__context	thirdparty/stb/include/stb/stb_image.h	/^} stbi__context;$/;"	t	typeref:struct:__anon76
stbi__convert_16_to_8	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc *stbi__convert_16_to_8(stbi__uint16 *orig, int w, int h, int channels)$/;"	f
stbi__convert_8_to_16	thirdparty/stb/include/stb/stb_image.h	/^static stbi__uint16 *stbi__convert_8_to_16(stbi_uc *orig, int w, int h, int channels)$/;"	f
stbi__convert_format	thirdparty/stb/include/stb/stb_image.h	/^static unsigned char *stbi__convert_format(unsigned char *data, int img_n, int req_comp, unsigned int x, unsigned int y)$/;"	f
stbi__convert_format16	thirdparty/stb/include/stb/stb_image.h	/^static stbi__uint16 *stbi__convert_format16(stbi__uint16 *data, int img_n, int req_comp, unsigned int x, unsigned int y)$/;"	f
stbi__copyval	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__copyval(int channel,stbi_uc *dest,const stbi_uc *src)$/;"	f
stbi__cpuid3	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__cpuid3(void)$/;"	f
stbi__create_png_image	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__create_png_image(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len, int out_n, int depth, int color, int interlaced)$/;"	f
stbi__create_png_image_raw	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__create_png_image_raw(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_n, stbi__uint32 x, stbi__uint32 y, int depth, int color)$/;"	f
stbi__de_iphone	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__de_iphone(stbi__png *z)$/;"	f
stbi__de_iphone_flag	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__de_iphone_flag = 0;$/;"	v
stbi__decode_jpeg_header	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__decode_jpeg_header(stbi__jpeg *z, int scan)$/;"	f
stbi__decode_jpeg_image	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__decode_jpeg_image(stbi__jpeg *j)$/;"	f
stbi__depth_scale_table	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc stbi__depth_scale_table[9] = { 0, 0xff, 0x55, 0, 0x11, 0,0,0, 0x01 };$/;"	v
stbi__div16	thirdparty/stb/include/stb/stb_image.h	3162;"	d
stbi__div4	thirdparty/stb/include/stb/stb_image.h	3113;"	d
stbi__do_png	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__do_png(stbi__png *p, int *x, int *y, int *n, int req_comp, stbi__result_info *ri)$/;"	f
stbi__do_zlib	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__do_zlib(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f
stbi__end_write_file	thirdparty/glfw/src/deps/stb_image_write.h	/^static void stbi__end_write_file(stbi__write_context *s)$/;"	f
stbi__end_write_file	thirdparty/stb/include/stb/stb_image_write.h	/^static void stbi__end_write_file(stbi__write_context *s)$/;"	f
stbi__err	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__err(const char *str)$/;"	f
stbi__err	thirdparty/stb/include/stb/stb_image.h	926;"	d
stbi__err	thirdparty/stb/include/stb/stb_image.h	928;"	d
stbi__err	thirdparty/stb/include/stb/stb_image.h	930;"	d
stbi__errpf	thirdparty/stb/include/stb/stb_image.h	933;"	d
stbi__errpuc	thirdparty/stb/include/stb/stb_image.h	934;"	d
stbi__expand_png_palette	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__expand_png_palette(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)$/;"	f
stbi__extend_receive	thirdparty/stb/include/stb/stb_image.h	/^stbi_inline static int stbi__extend_receive(stbi__jpeg *j, int n)$/;"	f
stbi__f2f	thirdparty/stb/include/stb/stb_image.h	2114;"	d
stbi__fill_bits	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__fill_bits(stbi__zbuf *z)$/;"	f
stbi__fill_gif_background	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__fill_gif_background(stbi__gif *g, int x0, int y0, int x1, int y1)$/;"	f
stbi__float2fixed	thirdparty/stb/include/stb/stb_image.h	3318;"	d
stbi__float2int	thirdparty/stb/include/stb/stb_image.h	1586;"	d
stbi__float_postprocess	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__float_postprocess(float *result, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__fopen	thirdparty/stb/include/stb/stb_image.h	/^static FILE *stbi__fopen(char const *filename, char const *mode)$/;"	f
stbi__free_jpeg_components	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__free_jpeg_components(stbi__jpeg *z, int ncomp, int why)$/;"	f
stbi__fsh	thirdparty/stb/include/stb/stb_image.h	2115;"	d
stbi__g_failure_reason	thirdparty/stb/include/stb/stb_image.h	/^static const char *stbi__g_failure_reason;$/;"	v
stbi__get16be	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__get16be(stbi__context *s)$/;"	f
stbi__get16le	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__get16le(stbi__context *s)$/;"	f
stbi__get32be	thirdparty/stb/include/stb/stb_image.h	/^static stbi__uint32 stbi__get32be(stbi__context *s)$/;"	f
stbi__get32le	thirdparty/stb/include/stb/stb_image.h	/^static stbi__uint32 stbi__get32le(stbi__context *s)$/;"	f
stbi__get8	thirdparty/stb/include/stb/stb_image.h	/^stbi_inline static stbi_uc stbi__get8(stbi__context *s)$/;"	f
stbi__get_chunk_header	thirdparty/stb/include/stb/stb_image.h	/^static stbi__pngchunk stbi__get_chunk_header(stbi__context *s)$/;"	f
stbi__get_marker	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc stbi__get_marker(stbi__jpeg *j)$/;"	f
stbi__getn	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__getn(stbi__context *s, stbi_uc *buffer, int n)$/;"	f
stbi__gif	thirdparty/stb/include/stb/stb_image.h	/^} stbi__gif;$/;"	t	typeref:struct:__anon92
stbi__gif_header	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__gif_header(stbi__context *s, stbi__gif *g, int *comp, int is_info)$/;"	f
stbi__gif_info	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__gif_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__gif_info_raw	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__gif_info_raw(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__gif_load	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__gif_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f
stbi__gif_load_next	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc *stbi__gif_load_next(stbi__context *s, stbi__gif *g, int *comp, int req_comp)$/;"	f
stbi__gif_lzw	thirdparty/stb/include/stb/stb_image.h	/^} stbi__gif_lzw;$/;"	t	typeref:struct:__anon91
stbi__gif_parse_colortable	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__gif_parse_colortable(stbi__context *s, stbi_uc pal[256][4], int num_entries, int transp)$/;"	f
stbi__gif_test	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__gif_test(stbi__context *s)$/;"	f
stbi__gif_test_raw	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__gif_test_raw(stbi__context *s)$/;"	f
stbi__grow_buffer_unsafe	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__grow_buffer_unsafe(stbi__jpeg *j)$/;"	f
stbi__h2l_gamma_i	thirdparty/stb/include/stb/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__h2l_scale_i	thirdparty/stb/include/stb/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__hdr_convert	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f
stbi__hdr_gettoken	thirdparty/stb/include/stb/stb_image.h	/^static char *stbi__hdr_gettoken(stbi__context *z, char *buffer)$/;"	f
stbi__hdr_info	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__hdr_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__hdr_load	thirdparty/stb/include/stb/stb_image.h	/^static float *stbi__hdr_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f
stbi__hdr_test	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__hdr_test(stbi__context* s)$/;"	f
stbi__hdr_test_core	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__hdr_test_core(stbi__context *s, const char *signature)$/;"	f
stbi__hdr_to_ldr	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc *stbi__hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f
stbi__high_bit	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__high_bit(unsigned int z)$/;"	f
stbi__huffman	thirdparty/stb/include/stb/stb_image.h	/^} stbi__huffman;$/;"	t	typeref:struct:__anon80
stbi__idct_block	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__idct_block(stbi_uc *out, int out_stride, short data[64])$/;"	f
stbi__idct_simd	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])$/;"	f
stbi__info_main	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__info_main(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__int16	thirdparty/stb/include/stb/stb_image.h	/^typedef   signed short stbi__int16;$/;"	t
stbi__int16	thirdparty/stb/include/stb/stb_image.h	/^typedef int16_t  stbi__int16;$/;"	t
stbi__int32	thirdparty/stb/include/stb/stb_image.h	/^typedef   signed int   stbi__int32;$/;"	t
stbi__int32	thirdparty/stb/include/stb/stb_image.h	/^typedef int32_t  stbi__int32;$/;"	t
stbi__jbias	thirdparty/stb/include/stb/stb_image.h	/^static int const stbi__jbias[16] = {0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-8191,-16383,-32767};$/;"	v
stbi__jpeg	thirdparty/stb/include/stb/stb_image.h	/^} stbi__jpeg;$/;"	t	typeref:struct:__anon81
stbi__jpeg_decode_block	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__jpeg_decode_block(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huffman *hac, stbi__int16 *fac, int b, stbi__uint16 *dequant)$/;"	f
stbi__jpeg_decode_block_prog_ac	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__jpeg_decode_block_prog_ac(stbi__jpeg *j, short data[64], stbi__huffman *hac, stbi__int16 *fac)$/;"	f
stbi__jpeg_decode_block_prog_dc	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__jpeg_decode_block_prog_dc(stbi__jpeg *j, short data[64], stbi__huffman *hdc, int b)$/;"	f
stbi__jpeg_dequantize	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__jpeg_dequantize(short *data, stbi__uint16 *dequant)$/;"	f
stbi__jpeg_dezigzag	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc stbi__jpeg_dezigzag[64+15] =$/;"	v
stbi__jpeg_finish	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__jpeg_finish(stbi__jpeg *z)$/;"	f
stbi__jpeg_get_bit	thirdparty/stb/include/stb/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bit(stbi__jpeg *j)$/;"	f
stbi__jpeg_get_bits	thirdparty/stb/include/stb/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bits(stbi__jpeg *j, int n)$/;"	f
stbi__jpeg_huff_decode	thirdparty/stb/include/stb/stb_image.h	/^stbi_inline static int stbi__jpeg_huff_decode(stbi__jpeg *j, stbi__huffman *h)$/;"	f
stbi__jpeg_info	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__jpeg_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__jpeg_info_raw	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__jpeg_info_raw(stbi__jpeg *j, int *x, int *y, int *comp)$/;"	f
stbi__jpeg_load	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__jpeg_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f
stbi__jpeg_reset	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__jpeg_reset(stbi__jpeg *j)$/;"	f
stbi__jpeg_test	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__jpeg_test(stbi__context *s)$/;"	f
stbi__l2h_gamma	thirdparty/stb/include/stb/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__l2h_scale	thirdparty/stb/include/stb/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__ldr_to_hdr	thirdparty/stb/include/stb/stb_image.h	/^static float   *stbi__ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f
stbi__load_and_postprocess_16bit	thirdparty/stb/include/stb/stb_image.h	/^static stbi__uint16 *stbi__load_and_postprocess_16bit(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__load_and_postprocess_8bit	thirdparty/stb/include/stb/stb_image.h	/^static unsigned char *stbi__load_and_postprocess_8bit(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__load_main	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__load_main(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri, int bpc)$/;"	f
stbi__loadf_main	thirdparty/stb/include/stb/stb_image.h	/^static float *stbi__loadf_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__mad2sizes_valid	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__mad2sizes_valid(int a, int b, int add)$/;"	f
stbi__mad3sizes_valid	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__mad3sizes_valid(int a, int b, int c, int add)$/;"	f
stbi__mad4sizes_valid	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__mad4sizes_valid(int a, int b, int c, int d, int add)$/;"	f
stbi__malloc	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__malloc(size_t size)$/;"	f
stbi__malloc_mad2	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__malloc_mad2(int a, int b, int add)$/;"	f
stbi__malloc_mad3	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__malloc_mad3(int a, int b, int c, int add)$/;"	f
stbi__malloc_mad4	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__malloc_mad4(int a, int b, int c, int d, int add)$/;"	f
stbi__mul2sizes_valid	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__mul2sizes_valid(int a, int b)$/;"	f
stbi__out_gif_code	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__out_gif_code(stbi__gif *g, stbi__uint16 code)$/;"	f
stbi__paeth	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__paeth(int a, int b, int c)$/;"	f
stbi__parse_entropy_coded_data	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__parse_entropy_coded_data(stbi__jpeg *z)$/;"	f
stbi__parse_huffman_block	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__parse_huffman_block(stbi__zbuf *a)$/;"	f
stbi__parse_png_file	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__parse_png_file(stbi__png *z, int scan, int req_comp)$/;"	f
stbi__parse_uncompressed_block	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__parse_uncompressed_block(stbi__zbuf *a)$/;"	f
stbi__parse_zlib	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__parse_zlib(stbi__zbuf *a, int parse_header)$/;"	f
stbi__parse_zlib_header	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__parse_zlib_header(stbi__zbuf *a)$/;"	f
stbi__pic_info	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__pic_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__pic_is4	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__pic_is4(stbi__context *s,const char *str)$/;"	f
stbi__pic_load	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__pic_load(stbi__context *s,int *px,int *py,int *comp,int req_comp, stbi__result_info *ri)$/;"	f
stbi__pic_load_core	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc *stbi__pic_load_core(stbi__context *s,int width,int height,int *comp, stbi_uc *result)$/;"	f
stbi__pic_packet	thirdparty/stb/include/stb/stb_image.h	/^} stbi__pic_packet;$/;"	t	typeref:struct:__anon90
stbi__pic_test	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__pic_test(stbi__context *s)$/;"	f
stbi__pic_test_core	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__pic_test_core(stbi__context *s)$/;"	f
stbi__png	thirdparty/stb/include/stb/stb_image.h	/^} stbi__png;$/;"	t	typeref:struct:__anon87
stbi__png_info	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__png_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__png_info_raw	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__png_info_raw(stbi__png *p, int *x, int *y, int *comp)$/;"	f
stbi__png_load	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__png_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f
stbi__png_test	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__png_test(stbi__context *s)$/;"	f
stbi__pngchunk	thirdparty/stb/include/stb/stb_image.h	/^} stbi__pngchunk;$/;"	t	typeref:struct:__anon86
stbi__pnm_getinteger	thirdparty/stb/include/stb/stb_image.h	/^static int      stbi__pnm_getinteger(stbi__context *s, char *c)$/;"	f
stbi__pnm_info	thirdparty/stb/include/stb/stb_image.h	/^static int      stbi__pnm_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__pnm_isdigit	thirdparty/stb/include/stb/stb_image.h	/^static int      stbi__pnm_isdigit(char c)$/;"	f
stbi__pnm_isspace	thirdparty/stb/include/stb/stb_image.h	/^static int      stbi__pnm_isspace(char c)$/;"	f
stbi__pnm_load	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__pnm_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f
stbi__pnm_skip_whitespace	thirdparty/stb/include/stb/stb_image.h	/^static void     stbi__pnm_skip_whitespace(stbi__context *s, char *c)$/;"	f
stbi__pnm_test	thirdparty/stb/include/stb/stb_image.h	/^static int      stbi__pnm_test(stbi__context *s)$/;"	f
stbi__process_frame_header	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__process_frame_header(stbi__jpeg *z, int scan)$/;"	f
stbi__process_gif_raster	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc *stbi__process_gif_raster(stbi__context *s, stbi__gif *g)$/;"	f
stbi__process_marker	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__process_marker(stbi__jpeg *z, int m)$/;"	f
stbi__process_scan_header	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__process_scan_header(stbi__jpeg *z)$/;"	f
stbi__psd_decode_rle	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__psd_decode_rle(stbi__context *s, stbi_uc *p, int pixelCount)$/;"	f
stbi__psd_info	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__psd_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__psd_load	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__psd_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri, int bpc)$/;"	f
stbi__psd_test	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__psd_test(stbi__context *s)$/;"	f
stbi__readval	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc *stbi__readval(stbi__context *s, int channel, stbi_uc *dest)$/;"	f
stbi__refill_buffer	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__refill_buffer(stbi__context *s)$/;"	f
stbi__resample	thirdparty/stb/include/stb/stb_image.h	/^} stbi__resample;$/;"	t	typeref:struct:__anon83
stbi__resample_row_generic	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc *stbi__resample_row_generic(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_h_2	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc*  stbi__resample_row_h_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_hv_2	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_hv_2_simd	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2_simd(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_v_2	thirdparty/stb/include/stb/stb_image.h	/^static stbi_uc* stbi__resample_row_v_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__result_info	thirdparty/stb/include/stb/stb_image.h	/^} stbi__result_info;$/;"	t	typeref:struct:__anon78
stbi__rewind	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__rewind(stbi__context *s)$/;"	f
stbi__setup_jpeg	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__setup_jpeg(stbi__jpeg *j)$/;"	f
stbi__shiftsigned	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__shiftsigned(int v, int shift, int bits)$/;"	f
stbi__skip	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__skip(stbi__context *s, int n)$/;"	f
stbi__sse2_available	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__sse2_available(void)$/;"	f
stbi__start_callbacks	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__start_callbacks(stbi__context *s, stbi_io_callbacks *c, void *user)$/;"	f
stbi__start_file	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__start_file(stbi__context *s, FILE *f)$/;"	f
stbi__start_mem	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__start_mem(stbi__context *s, stbi_uc const *buffer, int len)$/;"	f
stbi__start_write_callbacks	thirdparty/glfw/src/deps/stb_image_write.h	/^static void stbi__start_write_callbacks(stbi__write_context *s, stbi_write_func *c, void *context)$/;"	f
stbi__start_write_callbacks	thirdparty/stb/include/stb/stb_image_write.h	/^static void stbi__start_write_callbacks(stbi__write_context *s, stbi_write_func *c, void *context)$/;"	f
stbi__start_write_file	thirdparty/glfw/src/deps/stb_image_write.h	/^static int stbi__start_write_file(stbi__write_context *s, const char *filename)$/;"	f
stbi__start_write_file	thirdparty/stb/include/stb/stb_image_write.h	/^static int stbi__start_write_file(stbi__write_context *s, const char *filename)$/;"	f
stbi__stdio_callbacks	thirdparty/stb/include/stb/stb_image.h	/^static stbi_io_callbacks stbi__stdio_callbacks =$/;"	v
stbi__stdio_eof	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__stdio_eof(void *user)$/;"	f
stbi__stdio_read	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__stdio_read(void *user, char *data, int size)$/;"	f
stbi__stdio_skip	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__stdio_skip(void *user, int n)$/;"	f
stbi__stdio_write	thirdparty/glfw/src/deps/stb_image_write.h	/^static void stbi__stdio_write(void *context, void *data, int size)$/;"	f
stbi__stdio_write	thirdparty/stb/include/stb/stb_image_write.h	/^static void stbi__stdio_write(void *context, void *data, int size)$/;"	f
stbi__tga_get_comp	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__tga_get_comp(int bits_per_pixel, int is_grey, int* is_rgb16)$/;"	f
stbi__tga_info	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__tga_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__tga_load	thirdparty/stb/include/stb/stb_image.h	/^static void *stbi__tga_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__result_info *ri)$/;"	f
stbi__tga_read_rgb16	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__tga_read_rgb16(stbi__context *s, stbi_uc* out)$/;"	f
stbi__tga_test	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__tga_test(stbi__context *s)$/;"	f
stbi__uint16	thirdparty/stb/include/stb/stb_image.h	/^typedef uint16_t stbi__uint16;$/;"	t
stbi__uint16	thirdparty/stb/include/stb/stb_image.h	/^typedef unsigned short stbi__uint16;$/;"	t
stbi__uint32	thirdparty/stb/include/stb/stb_image.h	/^typedef uint32_t stbi__uint32;$/;"	t
stbi__uint32	thirdparty/stb/include/stb/stb_image.h	/^typedef unsigned int   stbi__uint32;$/;"	t
stbi__unpremultiply_on_load	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__unpremultiply_on_load = 0;$/;"	v
stbi__vertical_flip	thirdparty/stb/include/stb/stb_image.h	/^static void stbi__vertical_flip(void *image, int w, int h, int bytes_per_pixel)$/;"	f
stbi__vertically_flip_on_load	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__vertically_flip_on_load = 0;$/;"	v
stbi__write_context	thirdparty/glfw/src/deps/stb_image_write.h	/^} stbi__write_context;$/;"	t	typeref:struct:__anon184
stbi__write_context	thirdparty/stb/include/stb/stb_image_write.h	/^} stbi__write_context;$/;"	t	typeref:struct:__anon135
stbi__zbuf	thirdparty/stb/include/stb/stb_image.h	/^} stbi__zbuf;$/;"	t	typeref:struct:__anon85
stbi__zbuild_huffman	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__zbuild_huffman(stbi__zhuffman *z, const stbi_uc *sizelist, int num)$/;"	f
stbi__zdefault_distance	thirdparty/stb/include/stb/stb_image.h	/^static const stbi_uc stbi__zdefault_distance[32] =$/;"	v
stbi__zdefault_length	thirdparty/stb/include/stb/stb_image.h	/^static const stbi_uc stbi__zdefault_length[288] =$/;"	v
stbi__zdist_base	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__zdist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v
stbi__zdist_extra	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__zdist_extra[32] =$/;"	v
stbi__zexpand	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__zexpand(stbi__zbuf *z, char *zout, int n)  \/\/ need to make room for n bytes$/;"	f
stbi__zget8	thirdparty/stb/include/stb/stb_image.h	/^stbi_inline static stbi_uc stbi__zget8(stbi__zbuf *z)$/;"	f
stbi__zhuffman	thirdparty/stb/include/stb/stb_image.h	/^} stbi__zhuffman;$/;"	t	typeref:struct:__anon84
stbi__zhuffman_decode	thirdparty/stb/include/stb/stb_image.h	/^stbi_inline static int stbi__zhuffman_decode(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f
stbi__zhuffman_decode_slowpath	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__zhuffman_decode_slowpath(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f
stbi__zlength_base	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__zlength_base[31] = {$/;"	v
stbi__zlength_extra	thirdparty/stb/include/stb/stb_image.h	/^static int stbi__zlength_extra[31]=$/;"	v
stbi__zreceive	thirdparty/stb/include/stb/stb_image.h	/^stbi_inline static unsigned int stbi__zreceive(stbi__zbuf *z, int n)$/;"	f
stbi_convert_iphone_png_to_rgb	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)$/;"	f
stbi_failure_reason	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF const char *stbi_failure_reason(void)$/;"	f
stbi_hdr_to_ldr_gamma	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_gamma(float gamma) { stbi__h2l_gamma_i = 1\/gamma; }$/;"	f
stbi_hdr_to_ldr_scale	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_scale(float scale) { stbi__h2l_scale_i = 1\/scale; }$/;"	f
stbi_image_free	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF void stbi_image_free(void *retval_from_stbi_load)$/;"	f
stbi_info	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF int stbi_info(char const *filename, int *x, int *y, int *comp)$/;"	f
stbi_info_from_callbacks	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int *comp)$/;"	f
stbi_info_from_file	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)$/;"	f
stbi_info_from_memory	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)$/;"	f
stbi_inline	thirdparty/stb/include/stb/stb_image.h	522;"	d
stbi_inline	thirdparty/stb/include/stb/stb_image.h	524;"	d
stbi_inline	thirdparty/stb/include/stb/stb_image.h	527;"	d
stbi_io_callbacks	thirdparty/stb/include/stb/stb_image.h	/^} stbi_io_callbacks;$/;"	t	typeref:struct:__anon75
stbi_is_hdr	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF int      stbi_is_hdr          (char const *filename)$/;"	f
stbi_is_hdr_from_callbacks	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)$/;"	f
stbi_is_hdr_from_file	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_file(FILE *f)$/;"	f
stbi_is_hdr_from_memory	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_ldr_to_hdr_gamma	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_gamma(float gamma) { stbi__l2h_gamma = gamma; }$/;"	f
stbi_ldr_to_hdr_scale	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_scale(float scale) { stbi__l2h_scale = scale; }$/;"	f
stbi_load	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_16	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF stbi_us *stbi_load_16(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_16_from_callbacks	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *channels_in_file, int desired_channels)$/;"	f
stbi_load_16_from_memory	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels)$/;"	f
stbi_load_from_callbacks	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_file	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_file_16	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF stbi__uint16 *stbi_load_from_file_16(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_memory	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_callbacks	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_file	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_memory	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_lrot	thirdparty/stb/include/stb/stb_image.h	558;"	d
stbi_lrot	thirdparty/stb/include/stb/stb_image.h	560;"	d
stbi_set_flip_vertically_on_load	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)$/;"	f
stbi_set_unpremultiply_on_load	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)$/;"	f
stbi_uc	thirdparty/stb/include/stb/stb_image.h	/^typedef unsigned char stbi_uc;$/;"	t
stbi_us	thirdparty/stb/include/stb/stb_image.h	/^typedef unsigned short stbi_us;$/;"	t
stbi_write_bmp	thirdparty/glfw/src/deps/stb_image_write.h	/^STBIWDEF int stbi_write_bmp(char const *filename, int x, int y, int comp, const void *data)$/;"	f
stbi_write_bmp	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^int stbi_write_bmp(char const *filename, int x, int y, int comp, const void *data)$/;"	f
stbi_write_bmp	thirdparty/stb/include/stb/stb_image_write.h	/^STBIWDEF int stbi_write_bmp(char const *filename, int x, int y, int comp, const void *data)$/;"	f
stbi_write_bmp_core	thirdparty/glfw/src/deps/stb_image_write.h	/^static int stbi_write_bmp_core(stbi__write_context *s, int x, int y, int comp, const void *data)$/;"	f
stbi_write_bmp_core	thirdparty/stb/include/stb/stb_image_write.h	/^static int stbi_write_bmp_core(stbi__write_context *s, int x, int y, int comp, const void *data)$/;"	f
stbi_write_bmp_to_func	thirdparty/glfw/src/deps/stb_image_write.h	/^STBIWDEF int stbi_write_bmp_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)$/;"	f
stbi_write_bmp_to_func	thirdparty/stb/include/stb/stb_image_write.h	/^STBIWDEF int stbi_write_bmp_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)$/;"	f
stbi_write_func	thirdparty/glfw/src/deps/stb_image_write.h	/^typedef void stbi_write_func(void *context, void *data, int size);$/;"	t
stbi_write_func	thirdparty/stb/include/stb/stb_image_write.h	/^typedef void stbi_write_func(void *context, void *data, int size);$/;"	t
stbi_write_hdr	thirdparty/glfw/src/deps/stb_image_write.h	/^int stbi_write_hdr(char const *filename, int x, int y, int comp, const float *data)$/;"	f
stbi_write_hdr	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^int stbi_write_hdr(char const *filename, int x, int y, int comp, const float *data)$/;"	f
stbi_write_hdr	thirdparty/stb/include/stb/stb_image_write.h	/^STBIWDEF int stbi_write_hdr(char const *filename, int x, int y, int comp, const float *data)$/;"	f
stbi_write_hdr_core	thirdparty/glfw/src/deps/stb_image_write.h	/^static int stbi_write_hdr_core(stbi__write_context *s, int x, int y, int comp, float *data)$/;"	f
stbi_write_hdr_core	thirdparty/stb/include/stb/stb_image_write.h	/^static int stbi_write_hdr_core(stbi__write_context *s, int x, int y, int comp, float *data)$/;"	f
stbi_write_hdr_to_func	thirdparty/glfw/src/deps/stb_image_write.h	/^int stbi_write_hdr_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const float *data)$/;"	f
stbi_write_hdr_to_func	thirdparty/stb/include/stb/stb_image_write.h	/^STBIWDEF int stbi_write_hdr_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const float *data)$/;"	f
stbi_write_jpg	thirdparty/stb/include/stb/stb_image_write.h	/^STBIWDEF int stbi_write_jpg(char const *filename, int x, int y, int comp, const void *data, int quality)$/;"	f
stbi_write_jpg_core	thirdparty/stb/include/stb/stb_image_write.h	/^static int stbi_write_jpg_core(stbi__write_context *s, int width, int height, int comp, const void* data, int quality) {$/;"	f
stbi_write_jpg_to_func	thirdparty/stb/include/stb/stb_image_write.h	/^STBIWDEF int stbi_write_jpg_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int quality)$/;"	f
stbi_write_png	thirdparty/glfw/src/deps/stb_image_write.h	/^STBIWDEF int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)$/;"	f
stbi_write_png	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)$/;"	f
stbi_write_png	thirdparty/stb/include/stb/stb_image_write.h	/^STBIWDEF int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)$/;"	f
stbi_write_png_to_func	thirdparty/glfw/src/deps/stb_image_write.h	/^STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int stride_bytes)$/;"	f
stbi_write_png_to_func	thirdparty/stb/include/stb/stb_image_write.h	/^STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int stride_bytes)$/;"	f
stbi_write_png_to_mem	thirdparty/glfw/src/deps/stb_image_write.h	/^unsigned char *stbi_write_png_to_mem(unsigned char *pixels, int stride_bytes, int x, int y, int n, int *out_len)$/;"	f
stbi_write_png_to_mem	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^unsigned char *stbi_write_png_to_mem(unsigned char *pixels, int stride_bytes, int x, int y, int n, int *out_len)$/;"	f
stbi_write_png_to_mem	thirdparty/stb/include/stb/stb_image_write.h	/^unsigned char *stbi_write_png_to_mem(unsigned char *pixels, int stride_bytes, int x, int y, int n, int *out_len)$/;"	f
stbi_write_tga	thirdparty/glfw/src/deps/stb_image_write.h	/^int stbi_write_tga(char const *filename, int x, int y, int comp, const void *data)$/;"	f
stbi_write_tga	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^int stbi_write_tga(char const *filename, int x, int y, int comp, const void *data)$/;"	f
stbi_write_tga	thirdparty/stb/include/stb/stb_image_write.h	/^STBIWDEF int stbi_write_tga(char const *filename, int x, int y, int comp, const void *data)$/;"	f
stbi_write_tga_core	thirdparty/glfw/src/deps/stb_image_write.h	/^static int stbi_write_tga_core(stbi__write_context *s, int x, int y, int comp, void *data)$/;"	f
stbi_write_tga_core	thirdparty/stb/include/stb/stb_image_write.h	/^static int stbi_write_tga_core(stbi__write_context *s, int x, int y, int comp, void *data)$/;"	f
stbi_write_tga_to_func	thirdparty/glfw/src/deps/stb_image_write.h	/^int stbi_write_tga_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)$/;"	f
stbi_write_tga_to_func	thirdparty/stb/include/stb/stb_image_write.h	/^STBIWDEF int stbi_write_tga_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)$/;"	f
stbi_write_tga_with_rle	thirdparty/glfw/src/deps/stb_image_write.h	/^int stbi_write_tga_with_rle = 1;$/;"	v
stbi_write_tga_with_rle	thirdparty/glfw/src/deps/stb_image_write.h	/^static int stbi_write_tga_with_rle = 1;$/;"	v
stbi_write_tga_with_rle	thirdparty/stb/include/stb/stb_image_write.h	/^int stbi_write_tga_with_rle = 1;$/;"	v
stbi_write_tga_with_rle	thirdparty/stb/include/stb/stb_image_write.h	/^static int stbi_write_tga_with_rle = 1;$/;"	v
stbi_zlib_compress	thirdparty/glfw/src/deps/stb_image_write.h	/^unsigned char * stbi_zlib_compress(unsigned char *data, int data_len, int *out_len, int quality)$/;"	f
stbi_zlib_compress	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^unsigned char * stbi_zlib_compress(unsigned char *data, int data_len, int *out_len, int quality)$/;"	f
stbi_zlib_compress	thirdparty/stb/include/stb/stb_image_write.h	/^unsigned char * stbi_zlib_compress(unsigned char *data, int data_len, int *out_len, int quality)$/;"	f
stbi_zlib_decode_buffer	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_malloc	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f
stbi_zlib_decode_malloc_guesssize	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, int *outlen)$/;"	f
stbi_zlib_decode_malloc_guesssize_headerflag	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int initial_size, int *outlen, int parse_header)$/;"	f
stbi_zlib_decode_noheader_buffer	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_noheader_malloc	thirdparty/stb/include/stb/stb_image.h	/^STBIDEF char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f
stbir__FP32	thirdparty/stb/include/stb/stb_image_resize.h	/^} stbir__FP32;$/;"	t	typeref:union:__anon73
stbir__add_empty_ring_buffer_entry	thirdparty/stb/include/stb/stb_image_resize.h	/^static float* stbir__add_empty_ring_buffer_entry(stbir__info* stbir_info, int n)$/;"	f
stbir__buffer_loop_downsample	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__buffer_loop_downsample(stbir__info* stbir_info)$/;"	f
stbir__buffer_loop_upsample	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__buffer_loop_upsample(stbir__info* stbir_info)$/;"	f
stbir__calculate_coefficients_downsample	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__calculate_coefficients_downsample(stbir_filter filter, float scale_ratio, int out_first_pixel, int out_last_pixel, float out_center_of_in, stbir__contributors* contributor, float* coefficient_group)$/;"	f
stbir__calculate_coefficients_upsample	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__calculate_coefficients_upsample(stbir_filter filter, float scale, int in_first_pixel, int in_last_pixel, float in_center_of_out, stbir__contributors* contributor, float* coefficient_group)$/;"	f
stbir__calculate_filters	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__calculate_filters(stbir__contributors* contributors, float* coefficients, stbir_filter filter, float scale_ratio, float shift, int input_size, int output_size)$/;"	f
stbir__calculate_memory	thirdparty/stb/include/stb/stb_image_resize.h	/^static stbir_uint32 stbir__calculate_memory(stbir__info *info)$/;"	f
stbir__calculate_sample_range_downsample	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__calculate_sample_range_downsample(int n, float in_pixels_radius, float scale_ratio, float out_shift, int* out_first_pixel, int* out_last_pixel, float* out_center_of_in)$/;"	f
stbir__calculate_sample_range_upsample	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__calculate_sample_range_upsample(int n, float out_filter_radius, float scale_ratio, float out_shift, int* in_first_pixel, int* in_last_pixel, float* in_center_of_out)$/;"	f
stbir__calculate_transform	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__calculate_transform(stbir__info *info, float s0, float t0, float s1, float t1, float *transform)$/;"	f
stbir__choose_filter	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__choose_filter(stbir__info *info, stbir_filter h_filter, stbir_filter v_filter)$/;"	f
stbir__contributors	thirdparty/stb/include/stb/stb_image_resize.h	/^} stbir__contributors;$/;"	t	typeref:struct:__anon71
stbir__decode_and_resample_downsample	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__decode_and_resample_downsample(stbir__info* stbir_info, int n)$/;"	f
stbir__decode_and_resample_upsample	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__decode_and_resample_upsample(stbir__info* stbir_info, int n)$/;"	f
stbir__decode_scanline	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__decode_scanline(stbir__info* stbir_info, int n)$/;"	f
stbir__edge_wrap	thirdparty/stb/include/stb/stb_image_resize.h	/^stbir__inline static int stbir__edge_wrap(stbir_edge edge, int n, int max)$/;"	f
stbir__edge_wrap_slow	thirdparty/stb/include/stb/stb_image_resize.h	/^static int stbir__edge_wrap_slow(stbir_edge edge, int n, int max)$/;"	f
stbir__empty_ring_buffer	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__empty_ring_buffer(stbir__info* stbir_info, int first_necessary_scanline)$/;"	f
stbir__encode_scanline	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__encode_scanline(stbir__info* stbir_info, int num_pixels, void *output_buffer, float *encode_buffer, int channels, int alpha_channel, int decode)$/;"	f
stbir__filter_catmullrom	thirdparty/stb/include/stb/stb_image_resize.h	/^static float stbir__filter_catmullrom(float x, float s)$/;"	f
stbir__filter_cubic	thirdparty/stb/include/stb/stb_image_resize.h	/^static float stbir__filter_cubic(float x, float s)$/;"	f
stbir__filter_info	thirdparty/stb/include/stb/stb_image_resize.h	/^} stbir__filter_info;$/;"	t	typeref:struct:__anon70
stbir__filter_info_table	thirdparty/stb/include/stb/stb_image_resize.h	/^static stbir__filter_info stbir__filter_info_table[] = {$/;"	v
stbir__filter_mitchell	thirdparty/stb/include/stb/stb_image_resize.h	/^static float stbir__filter_mitchell(float x, float s)$/;"	f
stbir__filter_trapezoid	thirdparty/stb/include/stb/stb_image_resize.h	/^static float stbir__filter_trapezoid(float x, float scale)$/;"	f
stbir__filter_triangle	thirdparty/stb/include/stb/stb_image_resize.h	/^static float stbir__filter_triangle(float x, float s)$/;"	f
stbir__get_coefficient	thirdparty/stb/include/stb/stb_image_resize.h	/^static float* stbir__get_coefficient(float* coefficients, stbir_filter filter, float scale, int n, int c)$/;"	f
stbir__get_coefficient_width	thirdparty/stb/include/stb/stb_image_resize.h	/^static int stbir__get_coefficient_width(stbir_filter filter, float scale)$/;"	f
stbir__get_contributor	thirdparty/stb/include/stb/stb_image_resize.h	/^static stbir__contributors* stbir__get_contributor(stbir__contributors* contributors, int n)$/;"	f
stbir__get_contributors	thirdparty/stb/include/stb/stb_image_resize.h	/^static int stbir__get_contributors(float scale, stbir_filter filter, int input_size, int output_size)$/;"	f
stbir__get_decode_buffer	thirdparty/stb/include/stb/stb_image_resize.h	/^static float* stbir__get_decode_buffer(stbir__info* stbir_info)$/;"	f
stbir__get_filter_pixel_margin	thirdparty/stb/include/stb/stb_image_resize.h	/^static int stbir__get_filter_pixel_margin(stbir_filter filter, float scale)$/;"	f
stbir__get_filter_pixel_width	thirdparty/stb/include/stb/stb_image_resize.h	/^static int stbir__get_filter_pixel_width(stbir_filter filter, float scale)$/;"	f
stbir__get_ring_buffer_entry	thirdparty/stb/include/stb/stb_image_resize.h	/^static float* stbir__get_ring_buffer_entry(float* ring_buffer, int index, int ring_buffer_length)$/;"	f
stbir__get_ring_buffer_scanline	thirdparty/stb/include/stb/stb_image_resize.h	/^static float* stbir__get_ring_buffer_scanline(int get_scanline, float* ring_buffer, int begin_index, int first_scanline, int ring_buffer_num_entries, int ring_buffer_length)$/;"	f
stbir__get_total_horizontal_coefficients	thirdparty/stb/include/stb/stb_image_resize.h	/^static int stbir__get_total_horizontal_coefficients(stbir__info* info)$/;"	f
stbir__get_total_vertical_coefficients	thirdparty/stb/include/stb/stb_image_resize.h	/^static int stbir__get_total_vertical_coefficients(stbir__info* info)$/;"	f
stbir__info	thirdparty/stb/include/stb/stb_image_resize.h	/^} stbir__info;$/;"	t	typeref:struct:__anon72
stbir__inline	thirdparty/stb/include/stb/stb_image_resize.h	405;"	d
stbir__inline	thirdparty/stb/include/stb/stb_image_resize.h	407;"	d
stbir__inline	thirdparty/stb/include/stb/stb_image_resize.h	410;"	d
stbir__kernel_fn	thirdparty/stb/include/stb/stb_image_resize.h	/^typedef float (stbir__kernel_fn)(float x, float scale);$/;"	t
stbir__linear_to_srgb	thirdparty/stb/include/stb/stb_image_resize.h	/^static float stbir__linear_to_srgb(float f)$/;"	f
stbir__linear_to_srgb_uchar	thirdparty/stb/include/stb/stb_image_resize.h	/^static stbir_uint8 stbir__linear_to_srgb_uchar(float f)$/;"	f
stbir__linear_to_srgb_uchar	thirdparty/stb/include/stb/stb_image_resize.h	/^static stbir_uint8 stbir__linear_to_srgb_uchar(float in)$/;"	f
stbir__max_uint16_as_float	thirdparty/stb/include/stb/stb_image_resize.h	/^static const float stbir__max_uint16_as_float = 65535.0f;$/;"	v
stbir__max_uint32_as_float	thirdparty/stb/include/stb/stb_image_resize.h	/^static const double stbir__max_uint32_as_float = 4294967295.0;$/;"	v
stbir__max_uint8_as_float	thirdparty/stb/include/stb/stb_image_resize.h	/^static const float stbir__max_uint8_as_float  = 255.0f;$/;"	v
stbir__min	thirdparty/stb/include/stb/stb_image_resize.h	/^static stbir__inline int stbir__min(int a, int b)$/;"	f
stbir__normalize_downsample_coefficients	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__normalize_downsample_coefficients(stbir__contributors* contributors, float* coefficients, stbir_filter filter, float scale_ratio, int input_size, int output_size)$/;"	f
stbir__resample_horizontal_downsample	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__resample_horizontal_downsample(stbir__info* stbir_info, float* output_buffer)$/;"	f
stbir__resample_horizontal_upsample	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__resample_horizontal_upsample(stbir__info* stbir_info, float* output_buffer)$/;"	f
stbir__resample_vertical_downsample	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__resample_vertical_downsample(stbir__info* stbir_info, int n)$/;"	f
stbir__resample_vertical_upsample	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__resample_vertical_upsample(stbir__info* stbir_info, int n)$/;"	f
stbir__resize_allocated	thirdparty/stb/include/stb/stb_image_resize.h	/^static int stbir__resize_allocated(stbir__info *info,$/;"	f
stbir__resize_arbitrary	thirdparty/stb/include/stb/stb_image_resize.h	/^static int stbir__resize_arbitrary($/;"	f
stbir__saturate	thirdparty/stb/include/stb/stb_image_resize.h	/^static stbir__inline float stbir__saturate(float x)$/;"	f
stbir__saturate16	thirdparty/stb/include/stb/stb_image_resize.h	/^static stbir__inline stbir_uint16 stbir__saturate16(int x)$/;"	f
stbir__saturate8	thirdparty/stb/include/stb/stb_image_resize.h	/^static stbir__inline stbir_uint8 stbir__saturate8(int x)$/;"	f
stbir__setup	thirdparty/stb/include/stb/stb_image_resize.h	/^static void stbir__setup(stbir__info *info, int input_w, int input_h, int output_w, int output_h, int channels)$/;"	f
stbir__srgb_offset_to_linear_scaled	thirdparty/stb/include/stb/stb_image_resize.h	/^static int stbir__srgb_offset_to_linear_scaled[256] =$/;"	v
stbir__srgb_to_linear	thirdparty/stb/include/stb/stb_image_resize.h	/^static float stbir__srgb_to_linear(float f)$/;"	f
stbir__srgb_uchar_to_linear_float	thirdparty/stb/include/stb/stb_image_resize.h	/^static float stbir__srgb_uchar_to_linear_float[256] = {$/;"	v
stbir__support_fn	thirdparty/stb/include/stb/stb_image_resize.h	/^typedef float (stbir__support_fn)(float scale);$/;"	t
stbir__support_one	thirdparty/stb/include/stb/stb_image_resize.h	/^static float stbir__support_one(float s)$/;"	f
stbir__support_trapezoid	thirdparty/stb/include/stb/stb_image_resize.h	/^static float stbir__support_trapezoid(float scale)$/;"	f
stbir__support_two	thirdparty/stb/include/stb/stb_image_resize.h	/^static float stbir__support_two(float s)$/;"	f
stbir__support_zero	thirdparty/stb/include/stb/stb_image_resize.h	/^static float stbir__support_zero(float s)$/;"	f
stbir__type_size	thirdparty/stb/include/stb/stb_image_resize.h	/^static unsigned char stbir__type_size[] = {$/;"	v
stbir__use_height_upsampling	thirdparty/stb/include/stb/stb_image_resize.h	/^stbir__inline static int stbir__use_height_upsampling(stbir__info* stbir_info)$/;"	f
stbir__use_upsampling	thirdparty/stb/include/stb/stb_image_resize.h	/^stbir__inline static int stbir__use_upsampling(float ratio)$/;"	f
stbir__use_width_upsampling	thirdparty/stb/include/stb/stb_image_resize.h	/^stbir__inline static int stbir__use_width_upsampling(stbir__info* stbir_info)$/;"	f
stbir__validate_uint32	thirdparty/stb/include/stb/stb_image_resize.h	/^typedef unsigned char stbir__validate_uint32[sizeof(stbir_uint32) == 4 ? 1 : -1];$/;"	t
stbir_colorspace	thirdparty/stb/include/stb/stb_image_resize.h	/^} stbir_colorspace;$/;"	t	typeref:enum:__anon68
stbir_datatype	thirdparty/stb/include/stb/stb_image_resize.h	/^} stbir_datatype;$/;"	t	typeref:enum:__anon69
stbir_edge	thirdparty/stb/include/stb/stb_image_resize.h	/^} stbir_edge;$/;"	t	typeref:enum:__anon66
stbir_filter	thirdparty/stb/include/stb/stb_image_resize.h	/^} stbir_filter;$/;"	t	typeref:enum:__anon67
stbir_resize	thirdparty/stb/include/stb/stb_image_resize.h	/^STBIRDEF int stbir_resize(         const void *input_pixels , int input_w , int input_h , int input_stride_in_bytes,$/;"	f
stbir_resize_float	thirdparty/stb/include/stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_float(     const float *input_pixels , int input_w , int input_h , int input_stride_in_bytes,$/;"	f
stbir_resize_float_generic	thirdparty/stb/include/stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_float_generic( const float *input_pixels         , int input_w , int input_h , int input_stride_in_bytes,$/;"	f
stbir_resize_region	thirdparty/stb/include/stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_region(  const void *input_pixels , int input_w , int input_h , int input_stride_in_bytes,$/;"	f
stbir_resize_subpixel	thirdparty/stb/include/stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_subpixel(const void *input_pixels , int input_w , int input_h , int input_stride_in_bytes,$/;"	f
stbir_resize_uint16_generic	thirdparty/stb/include/stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_uint16_generic(const stbir_uint16 *input_pixels  , int input_w , int input_h , int input_stride_in_bytes,$/;"	f
stbir_resize_uint8	thirdparty/stb/include/stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_uint8(     const unsigned char *input_pixels , int input_w , int input_h , int input_stride_in_bytes,$/;"	f
stbir_resize_uint8_generic	thirdparty/stb/include/stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_uint8_generic( const unsigned char *input_pixels , int input_w , int input_h , int input_stride_in_bytes,$/;"	f
stbir_resize_uint8_srgb	thirdparty/stb/include/stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_uint8_srgb(const unsigned char *input_pixels , int input_w , int input_h , int input_stride_in_bytes,$/;"	f
stbir_resize_uint8_srgb_edgemode	thirdparty/stb/include/stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_uint8_srgb_edgemode(const unsigned char *input_pixels , int input_w , int input_h , int input_stride_in_bytes,$/;"	f
stbir_uint16	thirdparty/stb/include/stb/stb_image_resize.h	/^typedef uint16_t stbir_uint16;$/;"	t
stbir_uint16	thirdparty/stb/include/stb/stb_image_resize.h	/^typedef unsigned short stbir_uint16;$/;"	t
stbir_uint32	thirdparty/stb/include/stb/stb_image_resize.h	/^typedef uint32_t stbir_uint32;$/;"	t
stbir_uint32	thirdparty/stb/include/stb/stb_image_resize.h	/^typedef unsigned int   stbir_uint32;$/;"	t
stbir_uint8	thirdparty/stb/include/stb/stb_image_resize.h	/^typedef uint8_t  stbir_uint8;$/;"	t
stbir_uint8	thirdparty/stb/include/stb/stb_image_resize.h	/^typedef unsigned char  stbir_uint8;$/;"	t
stbiw__ZHASH	thirdparty/glfw/src/deps/stb_image_write.h	729;"	d
stbiw__ZHASH	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	467;"	d
stbiw__ZHASH	thirdparty/stb/include/stb/stb_image_write.h	743;"	d
stbiw__crc32	thirdparty/glfw/src/deps/stb_image_write.h	/^static unsigned int stbiw__crc32(unsigned char *buffer, int len)$/;"	f
stbiw__crc32	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^unsigned int stbiw__crc32(unsigned char *buffer, int len)$/;"	f
stbiw__crc32	thirdparty/stb/include/stb/stb_image_write.h	/^static unsigned int stbiw__crc32(unsigned char *buffer, int len)$/;"	f
stbiw__jpg_DCT	thirdparty/stb/include/stb/stb_image_write.h	/^static void stbiw__jpg_DCT(float *d0p, float *d1p, float *d2p, float *d3p, float *d4p, float *d5p, float *d6p, float *d7p) {$/;"	f
stbiw__jpg_ZigZag	thirdparty/stb/include/stb/stb_image_write.h	/^static const unsigned char stbiw__jpg_ZigZag[] = { 0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,$/;"	v
stbiw__jpg_calcBits	thirdparty/stb/include/stb/stb_image_write.h	/^static void stbiw__jpg_calcBits(int val, unsigned short bits[2]) {$/;"	f
stbiw__jpg_processDU	thirdparty/stb/include/stb/stb_image_write.h	/^static int stbiw__jpg_processDU(stbi__write_context *s, int *bitBuf, int *bitCnt, float *CDU, float *fdtbl, int DC, const unsigned short HTDC[256][2], const unsigned short HTAC[256][2]) {$/;"	f
stbiw__jpg_writeBits	thirdparty/stb/include/stb/stb_image_write.h	/^static void stbiw__jpg_writeBits(stbi__write_context *s, int *bitBufP, int *bitCntP, const unsigned short *bs) {$/;"	f
stbiw__linear_to_rgbe	thirdparty/glfw/src/deps/stb_image_write.h	/^void stbiw__linear_to_rgbe(unsigned char *rgbe, float *linear)$/;"	f
stbiw__linear_to_rgbe	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^void stbiw__linear_to_rgbe(unsigned char *rgbe, float *linear)$/;"	f
stbiw__linear_to_rgbe	thirdparty/stb/include/stb/stb_image_write.h	/^void stbiw__linear_to_rgbe(unsigned char *rgbe, float *linear)$/;"	f
stbiw__max	thirdparty/glfw/src/deps/stb_image_write.h	480;"	d
stbiw__max	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	243;"	d
stbiw__max	thirdparty/stb/include/stb/stb_image_write.h	493;"	d
stbiw__outfile	thirdparty/glfw/src/deps/stb_image_write.h	/^static int stbiw__outfile(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp, int expand_mono, void *data, int alpha, int pad, const char *fmt, ...)$/;"	f
stbiw__outfile	thirdparty/stb/include/stb/stb_image_write.h	/^static int stbiw__outfile(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp, int expand_mono, void *data, int alpha, int pad, const char *fmt, ...)$/;"	f
stbiw__paeth	thirdparty/glfw/src/deps/stb_image_write.h	/^static unsigned char stbiw__paeth(int a, int b, int c)$/;"	f
stbiw__paeth	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^static unsigned char stbiw__paeth(int a, int b, int c)$/;"	f
stbiw__paeth	thirdparty/stb/include/stb/stb_image_write.h	/^static unsigned char stbiw__paeth(int a, int b, int c)$/;"	f
stbiw__putc	thirdparty/stb/include/stb/stb_image_write.h	/^static void stbiw__putc(stbi__write_context *s, unsigned char c)$/;"	f
stbiw__sbcount	thirdparty/glfw/src/deps/stb_image_write.h	661;"	d
stbiw__sbcount	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	399;"	d
stbiw__sbcount	thirdparty/stb/include/stb/stb_image_write.h	675;"	d
stbiw__sbfree	thirdparty/glfw/src/deps/stb_image_write.h	662;"	d
stbiw__sbfree	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	400;"	d
stbiw__sbfree	thirdparty/stb/include/stb/stb_image_write.h	676;"	d
stbiw__sbgrow	thirdparty/glfw/src/deps/stb_image_write.h	658;"	d
stbiw__sbgrow	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	396;"	d
stbiw__sbgrow	thirdparty/stb/include/stb/stb_image_write.h	672;"	d
stbiw__sbgrowf	thirdparty/glfw/src/deps/stb_image_write.h	/^static void *stbiw__sbgrowf(void **arr, int increment, int itemsize)$/;"	f
stbiw__sbgrowf	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^static void *stbiw__sbgrowf(void **arr, int increment, int itemsize)$/;"	f
stbiw__sbgrowf	thirdparty/stb/include/stb/stb_image_write.h	/^static void *stbiw__sbgrowf(void **arr, int increment, int itemsize)$/;"	f
stbiw__sbm	thirdparty/glfw/src/deps/stb_image_write.h	653;"	d
stbiw__sbm	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	391;"	d
stbiw__sbm	thirdparty/stb/include/stb/stb_image_write.h	667;"	d
stbiw__sbmaybegrow	thirdparty/glfw/src/deps/stb_image_write.h	657;"	d
stbiw__sbmaybegrow	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	395;"	d
stbiw__sbmaybegrow	thirdparty/stb/include/stb/stb_image_write.h	671;"	d
stbiw__sbn	thirdparty/glfw/src/deps/stb_image_write.h	654;"	d
stbiw__sbn	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	392;"	d
stbiw__sbn	thirdparty/stb/include/stb/stb_image_write.h	668;"	d
stbiw__sbneedgrow	thirdparty/glfw/src/deps/stb_image_write.h	656;"	d
stbiw__sbneedgrow	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	394;"	d
stbiw__sbneedgrow	thirdparty/stb/include/stb/stb_image_write.h	670;"	d
stbiw__sbpush	thirdparty/glfw/src/deps/stb_image_write.h	660;"	d
stbiw__sbpush	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	398;"	d
stbiw__sbpush	thirdparty/stb/include/stb/stb_image_write.h	674;"	d
stbiw__sbraw	thirdparty/glfw/src/deps/stb_image_write.h	652;"	d
stbiw__sbraw	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	390;"	d
stbiw__sbraw	thirdparty/stb/include/stb/stb_image_write.h	666;"	d
stbiw__wp32	thirdparty/glfw/src/deps/stb_image_write.h	882;"	d
stbiw__wp32	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	587;"	d
stbiw__wp32	thirdparty/stb/include/stb/stb_image_write.h	896;"	d
stbiw__wpcrc	thirdparty/glfw/src/deps/stb_image_write.h	/^static void stbiw__wpcrc(unsigned char **data, int len)$/;"	f
stbiw__wpcrc	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^static void stbiw__wpcrc(unsigned char **data, int len)$/;"	f
stbiw__wpcrc	thirdparty/stb/include/stb/stb_image_write.h	/^static void stbiw__wpcrc(unsigned char **data, int len)$/;"	f
stbiw__wpng4	thirdparty/glfw/src/deps/stb_image_write.h	881;"	d
stbiw__wpng4	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	586;"	d
stbiw__wpng4	thirdparty/stb/include/stb/stb_image_write.h	895;"	d
stbiw__wptag	thirdparty/glfw/src/deps/stb_image_write.h	883;"	d
stbiw__wptag	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	588;"	d
stbiw__wptag	thirdparty/stb/include/stb/stb_image_write.h	897;"	d
stbiw__write3	thirdparty/glfw/src/deps/stb_image_write.h	/^static void stbiw__write3(stbi__write_context *s, unsigned char a, unsigned char b, unsigned char c)$/;"	f
stbiw__write3	thirdparty/stb/include/stb/stb_image_write.h	/^static void stbiw__write3(stbi__write_context *s, unsigned char a, unsigned char b, unsigned char c)$/;"	f
stbiw__write_dump_data	thirdparty/glfw/src/deps/stb_image_write.h	/^void stbiw__write_dump_data(stbi__write_context *s, int length, unsigned char *data)$/;"	f
stbiw__write_dump_data	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^void stbiw__write_dump_data(FILE *f, int length, unsigned char *data)$/;"	f
stbiw__write_dump_data	thirdparty/stb/include/stb/stb_image_write.h	/^void stbiw__write_dump_data(stbi__write_context *s, int length, unsigned char *data)$/;"	f
stbiw__write_hdr_scanline	thirdparty/glfw/src/deps/stb_image_write.h	/^void stbiw__write_hdr_scanline(stbi__write_context *s, int width, int ncomp, unsigned char *scratch, float *scanline)$/;"	f
stbiw__write_hdr_scanline	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^void stbiw__write_hdr_scanline(FILE *f, int width, int comp, unsigned char *scratch, const float *scanline)$/;"	f
stbiw__write_hdr_scanline	thirdparty/stb/include/stb/stb_image_write.h	/^void stbiw__write_hdr_scanline(stbi__write_context *s, int width, int ncomp, unsigned char *scratch, float *scanline)$/;"	f
stbiw__write_pixel	thirdparty/glfw/src/deps/stb_image_write.h	/^static void stbiw__write_pixel(stbi__write_context *s, int rgb_dir, int comp, int write_alpha, int expand_mono, unsigned char *d)$/;"	f
stbiw__write_pixel	thirdparty/stb/include/stb/stb_image_write.h	/^static void stbiw__write_pixel(stbi__write_context *s, int rgb_dir, int comp, int write_alpha, int expand_mono, unsigned char *d)$/;"	f
stbiw__write_pixels	thirdparty/glfw/src/deps/stb_image_write.h	/^static void stbiw__write_pixels(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp, void *data, int write_alpha, int scanline_pad, int expand_mono)$/;"	f
stbiw__write_pixels	thirdparty/stb/include/stb/stb_image_write.h	/^static void stbiw__write_pixels(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp, void *data, int write_alpha, int scanline_pad, int expand_mono)$/;"	f
stbiw__write_run_data	thirdparty/glfw/src/deps/stb_image_write.h	/^void stbiw__write_run_data(stbi__write_context *s, int length, unsigned char databyte)$/;"	f
stbiw__write_run_data	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^void stbiw__write_run_data(FILE *f, int length, unsigned char databyte)$/;"	f
stbiw__write_run_data	thirdparty/stb/include/stb/stb_image_write.h	/^void stbiw__write_run_data(stbi__write_context *s, int length, unsigned char databyte)$/;"	f
stbiw__writef	thirdparty/glfw/src/deps/stb_image_write.h	/^static void stbiw__writef(stbi__write_context *s, const char *fmt, ...)$/;"	f
stbiw__writef	thirdparty/stb/include/stb/stb_image_write.h	/^static void stbiw__writef(stbi__write_context *s, const char *fmt, ...)$/;"	f
stbiw__writefv	thirdparty/glfw/src/deps/stb_image_write.h	/^static void stbiw__writefv(stbi__write_context *s, const char *fmt, va_list v)$/;"	f
stbiw__writefv	thirdparty/stb/include/stb/stb_image_write.h	/^static void stbiw__writefv(stbi__write_context *s, const char *fmt, va_list v)$/;"	f
stbiw__zhash	thirdparty/glfw/src/deps/stb_image_write.h	/^static unsigned int stbiw__zhash(unsigned char *data)$/;"	f
stbiw__zhash	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^static unsigned int stbiw__zhash(unsigned char *data)$/;"	f
stbiw__zhash	thirdparty/stb/include/stb/stb_image_write.h	/^static unsigned int stbiw__zhash(unsigned char *data)$/;"	f
stbiw__zlib_add	thirdparty/glfw/src/deps/stb_image_write.h	718;"	d
stbiw__zlib_add	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	456;"	d
stbiw__zlib_add	thirdparty/stb/include/stb/stb_image_write.h	732;"	d
stbiw__zlib_bitrev	thirdparty/glfw/src/deps/stb_image_write.h	/^static int stbiw__zlib_bitrev(int code, int codebits)$/;"	f
stbiw__zlib_bitrev	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^static int stbiw__zlib_bitrev(int code, int codebits)$/;"	f
stbiw__zlib_bitrev	thirdparty/stb/include/stb/stb_image_write.h	/^static int stbiw__zlib_bitrev(int code, int codebits)$/;"	f
stbiw__zlib_countm	thirdparty/glfw/src/deps/stb_image_write.h	/^static unsigned int stbiw__zlib_countm(unsigned char *a, unsigned char *b, int limit)$/;"	f
stbiw__zlib_countm	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^static unsigned int stbiw__zlib_countm(unsigned char *a, unsigned char *b, int limit)$/;"	f
stbiw__zlib_countm	thirdparty/stb/include/stb/stb_image_write.h	/^static unsigned int stbiw__zlib_countm(unsigned char *a, unsigned char *b, int limit)$/;"	f
stbiw__zlib_flush	thirdparty/glfw/src/deps/stb_image_write.h	717;"	d
stbiw__zlib_flush	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	455;"	d
stbiw__zlib_flush	thirdparty/stb/include/stb/stb_image_write.h	731;"	d
stbiw__zlib_flushf	thirdparty/glfw/src/deps/stb_image_write.h	/^static unsigned char *stbiw__zlib_flushf(unsigned char *data, unsigned int *bitbuffer, int *bitcount)$/;"	f
stbiw__zlib_flushf	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^static unsigned char *stbiw__zlib_flushf(unsigned char *data, unsigned int *bitbuffer, int *bitcount)$/;"	f
stbiw__zlib_flushf	thirdparty/stb/include/stb/stb_image_write.h	/^static unsigned char *stbiw__zlib_flushf(unsigned char *data, unsigned int *bitbuffer, int *bitcount)$/;"	f
stbiw__zlib_huff	thirdparty/glfw/src/deps/stb_image_write.h	726;"	d
stbiw__zlib_huff	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	464;"	d
stbiw__zlib_huff	thirdparty/stb/include/stb/stb_image_write.h	740;"	d
stbiw__zlib_huff1	thirdparty/glfw/src/deps/stb_image_write.h	722;"	d
stbiw__zlib_huff1	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	460;"	d
stbiw__zlib_huff1	thirdparty/stb/include/stb/stb_image_write.h	736;"	d
stbiw__zlib_huff2	thirdparty/glfw/src/deps/stb_image_write.h	723;"	d
stbiw__zlib_huff2	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	461;"	d
stbiw__zlib_huff2	thirdparty/stb/include/stb/stb_image_write.h	737;"	d
stbiw__zlib_huff3	thirdparty/glfw/src/deps/stb_image_write.h	724;"	d
stbiw__zlib_huff3	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	462;"	d
stbiw__zlib_huff3	thirdparty/stb/include/stb/stb_image_write.h	738;"	d
stbiw__zlib_huff4	thirdparty/glfw/src/deps/stb_image_write.h	725;"	d
stbiw__zlib_huff4	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	463;"	d
stbiw__zlib_huff4	thirdparty/stb/include/stb/stb_image_write.h	739;"	d
stbiw__zlib_huffa	thirdparty/glfw/src/deps/stb_image_write.h	720;"	d
stbiw__zlib_huffa	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	458;"	d
stbiw__zlib_huffa	thirdparty/stb/include/stb/stb_image_write.h	734;"	d
stbiw__zlib_huffb	thirdparty/glfw/src/deps/stb_image_write.h	727;"	d
stbiw__zlib_huffb	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	465;"	d
stbiw__zlib_huffb	thirdparty/stb/include/stb/stb_image_write.h	741;"	d
stbiw_uint32	thirdparty/glfw/src/deps/stb_image_write.h	/^typedef unsigned int stbiw_uint32;$/;"	t
stbiw_uint32	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^typedef unsigned int stbiw_uint32;$/;"	t
stbiw_uint32	thirdparty/stb/include/stb/stb_image_write.h	/^typedef unsigned int stbiw_uint32;$/;"	t
stbrp__findresult	thirdparty/stb/include/stb/stb_rect_pack.h	/^} stbrp__findresult;$/;"	t	typeref:struct:__anon95
stbrp__skyline_find_best_pos	thirdparty/stb/include/stb/stb_rect_pack.h	/^static stbrp__findresult stbrp__skyline_find_best_pos(stbrp_context *c, int width, int height)$/;"	f
stbrp__skyline_find_min_y	thirdparty/stb/include/stb/stb_rect_pack.h	/^static int stbrp__skyline_find_min_y(stbrp_context *c, stbrp_node *first, int x0, int width, int *pwaste)$/;"	f
stbrp__skyline_pack_rectangle	thirdparty/stb/include/stb/stb_rect_pack.h	/^static stbrp__findresult stbrp__skyline_pack_rectangle(stbrp_context *context, int width, int height)$/;"	f
stbrp_context	thirdparty/stb/include/stb/stb_rect_pack.h	/^struct stbrp_context$/;"	s
stbrp_context	thirdparty/stb/include/stb/stb_rect_pack.h	/^typedef struct stbrp_context stbrp_context;$/;"	t	typeref:struct:stbrp_context
stbrp_context	thirdparty/stb/include/stb/stb_truetype.h	/^} stbrp_context;$/;"	t	typeref:struct:__anon112
stbrp_coord	thirdparty/stb/include/stb/stb_rect_pack.h	/^typedef int            stbrp_coord;$/;"	t
stbrp_coord	thirdparty/stb/include/stb/stb_rect_pack.h	/^typedef unsigned short stbrp_coord;$/;"	t
stbrp_coord	thirdparty/stb/include/stb/stb_truetype.h	/^typedef int stbrp_coord;$/;"	t
stbrp_init_target	thirdparty/stb/include/stb/stb_rect_pack.h	/^STBRP_DEF void stbrp_init_target(stbrp_context *context, int width, int height, stbrp_node *nodes, int num_nodes)$/;"	f
stbrp_init_target	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbrp_init_target(stbrp_context *con, int pw, int ph, stbrp_node *nodes, int num_nodes)$/;"	f
stbrp_node	thirdparty/stb/include/stb/stb_rect_pack.h	/^struct stbrp_node$/;"	s
stbrp_node	thirdparty/stb/include/stb/stb_rect_pack.h	/^typedef struct stbrp_node    stbrp_node;$/;"	t	typeref:struct:stbrp_node
stbrp_node	thirdparty/stb/include/stb/stb_truetype.h	/^} stbrp_node;$/;"	t	typeref:struct:__anon113
stbrp_pack_rects	thirdparty/stb/include/stb/stb_rect_pack.h	/^STBRP_DEF int stbrp_pack_rects(stbrp_context *context, stbrp_rect *rects, int num_rects)$/;"	f
stbrp_pack_rects	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbrp_pack_rects(stbrp_context *con, stbrp_rect *rects, int num_rects)$/;"	f
stbrp_rect	thirdparty/stb/include/stb/stb_rect_pack.h	/^struct stbrp_rect$/;"	s
stbrp_rect	thirdparty/stb/include/stb/stb_rect_pack.h	/^typedef struct stbrp_rect    stbrp_rect;$/;"	t	typeref:struct:stbrp_rect
stbrp_rect	thirdparty/stb/include/stb/stb_truetype.h	/^struct stbrp_rect$/;"	s
stbrp_rect	thirdparty/stb/include/stb/stb_truetype.h	/^typedef struct stbrp_rect stbrp_rect;$/;"	t	typeref:struct:stbrp_rect
stbrp_setup_allow_out_of_mem	thirdparty/stb/include/stb/stb_rect_pack.h	/^STBRP_DEF void stbrp_setup_allow_out_of_mem(stbrp_context *context, int allow_out_of_mem)$/;"	f
stbrp_setup_heuristic	thirdparty/stb/include/stb/stb_rect_pack.h	/^STBRP_DEF void stbrp_setup_heuristic(stbrp_context *context, int heuristic)$/;"	f
stbtt_BakeFontBitmap	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_BakeFontBitmap(const unsigned char *data, int offset,$/;"	f
stbtt_BakeFontBitmap_internal	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt_BakeFontBitmap_internal(unsigned char *data, int offset,  \/\/ font location (use offset=0 for plain .ttf)$/;"	f
stbtt_CompareUTF8toUTF16_bigendian	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_CompareUTF8toUTF16_bigendian(const char *s1, int len1, const char *s2, int len2)$/;"	f
stbtt_CompareUTF8toUTF16_bigendian_internal	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt_CompareUTF8toUTF16_bigendian_internal(char *s1, int len1, char *s2, int len2) $/;"	f
stbtt_FindGlyphIndex	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_FindGlyphIndex(const stbtt_fontinfo *info, int unicode_codepoint)$/;"	f
stbtt_FindMatchingFont	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_FindMatchingFont(const unsigned char *fontdata, const char *name, int flags)$/;"	f
stbtt_FindMatchingFont_internal	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt_FindMatchingFont_internal(unsigned char *font_collection, char *name_utf8, stbtt_int32 flags)$/;"	f
stbtt_FlattenCurves	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt__point *stbtt_FlattenCurves(stbtt_vertex *vertices, int num_verts, float objspace_flatness, int **contour_lengths, int *num_contours, void *userdata)$/;"	f
stbtt_FreeBitmap	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_FreeBitmap(unsigned char *bitmap, void *userdata)$/;"	f
stbtt_FreeSDF	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_FreeSDF(unsigned char *bitmap, void *userdata)$/;"	f
stbtt_FreeShape	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_FreeShape(const stbtt_fontinfo *info, stbtt_vertex *v)$/;"	f
stbtt_GetBakedQuad	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetBakedQuad(const stbtt_bakedchar *chardata, int pw, int ph, int char_index, float *xpos, float *ypos, stbtt_aligned_quad *q, int opengl_fillrule)$/;"	f
stbtt_GetCodepointBitmap	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetCodepointBitmap(const stbtt_fontinfo *info, float scale_x, float scale_y, int codepoint, int *width, int *height, int *xoff, int *yoff)$/;"	f
stbtt_GetCodepointBitmapBox	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointBitmapBox(const stbtt_fontinfo *font, int codepoint, float scale_x, float scale_y, int *ix0, int *iy0, int *ix1, int *iy1)$/;"	f
stbtt_GetCodepointBitmapBoxSubpixel	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointBitmapBoxSubpixel(const stbtt_fontinfo *font, int codepoint, float scale_x, float scale_y, float shift_x, float shift_y, int *ix0, int *iy0, int *ix1, int *iy1)$/;"	f
stbtt_GetCodepointBitmapSubpixel	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetCodepointBitmapSubpixel(const stbtt_fontinfo *info, float scale_x, float scale_y, float shift_x, float shift_y, int codepoint, int *width, int *height, int *xoff, int *yoff)$/;"	f
stbtt_GetCodepointBox	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointBox(const stbtt_fontinfo *info, int codepoint, int *x0, int *y0, int *x1, int *y1)$/;"	f
stbtt_GetCodepointHMetrics	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointHMetrics(const stbtt_fontinfo *info, int codepoint, int *advanceWidth, int *leftSideBearing)$/;"	f
stbtt_GetCodepointKernAdvance	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int  stbtt_GetCodepointKernAdvance(const stbtt_fontinfo *info, int ch1, int ch2)$/;"	f
stbtt_GetCodepointSDF	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF unsigned char * stbtt_GetCodepointSDF(const stbtt_fontinfo *info, float scale, int codepoint, int padding, unsigned char onedge_value, float pixel_dist_scale, int *width, int *height, int *xoff, int *yoff)$/;"	f
stbtt_GetCodepointShape	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointShape(const stbtt_fontinfo *info, int unicode_codepoint, stbtt_vertex **vertices)$/;"	f
stbtt_GetFontBoundingBox	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetFontBoundingBox(const stbtt_fontinfo *info, int *x0, int *y0, int *x1, int *y1)$/;"	f
stbtt_GetFontNameString	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF const char *stbtt_GetFontNameString(const stbtt_fontinfo *font, int *length, int platformID, int encodingID, int languageID, int nameID)$/;"	f
stbtt_GetFontOffsetForIndex	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetFontOffsetForIndex(const unsigned char *data, int index)$/;"	f
stbtt_GetFontOffsetForIndex_internal	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt_GetFontOffsetForIndex_internal(unsigned char *font_collection, int index)$/;"	f
stbtt_GetFontVMetrics	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetFontVMetrics(const stbtt_fontinfo *info, int *ascent, int *descent, int *lineGap)$/;"	f
stbtt_GetFontVMetricsOS2	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int  stbtt_GetFontVMetricsOS2(const stbtt_fontinfo *info, int *typoAscent, int *typoDescent, int *typoLineGap)$/;"	f
stbtt_GetGlyphBitmap	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetGlyphBitmap(const stbtt_fontinfo *info, float scale_x, float scale_y, int glyph, int *width, int *height, int *xoff, int *yoff)$/;"	f
stbtt_GetGlyphBitmapBox	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphBitmapBox(const stbtt_fontinfo *font, int glyph, float scale_x, float scale_y, int *ix0, int *iy0, int *ix1, int *iy1)$/;"	f
stbtt_GetGlyphBitmapBoxSubpixel	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphBitmapBoxSubpixel(const stbtt_fontinfo *font, int glyph, float scale_x, float scale_y,float shift_x, float shift_y, int *ix0, int *iy0, int *ix1, int *iy1)$/;"	f
stbtt_GetGlyphBitmapSubpixel	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetGlyphBitmapSubpixel(const stbtt_fontinfo *info, float scale_x, float scale_y, float shift_x, float shift_y, int glyph, int *width, int *height, int *xoff, int *yoff)$/;"	f
stbtt_GetGlyphBox	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphBox(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, int *x1, int *y1)$/;"	f
stbtt_GetGlyphHMetrics	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphHMetrics(const stbtt_fontinfo *info, int glyph_index, int *advanceWidth, int *leftSideBearing)$/;"	f
stbtt_GetGlyphKernAdvance	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int glyph1, int glyph2)$/;"	f
stbtt_GetGlyphSDF	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF unsigned char * stbtt_GetGlyphSDF(const stbtt_fontinfo *info, float scale, int glyph, int padding, unsigned char onedge_value, float pixel_dist_scale, int *width, int *height, int *xoff, int *yoff)$/;"	f
stbtt_GetGlyphShape	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphShape(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvertices)$/;"	f
stbtt_GetNumberOfFonts	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetNumberOfFonts(const unsigned char *data)$/;"	f
stbtt_GetNumberOfFonts_internal	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt_GetNumberOfFonts_internal(unsigned char *font_collection)$/;"	f
stbtt_GetPackedQuad	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetPackedQuad(const stbtt_packedchar *chardata, int pw, int ph, int char_index, float *xpos, float *ypos, stbtt_aligned_quad *q, int align_to_integer)$/;"	f
stbtt_InitFont	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_InitFont(stbtt_fontinfo *info, const unsigned char *data, int offset)$/;"	f
stbtt_InitFont_internal	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt_InitFont_internal(stbtt_fontinfo *info, unsigned char *data, int fontstart)$/;"	f
stbtt_IsGlyphEmpty	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_IsGlyphEmpty(const stbtt_fontinfo *info, int glyph_index)$/;"	f
stbtt_MakeCodepointBitmap	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmap(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, int codepoint)$/;"	f
stbtt_MakeCodepointBitmapSubpixel	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int codepoint)$/;"	f
stbtt_MakeGlyphBitmap	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmap(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, int glyph)$/;"	f
stbtt_MakeGlyphBitmapSubpixel	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int glyph)$/;"	f
stbtt_MakeGlyphBitmapSubpixelPrefilter	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int prefilter_x, int prefilter_y, float *sub_x, float *sub_y, int glyph)$/;"	f
stbtt_PackBegin	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int pw, int ph, int stride_in_bytes, int padding, void *alloc_context)$/;"	f
stbtt_PackEnd	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_PackEnd  (stbtt_pack_context *spc)$/;"	f
stbtt_PackFontRange	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRange(stbtt_pack_context *spc, const unsigned char *fontdata, int font_index, float font_size,$/;"	f
stbtt_PackFontRanges	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRanges(stbtt_pack_context *spc, const unsigned char *fontdata, int font_index, stbtt_pack_range *ranges, int num_ranges)$/;"	f
stbtt_PackFontRangesGatherRects	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRangesGatherRects(stbtt_pack_context *spc, const stbtt_fontinfo *info, stbtt_pack_range *ranges, int num_ranges, stbrp_rect *rects)$/;"	f
stbtt_PackFontRangesPackRects	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_PackFontRangesPackRects(stbtt_pack_context *spc, stbrp_rect *rects, int num_rects)$/;"	f
stbtt_PackFontRangesRenderIntoRects	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRangesRenderIntoRects(stbtt_pack_context *spc, const stbtt_fontinfo *info, stbtt_pack_range *ranges, int num_ranges, stbrp_rect *rects)$/;"	f
stbtt_PackSetOversampling	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_PackSetOversampling(stbtt_pack_context *spc, unsigned int h_oversample, unsigned int v_oversample)$/;"	f
stbtt_Rasterize	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF void stbtt_Rasterize(stbtt__bitmap *result, float flatness_in_pixels, stbtt_vertex *vertices, int num_verts, float scale_x, float scale_y, float shift_x, float shift_y, int x_off, int y_off, int invert, void *userdata)$/;"	f
stbtt_ScaleForMappingEmToPixels	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF float stbtt_ScaleForMappingEmToPixels(const stbtt_fontinfo *info, float pixels)$/;"	f
stbtt_ScaleForPixelHeight	thirdparty/stb/include/stb/stb_truetype.h	/^STBTT_DEF float stbtt_ScaleForPixelHeight(const stbtt_fontinfo *info, float height)$/;"	f
stbtt__CompareUTF8toUTF16_bigendian_prefix	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt_int32 stbtt__CompareUTF8toUTF16_bigendian_prefix(stbtt_uint8 *s1, stbtt_int32 len1, stbtt_uint8 *s2, stbtt_int32 len2) $/;"	f
stbtt__GetGlyfOffset	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__GetGlyfOffset(const stbtt_fontinfo *info, int glyph_index)$/;"	f
stbtt__GetGlyphInfoT2	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__GetGlyphInfoT2(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, int *x1, int *y1)$/;"	f
stbtt__GetGlyphShapeT2	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__GetGlyphShapeT2(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvertices)$/;"	f
stbtt__GetGlyphShapeTT	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__GetGlyphShapeTT(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvertices)$/;"	f
stbtt__active_edge	thirdparty/stb/include/stb/stb_truetype.h	/^typedef struct stbtt__active_edge$/;"	s
stbtt__active_edge	thirdparty/stb/include/stb/stb_truetype.h	/^} stbtt__active_edge;$/;"	t	typeref:struct:stbtt__active_edge
stbtt__add_point	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__add_point(stbtt__point *points, int n, float x, float y)$/;"	f
stbtt__bitmap	thirdparty/stb/include/stb/stb_truetype.h	/^} stbtt__bitmap;$/;"	t	typeref:struct:__anon103
stbtt__buf	thirdparty/stb/include/stb/stb_truetype.h	/^} stbtt__buf;$/;"	t	typeref:struct:__anon96
stbtt__buf_get	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt_uint32 stbtt__buf_get(stbtt__buf *b, int n)$/;"	f
stbtt__buf_get16	thirdparty/stb/include/stb/stb_truetype.h	1117;"	d
stbtt__buf_get32	thirdparty/stb/include/stb/stb_truetype.h	1118;"	d
stbtt__buf_get8	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt_uint8 stbtt__buf_get8(stbtt__buf *b)$/;"	f
stbtt__buf_peek8	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt_uint8 stbtt__buf_peek8(stbtt__buf *b)$/;"	f
stbtt__buf_range	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt__buf stbtt__buf_range(const stbtt__buf *b, int o, int s)$/;"	f
stbtt__buf_seek	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__buf_seek(stbtt__buf *b, int o)$/;"	f
stbtt__buf_skip	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__buf_skip(stbtt__buf *b, int o)$/;"	f
stbtt__cff_get_index	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt__buf stbtt__cff_get_index(stbtt__buf *b)$/;"	f
stbtt__cff_index_count	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__cff_index_count(stbtt__buf *b)$/;"	f
stbtt__cff_index_get	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt__buf stbtt__cff_index_get(stbtt__buf b, int i)$/;"	f
stbtt__cff_int	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt_uint32 stbtt__cff_int(stbtt__buf *b)$/;"	f
stbtt__cff_skip_operand	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__cff_skip_operand(stbtt__buf *b) {$/;"	f
stbtt__check_size16	thirdparty/stb/include/stb/stb_truetype.h	/^   typedef char stbtt__check_size16[sizeof(stbtt_int16)==2 ? 1 : -1];$/;"	t
stbtt__check_size32	thirdparty/stb/include/stb/stb_truetype.h	/^   typedef char stbtt__check_size32[sizeof(stbtt_int32)==4 ? 1 : -1];$/;"	t
stbtt__cid_get_glyph_subrs	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt__buf stbtt__cid_get_glyph_subrs(const stbtt_fontinfo *info, int glyph_index)$/;"	f
stbtt__close_shape	thirdparty/glfw/src/deps/nuklear.h	/^stbtt__close_shape(struct nk_tt_vertex *vertices, int num_vertices, int was_off,$/;"	f
stbtt__close_shape	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__close_shape(stbtt_vertex *vertices, int num_vertices, int was_off, int start_off,$/;"	f
stbtt__compute_crossings_x	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__compute_crossings_x(float x, float y, int nverts, stbtt_vertex *verts)$/;"	f
stbtt__csctx	thirdparty/stb/include/stb/stb_truetype.h	/^} stbtt__csctx;$/;"	t	typeref:struct:__anon110
stbtt__csctx_close_shape	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__csctx_close_shape(stbtt__csctx *ctx)$/;"	f
stbtt__csctx_rccurve_to	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__csctx_rccurve_to(stbtt__csctx *ctx, float dx1, float dy1, float dx2, float dy2, float dx3, float dy3)$/;"	f
stbtt__csctx_rline_to	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__csctx_rline_to(stbtt__csctx *ctx, float dx, float dy)$/;"	f
stbtt__csctx_rmove_to	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__csctx_rmove_to(stbtt__csctx *ctx, float dx, float dy)$/;"	f
stbtt__csctx_v	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__csctx_v(stbtt__csctx *c, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbtt_int32 cx, stbtt_int32 cy, stbtt_int32 cx1, stbtt_int32 cy1)$/;"	f
stbtt__cuberoot	thirdparty/stb/include/stb/stb_truetype.h	/^static float stbtt__cuberoot( float x )$/;"	f
stbtt__dict_get	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt__buf stbtt__dict_get(stbtt__buf *b, int key)$/;"	f
stbtt__dict_get_ints	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__dict_get_ints(stbtt__buf *b, int key, int outcount, stbtt_uint32 *out)$/;"	f
stbtt__edge	thirdparty/stb/include/stb/stb_truetype.h	/^typedef struct stbtt__edge {$/;"	s
stbtt__edge	thirdparty/stb/include/stb/stb_truetype.h	/^} stbtt__edge;$/;"	t	typeref:struct:stbtt__edge
stbtt__fill_active_edges	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__fill_active_edges(unsigned char *scanline, int len, stbtt__active_edge *e, int max_weight)$/;"	f
stbtt__fill_active_edges_new	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__fill_active_edges_new(float *scanline, float *scanline_fill, int len, stbtt__active_edge *e, float y_top)$/;"	f
stbtt__find_table	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt_uint32 stbtt__find_table(stbtt_uint8 *data, stbtt_uint32 fontstart, const char *tag)$/;"	f
stbtt__get_subr	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt__buf stbtt__get_subr(stbtt__buf idx, int n)$/;"	f
stbtt__get_subrs	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt__buf stbtt__get_subrs(stbtt__buf cff, stbtt__buf fontdict)$/;"	f
stbtt__h_prefilter	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigned int kernel_width)$/;"	f
stbtt__handle_clipped_edge	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__handle_clipped_edge(float *scanline, int x, stbtt__active_edge *e, float x0, float y0, float x1, float y1)$/;"	f
stbtt__hheap	thirdparty/stb/include/stb/stb_truetype.h	/^typedef struct stbtt__hheap$/;"	s
stbtt__hheap	thirdparty/stb/include/stb/stb_truetype.h	/^} stbtt__hheap;$/;"	t	typeref:struct:stbtt__hheap
stbtt__hheap_alloc	thirdparty/stb/include/stb/stb_truetype.h	/^static void *stbtt__hheap_alloc(stbtt__hheap *hh, size_t size, void *userdata)$/;"	f
stbtt__hheap_chunk	thirdparty/stb/include/stb/stb_truetype.h	/^typedef struct stbtt__hheap_chunk$/;"	s
stbtt__hheap_chunk	thirdparty/stb/include/stb/stb_truetype.h	/^} stbtt__hheap_chunk;$/;"	t	typeref:struct:stbtt__hheap_chunk
stbtt__hheap_cleanup	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__hheap_cleanup(stbtt__hheap *hh, void *userdata)$/;"	f
stbtt__hheap_free	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__hheap_free(stbtt__hheap *hh, void *p)$/;"	f
stbtt__isfont	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__isfont(stbtt_uint8 *font)$/;"	f
stbtt__matches	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__matches(stbtt_uint8 *fc, stbtt_uint32 offset, stbtt_uint8 *name, stbtt_int32 flags)$/;"	f
stbtt__matchpair	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__matchpair(stbtt_uint8 *fc, stbtt_uint32 nm, stbtt_uint8 *name, stbtt_int32 nlen, stbtt_int32 target_id, stbtt_int32 next_id)$/;"	f
stbtt__new_active	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt__active_edge *stbtt__new_active(stbtt__hheap *hh, stbtt__edge *e, int off_x, float start_point, void *userdata)$/;"	f
stbtt__new_buf	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt__buf stbtt__new_buf(const void *p, size_t size)$/;"	f
stbtt__oversample_shift	thirdparty/stb/include/stb/stb_truetype.h	/^static float stbtt__oversample_shift(int oversample)$/;"	f
stbtt__point	thirdparty/stb/include/stb/stb_truetype.h	/^} stbtt__point;$/;"	t	typeref:struct:__anon111
stbtt__rasterize	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__rasterize(stbtt__bitmap *result, stbtt__point *pts, int *wcount, int windings, float scale_x, float scale_y, float shift_x, float shift_y, int off_x, int off_y, int invert, void *userdata)$/;"	f
stbtt__rasterize_sorted_edges	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__rasterize_sorted_edges(stbtt__bitmap *result, stbtt__edge *e, int n, int vsubsample, int off_x, int off_y, void *userdata)$/;"	f
stbtt__ray_intersect_bezier	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__ray_intersect_bezier(float orig[2], float ray[2], float q0[2], float q1[2], float q2[2], float hits[2][2])$/;"	f
stbtt__run_charstring	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__run_charstring(const stbtt_fontinfo *info, int glyph_index, stbtt__csctx *c)$/;"	f
stbtt__solve_cubic	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__solve_cubic(float a, float b, float c, float* r)$/;"	f
stbtt__sort_edges	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__sort_edges(stbtt__edge *p, int n)$/;"	f
stbtt__sort_edges_ins_sort	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__sort_edges_ins_sort(stbtt__edge *p, int n)$/;"	f
stbtt__sort_edges_quicksort	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__sort_edges_quicksort(stbtt__edge *p, int n)$/;"	f
stbtt__tesselate_cubic	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__tesselate_cubic(stbtt__point *points, int *num_points, float x0, float y0, float x1, float y1, float x2, float y2, float x3, float y3, float objspace_flatness_squared, int n)$/;"	f
stbtt__tesselate_curve	thirdparty/stb/include/stb/stb_truetype.h	/^static int stbtt__tesselate_curve(stbtt__point *points, int *num_points, float x0, float y0, float x1, float y1, float x2, float y2, float objspace_flatness_squared, int n)$/;"	f
stbtt__test_oversample_pow2	thirdparty/stb/include/stb/stb_truetype.h	/^typedef int stbtt__test_oversample_pow2[(STBTT_MAX_OVERSAMPLE & (STBTT_MAX_OVERSAMPLE-1)) == 0 ? 1 : -1];$/;"	t
stbtt__track_vertex	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__track_vertex(stbtt__csctx *c, stbtt_int32 x, stbtt_int32 y)$/;"	f
stbtt__v_prefilter	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigned int kernel_width)$/;"	f
stbtt_aligned_quad	thirdparty/stb/include/stb/stb_truetype.h	/^} stbtt_aligned_quad;$/;"	t	typeref:struct:__anon98
stbtt_bakedchar	thirdparty/stb/include/stb/stb_truetype.h	/^} stbtt_bakedchar;$/;"	t	typeref:struct:__anon97
stbtt_fontinfo	thirdparty/stb/include/stb/stb_truetype.h	/^struct stbtt_fontinfo$/;"	s
stbtt_fontinfo	thirdparty/stb/include/stb/stb_truetype.h	/^typedef struct stbtt_fontinfo stbtt_fontinfo;$/;"	t	typeref:struct:stbtt_fontinfo
stbtt_int16	thirdparty/stb/include/stb/stb_truetype.h	/^   typedef signed   short  stbtt_int16;$/;"	t
stbtt_int32	thirdparty/stb/include/stb/stb_truetype.h	/^   typedef signed   int    stbtt_int32;$/;"	t
stbtt_int8	thirdparty/stb/include/stb/stb_truetype.h	/^   typedef signed   char   stbtt_int8;$/;"	t
stbtt_pack_context	thirdparty/stb/include/stb/stb_truetype.h	/^struct stbtt_pack_context {$/;"	s
stbtt_pack_context	thirdparty/stb/include/stb/stb_truetype.h	/^typedef struct stbtt_pack_context stbtt_pack_context;$/;"	t	typeref:struct:stbtt_pack_context
stbtt_pack_range	thirdparty/stb/include/stb/stb_truetype.h	/^} stbtt_pack_range;$/;"	t	typeref:struct:__anon100
stbtt_packedchar	thirdparty/stb/include/stb/stb_truetype.h	/^} stbtt_packedchar;$/;"	t	typeref:struct:__anon99
stbtt_setvertex	thirdparty/stb/include/stb/stb_truetype.h	/^static void stbtt_setvertex(stbtt_vertex *v, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbtt_int32 cx, stbtt_int32 cy)$/;"	f
stbtt_tag	thirdparty/stb/include/stb/stb_truetype.h	1231;"	d
stbtt_tag4	thirdparty/stb/include/stb/stb_truetype.h	1230;"	d
stbtt_uint16	thirdparty/stb/include/stb/stb_truetype.h	/^   typedef unsigned short  stbtt_uint16;$/;"	t
stbtt_uint32	thirdparty/stb/include/stb/stb_truetype.h	/^   typedef unsigned int    stbtt_uint32;$/;"	t
stbtt_uint8	thirdparty/stb/include/stb/stb_truetype.h	/^   typedef unsigned char   stbtt_uint8;$/;"	t
stbtt_vertex	thirdparty/stb/include/stb/stb_truetype.h	/^   } stbtt_vertex;$/;"	t	typeref:struct:__anon102
stbtt_vertex_type	thirdparty/stb/include/stb/stb_truetype.h	779;"	d
stbv__floor_ordering	thirdparty/stb/include/stb/stb_vorbis.c	/^} stbv__floor_ordering;$/;"	t	typeref:struct:__anon126	file:
stencil	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    stencil;$/;"	m	struct:VkClearDepthStencilValue
stencilBits	thirdparty/glfw/src/internal.h	/^    int         stencilBits;$/;"	m	struct:_GLFWfbconfig
stencilLoadOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAttachmentLoadOp              stencilLoadOp;$/;"	m	struct:VkAttachmentDescription
stencilStoreOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAttachmentStoreOp             stencilStoreOp;$/;"	m	struct:VkAttachmentDescription
stencilTestEnable	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                                  stencilTestEnable;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
step	thirdparty/glfw/src/deps/nuklear.h	/^    union nk_property step;$/;"	m	struct:nk_property_variant	typeref:union:nk_property_variant::nk_property
step	thirdparty/stb/include/stb/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon92
stereo	thirdparty/glfw/src/internal.h	/^    GLFWbool    stereo;$/;"	m	struct:_GLFWfbconfig
stick_0	lib/nil/include/nil/data/gamepad.hpp	/^  float stick_0[2];$/;"	m	struct:Nil::Data::Gamepad
stick_1	lib/nil/include/nil/data/gamepad.hpp	/^  float stick_1[2];$/;"	m	struct:Nil::Data::Gamepad
stickyKeys	thirdparty/glfw/src/internal.h	/^    GLFWbool            stickyKeys;$/;"	m	struct:_GLFWwindow
stickyMouseButtons	thirdparty/glfw/src/internal.h	/^    GLFWbool            stickyMouseButtons;$/;"	m	struct:_GLFWwindow
stop	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	void AudioSource::stop()$/;"	f	class:SoLoud::AudioSource
stop	thirdparty/soloud/src/core/soloud_core_basicops.cpp	/^	void Soloud::stop(handle aVoiceHandle)$/;"	f	class:SoLoud::Soloud
stopAll	thirdparty/soloud/src/core/soloud_core_basicops.cpp	/^	void Soloud::stopAll()$/;"	f	class:SoLoud::Soloud
stopAudioSource	thirdparty/soloud/src/core/soloud_core_basicops.cpp	/^	void Soloud::stopAudioSource(AudioSource &aSound)$/;"	f	class:SoLoud::Soloud
stopVoice	thirdparty/soloud/src/core/soloud_core_voiceops.cpp	/^	void Soloud::stopVoice(unsigned int aVoice)$/;"	f	class:SoLoud::Soloud
stopcycle	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^void CPU::stopcycle()$/;"	f	class:CPU
storageImageSampleCounts	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSampleCountFlags    storageImageSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
storeOp	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkAttachmentStoreOp             storeOp;$/;"	m	struct:VkAttachmentDescription
storeregwrite	thirdparty/soloud/src/tools/tedsid2dump/main.cpp	/^void storeregwrite(int reg, int value)$/;"	f
str	lib/lib/include/lib/string.hpp	/^namespace str {$/;"	n	namespace:LIB_NS_NAME
strcpy_s	thirdparty/remotery/src/Remotery.c	/^strcpy_s(char *dest, rsize_t dmax, const char *src)$/;"	f
strcpy_s	thirdparty/remotery/src/Remotery.c	1084;"	d	file:
strdup	thirdparty/glfw/src/win32_platform.h	73;"	d
stream	thirdparty/remotery/include/remotery/Remotery.h	/^    void* stream;$/;"	m	struct:rmt_EndCUDASampleOnScopeExit
stream	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 *stream;$/;"	m	struct:stb_vorbis	file:
stream	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 *stream;$/;"	m	struct:stb_vorbis	file:
stream_end	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 *stream_end;$/;"	m	struct:stb_vorbis	file:
stream_end	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 *stream_end;$/;"	m	struct:stb_vorbis	file:
stream_len	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 stream_len;$/;"	m	struct:stb_vorbis	file:
stream_len	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 stream_len;$/;"	m	struct:stb_vorbis	file:
stream_start	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8 *stream_start;$/;"	m	struct:stb_vorbis	file:
stream_start	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8 *stream_start;$/;"	m	struct:stb_vorbis	file:
strictLines	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32              strictLines;$/;"	m	struct:VkPhysicalDeviceLimits
stride	thirdparty/glfw/src/deps/nuklear.h	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap
stride	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t             stride;$/;"	m	struct:VkVertexInputBindingDescription
stride	thirdparty/stb/include/stb/stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon103
stride_in_bytes	thirdparty/glfw/src/deps/nuklear.h	/^    int   stride_in_bytes;$/;"	m	struct:nk_tt_pack_context
stride_in_bytes	thirdparty/stb/include/stb/stb_truetype.h	/^   int   stride_in_bytes;$/;"	m	struct:stbtt_pack_context
string	lib/lib/include/lib/string.hpp	/^namespace string {$/;"	n	namespace:LIB_NS_NAME
string	thirdparty/glfw/src/deps/nuklear.h	/^    char string[1];$/;"	m	struct:nk_command_text
string	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_str string;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_edit::nk_str
string	thirdparty/json/include/json/json.h	/^  const char *string;$/;"	m	struct:json_string_s
string	thirdparty/json/include/json/json.h	/^  struct json_string_s string;$/;"	m	struct:json_string_ex_s	typeref:struct:json_string_ex_s::json_string_s
string_pool	lib/lib/include/lib/string_pool.hpp	/^namespace string_pool {$/;"	n	namespace:LIB_NS_NAME
string_size	thirdparty/json/include/json/json.h	/^  size_t string_size;$/;"	m	struct:json_string_s
strlcpy	lib/lib/include/lib/string.hpp	/^strlcpy(char *dst, const char *src, size_t siz)$/;"	f
strncat_s	thirdparty/remotery/src/Remotery.c	/^strncat_s (char *dest, rsize_t dmax, const char *src, rsize_t slen)$/;"	f	file:
strncat_s	thirdparty/remotery/src/Remotery.c	1083;"	d	file:
strnlen_s	thirdparty/remotery/src/Remotery.c	/^strnlen_s (const char *dest, rsize_t dmax)$/;"	f	file:
strnlen_s	thirdparty/remotery/src/Remotery.c	1082;"	d	file:
strstr_s	thirdparty/remotery/src/Remotery.c	/^strstr_s (char *dest, rsize_t dmax,$/;"	f	file:
style	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style style;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_style
style_items	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_config_stack_style_item style_items;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_style_item
sub	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^		vec3 sub(vec3 a)$/;"	f	struct:SoLoud::vec3
subPixelInterpolationOffsetBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              subPixelInterpolationOffsetBits;$/;"	m	struct:VkPhysicalDeviceLimits
subPixelPrecisionBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              subPixelPrecisionBits;$/;"	m	struct:VkPhysicalDeviceLimits
subTexelPrecisionBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              subTexelPrecisionBits;$/;"	m	struct:VkPhysicalDeviceLimits
subclass_books	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int16 subclass_books[16][8]; \/\/ varies$/;"	m	struct:__anon205	file:
subclass_books	thirdparty/stb/include/stb/stb_vorbis.c	/^   int16 subclass_books[16][8]; \/\/ varies$/;"	m	struct:__anon118	file:
submap_floor	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8  submap_floor[15]; \/\/ varies$/;"	m	struct:__anon209	file:
submap_floor	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8  submap_floor[15]; \/\/ varies$/;"	m	struct:__anon122	file:
submap_residue	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8  submap_residue[15]; \/\/ varies$/;"	m	struct:__anon209	file:
submap_residue	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8  submap_residue[15]; \/\/ varies$/;"	m	struct:__anon122	file:
submaps	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8  submaps;$/;"	m	struct:__anon209	file:
submaps	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8  submaps;$/;"	m	struct:__anon122	file:
subpass	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                                         subpass;$/;"	m	struct:VkGraphicsPipelineCreateInfo
subpass	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                         subpass;$/;"	m	struct:VkCommandBufferInheritanceInfo
subpassCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                          subpassCount;$/;"	m	struct:VkRenderPassCreateInfo
subresource	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageSubresource         subresource;$/;"	m	struct:VkSparseImageMemoryBind
subresourceRange	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageSubresourceRange    subresourceRange;$/;"	m	struct:VkImageMemoryBarrier
subresourceRange	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageSubresourceRange    subresourceRange;$/;"	m	struct:VkImageViewCreateInfo
subrs	thirdparty/stb/include/stb/stb_truetype.h	/^   stbtt__buf subrs;                  \/\/ private charstring subroutines index$/;"	m	struct:stbtt_fontinfo
subs_str	thirdparty/soloud/src/tools/codegen/main.cpp	/^string subs_str(string &aSrc)$/;"	f
succ_high	thirdparty/stb/include/stb/stb_image.h	/^   int            succ_high;$/;"	m	struct:__anon81
succ_low	thirdparty/stb/include/stb/stb_image.h	/^   int            succ_low;$/;"	m	struct:__anon81
suffix	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anon91
superMask	thirdparty/glfw/src/wl_platform.h	/^        xkb_mod_mask_t          superMask;$/;"	m	struct:_GLFWlibraryWayland::__anon144
support	thirdparty/stb/include/stb/stb_image_resize.h	/^    stbir__support_fn* support;$/;"	m	struct:__anon70
supportedAlpha	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDisplayPlaneAlphaFlagsKHR    supportedAlpha;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
supportedCompositeAlpha	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkCompositeAlphaFlagsKHR         supportedCompositeAlpha;$/;"	m	struct:VkSurfaceCapabilities2EXT
supportedCompositeAlpha	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkCompositeAlphaFlagsKHR         supportedCompositeAlpha;$/;"	m	struct:VkSurfaceCapabilitiesKHR
supportedSurfaceCounters	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSurfaceCounterFlagsEXT         supportedSurfaceCounters;$/;"	m	struct:VkSurfaceCapabilities2EXT
supportedTransforms	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSurfaceTransformFlagsKHR       supportedTransforms;$/;"	m	struct:VkSurfaceCapabilities2EXT
supportedTransforms	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSurfaceTransformFlagsKHR       supportedTransforms;$/;"	m	struct:VkSurfaceCapabilitiesKHR
supportedTransforms	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSurfaceTransformFlagsKHR    supportedTransforms;$/;"	m	struct:VkDisplayPropertiesKHR
supportedUsageFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageUsageFlags                supportedUsageFlags;$/;"	m	struct:VkSurfaceCapabilities2EXT
supportedUsageFlags	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageUsageFlags                supportedUsageFlags;$/;"	m	struct:VkSurfaceCapabilitiesKHR
supportsXInput	thirdparty/glfw/src/win32_joystick.c	/^static GLFWbool supportsXInput(const GUID* guid)$/;"	f	file:
surface	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSurfaceKHR                     surface;$/;"	m	struct:VkSwapchainCreateInfoKHR
surface	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    struct wl_surface*                surface;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR	typeref:struct:VkWaylandSurfaceCreateInfoKHR::wl_surface
surface	thirdparty/glfw/src/egl_context.h	/^   EGLSurface       surface;$/;"	m	struct:_GLFWcontextEGL
surface	thirdparty/glfw/src/wl_platform.h	/^    struct wl_surface*              surface;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR	typeref:struct:VkWaylandSurfaceCreateInfoKHR::wl_surface
surface	thirdparty/glfw/src/wl_platform.h	/^    struct wl_surface*          surface;$/;"	m	struct:_GLFWwindowWayland	typeref:struct:_GLFWwindowWayland::wl_surface
surfaceCounters	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSurfaceCounterFlagsEXT    surfaceCounters;$/;"	m	struct:VkSwapchainCounterCreateInfoEXT
surfaceListener	thirdparty/glfw/src/wl_window.c	/^static const struct wl_surface_listener surfaceListener = {$/;"	v	typeref:struct:wl_surface_listener	file:
suspect_word	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static int suspect_word(const char *s, int n)$/;"	f	file:
swap	thirdparty/catch/include/catch/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	thirdparty/imgui/include/imgui/imgui.h	/^    inline void                 swap(ImVector<T>& rhs)          { int rhs_size = rhs.Size; rhs.Size = Size; Size = rhs_size; int rhs_cap = rhs.Capacity; rhs.Capacity = Capacity; Capacity = rhs_cap; value_type* rhs_data = rhs.Data; rhs.Data = Data; Data = rhs_data; }$/;"	f	class:ImVector
swapBuffers	thirdparty/glfw/src/internal.h	/^    _GLFWswapbuffersfun         swapBuffers;$/;"	m	struct:_GLFWcontext
swapBuffersEGL	thirdparty/glfw/src/egl_context.c	/^static void swapBuffersEGL(_GLFWwindow* window)$/;"	f	file:
swapBuffersGLX	thirdparty/glfw/src/glx_context.c	/^static void swapBuffersGLX(_GLFWwindow* window)$/;"	f	file:
swapBuffersOSMesa	thirdparty/glfw/src/osmesa_context.c	/^static void swapBuffersOSMesa(_GLFWwindow* window)$/;"	f	file:
swapBuffersWGL	thirdparty/glfw/src/wgl_context.c	/^static void swapBuffersWGL(_GLFWwindow* window)$/;"	f	file:
swapInterval	thirdparty/glfw/src/internal.h	/^    _GLFWswapintervalfun        swapInterval;$/;"	m	struct:_GLFWcontext
swapIntervalEGL	thirdparty/glfw/src/egl_context.c	/^static void swapIntervalEGL(int interval)$/;"	f	file:
swapIntervalGLX	thirdparty/glfw/src/glx_context.c	/^static void swapIntervalGLX(int interval)$/;"	f	file:
swapIntervalOSMesa	thirdparty/glfw/src/osmesa_context.c	/^static void swapIntervalOSMesa(int interval)$/;"	f	file:
swapIntervalWGL	thirdparty/glfw/src/wgl_context.c	/^static void swapIntervalWGL(int interval)$/;"	f	file:
swapchainCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                 swapchainCount;$/;"	m	struct:VkPresentInfoKHR
sy	thirdparty/glfw/src/deps/nuklear.h	/^    float sy;$/;"	m	struct:nk_tt__active_edge
sy	thirdparty/stb/include/stb/stb_truetype.h	/^   float sy;$/;"	m	struct:stbtt__active_edge
sym_active	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type sym_active;$/;"	m	struct:nk_style_combo	typeref:enum:nk_style_combo::nk_symbol_type
sym_hover	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type sym_hover;$/;"	m	struct:nk_style_combo	typeref:enum:nk_style_combo::nk_symbol_type
sym_left	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type sym_left;$/;"	m	struct:nk_style_property	typeref:enum:nk_style_property::nk_symbol_type
sym_maximize	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type sym_maximize;$/;"	m	struct:nk_style_tab	typeref:enum:nk_style_tab::nk_symbol_type
sym_minimize	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type sym_minimize;$/;"	m	struct:nk_style_tab	typeref:enum:nk_style_tab::nk_symbol_type
sym_normal	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type sym_normal;$/;"	m	struct:nk_style_combo	typeref:enum:nk_style_combo::nk_symbol_type
sym_right	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_symbol_type sym_right;$/;"	m	struct:nk_style_property	typeref:enum:nk_style_property::nk_symbol_type
symbol_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color symbol_active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
symbol_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color symbol_hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
symbol_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color symbol_normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
sync	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int sync; \/\/ sync modulation flag$/;"	m	class:SIDsound::SIDVoice
sync	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int sync; \/\/ sync modulation flag$/;"	m	class:SIDsound::SIDVoice
synth	thirdparty/soloud/src/audiosource/speech/klatt.cpp	/^int klatt::synth(int aSampleCount, short *aSamplePointer)$/;"	f	class:klatt
szFriendlyName	thirdparty/glfw/src/deps/mingw/dinput.h	/^  CHAR        szFriendlyName[MAX_PATH];$/;"	m	struct:DIFILEEFFECT
szName	thirdparty/remotery/src/Remotery.c	/^       LPCSTR szName; \/\/ Pointer to name (in user addr space).$/;"	m	struct:tagTHREADNAME_INFO	file:
t	thirdparty/catch/include/catch/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t0	thirdparty/glfw/src/deps/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad
t0	thirdparty/stb/include/stb/stb_image_resize.h	/^    float s0, t0, s1, t1;$/;"	m	struct:__anon72
t0	thirdparty/stb/include/stb/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon98
t1	thirdparty/glfw/src/deps/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad
t1	thirdparty/stb/include/stb/stb_image_resize.h	/^    float s0, t0, s1, t1;$/;"	m	struct:__anon72
t1	thirdparty/stb/include/stb/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon98
t1on	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	bool t1on, t2on, t3on;$/;"	m	class:TED
t1start	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int timer1, timer2, timer3, t1start;$/;"	m	class:TED
t2on	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	bool t1on, t2on, t3on;$/;"	m	class:TED
t3on	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	bool t1on, t2on, t3on;$/;"	m	class:TED
tab	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_tab tab;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_tab
tab_maximize_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button tab_maximize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_button
tab_minimize_button	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_button tab_minimize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_button
table_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short table_count;$/;"	m	struct:nk_window
table_size	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short table_size;$/;"	m	struct:nk_window
tables	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_table *tables;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_table
tag	lib/lib/include/lib/memory.hpp	/^namespace tag {$/;"	n	namespace:LIB_NS_NAME::mem
tagCHANGEFILTERSTRUCT	thirdparty/glfw/src/win32_platform.h	/^typedef struct tagCHANGEFILTERSTRUCT$/;"	s
tagName	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint64_t                      tagName;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
tagSize	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    size_t                        tagSize;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
tagTHREADNAME_INFO	thirdparty/remotery/src/Remotery.c	/^    typedef struct tagTHREADNAME_INFO$/;"	s	file:
tags	lib/nil/src/graph/graph_data.hpp	/^  uint64_t tags;$/;"	m	struct:Nil::Graph::node_data
tan	lib/math/include/math/general/general.hpp	/^tan(const float x)$/;"	f
tap	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	TAP	*tap;$/;"	m	class:TED
targetCommandBuffer	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkCommandBuffer                      targetCommandBuffer;$/;"	m	struct:VkCmdProcessCommandsInfoNVX
tau	lib/math/include/math/general/constants.hpp	/^MATH_CONST_CONSTEXPR float           tau()         { return two_pi();        }$/;"	f
tbl	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_table tbl;$/;"	m	union:nk_page_data	typeref:struct:nk_page_data::nk_table
tcp_socket	thirdparty/remotery/src/Remotery.c	/^    TCPSocket* tcp_socket;$/;"	m	struct:__anon63	file:
ted	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^static TED *ted = NULL;$/;"	v	file:
tedPlayChannelEnable	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedPlayChannelEnable(unsigned int channel, bool enable)$/;"	f
tedPlayCloseWav	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedPlayCloseWav()$/;"	f
tedPlayCreateWav	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^bool tedPlayCreateWav(const char *fileName)$/;"	f
tedPlayGetInfo	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedPlayGetInfo(void *file, PsidHeader &hdr)$/;"	f
tedPlayGetSongs	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedPlayGetSongs(unsigned int &current, unsigned int &total)$/;"	f
tedPlayGetState	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^int tedPlayGetState()$/;"	f
tedPlayGetWaveform	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^unsigned int tedPlayGetWaveform(unsigned int channel)$/;"	f
tedPlayIsChannelEnabled	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^bool tedPlayIsChannelEnabled(unsigned int channel)$/;"	f
tedPlayResetCycleCounter	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedPlayResetCycleCounter()$/;"	f
tedPlaySetFilterOrder	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedPlaySetFilterOrder(unsigned int filterOrder)$/;"	f
tedPlaySetSpeed	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedPlaySetSpeed(unsigned int speedPct)$/;"	f
tedPlaySetVolume	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedPlaySetVolume(unsigned int masterVolume)$/;"	f
tedPlaySetWaveform	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedPlaySetWaveform(unsigned int channel, unsigned int wave)$/;"	f
tedPlaySidEnable	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedPlaySidEnable(bool enable, unsigned int disableMask)$/;"	f
ted_process	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::ted_process(unsigned int count)$/;"	f	class:TED
tedplayClose	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedplayClose()$/;"	f
tedplayGetSecondsPlayed	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^unsigned int tedplayGetSecondsPlayed()$/;"	f
tedplayMain	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^int tedplayMain(char *fileName, int model)$/;"	f
tedplayPause	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedplayPause()$/;"	f
tedplayPlay	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedplayPlay()$/;"	f
tedplayStop	thirdparty/soloud/src/tools/tedsid2dump/tedplay.cpp	/^void tedplayStop()$/;"	f
temp_alloc	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	884;"	d	file:
temp_alloc	thirdparty/stb/include/stb/stb_vorbis.c	882;"	d	file:
temp_alloc_restore	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	891;"	d	file:
temp_alloc_restore	thirdparty/stb/include/stb/stb_vorbis.c	889;"	d	file:
temp_alloc_save	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	890;"	d	file:
temp_alloc_save	thirdparty/stb/include/stb/stb_vorbis.c	888;"	d	file:
temp_bitmap	thirdparty/stb/include/stb/stb_truetype.h	/^unsigned char temp_bitmap[512*512];$/;"	v
temp_block_array	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	893;"	d	file:
temp_block_array	thirdparty/stb/include/stb/stb_vorbis.c	891;"	d	file:
temp_free	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	886;"	d	file:
temp_free	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	888;"	d	file:
temp_free	thirdparty/stb/include/stb/stb_vorbis.c	884;"	d	file:
temp_free	thirdparty/stb/include/stb/stb_vorbis.c	886;"	d	file:
temp_memory_required	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   unsigned int temp_memory_required;$/;"	m	struct:__anon202	file:
temp_memory_required	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   unsigned int temp_memory_required;$/;"	m	struct:stb_vorbis	file:
temp_memory_required	thirdparty/stb/include/stb/stb_vorbis.c	/^   unsigned int temp_memory_required;$/;"	m	struct:__anon115	file:
temp_memory_required	thirdparty/stb/include/stb/stb_vorbis.c	/^   unsigned int temp_memory_required;$/;"	m	struct:stb_vorbis	file:
temp_offset	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int temp_offset;$/;"	m	struct:stb_vorbis	file:
temp_offset	thirdparty/stb/include/stb/stb_vorbis.c	/^   int temp_offset;$/;"	m	struct:stb_vorbis	file:
templates	thirdparty/glfw/src/deps/nuklear.h	/^    float templates[NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS];$/;"	m	struct:nk_row_layout
temporary	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_allocator temporary;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_allocator
ten_epsilon	lib/math/include/math/general/constants.hpp	/^MATH_CONST_CONSTEXPR float           ten_epsilon() { return epsilon() * 10.f;}$/;"	f
terminate	thirdparty/glfw/src/init.c	/^static void terminate(void)$/;"	f	file:
tessellationShader	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    tessellationShader;$/;"	m	struct:VkPhysicalDeviceFeatures
test	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		unsigned int test;		\/\/ test flag$/;"	m	class:SIDsound::SIDVoice
test	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		unsigned int test;		\/\/ test flag$/;"	m	class:SIDsound::SIDVoice
test	thirdparty/stb/include/stb/stb_divide.h	/^void test(int a, int b)$/;"	f
testAndLoadFile	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^    result Wav::testAndLoadFile(File *aReader)$/;"	f	class:SoLoud::Wav
testFalse	thirdparty/catch/include/catch/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testh	thirdparty/stb/include/stb/stb_divide.h	/^void testh(int a, int b)$/;"	f
tex	lib/rov/src/ogl/rov_gl.hpp	/^  GLuint tex;$/;"	m	struct:ROV_Internal::rovGLFramebuffer
tex_height	thirdparty/glfw/src/deps/nuklear.h	/^    int tex_height;$/;"	m	struct:nk_font_atlas
tex_width	thirdparty/glfw/src/deps/nuklear.h	/^    int tex_width;$/;"	m	struct:nk_font_atlas
text	lib/nil/include/nil/data/renderable_text.hpp	/^  const char    *text;$/;"	m	struct:Nil::Data::Renderable_text
text	thirdparty/glfw/src/deps/nuklear.h	/^    char text[NK_INPUT_MAX];$/;"	m	struct:nk_keyboard
text	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_color
text	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text;$/;"	m	struct:nk_text	typeref:struct:nk_text::nk_color
text	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_text text;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_text
text	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    unsigned int text[NK_GLFW_TEXT_MAX];$/;"	m	struct:nk_glfw
text	thirdparty/remotery/src/Remotery.c	/^    Buffer* text;$/;"	m	struct:__anon59	file:
text_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
text_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
text_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
text_alignment	thirdparty/glfw/src/deps/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_button
text_alignment	thirdparty/glfw/src/deps/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_selectable
text_alignment	thirdparty/glfw/src/deps/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_toggle
text_background	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
text_background	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_background	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
text_edit	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_text_edit text_edit;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_text_edit
text_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
text_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
text_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_hover	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
text_hover_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_hover_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_len	thirdparty/glfw/src/deps/nuklear.h	/^    int text_len;$/;"	m	struct:nk_keyboard
text_len	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    int text_len;$/;"	m	struct:nk_glfw
text_map	thirdparty/remotery/src/Remotery.c	/^    rmtHashTable* text_map;$/;"	m	struct:__anon59	file:
text_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
text_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
text_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_normal	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
text_normal_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_normal_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_pressed	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_pressed;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_pressed_active	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color text_pressed_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_uri_list	thirdparty/glfw/src/x11_platform.h	/^    Atom            text_uri_list;$/;"	m	struct:_GLFWlibraryX11
texttoscreen	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^void TED::texttoscreen(int x,int y, const char *scrtxt)$/;"	f	class:TED
texture	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_draw_command
texture	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_font
texture	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_user_font
texture	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle texture;\/* texture handle to a texture with a white pixel *\/$/;"	m	struct:nk_draw_null_texture
textureCompressionASTC_LDR	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    textureCompressionASTC_LDR;$/;"	m	struct:VkPhysicalDeviceFeatures
textureCompressionBC	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    textureCompressionBC;$/;"	m	struct:VkPhysicalDeviceFeatures
textureCompressionETC2	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    textureCompressionETC2;$/;"	m	struct:VkPhysicalDeviceFeatures
texture_01	lib/nil/include/nil/resource/material.hpp	/^  uint32_t        texture_01;$/;"	m	struct:Nil_material
texture_02	lib/nil/include/nil/resource/material.hpp	/^  uint32_t        texture_02;$/;"	m	struct:Nil_material
texture_03	lib/nil/include/nil/resource/material.hpp	/^  uint32_t        texture_03;$/;"	m	struct:Nil_material
texture_coords_vec2	lib/nil/include/nil/resource/mesh.hpp	/^  float       *texture_coords_vec2; \/\/ Internally copied$/;"	m	struct:Nil_mesh
texture_id	lib/nil/include/nil/resource/font.hpp	/^  uint32_t      texture_id;$/;"	m	struct:Nil_font
textures	lib/nil/src/internal_data/resources/texture_data.hpp	/^  lib::array<Nil_texture, 128> textures;$/;"	m	struct:Nil_texture_data
think	lib/nil/src/graph/graph.cpp	/^think(Data *graph)$/;"	f	namespace:Nil::Graph
think	lib/nil_aspects/src/imgui/imgui_aspect.cpp	/^think(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ImGui_Aspect
think	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^think(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
think	lib/nil_aspects/src/so_loud.cpp	/^think(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::SoLoud_Aspect
think_task_count	lib/nil/src/internal_data/internal_data.hpp	/^  size_t                think_task_count;$/;"	m	struct:Nil_ctx
think_tasks	lib/nil/src/internal_data/internal_data.hpp	/^  Nil_cpu_task          think_tasks[NIL_MAX_CPU_TASK_QUEUE];$/;"	m	struct:Nil_ctx
third8	lib/lib/include/lib/bits.hpp	/^third8(const uint32_t i)$/;"	f	namespace:LIB_NS_NAME::bits
thrd_busy	thirdparty/glfw/src/deps/tinycthread.h	174;"	d
thrd_create	thirdparty/glfw/src/deps/tinycthread.c	/^int thrd_create(thrd_t *thr, thrd_start_t func, void *arg)$/;"	f
thrd_current	thirdparty/glfw/src/deps/tinycthread.c	/^thrd_t thrd_current(void)$/;"	f
thrd_detach	thirdparty/glfw/src/deps/tinycthread.c	/^int thrd_detach(thrd_t thr)$/;"	f
thrd_equal	thirdparty/glfw/src/deps/tinycthread.c	/^int thrd_equal(thrd_t thr0, thrd_t thr1)$/;"	f
thrd_error	thirdparty/glfw/src/deps/tinycthread.h	171;"	d
thrd_exit	thirdparty/glfw/src/deps/tinycthread.c	/^void thrd_exit(int res)$/;"	f
thrd_join	thirdparty/glfw/src/deps/tinycthread.c	/^int thrd_join(thrd_t thr, int *res)$/;"	f
thrd_nomem	thirdparty/glfw/src/deps/tinycthread.h	175;"	d
thrd_sleep	thirdparty/glfw/src/deps/tinycthread.c	/^int thrd_sleep(const struct timespec *time_point, struct timespec *remaining)$/;"	f
thrd_start_t	thirdparty/glfw/src/deps/tinycthread.h	/^typedef int (*thrd_start_t)(void *arg);$/;"	t
thrd_success	thirdparty/glfw/src/deps/tinycthread.h	172;"	d
thrd_t	thirdparty/glfw/src/deps/tinycthread.h	/^typedef HANDLE thrd_t;$/;"	t
thrd_t	thirdparty/glfw/src/deps/tinycthread.h	/^typedef pthread_t thrd_t;$/;"	t
thrd_timeout	thirdparty/glfw/src/deps/tinycthread.h	173;"	d
thrd_yield	thirdparty/glfw/src/deps/tinycthread.c	/^void thrd_yield(void)$/;"	f
thread	thirdparty/remotery/src/Remotery.c	/^    rmtThread* thread;$/;"	m	struct:Remotery	file:
thread	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^        Thread::ThreadHandle thread;$/;"	m	struct:SoLoud::WASAPIData	file:
thread	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        Thread::ThreadHandle thread;$/;"	m	struct:SoLoud::XAudio2Data	file:
thread	thirdparty/soloud/src/core/soloud_thread.cpp	/^            HANDLE thread;$/;"	m	struct:SoLoud::Thread::ThreadHandleData	file:
threadFunction	thirdparty/soloud/include/soloud/soloud_thread.h	/^		typedef void (*threadFunction)(void *aParam);$/;"	t	namespace:SoLoud::Thread
threadHandle	thirdparty/soloud/src/backend/alsa/soloud_alsa.cpp	/^        Thread::ThreadHandle threadHandle;$/;"	m	struct:SoLoud::ALSAData	file:
threadHandle	thirdparty/soloud/src/backend/oss/soloud_oss.cpp	/^        Thread::ThreadHandle threadHandle;$/;"	m	struct:SoLoud::OSSData	file:
threadHandle	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^        Thread::ThreadHandle threadHandle;$/;"	m	struct:SoLoud::SoLoudWinMMData	file:
thread_name	thirdparty/remotery/src/Remotery.c	/^    rmtPStr thread_name;$/;"	m	struct:Msg_SampleTree	file:
thread_sampler	thirdparty/remotery/src/Remotery.c	/^    struct ThreadSampler* thread_sampler;$/;"	m	struct:Message	typeref:struct:Message::ThreadSampler	file:
thread_sampler_tls_handle	thirdparty/remotery/src/Remotery.c	/^    rmtTLS thread_sampler_tls_handle;$/;"	m	struct:Remotery	file:
threadfunc	thirdparty/soloud/src/core/soloud_thread.cpp	/^		static DWORD WINAPI threadfunc(LPVOID d)$/;"	f	namespace:SoLoud::Thread
tick	lib/nil/include/nil/aspect.hpp	/^  Nil_aspect_callback_fn      tick;$/;"	m	struct:Nil_aspect
tick	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	void TedSidInstance::tick()$/;"	f	class:SoLoud::TedSidInstance
tick_cb	lib/nil/src/graph/graph_data.hpp	/^    graph_tick_fn           tick_cb;$/;"	m	struct:Nil::Graph::Data::graph_type
tid	thirdparty/soloud/src/backend/vita_homebrew/soloud_vita_homebrew.cpp	/^		int tid;$/;"	m	struct:SoLoud::VitaData	file:
tiling	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageTiling            tiling;$/;"	m	struct:VkImageCreateInfo
tiling	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageTiling            tiling;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2KHR
tiling	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageTiling         tiling;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2KHR
time	app/perils/src/game/dynamic_object.hpp	/^  lib::milliseconds time = 0.f;$/;"	m	struct:Dynamic_object::Data
time	thirdparty/soloud/include/soloud/soloud.h	/^	typedef double time;$/;"	t	namespace:SoLoud
timeGetTime	thirdparty/glfw/src/win32_platform.h	162;"	d
timeout	thirdparty/glfw/src/x11_platform.h	/^        int         timeout;$/;"	m	struct:_GLFWlibraryX11::__anon147
timer	lib/lib/include/lib/timer.hpp	/^namespace timer {$/;"	n	namespace:LIB_NS_NAME
timer	thirdparty/glfw/src/internal.h	/^    } timer;$/;"	m	struct:_GLFWlibrary	typeref:struct:_GLFWlibrary::__anon164
timer	thirdparty/remotery/src/Remotery.c	/^    usTimer timer;$/;"	m	struct:Remotery	file:
timer1	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int timer1, timer2, timer3, t1start;$/;"	m	class:TED
timer2	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int timer1, timer2, timer3, t1start;$/;"	m	class:TED
timer3	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int timer1, timer2, timer3, t1start;$/;"	m	class:TED
timespec	thirdparty/glfw/src/deps/tinycthread.h	116;"	d
timestamp	thirdparty/remotery/src/Remotery.c	/^    D3D11Timestamp* timestamp;$/;"	m	struct:D3D11Sample	file:
timestamp	thirdparty/remotery/src/Remotery.c	/^    MetalTimestamp* timestamp;$/;"	m	struct:MetalSample	file:
timestamp	thirdparty/remotery/src/Remotery.c	/^    OpenGLTimestamp* timestamp;$/;"	m	struct:OpenGLSample	file:
timestampComputeAndGraphics	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32              timestampComputeAndGraphics;$/;"	m	struct:VkPhysicalDeviceLimits
timestampPeriod	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                 timestampPeriod;$/;"	m	struct:VkPhysicalDeviceLimits
timestampValidBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t        timestampValidBits;$/;"	m	struct:VkQueueFamilyProperties
tinydir_close	thirdparty/tinydir/include/tinydir/tinydir.h	/^void tinydir_close(tinydir_dir *dir)$/;"	f
tinydir_dir	thirdparty/tinydir/include/tinydir/tinydir.h	/^typedef struct tinydir_dir$/;"	s
tinydir_dir	thirdparty/tinydir/include/tinydir/tinydir.h	/^} tinydir_dir;$/;"	t	typeref:struct:tinydir_dir
tinydir_file	thirdparty/tinydir/include/tinydir/tinydir.h	/^typedef struct tinydir_file$/;"	s
tinydir_file	thirdparty/tinydir/include/tinydir/tinydir.h	/^} tinydir_file;$/;"	t	typeref:struct:tinydir_file
tinydir_file_open	thirdparty/tinydir/include/tinydir/tinydir.h	/^int tinydir_file_open(tinydir_file *file, const _tinydir_char_t *path)$/;"	f
tinydir_next	thirdparty/tinydir/include/tinydir/tinydir.h	/^int tinydir_next(tinydir_dir *dir)$/;"	f
tinydir_open	thirdparty/tinydir/include/tinydir/tinydir.h	/^int tinydir_open(tinydir_dir *dir, const _tinydir_char_t *path)$/;"	f
tinydir_open_sorted	thirdparty/tinydir/include/tinydir/tinydir.h	/^int tinydir_open_sorted(tinydir_dir *dir, const _tinydir_char_t *path)$/;"	f
tinydir_open_subdir_n	thirdparty/tinydir/include/tinydir/tinydir.h	/^int tinydir_open_subdir_n(tinydir_dir *dir, size_t i)$/;"	f
tinydir_readfile	thirdparty/tinydir/include/tinydir/tinydir.h	/^int tinydir_readfile(const tinydir_dir *dir, tinydir_file *file)$/;"	f
tinydir_readfile_n	thirdparty/tinydir/include/tinydir/tinydir.h	/^int tinydir_readfile_n(const tinydir_dir *dir, tinydir_file *file, size_t i)$/;"	f
tis	thirdparty/glfw/src/cocoa_platform.h	/^    } tis;$/;"	m	struct:_GLFWlibraryNS	typeref:struct:_GLFWlibraryNS::__anon142
title	lib/nil/include/nil/data/window.hpp	/^  char      title[32];$/;"	m	struct:Nil::Data::Window
title	thirdparty/glfw/src/internal.h	/^    const char*   title;$/;"	m	struct:_GLFWwndconfig
title	thirdparty/glfw/src/wl_platform.h	/^    char*                       title;$/;"	m	struct:_GLFWwindowWayland
title	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	char title[512];$/;"	m	struct:PsidHeader
tlsAlloc	thirdparty/remotery/src/Remotery.c	/^static rmtError tlsAlloc(rmtTLS* handle)$/;"	f	file:
tlsFree	thirdparty/remotery/src/Remotery.c	/^static void tlsFree(rmtTLS handle)$/;"	f	file:
tlsGet	thirdparty/remotery/src/Remotery.c	/^static void* tlsGet(rmtTLS handle)$/;"	f	file:
tlsSet	thirdparty/remotery/src/Remotery.c	/^static void tlsSet(rmtTLS handle, void* value)$/;"	f	file:
tmp	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static int				x,tmp;$/;"	v	file:
tmpClrbuf	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned char *chrbuf, *clrbuf, *tmpClrbuf;$/;"	m	class:TED
toGLFWKeyCode	thirdparty/glfw/src/mir_window.c	/^static int toGLFWKeyCode(uint32_t key)$/;"	f	file:
toGLFWKeyCode	thirdparty/glfw/src/wl_init.c	/^static int toGLFWKeyCode(uint32_t key)$/;"	f	file:
toString	thirdparty/catch/include/catch/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	thirdparty/catch/include/catch/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	thirdparty/catch/include/catch/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	thirdparty/catch/include/catch/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	thirdparty/catch/include/catch/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	thirdparty/catch/include/catch/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	thirdparty/catch/include/catch/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toStringSuffix	thirdparty/catch/include/catch/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
to_degrees	lib/math/include/math/general/general.hpp	/^to_degrees(const float radians)$/;"	f
to_float	lib/lib/include/lib/color.hpp	/^to_float(const uint8_t c) {$/;"	f	namespace:LIB_NS_NAME::color::detail
to_float	lib/math/include/math/general/general.hpp	/^to_float(const int32_t x)$/;"	f
to_float	lib/math/include/math/general/general.hpp	/^to_float(const uint32_t x)$/;"	f
to_int	lib/math/include/math/general/general.hpp	/^to_int(const float x)$/;"	f
to_int_ptr	lib/lib/include/lib/entity.hpp	/^to_int_ptr(const uint32_t ent)$/;"	f	namespace:LIB_NS_NAME::entity
to_radians	lib/math/include/math/general/general.hpp	/^to_radians(const float degrees)$/;"	f
to_seconds	lib/lib/include/lib/timer.hpp	/^to_seconds(const ::LIB_NS_NAME::milliseconds &milli) {$/;"	f	namespace:LIB_NS_NAME::timer
to_string	lib/math/include/math/to_string.hpp	/^to_string(const mat3 &mat, char out_buffer[64])$/;"	f
to_string	lib/math/include/math/to_string.hpp	/^to_string(const mat4 &mat, char out_buffer[64])$/;"	f
to_string	lib/math/include/math/to_string.hpp	/^to_string(const quat &str, char out_buffer[32])$/;"	f
to_string	lib/math/include/math/to_string.hpp	/^to_string(const transform &str, char out_buffer[128])$/;"	f
to_string	lib/math/include/math/to_string.hpp	/^to_string(const vec3 &str, char out_buffer[32])$/;"	f
to_string	lib/math/include/math/to_string.hpp	/^to_string(const vec4 &str, char out_buffer[32])$/;"	f
to_uint	lib/math/include/math/general/general.hpp	/^to_uint(const float x)$/;"	f
to_uint8	lib/lib/include/lib/color.hpp	/^uint8_t to_uint8(const float c) {$/;"	f	namespace:LIB_NS_NAME::color::detail
to_void_ptr	lib/lib/include/lib/entity.hpp	/^to_void_ptr(const uint32_t ent)$/;"	f	namespace:LIB_NS_NAME::entity
todo	thirdparty/stb/include/stb/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon81
token	thirdparty/soloud/src/tools/codegen/main.cpp	/^string token(char * buf, int &ofs)$/;"	f
tokenCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                                   tokenCount;$/;"	m	struct:VkIndirectCommandsLayoutCreateInfoNVX
tokenType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkIndirectCommandsTokenTypeNVX    tokenType;$/;"	m	struct:VkIndirectCommandsLayoutTokenNVX
tokenType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkIndirectCommandsTokenTypeNVX    tokenType;$/;"	m	struct:VkIndirectCommandsTokenNVX
tooltip_border	thirdparty/glfw/src/deps/nuklear.h	/^    float tooltip_border;$/;"	m	struct:nk_style_window
tooltip_border_color	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color tooltip_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
tooltip_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 tooltip_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
top	lib/lib/include/lib/array.hpp	/^  T& top() { return *(m_end - 1); }$/;"	f	class:LIB_NS_NAME::array
top	lib/lib/include/lib/array.hpp	/^  const T& top() const { return *(m_end - 1); }$/;"	f	class:LIB_NS_NAME::array
top	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_color top;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_color
topology	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkPrimitiveTopology                        topology;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo
total_height	thirdparty/glfw/src/deps/nuklear.h	/^    int total_height;$/;"	m	struct:nk_list_view
total_samples	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint32 total_samples;$/;"	m	struct:stb_vorbis	file:
total_samples	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint32 total_samples;$/;"	m	struct:stb_vorbis	file:
touch_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_vec2
touch_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_vec2
touch_padding	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_vec2
tq	thirdparty/stb/include/stb/stb_image.h	/^      int tq;$/;"	m	struct:__anon81::__anon82
tracks	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	unsigned int tracks;$/;"	m	struct:PsidHeader
transform	lib/math/include/math/transform/transform_types.hpp	/^struct transform$/;"	s
transform	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkSurfaceTransformFlagBitsKHR     transform;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
transform_fwd	lib/math/include/math/transform/transform.hpp	/^transform_fwd(const transform &trans)$/;"	f
transform_inherited	lib/math/include/math/transform/transform.hpp	/^transform_inherited(const transform &parent, const transform &child)$/;"	f
transform_init	lib/math/include/math/transform/transform.hpp	/^transform_init()$/;"	f
transform_init	lib/math/include/math/transform/transform.hpp	/^transform_init(const vec3 position, const vec3 scale, const quat &rotation)$/;"	f
transform_left	lib/math/include/math/transform/transform.hpp	/^transform_left(const transform &trans)$/;"	f
transform_lookat_matrix	lib/math/include/math/transform/transform.hpp	/^transform_lookat_matrix(const transform &to_view)$/;"	f
transform_name	lib/nil/src/interface/data/transform.cpp	/^constexpr char transform_name[] = "Transform";$/;"	m	namespace:__anon34	file:
transform_up	lib/math/include/math/transform/transform.hpp	/^transform_up(const transform &trans)$/;"	f
transform_world_fwd	lib/math/include/math/transform/transform.hpp	/^transform_world_fwd()$/;"	f
transform_world_left	lib/math/include/math/transform/transform.hpp	/^transform_world_left()$/;"	f
transform_world_matrix	lib/math/include/math/transform/transform.hpp	/^transform_world_matrix(const transform &to_world)$/;"	f
transform_world_up	lib/math/include/math/transform/transform.hpp	/^transform_world_up()$/;"	f
transformtype	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint16 transformtype;$/;"	m	struct:__anon210	file:
transformtype	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint16 transformtype;$/;"	m	struct:__anon123	file:
translateCursorShape	thirdparty/glfw/src/win32_window.c	/^static LPWSTR translateCursorShape(int shape)$/;"	f	file:
translateCursorShape	thirdparty/glfw/src/wl_window.c	/^static char *translateCursorShape(int shape)$/;"	f	file:
translateCursorShape	thirdparty/glfw/src/x11_window.c	/^static int translateCursorShape(int shape)$/;"	f	file:
translateKey	thirdparty/glfw/src/win32_window.c	/^static int translateKey(WPARAM wParam, LPARAM lParam)$/;"	f	file:
translateKey	thirdparty/glfw/src/x11_window.c	/^static int translateKey(int scancode)$/;"	f	file:
translateKeyCode	thirdparty/glfw/src/x11_init.c	/^static int translateKeyCode(int scancode)$/;"	f	file:
translateState	thirdparty/glfw/src/x11_window.c	/^static int translateState(int state)$/;"	f	file:
translationInfoIndex	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const int translationInfoIndex[] = { 0,0,0, 1,0,0, 2,0,0, 0,1,0, 1,2,0, 0,2,1, 0,1,2 };$/;"	m	namespace:ImGuizmo	file:
translationInfoMask	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const char *translationInfoMask[] = { "X : %5.3f", "Y : %5.3f", "Z : %5.3f", "X : %5.3f Y : %5.3f", "Y : %5.3f Z : %5.3f", "X : %5.3f Z : %5.3f", "X : %5.3f Y : %5.3f Z : %5.3f" };$/;"	m	namespace:ImGuizmo	file:
translationLineColor	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static const ImU32 translationLineColor = 0xAAAAAAAA;$/;"	m	namespace:ImGuizmo	file:
transparent	thirdparty/stb/include/stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon92
tree_depth	thirdparty/glfw/src/deps/nuklear.h	/^    int tree_depth;$/;"	m	struct:nk_row_layout
triangle_count	lib/lib/include/lib/model.hpp	/^  uint32_t   *triangle_count;$/;"	m	struct:LIB_NS_NAME::model
triangle_count	lib/nil/include/nil/resource/mesh.hpp	/^  size_t      triangle_count;$/;"	m	struct:Nil_mesh
trig	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^  float *trig;$/;"	m	struct:__anon215	file:
trig	thirdparty/stb/include/stb/stb_vorbis.c	/^  float *trig;$/;"	m	struct:__anon128	file:
triggers	lib/nil/include/nil/data/gamepad.hpp	/^  float triggers[4];$/;"	m	struct:Nil::Data::Gamepad
trimVoiceGroup	thirdparty/soloud/src/core/soloud_core_voicegroup.cpp	/^	void Soloud::trimVoiceGroup(handle aVoiceGroupHandle)$/;"	f	class:SoLoud::Soloud
trim_blanks	thirdparty/imgui/include/imgui/imgui.h	/^        void trim_blanks() { while (b < e && is_blank(*b)) b++; while (e > b && is_blank(*(e-1))) e--; }$/;"	f	struct:ImGuiTextFilter::TextRange
trueValue	thirdparty/catch/include/catch/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
tss_create	thirdparty/glfw/src/deps/tinycthread.c	/^int tss_create(tss_t *key, tss_dtor_t dtor)$/;"	f
tss_delete	thirdparty/glfw/src/deps/tinycthread.c	/^void tss_delete(tss_t key)$/;"	f
tss_dtor_t	thirdparty/glfw/src/deps/tinycthread.h	/^typedef void (*tss_dtor_t)(void *val);$/;"	t
tss_get	thirdparty/glfw/src/deps/tinycthread.c	/^void *tss_get(tss_t key)$/;"	f
tss_set	thirdparty/glfw/src/deps/tinycthread.c	/^int tss_set(tss_t key, void *val)$/;"	f
tss_t	thirdparty/glfw/src/deps/tinycthread.h	/^typedef DWORD tss_t;$/;"	t
tss_t	thirdparty/glfw/src/deps/tinycthread.h	/^typedef pthread_key_t tss_t;$/;"	t
tszActionMap	thirdparty/glfw/src/deps/mingw/dinput.h	/^	CHAR		tszActionMap[MAX_PATH];$/;"	m	struct:_DIACTIONFORMATA
tszActionMap	thirdparty/glfw/src/deps/mingw/dinput.h	/^	WCHAR		tszActionMap[MAX_PATH];$/;"	m	struct:_DIACTIONFORMATW
tszImagePath	thirdparty/glfw/src/deps/mingw/dinput.h	/^	CHAR	tszImagePath[MAX_PATH];$/;"	m	struct:_DIDEVICEIMAGEINFOA
tszImagePath	thirdparty/glfw/src/deps/mingw/dinput.h	/^	WCHAR	tszImagePath[MAX_PATH];$/;"	m	struct:_DIDEVICEIMAGEINFOW
tszInstanceName	thirdparty/glfw/src/deps/mingw/dinput.h	/^    CHAR	tszInstanceName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCEA
tszInstanceName	thirdparty/glfw/src/deps/mingw/dinput.h	/^    CHAR    tszInstanceName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCE_DX3A
tszInstanceName	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WCHAR	tszInstanceName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCEW
tszInstanceName	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WCHAR   tszInstanceName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCE_DX3W
tszName	thirdparty/glfw/src/deps/mingw/dinput.h	/^	CHAR			tszName[MAX_PATH];$/;"	m	struct:DIEFFECTINFOA
tszName	thirdparty/glfw/src/deps/mingw/dinput.h	/^	WCHAR			tszName[MAX_PATH];$/;"	m	struct:DIEFFECTINFOW
tszName	thirdparty/glfw/src/deps/mingw/dinput.h	/^    CHAR	tszName[MAX_PATH];$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
tszName	thirdparty/glfw/src/deps/mingw/dinput.h	/^    CHAR    tszName[MAX_PATH];$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3A
tszName	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WCHAR	tszName[MAX_PATH];$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
tszName	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WCHAR   tszName[MAX_PATH];$/;"	m	struct:DIDEVICEOBJECTINSTANCE_DX3W
tszProductName	thirdparty/glfw/src/deps/mingw/dinput.h	/^    CHAR	tszProductName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCEA
tszProductName	thirdparty/glfw/src/deps/mingw/dinput.h	/^    CHAR    tszProductName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCE_DX3A
tszProductName	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WCHAR	tszProductName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCEW
tszProductName	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WCHAR   tszProductName[MAX_PATH];$/;"	m	struct:DIDEVICEINSTANCE_DX3W
ttBYTE	thirdparty/stb/include/stb/stb_truetype.h	1221;"	d
ttCHAR	thirdparty/stb/include/stb/stb_truetype.h	1222;"	d
ttFixed	thirdparty/stb/include/stb/stb_truetype.h	1223;"	d
ttLONG	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt_int32 ttLONG(stbtt_uint8 *p)    { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]; }$/;"	f
ttSHORT	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt_int16 ttSHORT(stbtt_uint8 *p)   { return p[0]*256 + p[1]; }$/;"	f
ttULONG	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt_uint32 ttULONG(stbtt_uint8 *p)  { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]; }$/;"	f
ttUSHORT	thirdparty/stb/include/stb/stb_truetype.h	/^static stbtt_uint16 ttUSHORT(stbtt_uint8 *p) { return p[0]*256 + p[1]; }$/;"	f
ttf_blob	thirdparty/glfw/src/deps/nuklear.h	/^    void *ttf_blob;$/;"	m	struct:nk_font_config
ttf_buffer	thirdparty/stb/include/stb/stb_truetype.h	/^char ttf_buffer[1<<25];$/;"	v
ttf_buffer	thirdparty/stb/include/stb/stb_truetype.h	/^unsigned char ttf_buffer[1<<20];$/;"	v
ttf_data_owned_by_atlas	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char ttf_data_owned_by_atlas;$/;"	m	struct:nk_font_config
ttf_size	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size ttf_size;$/;"	m	struct:nk_font_config
tv_nsec	thirdparty/glfw/src/deps/tinycthread.h	/^  long   tv_nsec;$/;"	m	struct:_ttherad_timespec
tv_sec	thirdparty/glfw/src/deps/tinycthread.h	/^  time_t tv_sec;$/;"	m	struct:_ttherad_timespec
two_pi	lib/math/include/math/general/constants.hpp	/^MATH_CONST_CONSTEXPR float           two_pi()      { return 2.f * pi();      }$/;"	f
type	lib/lib/include/lib/entity.hpp	/^type(const uint32_t entity)$/;"	f	namespace:LIB_NS_NAME::entity
type	lib/nil/include/nil/data/camera.hpp	/^  enum { PERSPECTIVE, ORTHOGRAPHIC } type;$/;"	m	struct:Nil::Data::Camera	typeref:enum:Nil::Data::Camera::__anon13
type	lib/nil/include/nil/data/light.hpp	/^  enum { POINT, DIR, SPOT } type;$/;"	m	struct:Nil::Data::Light	typeref:enum:Nil::Data::Light::__anon9
type	lib/nil/include/nil/data/logic.hpp	/^  uint32_t      type;$/;"	m	struct:Nil::Data::Logic
type	lib/nil/include/nil/data/window.hpp	/^  enum { NONE, OGL }  type;$/;"	m	struct:Nil::Data::Window	typeref:enum:Nil::Data::Window::__anon12
type	lib/nil/include/nil/resource/shader.hpp	/^  Nil_shader_type     type;$/;"	m	struct:Nil_shader
type	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_allocation_type type;$/;"	m	struct:nk_buffer	typeref:enum:nk_buffer::nk_allocation_type
type	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_allocation_type type;$/;"	m	struct:nk_pool	typeref:enum:nk_pool::nk_allocation_type
type	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_chart_type type;$/;"	m	struct:nk_chart_slot	typeref:enum:nk_chart_slot::nk_chart_type
type	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_command_type type;$/;"	m	struct:nk_command	typeref:enum:nk_command::nk_command_type
type	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_panel_row_layout_type type;$/;"	m	struct:nk_row_layout	typeref:enum:nk_row_layout::nk_panel_row_layout_type
type	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_panel_type type;$/;"	m	struct:nk_panel	typeref:enum:nk_panel::nk_panel_type
type	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_panel_type type;$/;"	m	struct:nk_popup_state	typeref:enum:nk_popup_state::nk_panel_type
type	thirdparty/glfw/src/deps/nuklear.h	/^    enum nk_style_item_type type;$/;"	m	struct:nk_style_item	typeref:enum:nk_style_item::nk_style_item_type
type	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char type,padding;$/;"	m	struct:nk_tt_vertex
type	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int type;$/;"	m	struct:nk_memory_status
type	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkDescriptorType    type;$/;"	m	struct:VkDescriptorPoolSize
type	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageType              type;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2KHR
type	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageType           type;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2KHR
type	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectEntryTypeNVX          type;$/;"	m	struct:VkObjectTableDescriptorSetEntryNVX
type	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectEntryTypeNVX          type;$/;"	m	struct:VkObjectTableEntryNVX
type	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectEntryTypeNVX          type;$/;"	m	struct:VkObjectTableIndexBufferEntryNVX
type	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectEntryTypeNVX          type;$/;"	m	struct:VkObjectTablePipelineEntryNVX
type	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectEntryTypeNVX          type;$/;"	m	struct:VkObjectTablePushConstantEntryNVX
type	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkObjectEntryTypeNVX          type;$/;"	m	struct:VkObjectTableVertexBufferEntryNVX
type	thirdparty/glfw/src/win32_joystick.h	/^    int                     type;$/;"	m	struct:_GLFWjoyobjectWin32
type	thirdparty/json/include/json/json.h	/^  size_t type;$/;"	m	struct:json_value_s
type	thirdparty/remotery/src/Remotery.c	/^    enum SampleType type;$/;"	m	struct:Sample	typeref:enum:Sample::SampleType	file:
type	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^  unsigned int  type;$/;"	m	struct:INSTR
type	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	unsigned int type;$/;"	m	struct:PsidHeader
type	thirdparty/stb/include/stb/stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anon86
type	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon90
type	thirdparty/stb/include/stb/stb_image_resize.h	/^    stbir_datatype type;$/;"	m	struct:__anon72
type	thirdparty/stb/include/stb/stb_truetype.h	/^      unsigned char type,padding;$/;"	m	struct:__anon102
typeName	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	std::string typeName;$/;"	m	struct:PsidHeader
type_id	lib/nil/include/nil/data/developer.hpp	/^  uint32_t type_id;$/;"	m	struct:Nil::Data::Developer
type_id	lib/nil/src/graph/graph_data.hpp	/^    uint64_t                type_id;$/;"	m	struct:Nil::Graph::Data::graph_type
type_id	lib/nil/src/interface/data/bounding_box.cpp	/^  uint64_t type_id;$/;"	m	struct:__anon33::Bounding_box_data	file:
type_id	lib/nil/src/interface/data/common.hpp	/^  uint64_t              type_id;$/;"	m	struct:Nil::Data::Generic_data
type_id	lib/nil/src/interface/data/transform.cpp	/^  uint64_t type_id;$/;"	m	struct:__anon34::Transform_data	file:
typeface_name	lib/nil/include/nil/resource/font.hpp	/^  const char    *typeface_name;$/;"	m	struct:Nil_font
typlen	thirdparty/soloud/src/tools/tedsid2dump/cpu7501asm.h	/^const int typlen[13]={0,1,2,3,3,2,2,2,3,3,2,2,2};$/;"	v
u	thirdparty/stb/include/stb/stb_image_resize.h	/^    stbir_uint32 u;$/;"	m	union:__anon73
u0	thirdparty/glfw/src/deps/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph
u1	thirdparty/glfw/src/deps/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph
uAppData	thirdparty/glfw/src/deps/mingw/dinput.h	/^	UINT_PTR	uAppData;$/;"	m	struct:_DIACTIONA
uAppData	thirdparty/glfw/src/deps/mingw/dinput.h	/^	UINT_PTR	uAppData;$/;"	m	struct:_DIACTIONW
uAppData	thirdparty/glfw/src/deps/mingw/dinput.h	/^    UINT_PTR	uAppData;$/;"	m	struct:DIDEVICEOBJECTDATA
uData	thirdparty/glfw/src/deps/mingw/dinput.h	/^	UINT_PTR     uData;$/;"	m	struct:DIPROPPOINTER
uResIdString	thirdparty/glfw/src/deps/mingw/dinput.h	/^		UINT	uResIdString;$/;"	m	union:_DIACTIONA::__anon180
uResIdString	thirdparty/glfw/src/deps/mingw/dinput.h	/^		UINT	uResIdString;$/;"	m	union:_DIACTIONW::__anon181
ucs	thirdparty/glfw/src/xkb_unicode.c	/^  unsigned short ucs;$/;"	m	struct:codepair	file:
ui_menu	lib/nil/include/nil/aspect.hpp	/^  Nil_aspect_callback_fn      ui_menu;$/;"	m	struct:Nil_aspect
ui_menu	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^ui_menu(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
ui_menu	lib/nil_aspects/src/so_loud.cpp	/^ui_menu(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::SoLoud_Aspect
ui_window	lib/nil/include/nil/aspect.hpp	/^  Nil_aspect_callback_fn      ui_window;$/;"	m	struct:Nil_aspect
ui_window	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^ui_window(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
ui_window	lib/nil_aspects/src/so_loud.cpp	/^ui_window(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::SoLoud_Aspect
uint16	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^typedef unsigned short uint16;$/;"	t	file:
uint16	thirdparty/stb/include/stb/stb_vorbis.c	/^typedef unsigned short uint16;$/;"	t	file:
uint16_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef unsigned __int16  uint16_t;$/;"	t
uint16_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef unsigned short    uint16_t;$/;"	t
uint16_t	thirdparty/glfw/src/deps/vulkan/vk_platform.h	/^        typedef unsigned __int16 uint16_t;$/;"	t
uint32	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    uint32[4];$/;"	m	union:VkClearColorValue
uint32	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^typedef unsigned int   uint32;$/;"	t	file:
uint32	thirdparty/stb/include/stb/stb_vorbis.c	/^typedef unsigned int   uint32;$/;"	t	file:
uint32_compare	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int STBV_CDECL uint32_compare(const void *p, const void *q)$/;"	f	file:
uint32_compare	thirdparty/stb/include/stb/stb_vorbis.c	/^static int STBV_CDECL uint32_compare(const void *p, const void *q)$/;"	f	file:
uint32_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef unsigned __int32  uint32_t;$/;"	t
uint32_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef unsigned int      uint32_t;$/;"	t
uint32_t	thirdparty/glfw/src/deps/vulkan/vk_platform.h	/^        typedef unsigned __int32 uint32_t;$/;"	t
uint64_t	thirdparty/glfw/src/deps/glad/glad.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	thirdparty/glfw/src/deps/glad/glad.h	/^typedef unsigned long int uint64_t;$/;"	t
uint64_t	thirdparty/glfw/src/deps/glad/glad.h	/^typedef unsigned long long int uint64_t;$/;"	t
uint64_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef unsigned __int64     uint64_t;$/;"	t
uint64_t	thirdparty/glfw/src/deps/vulkan/vk_platform.h	/^        typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	thirdparty/opengl/include/GL/glcorearb.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	thirdparty/opengl/include/GL/glcorearb.h	/^typedef unsigned long int uint64_t;$/;"	t
uint64_t	thirdparty/opengl/include/GL/glcorearb.h	/^typedef unsigned long long int uint64_t;$/;"	t
uint6ToB64	thirdparty/remotery/vis/extern/BrowserLib/Core/Code/Convert.js	/^	function uint6ToB64 (nUint6)$/;"	f	function:Convert.Uint8Array_to_b64string
uint8	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^typedef unsigned char  uint8;$/;"	t	file:
uint8	thirdparty/stb/include/stb/stb_vorbis.c	/^typedef unsigned char  uint8;$/;"	t	file:
uint8_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef unsigned __int8   uint8_t;$/;"	t
uint8_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef unsigned char     uint8_t;$/;"	t
uint8_t	thirdparty/glfw/src/deps/vulkan/vk_platform.h	/^        typedef unsigned __int8  uint8_t;$/;"	t
uint_fast16_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef uint16_t  uint_fast16_t;$/;"	t
uint_fast32_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef uint32_t  uint_fast32_t;$/;"	t
uint_fast64_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef uint64_t  uint_fast64_t;$/;"	t
uint_fast8_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef uint8_t   uint_fast8_t;$/;"	t
uint_least16_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef uint16_t  uint_least16_t;$/;"	t
uint_least32_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef uint32_t  uint_least32_t;$/;"	t
uint_least64_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef uint64_t  uint_least64_t;$/;"	t
uint_least8_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef uint8_t   uint_least8_t;$/;"	t
uintmax_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^typedef uint64_t  uintmax_t;$/;"	t
uintptr_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef _W64 unsigned int uintptr_t;$/;"	t
uintptr_t	thirdparty/glfw/src/deps/vs2008/stdint.h	/^   typedef unsigned __int64  uintptr_t;$/;"	t
undo	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_text_undo_state undo;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_edit::nk_text_undo_state
undo_char	thirdparty/glfw/src/deps/nuklear.h	/^   nk_rune undo_char[NK_TEXTEDIT_UNDOCHARCOUNT];$/;"	m	struct:nk_text_undo_state
undo_char	thirdparty/stb/include/stb/stb_textedit.h	/^   STB_TEXTEDIT_CHARTYPE  undo_char[STB_TEXTEDIT_UNDOCHARCOUNT];$/;"	m	struct:__anon131
undo_char_point	thirdparty/glfw/src/deps/nuklear.h	/^   short undo_char_point;$/;"	m	struct:nk_text_undo_state
undo_char_point	thirdparty/stb/include/stb/stb_textedit.h	/^   short undo_char_point, redo_char_point;$/;"	m	struct:__anon131
undo_point	thirdparty/glfw/src/deps/nuklear.h	/^   short undo_point;$/;"	m	struct:nk_text_undo_state
undo_point	thirdparty/stb/include/stb/stb_textedit.h	/^   short undo_point, redo_point;$/;"	m	struct:__anon131
undo_rec	thirdparty/glfw/src/deps/nuklear.h	/^   struct nk_text_undo_record undo_rec[NK_TEXTEDIT_UNDOSTATECOUNT];$/;"	m	struct:nk_text_undo_state	typeref:struct:nk_text_undo_state::nk_text_undo_record
undo_rec	thirdparty/stb/include/stb/stb_textedit.h	/^   StbUndoRecord          undo_rec [STB_TEXTEDIT_UNDOSTATECOUNT];$/;"	m	struct:__anon131
undostate	thirdparty/stb/include/stb/stb_textedit.h	/^   StbUndoState undostate;$/;"	m	struct:__anon132
ungrab	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char ungrab;$/;"	m	struct:nk_mouse
uni_buffer_01	lib/rov/src/ogl/rov_gl.hpp	/^  GLint uni_buffer_01;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
uni_color	lib/rov/src/ogl/rov_gl.hpp	/^  GLint uni_color;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
uni_eye	lib/rov/src/ogl/rov_gl.hpp	/^  GLint uni_eye;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
uni_light_count	lib/rov/src/ogl/rov_gl.hpp	/^  GLint uni_light_count;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
uni_line_buffer	lib/rov/src/ogl/rov_gl.hpp	/^  GLint uni_line_buffer;$/;"	m	struct:ROV_Internal::rovGLLineProgram
uni_mode	lib/rov/src/ogl/rov_gl.hpp	/^  GLint uni_mode;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
uni_normal	lib/rov/src/ogl/rov_gl.hpp	/^  GLint uni_normal;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
uni_tex	lib/rov/src/ogl/rov_gl.hpp	/^  GLint uni_tex[rov_max_texture_maps];$/;"	m	struct:ROV_Internal::rovGLMeshProgram
uni_view	lib/rov/src/ogl/rov_gl.hpp	/^  GLint uni_view;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
uni_world	lib/rov/src/ogl/rov_gl.hpp	/^  GLint uni_world;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
uni_wv	lib/rov/src/ogl/rov_gl.hpp	/^  GLint uni_wv;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
uni_wvp	lib/rov/src/ogl/rov_gl.hpp	/^  GLint uni_wvp;$/;"	m	struct:ROV_Internal::rovGLLineProgram
uni_wvp	lib/rov/src/ogl/rov_gl.hpp	/^  GLint uni_wvp;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
unicodeData	thirdparty/glfw/src/cocoa_platform.h	/^    id                  unicodeData;$/;"	m	struct:_GLFWlibraryNS
unique_id	thirdparty/remotery/src/Remotery.c	/^    rmtU32 unique_id;$/;"	m	struct:Sample	file:
unique_id_html_colour	thirdparty/remotery/src/Remotery.c	/^    rmtU8 unique_id_html_colour[8];$/;"	m	struct:Sample	file:
unitNumber	thirdparty/glfw/src/cocoa_platform.h	/^    uint32_t            unitNumber;$/;"	m	struct:_GLFWmonitorNS
unlikely	lib/lib/include/lib/optimizations.hpp	17;"	d
unlikely	lib/lib/include/lib/optimizations.hpp	20;"	d
unload_gpu_resources	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^unload_gpu_resources(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
unlockAudioMutex	thirdparty/soloud/src/core/soloud.cpp	/^	void Soloud::unlockAudioMutex()$/;"	f	class:SoLoud::Soloud
unlockMutex	thirdparty/soloud/src/core/soloud_thread.cpp	/^		void unlockMutex(void *aHandle)$/;"	f	namespace:SoLoud::Thread
unlockPointer	thirdparty/glfw/src/wl_window.c	/^static void unlockPointer(_GLFWwindow* window)$/;"	f	file:
unnormalizedCoordinates	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32                unnormalizedCoordinates;$/;"	m	struct:VkSamplerCreateInfo
up	thirdparty/imguizmo/src/ImGuizmo.cpp	/^            vec_t right, up, dir, position;$/;"	m	struct:ImGuizmo::matrix_t::__anon140::__anon141	file:
update	app/perils/src/game/dynamic_object.cpp	/^update(ROA::Object obj)$/;"	f	namespace:Dynamic_object
update	lib/nil_aspects/src/imgui/imgui_data.cpp	/^update(bool updated, bool *out_updated)$/;"	f	namespace:Nil::ImGUI::__anon45
update3dAudio	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	void Soloud::update3dAudio()$/;"	f	class:SoLoud::Soloud
update3dVoices	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	void Soloud::update3dVoices(unsigned int *aVoiceArray, unsigned int aVoiceCount)$/;"	f	class:SoLoud::Soloud
updateClipRect	thirdparty/glfw/src/win32_window.c	/^static void updateClipRect(_GLFWwindow* window)$/;"	f	file:
updateCursorImage	thirdparty/glfw/src/win32_window.c	/^static void updateCursorImage(_GLFWwindow* window)$/;"	f	file:
updateCursorImage	thirdparty/glfw/src/x11_window.c	/^static void updateCursorImage(_GLFWwindow* window)$/;"	f	file:
updateNormalHints	thirdparty/glfw/src/x11_window.c	/^static void updateNormalHints(_GLFWwindow* window, int width, int height)$/;"	f	file:
updateParams	thirdparty/soloud/src/core/soloud_filter.cpp	/^	void FilterInstance::updateParams(double aTime)$/;"	f	class:SoLoud::FilterInstance
updateShiftReg	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^inline void SIDsound::updateShiftReg(SIDVoice &v)$/;"	f	class:SIDsound
updateShiftReg	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^inline void SIDsound::updateShiftReg(SIDVoice &v)$/;"	f	class:SIDsound
updateVoiceRelativePlaySpeed	thirdparty/soloud/src/core/soloud_core_voiceops.cpp	/^	void Soloud::updateVoiceRelativePlaySpeed(unsigned int aVoice)$/;"	f	class:SoLoud::Soloud
updateVoiceVolume	thirdparty/soloud/src/core/soloud_core_voiceops.cpp	/^	void Soloud::updateVoiceVolume(unsigned int aVoice)$/;"	f	class:SoLoud::Soloud
updateWindowMode	thirdparty/glfw/src/x11_window.c	/^static void updateWindowMode(_GLFWwindow* window)$/;"	f	file:
updateWindowStyles	thirdparty/glfw/src/win32_window.c	/^static void updateWindowStyles(const _GLFWwindow* window)$/;"	f	file:
update_func	lib/nil/include/nil/data/logic.hpp	/^  uintptr_t     update_func;$/;"	m	struct:Nil::Data::Logic
update_vr	lib/nil_aspects/src/renderer/renderer_aspect.cpp	/^update_vr(Nil_ctx *ctx, void *data)$/;"	f	namespace:Nil_ext::ROV_Aspect
updated_bb_data	lib/nil/src/interface/data/bounding_box.cpp	/^  lib::array<Nil::Data::Bounding_box> updated_bb_data;$/;"	m	struct:__anon33::Bounding_box_data	file:
updated_bb_nodes	lib/nil/src/interface/data/bounding_box.cpp	/^  std::vector<Nil::Node>              updated_bb_nodes;$/;"	m	struct:__anon33::Bounding_box_data	file:
updated_data	lib/nil/src/interface/data/common.hpp	/^  lib::array<T>           updated_data;$/;"	m	struct:Nil::Data::Generic_data
updated_nodes	lib/nil/src/interface/data/common.hpp	/^  std::vector<Nil::Node>  updated_nodes;$/;"	m	struct:Nil::Data::Generic_data
upper24	lib/lib/include/lib/bits.hpp	/^upper24(const uint32_t i)$/;"	f	namespace:LIB_NS_NAME::bits
upper32	lib/lib/include/lib/bits.hpp	/^upper32(const uint64_t i)$/;"	f	namespace:LIB_NS_NAME::bits
upper_bounds	lib/lib/include/lib/key.hpp	/^upper_bounds($/;"	f	namespace:LIB_NS_NAME::key
upsampletest	thirdparty/soloud/src/tools/resamplerlab/main.cpp	/^void upsampletest(int aResampler, int aFunction, float aMultiplier, FILE *aIndexf, FILE *aIndexfs)$/;"	f
usTimer	thirdparty/remotery/src/Remotery.c	/^} usTimer;$/;"	t	typeref:struct:__anon54	file:
usTimer_Get	thirdparty/remotery/src/Remotery.c	/^static rmtU64 usTimer_Get(usTimer* timer)$/;"	f	file:
usTimer_Init	thirdparty/remotery/src/Remotery.c	/^static void usTimer_Init(usTimer* timer)$/;"	f	file:
us_end	thirdparty/remotery/src/Remotery.c	/^    rmtU64 us_end;$/;"	m	struct:Sample	file:
us_length	thirdparty/remotery/src/Remotery.c	/^    rmtU64 us_length;$/;"	m	struct:Sample	file:
us_start	thirdparty/remotery/src/Remotery.c	/^    rmtU64 us_start;$/;"	m	struct:Sample	file:
usage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBufferUsageFlags     usage;$/;"	m	struct:VkBufferCreateInfo
usage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageUsageFlags        usage;$/;"	m	struct:VkImageCreateInfo
usage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageUsageFlags        usage;$/;"	m	struct:VkPhysicalDeviceSparseImageFormatInfo2KHR
usage	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageUsageFlags     usage;$/;"	m	struct:VkPhysicalDeviceImageFormatInfo2KHR
use_clipping	thirdparty/glfw/src/deps/nuklear.h	/^    int use_clipping;$/;"	m	struct:nk_command_buffer
use_pool	thirdparty/glfw/src/deps/nuklear.h	/^    int use_pool;$/;"	m	struct:nk_context
user32	thirdparty/glfw/src/win32_platform.h	/^    } user32;$/;"	m	struct:_GLFWlibraryWin32	typeref:struct:_GLFWlibraryWin32::__anon156
userPointer	thirdparty/glfw/src/internal.h	/^    void*               userPointer;$/;"	m	struct:_GLFWwindow
user_allocator_context	thirdparty/stb/include/stb/stb_truetype.h	/^   void *user_allocator_context;$/;"	m	struct:stbtt_pack_context
user_data	lib/nil/include/nil/data/audio.hpp	/^  uintptr_t user_data;$/;"	m	struct:Nil::Data::Audio
user_data	lib/nil/include/nil/data/logic.hpp	/^  uintptr_t     user_data;$/;"	m	struct:Nil::Data::Logic
user_data	lib/nil/include/nil/data/window.hpp	/^  uintptr_t user_data;$/;"	m	struct:Nil::Data::Window
user_data	lib/nil/src/graph/graph_data.hpp	/^    uintptr_t               user_data;$/;"	m	struct:Nil::Graph::Data::graph_type
user_data	lib/nil/src/graph/graph_data.hpp	/^    uintptr_t user_data;$/;"	m	struct:Nil::Graph::Data::graph_tick_cb
user_data	lib/nil/src/graph/graph_data.hpp	/^    uintptr_t user_data;$/;"	m	struct:Nil::Graph::Data::node_delete_cb
user_data	lib/nil/src/graph/graph_data.hpp	/^  uintptr_t user_data;$/;"	m	struct:Nil::Graph::node_data
user_data	lib/nil/src/internal_data/internal_data.hpp	/^  void *user_data;$/;"	m	struct:Nil_aspect_callback
user_data	lib/nil/src/internal_data/internal_data.hpp	/^  void *user_data;$/;"	m	struct:Nil_cpu_task
user_data	lib/nil/src/internal_data/internal_data.hpp	/^  void *user_data;$/;"	m	struct:Nil_gpu_task
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_allocator
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_clipboard
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_command
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_command_buffer
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_context
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_draw_command
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_draw_list
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_button
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_progress
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_property
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_scrollbar
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_selectable
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_slider
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_toggle
userdata	thirdparty/glfw/src/deps/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_user_font
userdata	thirdparty/stb/include/stb/stb_truetype.h	/^   void           * userdata;$/;"	m	struct:stbtt_fontinfo
uv	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 uv; \/* coordinates to a white pixel in the texture  *\/$/;"	m	struct:nk_draw_null_texture	typeref:struct:nk_draw_null_texture::nk_vec2
uv	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_vec2 uv[2];$/;"	m	struct:nk_user_font_glyph	typeref:struct:nk_user_font_glyph::nk_vec2
uv	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex
uv	thirdparty/imgui/include/imgui/imgui.h	/^    ImVec2  uv;$/;"	m	struct:ImDrawVert
uvs	lib/lib/include/lib/model.hpp	/^  float     **uvs;$/;"	m	struct:LIB_NS_NAME::model
v	thirdparty/imguizmo/src/ImGuizmo.cpp	/^         } v;$/;"	m	union:ImGuizmo::matrix_t::__anon140	typeref:struct:ImGuizmo::matrix_t::__anon140::__anon141	file:
v	thirdparty/stb/include/stb/stb_image.h	/^      int h,v;$/;"	m	struct:__anon81::__anon82
v0	thirdparty/glfw/src/deps/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph
v1	thirdparty/glfw/src/deps/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph
v_oversample	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned char h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_range
v_oversample	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int   h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_context
v_oversample	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned char h_oversample, v_oversample; \/\/ don't set these, they're used internally$/;"	m	struct:__anon100
v_oversample	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned int   h_oversample, v_oversample;$/;"	m	struct:stbtt_pack_context
v_seg	thirdparty/stb/include/stb/stb_easy_font.h	/^    unsigned char v_seg;$/;"	m	struct:__anon136
va_copy	thirdparty/imgui/src/imgui.cpp	1600;"	d	file:
val	thirdparty/glfw/src/deps/getopt.h	/^  int val;$/;"	m	struct:option
val_f	thirdparty/imgui/include/imgui/imgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStorage::Pair::__anon138
val_i	thirdparty/imgui/include/imgui/imgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStorage::Pair::__anon138
val_p	thirdparty/imgui/include/imgui/imgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStorage::Pair::__anon138
valid_bits	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int valid_bits;$/;"	m	struct:stb_vorbis	file:
valid_bits	thirdparty/stb/include/stb/stb_vorbis.c	/^   int valid_bits;$/;"	m	struct:stb_vorbis	file:
valid_pose_count	lib/nil_aspects/include/aspect/renderer_aspect.hpp	/^  size_t valid_pose_count = 0;$/;"	m	struct:Nil_ext::ROV_Aspect::Data
validate_uint32	thirdparty/stb/include/stb/stb_image.h	/^typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];$/;"	t
value	lib/lib/include/lib/nyaml.hpp	/^  std::string       value  = "";$/;"	m	class:LIB_NS_NAME::nyaml::node
value	thirdparty/catch/include/catch/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon217
value	thirdparty/glfw/src/deps/nuklear.h	/^    diff = sizeof(Big) - sizeof(T), value = nk_helper<Big, diff>::value};};$/;"	e	enum:nk_alignof::__anon171
value	thirdparty/glfw/src/deps/nuklear.h	/^    union nk_property value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property_variant::nk_property
value	thirdparty/glfw/src/deps/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	e	enum:nk_helper::__anon169
value	thirdparty/glfw/src/deps/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	e	enum:nk_helper::__anon170
value	thirdparty/json/include/json/json.h	/^  struct json_value_s *value;$/;"	m	struct:json_array_element_s	typeref:struct:json_array_element_s::json_value_s
value	thirdparty/json/include/json/json.h	/^  struct json_value_s *value;$/;"	m	struct:json_object_element_s	typeref:struct:json_object_element_s::json_value_s
value	thirdparty/json/include/json/json.h	/^  struct json_value_s value;$/;"	m	struct:json_value_ex_s	typeref:struct:json_value_ex_s::json_value_s
value	thirdparty/remotery/src/Remotery.c	/^    rmtU32 value;$/;"	m	struct:__anon57	file:
value	thirdparty/stb/include/stb/stb_image.h	/^   stbi__uint16 value[288];$/;"	m	struct:__anon84
value_bits	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint8  value_bits;$/;"	m	struct:__anon203	file:
value_bits	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint8  value_bits;$/;"	m	struct:__anon116	file:
value_type	thirdparty/imgui/include/imgui/imgui.h	/^    typedef T                   value_type;$/;"	t	class:ImVector
values	thirdparty/glfw/src/deps/nuklear.h	/^    nk_uint values[NK_VALUE_PAGE_CAPACITY];$/;"	m	struct:nk_table
values	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   int values;$/;"	m	struct:__anon205	file:
values	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anon80
values	thirdparty/stb/include/stb/stb_vorbis.c	/^   int values;$/;"	m	struct:__anon118	file:
vao	lib/nau/src/renderer/opengl3.cpp	/^  GLuint vao;$/;"	m	struct:__anon43::nau_gl3_renderer	file:
vao	lib/rov/src/ogl/rov_gl.hpp	/^  GLuint vao;$/;"	m	struct:ROV_Internal::rovGLData
variableMultisampleRate	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    variableMultisampleRate;$/;"	m	struct:VkPhysicalDeviceFeatures
vbo	lib/nau/src/renderer/opengl3.cpp	/^  GLuint vbo;$/;"	m	struct:__anon43::nau_gl3_renderer	file:
vec2	lib/math/include/math/vec/vec_types.hpp	/^struct vec2$/;"	s
vec3	lib/math/include/math/vec/vec_types.hpp	/^struct vec3$/;"	s
vec3	thirdparty/soloud/src/core/soloud_core_3d.cpp	/^	struct vec3$/;"	s	namespace:SoLoud	file:
vec3_mul_cross	thirdparty/glfw/src/deps/linmath.h	/^static inline void vec3_mul_cross(vec3 r, vec3 const a, vec3 const b)$/;"	f
vec3_nil_world_fwd	lib/nil_aspects/include/aspect/math_nil_extensions.hpp	/^vec3_nil_world_fwd()$/;"	f	namespace:math
vec3_nil_world_left	lib/nil_aspects/include/aspect/math_nil_extensions.hpp	/^vec3_nil_world_left()$/;"	f	namespace:math
vec3_nil_world_up	lib/nil_aspects/include/aspect/math_nil_extensions.hpp	/^vec3_nil_world_up()$/;"	f	namespace:math
vec3_reflect	thirdparty/glfw/src/deps/linmath.h	/^static inline void vec3_reflect(vec3 r, vec3 const v, vec3 const n)$/;"	f
vec3_trans_fwd	lib/nil_aspects/include/aspect/math_nil_extensions.hpp	/^vec3_trans_fwd(const math::transform &trans)$/;"	f	namespace:math
vec3_trans_left	lib/nil_aspects/include/aspect/math_nil_extensions.hpp	/^vec3_trans_left(const math::transform &trans)$/;"	f	namespace:math
vec3_trans_up	lib/nil_aspects/include/aspect/math_nil_extensions.hpp	/^vec3_trans_up(const math::transform &trans)$/;"	f	namespace:math
vec4	lib/math/include/math/vec/vec_types.hpp	/^struct vec4$/;"	s
vec4_mul_cross	thirdparty/glfw/src/deps/linmath.h	/^static inline void vec4_mul_cross(vec4 r, vec4 a, vec4 b)$/;"	f
vec4_reflect	thirdparty/glfw/src/deps/linmath.h	/^static inline void vec4_reflect(vec4 r, vec4 v, vec4 n)$/;"	f
vec_t	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   struct vec_t$/;"	s	namespace:ImGuizmo	file:
vectors	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_config_stack_vec2 vectors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_vec2
vendorID	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                            vendorID;$/;"	m	struct:VkPhysicalDeviceProperties
version	thirdparty/glfw/src/x11_platform.h	/^        int         version;$/;"	m	struct:_GLFWlibraryX11::__anon148
version	thirdparty/opengl/src/gl3w.cpp	/^} version;$/;"	v	typeref:struct:__anon53	file:
version	thirdparty/soloud/src/tools/tedsid2dump/psid.h	/^	unsigned int version;$/;"	m	struct:PsidHeader
vertexAttributeDescriptionCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                                    vertexAttributeDescriptionCount;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
vertexBindingDescriptionCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                                    vertexBindingDescriptionCount;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
vertexCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    vertexCount;$/;"	m	struct:VkDrawIndirectCommand
vertexOffset	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    int32_t     vertexOffset;$/;"	m	struct:VkDrawIndexedIndirectCommand
vertexPipelineStoresAndAtomics	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    vertexPipelineStoresAndAtomics;$/;"	m	struct:VkPhysicalDeviceFeatures
vertexSource	lib/nau/src/renderer/opengl3.cpp	/^const GLchar* vertexSource = R"glsl($/;"	m	namespace:__anon43	file:
vertex_alignment	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size vertex_alignment; \/* vertex alignment: Can be optained by NK_ALIGNOF *\/$/;"	m	struct:nk_convert_config
vertex_count	lib/lib/include/lib/model.hpp	/^  uint32_t   *vertex_count;$/;"	m	struct:LIB_NS_NAME::model
vertex_count	lib/rov/src/ogl/rov_gl.hpp	/^  size_t vertex_count;$/;"	m	struct:ROV_Internal::rovGLMesh
vertex_count	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned int vertex_count;$/;"	m	struct:nk_draw_list
vertex_layout	thirdparty/glfw/src/deps/nuklear.h	/^    const struct nk_draw_vertex_layout_element *vertex_layout; \/* describes the vertex output format and packing *\/$/;"	m	struct:nk_convert_config	typeref:struct:nk_convert_config::nk_draw_vertex_layout_element
vertex_size	thirdparty/glfw/src/deps/nuklear.h	/^    nk_size vertex_size; \/* sizeof one vertex for vertex packing *\/$/;"	m	struct:nk_convert_config
vertex_stride	lib/rov/src/ogl/rov_gl.hpp	/^  size_t vertex_stride;$/;"	m	struct:ROV_Internal::rovGLMesh
vertical_coefficient_width	thirdparty/stb/include/stb/stb_image_resize.h	/^    int vertical_coefficient_width;$/;"	m	struct:__anon72
vertical_coefficients	thirdparty/stb/include/stb/stb_image_resize.h	/^    float* vertical_coefficients;$/;"	m	struct:__anon72
vertical_coefficients_size	thirdparty/stb/include/stb/stb_image_resize.h	/^    int vertical_coefficients_size;$/;"	m	struct:__anon72
vertical_contributors	thirdparty/stb/include/stb/stb_image_resize.h	/^    stbir__contributors* vertical_contributors;$/;"	m	struct:__anon72
vertical_contributors_size	thirdparty/stb/include/stb/stb_image_resize.h	/^    int vertical_contributors_size;$/;"	m	struct:__anon72
vertical_filter	thirdparty/stb/include/stb/stb_image_resize.h	/^    stbir_filter vertical_filter;$/;"	m	struct:__anon72
vertical_filter_pixel_margin	thirdparty/stb/include/stb/stb_image_resize.h	/^    int vertical_filter_pixel_margin;$/;"	m	struct:__anon72
vertical_filter_pixel_width	thirdparty/stb/include/stb/stb_image_resize.h	/^    int vertical_filter_pixel_width;$/;"	m	struct:__anon72
vertical_num_contributors	thirdparty/stb/include/stb/stb_image_resize.h	/^    int vertical_num_contributors;$/;"	m	struct:__anon72
vertical_scale	thirdparty/stb/include/stb/stb_image_resize.h	/^    float vertical_scale;$/;"	m	struct:__anon72
vertical_shift	thirdparty/stb/include/stb/stb_image_resize.h	/^    float vertical_shift;   \/\/ Units: output pixels$/;"	m	struct:__anon72
vertices	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_buffer *vertices;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_buffer
verts	lib/lib/include/lib/model.hpp	/^  float     **verts;$/;"	m	struct:LIB_NS_NAME::model
vib_amp	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float vib_amp;$/;"	m	class:SoLoud::SfxrInstance
vib_phase	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float vib_phase;$/;"	m	class:SoLoud::SfxrInstance
vib_speed	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		float vib_speed;$/;"	m	class:SoLoud::SfxrInstance
videoMode	thirdparty/glfw/src/internal.h	/^    GLFWvidmode         videoMode;$/;"	m	struct:_GLFWwindow
vidmode	thirdparty/glfw/src/x11_platform.h	/^    } vidmode;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon151
vidmodeFromModeInfo	thirdparty/glfw/src/x11_monitor.c	/^static GLFWvidmode vidmodeFromModeInfo(const XRRModeInfo* mi,$/;"	f	file:
view	lib/rov/src/rov_data.hpp	/^  rovMat4 view;$/;"	m	struct:ROV_Internal::rovRenderPass
view	thirdparty/glfw/src/cocoa_platform.h	/^    id              view;$/;"	m	struct:_GLFWwindowNS
viewType	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkImageViewType            viewType;$/;"	m	struct:VkImageViewCreateInfo
view_mat	lib/nil/include/nil/data/camera.hpp	/^  float view_mat[16];$/;"	m	struct:Nil::Data::Camera
viewport	lib/nau/src/nau.cpp	/^  uint32_t viewport[2];$/;"	m	struct:__anon42::Nau_ctx	file:
viewport	lib/rov/src/rov_data.hpp	/^  rovViewport viewport;$/;"	m	struct:ROV_Internal::rovRenderPass
viewportBoundsRange	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float                 viewportBoundsRange[2];$/;"	m	struct:VkPhysicalDeviceLimits
viewportCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                              viewportCount;$/;"	m	struct:VkPipelineViewportStateCreateInfo
viewportSubPixelBits	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t              viewportSubPixelBits;$/;"	m	struct:VkPhysicalDeviceLimits
virtualCursorPosX	thirdparty/glfw/src/internal.h	/^    double              virtualCursorPosX, virtualCursorPosY;$/;"	m	struct:_GLFWwindow
virtualCursorPosY	thirdparty/glfw/src/internal.h	/^    double              virtualCursorPosX, virtualCursorPosY;$/;"	m	struct:_GLFWwindow
visible	thirdparty/glfw/src/internal.h	/^    GLFWbool      visible;$/;"	m	struct:_GLFWwndconfig
visible	thirdparty/glfw/src/wl_platform.h	/^    GLFWbool                    visible;$/;"	m	struct:_GLFWwindowWayland
visibleRegion	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkExtent2D    visibleRegion;$/;"	m	struct:VkDisplayModeParametersKHR
vita_cleanup	thirdparty/soloud/src/backend/vita_homebrew/soloud_vita_homebrew.cpp	/^	static void vita_cleanup(Soloud *aSoloud) {$/;"	f	namespace:SoLoud
vita_homebrew_init	thirdparty/soloud/src/backend/vita_homebrew/soloud_vita_homebrew.cpp	/^	result vita_homebrew_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
vita_homebrew_init	thirdparty/soloud/src/backend/vita_homebrew/soloud_vita_homebrew.cpp	/^	result vita_homebrew_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer, unsigned int aChannels)$/;"	f	namespace:SoLoud
vita_thread	thirdparty/soloud/src/backend/vita_homebrew/soloud_vita_homebrew.cpp	/^	static int vita_thread(SceSize args, void *argp) {$/;"	f	namespace:SoLoud
vk	thirdparty/glfw/src/internal.h	/^    } vk;$/;"	m	struct:_GLFWlibrary	typeref:struct:_GLFWlibrary::__anon165
vkEnumerateInstanceExtensionProperties	thirdparty/glfw/src/internal.h	172;"	d
vkGetInstanceProcAddr	thirdparty/glfw/src/internal.h	173;"	d
voice	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	SIDVoice voice[3];$/;"	m	class:SIDsound
voice	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	SIDVoice voice[3];$/;"	m	class:SIDsound
voiceCb	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        class VoiceCallback *voiceCb;$/;"	m	struct:SoLoud::XAudio2Data	typeref:class:SoLoud::XAudio2Data::VoiceCallback	file:
voiceGroupHandleToArray	thirdparty/soloud/src/core/soloud_core_voicegroup.cpp	/^	handle *Soloud::voiceGroupHandleToArray(handle aVoiceGroupHandle) const$/;"	f	class:SoLoud::Soloud
vol	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             vol;$/;"	m	class:TED
volume	lib/nil/include/nil/data/audio.hpp	/^  float volume;$/;"	m	struct:Nil::Data::Audio
volume	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	int volume;			\/\/ SID Master volume$/;"	m	class:SIDsound
volume	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	int volume;			\/\/ SID Master volume$/;"	m	class:SIDsound
vorb	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^typedef struct stb_vorbis vorb;$/;"	t	typeref:struct:stb_vorbis	file:
vorb	thirdparty/stb/include/stb/stb_vorbis.c	/^typedef struct stb_vorbis vorb;$/;"	t	typeref:struct:stb_vorbis	file:
vorbis_alloc	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static stb_vorbis * vorbis_alloc(stb_vorbis *f)$/;"	f	file:
vorbis_alloc	thirdparty/stb/include/stb/stb_vorbis.c	/^static stb_vorbis * vorbis_alloc(stb_vorbis *f)$/;"	f	file:
vorbis_decode_initial	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int vorbis_decode_initial(vorb *f, int *p_left_start, int *p_left_end, int *p_right_start, int *p_right_end, int *mode)$/;"	f	file:
vorbis_decode_initial	thirdparty/stb/include/stb/stb_vorbis.c	/^static int vorbis_decode_initial(vorb *f, int *p_left_start, int *p_left_end, int *p_right_start, int *p_right_end, int *mode)$/;"	f	file:
vorbis_decode_packet	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int vorbis_decode_packet(vorb *f, int *len, int *p_left, int *p_right)$/;"	f	file:
vorbis_decode_packet	thirdparty/stb/include/stb/stb_vorbis.c	/^static int vorbis_decode_packet(vorb *f, int *len, int *p_left, int *p_right)$/;"	f	file:
vorbis_decode_packet_rest	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int vorbis_decode_packet_rest(vorb *f, int *len, Mode *m, int left_start, int left_end, int right_start, int right_end, int *p_left)$/;"	f	file:
vorbis_decode_packet_rest	thirdparty/stb/include/stb/stb_vorbis.c	/^static int vorbis_decode_packet_rest(vorb *f, int *len, Mode *m, int left_start, int left_end, int right_start, int right_end, int *p_left)$/;"	f	file:
vorbis_deinit	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void vorbis_deinit(stb_vorbis *p)$/;"	f	file:
vorbis_deinit	thirdparty/stb/include/stb/stb_vorbis.c	/^static void vorbis_deinit(stb_vorbis *p)$/;"	f	file:
vorbis_find_page	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static uint32 vorbis_find_page(stb_vorbis *f, uint32 *end, uint32 *last)$/;"	f	file:
vorbis_find_page	thirdparty/stb/include/stb/stb_vorbis.c	/^static uint32 vorbis_find_page(stb_vorbis *f, uint32 *end, uint32 *last)$/;"	f	file:
vorbis_finish_frame	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int vorbis_finish_frame(stb_vorbis *f, int len, int left, int right)$/;"	f	file:
vorbis_finish_frame	thirdparty/stb/include/stb/stb_vorbis.c	/^static int vorbis_finish_frame(stb_vorbis *f, int len, int left, int right)$/;"	f	file:
vorbis_init	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void vorbis_init(stb_vorbis *p, const stb_vorbis_alloc *z)$/;"	f	file:
vorbis_init	thirdparty/stb/include/stb/stb_vorbis.c	/^static void vorbis_init(stb_vorbis *p, const stb_vorbis_alloc *z)$/;"	f	file:
vorbis_pump_first_frame	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static void vorbis_pump_first_frame(stb_vorbis *f)$/;"	f	file:
vorbis_pump_first_frame	thirdparty/stb/include/stb/stb_vorbis.c	/^static int vorbis_pump_first_frame(stb_vorbis *f)$/;"	f	file:
vorbis_search_for_page_pushdata	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int vorbis_search_for_page_pushdata(vorb *f, uint8 *data, int data_len)$/;"	f	file:
vorbis_search_for_page_pushdata	thirdparty/stb/include/stb/stb_vorbis.c	/^static int vorbis_search_for_page_pushdata(vorb *f, uint8 *data, int data_len)$/;"	f	file:
vorbis_validate	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^static int vorbis_validate(uint8 *data)$/;"	f	file:
vorbis_validate	thirdparty/stb/include/stb/stb_vorbis.c	/^static int vorbis_validate(uint8 *data)$/;"	f	file:
vr_device	lib/nil_aspects/include/aspect/renderer_aspect.hpp	/^  vr::IVRSystem *vr_device = nullptr;$/;"	m	struct:Nil_ext::ROV_Aspect::Data
vr_view	lib/nil_aspects/include/aspect/renderer_aspect.hpp	/^  math::mat4 vr_view;$/;"	m	struct:Nil_ext::ROV_Aspect::Data
vs	thirdparty/stb/include/stb/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon83
vs_code	lib/nil/include/nil/resource/shader.hpp	/^  const char          *vs_code;$/;"	m	struct:Nil_shader
vs_in_norm	lib/rov/src/ogl/rov_gl.hpp	/^  GLint vs_in_norm;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
vs_in_pos	lib/rov/src/ogl/rov_gl.hpp	/^  GLint vs_in_pos;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
vs_in_uv	lib/rov/src/ogl/rov_gl.hpp	/^  GLint vs_in_uv;$/;"	m	struct:ROV_Internal::rovGLMeshProgram
vs_shader	lib/nau/src/renderer/opengl3.cpp	/^  GLuint vs_shader;$/;"	m	struct:__anon43::nau_gl3_renderer	file:
vs_src	lib/nau/src/renderer/opengl3.cpp	/^const GLchar* vs_src = R"GLSL($/;"	m	namespace:__anon43	file:
vshift	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int hshift, vshift;$/;"	m	class:TED
w	lib/math/include/math/quat/quat.hpp	/^    float x, y, z, w;$/;"	m	struct:detail::internal_quat
w	thirdparty/glfw/src/deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart
w	thirdparty/glfw/src/deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state
w	thirdparty/glfw/src/deps/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
w	thirdparty/glfw/src/deps/nuklear.h	/^    nk_rp_coord w, h;$/;"	m	struct:nk_rp_rect
w	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle
w	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle_filled
w	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_image
w	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect
w	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_filled
w	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_multi_color
w	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_scissor
w	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_text
w	thirdparty/glfw/src/deps/nuklear.h	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap
w	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image
w	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect
w	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti
w	thirdparty/imgui/include/imgui/imgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4
w	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float x, y, z, w;$/;"	m	struct:ImGuizmo::vec_t	file:
w	thirdparty/stb/include/stb/stb_image.h	/^   int w,h;$/;"	m	struct:__anon92
w	thirdparty/stb/include/stb/stb_rect_pack.h	/^   stbrp_coord    w, h;$/;"	m	struct:stbrp_rect
w	thirdparty/stb/include/stb/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect
w	thirdparty/stb/include/stb/stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon103
w0	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^	int w0;					\/\/ filter cutoff freq$/;"	m	class:SIDsound
w0	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^	int w0;					\/\/ filter cutoff freq$/;"	m	class:SIDsound
w2	thirdparty/stb/include/stb/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon81::__anon82
wButtons	thirdparty/glfw/src/deps/mingw/xinput.h	/^    WORD wButtons;$/;"	m	struct:_XINPUT_GAMEPAD
wCollectionNumber	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wCollectionNumber;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
wCollectionNumber	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wCollectionNumber;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
wDesignatorIndex	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wDesignatorIndex;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
wDesignatorIndex	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wDesignatorIndex;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
wExponent	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wExponent;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
wExponent	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wExponent;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
wLeftMotorSpeed	thirdparty/glfw/src/deps/mingw/xinput.h	/^    WORD wLeftMotorSpeed;$/;"	m	struct:_XINPUT_VIBRATION
wReserved	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wReserved;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
wReserved	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wReserved;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
wRightMotorSpeed	thirdparty/glfw/src/deps/mingw/xinput.h	/^    WORD wRightMotorSpeed;$/;"	m	struct:_XINPUT_VIBRATION
wUsage	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wUsage;$/;"	m	struct:DIDEVICEINSTANCEA
wUsage	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wUsage;$/;"	m	struct:DIDEVICEINSTANCEW
wUsage	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wUsage;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
wUsage	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wUsage;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
wUsagePage	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wUsagePage;$/;"	m	struct:DIDEVICEINSTANCEA
wUsagePage	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wUsagePage;$/;"	m	struct:DIDEVICEINSTANCEW
wUsagePage	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wUsagePage;$/;"	m	struct:DIDEVICEOBJECTINSTANCEA
wUsagePage	thirdparty/glfw/src/deps/mingw/dinput.h	/^    WORD	wUsagePage;$/;"	m	struct:DIDEVICEOBJECTINSTANCEW
w_lores	thirdparty/stb/include/stb/stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anon83
wait	thirdparty/soloud/src/core/soloud_thread.cpp	/^        void wait(ThreadHandle aThreadHandle)$/;"	f	namespace:SoLoud::Thread
waitForEvent	thirdparty/glfw/src/x11_window.c	/^static GLFWbool waitForEvent(double* timeout)$/;"	f	file:
waitForVisibilityNotify	thirdparty/glfw/src/x11_window.c	/^static GLFWbool waitForVisibilityNotify(_GLFWwindow* window)$/;"	f	file:
waitSemaphoreCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                                    waitSemaphoreCount;$/;"	m	struct:VkBindSparseInfo
waitSemaphoreCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                       waitSemaphoreCount;$/;"	m	struct:VkSubmitInfo
waitSemaphoreCount	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                 waitSemaphoreCount;$/;"	m	struct:VkPresentInfoKHR
warpCursorPosX	thirdparty/glfw/src/x11_platform.h	/^    int             warpCursorPosX, warpCursorPosY;$/;"	m	struct:_GLFWwindowX11
warpCursorPosY	thirdparty/glfw/src/x11_platform.h	/^    int             warpCursorPosX, warpCursorPosY;$/;"	m	struct:_GLFWwindowX11
was_packed	thirdparty/glfw/src/deps/nuklear.h	/^    int was_packed;$/;"	m	struct:nk_rp_rect
was_packed	thirdparty/stb/include/stb/stb_rect_pack.h	/^   int            was_packed;  \/\/ non-zero if valid packing$/;"	m	struct:stbrp_rect
was_packed	thirdparty/stb/include/stb/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect
wasapiCleanup	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^    static void wasapiCleanup(Soloud *aSoloud)$/;"	f	namespace:SoLoud
wasapiSubmitBuffer	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^    static void wasapiSubmitBuffer(WASAPIData *aData, UINT32 aFrames)$/;"	f	namespace:SoLoud
wasapiThread	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^    static void wasapiThread(LPVOID aParam)$/;"	f	namespace:SoLoud
wasapi_init	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^	result wasapi_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
wasapi_init	thirdparty/soloud/src/backend/wasapi/soloud_wasapi.cpp	/^	result wasapi_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer, unsigned int aChannels)$/;"	f	namespace:SoLoud
watch	thirdparty/glfw/src/linux_joystick.h	/^    int                     watch;$/;"	m	struct:_GLFWlibraryLinux
wave	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^		int wave;				\/\/ the selected waveform$/;"	m	class:SIDsound::SIDVoice
wave	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^		int wave;				\/\/ the selected waveform$/;"	m	class:SIDsound::SIDVoice
waveForm	thirdparty/soloud/src/audiosource/tedsid/ted.h	/^    int             waveForm[2];$/;"	m	class:TED
waveForm	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	unsigned int waveForm[2];$/;"	m	class:TED
waveNoise	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^inline int SIDsound::waveNoise(SIDVoice &v)$/;"	f	class:SIDsound
waveNoise	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^inline int SIDsound::waveNoise(SIDVoice &v)$/;"	f	class:SIDsound
waveOut	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^        HWAVEOUT waveOut;$/;"	m	struct:SoLoud::SoLoudWinMMData	file:
wavePulse	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^inline int SIDsound::wavePulse(SIDVoice &v)$/;"	f	class:SIDsound
wavePulse	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^inline int SIDsound::wavePulse(SIDVoice &v)$/;"	f	class:SIDsound
waveSaw	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^inline int SIDsound::waveSaw(SIDVoice &v)$/;"	f	class:SIDsound
waveSaw	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^inline int SIDsound::waveSaw(SIDVoice &v)$/;"	f	class:SIDsound
waveSawPulse	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^inline int SIDsound::waveSawPulse(SIDVoice &v)$/;"	f	class:SIDsound
waveSawPulse	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^inline int SIDsound::waveSawPulse(SIDVoice &v)$/;"	f	class:SIDsound
waveSawTooth	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	/^inline unsigned int TED::waveSawTooth(unsigned int channel)$/;"	f	class:TED
waveSawTooth	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^inline unsigned int TED::waveSawTooth(unsigned int channel)$/;"	f	class:TED
waveSquare	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	/^inline unsigned int TED::waveSquare(unsigned int channel)$/;"	f	class:TED
waveSquare	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^inline unsigned int TED::waveSquare(unsigned int channel)$/;"	f	class:TED
waveTriPulse	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^inline int SIDsound::waveTriPulse(SIDVoice &v)$/;"	f	class:SIDsound
waveTriPulse	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^inline int SIDsound::waveTriPulse(SIDVoice &v)$/;"	f	class:SIDsound
waveTriSaw	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^inline int SIDsound::waveTriSaw(SIDVoice &v)$/;"	f	class:SIDsound
waveTriSaw	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^inline int SIDsound::waveTriSaw(SIDVoice &v)$/;"	f	class:SIDsound
waveTriSawPulse	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^inline int SIDsound::waveTriSawPulse(SIDVoice &v)$/;"	f	class:SIDsound
waveTriSawPulse	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^inline int SIDsound::waveTriSawPulse(SIDVoice &v)$/;"	f	class:SIDsound
waveTriangle	thirdparty/soloud/src/audiosource/tedsid/sid.h	/^inline int SIDsound::waveTriangle(SIDVoice &v)$/;"	f	class:SIDsound
waveTriangle	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	/^inline unsigned int TED::waveTriangle(unsigned int channel)$/;"	f	class:TED
waveTriangle	thirdparty/soloud/src/tools/tedsid2dump/sid.h	/^inline int SIDsound::waveTriangle(SIDVoice &v)$/;"	f	class:SIDsound
waveTriangle	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^inline unsigned int TED::waveTriangle(unsigned int channel)$/;"	f	class:TED
wave_type	thirdparty/soloud/include/soloud/soloud_sfxr.h	/^		int wave_type;$/;"	m	struct:SoLoud::SfxrParams
websocket_guid	thirdparty/remotery/src/Remotery.c	/^static const char websocket_guid[] = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";$/;"	v	file:
websocket_response	thirdparty/remotery/src/Remotery.c	/^static const char websocket_response[] =$/;"	v	file:
wglCreateContext	thirdparty/glfw/src/wgl_context.h	93;"	d
wglDeleteContext	thirdparty/glfw/src/wgl_context.h	94;"	d
wglGetCurrentDC	thirdparty/glfw/src/wgl_context.h	96;"	d
wglGetProcAddress	thirdparty/glfw/src/wgl_context.h	95;"	d
wglMakeCurrent	thirdparty/glfw/src/wgl_context.h	97;"	d
wglShareLists	thirdparty/glfw/src/wgl_context.h	98;"	d
where	thirdparty/glfw/src/deps/nuklear.h	/^   int where;$/;"	m	struct:nk_text_undo_record
where	thirdparty/stb/include/stb/stb_textedit.h	/^   STB_TEXTEDIT_POSITIONTYPE  where;$/;"	m	struct:__anon130
wideLines	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    VkBool32    wideLines;$/;"	m	struct:VkPhysicalDeviceFeatures
width	lib/nil/include/nil/data/camera.hpp	/^  float width;$/;"	m	struct:Nil::Data::Camera
width	lib/nil/include/nil/data/window.hpp	/^  uint32_t  width;$/;"	m	struct:Nil::Data::Window
width	lib/nil/include/nil/resource/texture.hpp	/^  uint32_t width;       \/\/ If data_type == DATA then this is input.$/;"	m	struct:Nil_texture
width	lib/rov/src/ogl/rov_gl.hpp	/^  uint32_t width;$/;"	m	struct:ROV_Internal::rovGLFramebuffer
width	lib/rov/src/ogl/rov_gl.hpp	/^  uint32_t width;$/;"	m	struct:ROV_Internal::rovGLTexture
width	thirdparty/glfw/include/GLFW/glfw3.h	/^    int width;$/;"	m	struct:GLFWimage
width	thirdparty/glfw/include/GLFW/glfw3.h	/^    int width;$/;"	m	struct:GLFWvidmode
width	thirdparty/glfw/src/deps/nuklear.h	/^    float width, height;$/;"	m	struct:nk_user_font_glyph
width	thirdparty/glfw/src/deps/nuklear.h	/^    int   width;$/;"	m	struct:nk_tt_pack_context
width	thirdparty/glfw/src/deps/nuklear.h	/^    int width;$/;"	m	struct:nk_rp_context
width	thirdparty/glfw/src/deps/nuklear.h	/^    nk_text_width_f width;$/;"	m	struct:nk_user_font
width	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    int width, height;$/;"	m	struct:nk_glfw
width	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float    width;$/;"	m	struct:VkViewport
width	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t                    width;$/;"	m	struct:VkFramebufferCreateInfo
width	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    width;$/;"	m	struct:VkExtent2D
width	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    width;$/;"	m	struct:VkExtent3D
width	thirdparty/glfw/src/internal.h	/^    int           width;$/;"	m	struct:_GLFWwndconfig
width	thirdparty/glfw/src/mir_platform.h	/^    int                     width;$/;"	m	struct:_GLFWwindowMir
width	thirdparty/glfw/src/null_platform.h	/^    int width;$/;"	m	struct:_GLFWwindowNull
width	thirdparty/glfw/src/osmesa_context.h	/^    int                 width;$/;"	m	struct:_GLFWcontextOSMesa
width	thirdparty/glfw/src/wl_platform.h	/^    int                         width, height;$/;"	m	struct:_GLFWcursorWayland
width	thirdparty/glfw/src/wl_platform.h	/^    int                         width, height;$/;"	m	struct:_GLFWwindowWayland
width	thirdparty/glfw/src/x11_platform.h	/^    int             width, height;$/;"	m	struct:_GLFWwindowX11
width	thirdparty/stb/include/stb/stb_rect_pack.h	/^   int width;$/;"	m	struct:stbrp_context
width	thirdparty/stb/include/stb/stb_truetype.h	/^   int   width;$/;"	m	struct:stbtt_pack_context
width	thirdparty/stb/include/stb/stb_truetype.h	/^   int width,height;$/;"	m	struct:__anon112
widthMM	thirdparty/glfw/src/internal.h	/^    int             widthMM, heightMM;$/;"	m	struct:_GLFWmonitor
win	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_page_element win[1];$/;"	m	struct:nk_page	typeref:struct:nk_page::nk_page_element
win	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_window *win;$/;"	m	struct:nk_popup_state	typeref:struct:nk_popup_state::nk_window
win	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_window win;$/;"	m	union:nk_page_data	typeref:struct:nk_page_data::nk_window
win	thirdparty/glfw/src/deps/nuklear_glfw_gl2.h	/^    GLFWwindow *win;$/;"	m	struct:nk_glfw
winMMCleanup	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^    static void winMMCleanup(Soloud *aSoloud)$/;"	f	namespace:SoLoud
winMMThread	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^    static void winMMThread(LPVOID aParam)$/;"	f	namespace:SoLoud
window	thirdparty/glfw/src/deps/nuklear.h	/^    struct nk_style_window window;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_window
window	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    ANativeWindow*                    window;$/;"	m	struct:VkAndroidSurfaceCreateInfoKHR
window	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    Window                         window;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
window	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    void*                       window;$/;"	m	struct:VkViSurfaceCreateInfoNN
window	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    xcb_window_t                  window;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
window	thirdparty/glfw/src/glx_context.h	/^    GLXWindow       window;$/;"	m	struct:_GLFWcontextGLX
window	thirdparty/glfw/src/internal.h	/^        _GLFWwndconfig  window;$/;"	m	struct:_GLFWlibrary::__anon163
window	thirdparty/glfw/src/internal.h	/^    _GLFWwindow*    window;$/;"	m	struct:_GLFWmonitor
window	thirdparty/glfw/src/mir_platform.h	/^    MirWindow*              window;$/;"	m	struct:_GLFWwindowMir
window	thirdparty/glfw/src/mir_window.c	/^    _GLFWwindow*           window;$/;"	m	struct:EventNode	file:
window	thirdparty/glfw/src/x11_platform.h	/^    Window                      window;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
window	thirdparty/glfw/src/x11_platform.h	/^    xcb_window_t                window;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
window	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   float *window[2];$/;"	m	struct:stb_vorbis	file:
window	thirdparty/stb/include/stb/stb_vorbis.c	/^   float *window[2];$/;"	m	struct:stb_vorbis	file:
windowListHead	thirdparty/glfw/src/internal.h	/^    _GLFWwindow*        windowListHead;$/;"	m	struct:_GLFWlibrary
windowProc	thirdparty/glfw/src/win32_window.c	/^static LRESULT CALLBACK windowProc(HWND hWnd, UINT uMsg,$/;"	f	file:
window_count	lib/nil/src/interface/data/window.cpp	/^window_count()$/;"	f	namespace:Nil::Data
windowtype	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint16 windowtype;$/;"	m	struct:__anon210	file:
windowtype	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint16 windowtype;$/;"	m	struct:__anon123	file:
winmm	thirdparty/glfw/src/win32_platform.h	/^    } winmm;$/;"	m	struct:_GLFWlibraryWin32	typeref:struct:_GLFWlibraryWin32::__anon153
winmm_init	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^	result winmm_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
winmm_init	thirdparty/soloud/src/backend/winmm/soloud_winmm.cpp	/^	result winmm_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer, unsigned int aChannels)$/;"	f	namespace:SoLoud
wire_frame	lib/rov/include/rov/rov.hpp	/^  bool wire_frame;$/;"	m	struct:rovRasterizer
world	lib/rov/src/rov_data.hpp	/^  rovMat4 world;$/;"	m	struct:ROV_Internal::rovDrawCall
worldToPos	thirdparty/imguizmo/src/ImGuizmo.cpp	/^   static ImVec2 worldToPos(const vec_t& worldPos, const matrix_t& mat)$/;"	f	namespace:ImGuizmo
world_bb	lib/nil/src/interface/data/bounding_box.cpp	/^  lib::array<Nil::Data::Bounding_box> world_bb;$/;"	m	struct:__anon33::Bounding_box_data	file:
world_mat	lib/nil/include/nil/data/renderable.hpp	/^  float     world_mat[16];$/;"	m	struct:Nil::Data::Renderable
world_mat	lib/nil/include/nil/data/renderable_text.hpp	/^  float         world_mat[16];$/;"	m	struct:Nil::Data::Renderable_text
world_position	lib/nil/include/nil/data/transform.hpp	/^  float world_position[3];$/;"	m	struct:Nil::Data::Transform
world_rotation	lib/nil/include/nil/data/transform.hpp	/^  float world_rotation[4];$/;"	m	struct:Nil::Data::Transform
world_scale	lib/nil/include/nil/data/transform.hpp	/^  float world_scale[3];$/;"	m	struct:Nil::Data::Transform
world_transform	lib/nil/src/graph/graph_data.hpp	/^  lib::array<math::transform> world_transform;          \/\/ World.$/;"	m	struct:Nil::Graph::Data
write	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^void SIDsound::write(unsigned int adr, unsigned char value)$/;"	f	class:SIDsound
write	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^void SIDsound::write(unsigned int adr, unsigned char value)$/;"	f	class:SIDsound
write3	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^static void write3(FILE *f, unsigned char a, unsigned char b, unsigned char c)$/;"	f
writeMask	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t       writeMask;$/;"	m	struct:VkStencilOpState
writeProtectedPlayerMemory	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	void writeProtectedPlayerMemory(unsigned int addr, unsigned char *byte, unsigned int len) {$/;"	f	class:TED
writeSoundReg	thirdparty/soloud/src/audiosource/tedsid/ted.cpp	/^void TED::writeSoundReg(unsigned int reg, unsigned char value)$/;"	f	class:TED
writeSoundReg	thirdparty/soloud/src/tools/tedsid2dump/tedsound.cpp	/^void TED::writeSoundReg(unsigned int reg, unsigned char value)$/;"	f	class:TED
writeTargetToProperty	thirdparty/glfw/src/x11_window.c	/^static Atom writeTargetToProperty(const XSelectionRequestEvent* request)$/;"	f	file:
write_pixels	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^static void write_pixels(FILE *f, int rgb_dir, int vdir, int x, int y, int comp, void *data, int write_alpha, int scanline_pad, int expand_mono)$/;"	f
write_pos	thirdparty/remotery/src/Remotery.c	/^    rmtU32 write_pos;$/;"	m	struct:rmtMessageQueue	file:
writefv	thirdparty/soloud/src/tools/resamplerlab/stb_image_write.h	/^static void writefv(FILE *f, const char *fmt, va_list v)$/;"	f
writesamples	thirdparty/soloud/src/audiosource/speech/soloud_speech.cpp	/^	static void writesamples(short * aSrc, float * aDst, int aCount)$/;"	f	namespace:SoLoud
wrtDMA	thirdparty/soloud/src/tools/tedsid2dump/tedmem.h	/^	void wrtDMA(unsigned int addr, unsigned char value) { Ram[addr]=value; }$/;"	f	class:TED
wsz	thirdparty/glfw/src/deps/mingw/dinput.h	/^        WCHAR        wsz[MAX_PATH];$/;"	m	struct:DIPROPSTRING
wszPath	thirdparty/glfw/src/deps/mingw/dinput.h	/^	WCHAR   wszPath[MAX_PATH];$/;"	m	struct:DIPROPGUIDANDPATH
x	lib/math/include/math/quat/quat.hpp	/^    float x, y, z, w;$/;"	m	struct:detail::internal_quat
x	lib/roa/include/roa/point.hpp	/^  float x;$/;"	m	struct:ROA::Point
x	thirdparty/glfw/src/deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart
x	thirdparty/glfw/src/deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state
x	thirdparty/glfw/src/deps/nuklear.h	/^    int x,y;$/;"	m	struct:nk_rp__findresult
x	thirdparty/glfw/src/deps/nuklear.h	/^    nk_rp_coord  x,y;$/;"	m	struct:nk_rp_node
x	thirdparty/glfw/src/deps/nuklear.h	/^    nk_rp_coord x, y;$/;"	m	struct:nk_rp_rect
x	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle
x	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle_filled
x	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_image
x	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect
x	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_filled
x	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_multi_color
x	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_scissor
x	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_text
x	thirdparty/glfw/src/deps/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex
x	thirdparty/glfw/src/deps/nuklear.h	/^   float x,y;    \/* position of n'th character *\/$/;"	m	struct:nk_text_find
x	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect
x	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti
x	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	m	struct:nk_scroll
x	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt__point {float x,y;};$/;"	m	struct:nk_tt__point
x	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	m	struct:nk_vec2
x	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	m	struct:nk_vec2i
x	thirdparty/glfw/src/deps/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	m	struct:nk_alignof::Big
x	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float    x;$/;"	m	struct:VkViewport
x	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    int32_t    x;$/;"	m	struct:VkOffset2D
x	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    int32_t    x;$/;"	m	struct:VkOffset3D
x	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    x;$/;"	m	struct:VkDispatchIndirectCommand
x	thirdparty/glfw/src/mir_platform.h	/^    int x;$/;"	m	struct:_GLFWmonitorMir
x	thirdparty/glfw/src/wl_platform.h	/^    int                         x;$/;"	m	struct:_GLFWmonitorWayland
x	thirdparty/imgui/include/imgui/imgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4
x	thirdparty/imgui/include/imgui/imgui.h	/^    float x, y;$/;"	m	struct:ImVec2
x	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float x, y, z, w;$/;"	m	struct:ImGuizmo::vec_t	file:
x	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint16 x,y;$/;"	m	struct:__anon213	file:
x	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^static int				x,tmp;$/;"	v	file:
x	thirdparty/stb/include/stb/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon81::__anon82
x	thirdparty/stb/include/stb/stb_rect_pack.h	/^   int x,y;$/;"	m	struct:__anon95
x	thirdparty/stb/include/stb/stb_rect_pack.h	/^   stbrp_coord    x, y;$/;"	m	struct:stbrp_rect
x	thirdparty/stb/include/stb/stb_rect_pack.h	/^   stbrp_coord  x,y;$/;"	m	struct:stbrp_node
x	thirdparty/stb/include/stb/stb_textedit.h	/^   float x,y;    \/\/ position of n'th character$/;"	m	struct:__anon134
x	thirdparty/stb/include/stb/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon102
x	thirdparty/stb/include/stb/stb_truetype.h	/^   float x, y;$/;"	m	struct:__anon110
x	thirdparty/stb/include/stb/stb_truetype.h	/^   float x,y;$/;"	m	struct:__anon111
x	thirdparty/stb/include/stb/stb_truetype.h	/^   int x,dx;$/;"	m	struct:stbtt__active_edge
x	thirdparty/stb/include/stb/stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon112
x	thirdparty/stb/include/stb/stb_truetype.h	/^   stbrp_coord x,y;$/;"	m	struct:stbrp_rect
x	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned char x;$/;"	m	struct:__anon113
x	thirdparty/stb/include/stb/stb_vorbis.c	/^   uint16 x,id;$/;"	m	struct:__anon126	file:
x0	thirdparty/glfw/src/deps/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
x0	thirdparty/glfw/src/deps/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge
x0	thirdparty/glfw/src/deps/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad
x0	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar
x0	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar
x0	thirdparty/glfw/src/deps/nuklear.h	/^   float x0,x1;$/;"	m	struct:nk_text_edit_row
x0	thirdparty/stb/include/stb/stb_textedit.h	/^   float x0,x1;             \/\/ starting x location, end x location (allows for align=right, etc)$/;"	m	struct:__anon133
x0	thirdparty/stb/include/stb/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge
x0	thirdparty/stb/include/stb/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon98
x0	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon97
x0	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon99
x1	thirdparty/glfw/src/deps/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
x1	thirdparty/glfw/src/deps/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge
x1	thirdparty/glfw/src/deps/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad
x1	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar
x1	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar
x1	thirdparty/glfw/src/deps/nuklear.h	/^   float x0,x1;$/;"	m	struct:nk_text_edit_row
x1	thirdparty/stb/include/stb/stb_textedit.h	/^   float x0,x1;             \/\/ starting x location, end x location (allows for align=right, etc)$/;"	m	struct:__anon133
x1	thirdparty/stb/include/stb/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge
x1	thirdparty/stb/include/stb/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon98
x1	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon97
x1	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon99
x11xcb	thirdparty/glfw/src/x11_platform.h	/^    } x11xcb;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon150
xadvance	thirdparty/glfw/src/deps/nuklear.h	/^    float xadvance;$/;"	m	struct:nk_font_glyph
xadvance	thirdparty/glfw/src/deps/nuklear.h	/^    float xadvance;$/;"	m	struct:nk_user_font_glyph
xadvance	thirdparty/glfw/src/deps/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar
xadvance	thirdparty/glfw/src/deps/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar
xadvance	thirdparty/stb/include/stb/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon97
xadvance	thirdparty/stb/include/stb/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon99
xaudio2	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        IXAudio2 *xaudio2;$/;"	m	struct:SoLoud::XAudio2Data	file:
xaudio2Cleanup	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^    static void xaudio2Cleanup(Soloud *aSoloud)$/;"	f	namespace:SoLoud
xaudio2Thread	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^    static void xaudio2Thread(LPVOID aParam)$/;"	f	namespace:SoLoud
xaudio2_init	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^	result xaudio2_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer)$/;"	f	namespace:SoLoud
xaudio2_init	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^    result xaudio2_init(Soloud *aSoloud, unsigned int aFlags, unsigned int aSamplerate, unsigned int aBuffer, unsigned int aChannels)$/;"	f	namespace:SoLoud
xcb_connection_t	thirdparty/glfw/src/x11_platform.h	/^typedef struct xcb_connection_t xcb_connection_t;$/;"	t	typeref:struct:xcb_connection_t
xcb_visualid_t	thirdparty/glfw/src/x11_platform.h	/^typedef XID xcb_visualid_t;$/;"	t
xcb_window_t	thirdparty/glfw/src/x11_platform.h	/^typedef XID xcb_window_t;$/;"	t
xdnd	thirdparty/glfw/src/x11_platform.h	/^    } xdnd;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon148
xhot	thirdparty/glfw/src/wl_platform.h	/^    int                         xhot, yhot;$/;"	m	struct:_GLFWcursorWayland
xi	thirdparty/glfw/src/x11_platform.h	/^    } xi;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon152
xinerama	thirdparty/glfw/src/x11_platform.h	/^    } xinerama;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon149
xinput	thirdparty/glfw/src/win32_platform.h	/^    } xinput;$/;"	m	struct:_GLFWlibraryWin32	typeref:struct:_GLFWlibraryWin32::__anon155
xkb	thirdparty/glfw/src/wl_platform.h	/^    } xkb;$/;"	m	struct:_GLFWlibraryWayland	typeref:struct:_GLFWlibraryWayland::__anon144
xkb	thirdparty/glfw/src/x11_platform.h	/^    } xkb;$/;"	m	struct:_GLFWlibraryX11	typeref:struct:_GLFWlibraryX11::__anon146
xlate_cardinal	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static int xlate_cardinal(int value, darray *phone)$/;"	f	file:
xlate_ordinal	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static int xlate_ordinal(int value, darray *phone)$/;"	f	file:
xlate_string	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^int xlate_string(const char *string, darray *phone)$/;"	f
xlate_word	thirdparty/soloud/src/audiosource/speech/tts.cpp	/^static int xlate_word(const char *word, int n, darray *phone)$/;"	f	file:
xoff	thirdparty/glfw/src/deps/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar
xoff	thirdparty/glfw/src/deps/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar
xoff	thirdparty/stb/include/stb/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon97
xoff	thirdparty/stb/include/stb/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon99
xoff2	thirdparty/glfw/src/deps/nuklear.h	/^    float xoff2,yoff2;$/;"	m	struct:nk_tt_packedchar
xoff2	thirdparty/stb/include/stb/stb_truetype.h	/^   float xoff2,yoff2;$/;"	m	struct:__anon99
xpos	thirdparty/glfw/src/x11_platform.h	/^    int             xpos, ypos;$/;"	m	struct:_GLFWwindowX11
y	lib/math/include/math/quat/quat.hpp	/^    float x, y, z, w;$/;"	m	struct:detail::internal_quat
y	lib/roa/include/roa/point.hpp	/^  float y;$/;"	m	struct:ROA::Point
y	thirdparty/glfw/src/deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart
y	thirdparty/glfw/src/deps/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state
y	thirdparty/glfw/src/deps/nuklear.h	/^    int x,y;$/;"	m	struct:nk_rp__findresult
y	thirdparty/glfw/src/deps/nuklear.h	/^    nk_rp_coord  x,y;$/;"	m	struct:nk_rp_node
y	thirdparty/glfw/src/deps/nuklear.h	/^    nk_rp_coord x, y;$/;"	m	struct:nk_rp_rect
y	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle
y	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle_filled
y	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_image
y	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect
y	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_filled
y	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_multi_color
y	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_scissor
y	thirdparty/glfw/src/deps/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_text
y	thirdparty/glfw/src/deps/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex
y	thirdparty/glfw/src/deps/nuklear.h	/^   float x,y;    \/* position of n'th character *\/$/;"	m	struct:nk_text_find
y	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect
y	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti
y	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	m	struct:nk_scroll
y	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_tt__point {float x,y;};$/;"	m	struct:nk_tt__point
y	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	m	struct:nk_vec2
y	thirdparty/glfw/src/deps/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	m	struct:nk_vec2i
y	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    float    y;$/;"	m	struct:VkViewport
y	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    int32_t    y;$/;"	m	struct:VkOffset2D
y	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    int32_t    y;$/;"	m	struct:VkOffset3D
y	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    y;$/;"	m	struct:VkDispatchIndirectCommand
y	thirdparty/glfw/src/mir_platform.h	/^    int y;$/;"	m	struct:_GLFWmonitorMir
y	thirdparty/glfw/src/wl_platform.h	/^    int                         y;$/;"	m	struct:_GLFWmonitorWayland
y	thirdparty/imgui/include/imgui/imgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4
y	thirdparty/imgui/include/imgui/imgui.h	/^    float x, y;$/;"	m	struct:ImVec2
y	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float x, y, z, w;$/;"	m	struct:ImGuizmo::vec_t	file:
y	thirdparty/soloud/src/audiosource/wav/stb_vorbis.c	/^   uint16 x,y;$/;"	m	struct:__anon213	file:
y	thirdparty/stb/include/stb/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon81::__anon82
y	thirdparty/stb/include/stb/stb_rect_pack.h	/^   int x,y;$/;"	m	struct:__anon95
y	thirdparty/stb/include/stb/stb_rect_pack.h	/^   stbrp_coord    x, y;$/;"	m	struct:stbrp_rect
y	thirdparty/stb/include/stb/stb_rect_pack.h	/^   stbrp_coord  x,y;$/;"	m	struct:stbrp_node
y	thirdparty/stb/include/stb/stb_textedit.h	/^   float x,y;    \/\/ position of n'th character$/;"	m	struct:__anon134
y	thirdparty/stb/include/stb/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon102
y	thirdparty/stb/include/stb/stb_truetype.h	/^   float x, y;$/;"	m	struct:__anon110
y	thirdparty/stb/include/stb/stb_truetype.h	/^   float x,y;$/;"	m	struct:__anon111
y	thirdparty/stb/include/stb/stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon112
y	thirdparty/stb/include/stb/stb_truetype.h	/^   stbrp_coord x,y;$/;"	m	struct:stbrp_rect
y0	thirdparty/glfw/src/deps/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
y0	thirdparty/glfw/src/deps/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge
y0	thirdparty/glfw/src/deps/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad
y0	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar
y0	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar
y0	thirdparty/stb/include/stb/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge
y0	thirdparty/stb/include/stb/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon98
y0	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon97
y0	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon99
y1	thirdparty/glfw/src/deps/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
y1	thirdparty/glfw/src/deps/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge
y1	thirdparty/glfw/src/deps/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad
y1	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar
y1	thirdparty/glfw/src/deps/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar
y1	thirdparty/stb/include/stb/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge
y1	thirdparty/stb/include/stb/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon98
y1	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon97
y1	thirdparty/stb/include/stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon99
yhot	thirdparty/glfw/src/wl_platform.h	/^    int                         xhot, yhot;$/;"	m	struct:_GLFWcursorWayland
ymax	thirdparty/glfw/src/deps/nuklear.h	/^   float ymin,ymax;$/;"	m	struct:nk_text_edit_row
ymax	thirdparty/stb/include/stb/stb_textedit.h	/^   float ymin,ymax;         \/\/ height of row above and below baseline$/;"	m	struct:__anon133
ymin	thirdparty/glfw/src/deps/nuklear.h	/^   float ymin,ymax;$/;"	m	struct:nk_text_edit_row
ymin	thirdparty/stb/include/stb/stb_textedit.h	/^   float ymin,ymax;         \/\/ height of row above and below baseline$/;"	m	struct:__anon133
yoff	thirdparty/glfw/src/deps/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar
yoff	thirdparty/glfw/src/deps/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar
yoff	thirdparty/stb/include/stb/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon97
yoff	thirdparty/stb/include/stb/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon99
yoff2	thirdparty/glfw/src/deps/nuklear.h	/^    float xoff2,yoff2;$/;"	m	struct:nk_tt_packedchar
yoff2	thirdparty/stb/include/stb/stb_truetype.h	/^   float xoff2,yoff2;$/;"	m	struct:__anon99
ypos	thirdparty/glfw/src/x11_platform.h	/^    int             xpos, ypos;$/;"	m	struct:_GLFWwindowX11
ypos	thirdparty/stb/include/stb/stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon83
ystep	thirdparty/stb/include/stb/stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon83
z	lib/math/include/math/quat/quat.hpp	/^    float x, y, z, w;$/;"	m	struct:detail::internal_quat
z	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    int32_t    z;$/;"	m	struct:VkOffset3D
z	thirdparty/glfw/src/deps/vulkan/vulkan.h	/^    uint32_t    z;$/;"	m	struct:VkDispatchIndirectCommand
z	thirdparty/imgui/include/imgui/imgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4
z	thirdparty/imguizmo/src/ImGuizmo.cpp	/^      float x, y, z, w;$/;"	m	struct:ImGuizmo::vec_t	file:
z_distance	thirdparty/stb/include/stb/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon85
z_expandable	thirdparty/stb/include/stb/stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anon85
z_length	thirdparty/stb/include/stb/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon85
zbuffer	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon85
zbuffer_end	thirdparty/stb/include/stb/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon85
zout	thirdparty/stb/include/stb/stb_image.h	/^   char *zout;$/;"	m	struct:__anon85
zout_end	thirdparty/stb/include/stb/stb_image.h	/^   char *zout_end;$/;"	m	struct:__anon85
zout_start	thirdparty/stb/include/stb/stb_image.h	/^   char *zout_start;$/;"	m	struct:__anon85
~AlignedFloatBuffer	thirdparty/soloud/src/core/soloud.cpp	/^	AlignedFloatBuffer::~AlignedFloatBuffer()$/;"	f	class:SoLoud::AlignedFloatBuffer
~Application	lib/roa/src/interface/application.cpp	/^Application::~Application()$/;"	f	class:ROA::Application
~AudioSource	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	AudioSource::~AudioSource() $/;"	f	class:SoLoud::AudioSource
~AudioSourceInstance	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	AudioSourceInstance::~AudioSourceInstance()$/;"	f	class:SoLoud::AudioSourceInstance
~AudioSourceResampleData	thirdparty/soloud/src/core/soloud_audiosource.cpp	/^	AudioSourceResampleData::~AudioSourceResampleData()$/;"	f	class:SoLoud::AudioSourceResampleData
~Audio_player	lib/roa/src/interface/audio_player.cpp	/^Audio_player::~Audio_player()$/;"	f	class:ROA::Audio_player
~Audio_source	lib/roa/src/interface/audio_source.cpp	/^Audio_source::~Audio_source()$/;"	f	class:ROA::Audio_source
~BiquadResonantFilter	thirdparty/soloud/src/filter/soloud_biquadresonantfilter.cpp	/^	BiquadResonantFilter::~BiquadResonantFilter()$/;"	f	class:SoLoud::BiquadResonantFilter
~BiquadResonantFilterInstance	thirdparty/soloud/src/filter/soloud_biquadresonantfilter.cpp	/^	BiquadResonantFilterInstance::~BiquadResonantFilterInstance()$/;"	f	class:SoLoud::BiquadResonantFilterInstance
~Bounding_box_data	lib/nil/src/interface/data/bounding_box.cpp	/^  ~Bounding_box_data()$/;"	f	struct:__anon33::Bounding_box_data
~BusInstance	thirdparty/soloud/src/core/soloud_bus.cpp	/^	BusInstance::~BusInstance()$/;"	f	class:SoLoud::BusInstance
~CPU	thirdparty/soloud/src/tools/tedsid2dump/cpu.cpp	/^CPU::~CPU()$/;"	f	class:CPU
~Camera	lib/roa/src/interface/camera.cpp	/^Camera::~Camera()$/;"	f	class:ROA::Camera
~CbmTune	thirdparty/soloud/src/tools/tedsid2dump/cbmtune.cpp	/^CbmTune::~CbmTune(void)$/;"	f	class:CbmTune
~Collection	lib/roa/src/interface/collection.cpp	/^Collection::~Collection()$/;"	f	class:ROA::Collection
~Component	lib/roa/src/interface/component.cpp	/^Component::~Component()$/;"	f	class:ROA::Component
~DCRemovalFilterInstance	thirdparty/soloud/src/filter/soloud_dcremovalfilter.cpp	/^	DCRemovalFilterInstance::~DCRemovalFilterInstance()$/;"	f	class:SoLoud::DCRemovalFilterInstance
~DiskFile	thirdparty/soloud/src/core/soloud_file.cpp	/^	DiskFile::~DiskFile()$/;"	f	class:SoLoud::DiskFile
~EchoFilterInstance	thirdparty/soloud/src/filter/soloud_echofilter.cpp	/^	EchoFilterInstance::~EchoFilterInstance()$/;"	f	class:SoLoud::EchoFilterInstance
~FFTFilterInstance	thirdparty/soloud/src/filter/soloud_fftfilter.cpp	/^	FFTFilterInstance::~FFTFilterInstance()$/;"	f	class:SoLoud::FFTFilterInstance
~File	thirdparty/soloud/include/soloud/soloud_file.h	/^		virtual ~File() {}$/;"	f	class:SoLoud::File
~Filter	thirdparty/soloud/src/core/soloud_filter.cpp	/^	Filter::~Filter()$/;"	f	class:SoLoud::Filter
~FilterInstance	thirdparty/soloud/src/core/soloud_filter.cpp	/^	FilterInstance::~FilterInstance()$/;"	f	class:SoLoud::FilterInstance
~FlangerFilterInstance	thirdparty/soloud/src/filter/soloud_flangerfilter.cpp	/^	FlangerFilterInstance::~FlangerFilterInstance()$/;"	f	class:SoLoud::FlangerFilterInstance
~Generic_data	lib/nil/src/interface/data/common.hpp	/^  ~Generic_data()$/;"	f	struct:Nil::Data::Generic_data
~ImDrawList	thirdparty/imgui/include/imgui/imgui.h	/^    ~ImDrawList() { ClearFreeMemory(); }$/;"	f	struct:ImDrawList
~ImFont	thirdparty/imgui/src/imgui_draw.cpp	/^ImFont::~ImFont()$/;"	f	class:ImFont
~ImFontAtlas	thirdparty/imgui/src/imgui_draw.cpp	/^ImFontAtlas::~ImFontAtlas()$/;"	f	class:ImFontAtlas
~ImGuiListClipper	thirdparty/imgui/include/imgui/imgui.h	/^    ~ImGuiListClipper()                                                 { IM_ASSERT(ItemsCount == -1); }      \/\/ Assert if user forgot to call End() or Step() until false.$/;"	f	struct:ImGuiListClipper
~ImGuiTextFilter	thirdparty/imgui/include/imgui/imgui.h	/^    ~ImGuiTextFilter() {}$/;"	f	struct:ImGuiTextFilter
~ImGuiWindow	thirdparty/imgui/src/imgui.cpp	/^ImGuiWindow::~ImGuiWindow()$/;"	f	class:ImGuiWindow
~ImVector	thirdparty/imgui/include/imgui/imgui.h	/^    ~ImVector()                 { if (Data) ImGui::MemFree(Data); }$/;"	f	class:ImVector
~Light	lib/roa/src/interface/light.cpp	/^Light::~Light()$/;"	f	class:ROA::Light
~LofiFilter	thirdparty/soloud/src/filter/soloud_lofifilter.cpp	/^	LofiFilter::~LofiFilter()$/;"	f	class:SoLoud::LofiFilter
~LofiFilterInstance	thirdparty/soloud/src/filter/soloud_lofifilter.cpp	/^	LofiFilterInstance::~LofiFilterInstance()$/;"	f	class:SoLoud::LofiFilterInstance
~Logic	lib/roa/src/interface/logic.cpp	/^Logic::~Logic()$/;"	f	class:ROA::Logic
~Matcher	thirdparty/catch/include/catch/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Material	lib/roa/src/interface/material.cpp	/^Material::~Material()$/;"	f	class:ROA::Material
~MemoryFile	thirdparty/soloud/src/core/soloud_file.cpp	/^	MemoryFile::~MemoryFile()$/;"	f	class:SoLoud::MemoryFile
~Mesh	lib/roa/src/interface/mesh.cpp	/^Mesh::~Mesh()$/;"	f	class:ROA::Mesh
~MethodTestCase	thirdparty/catch/include/catch/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~Monotone	thirdparty/soloud/src/audiosource/monotone/soloud_monotone.cpp	/^	Monotone::~Monotone()$/;"	f	class:SoLoud::Monotone
~Node	lib/nil/src/interface/node.cpp	/^Node::~Node()$/;"	f	class:Nil::Node
~Object	lib/roa/src/interface/object.cpp	/^Object::~Object()$/;"	f	class:ROA::Object
~Openmpt	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt.cpp	/^	Openmpt::~Openmpt()$/;"	f	class:SoLoud::Openmpt
~OpenmptInstance	thirdparty/soloud/src/audiosource/openmpt/soloud_openmpt.cpp	/^	OpenmptInstance::~OpenmptInstance()$/;"	f	class:SoLoud::OpenmptInstance
~Pool	thirdparty/soloud/src/core/soloud_thread.cpp	/^		Pool::~Pool()$/;"	f	class:SoLoud::Thread::Pool
~Ptr	thirdparty/catch/include/catch/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Renderable	lib/roa/src/interface/renderable.cpp	/^Renderable::~Renderable()$/;"	f	class:ROA::Renderable
~Resource	lib/roa/src/interface/resource.cpp	/^Resource::~Resource()$/;"	f	class:ROA::Resource
~SIDsound	thirdparty/soloud/src/audiosource/tedsid/sid.cpp	/^SIDsound::~SIDsound()$/;"	f	class:SIDsound
~SIDsound	thirdparty/soloud/src/tools/tedsid2dump/sid.cpp	/^SIDsound::~SIDsound()$/;"	f	class:SIDsound
~Sfxr	thirdparty/soloud/src/audiosource/sfxr/soloud_sfxr.cpp	/^	Sfxr::~Sfxr()$/;"	f	class:SoLoud::Sfxr
~Shader	lib/roa/src/interface/shader.cpp	/^Shader::~Shader()$/;"	f	class:ROA::Shader
~Soloud	thirdparty/soloud/src/core/soloud.cpp	/^	Soloud::~Soloud()$/;"	f	class:SoLoud::Soloud
~Speech	thirdparty/soloud/src/audiosource/speech/soloud_speech.cpp	/^	Speech::~Speech()$/;"	f	class:SoLoud::Speech
~SpeechInstance	thirdparty/soloud/src/audiosource/speech/soloud_speech.cpp	/^    SpeechInstance::~SpeechInstance(){$/;"	f	class:SoLoud::SpeechInstance
~TED	thirdparty/soloud/src/tools/tedsid2dump/tedmem.cpp	/^TED::~TED()$/;"	f	class:TED
~TedSid	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	TedSid::~TedSid()$/;"	f	class:SoLoud::TedSid
~TedSidInstance	thirdparty/soloud/src/audiosource/tedsid/soloud_tedsid.cpp	/^	TedSidInstance::~TedSidInstance()$/;"	f	class:SoLoud::TedSidInstance
~Vic	thirdparty/soloud/src/audiosource/vic/soloud_vic.cpp	/^	Vic::~Vic()$/;"	f	class:SoLoud::Vic
~VicInstance	thirdparty/soloud/src/audiosource/vic/soloud_vic.cpp	/^	VicInstance::~VicInstance()$/;"	f	class:SoLoud::VicInstance
~VoiceCallback	thirdparty/soloud/src/backend/xaudio2/soloud_xaudio2.cpp	/^        virtual ~VoiceCallback() {}$/;"	f	class:SoLoud::VoiceCallback
~Wav	thirdparty/soloud/src/audiosource/wav/soloud_wav.cpp	/^	Wav::~Wav()$/;"	f	class:SoLoud::Wav
~WavStream	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	WavStream::~WavStream()$/;"	f	class:SoLoud::WavStream
~WavStreamInstance	thirdparty/soloud/src/audiosource/wav/soloud_wavstream.cpp	/^	WavStreamInstance::~WavStreamInstance()$/;"	f	class:SoLoud::WavStreamInstance
~array	lib/lib/include/lib/array.hpp	/^  ~array()$/;"	f	class:LIB_NS_NAME::array
~darray	thirdparty/soloud/src/audiosource/speech/darray.cpp	/^darray::~darray()$/;"	f	class:darray
~resonator	thirdparty/soloud/src/audiosource/speech/resonator.cpp	/^resonator::~resonator()$/;"	f	class:resonator
~rmt_EndCPUSampleOnScopeExit	thirdparty/remotery/include/remotery/Remotery.h	/^    ~rmt_EndCPUSampleOnScopeExit()$/;"	f	struct:rmt_EndCPUSampleOnScopeExit
~rmt_EndCUDASampleOnScopeExit	thirdparty/remotery/include/remotery/Remotery.h	/^    ~rmt_EndCUDASampleOnScopeExit()$/;"	f	struct:rmt_EndCUDASampleOnScopeExit
~rmt_EndD3D11SampleOnScopeExit	thirdparty/remotery/include/remotery/Remotery.h	/^    ~rmt_EndD3D11SampleOnScopeExit()$/;"	f	struct:rmt_EndD3D11SampleOnScopeExit
~rmt_EndMetalSampleOnScopeExit	thirdparty/remotery/include/remotery/Remotery.h	/^    ~rmt_EndMetalSampleOnScopeExit()$/;"	f	struct:rmt_EndMetalSampleOnScopeExit
~rmt_EndOpenGLSampleOnScopeExit	thirdparty/remotery/include/remotery/Remotery.h	/^    ~rmt_EndOpenGLSampleOnScopeExit()$/;"	f	struct:rmt_EndOpenGLSampleOnScopeExit
